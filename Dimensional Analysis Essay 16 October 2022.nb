(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    820102,      16129]
NotebookOptionsPosition[    699500,      13812]
NotebookOutlinePosition[    812126,      15959]
CellTagsIndexPosition[    811918,      15950]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Title", "Title",
 CellChangeTimes->{{3.8746913986729965`*^9, 3.874691402114029*^9}, {
  3.87476439282938*^9, 3.874764395202193*^9}, {3.8747716299888616`*^9, 
  3.8747716322345295`*^9}, {3.8748192452982364`*^9, 3.87481924898717*^9}, {
  3.8748472768033032`*^9, 3.87484728002593*^9}, {3.8748604093778286`*^9, 
  3.8748604174247093`*^9}, {3.8748716949423*^9, 3.874871701266415*^9}, {
  3.8749048550743437`*^9, 3.874904855732542*^9}, {3.8749299939322042`*^9, 
  3.874930005107766*^9}, {3.874937286295168*^9, 3.8749372969857473`*^9}},
 CellTags->{"Examples", "Your Essay Title"},
 CellID->805710577,ExpressionUUID->"1d92d1b8-f6d7-48ed-8825-cd049ebbaf36"],

Cell[BoxData[
 StyleBox[
  RowBox[{"Peter", " ", "Cullen", " ", "Burbery"}], "Author"]], "Author",
 CellChangeTimes->{{3.8746961443750143`*^9, 3.874696148507888*^9}},
 CellTags->"AuthorName",
 CellID->960727095,ExpressionUUID->"3a631b5a-3636-4c6d-8965-482ae9171f2c"],

Cell["Abstract", "Abstract",
 CellChangeTimes->{{3.874696359497938*^9, 3.8746963684605875`*^9}, {
   3.8747644009473295`*^9, 3.874764404247607*^9}, 3.874868865456685*^9, {
   3.87487170770648*^9, 3.874871728591134*^9}, {3.8749048581741166`*^9, 
   3.874904859798871*^9}},
 CellTags->{"Abstract", "TemplateCell"},
 CellID->587432573,ExpressionUUID->"2ac58def-5955-4744-85c7-434e15df125e"],

Cell[CellGroupData[{

Cell["Unsaved work", "Section",
 CellChangeTimes->{{3.874937593829092*^9, 3.8749375955854077`*^9}},
 CellID->90980663,ExpressionUUID->"f16f8d0c-adce-40f7-994f-46518f8b670b"],

Cell[CellGroupData[{

Cell[TextData[{
 "null space ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", GridBox[{
      {
       RowBox[{"-", "1"}], "0", 
       RowBox[{"-", "2"}], "0", "0"},
      {"0", "1", "1", "0", "0"},
      {"0", 
       RowBox[{"-", "3"}], 
       RowBox[{"-", "1"}], "1", "1"}
     }], ")"}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "9eeabe8e-f022-4693-b0ac-e2a80757e25b"]
}], "WolframAlphaLong",
 CellChangeTimes->{{3.8749365624473925`*^9, 3.874936594986549*^9}},
 CellLabel->"In[288]:=",
 CellID->95994100,ExpressionUUID->"5266987c-afad-4303-a7ff-3016e27b6bf3"],

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryResults",
  DynamicModuleBox[{Typeset`q$$ = 
   "null space ( {\n  {-1, 0, -2, 0, 0},\n  {0, 1, 1, 0, 0},\n  {0, -3, -1, \
1, 1}\n } )", Typeset`opts$$ = {
   AppearanceElements -> {
     "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
      "Sources"}, Asynchronous -> All, 
    TimeConstraint -> {20, Automatic, Automatic, Automatic}, 
    Method -> {
     "Formats" -> {"cell", "minput", "msound", "dataformats"}, "Server" -> 
      "https://api.wolframalpha.com/v1/"}, 
    PodStates -> {"Result__Step-by-step solution"}}, Typeset`elements$$ = {
   "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
    "Sources"}, Typeset`pod1$$ = XMLElement[
   "pod", {"title" -> "Input", "scanner" -> "Identity", "id" -> "Input", 
     "position" -> "100", "error" -> "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "NullSpace[{{-1, 0, -2, 0, 0}, {0, 1, 1, 0, 0}, {0, -3, -1, 1, \
1}}]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             TagBox[
              GridBox[{{
                 PaneBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"null space\"", {
                    LineIndent -> 0, LineSpacing -> {0.9, 0, 1.5}}], 
                    TagBox[
                    TemplateBox[{
                    GridBox[{{
                    RowBox[{"-", "1"}], "0", 
                    RowBox[{"-", "2"}], "0", "0"}, {
                    "0", "1", "1", "0", "0"}, {"0", 
                    RowBox[{"-", "3"}], 
                    RowBox[{"-", "1"}], "1", "1"}}, RowSpacings -> 1, 
                    ColumnSpacings -> 1, RowAlignments -> Baseline, 
                    ColumnAlignments -> Center]}, "Matrix", 
                    DisplayFunction -> (
                    RowBox[{"(", "\[NoBreak]", #, "\[NoBreak]", ")"}]& ), 
                    InterpretationFunction -> (#& )], 
                    Function[BoxForm`e$, 
                    MatrixForm[BoxForm`e$]]]}}, 
                    GridBoxBackground -> {"Columns" -> {
                    GrayLevel[0.949], None}, "Rows" -> {{None}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    ColumnsEqual -> False, RowsEqual -> False, 
                    GridBoxDividers -> {"Columns" -> {
                    GrayLevel[0.84], 
                    GrayLevel[0.84], 
                    GrayLevel[0.84]}, "Rows" -> {{
                    GrayLevel[0.84]}}, 
                    "RowsIndexed" -> {
                    1 -> GrayLevel[0.84], -1 -> GrayLevel[0.84]}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {2, 2, 2}, "Rows" -> {{1}}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, 
                    AllowScriptLevelChange -> False, BaselinePosition -> 1], 
                    $CellContext`TagBoxWrapper["Separator" -> " | "]], 
                   LineSpacing -> {1, 0, 1.5}, LineIndent -> 0], 
                  BaselinePosition -> Center]}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               ColumnsEqual -> False, RowsEqual -> False, 
               GridBoxSpacings -> {"Columns" -> {{
                    AbsoluteThickness[-1]}}, "Rows" -> {{0}}}, 
               AllowScriptLevelChange -> False], 
              $CellContext`TagBoxWrapper["Separator" -> " | "]], 
             PolynomialForm[#, TraditionalOrder -> False]& ], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata,formuladata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}]}], 
   Typeset`pod2$$ = XMLElement[
   "pod", {"title" -> "Results", "scanner" -> "LinearAlgebra", "id" -> 
     "Result", "position" -> "100", "error" -> "false", "numsubpods" -> "2", 
     "primary" -> "true"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            RowBox[{"{", 
              FormBox[
               TemplateBox[{"\"\[VeryThinSpace]\"", 
                 RowBox[{"(", "\[NoBreak]", 
                   TemplateBox[{",", "\",\"", 
                    TagBox[
                    RowBox[{
                    RowBox[{"2", " ", "x"}], "+", 
                    RowBox[{"2", " ", "y"}]}], HoldForm], 
                    TagBox[
                    RowBox[{"x", "+", "y"}], HoldForm], 
                    TagBox[
                    RowBox[{
                    RowBox[{"-", "x"}], "-", "y"}], HoldForm], 
                    TagBox[
                    RowBox[{"2", " ", "x"}], HoldForm], 
                    TagBox[
                    RowBox[{"2", " ", "y"}], HoldForm]}, "RowWithSeparators"],
                    "\[NoBreak]", ")"}], "\"\[VeryThinSpace]\""}, 
                "RowDefault"], TraditionalForm], 
              StyleBox["\"\[ThinSpace]: \"", {
                GrayLevel[0.6], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                LineIndent -> 0}], 
              RowBox[{
                TemplateBox[{",", "\",\"", "x", "y"}, "RowWithSeparators"], 
                "\[Element]", 
                TemplateBox[{}, "Reals"]}], "}"}], TraditionalForm]], 
          "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement["dataformats", {}, {"plaintext"}]}], 
     XMLElement["subpod", {"title" -> "Possible intermediate steps"}, {
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             GridBox[{{
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    TemplateBox[{"\[NoBreak]", "\"\[NoBreak]\"", 
                    
                    TemplateBox[{
                    "\"Find the null space of the matrix \"", "M"}, 
                    "RowDefault"], "\":\""}, "RowWithSeparators"], 
                    GrayLevel[0.3], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, {
                    TagBox[
                    TemplateBox[{
                    TagBox[
                    RowBox[{"M", "\[LongEqual]", 
                    TemplateBox[{
                    GridBox[{{
                    RowBox[{"-", "1"}], "0", 
                    RowBox[{"-", "2"}], "0", "0"}, {
                    "0", "1", "1", "0", "0"}, {"0", 
                    RowBox[{"-", "3"}], 
                    RowBox[{"-", "1"}], "1", "1"}}, RowSpacings -> 1, 
                    ColumnSpacings -> 1, RowAlignments -> Baseline, 
                    ColumnAlignments -> Center]}, "Matrix", 
                    DisplayFunction -> (
                    RowBox[{"(", "\[NoBreak]", #, "\[NoBreak]", ")"}]& ), 
                    InterpretationFunction -> (#& )]}], HoldForm]}, 
                    "RowDefault"], HoldForm]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{None}}, "Rows" -> {{0.5}}}], "Column"]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    TemplateBox[{"\[NoBreak]", "\"\[NoBreak]\"", 
                    
                    TemplateBox[{
                    "\"The \"", "\"null \"", "\"space \"", "\"of \"", 
                    "\"matrix \"", 
                    TemplateBox[{
                    RowBox[{"M", "\[LongEqual]", 
                    TemplateBox[{
                    GridBox[{{
                    RowBox[{"-", "1"}], "0", 
                    RowBox[{"-", "2"}], "0", "0"}, {
                    "0", "1", "1", "0", "0"}, {"0", 
                    RowBox[{"-", "3"}], 
                    RowBox[{"-", "1"}], "1", "1"}}, RowSpacings -> 1, 
                    ColumnSpacings -> 1, RowAlignments -> Baseline, 
                    ColumnAlignments -> Center]}, "Matrix", 
                    DisplayFunction -> (
                    RowBox[{"(", "\[NoBreak]", #, "\[NoBreak]", ")"}]& ), 
                    InterpretationFunction -> (#& )]}], "\" \""}, 
                    "RowDefault"], "\"is \"", "\"the \"", "\"set \"", 
                    "\"of \"", "\"all \"", "\"vectors \"", 
                    TemplateBox[{
                    RowBox[{"v", "\[LongEqual]", 
                    TemplateBox[{
                    GridBox[{{
                    SubscriptBox["x", "1"]}, {
                    SubscriptBox["x", "2"]}, {
                    SubscriptBox["x", "3"]}, {
                    SubscriptBox["x", "4"]}, {
                    SubscriptBox["x", "5"]}}, RowSpacings -> 1, 
                    ColumnSpacings -> 1, RowAlignments -> Baseline, 
                    ColumnAlignments -> Center]}, "Matrix", 
                    DisplayFunction -> (
                    RowBox[{"(", "\[NoBreak]", #, "\[NoBreak]", ")"}]& ), 
                    InterpretationFunction -> (#& )]}], "\" \""}, 
                    "RowDefault"], "\"such \"", "\"that \"", 
                    RowBox[{
                    RowBox[{"M", ".", "v"}], "\[LongEqual]", "0"}]}, 
                    "RowDefault"], "\":\""}, "RowWithSeparators"], 
                    GrayLevel[0.3], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, {
                    TagBox[
                    TemplateBox[{
                    RowBox[{
                    RowBox[{
                    TemplateBox[{
                    GridBox[{{
                    RowBox[{"-", "1"}], "0", 
                    RowBox[{"-", "2"}], "0", "0"}, {
                    "0", "1", "1", "0", "0"}, {"0", 
                    RowBox[{"-", "3"}], 
                    RowBox[{"-", "1"}], "1", "1"}}, RowSpacings -> 1, 
                    ColumnSpacings -> 1, RowAlignments -> Baseline, 
                    ColumnAlignments -> Center]}, "Matrix", 
                    DisplayFunction -> (
                    RowBox[{"(", "\[NoBreak]", #, "\[NoBreak]", ")"}]& ), 
                    InterpretationFunction -> (#& )], ".", 
                    TemplateBox[{
                    GridBox[{{
                    SubscriptBox["x", "1"]}, {
                    SubscriptBox["x", "2"]}, {
                    SubscriptBox["x", "3"]}, {
                    SubscriptBox["x", "4"]}, {
                    SubscriptBox["x", "5"]}}, RowSpacings -> 1, 
                    ColumnSpacings -> 1, RowAlignments -> Baseline, 
                    ColumnAlignments -> Center]}, "Matrix", 
                    DisplayFunction -> (
                    RowBox[{"(", "\[NoBreak]", #, "\[NoBreak]", ")"}]& ), 
                    InterpretationFunction -> (#& )]}], "\[LongEqual]", 
                    TemplateBox[{
                    
                    GridBox[{{"0"}, {"0"}, {"0"}}, RowSpacings -> 1, 
                    ColumnSpacings -> 1, RowAlignments -> Baseline, 
                    ColumnAlignments -> Center]}, "Matrix", 
                    DisplayFunction -> (
                    RowBox[{"(", "\[NoBreak]", #, "\[NoBreak]", ")"}]& ), 
                    InterpretationFunction -> (#& )]}]}, "RowDefault"], 
                    HoldForm]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    TemplateBox[{"\[NoBreak]", "\"\[NoBreak]\"", 
                    TemplateBox[{"\"Reduce \"", "\"the \"", "\"matrix \"", 
                    TemplateBox[{
                    TagBox[
                    TemplateBox[{
                    GridBox[{{
                    RowBox[{"-", "1"}], "0", 
                    RowBox[{"-", "2"}], "0", "0"}, {
                    "0", "1", "1", "0", "0"}, {"0", 
                    RowBox[{"-", "3"}], 
                    RowBox[{"-", "1"}], "1", "1"}}, RowSpacings -> 1, 
                    ColumnSpacings -> 1, RowAlignments -> Baseline, 
                    ColumnAlignments -> Center]}, "Matrix", 
                    DisplayFunction -> (
                    RowBox[{"(", "\[NoBreak]", #, "\[NoBreak]", ")"}]& ), 
                    InterpretationFunction -> (#& )], HoldForm], "\" \""}, 
                    "RowDefault"], "\"to \"", "\"row \"", "\"echelon \"", 
                    "\"form\""}, "RowDefault"], "\":\""}, 
                    "RowWithSeparators"], 
                    GrayLevel[0.3], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, {
                    TagBox[
                    TemplateBox[{
                    TagBox[
                    TemplateBox[{
                    GridBox[{{
                    RowBox[{"-", "1"}], "0", 
                    RowBox[{"-", "2"}], "0", "0"}, {
                    "0", "1", "1", "0", "0"}, {"0", 
                    RowBox[{"-", "3"}], 
                    RowBox[{"-", "1"}], "1", "1"}}, RowSpacings -> 1, 
                    ColumnSpacings -> 1, RowAlignments -> Baseline, 
                    ColumnAlignments -> Center]}, "Matrix", 
                    DisplayFunction -> (
                    RowBox[{"(", "\[NoBreak]", #, "\[NoBreak]", ")"}]& ), 
                    InterpretationFunction -> (#& )], HoldForm]}, 
                    "RowDefault"], HoldForm]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    TemplateBox[{"\[NoBreak]", "\"\[NoBreak]\"", 
                    TemplateBox[{
                    TemplateBox[{"\"Add \"", 
                    TemplateBox[{
                    TagBox["3", HoldForm], "\"\[ThinSpace]\""}, "RowDefault"], 
                    TemplateBox[{
                    StyleBox[
                    "\"\[Times]\"", FontColor -> GrayLevel[0.3], StripOnInput -> 
                    False], "\"\[ThinSpace]\""}, "RowDefault"], "\"(row \"", 
                    TemplateBox[{
                    TagBox["2", HoldForm], "\")\"", "\" \""}, "RowDefault"], 
                    "\"to \"", "\"row \"", 
                    TagBox["3", HoldForm]}, "RowDefault"]}, "RowDefault"], 
                    "\":\""}, "RowWithSeparators"], 
                    GrayLevel[0.3], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, {
                    TagBox[
                    TemplateBox[{
                    TemplateBox[{
                    GridBox[{{
                    RowBox[{"-", "1"}], "0", 
                    RowBox[{"-", "2"}], "0", "0"}, {
                    "0", "1", "1", "0", "0"}, {"0", "0", "2", "1", "1"}}, 
                    RowSpacings -> 1, ColumnSpacings -> 1, RowAlignments -> 
                    Baseline, ColumnAlignments -> Center]}, "Matrix", 
                    DisplayFunction -> (
                    RowBox[{"(", "\[NoBreak]", #, "\[NoBreak]", ")"}]& ), 
                    InterpretationFunction -> (#& )]}, "RowDefault"], 
                    HoldForm]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    TemplateBox[{"\[NoBreak]", "\"\[NoBreak]\"", 
                    TemplateBox[{
                    TemplateBox[{"\"Divide \"", "\"row \"", 
                    TemplateBox[{
                    TagBox["3", HoldForm], "\" \""}, "RowDefault"], "\"by \"", 
                    TagBox["2", HoldForm]}, "RowDefault"]}, "RowDefault"], 
                    "\":\""}, "RowWithSeparators"], 
                    GrayLevel[0.3], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, {
                    TagBox[
                    TemplateBox[{
                    TemplateBox[{
                    GridBox[{{
                    RowBox[{"-", "1"}], "0", 
                    RowBox[{"-", "2"}], "0", "0"}, {
                    "0", "1", "1", "0", "0"}, {"0", "0", "1", 
                    FractionBox["1", "2"], 
                    FractionBox["1", "2"]}}, RowSpacings -> 1, ColumnSpacings -> 
                    1, RowAlignments -> Baseline, ColumnAlignments -> 
                    Center]}, "Matrix", 
                    DisplayFunction -> (
                    RowBox[{"(", "\[NoBreak]", #, "\[NoBreak]", ")"}]& ), 
                    InterpretationFunction -> (#& )]}, "RowDefault"], 
                    HoldForm]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    TemplateBox[{"\[NoBreak]", "\"\[NoBreak]\"", 
                    TemplateBox[{
                    TemplateBox[{"\"Subtract \"", "\"row \"", 
                    TemplateBox[{
                    TagBox["3", HoldForm], "\" \""}, "RowDefault"], 
                    "\"from \"", "\"row \"", 
                    TagBox["2", HoldForm]}, "RowDefault"]}, "RowDefault"], 
                    "\":\""}, "RowWithSeparators"], 
                    GrayLevel[0.3], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, {
                    TagBox[
                    TemplateBox[{
                    TemplateBox[{
                    GridBox[{{
                    RowBox[{"-", "1"}], "0", 
                    RowBox[{"-", "2"}], "0", "0"}, {"0", "1", "0", 
                    RowBox[{"-", 
                    FractionBox["1", "2"]}], 
                    RowBox[{"-", 
                    FractionBox["1", "2"]}]}, {"0", "0", "1", 
                    FractionBox["1", "2"], 
                    FractionBox["1", "2"]}}, RowSpacings -> 1, ColumnSpacings -> 
                    1, RowAlignments -> Baseline, ColumnAlignments -> 
                    Center]}, "Matrix", 
                    DisplayFunction -> (
                    RowBox[{"(", "\[NoBreak]", #, "\[NoBreak]", ")"}]& ), 
                    InterpretationFunction -> (#& )]}, "RowDefault"], 
                    HoldForm]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    TemplateBox[{"\[NoBreak]", "\"\[NoBreak]\"", 
                    TemplateBox[{
                    TemplateBox[{"\"Add \"", 
                    TemplateBox[{
                    TagBox["2", HoldForm], "\"\[ThinSpace]\""}, "RowDefault"], 
                    TemplateBox[{
                    StyleBox[
                    "\"\[Times]\"", FontColor -> GrayLevel[0.3], StripOnInput -> 
                    False], "\"\[ThinSpace]\""}, "RowDefault"], "\"(row \"", 
                    TemplateBox[{
                    TagBox["3", HoldForm], "\")\"", "\" \""}, "RowDefault"], 
                    "\"to \"", "\"row \"", 
                    TagBox["1", HoldForm]}, "RowDefault"]}, "RowDefault"], 
                    "\":\""}, "RowWithSeparators"], 
                    GrayLevel[0.3], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, {
                    TagBox[
                    TemplateBox[{
                    TemplateBox[{
                    GridBox[{{
                    RowBox[{"-", "1"}], "0", "0", "1", "1"}, {"0", "1", "0", 
                    RowBox[{"-", 
                    FractionBox["1", "2"]}], 
                    RowBox[{"-", 
                    FractionBox["1", "2"]}]}, {"0", "0", "1", 
                    FractionBox["1", "2"], 
                    FractionBox["1", "2"]}}, RowSpacings -> 1, ColumnSpacings -> 
                    1, RowAlignments -> Baseline, ColumnAlignments -> 
                    Center]}, "Matrix", 
                    DisplayFunction -> (
                    RowBox[{"(", "\[NoBreak]", #, "\[NoBreak]", ")"}]& ), 
                    InterpretationFunction -> (#& )]}, "RowDefault"], 
                    HoldForm]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    TemplateBox[{"\[NoBreak]", "\"\[NoBreak]\"", 
                    TemplateBox[{
                    TemplateBox[{"\"Multiply \"", "\"row \"", 
                    TemplateBox[{
                    TagBox["1", HoldForm], "\" \""}, "RowDefault"], "\"by \"", 
                    TagBox[
                    RowBox[{"-", "1"}], HoldForm]}, "RowDefault"]}, 
                    "RowDefault"], "\":\""}, "RowWithSeparators"], 
                    GrayLevel[0.3], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, {
                    TagBox[
                    TemplateBox[{
                    TemplateBox[{
                    GridBox[{{"1", "0", "0", 
                    RowBox[{"-", "1"}], 
                    RowBox[{"-", "1"}]}, {"0", "1", "0", 
                    RowBox[{"-", 
                    FractionBox["1", "2"]}], 
                    RowBox[{"-", 
                    FractionBox["1", "2"]}]}, {"0", "0", "1", 
                    FractionBox["1", "2"], 
                    FractionBox["1", "2"]}}, RowSpacings -> 1, ColumnSpacings -> 
                    1, RowAlignments -> Baseline, ColumnAlignments -> 
                    Center]}, "Matrix", 
                    DisplayFunction -> (
                    RowBox[{"(", "\[NoBreak]", #, "\[NoBreak]", ")"}]& ), 
                    InterpretationFunction -> (#& )]}, "RowDefault"], 
                    HoldForm]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    
                    TemplateBox[{
                    "\"Free \"", "\"variables \"", "\"in \"", "\"the \"", 
                    "\"null \"", "\"space \"", 
                    TemplateBox[{
                    TagBox[
                    TemplateBox[{
                    GridBox[{{
                    SubscriptBox["x", "1"]}, {
                    SubscriptBox["x", "2"]}, {
                    SubscriptBox["x", "3"]}, {
                    SubscriptBox["x", "4"]}, {
                    SubscriptBox["x", "5"]}}, RowSpacings -> 1, 
                    ColumnSpacings -> 1, RowAlignments -> Baseline, 
                    ColumnAlignments -> Center]}, "Matrix", 
                    DisplayFunction -> (
                    RowBox[{"(", "\[NoBreak]", #, "\[NoBreak]", ")"}]& ), 
                    InterpretationFunction -> (#& )], HoldForm], "\" \""}, 
                    "RowDefault"], "\"correspond \"", "\"to \"", "\"the \"", 
                    "\"columns \"", "\"in \"", 
                    TemplateBox[{
                    TagBox[
                    TemplateBox[{
                    GridBox[{{"1", "0", "0", 
                    RowBox[{"-", "1"}], 
                    RowBox[{"-", "1"}]}, {"0", "1", "0", 
                    RowBox[{"-", 
                    FractionBox["1", "2"]}], 
                    RowBox[{"-", 
                    FractionBox["1", "2"]}]}, {"0", "0", "1", 
                    FractionBox["1", "2"], 
                    FractionBox["1", "2"]}}, RowSpacings -> 1, ColumnSpacings -> 
                    1, RowAlignments -> Baseline, ColumnAlignments -> 
                    Center]}, "Matrix", 
                    DisplayFunction -> (
                    RowBox[{"(", "\[NoBreak]", #, "\[NoBreak]", ")"}]& ), 
                    InterpretationFunction -> (#& )], HoldForm], "\" \""}, 
                    "RowDefault"], "\"which \"", "\"have \"", "\"no \"", 
                    "\"pivot.\""}, "RowDefault"], 
                    GrayLevel[0.3], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, {
                    TagBox[
                    TemplateBox[{
                    TemplateBox[{"\"Columns \"", 
                    TemplateBox[{
                    TemplateBox[{"4", "\" \""}, "RowDefault"], "\"and \"", 
                    "5", "\" \""}, "RowDefault"], "\"are \"", "\"the \"", 
                    "\"only \"", "\"columns \"", "\"with \"", "\"no \"", 
                    "\"pivot, \"", "\"so \"", "\"we \"", "\"may \"", 
                    "\"take \"", 
                    TemplateBox[{
                    TemplateBox[{
                    SubscriptBox["x", "4"], "\" \""}, "RowDefault"], 
                    "\"and \"", 
                    SubscriptBox["x", "5"], "\" \""}, "RowDefault"], 
                    "\"to \"", "\"be \"", "\"the \"", "\"only \"", 
                    "\"free \"", "\"variables\""}, "RowDefault"]}, 
                    "RowDefault"], HoldForm]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    TemplateBox[{"\[NoBreak]", "\"\[NoBreak]\"", 
                    
                    TemplateBox[{
                    "\"Multiply \"", "\"out \"", "\"the \"", "\"reduced \"", 
                    "\"matrix \"", 
                    TemplateBox[{
                    TagBox[
                    TemplateBox[{
                    GridBox[{{"1", "0", "0", 
                    RowBox[{"-", "1"}], 
                    RowBox[{"-", "1"}]}, {"0", "1", "0", 
                    RowBox[{"-", 
                    FractionBox["1", "2"]}], 
                    RowBox[{"-", 
                    FractionBox["1", "2"]}]}, {"0", "0", "1", 
                    FractionBox["1", "2"], 
                    FractionBox["1", "2"]}}, RowSpacings -> 1, ColumnSpacings -> 
                    1, RowAlignments -> Baseline, ColumnAlignments -> 
                    Center]}, "Matrix", 
                    DisplayFunction -> (
                    RowBox[{"(", "\[NoBreak]", #, "\[NoBreak]", ")"}]& ), 
                    InterpretationFunction -> (#& )], HoldForm], "\" \""}, 
                    "RowDefault"], "\"with \"", "\"the \"", "\"proposed \"", 
                    "\"solution \"", "\"vector \"", 
                    TagBox[
                    TemplateBox[{
                    GridBox[{{
                    SubscriptBox["x", "1"]}, {
                    SubscriptBox["x", "2"]}, {
                    SubscriptBox["x", "3"]}, {
                    SubscriptBox["x", "4"]}, {
                    SubscriptBox["x", "5"]}}, RowSpacings -> 1, 
                    ColumnSpacings -> 1, RowAlignments -> Baseline, 
                    ColumnAlignments -> Center]}, "Matrix", 
                    DisplayFunction -> (
                    RowBox[{"(", "\[NoBreak]", #, "\[NoBreak]", ")"}]& ), 
                    InterpretationFunction -> (#& )], HoldForm]}, 
                    "RowDefault"], "\":\""}, "RowWithSeparators"], 
                    GrayLevel[0.3], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, {
                    TagBox[
                    TemplateBox[{
                    TagBox[
                    TemplateBox[{"\[LongEqual]", "\"\[LongEqual]\"", 
                    RowBox[{
                    TemplateBox[{
                    GridBox[{{"1", "0", "0", 
                    RowBox[{"-", "1"}], 
                    RowBox[{"-", "1"}]}, {"0", "1", "0", 
                    RowBox[{"-", 
                    FractionBox["1", "2"]}], 
                    RowBox[{"-", 
                    FractionBox["1", "2"]}]}, {"0", "0", "1", 
                    FractionBox["1", "2"], 
                    FractionBox["1", "2"]}}, RowSpacings -> 1, ColumnSpacings -> 
                    1, RowAlignments -> Baseline, ColumnAlignments -> 
                    Center]}, "Matrix", 
                    DisplayFunction -> (
                    RowBox[{"(", "\[NoBreak]", #, "\[NoBreak]", ")"}]& ), 
                    InterpretationFunction -> (#& )], ".", 
                    TemplateBox[{
                    GridBox[{{
                    SubscriptBox["x", "1"]}, {
                    SubscriptBox["x", "2"]}, {
                    SubscriptBox["x", "3"]}, {
                    SubscriptBox["x", "4"]}, {
                    SubscriptBox["x", "5"]}}, RowSpacings -> 1, 
                    ColumnSpacings -> 1, RowAlignments -> Baseline, 
                    ColumnAlignments -> Center]}, "Matrix", 
                    DisplayFunction -> (
                    RowBox[{"(", "\[NoBreak]", #, "\[NoBreak]", ")"}]& ), 
                    InterpretationFunction -> (#& )]}], 
                    TemplateBox[{
                    GridBox[{{
                    TagBox[
                    RowBox[{
                    SubscriptBox["x", "1"], "-", 
                    SubscriptBox["x", "4"], "-", 
                    SubscriptBox["x", "5"]}], HoldForm]}, {
                    TagBox[
                    RowBox[{
                    SubscriptBox["x", "2"], "-", 
                    FractionBox[
                    SubscriptBox["x", "4"], "2"], "-", 
                    FractionBox[
                    SubscriptBox["x", "5"], "2"]}], HoldForm]}, {
                    TagBox[
                    RowBox[{
                    SubscriptBox["x", "3"], "+", 
                    FractionBox[
                    SubscriptBox["x", "4"], "2"], "+", 
                    FractionBox[
                    SubscriptBox["x", "5"], "2"]}], HoldForm]}}, RowSpacings -> 
                    1, ColumnSpacings -> 1, RowAlignments -> Baseline, 
                    ColumnAlignments -> Center]}, "Matrix", 
                    DisplayFunction -> (
                    RowBox[{"(", "\[NoBreak]", #, "\[NoBreak]", ")"}]& ), 
                    InterpretationFunction -> (#& )], 
                    TemplateBox[{
                    
                    GridBox[{{"0"}, {"0"}, {"0"}}, RowSpacings -> 1, 
                    ColumnSpacings -> 1, RowAlignments -> Baseline, 
                    ColumnAlignments -> Center]}, "Matrix", 
                    DisplayFunction -> (
                    RowBox[{"(", "\[NoBreak]", #, "\[NoBreak]", ")"}]& ), 
                    InterpretationFunction -> (#& )]}, "RowWithSeparators"], 
                    HoldForm]}, "RowDefault"], HoldForm]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    TemplateBox[{"\[NoBreak]", "\"\[NoBreak]\"", 
                    TemplateBox[{"\"Solve \"", "\"the \"", "\"equations \"", 
                    TemplateBox[{
                    RowBox[{
                    StyleBox["{", SpanMaxSize -> DirectedInfinity[1]], 
                    TagBox[
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    RowBox[{
                    SubscriptBox["x", "1"], "-", 
                    SubscriptBox["x", "4"], "-", 
                    SubscriptBox["x", "5"]}], HoldForm], "\[LongEqual]", 
                    "0"}]}, {
                    RowBox[{
                    TagBox[
                    RowBox[{
                    SubscriptBox["x", "2"], "-", 
                    FractionBox[
                    SubscriptBox["x", "4"], "2"], "-", 
                    FractionBox[
                    SubscriptBox["x", "5"], "2"]}], HoldForm], "\[LongEqual]",
                     "0"}]}, {
                    RowBox[{
                    TagBox[
                    RowBox[{
                    SubscriptBox["x", "3"], "+", 
                    FractionBox[
                    SubscriptBox["x", "4"], "2"], "+", 
                    FractionBox[
                    SubscriptBox["x", "5"], "2"]}], HoldForm], "\[LongEqual]",
                     "0"}]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]}], "\" \"", "\" \""}, "RowDefault"], "\"for \"", 
                    TemplateBox[{
                    TemplateBox[{
                    TemplateBox[{",", "\",\"", 
                    SubscriptBox["x", "1"], 
                    SubscriptBox["x", "2"]}, "RowWithSeparators"], "\" \""}, 
                    "RowDefault"], "\"and \"", 
                    SubscriptBox["x", "3"]}, "RowDefault"]}, "RowDefault"], 
                    "\":\""}, "RowWithSeparators"], 
                    GrayLevel[0.3], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, {
                    TagBox[
                    TemplateBox[{
                    RowBox[{
                    StyleBox["{", SpanMaxSize -> DirectedInfinity[1]], 
                    TagBox[
                    GridBox[{{
                    RowBox[{
                    SubscriptBox["x", "1"], "\[LongEqual]", 
                    TagBox[
                    RowBox[{
                    SubscriptBox["x", "4"], "+", 
                    SubscriptBox["x", "5"]}], HoldForm]}]}, {
                    RowBox[{
                    SubscriptBox["x", "2"], "\[LongEqual]", 
                    TagBox[
                    RowBox[{
                    FractionBox[
                    SubscriptBox["x", "4"], "2"], "+", 
                    FractionBox[
                    SubscriptBox["x", "5"], "2"]}], HoldForm]}]}, {
                    RowBox[{
                    SubscriptBox["x", "3"], "\[LongEqual]", 
                    TagBox[
                    RowBox[{
                    RowBox[{"-", 
                    FractionBox[
                    SubscriptBox["x", "4"], "2"]}], "-", 
                    FractionBox[
                    SubscriptBox["x", "5"], "2"]}], HoldForm]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]}]}, "RowDefault"], HoldForm]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    TemplateBox[{"\[NoBreak]", "\"\[NoBreak]\"", 
                    TemplateBox[{"\"Rewrite \"", 
                    TemplateBox[{"v", "\" \""}, "RowDefault"], "\"in \"", 
                    "\"terms \"", "\"of \"", "\"the \"", "\"free \"", 
                    "\"variables \"", 
                    TemplateBox[{
                    TemplateBox[{
                    SubscriptBox["x", "4"], "\" \""}, "RowDefault"], 
                    "\"and \"", 
                    SubscriptBox["x", "5"], "\",\"", "\" \""}, "RowDefault"], 
                    "\"and \"", "\"assign \"", "\"arbitrary \"", "\"real \"", 
                    "\"values \"", "\"of \"", 
                    TemplateBox[{
                    TemplateBox[{"x", "\" \""}, "RowDefault"], "\"and \"", 
                    "y", "\" \""}, "RowDefault"], "\"to \"", "\"the \"", 
                    "\"variables\""}, "RowDefault"], "\":\""}, 
                    "RowWithSeparators"], 
                    GrayLevel[0.3], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, {
                    TagBox[
                    TemplateBox[{
                    TagBox[
                    TemplateBox[{
                    TemplateBox[{
                    RowBox[{"v", "\[LongEqual]", 
                    TemplateBox[{
                    GridBox[{{
                    SubscriptBox["x", "1"]}, {
                    SubscriptBox["x", "2"]}, {
                    SubscriptBox["x", "3"]}, {
                    SubscriptBox["x", "4"]}, {
                    SubscriptBox["x", "5"]}}, RowSpacings -> 1, 
                    ColumnSpacings -> 1, RowAlignments -> Baseline, 
                    ColumnAlignments -> Center]}, "Matrix", 
                    DisplayFunction -> (
                    RowBox[{"(", "\[NoBreak]", #, "\[NoBreak]", ")"}]& ), 
                    InterpretationFunction -> (#& )], "\[LongEqual]", 
                    TemplateBox[{
                    GridBox[{{
                    TagBox[
                    RowBox[{
                    SubscriptBox["x", "4"], "+", 
                    SubscriptBox["x", "5"]}], HoldForm]}, {
                    TagBox[
                    RowBox[{
                    FractionBox[
                    SubscriptBox["x", "4"], "2"], "+", 
                    FractionBox[
                    SubscriptBox["x", "5"], "2"]}], HoldForm]}, {
                    TagBox[
                    RowBox[{
                    RowBox[{"-", 
                    FractionBox[
                    SubscriptBox["x", "4"], "2"]}], "-", 
                    FractionBox[
                    SubscriptBox["x", "5"], "2"]}], HoldForm]}, {
                    SubscriptBox["x", "4"]}, {
                    SubscriptBox["x", "5"]}}, RowSpacings -> 1, 
                    ColumnSpacings -> 1, RowAlignments -> Baseline, 
                    ColumnAlignments -> Center]}, "Matrix", 
                    DisplayFunction -> (
                    RowBox[{"(", "\[NoBreak]", #, "\[NoBreak]", ")"}]& ), 
                    InterpretationFunction -> (#& )], "\[LongEqual]", 
                    TemplateBox[{
                    GridBox[{{
                    TagBox[
                    RowBox[{"y", "+", "x"}], HoldForm]}, {
                    TagBox[
                    RowBox[{
                    FractionBox["y", "2"], "+", 
                    FractionBox["x", "2"]}], HoldForm]}, {
                    TagBox[
                    RowBox[{
                    RowBox[{"-", 
                    FractionBox["y", "2"]}], "-", 
                    FractionBox["x", "2"]}], HoldForm]}, {"x"}, {"y"}}, 
                    RowSpacings -> 1, ColumnSpacings -> 1, RowAlignments -> 
                    Baseline, ColumnAlignments -> Center]}, "Matrix", 
                    DisplayFunction -> (
                    RowBox[{"(", "\[NoBreak]", #, "\[NoBreak]", ")"}]& ), 
                    InterpretationFunction -> (#& )]}], 
                    StyleBox["\" for \"", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    RowBox[{
                    
                    TemplateBox[{",", "\",\"", "x", "y"}, 
                    "RowWithSeparators"], "\[Element]", 
                    TemplateBox[{}, "Reals"]}]}, "RowDefault"]}, 
                    "RowDefault"], HoldForm]}, "RowDefault"], HoldForm]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    TemplateBox[{"\[NoBreak]", "\"\[NoBreak]\"", 
                    TemplateBox[{"\"Since \"", "\"the \"", "\"variables \"", 
                    TemplateBox[{
                    TemplateBox[{"x", "\" \""}, "RowDefault"], "\"and \"", 
                    "y", "\" \""}, "RowDefault"], "\"are \"", "\"taken \"", 
                    "\"from \"", 
                    TemplateBox[{
                    TemplateBox[{}, "Reals"], "\",\"", "\" \""}, 
                    "RowDefault"], "\"we \"", "\"can \"", "\"replace \"", 
                    "\"them \"", "\"with \"", 
                    TemplateBox[{
                    TemplateBox[{
                    RowBox[{"2", " ", "x"}], "\" \""}, "RowDefault"], 
                    "\"and \"", 
                    RowBox[{"2", " ", "y"}], "\" \""}, "RowDefault"], 
                    "\"respectively\""}, "RowDefault"], "\":\""}, 
                    "RowWithSeparators"], 
                    GrayLevel[0.3], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, {
                    TagBox[
                    TemplateBox[{
                    TagBox[
                    TemplateBox[{
                    TemplateBox[{
                    TemplateBox[{
                    TemplateBox[{
                    GridBox[{{
                    TagBox[
                    RowBox[{"y", "+", "x"}], HoldForm]}, {
                    TagBox[
                    RowBox[{
                    FractionBox["y", "2"], "+", 
                    FractionBox["x", "2"]}], HoldForm]}, {
                    TagBox[
                    RowBox[{
                    RowBox[{"-", 
                    FractionBox["y", "2"]}], "-", 
                    FractionBox["x", "2"]}], HoldForm]}, {"x"}, {"y"}}, 
                    RowSpacings -> 1, ColumnSpacings -> 1, RowAlignments -> 
                    Baseline, ColumnAlignments -> Center]}, "Matrix", 
                    DisplayFunction -> (
                    RowBox[{"(", "\[NoBreak]", #, "\[NoBreak]", ")"}]& ), 
                    InterpretationFunction -> (#& )], "\"\[ThinSpace]\""}, 
                    "RowDefault"], "\"\[RightArrow]\[ThinSpace]\"", 
                    TemplateBox[{"\[LongEqual]", "\"\[LongEqual]\"", 
                    TagBox[
                    TemplateBox[{
                    GridBox[{{
                    TagBox[
                    RowBox[{
                    RowBox[{"2", " ", "y"}], "+", 
                    RowBox[{"2", " ", "x"}]}], HoldForm]}, {
                    TagBox[
                    RowBox[{
                    FractionBox[
                    RowBox[{"2", " ", "y"}], "2"], "+", 
                    FractionBox[
                    RowBox[{"2", " ", "x"}], "2"]}], HoldForm]}, {
                    TagBox[
                    RowBox[{
                    RowBox[{"-", 
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{"2", " ", "y"}], ")"}]}], "-", 
                    FractionBox[
                    RowBox[{"2", " ", "x"}], "2"]}], HoldForm]}, {
                    RowBox[{
                    TagBox["2", HoldForm], " ", 
                    TagBox["x", HoldForm]}]}, {
                    RowBox[{
                    TagBox["2", HoldForm], " ", 
                    TagBox["y", HoldForm]}]}}, RowSpacings -> 1, 
                    ColumnSpacings -> 1, RowAlignments -> Baseline, 
                    ColumnAlignments -> Center]}, "Matrix", 
                    DisplayFunction -> (
                    RowBox[{"(", "\[NoBreak]", #, "\[NoBreak]", ")"}]& ), 
                    InterpretationFunction -> (#& )], HoldForm], 
                    TemplateBox[{
                    GridBox[{{
                    TagBox[
                    RowBox[{
                    RowBox[{"2", " ", "y"}], "+", 
                    RowBox[{"2", " ", "x"}]}], HoldForm]}, {
                    TagBox[
                    RowBox[{"y", "+", "x"}], HoldForm]}, {
                    TagBox[
                    RowBox[{
                    RowBox[{"-", "y"}], "-", "x"}], HoldForm]}, {
                    RowBox[{"2", " ", "x"}]}, {
                    RowBox[{"2", " ", "y"}]}}, RowSpacings -> 1, 
                    ColumnSpacings -> 1, RowAlignments -> Baseline, 
                    ColumnAlignments -> Center]}, "Matrix", 
                    DisplayFunction -> (
                    RowBox[{"(", "\[NoBreak]", #, "\[NoBreak]", ")"}]& ), 
                    InterpretationFunction -> (#& )]}, "RowWithSeparators"], 
                    StyleBox["\" for \"", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    RowBox[{
                    
                    TemplateBox[{",", "\",\"", "x", "y"}, 
                    "RowWithSeparators"], "\[Element]", 
                    TemplateBox[{}, "Reals"]}]}, "RowDefault"]}, 
                    "RowDefault"], HoldForm]}, "RowDefault"], HoldForm]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    TemplateBox[{"\[NoBreak]", "\"\[NoBreak]\"", 
                    
                    TemplateBox[{
                    "\"Rewrite \"", "\"the \"", "\"solution \"", 
                    "\"vector \"", 
                    TemplateBox[{
                    RowBox[{"v", "\[LongEqual]", 
                    TemplateBox[{
                    GridBox[{{
                    TagBox[
                    RowBox[{
                    RowBox[{"2", " ", "y"}], "+", 
                    RowBox[{"2", " ", "x"}]}], HoldForm]}, {
                    TagBox[
                    RowBox[{"y", "+", "x"}], HoldForm]}, {
                    TagBox[
                    RowBox[{
                    RowBox[{"-", "y"}], "-", "x"}], HoldForm]}, {
                    RowBox[{"2", " ", "x"}]}, {
                    RowBox[{"2", " ", "y"}]}}, RowSpacings -> 1, 
                    ColumnSpacings -> 1, RowAlignments -> Baseline, 
                    ColumnAlignments -> Center]}, "Matrix", 
                    DisplayFunction -> (
                    RowBox[{"(", "\[NoBreak]", #, "\[NoBreak]", ")"}]& ), 
                    InterpretationFunction -> (#& )]}], "\" \""}, 
                    "RowDefault"], "\"in \"", "\"set \"", "\"notation\""}, 
                    "RowDefault"], "\":\""}, "RowWithSeparators"], 
                    GrayLevel[0.3], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, {
                    FrameBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    TemplateBox[{"\"Answer:\""}, "RowDefault"], FontFamily -> 
                    "Roboto", FontSize -> 12, StripOnInput -> False], 
                    "\[SpanFromLeft]"}, {"\"\"", 
                    TagBox[
                    TemplateBox[{
                    TemplateBox[{
                    TemplateBox[{"\"{\"", 
                    FormBox[
                    TemplateBox[{"\"\[VeryThinSpace]\"", 
                    TemplateBox[{
                    RowBox[{"(", "\[NoBreak]", 
                    TemplateBox[{",", "\",\"", 
                    TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{"2", " ", "y"}], "+", 
                    RowBox[{"2", " ", "x"}]}], HoldForm], HoldForm], 
                    TagBox[
                    TagBox[
                    RowBox[{"y", "+", "x"}], HoldForm], HoldForm], 
                    TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{"-", "y"}], "-", "x"}], HoldForm], HoldForm], 
                    TagBox[
                    RowBox[{"2", " ", "x"}], HoldForm], 
                    TagBox[
                    RowBox[{"2", " ", "y"}], HoldForm]}, "RowWithSeparators"],
                     "\[NoBreak]", ")"}], "\"\[VeryThinSpace]\""}, 
                    "RowDefault"]}, "RowDefault"], TraditionalForm], 
                    StyleBox["\"\[ThinSpace]: \"", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    RowBox[{
                    
                    TemplateBox[{",", "\",\"", "x", "y"}, 
                    "RowWithSeparators"], "\[Element]", 
                    TemplateBox[{}, "Reals"]}], "\"}\""}, "RowDefault"]}, 
                    "RowDefault"]}, "RowDefault"], HoldForm]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {2.5, Automatic}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {2, 0, 3}, "Rows" -> {1.5, 1, 2}}, 
                    AllowScriptLevelChange -> False], "Grid"], FrameStyle -> {
                    AbsoluteThickness[1], 
                    RGBColor[0.52, 0.76, 0.86]}, Background -> 
                    RGBColor[0.91, 0.98, 1], RoundingRadius -> 3, 
                    FrameMargins -> 12, StripOnInput -> False]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
              AllowScriptLevelChange -> False, DefaultBaseStyle -> "Column", 
              GridBoxDividers -> {
               "Columns" -> {{False}}, "Rows" -> {False, {True}, False}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{3}}}, FrameStyle -> 
              GrayLevel[0.7]], "Column"], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement["dataformats", {}, {"plaintext"}], 
       XMLElement["infos", {"count" -> "1"}, {
         XMLElement["info", {"text" -> "R is the set of real numbers"}, {
           XMLElement[
           "link", {
            "url" -> "http://reference.wolfram.com/language/ref/Reals.html", 
             "text" -> "Documentation", "title" -> "Documentation"}, {}], 
           XMLElement[
           "link", {
            "url" -> "http://mathworld.wolfram.com/R.html", "text" -> 
             "Definition", "title" -> "MathWorld"}, {}]}]}]}], 
     XMLElement["expressiontypes", {"count" -> "2"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {
        "name" -> "Hide steps", "input" -> "Result__Hide steps"}, {}]}]}], 
   Typeset`pod3$$ = XMLElement[
   "pod", {"title" -> "Null space properties", "scanner" -> "LinearAlgebra", 
     "id" -> "Properties", "position" -> "300", "error" -> "false", 
     "numsubpods" -> "4"}, {
     XMLElement["subpod", {"title" -> "Basis"}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             RowBox[{
               FormBox[
                TemplateBox[{"\"\[VeryThinSpace]\"", 
                  RowBox[{"(", "\[NoBreak]", 
                    TemplateBox[{",", "\",\"", 
                    TagBox["2", HoldForm], 
                    TagBox["1", HoldForm], 
                    TagBox[
                    RowBox[{"-", "1"}], HoldForm], 
                    TagBox["2", HoldForm], 
                    TagBox["0", HoldForm]}, "RowWithSeparators"], 
                    "\[NoBreak]", ")"}], "\"\[VeryThinSpace]\""}, 
                 "RowDefault"], TraditionalForm], 
               StyleBox[
                RowBox[{"\[NoBreak]", 
                  PaneBox[
                  "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                   GrayLevel[0.6]]}], AutoSpacing -> True], 
               FormBox[
                TemplateBox[{"\"\[VeryThinSpace]\"", 
                  RowBox[{"(", "\[NoBreak]", 
                    TemplateBox[{",", "\",\"", 
                    TagBox["2", HoldForm], 
                    TagBox["1", HoldForm], 
                    TagBox[
                    RowBox[{"-", "1"}], HoldForm], 
                    TagBox["0", HoldForm], 
                    TagBox["2", HoldForm]}, "RowWithSeparators"], 
                    "\[NoBreak]", ")"}], "\"\[VeryThinSpace]\""}, 
                 "RowDefault"], TraditionalForm]}], 
             LinebreakAdjustments -> {1, 10, 0, 0, 100}, LineIndent -> 0], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,numberdata"}]}], 
     XMLElement["subpod", {"title" -> "Orthonormal basis"}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             RowBox[{
               FormBox[
                TemplateBox[{"\"\[VeryThinSpace]\"", 
                  RowBox[{"(", "\[NoBreak]", 
                    TemplateBox[{",", "\",\"", 
                    TagBox["0.31622776601683794`", HoldForm], 
                    TagBox["0.15811388300841897`", HoldForm], 
                    TagBox[
                    RowBox[{"-", "0.15811388300841897`"}], HoldForm], 
                    TagBox["0.7905694150420949`", HoldForm], 
                    TagBox[
                    RowBox[{"-", "0.4743416490252569`"}], HoldForm]}, 
                    "RowWithSeparators"], "\[NoBreak]", ")"}], 
                  "\"\[VeryThinSpace]\""}, "RowDefault"], TraditionalForm], 
               StyleBox[
                RowBox[{"\[NoBreak]", 
                  PaneBox[
                  "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                   GrayLevel[0.6]]}], AutoSpacing -> True], 
               FormBox[
                TemplateBox[{"\"\[VeryThinSpace]\"", 
                  RowBox[{"(", "\[NoBreak]", 
                    TemplateBox[{",", "\",\"", 
                    TagBox["0.6324555320336759`", HoldForm], 
                    TagBox["0.31622776601683794`", HoldForm], 
                    TagBox[
                    RowBox[{"-", "0.31622776601683794`"}], HoldForm], 
                    TagBox["0", HoldForm], 
                    TagBox["0.6324555320336759`", HoldForm]}, 
                    "RowWithSeparators"], "\[NoBreak]", ")"}], 
                  "\"\[VeryThinSpace]\""}, "RowDefault"], TraditionalForm]}], 
             LinebreakAdjustments -> {1, 10, 0, 0, 100}, LineIndent -> 0], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,numberdata"}]}], 
     XMLElement["subpod", {"title" -> "Dimension"}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox["2", TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,numberdata"}]}], 
     XMLElement["subpod", {"title" -> "Codimension"}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox["3", TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,numberdata"}]}], 
     XMLElement["expressiontypes", {"count" -> "4"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Grid"}, {}], "\n   ", 
       XMLElement["expressiontype", {"name" -> "Grid"}, {}], "\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {
        "name" -> "Exact form", "input" -> "Properties__Exact form"}, {}]}]}],
    Typeset`pod4$$ = XMLElement[
   "pod", {"title" -> "Row-reduced matrix", "scanner" -> "LinearAlgebra", 
     "id" -> "RowEchelonForm", "position" -> "500", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             TemplateBox[{
               GridBox[{{"1", "0", "0", 
                  RowBox[{"-", "1"}], 
                  RowBox[{"-", "1"}]}, {"0", "1", "0", 
                  RowBox[{"-", 
                    FractionBox["1", "2"]}], 
                  RowBox[{"-", 
                    FractionBox["1", "2"]}]}, {"0", "0", "1", 
                  FractionBox["1", "2"], 
                  FractionBox["1", "2"]}}, RowSpacings -> 1, ColumnSpacings -> 
                1, RowAlignments -> Baseline, ColumnAlignments -> Center]}, 
              "Matrix", 
              DisplayFunction -> (
               RowBox[{"(", "\[NoBreak]", #, "\[NoBreak]", ")"}]& ), 
              InterpretationFunction -> (#& )], Identity], TraditionalForm]], 
          "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,formuladata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}]}], 
   Typeset`aux1$$ = {True, False, {False}, True}, Typeset`aux2$$ = {
   True, False, {False, False}, True}, Typeset`aux3$$ = {
   True, False, {False, False, False, False}, True}, Typeset`aux4$$ = {
   True, False, {False}, True}, Typeset`asyncpods$$ = {}, 
   Typeset`nonpods$$ = {}, Typeset`initdone$$ = 
   FrontEnd`SuppressEvaluationHash[True], Typeset`queryinfo$$ = {
   "success" -> "true", "error" -> 
    "false", {"http://www.w3.org/XML/1998/namespace", "space"} -> "preserve", 
    "numpods" -> "4", "datatypes" -> "", "timedout" -> "", "timedoutpods" -> 
    "", "timing" -> "1.3780000000000001", "parsetiming" -> "0.834", 
    "parsetimedout" -> "false", "recalculate" -> "", "id" -> 
    "MSP9341c7ab1f473fg42hf000028b3d26320605i7g", "host" -> 
    "https://www6b3.wolframalpha.com", "server" -> "7", "related" -> 
    "https://www6b3.wolframalpha.com/api/v1/relatedQueries.jsp?id=\
MSPa9351c7ab1f473fg42hf000019cch12bdce424466249686130609588165", "version" -> 
    "2.6", "inputstring" -> 
    "null space ( {   {-1, 0, -2, 0, 0},   {0, 1, 1, 0, 0},   {0, -3, -1, 1, \
1}  } )"}, Typeset`sessioninfo$$ = {
   "TimeZone" -> -4., 
    "Date" -> {2022, 10, 16, 15, 16, 39.4098089`9.348179211742824}, "Line" -> 
    288, "SessionID" -> 19497819732222957638}, Typeset`showpods$$ = {1, 2, 3, 
   4}, Typeset`failedpods$$ = {}, Typeset`chosen$$ = {}, Typeset`open$$ = 
   False, Typeset`newq$$ = 
   "null space ( {\n  {-1, 0, -2, 0, 0},\n  {0, 1, 1, 0, 0},\n  {0, -3, -1, \
1, 1}\n } )"}, 
   DynamicBox[ToBoxes[
     AlphaIntegration`FormatAlphaResults[
      Dynamic[{
       1, {Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$}, {
        Typeset`aux1$$, Typeset`aux2$$, Typeset`aux3$$, Typeset`aux4$$}, 
        Typeset`chosen$$, Typeset`open$$, Typeset`elements$$, Typeset`q$$, 
        Typeset`opts$$, Typeset`nonpods$$, Typeset`queryinfo$$, 
        Typeset`sessioninfo$$, Typeset`showpods$$, Typeset`failedpods$$, 
        Typeset`newq$$}]], StandardForm],
    ImageSizeCache->{1074., {1341.3544921875, 1346.6455078125}},
    TrackedSymbols:>{Typeset`showpods$$, Typeset`failedpods$$}],
   DynamicModuleValues:>{},
   Initialization:>If[
     And[
      Not[Typeset`initdone$$ === True], 
      Not[Typeset`initdone$$ === FrontEnd`SuppressEvaluationHash[True]]], 
     Null; WolframAlphaClient`Private`doAsyncUpdates[
       Hold[{Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$}],
        Typeset`asyncpods$$, 
       Dynamic[Typeset`failedpods$$]]; Typeset`asyncpods$$ = {}; 
     Typeset`initdone$$ = FrontEnd`SuppressEvaluationHash[True]],
   SynchronousInitialization->False],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "Print", "WolframAlphaFullOutput",
 CellChangeTimes->{3.874936599440816*^9},
 CellID->2442385,ExpressionUUID->"5a653667-6628-4343-8213-01eccf28f4a6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NullSpace", "[", 
  FormBox[
   RowBox[{"(", GridBox[{
      {
       RowBox[{"-", "1"}], "0", 
       RowBox[{"-", "2"}], "0", "0"},
      {"0", "1", "1", "0", "0"},
      {"0", 
       RowBox[{"-", "3"}], 
       RowBox[{"-", "1"}], "1", "1"}
     }], ")"}],
   TraditionalForm], "]"}]], "Input",
 CellChangeTimes->{{3.8749368312091866`*^9, 3.8749368414186144`*^9}},
 CellLabel->"In[289]:=",
 CellID->488249806,ExpressionUUID->"6e00357b-6361-4ed7-b313-a32cc71f8ec3"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"2", ",", "1", ",", 
     RowBox[{"-", "1"}], ",", "0", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "1", ",", 
     RowBox[{"-", "1"}], ",", "2", ",", "0"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.8749368420250683`*^9},
 CellLabel->"Out[289]=",
 CellID->102998469,ExpressionUUID->"141074e7-6d60-4be5-a365-53b22fe1359c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"NullSpace", "[", 
    FormBox[
     RowBox[{"(", GridBox[{
        {
         RowBox[{"-", "1"}], "0", 
         RowBox[{"-", "2"}], "0", "0"},
        {"0", "1", "1", "0", "0"},
        {"0", 
         RowBox[{"-", "3"}], 
         RowBox[{"-", "1"}], "1", "1"}
       }], ")"}],
     TraditionalForm], "]"}], "//", "Transpose"}], "//", 
  "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.8749368312091866`*^9, 3.8749368584100833`*^9}},
 CellLabel->"In[291]:=",
 CellID->105960481,ExpressionUUID->"e41bd07d-9ca6-4a7a-afd0-ad03edefbc38"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"2", "2"},
     {"1", "1"},
     {
      RowBox[{"-", "1"}], 
      RowBox[{"-", "1"}]},
     {"0", "2"},
     {"2", "0"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.874936851296503*^9, 3.874936858623828*^9}},
 CellLabel->"Out[291]//MatrixForm=",
 CellID->463675034,ExpressionUUID->"10289f12-2573-40cd-8c56-46eb1e1ae725"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Section", "Section",
 CellChangeTimes->{{3.8748717327122207`*^9, 3.8748717380680065`*^9}, {
  3.874904860997529*^9, 3.874904864182002*^9}},
 CellID->64733077,ExpressionUUID->"24a2c22e-0e87-4a88-8a2c-12042e52d1c2"],

Cell["Store data", "Text",
 CellChangeTimes->{{3.8749373146272016`*^9, 3.8749373159401207`*^9}},
 CellID->143195493,ExpressionUUID->"eb6c6dbd-1032-4d6f-ba20-91c84f5628cf"],

Cell[BoxData[
 RowBox[{
  RowBox[{"constants", "=", 
   TagBox[
    TagBox[
     DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
      "InitialData" -> <|
        "hyperfine-transition-frequency-of-Cs" -> <|
          "numerical-value" -> 9192631770, "unit" -> "Hz"|>, 
         "speed-of-light-in-vacuum" -> <|
          "numerical-value" -> 299792458, "unit" -> 
           "m \!\(\*SuperscriptBox[\(s\), \(-1\)]\)"|>, 
         "Planck-constant" -> <|
          "numerical-value" -> 6.6260701500000015`*^-34, "unit" -> "J s"|>, 
         "elementary-charge" -> <|
          "numerical-value" -> 1.6021766340000001`*^-19, "unit" -> "C"|>, 
         "Boltzmann-constant" -> <|
          "numerical-value" -> 1.380649*^-23, "unit" -> 
           "J \!\(\*SuperscriptBox[\(K\), \(-1\)]\)"|>, 
         "Avogadro-constant" -> <|
          "numerical-value" -> 6.02214076*^23, "unit" -> 
           "\!\(\*SuperscriptBox[\(mol\), \(-1\)]\)"|>, 
         "luminous-efficacy" -> <|
          "numerical-value" -> 683, "unit" -> 
           "lm \!\(\*SuperscriptBox[\(W\), \(-1\)]\)"|>|>, "AllowEmbedding" -> 
       True, "InitialShape" -> TypeSystem`PackageScope`HeaderShape[<|{All, 
            TypeSystem`PackageScope`KeyDummy[67]} -> 
          1, {All, "numerical-value"} -> 1, {All, "unit"} -> 1|>, 
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`ColumnShape[
           TypeSystem`PackageScope`KeyValueShape[
            TypeSystem`PackageScope`AtomShape[403.20000000000005`], 
            TypeSystem`PackageScope`Limited[
             
             TypeSystem`PackageScope`RowShape[<|
              "numerical-value" -> TypeSystem`PackageScope`AtomShape[60], 
               "unit" -> TypeSystem`PackageScope`AtomShape[
                358.40000000000003`]|>], 
             DirectedInfinity[1], 2, {All}]]], 7, 
          DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Assoc[
         TypeSystem`Atom[String], 
         TypeSystem`Struct[{"numerical-value", "unit"}, {
           TypeSystem`Atom[Real], 
           TypeSystem`Atom[String]}], 7], "Meta" -> <||>, "RowTarget" -> 20, 
       "ColumnTarget" -> 10, "Shape" -> 
       TypeSystem`PackageScope`HeaderShape[<|{All, 
            TypeSystem`PackageScope`KeyDummy[67]} -> 
          1, {All, "numerical-value"} -> 1, {All, "unit"} -> 1|>, 
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`ColumnShape[
           TypeSystem`PackageScope`KeyValueShape[
            TypeSystem`PackageScope`AtomShape[403.20000000000005`], 
            TypeSystem`PackageScope`Limited[
             
             TypeSystem`PackageScope`RowShape[<|
              "numerical-value" -> TypeSystem`PackageScope`AtomShape[60], 
               "unit" -> TypeSystem`PackageScope`AtomShape[
                358.40000000000003`]|>], 
             DirectedInfinity[1], 2, {All}]]], 7, 
          DirectedInfinity[1], {}]], "Type" -> TypeSystem`Assoc[
         TypeSystem`Atom[String], 
         TypeSystem`Struct[{"numerical-value", "unit"}, {
           TypeSystem`Atom[Real], 
           TypeSystem`Atom[String]}], 7], "Path" -> {}, "DisplayedRowCount" -> 
       7, "DisplayedColumnCount" -> 2, "DataRowCount" -> 7, "DataColumnCount" -> 
       2, "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null,
        "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$,
       TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
       TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
          Style[
           Grid[{{
              Item[
               Pane[
                Annotation[
                 Mouseover[
                  
                  Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                   Scaled[-0.15]], 
                  Graphics[{
                    GrayLevel[0.6], 
                    
                    Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
                    Rational[-1, 2]}}]}, ImageSize -> 6, BaselinePosition -> 
                   Scaled[-0.15]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                  All, Keys}, "KeyDummy", True], "Mouse"], 
                ImageSize -> {{1, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["numerical-value", 
                    Style[
                    "numerical-value", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "numerical-value"}, 1]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                  All, "numerical-value"}, "ColumnHeader", True], "Mouse"], 
                ImageSize -> {{1, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["unit", 
                    Style[
                    "unit", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "unit"}, 1]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                  All, "unit"}, "ColumnHeader", True], "Mouse"], 
                ImageSize -> {{1, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
              Item[
               Pane[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["hyperfine-transition-frequency-of-Cs", 
                    Style[
                    "hyperfine-transition-frequency-of-Cs", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["hyperfine-transition-frequency-of-Cs"]}, 1]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["hyperfine-transition-frequency-of-Cs"]}, "RowHeader", 
                  False], "Mouse"], 
                ImageSize -> {{403.20000000000005`, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes["9192631770"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["hyperfine-transition-frequency-of-Cs"], 
                   Key["numerical-value"]}, "Item", False], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation["Hz", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["hyperfine-transition-frequency-of-Cs"], 
                   Key["unit"]}, "Item", False], "Mouse"], 
                ImageSize -> {{358.40000000000003`, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["speed-of-light-in-vacuum", 
                    Style[
                    "speed-of-light-in-vacuum", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["speed-of-light-in-vacuum"]}, 1]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["speed-of-light-in-vacuum"]}, "RowHeader", False], 
                 "Mouse"], 
                ImageSize -> {{403.20000000000005`, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes["299792458"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["speed-of-light-in-vacuum"], 
                   Key["numerical-value"]}, "Item", False], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation["m \!\(\*SuperscriptBox[\(s\), \(-1\)]\)", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["speed-of-light-in-vacuum"], 
                   Key["unit"]}, "Item", False], "Mouse"], 
                ImageSize -> {{358.40000000000003`, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["Planck-constant", 
                    Style[
                    "Planck-constant", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Planck-constant"]}, 1]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["Planck-constant"]}, "RowHeader", False], "Mouse"], 
                ImageSize -> {{403.20000000000005`, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes["0.000000000000000000000000000000000662607"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["Planck-constant"], 
                   Key["numerical-value"]}, "Item", False], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation["J s", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["Planck-constant"], 
                   Key["unit"]}, "Item", False], "Mouse"], 
                ImageSize -> {{358.40000000000003`, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["elementary-charge", 
                    Style[
                    "elementary-charge", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["elementary-charge"]}, 1]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["elementary-charge"]}, "RowHeader", False], "Mouse"], 
                ImageSize -> {{403.20000000000005`, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes["0.000000000000000000160218"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["elementary-charge"], 
                   Key["numerical-value"]}, "Item", False], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation["C", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["elementary-charge"], 
                   Key["unit"]}, "Item", False], "Mouse"], 
                ImageSize -> {{358.40000000000003`, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["Boltzmann-constant", 
                    Style[
                    "Boltzmann-constant", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Boltzmann-constant"]}, 1]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["Boltzmann-constant"]}, "RowHeader", False], "Mouse"], 
                ImageSize -> {{403.20000000000005`, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes["0.0000000000000000000000138065"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["Boltzmann-constant"], 
                   Key["numerical-value"]}, "Item", False], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation["J \!\(\*SuperscriptBox[\(K\), \(-1\)]\)", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["Boltzmann-constant"], 
                   Key["unit"]}, "Item", False], "Mouse"], 
                ImageSize -> {{358.40000000000003`, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["Avogadro-constant", 
                    Style[
                    "Avogadro-constant", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Avogadro-constant"]}, 1]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["Avogadro-constant"]}, "RowHeader", False], "Mouse"], 
                ImageSize -> {{403.20000000000005`, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes["602214000000000000000000."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["Avogadro-constant"], 
                   Key["numerical-value"]}, "Item", False], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation["\!\(\*SuperscriptBox[\(mol\), \(-1\)]\)", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["Avogadro-constant"], 
                   Key["unit"]}, "Item", False], "Mouse"], 
                ImageSize -> {{358.40000000000003`, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["luminous-efficacy", 
                    Style[
                    "luminous-efficacy", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["luminous-efficacy"]}, 1]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["luminous-efficacy"]}, "RowHeader", False], "Mouse"], 
                ImageSize -> {{403.20000000000005`, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes["683"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["luminous-efficacy"], 
                   Key["numerical-value"]}, "Item", False], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation["lm \!\(\*SuperscriptBox[\(W\), \(-1\)]\)", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["luminous-efficacy"], 
                   Key["unit"]}, "Item", False], "Mouse"], 
                ImageSize -> {{358.40000000000003`, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}}, 
            BaseStyle -> {
             ContextMenu -> 
              Dynamic[TypeSystem`NestedGrid`PackagePrivate`$\
contextMenuTrigger; 
                Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                  TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                  TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                   True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                   TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                  TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                   Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
              "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, 
            Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
            Spacings -> {0, 0}, Alignment -> Left, 
            BaseStyle -> {
             FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
              Plain}], LineBreakWithin -> False, ContextMenu -> {}, 
           NumberMarks -> False, ShowAutoStyles -> False]], 
        TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
       Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
        TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
           Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
           
           Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
             TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
             TypeSystem`NestedGrid`PackagePrivate`datasetData[
              TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
               FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
               TypeSystem`NestedGrid`PackagePrivate`renderGrid[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
               TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
              Not[
               FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
              TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
              TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
         TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
         TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
           FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
           TypeSystem`SparseGrid[
            TypeSystem`H["(data no longer present)"]], 
           TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
        TrackedSymbols :> {
         TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
          TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
       DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
       TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
        TypeSystem`PackageScope`SubViewPathbar[
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
         TypeSystem`NestedGrid`PackagePrivate`updateState[
         TypeSystem`NestedGrid`PackagePrivate`$state$$, 
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
          TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
          TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
       TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
       Framed[
        Dynamic[
         Replace[
         TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
             TypeSystem`NestedGrid`PackagePrivate`localHold[
             TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
             Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
             TypeSystem`NestedGrid`PackagePrivate`localHold[
             TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
              Blank[]], 
             Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
              Blank[]], 
             Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
              Blank[]]] :> (
            Increment[
             TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path$; 
            TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
             TypeSystem`NestedGrid`PackagePrivate`pathType$; 
            TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
             TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
            TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
             TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path$, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           Spacer[10], Blank[] :> Spacer[10]}], 
         TrackedSymbols :> {
          TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
        FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
        Top, ImageSize -> {Automatic, 15}], FontSize -> 1], 
      TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
      DynamicWrapperBox[
       DynamicBox[ToBoxes[
         Dataset`DatasetContent[
         2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
          "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], 
          "State" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
          "VPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], 
          "HPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], 
          "TopBar" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
          "BottomBar" -> 
          Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
          Hold[
            TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
        ImageSizeCache->{847., {113.63403328722343`, 119.36596671277657`}},
        TrackedSymbols:>{
         TypeSystem`NestedGrid`PackagePrivate`$state$$, 
          TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
       MouseAnnotation[],
       ImageSizeCache->{847., {113.63403328722343`, 119.36596671277657`}}],
      BaseStyle->{LineBreakWithin -> False},
      DynamicModuleValues:>{},
      Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
       CreateUUID[]),
      UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
     Deploy,
     DefaultBaseStyle->"Deploy"],
    Dataset`InterpretDataset[1],
    Editable->False,
    SelectWithContents->True,
    Selectable->False]}], ";"}]], "Input",
 CellChangeTimes->{{3.874937336307478*^9, 3.874937350286146*^9}},
 CellLabel->"In[293]:=",
 CellID->516549626,ExpressionUUID->"f48bc8b7-7f69-44d4-8581-bf9fdd3d7e63"],

Cell[BoxData[
 RowBox[{
  RowBox[{"basequantities", "=", 
   TagBox[
    TagBox[
     DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
      "InitialData" -> <|
        "time" -> <|
          "quantity-name" -> "time", "typical-quantity-symbol" -> "t", 
           "unit-name" -> "second", "unit-symbol" -> "s"|>, 
         "length" -> <|
          "quantity-name" -> "length", "typical-quantity-symbol" -> "l", 
           "unit-name" -> "meter", "unit-symbol" -> "m"|>, 
         "mass" -> <|
          "quantity-name" -> "mass", "typical-quantity-symbol" -> "l", 
           "unit-name" -> "kilogram", "unit-symbol" -> "kg"|>, 
         "electric-current" -> <|
          "quantity-name" -> "electric-current", "typical-quantity-symbol" -> 
           "i", "unit-name" -> "ampere", "unit-symbol" -> "A"|>, 
         "thermodynamic-temperature" -> <|
          "quantity-name" -> "thermodynamic-temperature", 
           "typical-quantity-symbol" -> "T", "unit-name" -> "kelvin", 
           "unit-symbol" -> "K"|>, 
         "amount-of-substance" -> <|
          "quantity-name" -> "amount-of-substance", "typical-quantity-symbol" -> 
           "n", "unit-name" -> "mole", "unit-symbol" -> "mol"|>, 
         "luminous-intensity" -> <|
          "quantity-name" -> "luminous-intensity", "typical-quantity-symbol" -> 
           "\!\(\*SubscriptBox[\(I\), \(v\)]\)", "unit-name" -> "candela", 
           "unit-symbol" -> "cd"|>|>, "AllowEmbedding" -> True, 
       "InitialShape" -> TypeSystem`PackageScope`HeaderShape[<|{All, 
            TypeSystem`PackageScope`KeyDummy[2]} -> 1, {All, "quantity-name"} -> 
          1, {All, "typical-quantity-symbol"} -> 1, {All, "unit-name"} -> 
          1, {All, "unit-symbol"} -> 1|>, 
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`ColumnShape[
           TypeSystem`PackageScope`KeyValueShape[
            TypeSystem`PackageScope`AtomShape[280.], 
            TypeSystem`PackageScope`Limited[
             
             TypeSystem`PackageScope`RowShape[<|
              "quantity-name" -> TypeSystem`PackageScope`AtomShape[280.], 
               "typical-quantity-symbol" -> 
               TypeSystem`PackageScope`AtomShape[291.20000000000005`], 
               "unit-name" -> 
               TypeSystem`PackageScope`AtomShape[89.60000000000001], 
               "unit-symbol" -> TypeSystem`PackageScope`AtomShape[33.6]|>], 
             DirectedInfinity[1], 4, {All}]]], 7, 
          DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Assoc[
         TypeSystem`Atom[String], 
         TypeSystem`Struct[{
          "quantity-name", "typical-quantity-symbol", "unit-name", 
           "unit-symbol"}, {
           TypeSystem`Atom[String], 
           TypeSystem`Atom[String], 
           TypeSystem`Atom[String], 
           TypeSystem`Atom[String]}], 7], "Meta" -> <||>, "RowTarget" -> 20, 
       "ColumnTarget" -> 10, "Shape" -> 
       TypeSystem`PackageScope`HeaderShape[<|{All, 
            TypeSystem`PackageScope`KeyDummy[2]} -> 1, {All, "quantity-name"} -> 
          1, {All, "typical-quantity-symbol"} -> 1, {All, "unit-name"} -> 
          1, {All, "unit-symbol"} -> 1|>, 
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`ColumnShape[
           TypeSystem`PackageScope`KeyValueShape[
            TypeSystem`PackageScope`AtomShape[280.], 
            TypeSystem`PackageScope`Limited[
             
             TypeSystem`PackageScope`RowShape[<|
              "quantity-name" -> TypeSystem`PackageScope`AtomShape[280.], 
               "typical-quantity-symbol" -> 
               TypeSystem`PackageScope`AtomShape[291.20000000000005`], 
               "unit-name" -> 
               TypeSystem`PackageScope`AtomShape[89.60000000000001], 
               "unit-symbol" -> TypeSystem`PackageScope`AtomShape[33.6]|>], 
             DirectedInfinity[1], 4, {All}]]], 7, 
          DirectedInfinity[1], {}]], "Type" -> TypeSystem`Assoc[
         TypeSystem`Atom[String], 
         TypeSystem`Struct[{
          "quantity-name", "typical-quantity-symbol", "unit-name", 
           "unit-symbol"}, {
           TypeSystem`Atom[String], 
           TypeSystem`Atom[String], 
           TypeSystem`Atom[String], 
           TypeSystem`Atom[String]}], 7], "Path" -> {}, "DisplayedRowCount" -> 
       7, "DisplayedColumnCount" -> 4, "DataRowCount" -> 7, "DataColumnCount" -> 
       4, "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null,
        "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$,
       TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
       TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
          Style[
           Grid[{{
              Item[
               Pane[
                Annotation[
                 Mouseover[
                  
                  Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                   Scaled[-0.15]], 
                  Graphics[{
                    GrayLevel[0.6], 
                    
                    Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
                    Rational[-1, 2]}}]}, ImageSize -> 6, BaselinePosition -> 
                   Scaled[-0.15]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                  All, Keys}, "KeyDummy", True], "Mouse"], 
                ImageSize -> {{1, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["quantity-name", 
                    Style[
                    "quantity-name", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "quantity-name"}, 1]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                  All, "quantity-name"}, "ColumnHeader", True], "Mouse"], 
                ImageSize -> {{1, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["typical-quantity-symbol", 
                    Style[
                    "typical-quantity-symbol", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "typical-quantity-symbol"}, 1]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                  All, "typical-quantity-symbol"}, "ColumnHeader", True], 
                 "Mouse"], ImageSize -> {{1, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["unit-name", 
                    Style[
                    "unit-name", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "unit-name"}, 1]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                  All, "unit-name"}, "ColumnHeader", True], "Mouse"], 
                ImageSize -> {{1, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["unit-symbol", 
                    Style[
                    "unit-symbol", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "unit-symbol"}, 1]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                  All, "unit-symbol"}, "ColumnHeader", True], "Mouse"], 
                ImageSize -> {{1, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
              Item[
               Pane[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["time", 
                    Style[
                    "time", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["time"]}, 1]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["time"]}, "RowHeader", False], "Mouse"], 
                ImageSize -> {{280., Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation["time", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["time"], 
                   Key["quantity-name"]}, "Item", False], "Mouse"], 
                ImageSize -> {{280., Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation["t", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["time"], 
                   Key["typical-quantity-symbol"]}, "Item", False], "Mouse"], 
                ImageSize -> {{291.20000000000005`, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation["second", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["time"], 
                   Key["unit-name"]}, "Item", False], "Mouse"], 
                ImageSize -> {{89.60000000000001, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation["s", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["time"], 
                   Key["unit-symbol"]}, "Item", False], "Mouse"], 
                ImageSize -> {{33.6, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["length", 
                    Style[
                    "length", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["length"]}, 1]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["length"]}, "RowHeader", False], "Mouse"], 
                ImageSize -> {{280., Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation["length", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["length"], 
                   Key["quantity-name"]}, "Item", False], "Mouse"], 
                ImageSize -> {{280., Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation["l", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["length"], 
                   Key["typical-quantity-symbol"]}, "Item", False], "Mouse"], 
                ImageSize -> {{291.20000000000005`, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation["meter", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["length"], 
                   Key["unit-name"]}, "Item", False], "Mouse"], 
                ImageSize -> {{89.60000000000001, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation["m", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["length"], 
                   Key["unit-symbol"]}, "Item", False], "Mouse"], 
                ImageSize -> {{33.6, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["mass", 
                    Style[
                    "mass", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["mass"]}, 1]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["mass"]}, "RowHeader", False], "Mouse"], 
                ImageSize -> {{280., Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation["mass", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["mass"], 
                   Key["quantity-name"]}, "Item", False], "Mouse"], 
                ImageSize -> {{280., Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation["l", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["mass"], 
                   Key["typical-quantity-symbol"]}, "Item", False], "Mouse"], 
                ImageSize -> {{291.20000000000005`, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation["kilogram", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["mass"], 
                   Key["unit-name"]}, "Item", False], "Mouse"], 
                ImageSize -> {{89.60000000000001, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation["kg", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["mass"], 
                   Key["unit-symbol"]}, "Item", False], "Mouse"], 
                ImageSize -> {{33.6, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["electric-current", 
                    Style[
                    "electric-current", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["electric-current"]}, 1]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["electric-current"]}, "RowHeader", False], "Mouse"], 
                ImageSize -> {{280., Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation["electric-current", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["electric-current"], 
                   Key["quantity-name"]}, "Item", False], "Mouse"], 
                ImageSize -> {{280., Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation["i", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["electric-current"], 
                   Key["typical-quantity-symbol"]}, "Item", False], "Mouse"], 
                ImageSize -> {{291.20000000000005`, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation["ampere", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["electric-current"], 
                   Key["unit-name"]}, "Item", False], "Mouse"], 
                ImageSize -> {{89.60000000000001, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation["A", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["electric-current"], 
                   Key["unit-symbol"]}, "Item", False], "Mouse"], 
                ImageSize -> {{33.6, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["thermodynamic-temperature", 
                    Style[
                    "thermodynamic-temperature", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["thermodynamic-temperature"]}, 1]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["thermodynamic-temperature"]}, "RowHeader", False], 
                 "Mouse"], ImageSize -> {{280., Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation["thermodynamic-temperature", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["thermodynamic-temperature"], 
                   Key["quantity-name"]}, "Item", False], "Mouse"], 
                ImageSize -> {{280., Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation["T", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["thermodynamic-temperature"], 
                   Key["typical-quantity-symbol"]}, "Item", False], "Mouse"], 
                ImageSize -> {{291.20000000000005`, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation["kelvin", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["thermodynamic-temperature"], 
                   Key["unit-name"]}, "Item", False], "Mouse"], 
                ImageSize -> {{89.60000000000001, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation["K", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["thermodynamic-temperature"], 
                   Key["unit-symbol"]}, "Item", False], "Mouse"], 
                ImageSize -> {{33.6, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["amount-of-substance", 
                    Style[
                    "amount-of-substance", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["amount-of-substance"]}, 1]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["amount-of-substance"]}, "RowHeader", False], "Mouse"],
                 ImageSize -> {{280., Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation["amount-of-substance", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["amount-of-substance"], 
                   Key["quantity-name"]}, "Item", False], "Mouse"], 
                ImageSize -> {{280., Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation["n", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["amount-of-substance"], 
                   Key["typical-quantity-symbol"]}, "Item", False], "Mouse"], 
                ImageSize -> {{291.20000000000005`, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation["mole", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["amount-of-substance"], 
                   Key["unit-name"]}, "Item", False], "Mouse"], 
                ImageSize -> {{89.60000000000001, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation["mol", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["amount-of-substance"], 
                   Key["unit-symbol"]}, "Item", False], "Mouse"], 
                ImageSize -> {{33.6, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["luminous-intensity", 
                    Style[
                    "luminous-intensity", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["luminous-intensity"]}, 1]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["luminous-intensity"]}, "RowHeader", False], "Mouse"], 
                ImageSize -> {{280., Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation["luminous-intensity", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["luminous-intensity"], 
                   Key["quantity-name"]}, "Item", False], "Mouse"], 
                ImageSize -> {{280., Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation["\!\(\*SubscriptBox[\(I\), \(v\)]\)", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["luminous-intensity"], 
                   Key["typical-quantity-symbol"]}, "Item", False], "Mouse"], 
                ImageSize -> {{291.20000000000005`, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation["candela", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["luminous-intensity"], 
                   Key["unit-name"]}, "Item", False], "Mouse"], 
                ImageSize -> {{89.60000000000001, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation["cd", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["luminous-intensity"], 
                   Key["unit-symbol"]}, "Item", False], "Mouse"], 
                ImageSize -> {{33.6, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}}, 
            BaseStyle -> {
             ContextMenu -> 
              Dynamic[TypeSystem`NestedGrid`PackagePrivate`$\
contextMenuTrigger; 
                Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                  TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                  TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                   True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                   TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                  TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                   Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
              "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, 
            Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
            Spacings -> {0, 0}, Alignment -> Left, 
            BaseStyle -> {
             FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
              Plain}], LineBreakWithin -> False, ContextMenu -> {}, 
           NumberMarks -> False, ShowAutoStyles -> False]], 
        TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
       Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
        TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
           Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
           
           Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
             TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
             TypeSystem`NestedGrid`PackagePrivate`datasetData[
              TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
               FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
               TypeSystem`NestedGrid`PackagePrivate`renderGrid[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
               TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
              Not[
               FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
              TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
              TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
         TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
         TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
           FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
           TypeSystem`SparseGrid[
            TypeSystem`H["(data no longer present)"]], 
           TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
        TrackedSymbols :> {
         TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
          TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
       DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
       TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
        TypeSystem`PackageScope`SubViewPathbar[
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
         TypeSystem`NestedGrid`PackagePrivate`updateState[
         TypeSystem`NestedGrid`PackagePrivate`$state$$, 
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
          TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
          TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
       TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
       Framed[
        Dynamic[
         Replace[
         TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
             TypeSystem`NestedGrid`PackagePrivate`localHold[
             TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
             Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
             TypeSystem`NestedGrid`PackagePrivate`localHold[
             TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
              Blank[]], 
             Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
              Blank[]], 
             Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
              Blank[]]] :> (
            Increment[
             TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path$; 
            TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
             TypeSystem`NestedGrid`PackagePrivate`pathType$; 
            TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
             TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
            TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
             TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path$, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           Spacer[10], Blank[] :> Spacer[10]}], 
         TrackedSymbols :> {
          TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
        FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
        Top, ImageSize -> {Automatic, 15}], FontSize -> 1], 
      TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
      DynamicWrapperBox[
       DynamicBox[ToBoxes[
         Dataset`DatasetContent[
         2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
          "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], 
          "State" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
          "VPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], 
          "HPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], 
          "TopBar" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
          "BottomBar" -> 
          Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
          Hold[
            TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
        ImageSizeCache->{1023., {113.63403328722343`, 119.36596671277657`}},
        TrackedSymbols:>{
         TypeSystem`NestedGrid`PackagePrivate`$state$$, 
          TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
       MouseAnnotation[],
       ImageSizeCache->{1023., {113.63403328722343`, 119.36596671277657`}}],
      BaseStyle->{LineBreakWithin -> False},
      DynamicModuleValues:>{},
      Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
       CreateUUID[]),
      UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
     Deploy,
     DefaultBaseStyle->"Deploy"],
    Dataset`InterpretDataset[1],
    Editable->False,
    SelectWithContents->True,
    Selectable->False]}], ";"}]], "Input",
 CellChangeTimes->{{3.874937375786995*^9, 3.8749373933700504`*^9}},
 CellLabel->"In[295]:=",
 CellID->22916911,ExpressionUUID->"b389929c-102e-464e-bcbd-e5ccdf83de4e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"dimensions", "=", 
   TagBox[
    TagBox[
     DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
      "InitialData" -> <|
        "time" -> <|
          "typical-symbol-for-quantity" -> "t", "symbol-for-dimension" -> 
           "T"|>, "length" -> <|
          "typical-symbol-for-quantity" -> "l", "symbol-for-dimension" -> 
           "L"|>, "mass" -> <|
          "typical-symbol-for-quantity" -> "m", "symbol-for-dimension" -> 
           "M"|>, "electric-current" -> <|
          "typical-symbol-for-quantity" -> "i", "symbol-for-dimension" -> 
           "I"|>, "thermodynamic-temperature" -> <|
          "typical-symbol-for-quantity" -> "T", "symbol-for-dimension" -> 
           "\[CapitalTheta]"|>, 
         "amount-of-substance" -> <|
          "typical-symbol-for-quantity" -> "n", "symbol-for-dimension" -> 
           "N"|>, "luminous-intensity" -> <|
          "typical-symbol-for-quantity" -> 
           "\!\(\*SubscriptBox[\(I\), \(v\)]\)", "symbol-for-dimension" -> 
           "J"|>|>, "AllowEmbedding" -> True, "InitialShape" -> 
       TypeSystem`PackageScope`HeaderShape[<|{All, 
            TypeSystem`PackageScope`KeyDummy[4]} -> 
          1, {All, "typical-symbol-for-quantity"} -> 
          1, {All, "symbol-for-dimension"} -> 1|>, 
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`ColumnShape[
           TypeSystem`PackageScope`KeyValueShape[
            TypeSystem`PackageScope`AtomShape[280.], 
            TypeSystem`PackageScope`Limited[
             
             TypeSystem`PackageScope`RowShape[<|
              "typical-symbol-for-quantity" -> 
               TypeSystem`PackageScope`AtomShape[291.20000000000005`], 
               "symbol-for-dimension" -> 
               TypeSystem`PackageScope`AtomShape[33.6]|>], 
             DirectedInfinity[1], 2, {All}]]], 7, 
          DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Assoc[
         TypeSystem`Atom[String], 
         TypeSystem`Struct[{
          "typical-symbol-for-quantity", "symbol-for-dimension"}, {
           TypeSystem`Atom[String], 
           TypeSystem`Atom[String]}], 7], "Meta" -> <||>, "RowTarget" -> 20, 
       "ColumnTarget" -> 10, "Shape" -> 
       TypeSystem`PackageScope`HeaderShape[<|{All, 
            TypeSystem`PackageScope`KeyDummy[4]} -> 
          1, {All, "typical-symbol-for-quantity"} -> 
          1, {All, "symbol-for-dimension"} -> 1|>, 
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`ColumnShape[
           TypeSystem`PackageScope`KeyValueShape[
            TypeSystem`PackageScope`AtomShape[280.], 
            TypeSystem`PackageScope`Limited[
             
             TypeSystem`PackageScope`RowShape[<|
              "typical-symbol-for-quantity" -> 
               TypeSystem`PackageScope`AtomShape[291.20000000000005`], 
               "symbol-for-dimension" -> 
               TypeSystem`PackageScope`AtomShape[33.6]|>], 
             DirectedInfinity[1], 2, {All}]]], 7, 
          DirectedInfinity[1], {}]], "Type" -> TypeSystem`Assoc[
         TypeSystem`Atom[String], 
         TypeSystem`Struct[{
          "typical-symbol-for-quantity", "symbol-for-dimension"}, {
           TypeSystem`Atom[String], 
           TypeSystem`Atom[String]}], 7], "Path" -> {}, "DisplayedRowCount" -> 
       7, "DisplayedColumnCount" -> 2, "DataRowCount" -> 7, "DataColumnCount" -> 
       2, "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null,
        "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$,
       TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
       TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
          Style[
           Grid[{{
              Item[
               Pane[
                Annotation[
                 Mouseover[
                  
                  Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                   Scaled[-0.15]], 
                  Graphics[{
                    GrayLevel[0.6], 
                    
                    Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
                    Rational[-1, 2]}}]}, ImageSize -> 6, BaselinePosition -> 
                   Scaled[-0.15]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                  All, Keys}, "KeyDummy", True], "Mouse"], 
                ImageSize -> {{1, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["typical-symbol-for-quantity", 
                    Style[
                    "typical-symbol-for-quantity", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "typical-symbol-for-quantity"}, 1]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                  All, "typical-symbol-for-quantity"}, "ColumnHeader", True], 
                 "Mouse"], ImageSize -> {{1, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["symbol-for-dimension", 
                    Style[
                    "symbol-for-dimension", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "symbol-for-dimension"}, 1]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                  All, "symbol-for-dimension"}, "ColumnHeader", True], 
                 "Mouse"], ImageSize -> {{1, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
              Item[
               Pane[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["time", 
                    Style[
                    "time", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["time"]}, 1]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["time"]}, "RowHeader", False], "Mouse"], 
                ImageSize -> {{280., Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation["t", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["time"], 
                   Key["typical-symbol-for-quantity"]}, "Item", False], 
                 "Mouse"], 
                ImageSize -> {{291.20000000000005`, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation["T", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["time"], 
                   Key["symbol-for-dimension"]}, "Item", False], "Mouse"], 
                ImageSize -> {{33.6, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["length", 
                    Style[
                    "length", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["length"]}, 1]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["length"]}, "RowHeader", False], "Mouse"], 
                ImageSize -> {{280., Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation["l", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["length"], 
                   Key["typical-symbol-for-quantity"]}, "Item", False], 
                 "Mouse"], 
                ImageSize -> {{291.20000000000005`, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation["L", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["length"], 
                   Key["symbol-for-dimension"]}, "Item", False], "Mouse"], 
                ImageSize -> {{33.6, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["mass", 
                    Style[
                    "mass", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["mass"]}, 1]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["mass"]}, "RowHeader", False], "Mouse"], 
                ImageSize -> {{280., Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation["m", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["mass"], 
                   Key["typical-symbol-for-quantity"]}, "Item", False], 
                 "Mouse"], 
                ImageSize -> {{291.20000000000005`, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation["M", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["mass"], 
                   Key["symbol-for-dimension"]}, "Item", False], "Mouse"], 
                ImageSize -> {{33.6, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["electric-current", 
                    Style[
                    "electric-current", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["electric-current"]}, 1]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["electric-current"]}, "RowHeader", False], "Mouse"], 
                ImageSize -> {{280., Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation["i", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["electric-current"], 
                   Key["typical-symbol-for-quantity"]}, "Item", False], 
                 "Mouse"], 
                ImageSize -> {{291.20000000000005`, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation["I", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["electric-current"], 
                   Key["symbol-for-dimension"]}, "Item", False], "Mouse"], 
                ImageSize -> {{33.6, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["thermodynamic-temperature", 
                    Style[
                    "thermodynamic-temperature", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["thermodynamic-temperature"]}, 1]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["thermodynamic-temperature"]}, "RowHeader", False], 
                 "Mouse"], ImageSize -> {{280., Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation["T", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["thermodynamic-temperature"], 
                   Key["typical-symbol-for-quantity"]}, "Item", False], 
                 "Mouse"], 
                ImageSize -> {{291.20000000000005`, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation["\[CapitalTheta]", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["thermodynamic-temperature"], 
                   Key["symbol-for-dimension"]}, "Item", False], "Mouse"], 
                ImageSize -> {{33.6, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["amount-of-substance", 
                    Style[
                    "amount-of-substance", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["amount-of-substance"]}, 1]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["amount-of-substance"]}, "RowHeader", False], "Mouse"],
                 ImageSize -> {{280., Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation["n", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["amount-of-substance"], 
                   Key["typical-symbol-for-quantity"]}, "Item", False], 
                 "Mouse"], 
                ImageSize -> {{291.20000000000005`, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation["N", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["amount-of-substance"], 
                   Key["symbol-for-dimension"]}, "Item", False], "Mouse"], 
                ImageSize -> {{33.6, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["luminous-intensity", 
                    Style[
                    "luminous-intensity", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["luminous-intensity"]}, 1]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["luminous-intensity"]}, "RowHeader", False], "Mouse"], 
                ImageSize -> {{280., Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation["\!\(\*SubscriptBox[\(I\), \(v\)]\)", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["luminous-intensity"], 
                   Key["typical-symbol-for-quantity"]}, "Item", False], 
                 "Mouse"], 
                ImageSize -> {{291.20000000000005`, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation["J", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["luminous-intensity"], 
                   Key["symbol-for-dimension"]}, "Item", False], "Mouse"], 
                ImageSize -> {{33.6, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}}, 
            BaseStyle -> {
             ContextMenu -> 
              Dynamic[TypeSystem`NestedGrid`PackagePrivate`$\
contextMenuTrigger; 
                Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                  TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                  TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                   True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                   TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                  TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                   Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
              "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, 
            Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
            Spacings -> {0, 0}, Alignment -> Left, 
            BaseStyle -> {
             FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
              Plain}], LineBreakWithin -> False, ContextMenu -> {}, 
           NumberMarks -> False, ShowAutoStyles -> False]], 
        TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
       Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
        TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
           Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
           
           Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
             TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
             TypeSystem`NestedGrid`PackagePrivate`datasetData[
              TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
               FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
               TypeSystem`NestedGrid`PackagePrivate`renderGrid[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
               TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
              Not[
               FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
              TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
              TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
         TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
         TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
           FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
           TypeSystem`SparseGrid[
            TypeSystem`H["(data no longer present)"]], 
           TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
        TrackedSymbols :> {
         TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
          TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
       DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
       TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
        TypeSystem`PackageScope`SubViewPathbar[
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
         TypeSystem`NestedGrid`PackagePrivate`updateState[
         TypeSystem`NestedGrid`PackagePrivate`$state$$, 
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
          TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
          TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
       TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
       Framed[
        Dynamic[
         Replace[
         TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
             TypeSystem`NestedGrid`PackagePrivate`localHold[
             TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
             Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
             TypeSystem`NestedGrid`PackagePrivate`localHold[
             TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
              Blank[]], 
             Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
              Blank[]], 
             Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
              Blank[]]] :> (
            Increment[
             TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path$; 
            TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
             TypeSystem`NestedGrid`PackagePrivate`pathType$; 
            TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
             TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
            TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
             TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path$, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           Spacer[10], Blank[] :> Spacer[10]}], 
         TrackedSymbols :> {
          TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
        FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
        Top, ImageSize -> {Automatic, 15}], FontSize -> 1], 
      TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
      DynamicWrapperBox[
       DynamicBox[ToBoxes[
         Dataset`DatasetContent[
         2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
          "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], 
          "State" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
          "VPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], 
          "HPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], 
          "TopBar" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
          "BottomBar" -> 
          Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
          Hold[
            TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
        ImageSizeCache->{630., {113.63403328722343`, 119.36596671277657`}},
        TrackedSymbols:>{
         TypeSystem`NestedGrid`PackagePrivate`$state$$, 
          TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
       MouseAnnotation[],
       ImageSizeCache->{630., {113.63403328722343`, 119.36596671277657`}}],
      BaseStyle->{LineBreakWithin -> False},
      DynamicModuleValues:>{},
      Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
       CreateUUID[]),
      UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
     Deploy,
     DefaultBaseStyle->"Deploy"],
    Dataset`InterpretDataset[1],
    Editable->False,
    SelectWithContents->True,
    Selectable->False]}], ";"}]], "Input",
 CellChangeTimes->{{3.87493740053992*^9, 3.8749374031039352`*^9}},
 CellLabel->"In[296]:=",
 CellID->474012036,ExpressionUUID->"86020d2f-939c-42d2-abb0-9d3bd17245de"],

Cell[BoxData[
 RowBox[{
  RowBox[{"derivedUnits", "=", 
   TagBox[
    TagBox[
     DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
      "InitialData" -> <|
        "plane-angle" -> <|
          "special-name-of-unit" -> "radian", 
           "unit-expressed-terms-of-base-units" -> "rad=m/m", 
           "unit-expressed-in-terms-of-other-SI-units" -> ""|>, 
         "solid-angle" -> <|
          "special-name-of-unit" -> "steradian", 
           "unit-expressed-terms-of-base-units" -> 
           "sr=\!\(\*SuperscriptBox[\(m\), \
\(2\)]\)/\!\(\*SuperscriptBox[\(m\), \(2\)]\)", 
           "unit-expressed-in-terms-of-other-SI-units" -> ""|>, 
         "frequency" -> <|
          "special-name-of-unit" -> "hertz", 
           "unit-expressed-terms-of-base-units" -> 
           "Hz=\!\(\*SuperscriptBox[\(s\), \(-1\)]\)", 
           "unit-expressed-in-terms-of-other-SI-units" -> ""|>, 
         "force" -> <|
          "special-name-of-unit" -> "newton", 
           "unit-expressed-terms-of-base-units" -> 
           "N=kg m \!\(\*SuperscriptBox[\(s\), \(-2\)]\)", 
           "unit-expressed-in-terms-of-other-SI-units" -> ""|>, 
         "pressure-or-stress" -> <|
          "special-name-of-unit" -> "pascal", 
           "unit-expressed-terms-of-base-units" -> 
           "Pa=kg \!\(\*SuperscriptBox[\(m\), \(-1\)]\) \!\(\*SuperscriptBox[\
\(s\), \(-2\)]\)", "unit-expressed-in-terms-of-other-SI-units" -> ""|>, 
         "energy-or-work-or-amount-of-heat" -> <|
          "special-name-of-unit" -> "joule", 
           "unit-expressed-terms-of-base-units" -> 
           "J=kg \!\(\*SuperscriptBox[\(m\), \(2\)]\) \
\!\(\*SuperscriptBox[\(s\), \(-2\)]\)", 
           "unit-expressed-in-terms-of-other-SI-units" -> "N m"|>, 
         "power-or-radiant-flux" -> <|
          "special-name-of-unit" -> "watt", 
           "unit-expressed-terms-of-base-units" -> 
           "W=kg \!\(\*SuperscriptBox[\(m\), \(2\)]\) \
\!\(\*SuperscriptBox[\(s\), \(-3\)]\)", 
           "unit-expressed-in-terms-of-other-SI-units" -> "J/s"|>, 
         "electric-charge" -> <|
          "special-name-of-unit" -> "coulomb", 
           "unit-expressed-terms-of-base-units" -> "C=A s", 
           "unit-expressed-in-terms-of-other-SI-units" -> ""|>, 
         "electric-potential-difference" -> <|
          "special-name-of-unit" -> "volt", 
           "unit-expressed-terms-of-base-units" -> 
           "V=kg \!\(\*SuperscriptBox[\(m\), \(2\)]\) \
\!\(\*SuperscriptBox[\(s\), \(-3\)]\) \!\(\*SuperscriptBox[\(A\), \(-1\)]\)", 
           "unit-expressed-in-terms-of-other-SI-units" -> "W/A"|>, 
         "capacitance" -> <|
          "special-name-of-unit" -> "farad", 
           "unit-expressed-terms-of-base-units" -> 
           "F=\!\(\*SuperscriptBox[\(kg\), \(-1\)]\) \!\(\*SuperscriptBox[\(m\
\), \(-2\)]\) \!\(\*SuperscriptBox[\(s\), \(4\)]\) \
\!\(\*SuperscriptBox[\(A\), \(2\)]\)", 
           "unit-expressed-in-terms-of-other-SI-units" -> "C/V"|>, 
         "electric-resistance" -> <|
          "special-name-of-unit" -> "ohm", 
           "unit-expressed-terms-of-base-units" -> 
           "\[CapitalOmega]=kg \!\(\*SuperscriptBox[\(m\), \(2\)]\) \
\!\(\*SuperscriptBox[\(s\), \(-3\)]\) \!\(\*SuperscriptBox[\(A\), \(-2\)]\)", 
           "unit-expressed-in-terms-of-other-SI-units" -> "V/A"|>, 
         "electric-conductance" -> <|
          "special-name-of-unit" -> "siemens", 
           "unit-expressed-terms-of-base-units" -> 
           "S=\!\(\*SuperscriptBox[\(kg\), \(-1\)]\) \!\(\*SuperscriptBox[\(m\
\), \(-2\)]\) \!\(\*SuperscriptBox[\(s\), \(3\)]\) \
\!\(\*SuperscriptBox[\(A\), \(2\)]\)", 
           "unit-expressed-in-terms-of-other-SI-units" -> "A/V"|>, 
         "magnetic-flux" -> <|
          "special-name-of-unit" -> "weber", 
           "unit-expressed-terms-of-base-units" -> 
           "Wb=kg \!\(\*SuperscriptBox[\(m\), \(2\)]\) \
\!\(\*SuperscriptBox[\(s\), \(-2\)]\) \!\(\*SuperscriptBox[\(A\), \(-1\)]\)", 
           "unit-expressed-in-terms-of-other-SI-units" -> "V s"|>, 
         "magnetic-flux-density" -> <|
          "special-name-of-unit" -> "tesla", 
           "unit-expressed-terms-of-base-units" -> 
           "T=kg \!\(\*SuperscriptBox[\(s\), \(-2\)]\) \
\!\(\*SuperscriptBox[\(A\), \(-1\)]\)", 
           "unit-expressed-in-terms-of-other-SI-units" -> 
           "Wb/\!\(\*SuperscriptBox[\(m\), \(2\)]\)"|>, 
         "inductance" -> <|
          "special-name-of-unit" -> "henry", 
           "unit-expressed-terms-of-base-units" -> 
           "H=kg \!\(\*SuperscriptBox[\(m\), \(2\)]\) \
\!\(\*SuperscriptBox[\(s\), \(-2\)]\) \!\(\*SuperscriptBox[\(A\), \(-2\)]\)", 
           "unit-expressed-in-terms-of-other-SI-units" -> "Wb/A"|>, 
         "Celsius-temperature" -> <|
          "special-name-of-unit" -> "degree Celsius", 
           "unit-expressed-terms-of-base-units" -> "\[Degree]C=K", 
           "unit-expressed-in-terms-of-other-SI-units" -> ""|>, 
         "luminous-flux" -> <|
          "special-name-of-unit" -> "lumen", 
           "unit-expressed-terms-of-base-units" -> "lm=cd sr", 
           "unit-expressed-in-terms-of-other-SI-units" -> ""|>, 
         "illuminance" -> <|
          "special-name-of-unit" -> "lux", 
           "unit-expressed-terms-of-base-units" -> 
           "lx=cd sr \!\(\*SuperscriptBox[\(m\), \(-2\)]\)", 
           "unit-expressed-in-terms-of-other-SI-units" -> 
           "lm/\!\(\*SuperscriptBox[\(m\), \(2\)]\)"|>, 
         "activity-referred-to-a-radionuclide" -> <|
          "special-name-of-unit" -> "becquerel", 
           "unit-expressed-terms-of-base-units" -> 
           "Bq=\!\(\*SuperscriptBox[\(s\), \(-1\)]\)", 
           "unit-expressed-in-terms-of-other-SI-units" -> ""|>, 
         "absorbed-dose-or-kerma" -> <|
          "special-name-of-unit" -> "gray", 
           "unit-expressed-terms-of-base-units" -> 
           "Gy=\!\(\*SuperscriptBox[\(m\), \(2\)]\) \
\!\(\*SuperscriptBox[\(s\), \(-2\)]\)", 
           "unit-expressed-in-terms-of-other-SI-units" -> "J/kg"|>, 
         "dose-equivalent" -> <|
          "special-name-of-unit" -> "sievert", 
           "unit-expressed-terms-of-base-units" -> 
           "Sv=\!\(\*SuperscriptBox[\(m\), \(2\)]\) \
\!\(\*SuperscriptBox[\(s\), \(-2\)]\)", 
           "unit-expressed-in-terms-of-other-SI-units" -> "J/kg"|>, 
         "catalytic-activity" -> <|
          "special-name-of-unit" -> "katal", 
           "unit-expressed-terms-of-base-units" -> 
           "kat=mol \!\(\*SuperscriptBox[\(s\), \(-1\)]\)", 
           "unit-expressed-in-terms-of-other-SI-units" -> ""|>|>, 
       "AllowEmbedding" -> True, "InitialShape" -> 
       TypeSystem`PackageScope`HeaderShape[<|{All, 
            TypeSystem`PackageScope`KeyDummy[48]} -> 
          1, {All, "special-name-of-unit"} -> 
          1, {All, "unit-expressed-terms-of-base-units"} -> 
          1, {All, "unit-expressed-in-terms-of-other-SI-units"} -> 1|>, 
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`ColumnShape[
           TypeSystem`PackageScope`KeyValueShape[
            TypeSystem`PackageScope`AtomShape[392.00000000000006`], 
            TypeSystem`PackageScope`Limited[
             
             TypeSystem`PackageScope`RowShape[<|
              "special-name-of-unit" -> 
               TypeSystem`PackageScope`AtomShape[100.80000000000001`], 
               "unit-expressed-terms-of-base-units" -> 
               TypeSystem`PackageScope`AtomShape[560.], 
               "unit-expressed-in-terms-of-other-SI-units" -> 
               TypeSystem`PackageScope`AtomShape[44.800000000000004`]|>], 
             DirectedInfinity[1], 3, {All}]]], 20, 
          DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Assoc[
         TypeSystem`Atom[String], 
         TypeSystem`Struct[{
          "special-name-of-unit", "unit-expressed-terms-of-base-units", 
           "unit-expressed-in-terms-of-other-SI-units"}, {
           TypeSystem`Atom[String], 
           TypeSystem`Atom[String], 
           TypeSystem`Atom[String]}], 22], "Meta" -> <||>, "RowTarget" -> 20, 
       "ColumnTarget" -> 10, "Shape" -> 
       TypeSystem`PackageScope`HeaderShape[<|{All, 
            TypeSystem`PackageScope`KeyDummy[74]} -> 
          1, {All, "special-name-of-unit"} -> 
          1, {All, "unit-expressed-terms-of-base-units"} -> 
          1, {All, "unit-expressed-in-terms-of-other-SI-units"} -> 1|>, 
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`ColumnShape[
           TypeSystem`PackageScope`KeyValueShape[
            TypeSystem`PackageScope`AtomShape[392.00000000000006`], 
            TypeSystem`PackageScope`Limited[
             
             TypeSystem`PackageScope`RowShape[<|
              "special-name-of-unit" -> 
               TypeSystem`PackageScope`AtomShape[100.80000000000001`], 
               "unit-expressed-terms-of-base-units" -> 
               TypeSystem`PackageScope`AtomShape[560.], 
               "unit-expressed-in-terms-of-other-SI-units" -> 
               TypeSystem`PackageScope`AtomShape[44.800000000000004`]|>], 
             DirectedInfinity[1], 3, {All}]]], 20, 
          DirectedInfinity[1], {}]], "Type" -> TypeSystem`Assoc[
         TypeSystem`Atom[String], 
         TypeSystem`Struct[{
          "special-name-of-unit", "unit-expressed-terms-of-base-units", 
           "unit-expressed-in-terms-of-other-SI-units"}, {
           TypeSystem`Atom[String], 
           TypeSystem`Atom[String], 
           TypeSystem`Atom[String]}], 22], "Path" -> {}, "DisplayedRowCount" -> 
       20, "DisplayedColumnCount" -> 3, "DataRowCount" -> 22, 
       "DataColumnCount" -> 3, "SortPaths" -> {}, "SortDirections" -> {}, 
       "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
      TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 3, 
      TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
       TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
          Style[
           Grid[{{
              Item[
               Pane[
                Annotation[
                 Mouseover[
                  
                  Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                   Scaled[-0.15]], 
                  Graphics[{
                    GrayLevel[0.6], 
                    
                    Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
                    Rational[-1, 2]}}]}, ImageSize -> 6, BaselinePosition -> 
                   Scaled[-0.15]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 "086ed352-0582-4e9b-bd41-60f8b4ce3484"][{All, Keys}, 
                  "KeyDummy", True], "Mouse"], 
                ImageSize -> {{1, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["special-name-of-unit", 
                    Style[
                    "special-name-of-unit", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "086ed352-0582-4e9b-bd41-60f8b4ce3484"]][{
                    All, "special-name-of-unit"}, 1]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 "086ed352-0582-4e9b-bd41-60f8b4ce3484"][{
                  All, "special-name-of-unit"}, "ColumnHeader", True], 
                 "Mouse"], ImageSize -> {{1, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["unit-expressed-terms-of-base-units", 
                    Style[
                    "unit-expressed-terms-of-base-units", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "086ed352-0582-4e9b-bd41-60f8b4ce3484"]][{
                    All, "unit-expressed-terms-of-base-units"}, 1]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 "086ed352-0582-4e9b-bd41-60f8b4ce3484"][{
                  All, "unit-expressed-terms-of-base-units"}, "ColumnHeader", 
                  True], "Mouse"], ImageSize -> {{1, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["unit-expressed-in-terms-of-other-SI-units", 
                    Style[
                    "unit-expressed-in-terms-of-other-SI-units", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "086ed352-0582-4e9b-bd41-60f8b4ce3484"]][{
                    All, "unit-expressed-in-terms-of-other-SI-units"}, 1]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 "086ed352-0582-4e9b-bd41-60f8b4ce3484"][{
                  All, "unit-expressed-in-terms-of-other-SI-units"}, 
                  "ColumnHeader", True], "Mouse"], 
                ImageSize -> {{1, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
              Item[
               Pane[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["frequency", 
                    Style[
                    "frequency", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "086ed352-0582-4e9b-bd41-60f8b4ce3484"]][{
                    Key["frequency"]}, 1]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 "086ed352-0582-4e9b-bd41-60f8b4ce3484"][{
                   Key["frequency"]}, "RowHeader", False], "Mouse"], 
                ImageSize -> {{392.00000000000006`, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation["hertz", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 "086ed352-0582-4e9b-bd41-60f8b4ce3484"][{
                   Key["frequency"], 
                   Key["special-name-of-unit"]}, "Item", False], "Mouse"], 
                ImageSize -> {{100.80000000000001`, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation["Hz=\!\(\*SuperscriptBox[\(s\), \(-1\)]\)", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 "086ed352-0582-4e9b-bd41-60f8b4ce3484"][{
                   Key["frequency"], 
                   Key["unit-expressed-terms-of-base-units"]}, "Item", False],
                  "Mouse"], ImageSize -> {{560., Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation["", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 "086ed352-0582-4e9b-bd41-60f8b4ce3484"][{
                   Key["frequency"], 
                   Key["unit-expressed-in-terms-of-other-SI-units"]}, "Item", 
                  False], "Mouse"], 
                ImageSize -> {{44.800000000000004`, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["force", 
                    Style[
                    "force", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "086ed352-0582-4e9b-bd41-60f8b4ce3484"]][{
                    Key["force"]}, 1]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 "086ed352-0582-4e9b-bd41-60f8b4ce3484"][{
                   Key["force"]}, "RowHeader", False], "Mouse"], 
                ImageSize -> {{392.00000000000006`, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation["newton", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 "086ed352-0582-4e9b-bd41-60f8b4ce3484"][{
                   Key["force"], 
                   Key["special-name-of-unit"]}, "Item", False], "Mouse"], 
                ImageSize -> {{100.80000000000001`, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation["N=kg m \!\(\*SuperscriptBox[\(s\), \(-2\)]\)", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 "086ed352-0582-4e9b-bd41-60f8b4ce3484"][{
                   Key["force"], 
                   Key["unit-expressed-terms-of-base-units"]}, "Item", False],
                  "Mouse"], ImageSize -> {{560., Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation["", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 "086ed352-0582-4e9b-bd41-60f8b4ce3484"][{
                   Key["force"], 
                   Key["unit-expressed-in-terms-of-other-SI-units"]}, "Item", 
                  False], "Mouse"], 
                ImageSize -> {{44.800000000000004`, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["pressure-or-stress", 
                    Style[
                    "pressure-or-stress", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "086ed352-0582-4e9b-bd41-60f8b4ce3484"]][{
                    Key["pressure-or-stress"]}, 1]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 "086ed352-0582-4e9b-bd41-60f8b4ce3484"][{
                   Key["pressure-or-stress"]}, "RowHeader", False], "Mouse"], 
                ImageSize -> {{392.00000000000006`, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation["pascal", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 "086ed352-0582-4e9b-bd41-60f8b4ce3484"][{
                   Key["pressure-or-stress"], 
                   Key["special-name-of-unit"]}, "Item", False], "Mouse"], 
                ImageSize -> {{100.80000000000001`, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation[
                "Pa=kg \!\(\*SuperscriptBox[\(m\), \(-1\)]\) \
\!\(\*SuperscriptBox[\(s\), \(-2\)]\)", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 "086ed352-0582-4e9b-bd41-60f8b4ce3484"][{
                   Key["pressure-or-stress"], 
                   Key["unit-expressed-terms-of-base-units"]}, "Item", False],
                  "Mouse"], ImageSize -> {{560., Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation["", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 "086ed352-0582-4e9b-bd41-60f8b4ce3484"][{
                   Key["pressure-or-stress"], 
                   Key["unit-expressed-in-terms-of-other-SI-units"]}, "Item", 
                  False], "Mouse"], 
                ImageSize -> {{44.800000000000004`, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["energy-or-work-or-amount-of-heat", 
                    Style[
                    "energy-or-work-or-amount-of-heat", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "086ed352-0582-4e9b-bd41-60f8b4ce3484"]][{
                    Key["energy-or-work-or-amount-of-heat"]}, 1]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 "086ed352-0582-4e9b-bd41-60f8b4ce3484"][{
                   Key["energy-or-work-or-amount-of-heat"]}, "RowHeader", 
                  False], "Mouse"], 
                ImageSize -> {{392.00000000000006`, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation["joule", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 "086ed352-0582-4e9b-bd41-60f8b4ce3484"][{
                   Key["energy-or-work-or-amount-of-heat"], 
                   Key["special-name-of-unit"]}, "Item", False], "Mouse"], 
                ImageSize -> {{100.80000000000001`, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation[
                "J=kg \!\(\*SuperscriptBox[\(m\), \(2\)]\) \
\!\(\*SuperscriptBox[\(s\), \(-2\)]\)", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 "086ed352-0582-4e9b-bd41-60f8b4ce3484"][{
                   Key["energy-or-work-or-amount-of-heat"], 
                   Key["unit-expressed-terms-of-base-units"]}, "Item", False],
                  "Mouse"], ImageSize -> {{560., Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation["N m", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 "086ed352-0582-4e9b-bd41-60f8b4ce3484"][{
                   Key["energy-or-work-or-amount-of-heat"], 
                   Key["unit-expressed-in-terms-of-other-SI-units"]}, "Item", 
                  False], "Mouse"], 
                ImageSize -> {{44.800000000000004`, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["power-or-radiant-flux", 
                    Style[
                    "power-or-radiant-flux", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "086ed352-0582-4e9b-bd41-60f8b4ce3484"]][{
                    Key["power-or-radiant-flux"]}, 1]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 "086ed352-0582-4e9b-bd41-60f8b4ce3484"][{
                   Key["power-or-radiant-flux"]}, "RowHeader", False], 
                 "Mouse"], 
                ImageSize -> {{392.00000000000006`, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation["watt", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 "086ed352-0582-4e9b-bd41-60f8b4ce3484"][{
                   Key["power-or-radiant-flux"], 
                   Key["special-name-of-unit"]}, "Item", False], "Mouse"], 
                ImageSize -> {{100.80000000000001`, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation[
                "W=kg \!\(\*SuperscriptBox[\(m\), \(2\)]\) \
\!\(\*SuperscriptBox[\(s\), \(-3\)]\)", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 "086ed352-0582-4e9b-bd41-60f8b4ce3484"][{
                   Key["power-or-radiant-flux"], 
                   Key["unit-expressed-terms-of-base-units"]}, "Item", False],
                  "Mouse"], ImageSize -> {{560., Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation["J/s", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 "086ed352-0582-4e9b-bd41-60f8b4ce3484"][{
                   Key["power-or-radiant-flux"], 
                   Key["unit-expressed-in-terms-of-other-SI-units"]}, "Item", 
                  False], "Mouse"], 
                ImageSize -> {{44.800000000000004`, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["electric-charge", 
                    Style[
                    "electric-charge", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "086ed352-0582-4e9b-bd41-60f8b4ce3484"]][{
                    Key["electric-charge"]}, 1]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 "086ed352-0582-4e9b-bd41-60f8b4ce3484"][{
                   Key["electric-charge"]}, "RowHeader", False], "Mouse"], 
                ImageSize -> {{392.00000000000006`, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation["coulomb", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 "086ed352-0582-4e9b-bd41-60f8b4ce3484"][{
                   Key["electric-charge"], 
                   Key["special-name-of-unit"]}, "Item", False], "Mouse"], 
                ImageSize -> {{100.80000000000001`, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation["C=A s", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 "086ed352-0582-4e9b-bd41-60f8b4ce3484"][{
                   Key["electric-charge"], 
                   Key["unit-expressed-terms-of-base-units"]}, "Item", False],
                  "Mouse"], ImageSize -> {{560., Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation["", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 "086ed352-0582-4e9b-bd41-60f8b4ce3484"][{
                   Key["electric-charge"], 
                   Key["unit-expressed-in-terms-of-other-SI-units"]}, "Item", 
                  False], "Mouse"], 
                ImageSize -> {{44.800000000000004`, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["electric-potential-difference", 
                    Style[
                    "electric-potential-difference", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "086ed352-0582-4e9b-bd41-60f8b4ce3484"]][{
                    Key["electric-potential-difference"]}, 1]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 "086ed352-0582-4e9b-bd41-60f8b4ce3484"][{
                   Key["electric-potential-difference"]}, "RowHeader", False],
                  "Mouse"], 
                ImageSize -> {{392.00000000000006`, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation["volt", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 "086ed352-0582-4e9b-bd41-60f8b4ce3484"][{
                   Key["electric-potential-difference"], 
                   Key["special-name-of-unit"]}, "Item", False], "Mouse"], 
                ImageSize -> {{100.80000000000001`, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation[
                "V=kg \!\(\*SuperscriptBox[\(m\), \(2\)]\) \
\!\(\*SuperscriptBox[\(s\), \(-3\)]\) \!\(\*SuperscriptBox[\(A\), \(-1\)]\)", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 "086ed352-0582-4e9b-bd41-60f8b4ce3484"][{
                   Key["electric-potential-difference"], 
                   Key["unit-expressed-terms-of-base-units"]}, "Item", False],
                  "Mouse"], ImageSize -> {{560., Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation["W/A", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 "086ed352-0582-4e9b-bd41-60f8b4ce3484"][{
                   Key["electric-potential-difference"], 
                   Key["unit-expressed-in-terms-of-other-SI-units"]}, "Item", 
                  False], "Mouse"], 
                ImageSize -> {{44.800000000000004`, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["capacitance", 
                    Style[
                    "capacitance", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "086ed352-0582-4e9b-bd41-60f8b4ce3484"]][{
                    Key["capacitance"]}, 1]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 "086ed352-0582-4e9b-bd41-60f8b4ce3484"][{
                   Key["capacitance"]}, "RowHeader", False], "Mouse"], 
                ImageSize -> {{392.00000000000006`, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation["farad", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 "086ed352-0582-4e9b-bd41-60f8b4ce3484"][{
                   Key["capacitance"], 
                   Key["special-name-of-unit"]}, "Item", False], "Mouse"], 
                ImageSize -> {{100.80000000000001`, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation[
                "F=\!\(\*SuperscriptBox[\(kg\), \(-1\)]\) \
\!\(\*SuperscriptBox[\(m\), \(-2\)]\) \!\(\*SuperscriptBox[\(s\), \(4\)]\) \!\
\(\*SuperscriptBox[\(A\), \(2\)]\)", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 "086ed352-0582-4e9b-bd41-60f8b4ce3484"][{
                   Key["capacitance"], 
                   Key["unit-expressed-terms-of-base-units"]}, "Item", False],
                  "Mouse"], ImageSize -> {{560., Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation["C/V", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 "086ed352-0582-4e9b-bd41-60f8b4ce3484"][{
                   Key["capacitance"], 
                   Key["unit-expressed-in-terms-of-other-SI-units"]}, "Item", 
                  False], "Mouse"], 
                ImageSize -> {{44.800000000000004`, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["electric-resistance", 
                    Style[
                    "electric-resistance", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "086ed352-0582-4e9b-bd41-60f8b4ce3484"]][{
                    Key["electric-resistance"]}, 1]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 "086ed352-0582-4e9b-bd41-60f8b4ce3484"][{
                   Key["electric-resistance"]}, "RowHeader", False], "Mouse"],
                 ImageSize -> {{392.00000000000006`, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation["ohm", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 "086ed352-0582-4e9b-bd41-60f8b4ce3484"][{
                   Key["electric-resistance"], 
                   Key["special-name-of-unit"]}, "Item", False], "Mouse"], 
                ImageSize -> {{100.80000000000001`, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation[
                "\[CapitalOmega]=kg \!\(\*SuperscriptBox[\(m\), \(2\)]\) \!\(\
\*SuperscriptBox[\(s\), \(-3\)]\) \!\(\*SuperscriptBox[\(A\), \(-2\)]\)", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 "086ed352-0582-4e9b-bd41-60f8b4ce3484"][{
                   Key["electric-resistance"], 
                   Key["unit-expressed-terms-of-base-units"]}, "Item", False],
                  "Mouse"], ImageSize -> {{560., Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation["V/A", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 "086ed352-0582-4e9b-bd41-60f8b4ce3484"][{
                   Key["electric-resistance"], 
                   Key["unit-expressed-in-terms-of-other-SI-units"]}, "Item", 
                  False], "Mouse"], 
                ImageSize -> {{44.800000000000004`, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["electric-conductance", 
                    Style[
                    "electric-conductance", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "086ed352-0582-4e9b-bd41-60f8b4ce3484"]][{
                    Key["electric-conductance"]}, 1]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 "086ed352-0582-4e9b-bd41-60f8b4ce3484"][{
                   Key["electric-conductance"]}, "RowHeader", False], 
                 "Mouse"], 
                ImageSize -> {{392.00000000000006`, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation["siemens", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 "086ed352-0582-4e9b-bd41-60f8b4ce3484"][{
                   Key["electric-conductance"], 
                   Key["special-name-of-unit"]}, "Item", False], "Mouse"], 
                ImageSize -> {{100.80000000000001`, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation[
                "S=\!\(\*SuperscriptBox[\(kg\), \(-1\)]\) \
\!\(\*SuperscriptBox[\(m\), \(-2\)]\) \!\(\*SuperscriptBox[\(s\), \(3\)]\) \!\
\(\*SuperscriptBox[\(A\), \(2\)]\)", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 "086ed352-0582-4e9b-bd41-60f8b4ce3484"][{
                   Key["electric-conductance"], 
                   Key["unit-expressed-terms-of-base-units"]}, "Item", False],
                  "Mouse"], ImageSize -> {{560., Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation["A/V", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 "086ed352-0582-4e9b-bd41-60f8b4ce3484"][{
                   Key["electric-conductance"], 
                   Key["unit-expressed-in-terms-of-other-SI-units"]}, "Item", 
                  False], "Mouse"], 
                ImageSize -> {{44.800000000000004`, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["magnetic-flux", 
                    Style[
                    "magnetic-flux", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "086ed352-0582-4e9b-bd41-60f8b4ce3484"]][{
                    Key["magnetic-flux"]}, 1]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 "086ed352-0582-4e9b-bd41-60f8b4ce3484"][{
                   Key["magnetic-flux"]}, "RowHeader", False], "Mouse"], 
                ImageSize -> {{392.00000000000006`, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation["weber", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 "086ed352-0582-4e9b-bd41-60f8b4ce3484"][{
                   Key["magnetic-flux"], 
                   Key["special-name-of-unit"]}, "Item", False], "Mouse"], 
                ImageSize -> {{100.80000000000001`, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation[
                "Wb=kg \!\(\*SuperscriptBox[\(m\), \(2\)]\) \
\!\(\*SuperscriptBox[\(s\), \(-2\)]\) \!\(\*SuperscriptBox[\(A\), \(-1\)]\)", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 "086ed352-0582-4e9b-bd41-60f8b4ce3484"][{
                   Key["magnetic-flux"], 
                   Key["unit-expressed-terms-of-base-units"]}, "Item", False],
                  "Mouse"], ImageSize -> {{560., Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation["V s", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 "086ed352-0582-4e9b-bd41-60f8b4ce3484"][{
                   Key["magnetic-flux"], 
                   Key["unit-expressed-in-terms-of-other-SI-units"]}, "Item", 
                  False], "Mouse"], 
                ImageSize -> {{44.800000000000004`, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["magnetic-flux-density", 
                    Style[
                    "magnetic-flux-density", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "086ed352-0582-4e9b-bd41-60f8b4ce3484"]][{
                    Key["magnetic-flux-density"]}, 1]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 "086ed352-0582-4e9b-bd41-60f8b4ce3484"][{
                   Key["magnetic-flux-density"]}, "RowHeader", False], 
                 "Mouse"], 
                ImageSize -> {{392.00000000000006`, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation["tesla", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 "086ed352-0582-4e9b-bd41-60f8b4ce3484"][{
                   Key["magnetic-flux-density"], 
                   Key["special-name-of-unit"]}, "Item", False], "Mouse"], 
                ImageSize -> {{100.80000000000001`, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation[
                "T=kg \!\(\*SuperscriptBox[\(s\), \(-2\)]\) \
\!\(\*SuperscriptBox[\(A\), \(-1\)]\)", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 "086ed352-0582-4e9b-bd41-60f8b4ce3484"][{
                   Key["magnetic-flux-density"], 
                   Key["unit-expressed-terms-of-base-units"]}, "Item", False],
                  "Mouse"], ImageSize -> {{560., Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation["Wb/\!\(\*SuperscriptBox[\(m\), \(2\)]\)", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 "086ed352-0582-4e9b-bd41-60f8b4ce3484"][{
                   Key["magnetic-flux-density"], 
                   Key["unit-expressed-in-terms-of-other-SI-units"]}, "Item", 
                  False], "Mouse"], 
                ImageSize -> {{44.800000000000004`, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["inductance", 
                    Style[
                    "inductance", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "086ed352-0582-4e9b-bd41-60f8b4ce3484"]][{
                    Key["inductance"]}, 1]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 "086ed352-0582-4e9b-bd41-60f8b4ce3484"][{
                   Key["inductance"]}, "RowHeader", False], "Mouse"], 
                ImageSize -> {{392.00000000000006`, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation["henry", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 "086ed352-0582-4e9b-bd41-60f8b4ce3484"][{
                   Key["inductance"], 
                   Key["special-name-of-unit"]}, "Item", False], "Mouse"], 
                ImageSize -> {{100.80000000000001`, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation[
                "H=kg \!\(\*SuperscriptBox[\(m\), \(2\)]\) \
\!\(\*SuperscriptBox[\(s\), \(-2\)]\) \!\(\*SuperscriptBox[\(A\), \(-2\)]\)", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 "086ed352-0582-4e9b-bd41-60f8b4ce3484"][{
                   Key["inductance"], 
                   Key["unit-expressed-terms-of-base-units"]}, "Item", False],
                  "Mouse"], ImageSize -> {{560., Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation["Wb/A", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 "086ed352-0582-4e9b-bd41-60f8b4ce3484"][{
                   Key["inductance"], 
                   Key["unit-expressed-in-terms-of-other-SI-units"]}, "Item", 
                  False], "Mouse"], 
                ImageSize -> {{44.800000000000004`, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["Celsius-temperature", 
                    Style[
                    "Celsius-temperature", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "086ed352-0582-4e9b-bd41-60f8b4ce3484"]][{
                    Key["Celsius-temperature"]}, 1]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 "086ed352-0582-4e9b-bd41-60f8b4ce3484"][{
                   Key["Celsius-temperature"]}, "RowHeader", False], "Mouse"],
                 ImageSize -> {{392.00000000000006`, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation["degree Celsius", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 "086ed352-0582-4e9b-bd41-60f8b4ce3484"][{
                   Key["Celsius-temperature"], 
                   Key["special-name-of-unit"]}, "Item", False], "Mouse"], 
                ImageSize -> {{100.80000000000001`, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation["\[Degree]C=K", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 "086ed352-0582-4e9b-bd41-60f8b4ce3484"][{
                   Key["Celsius-temperature"], 
                   Key["unit-expressed-terms-of-base-units"]}, "Item", False],
                  "Mouse"], ImageSize -> {{560., Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation["", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 "086ed352-0582-4e9b-bd41-60f8b4ce3484"][{
                   Key["Celsius-temperature"], 
                   Key["unit-expressed-in-terms-of-other-SI-units"]}, "Item", 
                  False], "Mouse"], 
                ImageSize -> {{44.800000000000004`, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["luminous-flux", 
                    Style[
                    "luminous-flux", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "086ed352-0582-4e9b-bd41-60f8b4ce3484"]][{
                    Key["luminous-flux"]}, 1]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 "086ed352-0582-4e9b-bd41-60f8b4ce3484"][{
                   Key["luminous-flux"]}, "RowHeader", False], "Mouse"], 
                ImageSize -> {{392.00000000000006`, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation["lumen", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 "086ed352-0582-4e9b-bd41-60f8b4ce3484"][{
                   Key["luminous-flux"], 
                   Key["special-name-of-unit"]}, "Item", False], "Mouse"], 
                ImageSize -> {{100.80000000000001`, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation["lm=cd sr", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 "086ed352-0582-4e9b-bd41-60f8b4ce3484"][{
                   Key["luminous-flux"], 
                   Key["unit-expressed-terms-of-base-units"]}, "Item", False],
                  "Mouse"], ImageSize -> {{560., Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation["", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 "086ed352-0582-4e9b-bd41-60f8b4ce3484"][{
                   Key["luminous-flux"], 
                   Key["unit-expressed-in-terms-of-other-SI-units"]}, "Item", 
                  False], "Mouse"], 
                ImageSize -> {{44.800000000000004`, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["illuminance", 
                    Style[
                    "illuminance", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "086ed352-0582-4e9b-bd41-60f8b4ce3484"]][{
                    Key["illuminance"]}, 1]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 "086ed352-0582-4e9b-bd41-60f8b4ce3484"][{
                   Key["illuminance"]}, "RowHeader", False], "Mouse"], 
                ImageSize -> {{392.00000000000006`, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation["lux", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 "086ed352-0582-4e9b-bd41-60f8b4ce3484"][{
                   Key["illuminance"], 
                   Key["special-name-of-unit"]}, "Item", False], "Mouse"], 
                ImageSize -> {{100.80000000000001`, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation["lx=cd sr \!\(\*SuperscriptBox[\(m\), \(-2\)]\)", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 "086ed352-0582-4e9b-bd41-60f8b4ce3484"][{
                   Key["illuminance"], 
                   Key["unit-expressed-terms-of-base-units"]}, "Item", False],
                  "Mouse"], ImageSize -> {{560., Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation["lm/\!\(\*SuperscriptBox[\(m\), \(2\)]\)", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 "086ed352-0582-4e9b-bd41-60f8b4ce3484"][{
                   Key["illuminance"], 
                   Key["unit-expressed-in-terms-of-other-SI-units"]}, "Item", 
                  False], "Mouse"], 
                ImageSize -> {{44.800000000000004`, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["activity-referred-to-a-radionuclide", 
                    Style[
                    "activity-referred-to-a-radionuclide", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "086ed352-0582-4e9b-bd41-60f8b4ce3484"]][{
                    Key["activity-referred-to-a-radionuclide"]}, 1]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 "086ed352-0582-4e9b-bd41-60f8b4ce3484"][{
                   Key["activity-referred-to-a-radionuclide"]}, "RowHeader", 
                  False], "Mouse"], 
                ImageSize -> {{392.00000000000006`, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation["becquerel", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 "086ed352-0582-4e9b-bd41-60f8b4ce3484"][{
                   Key["activity-referred-to-a-radionuclide"], 
                   Key["special-name-of-unit"]}, "Item", False], "Mouse"], 
                ImageSize -> {{100.80000000000001`, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation["Bq=\!\(\*SuperscriptBox[\(s\), \(-1\)]\)", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 "086ed352-0582-4e9b-bd41-60f8b4ce3484"][{
                   Key["activity-referred-to-a-radionuclide"], 
                   Key["unit-expressed-terms-of-base-units"]}, "Item", False],
                  "Mouse"], ImageSize -> {{560., Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation["", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 "086ed352-0582-4e9b-bd41-60f8b4ce3484"][{
                   Key["activity-referred-to-a-radionuclide"], 
                   Key["unit-expressed-in-terms-of-other-SI-units"]}, "Item", 
                  False], "Mouse"], 
                ImageSize -> {{44.800000000000004`, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["absorbed-dose-or-kerma", 
                    Style[
                    "absorbed-dose-or-kerma", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "086ed352-0582-4e9b-bd41-60f8b4ce3484"]][{
                    Key["absorbed-dose-or-kerma"]}, 1]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 "086ed352-0582-4e9b-bd41-60f8b4ce3484"][{
                   Key["absorbed-dose-or-kerma"]}, "RowHeader", False], 
                 "Mouse"], 
                ImageSize -> {{392.00000000000006`, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation["gray", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 "086ed352-0582-4e9b-bd41-60f8b4ce3484"][{
                   Key["absorbed-dose-or-kerma"], 
                   Key["special-name-of-unit"]}, "Item", False], "Mouse"], 
                ImageSize -> {{100.80000000000001`, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation[
                "Gy=\!\(\*SuperscriptBox[\(m\), \(2\)]\) \
\!\(\*SuperscriptBox[\(s\), \(-2\)]\)", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 "086ed352-0582-4e9b-bd41-60f8b4ce3484"][{
                   Key["absorbed-dose-or-kerma"], 
                   Key["unit-expressed-terms-of-base-units"]}, "Item", False],
                  "Mouse"], ImageSize -> {{560., Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation["J/kg", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 "086ed352-0582-4e9b-bd41-60f8b4ce3484"][{
                   Key["absorbed-dose-or-kerma"], 
                   Key["unit-expressed-in-terms-of-other-SI-units"]}, "Item", 
                  False], "Mouse"], 
                ImageSize -> {{44.800000000000004`, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["dose-equivalent", 
                    Style[
                    "dose-equivalent", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "086ed352-0582-4e9b-bd41-60f8b4ce3484"]][{
                    Key["dose-equivalent"]}, 1]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 "086ed352-0582-4e9b-bd41-60f8b4ce3484"][{
                   Key["dose-equivalent"]}, "RowHeader", False], "Mouse"], 
                ImageSize -> {{392.00000000000006`, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation["sievert", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 "086ed352-0582-4e9b-bd41-60f8b4ce3484"][{
                   Key["dose-equivalent"], 
                   Key["special-name-of-unit"]}, "Item", False], "Mouse"], 
                ImageSize -> {{100.80000000000001`, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation[
                "Sv=\!\(\*SuperscriptBox[\(m\), \(2\)]\) \
\!\(\*SuperscriptBox[\(s\), \(-2\)]\)", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 "086ed352-0582-4e9b-bd41-60f8b4ce3484"][{
                   Key["dose-equivalent"], 
                   Key["unit-expressed-terms-of-base-units"]}, "Item", False],
                  "Mouse"], ImageSize -> {{560., Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation["J/kg", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 "086ed352-0582-4e9b-bd41-60f8b4ce3484"][{
                   Key["dose-equivalent"], 
                   Key["unit-expressed-in-terms-of-other-SI-units"]}, "Item", 
                  False], "Mouse"], 
                ImageSize -> {{44.800000000000004`, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["catalytic-activity", 
                    Style[
                    "catalytic-activity", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "086ed352-0582-4e9b-bd41-60f8b4ce3484"]][{
                    Key["catalytic-activity"]}, 1]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 "086ed352-0582-4e9b-bd41-60f8b4ce3484"][{
                   Key["catalytic-activity"]}, "RowHeader", False], "Mouse"], 
                ImageSize -> {{392.00000000000006`, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation["katal", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 "086ed352-0582-4e9b-bd41-60f8b4ce3484"][{
                   Key["catalytic-activity"], 
                   Key["special-name-of-unit"]}, "Item", False], "Mouse"], 
                ImageSize -> {{100.80000000000001`, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation["kat=mol \!\(\*SuperscriptBox[\(s\), \(-1\)]\)", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 "086ed352-0582-4e9b-bd41-60f8b4ce3484"][{
                   Key["catalytic-activity"], 
                   Key["unit-expressed-terms-of-base-units"]}, "Item", False],
                  "Mouse"], ImageSize -> {{560., Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation["", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 "086ed352-0582-4e9b-bd41-60f8b4ce3484"][{
                   Key["catalytic-activity"], 
                   Key["unit-expressed-in-terms-of-other-SI-units"]}, "Item", 
                  False], "Mouse"], 
                ImageSize -> {{44.800000000000004`, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Deploy[
                Pane[
                 Row[{
                   Spacer[2], 
                   Style[
                    Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + (-20) 
                    If[True, 22, 1], {1, 22 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "086ed352-0582-4e9b-bd41-60f8b4ce3484"], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + (-20) 
                    If[False, 22, 1], {1, 22 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "086ed352-0582-4e9b-bd41-60f8b4ce3484"], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], " ", 
                    Style[
                    Mouseover[
                    Style[
                    Row[{"rows ", 3, "\[Dash]", 22, " of ", 
                    Style[22, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    Style[
                    Row[{"rows ", 3, "\[Dash]", 22, " of ", 
                    Style[22, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "086ed352-0582-4e9b-bd41-60f8b4ce3484"}, "Rows", 1, {}]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "086ed352-0582-4e9b-bd41-60f8b4ce3484"}, "Rows", 10, {}]],
                     MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "086ed352-0582-4e9b-bd41-60f8b4ce3484"}, "Rows", 30, {}]],
                     MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "086ed352-0582-4e9b-bd41-60f8b4ce3484"}, "Rows", 
                    100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "086ed352-0582-4e9b-bd41-60f8b4ce3484"}, "Rows", 
                    100000000, {}]], MenuEvaluator -> Automatic]}], " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[False, 22, 1], {1, 22 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "086ed352-0582-4e9b-bd41-60f8b4ce3484"], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[True, 22, 1], {1, 22 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "086ed352-0582-4e9b-bd41-60f8b4ce3484"], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None]}], ContextMenu -> {}]}], 
                 ImageMargins -> {{0, -1}, {-1, 1}}]], Background -> 
               RGBColor[
                0.9764705882352941, 0.9764705882352941, 0.9764705882352941], 
               Alignment -> {Left, Top}], SpanFromLeft, SpanFromLeft, 
              SpanFromLeft}}, 
            BaseStyle -> {
             ContextMenu -> 
              Dynamic[TypeSystem`NestedGrid`PackagePrivate`$\
contextMenuTrigger; 
                Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                  "086ed352-0582-4e9b-bd41-60f8b4ce3484", {}, 
                  TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                  TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                   True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                   TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                  TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                   Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "086ed352-0582-4e9b-bd41-60f8b4ce3484"]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "086ed352-0582-4e9b-bd41-60f8b4ce3484"]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "086ed352-0582-4e9b-bd41-60f8b4ce3484"][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "086ed352-0582-4e9b-bd41-60f8b4ce3484"][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "086ed352-0582-4e9b-bd41-60f8b4ce3484"][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
              "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, 
            Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
            Spacings -> {0, 0}, Alignment -> Left, 
            BaseStyle -> {
             FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
              Plain}], LineBreakWithin -> False, ContextMenu -> {}, 
           NumberMarks -> False, ShowAutoStyles -> False]], 
        TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
       Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
        TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
           Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
           
           Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
             TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
             TypeSystem`NestedGrid`PackagePrivate`datasetData[
              TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
               FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
               TypeSystem`NestedGrid`PackagePrivate`renderGrid[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                "086ed352-0582-4e9b-bd41-60f8b4ce3484"][
               TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
              Not[
               FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
              TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
              TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
         TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
         TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
           FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
           TypeSystem`SparseGrid[
            TypeSystem`H["(data no longer present)"]], 
           TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
        TrackedSymbols :> {
         TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
          TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
       DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
       TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
        TypeSystem`PackageScope`SubViewPathbar[
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
         TypeSystem`NestedGrid`PackagePrivate`updateState[
         TypeSystem`NestedGrid`PackagePrivate`$state$$, 
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
          TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
          TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
       TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
       Framed[
        Dynamic[
         Replace[
         TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
             TypeSystem`NestedGrid`PackagePrivate`localHold[
             TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
             Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
             TypeSystem`NestedGrid`PackagePrivate`localHold[
             TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
              Blank[]], 
             Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
              Blank[]], 
             Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
              Blank[]]] :> (
            Increment[
             TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path$; 
            TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
             TypeSystem`NestedGrid`PackagePrivate`pathType$; 
            TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
             TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
            TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
             TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path$, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           Spacer[10], Blank[] :> Spacer[10]}], 
         TrackedSymbols :> {
          TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
        FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
        Top, ImageSize -> {Automatic, 15}], FontSize -> 1], 
      TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
      DynamicWrapperBox[
       DynamicBox[ToBoxes[
         Dataset`DatasetContent[
         2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
          "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], 
          "State" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
          "VPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], 
          "HPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], 
          "TopBar" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
          "BottomBar" -> 
          Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
          Hold[
            TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
        ImageSizeCache->{1149., {299.6340332872234, 305.3659667127766}},
        TrackedSymbols:>{
         TypeSystem`NestedGrid`PackagePrivate`$state$$, 
          TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
       MouseAnnotation[],
       ImageSizeCache->{1149., {299.6340332872234, 305.3659667127766}}],
      BaseStyle->{LineBreakWithin -> False},
      DynamicModuleValues:>{},
      Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
       CreateUUID[]),
      UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
     Deploy,
     DefaultBaseStyle->"Deploy"],
    Dataset`InterpretDataset[1],
    Editable->False,
    SelectWithContents->True,
    Selectable->False]}], ";"}]], "Input",
 CellChangeTimes->{{3.874937443917279*^9, 3.8749374473843946`*^9}},
 CellLabel->"In[297]:=",
 CellID->364727067,ExpressionUUID->"3aa6a21e-50ab-44b4-9fe7-a44a80be4a72"],

Cell[BoxData[
 RowBox[{
  RowBox[{"coherentDerivedUnits", "=", 
   TagBox[
    TagBox[
     DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
      "InitialData" -> <|
        "area" -> <|
          "typical-symbol" -> "A", 
           "derived-unit-expressed-in-terms-of-base-units" -> 
           "\!\(\*SuperscriptBox[\(m\), \(2\)]\)"|>, 
         "volume" -> <|
          "typical-symbol" -> "V", 
           "derived-unit-expressed-in-terms-of-base-units" -> 
           "\!\(\*SuperscriptBox[\(m\), \(3\)]\)"|>, 
         "speed-or-velocity" -> <|
          "typical-symbol" -> "v", 
           "derived-unit-expressed-in-terms-of-base-units" -> 
           "m \!\(\*SuperscriptBox[\(s\), \(-1\)]\)"|>, 
         "acceleration" -> <|
          "typical-symbol" -> "a", 
           "derived-unit-expressed-in-terms-of-base-units" -> 
           "m \!\(\*SuperscriptBox[\(s\), \(-2\)]\)"|>, 
         "wavenumber" -> <|
          "typical-symbol" -> "\[Sigma]", 
           "derived-unit-expressed-in-terms-of-base-units" -> 
           "\!\(\*SuperscriptBox[\(m\), \(-1\)]\)"|>, 
         "density-or-mass-density" -> <|
          "typical-symbol" -> "\[Rho]", 
           "derived-unit-expressed-in-terms-of-base-units" -> 
           "kg \!\(\*SuperscriptBox[\(m\), \(-3\)]\)"|>, 
         "surface-density" -> <|
          "typical-symbol" -> "\!\(\*SubscriptBox[\(\[Rho]\), \(A\)]\)", 
           "derived-unit-expressed-in-terms-of-base-units" -> 
           "kg \!\(\*SuperscriptBox[\(m\), \(-2\)]\)"|>, 
         "specific-volume" -> <|
          "typical-symbol" -> "\[Nu]", 
           "derived-unit-expressed-in-terms-of-base-units" -> 
           "\!\(\*SuperscriptBox[\(m\), \(3\)]\) \!\(\*SuperscriptBox[\(kg\), \
\(-1\)]\)"|>, 
         "current-density" -> <|
          "typical-symbol" -> "j", 
           "derived-unit-expressed-in-terms-of-base-units" -> 
           "A \!\(\*SuperscriptBox[\(m\), \(-2\)]\)"|>, 
         "magnetic-field-strength" -> <|
          "typical-symbol" -> "H", 
           "derived-unit-expressed-in-terms-of-base-units" -> 
           "A \!\(\*SuperscriptBox[\(m\), \(-1\)]\)"|>, 
         "amount-of-substance-concentration" -> <|
          "typical-symbol" -> "c", 
           "derived-unit-expressed-in-terms-of-base-units" -> 
           "mol \!\(\*SuperscriptBox[\(m\), \(-3\)]\)"|>, 
         "mass-concentration" -> <|
          "typical-symbol" -> "\[Rho]-or-\[Gamma]", 
           "derived-unit-expressed-in-terms-of-base-units" -> 
           "kg \!\(\*SuperscriptBox[\(m\), \(-3\)]\)"|>, 
         "luminance" -> <|
          "typical-symbol" -> "\!\(\*SubscriptBox[\(L\), \(v\)]\)", 
           "derived-unit-expressed-in-terms-of-base-units" -> 
           "cd \!\(\*SuperscriptBox[\(m\), \(-2\)]\)"|>|>, "AllowEmbedding" -> 
       True, "InitialShape" -> TypeSystem`PackageScope`HeaderShape[<|{All, 
            TypeSystem`PackageScope`KeyDummy[49]} -> 
          1, {All, "typical-symbol"} -> 
          1, {All, "derived-unit-expressed-in-terms-of-base-units"} -> 1|>, 
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`ColumnShape[
           TypeSystem`PackageScope`KeyValueShape[
            TypeSystem`PackageScope`AtomShape[257.6], 
            TypeSystem`PackageScope`Limited[
             
             TypeSystem`PackageScope`RowShape[<|
              "typical-symbol" -> 
               TypeSystem`PackageScope`AtomShape[291.20000000000005`], 
               "derived-unit-expressed-in-terms-of-base-units" -> 
               TypeSystem`PackageScope`AtomShape[560.]|>], 
             DirectedInfinity[1], 2, {All}]]], 13, 
          DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Assoc[
         TypeSystem`Atom[String], 
         TypeSystem`Struct[{
          "typical-symbol", "derived-unit-expressed-in-terms-of-base-units"}, {
           TypeSystem`Atom[String], 
           TypeSystem`Atom[String]}], 13], "Meta" -> <||>, "RowTarget" -> 20, 
       "ColumnTarget" -> 10, "Shape" -> 
       TypeSystem`PackageScope`HeaderShape[<|{All, 
            TypeSystem`PackageScope`KeyDummy[49]} -> 
          1, {All, "typical-symbol"} -> 
          1, {All, "derived-unit-expressed-in-terms-of-base-units"} -> 1|>, 
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`ColumnShape[
           TypeSystem`PackageScope`KeyValueShape[
            TypeSystem`PackageScope`AtomShape[257.6], 
            TypeSystem`PackageScope`Limited[
             
             TypeSystem`PackageScope`RowShape[<|
              "typical-symbol" -> 
               TypeSystem`PackageScope`AtomShape[291.20000000000005`], 
               "derived-unit-expressed-in-terms-of-base-units" -> 
               TypeSystem`PackageScope`AtomShape[560.]|>], 
             DirectedInfinity[1], 2, {All}]]], 13, 
          DirectedInfinity[1], {}]], "Type" -> TypeSystem`Assoc[
         TypeSystem`Atom[String], 
         TypeSystem`Struct[{
          "typical-symbol", "derived-unit-expressed-in-terms-of-base-units"}, {
           TypeSystem`Atom[String], 
           TypeSystem`Atom[String]}], 13], "Path" -> {}, "DisplayedRowCount" -> 
       13, "DisplayedColumnCount" -> 2, "DataRowCount" -> 13, 
       "DataColumnCount" -> 2, "SortPaths" -> {}, "SortDirections" -> {}, 
       "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
      TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
       TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
          Style[
           Grid[{{
              Item[
               Pane[
                Annotation[
                 Mouseover[
                  
                  Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                   Scaled[-0.15]], 
                  Graphics[{
                    GrayLevel[0.6], 
                    
                    Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
                    Rational[-1, 2]}}]}, ImageSize -> 6, BaselinePosition -> 
                   Scaled[-0.15]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                  All, Keys}, "KeyDummy", True], "Mouse"], 
                ImageSize -> {{1, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["typical-symbol", 
                    Style[
                    "typical-symbol", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "typical-symbol"}, 1]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                  All, "typical-symbol"}, "ColumnHeader", True], "Mouse"], 
                ImageSize -> {{1, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["derived-unit-expressed-in-terms-of-base-units", 
                    Style[
                    "derived-unit-expressed-in-terms-of-base-units", 
                    FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "derived-unit-expressed-in-terms-of-base-units"}, 
                    1]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                  All, "derived-unit-expressed-in-terms-of-base-units"}, 
                  "ColumnHeader", True], "Mouse"], 
                ImageSize -> {{1, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
              Item[
               Pane[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["area", 
                    Style[
                    "area", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["area"]}, 1]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["area"]}, "RowHeader", False], "Mouse"], 
                ImageSize -> {{257.6, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation["A", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["area"], 
                   Key["typical-symbol"]}, "Item", False], "Mouse"], 
                ImageSize -> {{291.20000000000005`, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation["\!\(\*SuperscriptBox[\(m\), \(2\)]\)", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["area"], 
                   Key["derived-unit-expressed-in-terms-of-base-units"]}, 
                  "Item", False], "Mouse"], 
                ImageSize -> {{560., Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["volume", 
                    Style[
                    "volume", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["volume"]}, 1]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["volume"]}, "RowHeader", False], "Mouse"], 
                ImageSize -> {{257.6, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation["V", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["volume"], 
                   Key["typical-symbol"]}, "Item", False], "Mouse"], 
                ImageSize -> {{291.20000000000005`, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation["\!\(\*SuperscriptBox[\(m\), \(3\)]\)", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["volume"], 
                   Key["derived-unit-expressed-in-terms-of-base-units"]}, 
                  "Item", False], "Mouse"], 
                ImageSize -> {{560., Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["speed-or-velocity", 
                    Style[
                    "speed-or-velocity", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["speed-or-velocity"]}, 1]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["speed-or-velocity"]}, "RowHeader", False], "Mouse"], 
                ImageSize -> {{257.6, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation["v", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["speed-or-velocity"], 
                   Key["typical-symbol"]}, "Item", False], "Mouse"], 
                ImageSize -> {{291.20000000000005`, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation["m \!\(\*SuperscriptBox[\(s\), \(-1\)]\)", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["speed-or-velocity"], 
                   Key["derived-unit-expressed-in-terms-of-base-units"]}, 
                  "Item", False], "Mouse"], 
                ImageSize -> {{560., Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["acceleration", 
                    Style[
                    "acceleration", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["acceleration"]}, 1]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["acceleration"]}, "RowHeader", False], "Mouse"], 
                ImageSize -> {{257.6, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation["a", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["acceleration"], 
                   Key["typical-symbol"]}, "Item", False], "Mouse"], 
                ImageSize -> {{291.20000000000005`, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation["m \!\(\*SuperscriptBox[\(s\), \(-2\)]\)", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["acceleration"], 
                   Key["derived-unit-expressed-in-terms-of-base-units"]}, 
                  "Item", False], "Mouse"], 
                ImageSize -> {{560., Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["wavenumber", 
                    Style[
                    "wavenumber", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["wavenumber"]}, 1]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["wavenumber"]}, "RowHeader", False], "Mouse"], 
                ImageSize -> {{257.6, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation["\[Sigma]", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["wavenumber"], 
                   Key["typical-symbol"]}, "Item", False], "Mouse"], 
                ImageSize -> {{291.20000000000005`, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation["\!\(\*SuperscriptBox[\(m\), \(-1\)]\)", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["wavenumber"], 
                   Key["derived-unit-expressed-in-terms-of-base-units"]}, 
                  "Item", False], "Mouse"], 
                ImageSize -> {{560., Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["density-or-mass-density", 
                    Style[
                    "density-or-mass-density", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["density-or-mass-density"]}, 1]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["density-or-mass-density"]}, "RowHeader", False], 
                 "Mouse"], ImageSize -> {{257.6, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation["\[Rho]", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["density-or-mass-density"], 
                   Key["typical-symbol"]}, "Item", False], "Mouse"], 
                ImageSize -> {{291.20000000000005`, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation["kg \!\(\*SuperscriptBox[\(m\), \(-3\)]\)", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["density-or-mass-density"], 
                   Key["derived-unit-expressed-in-terms-of-base-units"]}, 
                  "Item", False], "Mouse"], 
                ImageSize -> {{560., Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["surface-density", 
                    Style[
                    "surface-density", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["surface-density"]}, 1]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["surface-density"]}, "RowHeader", False], "Mouse"], 
                ImageSize -> {{257.6, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation["\!\(\*SubscriptBox[\(\[Rho]\), \(A\)]\)", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["surface-density"], 
                   Key["typical-symbol"]}, "Item", False], "Mouse"], 
                ImageSize -> {{291.20000000000005`, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation["kg \!\(\*SuperscriptBox[\(m\), \(-2\)]\)", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["surface-density"], 
                   Key["derived-unit-expressed-in-terms-of-base-units"]}, 
                  "Item", False], "Mouse"], 
                ImageSize -> {{560., Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["specific-volume", 
                    Style[
                    "specific-volume", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["specific-volume"]}, 1]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["specific-volume"]}, "RowHeader", False], "Mouse"], 
                ImageSize -> {{257.6, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation["\[Nu]", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["specific-volume"], 
                   Key["typical-symbol"]}, "Item", False], "Mouse"], 
                ImageSize -> {{291.20000000000005`, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation[
                "\!\(\*SuperscriptBox[\(m\), \(3\)]\) \
\!\(\*SuperscriptBox[\(kg\), \(-1\)]\)", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["specific-volume"], 
                   Key["derived-unit-expressed-in-terms-of-base-units"]}, 
                  "Item", False], "Mouse"], 
                ImageSize -> {{560., Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["current-density", 
                    Style[
                    "current-density", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["current-density"]}, 1]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["current-density"]}, "RowHeader", False], "Mouse"], 
                ImageSize -> {{257.6, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation["j", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["current-density"], 
                   Key["typical-symbol"]}, "Item", False], "Mouse"], 
                ImageSize -> {{291.20000000000005`, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation["A \!\(\*SuperscriptBox[\(m\), \(-2\)]\)", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["current-density"], 
                   Key["derived-unit-expressed-in-terms-of-base-units"]}, 
                  "Item", False], "Mouse"], 
                ImageSize -> {{560., Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["magnetic-field-strength", 
                    Style[
                    "magnetic-field-strength", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["magnetic-field-strength"]}, 1]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["magnetic-field-strength"]}, "RowHeader", False], 
                 "Mouse"], ImageSize -> {{257.6, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation["H", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["magnetic-field-strength"], 
                   Key["typical-symbol"]}, "Item", False], "Mouse"], 
                ImageSize -> {{291.20000000000005`, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation["A \!\(\*SuperscriptBox[\(m\), \(-1\)]\)", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["magnetic-field-strength"], 
                   Key["derived-unit-expressed-in-terms-of-base-units"]}, 
                  "Item", False], "Mouse"], 
                ImageSize -> {{560., Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["amount-of-substance-concentration", 
                    Style[
                    "amount-of-substance-concentration", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["amount-of-substance-concentration"]}, 1]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["amount-of-substance-concentration"]}, "RowHeader", 
                  False], "Mouse"], ImageSize -> {{257.6, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation["c", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["amount-of-substance-concentration"], 
                   Key["typical-symbol"]}, "Item", False], "Mouse"], 
                ImageSize -> {{291.20000000000005`, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation["mol \!\(\*SuperscriptBox[\(m\), \(-3\)]\)", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["amount-of-substance-concentration"], 
                   Key["derived-unit-expressed-in-terms-of-base-units"]}, 
                  "Item", False], "Mouse"], 
                ImageSize -> {{560., Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["mass-concentration", 
                    Style[
                    "mass-concentration", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["mass-concentration"]}, 1]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["mass-concentration"]}, "RowHeader", False], "Mouse"], 
                ImageSize -> {{257.6, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation["\[Rho]-or-\[Gamma]", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["mass-concentration"], 
                   Key["typical-symbol"]}, "Item", False], "Mouse"], 
                ImageSize -> {{291.20000000000005`, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation["kg \!\(\*SuperscriptBox[\(m\), \(-3\)]\)", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["mass-concentration"], 
                   Key["derived-unit-expressed-in-terms-of-base-units"]}, 
                  "Item", False], "Mouse"], 
                ImageSize -> {{560., Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["luminance", 
                    Style[
                    "luminance", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["luminance"]}, 1]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["luminance"]}, "RowHeader", False], "Mouse"], 
                ImageSize -> {{257.6, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation["\!\(\*SubscriptBox[\(L\), \(v\)]\)", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["luminance"], 
                   Key["typical-symbol"]}, "Item", False], "Mouse"], 
                ImageSize -> {{291.20000000000005`, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation["cd \!\(\*SuperscriptBox[\(m\), \(-2\)]\)", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["luminance"], 
                   Key["derived-unit-expressed-in-terms-of-base-units"]}, 
                  "Item", False], "Mouse"], 
                ImageSize -> {{560., Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}}, 
            BaseStyle -> {
             ContextMenu -> 
              Dynamic[TypeSystem`NestedGrid`PackagePrivate`$\
contextMenuTrigger; 
                Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                  TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                  TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                   True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                   TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                  TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                   Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
              "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, 
            Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
            Spacings -> {0, 0}, Alignment -> Left, 
            BaseStyle -> {
             FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
              Plain}], LineBreakWithin -> False, ContextMenu -> {}, 
           NumberMarks -> False, ShowAutoStyles -> False]], 
        TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
       Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
        TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
           Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
           
           Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
             TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
             TypeSystem`NestedGrid`PackagePrivate`datasetData[
              TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
               FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
               TypeSystem`NestedGrid`PackagePrivate`renderGrid[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
               TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
              Not[
               FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
              TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
              TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
         TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
         TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
           FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
           TypeSystem`SparseGrid[
            TypeSystem`H["(data no longer present)"]], 
           TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
        TrackedSymbols :> {
         TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
          TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
       DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
       TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
        TypeSystem`PackageScope`SubViewPathbar[
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
         TypeSystem`NestedGrid`PackagePrivate`updateState[
         TypeSystem`NestedGrid`PackagePrivate`$state$$, 
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
          TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
          TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
       TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
       Framed[
        Dynamic[
         Replace[
         TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
             TypeSystem`NestedGrid`PackagePrivate`localHold[
             TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
             Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
             TypeSystem`NestedGrid`PackagePrivate`localHold[
             TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
              Blank[]], 
             Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
              Blank[]], 
             Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
              Blank[]]] :> (
            Increment[
             TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path$; 
            TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
             TypeSystem`NestedGrid`PackagePrivate`pathType$; 
            TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
             TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
            TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
             TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path$, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           Spacer[10], Blank[] :> Spacer[10]}], 
         TrackedSymbols :> {
          TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
        FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
        Top, ImageSize -> {Automatic, 15}], FontSize -> 1], 
      TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
      DynamicWrapperBox[
       DynamicBox[ToBoxes[
         Dataset`DatasetContent[
         2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
          "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], 
          "State" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
          "VPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], 
          "HPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], 
          "TopBar" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
          "BottomBar" -> 
          Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
          Hold[
            TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
        ImageSizeCache->{1134., {194.63403328722342`, 200.36596671277658`}},
        TrackedSymbols:>{
         TypeSystem`NestedGrid`PackagePrivate`$state$$, 
          TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
       MouseAnnotation[],
       ImageSizeCache->{1134., {194.63403328722342`, 200.36596671277658`}}],
      BaseStyle->{LineBreakWithin -> False},
      DynamicModuleValues:>{},
      Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
       CreateUUID[]),
      UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
     Deploy,
     DefaultBaseStyle->"Deploy"],
    Dataset`InterpretDataset[1],
    Editable->False,
    SelectWithContents->True,
    Selectable->False]}], ";"}]], "Input",
 CellChangeTimes->{{3.8749374597601433`*^9, 3.8749374656170874`*^9}},
 CellLabel->"In[298]:=",
 CellID->208053774,ExpressionUUID->"51e5bddf-e8d2-4451-ab28-e91802a35a19"],

Cell[BoxData[
 RowBox[{
  RowBox[{"quantitiesExpressedInDerivedUnitsWithSpecialNames", "=", 
   TagBox[
    TagBox[
     DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
      "InitialData" -> <|
        "dynamic-viscosity" -> <|
          "name-of-coherent-derived-unit" -> "pascal second", "symbol" -> 
           "Pa s", "derived-unit-expressed-in-terms-of-base-units" -> 
           "kg \!\(\*SuperscriptBox[\(m\), \(-1\)]\) \!\(\*SuperscriptBox[\(s\
\), \(-1\)]\)"|>, 
         "moment-of-force" -> <|
          "name-of-coherent-derived-unit" -> "newton meter", "symbol" -> 
           "N m", "derived-unit-expressed-in-terms-of-base-units" -> 
           "kg \!\(\*SuperscriptBox[\(m\), \(2\)]\) \
\!\(\*SuperscriptBox[\(s\), \(-2\)]\)"|>, 
         "surface-tension" -> <|
          "name-of-coherent-derived-unit" -> "newton per meter", "symbol" -> 
           "N \!\(\*SuperscriptBox[\(m\), \(-1\)]\)", 
           "derived-unit-expressed-in-terms-of-base-units" -> 
           "kg \!\(\*SuperscriptBox[\(s\), \(-2\)]\)"|>, 
         "angular-velocity-or-angular-frequency" -> <|
          "name-of-coherent-derived-unit" -> "radian per second", "symbol" -> 
           "rad \!\(\*SuperscriptBox[\(s\), \(-1\)]\)", 
           "derived-unit-expressed-in-terms-of-base-units" -> 
           "\!\(\*SuperscriptBox[\(s\), \(-1\)]\)"|>, 
         "angular-acceleration" -> <|
          "name-of-coherent-derived-unit" -> "radian per second squared", 
           "symbol" -> "rad/\!\(\*SuperscriptBox[\(s\), \(2\)]\)", 
           "derived-unit-expressed-in-terms-of-base-units" -> 
           "\!\(\*SuperscriptBox[\(s\), \(-2\)]\)"|>, 
         "heat-flux-density-or-irradiance" -> <|
          "name-of-coherent-derived-unit" -> "watt per square meter", 
           "symbol" -> "W/\!\(\*SuperscriptBox[\(m\), \(2\)]\)", 
           "derived-unit-expressed-in-terms-of-base-units" -> 
           "kg \!\(\*SuperscriptBox[\(s\), \(-3\)]\)"|>, 
         "heat-capacity-or-entropy" -> <|
          "name-of-coherent-derived-unit" -> "joule per kelvin", "symbol" -> 
           "J \!\(\*SuperscriptBox[\(K\), \(-1\)]\)", 
           "derived-unit-expressed-in-terms-of-base-units" -> 
           "kg \!\(\*SuperscriptBox[\(m\), \(2\)]\) \
\!\(\*SuperscriptBox[\(s\), \(-2\)]\) \!\(\*SuperscriptBox[\(K\), \
\(-1\)]\)"|>, 
         "specific-heat-capacity-or-specific-entropy" -> <|
          "name-of-coherent-derived-unit" -> "joule per kilogram kelvin", 
           "symbol" -> 
           "J \!\(\*SuperscriptBox[\(K\), \(-1\)]\) \!\(\*SuperscriptBox[\(kg\
\), \(-1\)]\)", "derived-unit-expressed-in-terms-of-base-units" -> 
           "\!\(\*SuperscriptBox[\(m\), \(2\)]\) \!\(\*SuperscriptBox[\(s\), \
\(-2\)]\) \!\(\*SuperscriptBox[\(K\), \(-1\)]\)"|>, 
         "specific-energy" -> <|
          "name-of-coherent-derived-unit" -> "joule per kilogram", "symbol" -> 
           "J \!\(\*SuperscriptBox[\(kg\), \(-1\)]\)", 
           "derived-unit-expressed-in-terms-of-base-units" -> 
           "\!\(\*SuperscriptBox[\(m\), \(2\)]\) \!\(\*SuperscriptBox[\(s\), \
\(-2\)]\)"|>, 
         "thermal-conductivity" -> <|
          "name-of-coherent-derived-unit" -> "watt per meter kelvin", 
           "symbol" -> 
           "W \!\(\*SuperscriptBox[\(m\), \(-1\)]\) \
\!\(\*SuperscriptBox[\(K\), \(-1\)]\)", 
           "derived-unit-expressed-in-terms-of-base-units" -> 
           "kg m \!\(\*SuperscriptBox[\(s\), \(-3\)]\) \
\!\(\*SuperscriptBox[\(K\), \(-1\)]\)"|>, 
         "energy-density" -> <|
          "name-of-coherent-derived-unit" -> "joule per cubic meter", 
           "symbol" -> "J \!\(\*SuperscriptBox[\(m\), \(-3\)]\)", 
           "derived-unit-expressed-in-terms-of-base-units" -> 
           "kg \!\(\*SuperscriptBox[\(m\), \(-1\)]\) \!\(\*SuperscriptBox[\(s\
\), \(-2\)]\)"|>, 
         "electric-field-strength" -> <|
          "name-of-coherent-derived-unit" -> "volt per meter", "symbol" -> 
           "V \!\(\*SuperscriptBox[\(m\), \(-1\)]\)", 
           "derived-unit-expressed-in-terms-of-base-units" -> 
           "kg m \!\(\*SuperscriptBox[\(s\), \(-3\)]\) \
\!\(\*SuperscriptBox[\(A\), \(-1\)]\)"|>, 
         "electric-charge-density" -> <|
          "name-of-coherent-derived-unit" -> "coulomb per cubic meter", 
           "symbol" -> "C \!\(\*SuperscriptBox[\(m\), \(-3\)]\)", 
           "derived-unit-expressed-in-terms-of-base-units" -> 
           "A s \!\(\*SuperscriptBox[\(m\), \(-3\)]\)"|>, 
         "surface-charge-density" -> <|
          "name-of-coherent-derived-unit" -> "coulomb per square meter", 
           "symbol" -> "C \!\(\*SuperscriptBox[\(m\), \(-2\)]\)", 
           "derived-unit-expressed-in-terms-of-base-units" -> 
           "A s \!\(\*SuperscriptBox[\(m\), \(-2\)]\)"|>, 
         "electric-flux-density-or-electric-displacement" -> <|
          "name-of-coherent-derived-unit" -> "coulomb per square meter", 
           "symbol" -> "C \!\(\*SuperscriptBox[\(m\), \(-2\)]\)", 
           "derived-unit-expressed-in-terms-of-base-units" -> 
           "A s \!\(\*SuperscriptBox[\(m\), \(-2\)]\)"|>, 
         "permittivity" -> <|
          "name-of-coherent-derived-unit" -> "farad per meter", "symbol" -> 
           "F \!\(\*SuperscriptBox[\(m\), \(-1\)]\)", 
           "derived-unit-expressed-in-terms-of-base-units" -> 
           "\!\(\*SuperscriptBox[\(kg\), \(-1\)]\) \
\!\(\*SuperscriptBox[\(m\), \(-3\)]\) \!\(\*SuperscriptBox[\(s\), \(4\)]\) \!\
\(\*SuperscriptBox[\(A\), \(2\)]\)"|>, 
         "permeability" -> <|
          "name-of-coherent-derived-unit" -> "henry per meter", "symbol" -> 
           "H \!\(\*SuperscriptBox[\(m\), \(-1\)]\)", 
           "derived-unit-expressed-in-terms-of-base-units" -> 
           "kg m \!\(\*SuperscriptBox[\(s\), \(-2\)]\) \
\!\(\*SuperscriptBox[\(A\), \(-2\)]\)"|>, 
         "molar-energy" -> <|
          "name-of-coherent-derived-unit" -> "joule per mole", "symbol" -> 
           "J \!\(\*SuperscriptBox[\(mol\), \(-1\)]\)", 
           "derived-unit-expressed-in-terms-of-base-units" -> 
           "kg \!\(\*SuperscriptBox[\(m\), \(2\)]\) \
\!\(\*SuperscriptBox[\(s\), \(-2\)]\) \!\(\*SuperscriptBox[\(mol\), \
\(-1\)]\)"|>, 
         "molar-entropy-or-molar-heat-capacity" -> <|
          "name-of-coherent-derived-unit" -> "joule per mole kelvin", 
           "symbol" -> 
           "J \!\(\*SuperscriptBox[\(K\), \(-1\)]\) \
\!\(\*SuperscriptBox[\(mol\), \(-1\)]\)", 
           "derived-unit-expressed-in-terms-of-base-units" -> 
           "kg \!\(\*SuperscriptBox[\(m\), \(2\)]\) \
\!\(\*SuperscriptBox[\(s\), \(-2\)]\) \!\(\*SuperscriptBox[\(mol\), \(-1\)]\) \
\!\(\*SuperscriptBox[\(K\), \(-1\)]\)"|>, 
         "exposure(x-and-\[Gamma]-rays)" -> <|
          "name-of-coherent-derived-unit" -> "coulomb per kilogram", "symbol" -> 
           "C \!\(\*SuperscriptBox[\(kg\), \(-1\)]\)", 
           "derived-unit-expressed-in-terms-of-base-units" -> 
           "A s \!\(\*SuperscriptBox[\(kg\), \(-1\)]\)"|>, 
         "absorbed-dose-rate" -> <|
          "name-of-coherent-derived-unit" -> "gray per second", "symbol" -> 
           "Gy \!\(\*SuperscriptBox[\(s\), \(-1\)]\)", 
           "derived-unit-expressed-in-terms-of-base-units" -> 
           "\!\(\*SuperscriptBox[\(m\), \(2\)]\) \!\(\*SuperscriptBox[\(s\), \
\(-3\)]\)"|>, 
         "radiant-intensity" -> <|
          "name-of-coherent-derived-unit" -> "watt per steradian", "symbol" -> 
           "W \!\(\*SuperscriptBox[\(sr\), \(-1\)]\)", 
           "derived-unit-expressed-in-terms-of-base-units" -> 
           "kg \!\(\*SuperscriptBox[\(m\), \(2\)]\) \
\!\(\*SuperscriptBox[\(s\), \(-3\)]\)"|>, 
         "radiance" -> <|
          "name-of-coherent-derived-unit" -> 
           "watt per square meter steradian", "symbol" -> 
           "W \!\(\*SuperscriptBox[\(sr\), \(-1\)]\) \!\(\*SuperscriptBox[\(m\
\), \(-2\)]\)", "derived-unit-expressed-in-terms-of-base-units" -> 
           "kg \!\(\*SuperscriptBox[\(s\), \(-3\)]\)"|>, 
         "catalytic-activity-concentration" -> <|
          "name-of-coherent-derived-unit" -> "katal per cubic meter", 
           "symbol" -> "kat \!\(\*SuperscriptBox[\(m\), \(-3\)]\)", 
           "derived-unit-expressed-in-terms-of-base-units" -> 
           "mol \!\(\*SuperscriptBox[\(s\), \(-1\)]\) \
\!\(\*SuperscriptBox[\(m\), \(-3\)]\)"|>|>, "AllowEmbedding" -> True, 
       "InitialShape" -> TypeSystem`PackageScope`HeaderShape[<|{All, 
            TypeSystem`PackageScope`KeyDummy[56]} -> 
          1, {All, "name-of-coherent-derived-unit"} -> 1, {All, "symbol"} -> 
          1, {All, "derived-unit-expressed-in-terms-of-base-units"} -> 1|>, 
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`ColumnShape[
           TypeSystem`PackageScope`KeyValueShape[
            TypeSystem`PackageScope`AtomShape[515.2], 
            TypeSystem`PackageScope`Limited[
             
             TypeSystem`PackageScope`RowShape[<|
              "name-of-coherent-derived-unit" -> 
               TypeSystem`PackageScope`AtomShape[280.], "symbol" -> 
               TypeSystem`PackageScope`AtomShape[560.], 
               "derived-unit-expressed-in-terms-of-base-units" -> 
               TypeSystem`PackageScope`AtomShape[560.]|>], 
             DirectedInfinity[1], 3, {All}]]], 20, 
          DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Assoc[
         TypeSystem`Atom[String], 
         TypeSystem`Struct[{
          "name-of-coherent-derived-unit", "symbol", 
           "derived-unit-expressed-in-terms-of-base-units"}, {
           TypeSystem`Atom[String], 
           TypeSystem`Atom[String], 
           TypeSystem`Atom[String]}], 24], "Meta" -> <||>, "RowTarget" -> 20, 
       "ColumnTarget" -> 10, "Shape" -> 
       TypeSystem`PackageScope`HeaderShape[<|{All, 
            TypeSystem`PackageScope`KeyDummy[56]} -> 
          1, {All, "name-of-coherent-derived-unit"} -> 1, {All, "symbol"} -> 
          1, {All, "derived-unit-expressed-in-terms-of-base-units"} -> 1|>, 
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`ColumnShape[
           TypeSystem`PackageScope`KeyValueShape[
            TypeSystem`PackageScope`AtomShape[515.2], 
            TypeSystem`PackageScope`Limited[
             
             TypeSystem`PackageScope`RowShape[<|
              "name-of-coherent-derived-unit" -> 
               TypeSystem`PackageScope`AtomShape[280.], "symbol" -> 
               TypeSystem`PackageScope`AtomShape[560.], 
               "derived-unit-expressed-in-terms-of-base-units" -> 
               TypeSystem`PackageScope`AtomShape[560.]|>], 
             DirectedInfinity[1], 3, {All}]]], 20, 
          DirectedInfinity[1], {}]], "Type" -> TypeSystem`Assoc[
         TypeSystem`Atom[String], 
         TypeSystem`Struct[{
          "name-of-coherent-derived-unit", "symbol", 
           "derived-unit-expressed-in-terms-of-base-units"}, {
           TypeSystem`Atom[String], 
           TypeSystem`Atom[String], 
           TypeSystem`Atom[String]}], 24], "Path" -> {}, "DisplayedRowCount" -> 
       20, "DisplayedColumnCount" -> 3, "DataRowCount" -> 24, 
       "DataColumnCount" -> 3, "SortPaths" -> {}, "SortDirections" -> {}, 
       "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
      TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
       TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
          Style[
           Grid[{{
              Item[
               Pane[
                Annotation[
                 Mouseover[
                  
                  Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                   Scaled[-0.15]], 
                  Graphics[{
                    GrayLevel[0.6], 
                    
                    Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
                    Rational[-1, 2]}}]}, ImageSize -> 6, BaselinePosition -> 
                   Scaled[-0.15]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                  All, Keys}, "KeyDummy", True], "Mouse"], 
                ImageSize -> {{1, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["name-of-coherent-derived-unit", 
                    Style[
                    "name-of-coherent-derived-unit", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "name-of-coherent-derived-unit"}, 1]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                  All, "name-of-coherent-derived-unit"}, "ColumnHeader", 
                  True], "Mouse"], ImageSize -> {{1, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["symbol", 
                    Style[
                    "symbol", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "symbol"}, 1]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                  All, "symbol"}, "ColumnHeader", True], "Mouse"], 
                ImageSize -> {{1, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["derived-unit-expressed-in-terms-of-base-units", 
                    Style[
                    "derived-unit-expressed-in-terms-of-base-units", 
                    FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "derived-unit-expressed-in-terms-of-base-units"}, 
                    1]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                  All, "derived-unit-expressed-in-terms-of-base-units"}, 
                  "ColumnHeader", True], "Mouse"], 
                ImageSize -> {{1, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
              Item[
               Pane[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["dynamic-viscosity", 
                    Style[
                    "dynamic-viscosity", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["dynamic-viscosity"]}, 1]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["dynamic-viscosity"]}, "RowHeader", False], "Mouse"], 
                ImageSize -> {{515.2, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation["pascal second", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["dynamic-viscosity"], 
                   Key["name-of-coherent-derived-unit"]}, "Item", False], 
                 "Mouse"], ImageSize -> {{280., Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation["Pa s", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["dynamic-viscosity"], 
                   Key["symbol"]}, "Item", False], "Mouse"], 
                ImageSize -> {{560., Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation[
                "kg \!\(\*SuperscriptBox[\(m\), \(-1\)]\) \
\!\(\*SuperscriptBox[\(s\), \(-1\)]\)", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["dynamic-viscosity"], 
                   Key["derived-unit-expressed-in-terms-of-base-units"]}, 
                  "Item", False], "Mouse"], 
                ImageSize -> {{560., Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["moment-of-force", 
                    Style[
                    "moment-of-force", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["moment-of-force"]}, 1]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["moment-of-force"]}, "RowHeader", False], "Mouse"], 
                ImageSize -> {{515.2, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation["newton meter", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["moment-of-force"], 
                   Key["name-of-coherent-derived-unit"]}, "Item", False], 
                 "Mouse"], ImageSize -> {{280., Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation["N m", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["moment-of-force"], 
                   Key["symbol"]}, "Item", False], "Mouse"], 
                ImageSize -> {{560., Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation[
                "kg \!\(\*SuperscriptBox[\(m\), \(2\)]\) \
\!\(\*SuperscriptBox[\(s\), \(-2\)]\)", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["moment-of-force"], 
                   Key["derived-unit-expressed-in-terms-of-base-units"]}, 
                  "Item", False], "Mouse"], 
                ImageSize -> {{560., Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["surface-tension", 
                    Style[
                    "surface-tension", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["surface-tension"]}, 1]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["surface-tension"]}, "RowHeader", False], "Mouse"], 
                ImageSize -> {{515.2, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation["newton per meter", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["surface-tension"], 
                   Key["name-of-coherent-derived-unit"]}, "Item", False], 
                 "Mouse"], ImageSize -> {{280., Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation["N \!\(\*SuperscriptBox[\(m\), \(-1\)]\)", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["surface-tension"], 
                   Key["symbol"]}, "Item", False], "Mouse"], 
                ImageSize -> {{560., Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation["kg \!\(\*SuperscriptBox[\(s\), \(-2\)]\)", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["surface-tension"], 
                   Key["derived-unit-expressed-in-terms-of-base-units"]}, 
                  "Item", False], "Mouse"], 
                ImageSize -> {{560., Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["angular-velocity-or-angular-frequency", 
                    Style[
                    "angular-velocity-or-angular-frequency", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["angular-velocity-or-angular-frequency"]}, 1]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["angular-velocity-or-angular-frequency"]}, "RowHeader",
                   False], "Mouse"], ImageSize -> {{515.2, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation["radian per second", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["angular-velocity-or-angular-frequency"], 
                   Key["name-of-coherent-derived-unit"]}, "Item", False], 
                 "Mouse"], ImageSize -> {{280., Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation["rad \!\(\*SuperscriptBox[\(s\), \(-1\)]\)", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["angular-velocity-or-angular-frequency"], 
                   Key["symbol"]}, "Item", False], "Mouse"], 
                ImageSize -> {{560., Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation["\!\(\*SuperscriptBox[\(s\), \(-1\)]\)", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["angular-velocity-or-angular-frequency"], 
                   Key["derived-unit-expressed-in-terms-of-base-units"]}, 
                  "Item", False], "Mouse"], 
                ImageSize -> {{560., Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["angular-acceleration", 
                    Style[
                    "angular-acceleration", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["angular-acceleration"]}, 1]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["angular-acceleration"]}, "RowHeader", False], 
                 "Mouse"], ImageSize -> {{515.2, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation["radian per second squared", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["angular-acceleration"], 
                   Key["name-of-coherent-derived-unit"]}, "Item", False], 
                 "Mouse"], ImageSize -> {{280., Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation["rad/\!\(\*SuperscriptBox[\(s\), \(2\)]\)", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["angular-acceleration"], 
                   Key["symbol"]}, "Item", False], "Mouse"], 
                ImageSize -> {{560., Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation["\!\(\*SuperscriptBox[\(s\), \(-2\)]\)", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["angular-acceleration"], 
                   Key["derived-unit-expressed-in-terms-of-base-units"]}, 
                  "Item", False], "Mouse"], 
                ImageSize -> {{560., Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["heat-flux-density-or-irradiance", 
                    Style[
                    "heat-flux-density-or-irradiance", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["heat-flux-density-or-irradiance"]}, 1]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["heat-flux-density-or-irradiance"]}, "RowHeader", 
                  False], "Mouse"], ImageSize -> {{515.2, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation["watt per square meter", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["heat-flux-density-or-irradiance"], 
                   Key["name-of-coherent-derived-unit"]}, "Item", False], 
                 "Mouse"], ImageSize -> {{280., Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation["W/\!\(\*SuperscriptBox[\(m\), \(2\)]\)", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["heat-flux-density-or-irradiance"], 
                   Key["symbol"]}, "Item", False], "Mouse"], 
                ImageSize -> {{560., Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation["kg \!\(\*SuperscriptBox[\(s\), \(-3\)]\)", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["heat-flux-density-or-irradiance"], 
                   Key["derived-unit-expressed-in-terms-of-base-units"]}, 
                  "Item", False], "Mouse"], 
                ImageSize -> {{560., Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["heat-capacity-or-entropy", 
                    Style[
                    "heat-capacity-or-entropy", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["heat-capacity-or-entropy"]}, 1]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["heat-capacity-or-entropy"]}, "RowHeader", False], 
                 "Mouse"], ImageSize -> {{515.2, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation["joule per kelvin", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["heat-capacity-or-entropy"], 
                   Key["name-of-coherent-derived-unit"]}, "Item", False], 
                 "Mouse"], ImageSize -> {{280., Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation["J \!\(\*SuperscriptBox[\(K\), \(-1\)]\)", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["heat-capacity-or-entropy"], 
                   Key["symbol"]}, "Item", False], "Mouse"], 
                ImageSize -> {{560., Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation[
                "kg \!\(\*SuperscriptBox[\(m\), \(2\)]\) \
\!\(\*SuperscriptBox[\(s\), \(-2\)]\) \!\(\*SuperscriptBox[\(K\), \(-1\)]\)", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["heat-capacity-or-entropy"], 
                   Key["derived-unit-expressed-in-terms-of-base-units"]}, 
                  "Item", False], "Mouse"], 
                ImageSize -> {{560., Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["specific-heat-capacity-or-specific-entropy", 
                    Style[
                    "specific-heat-capacity-or-specific-entropy", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["specific-heat-capacity-or-specific-entropy"]}, 1]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["specific-heat-capacity-or-specific-entropy"]}, 
                  "RowHeader", False], "Mouse"], 
                ImageSize -> {{515.2, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation["joule per kilogram kelvin", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["specific-heat-capacity-or-specific-entropy"], 
                   Key["name-of-coherent-derived-unit"]}, "Item", False], 
                 "Mouse"], ImageSize -> {{280., Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation[
                "J \!\(\*SuperscriptBox[\(K\), \(-1\)]\) \
\!\(\*SuperscriptBox[\(kg\), \(-1\)]\)", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["specific-heat-capacity-or-specific-entropy"], 
                   Key["symbol"]}, "Item", False], "Mouse"], 
                ImageSize -> {{560., Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation[
                "\!\(\*SuperscriptBox[\(m\), \(2\)]\) \
\!\(\*SuperscriptBox[\(s\), \(-2\)]\) \!\(\*SuperscriptBox[\(K\), \(-1\)]\)", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["specific-heat-capacity-or-specific-entropy"], 
                   Key["derived-unit-expressed-in-terms-of-base-units"]}, 
                  "Item", False], "Mouse"], 
                ImageSize -> {{560., Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["specific-energy", 
                    Style[
                    "specific-energy", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["specific-energy"]}, 1]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["specific-energy"]}, "RowHeader", False], "Mouse"], 
                ImageSize -> {{515.2, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation["joule per kilogram", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["specific-energy"], 
                   Key["name-of-coherent-derived-unit"]}, "Item", False], 
                 "Mouse"], ImageSize -> {{280., Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation["J \!\(\*SuperscriptBox[\(kg\), \(-1\)]\)", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["specific-energy"], 
                   Key["symbol"]}, "Item", False], "Mouse"], 
                ImageSize -> {{560., Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation[
                "\!\(\*SuperscriptBox[\(m\), \(2\)]\) \
\!\(\*SuperscriptBox[\(s\), \(-2\)]\)", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["specific-energy"], 
                   Key["derived-unit-expressed-in-terms-of-base-units"]}, 
                  "Item", False], "Mouse"], 
                ImageSize -> {{560., Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["thermal-conductivity", 
                    Style[
                    "thermal-conductivity", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["thermal-conductivity"]}, 1]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["thermal-conductivity"]}, "RowHeader", False], 
                 "Mouse"], ImageSize -> {{515.2, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation["watt per meter kelvin", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["thermal-conductivity"], 
                   Key["name-of-coherent-derived-unit"]}, "Item", False], 
                 "Mouse"], ImageSize -> {{280., Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation[
                "W \!\(\*SuperscriptBox[\(m\), \(-1\)]\) \
\!\(\*SuperscriptBox[\(K\), \(-1\)]\)", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["thermal-conductivity"], 
                   Key["symbol"]}, "Item", False], "Mouse"], 
                ImageSize -> {{560., Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation[
                "kg m \!\(\*SuperscriptBox[\(s\), \(-3\)]\) \
\!\(\*SuperscriptBox[\(K\), \(-1\)]\)", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["thermal-conductivity"], 
                   Key["derived-unit-expressed-in-terms-of-base-units"]}, 
                  "Item", False], "Mouse"], 
                ImageSize -> {{560., Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["energy-density", 
                    Style[
                    "energy-density", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["energy-density"]}, 1]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["energy-density"]}, "RowHeader", False], "Mouse"], 
                ImageSize -> {{515.2, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation["joule per cubic meter", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["energy-density"], 
                   Key["name-of-coherent-derived-unit"]}, "Item", False], 
                 "Mouse"], ImageSize -> {{280., Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation["J \!\(\*SuperscriptBox[\(m\), \(-3\)]\)", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["energy-density"], 
                   Key["symbol"]}, "Item", False], "Mouse"], 
                ImageSize -> {{560., Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation[
                "kg \!\(\*SuperscriptBox[\(m\), \(-1\)]\) \
\!\(\*SuperscriptBox[\(s\), \(-2\)]\)", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["energy-density"], 
                   Key["derived-unit-expressed-in-terms-of-base-units"]}, 
                  "Item", False], "Mouse"], 
                ImageSize -> {{560., Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["electric-field-strength", 
                    Style[
                    "electric-field-strength", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["electric-field-strength"]}, 1]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["electric-field-strength"]}, "RowHeader", False], 
                 "Mouse"], ImageSize -> {{515.2, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation["volt per meter", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["electric-field-strength"], 
                   Key["name-of-coherent-derived-unit"]}, "Item", False], 
                 "Mouse"], ImageSize -> {{280., Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation["V \!\(\*SuperscriptBox[\(m\), \(-1\)]\)", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["electric-field-strength"], 
                   Key["symbol"]}, "Item", False], "Mouse"], 
                ImageSize -> {{560., Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation[
                "kg m \!\(\*SuperscriptBox[\(s\), \(-3\)]\) \
\!\(\*SuperscriptBox[\(A\), \(-1\)]\)", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["electric-field-strength"], 
                   Key["derived-unit-expressed-in-terms-of-base-units"]}, 
                  "Item", False], "Mouse"], 
                ImageSize -> {{560., Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["electric-charge-density", 
                    Style[
                    "electric-charge-density", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["electric-charge-density"]}, 1]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["electric-charge-density"]}, "RowHeader", False], 
                 "Mouse"], ImageSize -> {{515.2, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation["coulomb per cubic meter", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["electric-charge-density"], 
                   Key["name-of-coherent-derived-unit"]}, "Item", False], 
                 "Mouse"], ImageSize -> {{280., Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation["C \!\(\*SuperscriptBox[\(m\), \(-3\)]\)", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["electric-charge-density"], 
                   Key["symbol"]}, "Item", False], "Mouse"], 
                ImageSize -> {{560., Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation["A s \!\(\*SuperscriptBox[\(m\), \(-3\)]\)", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["electric-charge-density"], 
                   Key["derived-unit-expressed-in-terms-of-base-units"]}, 
                  "Item", False], "Mouse"], 
                ImageSize -> {{560., Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["surface-charge-density", 
                    Style[
                    "surface-charge-density", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["surface-charge-density"]}, 1]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["surface-charge-density"]}, "RowHeader", False], 
                 "Mouse"], ImageSize -> {{515.2, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation["coulomb per square meter", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["surface-charge-density"], 
                   Key["name-of-coherent-derived-unit"]}, "Item", False], 
                 "Mouse"], ImageSize -> {{280., Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation["C \!\(\*SuperscriptBox[\(m\), \(-2\)]\)", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["surface-charge-density"], 
                   Key["symbol"]}, "Item", False], "Mouse"], 
                ImageSize -> {{560., Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation["A s \!\(\*SuperscriptBox[\(m\), \(-2\)]\)", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["surface-charge-density"], 
                   Key["derived-unit-expressed-in-terms-of-base-units"]}, 
                  "Item", False], "Mouse"], 
                ImageSize -> {{560., Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["electric-flux-density-or-electric-displacement", 
                    Style[
                    "electric-flux-density-or-electric-displacement", 
                    FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["electric-flux-density-or-electric-displacement"]}, 
                    1]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["electric-flux-density-or-electric-displacement"]}, 
                  "RowHeader", False], "Mouse"], 
                ImageSize -> {{515.2, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation["coulomb per square meter", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["electric-flux-density-or-electric-displacement"], 
                   Key["name-of-coherent-derived-unit"]}, "Item", False], 
                 "Mouse"], ImageSize -> {{280., Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation["C \!\(\*SuperscriptBox[\(m\), \(-2\)]\)", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["electric-flux-density-or-electric-displacement"], 
                   Key["symbol"]}, "Item", False], "Mouse"], 
                ImageSize -> {{560., Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation["A s \!\(\*SuperscriptBox[\(m\), \(-2\)]\)", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["electric-flux-density-or-electric-displacement"], 
                   Key["derived-unit-expressed-in-terms-of-base-units"]}, 
                  "Item", False], "Mouse"], 
                ImageSize -> {{560., Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["permittivity", 
                    Style[
                    "permittivity", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["permittivity"]}, 1]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["permittivity"]}, "RowHeader", False], "Mouse"], 
                ImageSize -> {{515.2, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation["farad per meter", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["permittivity"], 
                   Key["name-of-coherent-derived-unit"]}, "Item", False], 
                 "Mouse"], ImageSize -> {{280., Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation["F \!\(\*SuperscriptBox[\(m\), \(-1\)]\)", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["permittivity"], 
                   Key["symbol"]}, "Item", False], "Mouse"], 
                ImageSize -> {{560., Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation[
                "\!\(\*SuperscriptBox[\(kg\), \(-1\)]\) \!\(\*SuperscriptBox[\
\(m\), \(-3\)]\) \!\(\*SuperscriptBox[\(s\), \(4\)]\) \
\!\(\*SuperscriptBox[\(A\), \(2\)]\)", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["permittivity"], 
                   Key["derived-unit-expressed-in-terms-of-base-units"]}, 
                  "Item", False], "Mouse"], 
                ImageSize -> {{560., Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["permeability", 
                    Style[
                    "permeability", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["permeability"]}, 1]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["permeability"]}, "RowHeader", False], "Mouse"], 
                ImageSize -> {{515.2, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation["henry per meter", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["permeability"], 
                   Key["name-of-coherent-derived-unit"]}, "Item", False], 
                 "Mouse"], ImageSize -> {{280., Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation["H \!\(\*SuperscriptBox[\(m\), \(-1\)]\)", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["permeability"], 
                   Key["symbol"]}, "Item", False], "Mouse"], 
                ImageSize -> {{560., Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation[
                "kg m \!\(\*SuperscriptBox[\(s\), \(-2\)]\) \
\!\(\*SuperscriptBox[\(A\), \(-2\)]\)", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["permeability"], 
                   Key["derived-unit-expressed-in-terms-of-base-units"]}, 
                  "Item", False], "Mouse"], 
                ImageSize -> {{560., Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["molar-energy", 
                    Style[
                    "molar-energy", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["molar-energy"]}, 1]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["molar-energy"]}, "RowHeader", False], "Mouse"], 
                ImageSize -> {{515.2, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation["joule per mole", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["molar-energy"], 
                   Key["name-of-coherent-derived-unit"]}, "Item", False], 
                 "Mouse"], ImageSize -> {{280., Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation["J \!\(\*SuperscriptBox[\(mol\), \(-1\)]\)", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["molar-energy"], 
                   Key["symbol"]}, "Item", False], "Mouse"], 
                ImageSize -> {{560., Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation[
                "kg \!\(\*SuperscriptBox[\(m\), \(2\)]\) \
\!\(\*SuperscriptBox[\(s\), \(-2\)]\) \!\(\*SuperscriptBox[\(mol\), \
\(-1\)]\)", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["molar-energy"], 
                   Key["derived-unit-expressed-in-terms-of-base-units"]}, 
                  "Item", False], "Mouse"], 
                ImageSize -> {{560., Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["molar-entropy-or-molar-heat-capacity", 
                    Style[
                    "molar-entropy-or-molar-heat-capacity", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["molar-entropy-or-molar-heat-capacity"]}, 1]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["molar-entropy-or-molar-heat-capacity"]}, "RowHeader", 
                  False], "Mouse"], ImageSize -> {{515.2, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation["joule per mole kelvin", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["molar-entropy-or-molar-heat-capacity"], 
                   Key["name-of-coherent-derived-unit"]}, "Item", False], 
                 "Mouse"], ImageSize -> {{280., Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation[
                "J \!\(\*SuperscriptBox[\(K\), \(-1\)]\) \
\!\(\*SuperscriptBox[\(mol\), \(-1\)]\)", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["molar-entropy-or-molar-heat-capacity"], 
                   Key["symbol"]}, "Item", False], "Mouse"], 
                ImageSize -> {{560., Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation[
                "kg \!\(\*SuperscriptBox[\(m\), \(2\)]\) \
\!\(\*SuperscriptBox[\(s\), \(-2\)]\) \!\(\*SuperscriptBox[\(mol\), \(-1\)]\) \
\!\(\*SuperscriptBox[\(K\), \(-1\)]\)", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["molar-entropy-or-molar-heat-capacity"], 
                   Key["derived-unit-expressed-in-terms-of-base-units"]}, 
                  "Item", False], "Mouse"], 
                ImageSize -> {{560., Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["exposure(x-and-\[Gamma]-rays)", 
                    Style[
                    "exposure(x-and-\[Gamma]-rays)", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["exposure(x-and-\[Gamma]-rays)"]}, 1]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["exposure(x-and-\[Gamma]-rays)"]}, "RowHeader", False],
                  "Mouse"], ImageSize -> {{515.2, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation["coulomb per kilogram", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["exposure(x-and-\[Gamma]-rays)"], 
                   Key["name-of-coherent-derived-unit"]}, "Item", False], 
                 "Mouse"], ImageSize -> {{280., Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation["C \!\(\*SuperscriptBox[\(kg\), \(-1\)]\)", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["exposure(x-and-\[Gamma]-rays)"], 
                   Key["symbol"]}, "Item", False], "Mouse"], 
                ImageSize -> {{560., Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation["A s \!\(\*SuperscriptBox[\(kg\), \(-1\)]\)", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["exposure(x-and-\[Gamma]-rays)"], 
                   Key["derived-unit-expressed-in-terms-of-base-units"]}, 
                  "Item", False], "Mouse"], 
                ImageSize -> {{560., Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Deploy[
                Pane[
                 Row[{
                   Spacer[2], 
                   Style[
                    Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ - 20 
                    If[True, 24, 1], {1, 24 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ - 20 
                    If[False, 24, 1], {1, 24 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], " ", 
                    Style[
                    Mouseover[
                    Style[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[24, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    Style[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[24, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 30, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100000000, {}]], MenuEvaluator -> Automatic]}], 
                    " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[False, 24, 1], {1, 24 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[True, 24, 1], {1, 24 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None]}], ContextMenu -> {}]}], 
                 ImageMargins -> {{0, -1}, {-1, 1}}]], Background -> 
               RGBColor[
                0.9764705882352941, 0.9764705882352941, 0.9764705882352941], 
               Alignment -> {Left, Top}], SpanFromLeft, SpanFromLeft, 
              SpanFromLeft}}, 
            BaseStyle -> {
             ContextMenu -> 
              Dynamic[TypeSystem`NestedGrid`PackagePrivate`$\
contextMenuTrigger; 
                Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                  TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                  TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                   True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                   TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                  TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                   Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
              "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, 
            Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
            Spacings -> {0, 0}, Alignment -> Left, 
            BaseStyle -> {
             FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
              Plain}], LineBreakWithin -> False, ContextMenu -> {}, 
           NumberMarks -> False, ShowAutoStyles -> False]], 
        TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
       Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
        TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
           Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
           
           Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
             TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
             TypeSystem`NestedGrid`PackagePrivate`datasetData[
              TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
               FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
               TypeSystem`NestedGrid`PackagePrivate`renderGrid[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
               TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
              Not[
               FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
              TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
              TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
         TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
         TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
           FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
           TypeSystem`SparseGrid[
            TypeSystem`H["(data no longer present)"]], 
           TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
        TrackedSymbols :> {
         TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
          TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
       DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
       TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
        TypeSystem`PackageScope`SubViewPathbar[
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
         TypeSystem`NestedGrid`PackagePrivate`updateState[
         TypeSystem`NestedGrid`PackagePrivate`$state$$, 
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
          TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
          TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
       TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
       Framed[
        Dynamic[
         Replace[
         TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
             TypeSystem`NestedGrid`PackagePrivate`localHold[
             TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
             Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
             TypeSystem`NestedGrid`PackagePrivate`localHold[
             TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
              Blank[]], 
             Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
              Blank[]], 
             Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
              Blank[]]] :> (
            Increment[
             TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path$; 
            TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
             TypeSystem`NestedGrid`PackagePrivate`pathType$; 
            TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
             TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
            TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
             TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path$, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           Spacer[10], Blank[] :> Spacer[10]}], 
         TrackedSymbols :> {
          TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
        FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
        Top, ImageSize -> {Automatic, 15}], FontSize -> 1], 
      TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
      DynamicWrapperBox[
       DynamicBox[ToBoxes[
         Dataset`DatasetContent[
         2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
          "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], 
          "State" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
          "VPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], 
          "HPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], 
          "TopBar" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
          "BottomBar" -> 
          Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
          Hold[
            TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
        ImageSizeCache->{1967., {299.6340332872234, 305.3659667127766}},
        TrackedSymbols:>{
         TypeSystem`NestedGrid`PackagePrivate`$state$$, 
          TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
       MouseAnnotation[],
       ImageSizeCache->{1967., {299.6340332872234, 305.3659667127766}}],
      BaseStyle->{LineBreakWithin -> False},
      DynamicModuleValues:>{},
      Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
       CreateUUID[]),
      UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
     Deploy,
     DefaultBaseStyle->"Deploy"],
    Dataset`InterpretDataset[1],
    Editable->False,
    SelectWithContents->True,
    Selectable->False]}], ";"}]], "Input",
 CellChangeTimes->{{3.8749374775418043`*^9, 3.8749375239984846`*^9}},
 CellLabel->"In[300]:=",
 CellID->707036,ExpressionUUID->"b3124a0c-0e2d-4a6f-a708-bdf55dd332b7"],

Cell[BoxData[
 RowBox[{
  RowBox[{"prefixes", "=", 
   TagBox[
    TagBox[
     DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
      "InitialData" -> <|
        "\!\(\*SuperscriptBox[\(10\), \(3\)]\)" -> <|
          "factor" -> "\!\(\*SuperscriptBox[\(10\), \(3\)]\)", "name" -> 
           "kilo", "symbol" -> "k"|>, 
         "\!\(\*SuperscriptBox[\(10\), \(6\)]\)" -> <|
          "factor" -> "\!\(\*SuperscriptBox[\(10\), \(6\)]\)", "name" -> 
           "mega", "symbol" -> "M"|>, 
         "\!\(\*SuperscriptBox[\(10\), \(9\)]\)" -> <|
          "factor" -> "\!\(\*SuperscriptBox[\(10\), \(9\)]\)", "name" -> 
           "giga", "symbol" -> "G"|>, 
         "\!\(\*SuperscriptBox[\(10\), \(12\)]\)" -> <|
          "factor" -> "\!\(\*SuperscriptBox[\(10\), \(12\)]\)", "name" -> 
           "tera", "symbol" -> "T"|>, 
         "\!\(\*SuperscriptBox[\(10\), \(15\)]\)" -> <|
          "factor" -> "\!\(\*SuperscriptBox[\(10\), \(15\)]\)", "name" -> 
           "peta", "symbol" -> "P"|>, 
         "\!\(\*SuperscriptBox[\(10\), \(18\)]\)" -> <|
          "factor" -> "\!\(\*SuperscriptBox[\(10\), \(18\)]\)", "name" -> 
           "exa", "symbol" -> "E"|>, 
         "\!\(\*SuperscriptBox[\(10\), \(21\)]\)" -> <|
          "factor" -> "\!\(\*SuperscriptBox[\(10\), \(21\)]\)", "name" -> 
           "zetta", "symbol" -> "Z"|>, 
         "\!\(\*SuperscriptBox[\(10\), \(24\)]\)" -> <|
          "factor" -> "\!\(\*SuperscriptBox[\(10\), \(24\)]\)", "name" -> 
           "yotta", "symbol" -> "Y"|>, 
         "\!\(\*SuperscriptBox[\(10\), \(-3\)]\)" -> <|
          "factor" -> "\!\(\*SuperscriptBox[\(10\), \(-3\)]\)", "name" -> 
           "milli", "symbol" -> "m"|>, 
         "\!\(\*SuperscriptBox[\(10\), \(-6\)]\)" -> <|
          "factor" -> "\!\(\*SuperscriptBox[\(10\), \(-6\)]\)", "name" -> 
           "micro", "symbol" -> "\[Mu]"|>, 
         "\!\(\*SuperscriptBox[\(10\), \(-9\)]\)" -> <|
          "factor" -> "\!\(\*SuperscriptBox[\(10\), \(-9\)]\)", "name" -> 
           "nano", "symbol" -> "n"|>, 
         "\!\(\*SuperscriptBox[\(10\), \(-12\)]\)" -> <|
          "factor" -> "\!\(\*SuperscriptBox[\(10\), \(-12\)]\)", "name" -> 
           "pico", "symbol" -> "p"|>, 
         "\!\(\*SuperscriptBox[\(10\), \(-15\)]\)" -> <|
          "factor" -> "\!\(\*SuperscriptBox[\(10\), \(-15\)]\)", "name" -> 
           "femto", "symbol" -> "f"|>, 
         "\!\(\*SuperscriptBox[\(10\), \(-18\)]\)" -> <|
          "factor" -> "\!\(\*SuperscriptBox[\(10\), \(-18\)]\)", "name" -> 
           "atto", "symbol" -> "a"|>, 
         "\!\(\*SuperscriptBox[\(10\), \(-21\)]\)" -> <|
          "factor" -> "\!\(\*SuperscriptBox[\(10\), \(-21\)]\)", "name" -> 
           "zepto", "symbol" -> "z"|>, 
         "\!\(\*SuperscriptBox[\(10\), \(-24\)]\)" -> <|
          "factor" -> "\!\(\*SuperscriptBox[\(10\), \(-24\)]\)", "name" -> 
           "yocto", "symbol" -> "y"|>|>, "AllowEmbedding" -> True, 
       "InitialShape" -> TypeSystem`PackageScope`HeaderShape[<|{All, 
            TypeSystem`PackageScope`KeyDummy[61]} -> 1, {All, "factor"} -> 
          1, {All, "name"} -> 1, {All, "symbol"} -> 1|>, 
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`ColumnShape[
           TypeSystem`PackageScope`KeyValueShape[
            TypeSystem`PackageScope`AtomShape[347.20000000000005`], 
            TypeSystem`PackageScope`Limited[
             
             TypeSystem`PackageScope`RowShape[<|
              "factor" -> 
               TypeSystem`PackageScope`AtomShape[347.20000000000005`], "name" -> 
               TypeSystem`PackageScope`AtomShape[56.00000000000001], "symbol" -> 
               TypeSystem`PackageScope`AtomShape[33.6]|>], 
             DirectedInfinity[1], 3, {All}]]], 16, 
          DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Assoc[
         TypeSystem`Atom[String], 
         TypeSystem`Struct[{"factor", "name", "symbol"}, {
           TypeSystem`Atom[String], 
           TypeSystem`Atom[String], 
           TypeSystem`Atom[String]}], 16], "Meta" -> <||>, "RowTarget" -> 20, 
       "ColumnTarget" -> 10, "Shape" -> 
       TypeSystem`PackageScope`HeaderShape[<|{All, 
            TypeSystem`PackageScope`KeyDummy[61]} -> 1, {All, "factor"} -> 
          1, {All, "name"} -> 1, {All, "symbol"} -> 1|>, 
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`ColumnShape[
           TypeSystem`PackageScope`KeyValueShape[
            TypeSystem`PackageScope`AtomShape[347.20000000000005`], 
            TypeSystem`PackageScope`Limited[
             
             TypeSystem`PackageScope`RowShape[<|
              "factor" -> 
               TypeSystem`PackageScope`AtomShape[347.20000000000005`], "name" -> 
               TypeSystem`PackageScope`AtomShape[56.00000000000001], "symbol" -> 
               TypeSystem`PackageScope`AtomShape[33.6]|>], 
             DirectedInfinity[1], 3, {All}]]], 16, 
          DirectedInfinity[1], {}]], "Type" -> TypeSystem`Assoc[
         TypeSystem`Atom[String], 
         TypeSystem`Struct[{"factor", "name", "symbol"}, {
           TypeSystem`Atom[String], 
           TypeSystem`Atom[String], 
           TypeSystem`Atom[String]}], 16], "Path" -> {}, "DisplayedRowCount" -> 
       16, "DisplayedColumnCount" -> 3, "DataRowCount" -> 16, 
       "DataColumnCount" -> 3, "SortPaths" -> {}, "SortDirections" -> {}, 
       "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
      TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
       TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
          Style[
           Grid[{{
              Item[
               Pane[
                Annotation[
                 Mouseover[
                  
                  Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                   Scaled[-0.15]], 
                  Graphics[{
                    GrayLevel[0.6], 
                    
                    Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
                    Rational[-1, 2]}}]}, ImageSize -> 6, BaselinePosition -> 
                   Scaled[-0.15]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                  All, Keys}, "KeyDummy", True], "Mouse"], 
                ImageSize -> {{1, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["factor", 
                    Style[
                    "factor", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "factor"}, 1]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                  All, "factor"}, "ColumnHeader", True], "Mouse"], 
                ImageSize -> {{1, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["name", 
                    Style[
                    "name", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "name"}, 1]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                  All, "name"}, "ColumnHeader", True], "Mouse"], 
                ImageSize -> {{1, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["symbol", 
                    Style[
                    "symbol", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "symbol"}, 1]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                  All, "symbol"}, "ColumnHeader", True], "Mouse"], 
                ImageSize -> {{1, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
              Item[
               Pane[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["\!\(\*SuperscriptBox[\(10\), \(3\)]\)", 
                    Style[
                    "\!\(\*SuperscriptBox[\(10\), \(3\)]\)", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["\!\(\*SuperscriptBox[\(10\), \(3\)]\)"]}, 1]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["\!\(\*SuperscriptBox[\(10\), \(3\)]\)"]}, "RowHeader",
                   False], "Mouse"], 
                ImageSize -> {{347.20000000000005`, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation["\!\(\*SuperscriptBox[\(10\), \(3\)]\)", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["\!\(\*SuperscriptBox[\(10\), \(3\)]\)"], 
                   Key["factor"]}, "Item", False], "Mouse"], 
                ImageSize -> {{347.20000000000005`, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation["kilo", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["\!\(\*SuperscriptBox[\(10\), \(3\)]\)"], 
                   Key["name"]}, "Item", False], "Mouse"], 
                ImageSize -> {{56.00000000000001, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation["k", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["\!\(\*SuperscriptBox[\(10\), \(3\)]\)"], 
                   Key["symbol"]}, "Item", False], "Mouse"], 
                ImageSize -> {{33.6, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["\!\(\*SuperscriptBox[\(10\), \(6\)]\)", 
                    Style[
                    "\!\(\*SuperscriptBox[\(10\), \(6\)]\)", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["\!\(\*SuperscriptBox[\(10\), \(6\)]\)"]}, 1]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["\!\(\*SuperscriptBox[\(10\), \(6\)]\)"]}, "RowHeader",
                   False], "Mouse"], 
                ImageSize -> {{347.20000000000005`, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation["\!\(\*SuperscriptBox[\(10\), \(6\)]\)", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["\!\(\*SuperscriptBox[\(10\), \(6\)]\)"], 
                   Key["factor"]}, "Item", False], "Mouse"], 
                ImageSize -> {{347.20000000000005`, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation["mega", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["\!\(\*SuperscriptBox[\(10\), \(6\)]\)"], 
                   Key["name"]}, "Item", False], "Mouse"], 
                ImageSize -> {{56.00000000000001, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation["M", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["\!\(\*SuperscriptBox[\(10\), \(6\)]\)"], 
                   Key["symbol"]}, "Item", False], "Mouse"], 
                ImageSize -> {{33.6, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["\!\(\*SuperscriptBox[\(10\), \(9\)]\)", 
                    Style[
                    "\!\(\*SuperscriptBox[\(10\), \(9\)]\)", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["\!\(\*SuperscriptBox[\(10\), \(9\)]\)"]}, 1]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["\!\(\*SuperscriptBox[\(10\), \(9\)]\)"]}, "RowHeader",
                   False], "Mouse"], 
                ImageSize -> {{347.20000000000005`, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation["\!\(\*SuperscriptBox[\(10\), \(9\)]\)", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["\!\(\*SuperscriptBox[\(10\), \(9\)]\)"], 
                   Key["factor"]}, "Item", False], "Mouse"], 
                ImageSize -> {{347.20000000000005`, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation["giga", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["\!\(\*SuperscriptBox[\(10\), \(9\)]\)"], 
                   Key["name"]}, "Item", False], "Mouse"], 
                ImageSize -> {{56.00000000000001, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation["G", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["\!\(\*SuperscriptBox[\(10\), \(9\)]\)"], 
                   Key["symbol"]}, "Item", False], "Mouse"], 
                ImageSize -> {{33.6, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["\!\(\*SuperscriptBox[\(10\), \(12\)]\)", 
                    Style[
                    "\!\(\*SuperscriptBox[\(10\), \(12\)]\)", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["\!\(\*SuperscriptBox[\(10\), \(12\)]\)"]}, 1]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["\!\(\*SuperscriptBox[\(10\), \(12\)]\)"]}, 
                  "RowHeader", False], "Mouse"], 
                ImageSize -> {{347.20000000000005`, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation["\!\(\*SuperscriptBox[\(10\), \(12\)]\)", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["\!\(\*SuperscriptBox[\(10\), \(12\)]\)"], 
                   Key["factor"]}, "Item", False], "Mouse"], 
                ImageSize -> {{347.20000000000005`, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation["tera", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["\!\(\*SuperscriptBox[\(10\), \(12\)]\)"], 
                   Key["name"]}, "Item", False], "Mouse"], 
                ImageSize -> {{56.00000000000001, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation["T", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["\!\(\*SuperscriptBox[\(10\), \(12\)]\)"], 
                   Key["symbol"]}, "Item", False], "Mouse"], 
                ImageSize -> {{33.6, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["\!\(\*SuperscriptBox[\(10\), \(15\)]\)", 
                    Style[
                    "\!\(\*SuperscriptBox[\(10\), \(15\)]\)", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["\!\(\*SuperscriptBox[\(10\), \(15\)]\)"]}, 1]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["\!\(\*SuperscriptBox[\(10\), \(15\)]\)"]}, 
                  "RowHeader", False], "Mouse"], 
                ImageSize -> {{347.20000000000005`, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation["\!\(\*SuperscriptBox[\(10\), \(15\)]\)", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["\!\(\*SuperscriptBox[\(10\), \(15\)]\)"], 
                   Key["factor"]}, "Item", False], "Mouse"], 
                ImageSize -> {{347.20000000000005`, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation["peta", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["\!\(\*SuperscriptBox[\(10\), \(15\)]\)"], 
                   Key["name"]}, "Item", False], "Mouse"], 
                ImageSize -> {{56.00000000000001, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation["P", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["\!\(\*SuperscriptBox[\(10\), \(15\)]\)"], 
                   Key["symbol"]}, "Item", False], "Mouse"], 
                ImageSize -> {{33.6, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["\!\(\*SuperscriptBox[\(10\), \(18\)]\)", 
                    Style[
                    "\!\(\*SuperscriptBox[\(10\), \(18\)]\)", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["\!\(\*SuperscriptBox[\(10\), \(18\)]\)"]}, 1]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["\!\(\*SuperscriptBox[\(10\), \(18\)]\)"]}, 
                  "RowHeader", False], "Mouse"], 
                ImageSize -> {{347.20000000000005`, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation["\!\(\*SuperscriptBox[\(10\), \(18\)]\)", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["\!\(\*SuperscriptBox[\(10\), \(18\)]\)"], 
                   Key["factor"]}, "Item", False], "Mouse"], 
                ImageSize -> {{347.20000000000005`, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation["exa", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["\!\(\*SuperscriptBox[\(10\), \(18\)]\)"], 
                   Key["name"]}, "Item", False], "Mouse"], 
                ImageSize -> {{56.00000000000001, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation["E", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["\!\(\*SuperscriptBox[\(10\), \(18\)]\)"], 
                   Key["symbol"]}, "Item", False], "Mouse"], 
                ImageSize -> {{33.6, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["\!\(\*SuperscriptBox[\(10\), \(21\)]\)", 
                    Style[
                    "\!\(\*SuperscriptBox[\(10\), \(21\)]\)", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["\!\(\*SuperscriptBox[\(10\), \(21\)]\)"]}, 1]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["\!\(\*SuperscriptBox[\(10\), \(21\)]\)"]}, 
                  "RowHeader", False], "Mouse"], 
                ImageSize -> {{347.20000000000005`, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation["\!\(\*SuperscriptBox[\(10\), \(21\)]\)", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["\!\(\*SuperscriptBox[\(10\), \(21\)]\)"], 
                   Key["factor"]}, "Item", False], "Mouse"], 
                ImageSize -> {{347.20000000000005`, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation["zetta", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["\!\(\*SuperscriptBox[\(10\), \(21\)]\)"], 
                   Key["name"]}, "Item", False], "Mouse"], 
                ImageSize -> {{56.00000000000001, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation["Z", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["\!\(\*SuperscriptBox[\(10\), \(21\)]\)"], 
                   Key["symbol"]}, "Item", False], "Mouse"], 
                ImageSize -> {{33.6, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["\!\(\*SuperscriptBox[\(10\), \(24\)]\)", 
                    Style[
                    "\!\(\*SuperscriptBox[\(10\), \(24\)]\)", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["\!\(\*SuperscriptBox[\(10\), \(24\)]\)"]}, 1]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["\!\(\*SuperscriptBox[\(10\), \(24\)]\)"]}, 
                  "RowHeader", False], "Mouse"], 
                ImageSize -> {{347.20000000000005`, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation["\!\(\*SuperscriptBox[\(10\), \(24\)]\)", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["\!\(\*SuperscriptBox[\(10\), \(24\)]\)"], 
                   Key["factor"]}, "Item", False], "Mouse"], 
                ImageSize -> {{347.20000000000005`, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation["yotta", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["\!\(\*SuperscriptBox[\(10\), \(24\)]\)"], 
                   Key["name"]}, "Item", False], "Mouse"], 
                ImageSize -> {{56.00000000000001, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation["Y", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["\!\(\*SuperscriptBox[\(10\), \(24\)]\)"], 
                   Key["symbol"]}, "Item", False], "Mouse"], 
                ImageSize -> {{33.6, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["\!\(\*SuperscriptBox[\(10\), \(-3\)]\)", 
                    Style[
                    "\!\(\*SuperscriptBox[\(10\), \(-3\)]\)", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["\!\(\*SuperscriptBox[\(10\), \(-3\)]\)"]}, 1]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["\!\(\*SuperscriptBox[\(10\), \(-3\)]\)"]}, 
                  "RowHeader", False], "Mouse"], 
                ImageSize -> {{347.20000000000005`, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation["\!\(\*SuperscriptBox[\(10\), \(-3\)]\)", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["\!\(\*SuperscriptBox[\(10\), \(-3\)]\)"], 
                   Key["factor"]}, "Item", False], "Mouse"], 
                ImageSize -> {{347.20000000000005`, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation["milli", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["\!\(\*SuperscriptBox[\(10\), \(-3\)]\)"], 
                   Key["name"]}, "Item", False], "Mouse"], 
                ImageSize -> {{56.00000000000001, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation["m", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["\!\(\*SuperscriptBox[\(10\), \(-3\)]\)"], 
                   Key["symbol"]}, "Item", False], "Mouse"], 
                ImageSize -> {{33.6, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["\!\(\*SuperscriptBox[\(10\), \(-6\)]\)", 
                    Style[
                    "\!\(\*SuperscriptBox[\(10\), \(-6\)]\)", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["\!\(\*SuperscriptBox[\(10\), \(-6\)]\)"]}, 1]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["\!\(\*SuperscriptBox[\(10\), \(-6\)]\)"]}, 
                  "RowHeader", False], "Mouse"], 
                ImageSize -> {{347.20000000000005`, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation["\!\(\*SuperscriptBox[\(10\), \(-6\)]\)", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["\!\(\*SuperscriptBox[\(10\), \(-6\)]\)"], 
                   Key["factor"]}, "Item", False], "Mouse"], 
                ImageSize -> {{347.20000000000005`, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation["micro", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["\!\(\*SuperscriptBox[\(10\), \(-6\)]\)"], 
                   Key["name"]}, "Item", False], "Mouse"], 
                ImageSize -> {{56.00000000000001, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation["\[Mu]", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["\!\(\*SuperscriptBox[\(10\), \(-6\)]\)"], 
                   Key["symbol"]}, "Item", False], "Mouse"], 
                ImageSize -> {{33.6, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["\!\(\*SuperscriptBox[\(10\), \(-9\)]\)", 
                    Style[
                    "\!\(\*SuperscriptBox[\(10\), \(-9\)]\)", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["\!\(\*SuperscriptBox[\(10\), \(-9\)]\)"]}, 1]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["\!\(\*SuperscriptBox[\(10\), \(-9\)]\)"]}, 
                  "RowHeader", False], "Mouse"], 
                ImageSize -> {{347.20000000000005`, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation["\!\(\*SuperscriptBox[\(10\), \(-9\)]\)", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["\!\(\*SuperscriptBox[\(10\), \(-9\)]\)"], 
                   Key["factor"]}, "Item", False], "Mouse"], 
                ImageSize -> {{347.20000000000005`, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation["nano", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["\!\(\*SuperscriptBox[\(10\), \(-9\)]\)"], 
                   Key["name"]}, "Item", False], "Mouse"], 
                ImageSize -> {{56.00000000000001, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation["n", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["\!\(\*SuperscriptBox[\(10\), \(-9\)]\)"], 
                   Key["symbol"]}, "Item", False], "Mouse"], 
                ImageSize -> {{33.6, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["\!\(\*SuperscriptBox[\(10\), \(-12\)]\)", 
                    Style[
                    "\!\(\*SuperscriptBox[\(10\), \(-12\)]\)", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["\!\(\*SuperscriptBox[\(10\), \(-12\)]\)"]}, 1]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["\!\(\*SuperscriptBox[\(10\), \(-12\)]\)"]}, 
                  "RowHeader", False], "Mouse"], 
                ImageSize -> {{347.20000000000005`, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation["\!\(\*SuperscriptBox[\(10\), \(-12\)]\)", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["\!\(\*SuperscriptBox[\(10\), \(-12\)]\)"], 
                   Key["factor"]}, "Item", False], "Mouse"], 
                ImageSize -> {{347.20000000000005`, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation["pico", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["\!\(\*SuperscriptBox[\(10\), \(-12\)]\)"], 
                   Key["name"]}, "Item", False], "Mouse"], 
                ImageSize -> {{56.00000000000001, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation["p", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["\!\(\*SuperscriptBox[\(10\), \(-12\)]\)"], 
                   Key["symbol"]}, "Item", False], "Mouse"], 
                ImageSize -> {{33.6, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["\!\(\*SuperscriptBox[\(10\), \(-15\)]\)", 
                    Style[
                    "\!\(\*SuperscriptBox[\(10\), \(-15\)]\)", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["\!\(\*SuperscriptBox[\(10\), \(-15\)]\)"]}, 1]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["\!\(\*SuperscriptBox[\(10\), \(-15\)]\)"]}, 
                  "RowHeader", False], "Mouse"], 
                ImageSize -> {{347.20000000000005`, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation["\!\(\*SuperscriptBox[\(10\), \(-15\)]\)", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["\!\(\*SuperscriptBox[\(10\), \(-15\)]\)"], 
                   Key["factor"]}, "Item", False], "Mouse"], 
                ImageSize -> {{347.20000000000005`, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation["femto", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["\!\(\*SuperscriptBox[\(10\), \(-15\)]\)"], 
                   Key["name"]}, "Item", False], "Mouse"], 
                ImageSize -> {{56.00000000000001, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation["f", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["\!\(\*SuperscriptBox[\(10\), \(-15\)]\)"], 
                   Key["symbol"]}, "Item", False], "Mouse"], 
                ImageSize -> {{33.6, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["\!\(\*SuperscriptBox[\(10\), \(-18\)]\)", 
                    Style[
                    "\!\(\*SuperscriptBox[\(10\), \(-18\)]\)", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["\!\(\*SuperscriptBox[\(10\), \(-18\)]\)"]}, 1]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["\!\(\*SuperscriptBox[\(10\), \(-18\)]\)"]}, 
                  "RowHeader", False], "Mouse"], 
                ImageSize -> {{347.20000000000005`, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation["\!\(\*SuperscriptBox[\(10\), \(-18\)]\)", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["\!\(\*SuperscriptBox[\(10\), \(-18\)]\)"], 
                   Key["factor"]}, "Item", False], "Mouse"], 
                ImageSize -> {{347.20000000000005`, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation["atto", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["\!\(\*SuperscriptBox[\(10\), \(-18\)]\)"], 
                   Key["name"]}, "Item", False], "Mouse"], 
                ImageSize -> {{56.00000000000001, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation["a", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["\!\(\*SuperscriptBox[\(10\), \(-18\)]\)"], 
                   Key["symbol"]}, "Item", False], "Mouse"], 
                ImageSize -> {{33.6, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["\!\(\*SuperscriptBox[\(10\), \(-21\)]\)", 
                    Style[
                    "\!\(\*SuperscriptBox[\(10\), \(-21\)]\)", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["\!\(\*SuperscriptBox[\(10\), \(-21\)]\)"]}, 1]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["\!\(\*SuperscriptBox[\(10\), \(-21\)]\)"]}, 
                  "RowHeader", False], "Mouse"], 
                ImageSize -> {{347.20000000000005`, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation["\!\(\*SuperscriptBox[\(10\), \(-21\)]\)", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["\!\(\*SuperscriptBox[\(10\), \(-21\)]\)"], 
                   Key["factor"]}, "Item", False], "Mouse"], 
                ImageSize -> {{347.20000000000005`, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation["zepto", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["\!\(\*SuperscriptBox[\(10\), \(-21\)]\)"], 
                   Key["name"]}, "Item", False], "Mouse"], 
                ImageSize -> {{56.00000000000001, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation["z", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["\!\(\*SuperscriptBox[\(10\), \(-21\)]\)"], 
                   Key["symbol"]}, "Item", False], "Mouse"], 
                ImageSize -> {{33.6, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["\!\(\*SuperscriptBox[\(10\), \(-24\)]\)", 
                    Style[
                    "\!\(\*SuperscriptBox[\(10\), \(-24\)]\)", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["\!\(\*SuperscriptBox[\(10\), \(-24\)]\)"]}, 1]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["\!\(\*SuperscriptBox[\(10\), \(-24\)]\)"]}, 
                  "RowHeader", False], "Mouse"], 
                ImageSize -> {{347.20000000000005`, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation["\!\(\*SuperscriptBox[\(10\), \(-24\)]\)", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["\!\(\*SuperscriptBox[\(10\), \(-24\)]\)"], 
                   Key["factor"]}, "Item", False], "Mouse"], 
                ImageSize -> {{347.20000000000005`, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation["yocto", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["\!\(\*SuperscriptBox[\(10\), \(-24\)]\)"], 
                   Key["name"]}, "Item", False], "Mouse"], 
                ImageSize -> {{56.00000000000001, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation["y", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["\!\(\*SuperscriptBox[\(10\), \(-24\)]\)"], 
                   Key["symbol"]}, "Item", False], "Mouse"], 
                ImageSize -> {{33.6, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}}, 
            BaseStyle -> {
             ContextMenu -> 
              Dynamic[TypeSystem`NestedGrid`PackagePrivate`$\
contextMenuTrigger; 
                Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                  TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                  TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                   True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                   TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                  TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                   Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
              "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, 
            Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
            Spacings -> {0, 0}, Alignment -> Left, 
            BaseStyle -> {
             FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
              Plain}], LineBreakWithin -> False, ContextMenu -> {}, 
           NumberMarks -> False, ShowAutoStyles -> False]], 
        TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
       Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
        TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
           Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
           
           Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
             TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
             TypeSystem`NestedGrid`PackagePrivate`datasetData[
              TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
               FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
               TypeSystem`NestedGrid`PackagePrivate`renderGrid[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
               TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
              Not[
               FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
              TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
              TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
         TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
         TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
           FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
           TypeSystem`SparseGrid[
            TypeSystem`H["(data no longer present)"]], 
           TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
        TrackedSymbols :> {
         TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
          TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
       DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
       TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
        TypeSystem`PackageScope`SubViewPathbar[
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
         TypeSystem`NestedGrid`PackagePrivate`updateState[
         TypeSystem`NestedGrid`PackagePrivate`$state$$, 
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
          TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
          TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
       TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
       Framed[
        Dynamic[
         Replace[
         TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
             TypeSystem`NestedGrid`PackagePrivate`localHold[
             TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
             Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
             TypeSystem`NestedGrid`PackagePrivate`localHold[
             TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
              Blank[]], 
             Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
              Blank[]], 
             Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
              Blank[]]] :> (
            Increment[
             TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path$; 
            TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
             TypeSystem`NestedGrid`PackagePrivate`pathType$; 
            TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
             TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
            TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
             TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path$, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           Spacer[10], Blank[] :> Spacer[10]}], 
         TrackedSymbols :> {
          TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
        FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
        Top, ImageSize -> {Automatic, 15}], FontSize -> 1], 
      TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
      DynamicWrapperBox[
       DynamicBox[ToBoxes[
         Dataset`DatasetContent[
         2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
          "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], 
          "State" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
          "VPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], 
          "HPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], 
          "TopBar" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
          "BottomBar" -> 
          Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
          Hold[
            TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
        ImageSizeCache->{818., {235.13403328722342`, 240.86596671277658`}},
        TrackedSymbols:>{
         TypeSystem`NestedGrid`PackagePrivate`$state$$, 
          TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
       MouseAnnotation[],
       ImageSizeCache->{818., {235.13403328722342`, 240.86596671277658`}}],
      BaseStyle->{LineBreakWithin -> False},
      DynamicModuleValues:>{},
      Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
       CreateUUID[]),
      UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
     Deploy,
     DefaultBaseStyle->"Deploy"],
    Dataset`InterpretDataset[1],
    Editable->False,
    SelectWithContents->True,
    Selectable->False]}], ";"}]], "Input",
 CellChangeTimes->{{3.87493753920337*^9, 3.874937542174444*^9}},
 CellLabel->"In[301]:=",
 CellID->177833965,ExpressionUUID->"119f1d01-b0e7-4a1f-ba5a-2339d07ef9eb"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Physical Quantity", "Section",
 CellChangeTimes->{{3.8749376402852964`*^9, 3.874937642597829*^9}},
 CellID->431147246,ExpressionUUID->"f646b03c-88f1-48ee-a193-08ed8febc992"],

Cell["List the entity classes for the entity physical quantity:", "Text",
 CellChangeTimes->{{3.8749378151483073`*^9, 3.874937824683502*^9}},
 CellID->268717739,ExpressionUUID->"d22042f3-72d5-443b-9884-b914f1f5d82b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EntityClassList", "[", "\"\<PhysicalQuantity\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.874937661229225*^9, 3.8749376669588575`*^9}},
 CellLabel->"In[303]:=",
 CellID->209557182,ExpressionUUID->"eb6f11c7-9842-420c-87e3-81d14eff6ffb"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{"\"physical quantities\"", 
     RowBox[{"EntityClass", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "All"}], "]"}], 
     "\"EntityClass[\\\"PhysicalQuantity\\\", All]\"", 
     "\"physical quantities\""},
    "EntityClass"], ",", 
   TemplateBox[{"\"counting physical quantities\"", 
     RowBox[{"EntityClass", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"Counting\""}], "]"}], 
     "\"EntityClass[\\\"PhysicalQuantity\\\", \\\"Counting\\\"]\"", 
     "\"physical quantities\""},
    "EntityClass"], ",", 
   TemplateBox[{"\"physical quantity instances\"", 
     RowBox[{"EntityClass", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"PhysicalQuantityInstance\""}], 
       "]"}], "\"EntityClass[\\\"PhysicalQuantity\\\", \
\\\"PhysicalQuantityInstance\\\"]\"", "\"physical quantities\""},
    "EntityClass"], ",", 
   TemplateBox[{"\"SI base quantities\"", 
     RowBox[{"EntityClass", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"SIBase\""}], "]"}], 
     "\"EntityClass[\\\"PhysicalQuantity\\\", \\\"SIBase\\\"]\"", 
     "\"physical quantities\""},
    "EntityClass"]}], "}"}]], "Output",
 CellChangeTimes->{3.874937667813771*^9},
 CellLabel->"Out[303]=",
 CellID->112104980,ExpressionUUID->"7a183a8f-c400-447b-8efa-35cc706b9e16"]
}, Open  ]],

Cell["Sort by length:", "Text",
 CellChangeTimes->{{3.874937827148241*^9, 3.874937833705417*^9}},
 CellID->1029365149,ExpressionUUID->"8331600d-1a0c-46e5-aa24-75a28beab2db"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"SortBy", "[", 
   RowBox[{
    RowBox[{"Length", "[", 
     RowBox[{"EntityList", "[", "#", "]"}], "]"}], "&"}], "]"}], "[", 
  RowBox[{"EntityClassList", "[", "\"\<PhysicalQuantity\>\"", "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.874937672316471*^9, 3.874937722725905*^9}},
 CellLabel->"In[309]:=",
 CellID->33730613,ExpressionUUID->"6a502ff1-8511-46c6-a908-3c953ff35f0d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{"\"SI base quantities\"", 
     RowBox[{"EntityClass", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"SIBase\""}], "]"}], 
     "\"EntityClass[\\\"PhysicalQuantity\\\", \\\"SIBase\\\"]\"", 
     "\"physical quantities\""},
    "EntityClass"], ",", 
   TemplateBox[{"\"counting physical quantities\"", 
     RowBox[{"EntityClass", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"Counting\""}], "]"}], 
     "\"EntityClass[\\\"PhysicalQuantity\\\", \\\"Counting\\\"]\"", 
     "\"physical quantities\""},
    "EntityClass"], ",", 
   TemplateBox[{"\"physical quantity instances\"", 
     RowBox[{"EntityClass", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"PhysicalQuantityInstance\""}], 
       "]"}], "\"EntityClass[\\\"PhysicalQuantity\\\", \
\\\"PhysicalQuantityInstance\\\"]\"", "\"physical quantities\""},
    "EntityClass"], ",", 
   TemplateBox[{"\"physical quantities\"", 
     RowBox[{"EntityClass", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "All"}], "]"}], 
     "\"EntityClass[\\\"PhysicalQuantity\\\", All]\"", 
     "\"physical quantities\""},
    "EntityClass"]}], "}"}]], "Output",
 CellChangeTimes->{{3.874937678562091*^9, 3.874937686968832*^9}, {
  3.8749377191770077`*^9, 3.8749377232826347`*^9}},
 CellLabel->"Out[309]=",
 CellID->535295915,ExpressionUUID->"8530bf6e-10a7-4346-b49d-5d50bc344110"]
}, Open  ]],

Cell["Select classes with less than 54 elements:", "Text",
 CellChangeTimes->{{3.8749378370576844`*^9, 3.8749378430632887`*^9}},
 CellID->523688926,ExpressionUUID->"630ed799-cdec-4d82-8077-c1a75b5d907c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Select", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Length", "[", 
      RowBox[{"EntityList", "[", "#", "]"}], "]"}], "<", "54"}], "&"}], "]"}],
   "[", 
  RowBox[{
   RowBox[{"SortBy", "[", 
    RowBox[{
     RowBox[{"Length", "[", 
      RowBox[{"EntityList", "[", "#", "]"}], "]"}], "&"}], "]"}], "[", 
   RowBox[{"EntityClassList", "[", "\"\<PhysicalQuantity\>\"", "]"}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8749376902253666`*^9, 3.874937737838567*^9}},
 CellLabel->"In[311]:=",
 CellID->23915411,ExpressionUUID->"a2b8abbf-2bdc-4665-b504-c668dc25a541"],

Cell[BoxData[
 RowBox[{"{", 
  TemplateBox[{"\"SI base quantities\"", 
    RowBox[{"EntityClass", "[", 
      RowBox[{"\"PhysicalQuantity\"", ",", "\"SIBase\""}], "]"}], 
    "\"EntityClass[\\\"PhysicalQuantity\\\", \\\"SIBase\\\"]\"", 
    "\"physical quantities\""},
   "EntityClass"], "}"}]], "Output",
 CellChangeTimes->{{3.874937699758582*^9, 3.8749377384092393`*^9}},
 CellLabel->"Out[311]=",
 CellID->292825508,ExpressionUUID->"1f98cf6c-7683-4d86-9848-5f8c4d101e9f"]
}, Open  ]],

Cell["List the elements of the class SI base quantities:", "Text",
 CellChangeTimes->{{3.8749378475432434`*^9, 3.8749378558936567`*^9}},
 CellID->2141125,ExpressionUUID->"fb6451f8-8d27-41d1-a473-3e1f4ceeacf3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EntityList", "/@", 
  RowBox[{
   RowBox[{"Select", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Length", "[", 
       RowBox[{"EntityList", "[", "#", "]"}], "]"}], "<", "54"}], "&"}], 
    "]"}], "[", 
   RowBox[{
    RowBox[{"SortBy", "[", 
     RowBox[{
      RowBox[{"Length", "[", 
       RowBox[{"EntityList", "[", "#", "]"}], "]"}], "&"}], "]"}], "[", 
    RowBox[{"EntityClassList", "[", "\"\<PhysicalQuantity\>\"", "]"}], "]"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.8749377414332438`*^9, 3.8749377437238903`*^9}},
 CellLabel->"In[312]:=",
 CellID->164217521,ExpressionUUID->"61352518-d353-4cdb-b291-acb6702e4224"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    TemplateBox[{"\"length\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"Length\""}], "]"}], 
      "\"Entity[\\\"PhysicalQuantity\\\", \\\"Length\\\"]\"", 
      "\"physical quantity\""},
     "Entity"], ",", 
    TemplateBox[{"\"mass\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"Mass\""}], "]"}], 
      "\"Entity[\\\"PhysicalQuantity\\\", \\\"Mass\\\"]\"", 
      "\"physical quantity\""},
     "Entity"], ",", 
    TemplateBox[{"\"time\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"Time\""}], "]"}], 
      "\"Entity[\\\"PhysicalQuantity\\\", \\\"Time\\\"]\"", 
      "\"physical quantity\""},
     "Entity"], ",", 
    TemplateBox[{"\"electric current\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"ElectricCurrent\""}], "]"}], 
      "\"Entity[\\\"PhysicalQuantity\\\", \\\"ElectricCurrent\\\"]\"", 
      "\"physical quantity\""},
     "Entity"], ",", 
    TemplateBox[{"\"temperature\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"Temperature\""}], "]"}], 
      "\"Entity[\\\"PhysicalQuantity\\\", \\\"Temperature\\\"]\"", 
      "\"physical quantity\""},
     "Entity"], ",", 
    TemplateBox[{"\"amount of substance\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"Amount\""}], "]"}], 
      "\"Entity[\\\"PhysicalQuantity\\\", \\\"Amount\\\"]\"", 
      "\"physical quantity\""},
     "Entity"], ",", 
    TemplateBox[{"\"luminous intensity\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"LuminousIntensity\""}], "]"}],
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"LuminousIntensity\\\"]\"", 
      "\"physical quantity\""},
     "Entity"]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.8749377445219717`*^9},
 CellLabel->"Out[312]=",
 CellID->121216579,ExpressionUUID->"21ee3c88-9499-4444-a38f-b50e616509e9"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Neat Examples", "Section",
 CellChangeTimes->{{3.874937862066272*^9, 3.8749378656277733`*^9}},
 CellID->131566826,ExpressionUUID->"0891018b-720c-4793-b62c-b94a87f15b17"],

Cell["Make a function to write the dimensional exponent:", "Text",
 CellChangeTimes->{{3.8749379375852723`*^9, 3.8749379442894173`*^9}},
 CellID->13514422,ExpressionUUID->"618bc220-31dc-4b86-b47f-460c3ea214e3"],

Cell[BoxData[{
 RowBox[{"DimensionalProduct", "//", "ClearAll"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"DimensionalProduct", "[", 
    RowBox[{"list_", "?", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"!", 
        RowBox[{"QuantityQ", "[", "#", "]"}]}], "&"}], ")"}]}], "]"}], ":=", 
   RowBox[{
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"terms", ",", "BaseQuantities"}], "}"}], ",", 
      RowBox[{
       RowBox[{"BaseQuantities", "=", 
        RowBox[{"AssociationThread", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
           "\"\<TimeUnit\>\"", ",", "\"\<LengthUnit\>\"", ",", 
            "\"\<MassUnit\>\"", ",", "\"\<ElectricCurrentUnit\>\"", ",", 
            "\"\<TemperatureUnit\>\"", ",", 
            "\"\<TemperatureDifferenceUnit\>\"", ",", "\"\<AmountUnit\>\"", 
            ",", "\"\<LuminousIntensityUnit\>\""}], "}"}], "->", 
          RowBox[{"{", 
           RowBox[{
           "\"\<T\>\"", ",", "\"\<L\>\"", ",", "\"\<M\>\"", ",", "\"\<I\>\"", 
            ",", "\"\<\[CapitalTheta]\>\"", ",", "\"\<\[CapitalTheta]\>\"", 
            ",", "\"\<N\>\"", ",", "\"\<J\>\""}], "}"}]}], "]"}]}], ";", 
       RowBox[{"terms", "=", 
        RowBox[{"Superscript", "@@@", 
         RowBox[{
          RowBox[{"ReverseSortBy", "[", 
           RowBox[{
            RowBox[{"Position", "[", 
             RowBox[{
              RowBox[{"First", "[", "#", "]"}], ",", 
              RowBox[{"Values", "[", "BaseQuantities", "]"}]}], "]"}], "&"}], 
           "]"}], "[", 
          RowBox[{
           RowBox[{
            RowBox[{"DeleteCases", "[", 
             RowBox[{"{", 
              RowBox[{"\"\<AngleUnit\>\"", ",", "_"}], "}"}], "]"}], "[", 
            "list", "]"}], "/.", 
           RowBox[{"Normal", "[", "BaseQuantities", "]"}]}], "]"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", "terms", "]"}], "==", "1"}], ",", 
         RowBox[{"First", "[", "terms", "]"}], ",", 
         RowBox[{"CenterDot", "@@", "terms"}]}], "]"}]}]}], "]"}], "/;", 
    RowBox[{
     RowBox[{"ContainsOnly", "[", 
      RowBox[{"{", 
       RowBox[{
       "\"\<TimeUnit\>\"", ",", "\"\<LengthUnit\>\"", ",", "\"\<MassUnit\>\"",
         ",", "\"\<ElectricCurrentUnit\>\"", ",", "\"\<TemperatureUnit\>\"", 
        ",", "\"\<TemperatureDifferenceUnit\>\"", ",", "\"\<AmountUnit\>\"", 
        ",", "\"\<LuminousIntensityUnit\>\""}], "}"}], "]"}], "[", 
     RowBox[{
      RowBox[{
       RowBox[{"DeleteCases", "[", 
        RowBox[{"{", 
         RowBox[{"\"\<AngleUnit\>\"", ",", "_"}], "}"}], "]"}], "[", "list", 
       "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"DimensionalProduct", "[", 
    RowBox[{"quantity_", "?", "QuantityQ"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"terms", ",", "BaseQuantities"}], "}"}], ",", 
      RowBox[{
       RowBox[{"BaseQuantities", "=", 
        RowBox[{"AssociationThread", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
           "\"\<TimeUnit\>\"", ",", "\"\<LengthUnit\>\"", ",", 
            "\"\<MassUnit\>\"", ",", "\"\<ElectricCurrentUnit\>\"", ",", 
            "\"\<TemperatureUnit\>\"", ",", 
            "\"\<TemperatureDifferenceUnit\>\"", ",", "\"\<AmountUnit\>\"", 
            ",", "\"\<LuminousIntensityUnit\>\""}], "}"}], "->", 
          RowBox[{"{", 
           RowBox[{
           "\"\<T\>\"", ",", "\"\<L\>\"", ",", "\"\<M\>\"", ",", "\"\<I\>\"", 
            ",", "\"\<\[CapitalTheta]\>\"", ",", "\"\<\[CapitalTheta]\>\"", 
            ",", "\"\<N\>\"", ",", "\"\<J\>\""}], "}"}]}], "]"}]}], ";", 
       RowBox[{"terms", "=", 
        RowBox[{"Superscript", "@@@", 
         RowBox[{
          RowBox[{"ReverseSortBy", "[", 
           RowBox[{
            RowBox[{"Position", "[", 
             RowBox[{
              RowBox[{"First", "[", "#", "]"}], ",", 
              RowBox[{"Values", "[", "BaseQuantities", "]"}]}], "]"}], "&"}], 
           "]"}], "[", 
          RowBox[{
           RowBox[{
            RowBox[{"DeleteCases", "[", 
             RowBox[{"{", 
              RowBox[{"\"\<AngleUnit\>\"", ",", "_"}], "}"}], "]"}], "[", 
            RowBox[{"UnitDimensions", "[", "quantity", "]"}], "]"}], "/.", 
           RowBox[{"Normal", "[", "BaseQuantities", "]"}]}], "]"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", "terms", "]"}], "==", "1"}], ",", 
         RowBox[{"First", "[", "terms", "]"}], ",", 
         RowBox[{"CenterDot", "@@", "terms"}]}], "]"}]}]}], "]"}], "/;", 
    RowBox[{
     RowBox[{"ContainsOnly", "[", 
      RowBox[{"{", 
       RowBox[{
       "\"\<TimeUnit\>\"", ",", "\"\<LengthUnit\>\"", ",", "\"\<MassUnit\>\"",
         ",", "\"\<ElectricCurrentUnit\>\"", ",", "\"\<TemperatureUnit\>\"", 
        ",", "\"\<TemperatureDifferenceUnit\>\"", ",", "\"\<AmountUnit\>\"", 
        ",", "\"\<LuminousIntensityUnit\>\""}], "}"}], "]"}], "[", 
     RowBox[{
      RowBox[{
       RowBox[{"DeleteCases", "[", 
        RowBox[{"{", 
         RowBox[{"\"\<AngleUnit\>\"", ",", "_"}], "}"}], "]"}], "[", 
       RowBox[{"UnitDimensions", "[", "quantity", "]"}], "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.874937963308776*^9, 3.8749379842195444`*^9}, {
  3.874938028485216*^9, 3.8749380449476576`*^9}, {3.8749380808865004`*^9, 
  3.8749380815163717`*^9}, {3.8749381221352425`*^9, 3.8749381258671303`*^9}, {
  3.87493820986493*^9, 3.874938254442815*^9}, {3.874938411922103*^9, 
  3.874938477776574*^9}, {3.874938513414654*^9, 3.874938518549075*^9}, {
  3.8749386344683943`*^9, 3.874938667757544*^9}},
 CellLabel->"In[386]:=",
 CellID->688034743,ExpressionUUID->"35a2733b-1010-4ece-898d-859035ae58d0"],

Cell["\<\
View the number of physical quantities by total absolute dimension:\
\>", "ExampleText",
 CellID->998168428,ExpressionUUID->"4dcd32fc-96e6-442c-858f-69586e061e28"],

Cell[BoxData[
 RowBox[{
  RowBox[{"dimensionsizes", "=", 
   RowBox[{"ReverseSort", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Total", "[", 
         RowBox[{"Abs", "[", 
          RowBox[{"#2", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", 
             RowBox[{"-", "1"}]}], "]"}], "]"}], "]"}], "]"}], ",", "#1", ",",
         "#2"}], "}"}], "&"}], "@@@", 
     RowBox[{"EntityValue", "[", 
      RowBox[{"\"\<PhysicalQuantity\>\"", ",", 
       RowBox[{"{", 
        RowBox[{"\"\<CanonicalName\>\"", ",", "\"\<Dimensions\>\""}], "}"}]}],
       "]"}]}], "]"}]}], ";"}]], "Input",
 CellLabel->"In[313]:=",
 CellID->74519032,ExpressionUUID->"3b62a419-9e0b-44a4-a758-2d29471642b0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Take", "[", 
  RowBox[{"dimensionsizes", ",", "3"}], "]"}]], "Input",
 CellChangeTimes->{{3.8749378904298763`*^9, 3.8749378963702116`*^9}, 
   3.874937934856043*^9},
 CellLabel->"In[315]:=",
 CellID->303662033,ExpressionUUID->"667d64cf-1ab7-4b7c-b3d4-3876747014b5"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"26", ",", "\<\"QEDEulerHeisenbergLagrangianFactor\"\>", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"ElectricCurrentUnit\"\>", ",", "4"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\<\"LengthUnit\"\>", ",", 
         RowBox[{"-", "7"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\<\"MassUnit\"\>", ",", 
         RowBox[{"-", "4"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\<\"TimeUnit\"\>", ",", "11"}], "}"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "22", ",", "\<\"ElectricAlternativeThirdOrderNonlinearSusceptibility\"\>",
      ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"ElectricCurrentUnit\"\>", ",", "4"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\<\"LengthUnit\"\>", ",", 
         RowBox[{"-", "5"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\<\"MassUnit\"\>", ",", 
         RowBox[{"-", "3"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\<\"TimeUnit\"\>", ",", "10"}], "}"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"20", ",", "\<\"QuarticCauchyCoefficients\"\>", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"LengthUnit\"\>", ",", "8"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\<\"MassUnit\"\>", ",", "4"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\<\"TimeUnit\"\>", ",", 
         RowBox[{"-", "8"}]}], "}"}]}], "}"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.8749378966839533`*^9, 3.874937935483557*^9},
 CellLabel->"Out[315]=",
 CellID->43873204,ExpressionUUID->"67d344b4-8a17-46f3-935f-b6bdc1f1295b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DimensionalProduct", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\"\<ElectricCurrentUnit\>\"", ",", "4"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"\"\<LengthUnit\>\"", ",", 
      RowBox[{"-", "7"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"\"\<MassUnit\>\"", ",", 
      RowBox[{"-", "4"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"\"\<TimeUnit\>\"", ",", "11"}], "}"}]}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.874938001282688*^9, 3.8749380039588623`*^9}, {
  3.874938053832539*^9, 3.874938058320492*^9}},
 CellLabel->"In[374]:=",
 CellID->134165909,ExpressionUUID->"f7234bf3-d0b6-4388-bddd-a4f77504cf42"],

Cell[BoxData[
 RowBox[{
  TemplateBox[{"\"T\"", "11"},
   "Superscript"], "\[CenterDot]", 
  TemplateBox[{"\"M\"", 
    RowBox[{"-", "4"}]},
   "Superscript"], "\[CenterDot]", 
  TemplateBox[{"\"L\"", 
    RowBox[{"-", "7"}]},
   "Superscript"], "\[CenterDot]", 
  TemplateBox[{"\"I\"", "4"},
   "Superscript"]}]], "Output",
 CellChangeTimes->{
  3.874938004303502*^9, {3.874938049304039*^9, 3.874938086227539*^9}, 
   3.8749381312587748`*^9, 3.8749382602868166`*^9, 3.8749384818357415`*^9},
 CellLabel->"Out[374]=",
 CellID->487910261,ExpressionUUID->"379d849a-7e2b-46ab-982b-ad3d150da6e9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Take", "[", 
   RowBox[{"dimensionsizes", ",", "3"}], "]"}], "[", 
  RowBox[{"[", 
   RowBox[{"All", ",", 
    RowBox[{"-", "1"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.874938312511825*^9, 3.874938326509429*^9}},
 CellLabel->"In[375]:=",
 CellID->243364218,ExpressionUUID->"0df055c6-f35b-4885-afea-744b030b5a57"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\<\"ElectricCurrentUnit\"\>", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"LengthUnit\"\>", ",", 
       RowBox[{"-", "7"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"MassUnit\"\>", ",", 
       RowBox[{"-", "4"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"TimeUnit\"\>", ",", "11"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\<\"ElectricCurrentUnit\"\>", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"LengthUnit\"\>", ",", 
       RowBox[{"-", "5"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"MassUnit\"\>", ",", 
       RowBox[{"-", "3"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"TimeUnit\"\>", ",", "10"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\<\"LengthUnit\"\>", ",", "8"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"MassUnit\"\>", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"TimeUnit\"\>", ",", 
       RowBox[{"-", "8"}]}], "}"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.8749383222675843`*^9, 3.874938326823083*^9}, 
   3.8749384842634063`*^9},
 CellLabel->"Out[375]=",
 CellID->198797989,ExpressionUUID->"37afb874-169a-4576-8020-6cc4a430dbee"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Map", "[", 
  RowBox[{"DimensionalProduct", ",", 
   RowBox[{
    RowBox[{"Take", "[", 
     RowBox[{"dimensionsizes", ",", "3"}], "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", 
      RowBox[{"-", "1"}]}], "]"}], "]"}], ",", 
   RowBox[{"{", "1", "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8749383304939737`*^9, 3.874938367705411*^9}},
 CellLabel->"In[376]:=",
 CellID->64168897,ExpressionUUID->"39495c78-6e80-487b-84e9-317b0717ff57"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    TemplateBox[{"\"T\"", "11"},
     "Superscript"], "\[CenterDot]", 
    TemplateBox[{"\"M\"", 
      RowBox[{"-", "4"}]},
     "Superscript"], "\[CenterDot]", 
    TemplateBox[{"\"L\"", 
      RowBox[{"-", "7"}]},
     "Superscript"], "\[CenterDot]", 
    TemplateBox[{"\"I\"", "4"},
     "Superscript"]}], ",", 
   RowBox[{
    TemplateBox[{"\"T\"", "10"},
     "Superscript"], "\[CenterDot]", 
    TemplateBox[{"\"M\"", 
      RowBox[{"-", "3"}]},
     "Superscript"], "\[CenterDot]", 
    TemplateBox[{"\"L\"", 
      RowBox[{"-", "5"}]},
     "Superscript"], "\[CenterDot]", 
    TemplateBox[{"\"I\"", "4"},
     "Superscript"]}], ",", 
   RowBox[{
    TemplateBox[{"\"T\"", 
      RowBox[{"-", "8"}]},
     "Superscript"], "\[CenterDot]", 
    TemplateBox[{"\"M\"", "4"},
     "Superscript"], "\[CenterDot]", 
    TemplateBox[{"\"L\"", "8"},
     "Superscript"]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.874938363713386*^9, 3.8749383681964183`*^9}, 
   3.8749384856492825`*^9},
 CellLabel->"Out[376]=",
 CellID->124928308,ExpressionUUID->"bad4b0b2-546b-4d2c-b213-d509800383ba"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Column", "[", 
   RowBox[{"Map", "[", 
    RowBox[{"DimensionalProduct", ",", 
     RowBox[{
      RowBox[{"Take", "[", 
       RowBox[{"dimensionsizes", ",", "3"}], "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", 
        RowBox[{"-", "1"}]}], "]"}], "]"}], ",", 
     RowBox[{"{", "1", "}"}]}], "]"}], "]"}], "//", 
  "TraditionalForm"}]], "Input",
 CellChangeTimes->{{3.8749383764958405`*^9, 3.874938382510467*^9}},
 CellLabel->"In[377]:=",
 CellID->278941956,ExpressionUUID->"0e0de20b-7483-48e7-ba88-837046c7a4e1"],

Cell[BoxData[
 FormBox[
  TagBox[GridBox[{
     {
      RowBox[{
       TemplateBox[{"\"T\"", "11"},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"M\"", 
         RowBox[{"-", "4"}]},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"L\"", 
         RowBox[{"-", "7"}]},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"I\"", "4"},
        "Superscript"]}]},
     {
      RowBox[{
       TemplateBox[{"\"T\"", "10"},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"M\"", 
         RowBox[{"-", "3"}]},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"L\"", 
         RowBox[{"-", "5"}]},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"I\"", "4"},
        "Superscript"]}]},
     {
      RowBox[{
       TemplateBox[{"\"T\"", 
         RowBox[{"-", "8"}]},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"M\"", "4"},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"L\"", "8"},
        "Superscript"]}]}
    },
    DefaultBaseStyle->"Column",
    GridBoxAlignment->{"Columns" -> {{Left}}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
   "Column"], TraditionalForm]], "Output",
 CellChangeTimes->{{3.8749383784651837`*^9, 3.8749383827597885`*^9}, 
   3.874938487521432*^9},
 CellLabel->"Out[377]//TraditionalForm=",
 CellID->78622866,ExpressionUUID->"2d4ba55e-7f11-4f1b-b359-c16a4996739b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Column", "[", 
   RowBox[{"Map", "[", 
    RowBox[{"DimensionalProduct", ",", 
     RowBox[{
      RowBox[{"Take", "[", 
       RowBox[{"dimensionsizes", ",", "20"}], "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", 
        RowBox[{"-", "1"}]}], "]"}], "]"}], ",", 
     RowBox[{"{", "1", "}"}]}], "]"}], "]"}], "//", 
  "TraditionalForm"}]], "Input",
 CellChangeTimes->{{3.8749383764958405`*^9, 3.8749383900637197`*^9}},
 CellLabel->"In[389]:=",
 CellID->673880173,ExpressionUUID->"ea6c1ba8-8ef1-4d67-93a2-1905c2ec1cdb"],

Cell[BoxData[
 FormBox[
  TagBox[GridBox[{
     {
      RowBox[{
       TemplateBox[{"\"T\"", "11"},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"M\"", 
         RowBox[{"-", "4"}]},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"L\"", 
         RowBox[{"-", "7"}]},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"I\"", "4"},
        "Superscript"]}]},
     {
      RowBox[{
       TemplateBox[{"\"T\"", "10"},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"M\"", 
         RowBox[{"-", "3"}]},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"L\"", 
         RowBox[{"-", "5"}]},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"I\"", "4"},
        "Superscript"]}]},
     {
      RowBox[{
       TemplateBox[{"\"T\"", 
         RowBox[{"-", "8"}]},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"M\"", "4"},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"L\"", "8"},
        "Superscript"]}]},
     {
      RowBox[{
       TemplateBox[{"\"T\"", "10"},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"M\"", 
         RowBox[{"-", "3"}]},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"L\"", 
         RowBox[{"-", "2"}]},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"I\"", "4"},
        "Superscript"]}]},
     {
      RowBox[{
       TemplateBox[{"\"T\"", 
         RowBox[{"-", "6"}]},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"M\"", "4"},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"L\"", "8"},
        "Superscript"]}]},
     {
      RowBox[{
       TemplateBox[{"\"\[CapitalTheta]\"", 
         RowBox[{"-", "2"}]},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"T\"", 
         RowBox[{"-", "6"}]},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"M\"", "2"},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"L\"", "4"},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"I\"", 
         RowBox[{"-", "2"}]},
        "Superscript"]}]},
     {
      RowBox[{
       TemplateBox[{"\"T\"", 
         RowBox[{"-", "8"}]},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"M\"", "2"},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"L\"", "4"},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"I\"", 
         RowBox[{"-", "2"}]},
        "Superscript"]}]},
     {
      RowBox[{
       TemplateBox[{"\"\[CapitalTheta]\"", 
         RowBox[{"-", "2"}]},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"T\"", 
         RowBox[{"-", "6"}]},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"M\"", "2"},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"L\"", "4"},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"I\"", 
         RowBox[{"-", "2"}]},
        "Superscript"]}]},
     {
      RowBox[{
       TemplateBox[{"\"T\"", "7"},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"M\"", 
         RowBox[{"-", "2"}]},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"L\"", 
         RowBox[{"-", "4"}]},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"I\"", "3"},
        "Superscript"]}]},
     {
      RowBox[{
       TemplateBox[{"\"T\"", "8"},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"M\"", 
         RowBox[{"-", "3"}]},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"I\"", "4"},
        "Superscript"]}]},
     {
      RowBox[{
       TemplateBox[{"\"T\"", "7"},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"M\"", 
         RowBox[{"-", "2"}]},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"L\"", 
         RowBox[{"-", "4"}]},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"I\"", "2"},
        "Superscript"]}]},
     {
      RowBox[{
       TemplateBox[{"\"T\"", 
         RowBox[{"-", "7"}]},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"M\"", "2"},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"L\"", "3"},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"I\"", 
         RowBox[{"-", "2"}]},
        "Superscript"]}]},
     {
      RowBox[{
       TemplateBox[{"\"T\"", 
         RowBox[{"-", "6"}]},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"M\"", "2"},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"L\"", "4"},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"I\"", 
         RowBox[{"-", "2"}]},
        "Superscript"]}]},
     {
      RowBox[{
       TemplateBox[{"\"T\"", "4"},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"M\"", 
         RowBox[{"-", "1"}]},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"L\"", 
         RowBox[{"-", "7"}]},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"I\"", "2"},
        "Superscript"]}]},
     {
      RowBox[{
       TemplateBox[{"\"T\"", "5"},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"M\"", 
         RowBox[{"-", "1"}]},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"L\"", 
         RowBox[{"-", "6"}]},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"I\"", "2"},
        "Superscript"]}]},
     {
      RowBox[{
       TemplateBox[{"\"T\"", 
         RowBox[{"-", "6"}]},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"M\"", "2"},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"L\"", "4"},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"I\"", 
         RowBox[{"-", "2"}]},
        "Superscript"]}]},
     {
      RowBox[{
       TemplateBox[{"\"T\"", "4"},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"M\"", 
         RowBox[{"-", "2"}]},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"L\"", 
         RowBox[{"-", "6"}]},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"I\"", "1"},
        "Superscript"]}]},
     {
      RowBox[{
       TemplateBox[{"\"T\"", 
         RowBox[{"-", "4"}]},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"M\"", "1"},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"L\"", "4"},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"J\"", 
         RowBox[{"-", "1"}]},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"I\"", 
         RowBox[{"-", "1"}]},
        "Superscript"]}]},
     {
      RowBox[{
       TemplateBox[{"\"T\"", "6"},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"M\"", 
         RowBox[{"-", "2"}]},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"L\"", 
         RowBox[{"-", "3"}]},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"I\"", "2"},
        "Superscript"]}]},
     {
      RowBox[{
       TemplateBox[{"\"T\"", 
         RowBox[{"-", "4"}]},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"M\"", "2"},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"L\"", "5"},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"I\"", 
         RowBox[{"-", "2"}]},
        "Superscript"]}]}
    },
    DefaultBaseStyle->"Column",
    GridBoxAlignment->{"Columns" -> {{Left}}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
   "Column"], TraditionalForm]], "Output",
 CellChangeTimes->{3.874938390394272*^9, 3.8749384476097975`*^9, 
  3.874938490198222*^9, 3.87493867218666*^9},
 CellLabel->"Out[389]//TraditionalForm=",
 CellID->62760128,ExpressionUUID->"146cdcaa-9494-487f-87df-e8f022b91969"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Column", "[", 
   RowBox[{"Map", "[", 
    RowBox[{"DimensionalProduct", ",", 
     RowBox[{
      RowBox[{"Take", "[", 
       RowBox[{"dimensionsizes", ",", "3"}], "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", 
        RowBox[{"-", "1"}]}], "]"}], "]"}], ",", 
     RowBox[{"{", "1", "}"}]}], "]"}], "]"}], "//", 
  "TraditionalForm"}]], "Input",
 CellChangeTimes->{{3.8749383764958405`*^9, 3.8749383900637197`*^9}, {
   3.874938684632173*^9, 3.8749386872604904`*^9}, 3.8749387441660957`*^9},
 CellID->92270501,ExpressionUUID->"3e13a781-4f08-46e3-8056-e9cddf40ab0f"],

Cell[BoxData[
 FormBox[
  TagBox[GridBox[{
     {
      RowBox[{
       TemplateBox[{"\"T\"", "11"},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"M\"", 
         RowBox[{"-", "4"}]},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"L\"", 
         RowBox[{"-", "7"}]},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"I\"", "4"},
        "Superscript"]}]},
     {
      RowBox[{
       TemplateBox[{"\"T\"", "10"},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"M\"", 
         RowBox[{"-", "3"}]},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"L\"", 
         RowBox[{"-", "5"}]},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"I\"", "4"},
        "Superscript"]}]},
     {
      RowBox[{
       TemplateBox[{"\"T\"", 
         RowBox[{"-", "8"}]},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"M\"", "4"},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"L\"", "8"},
        "Superscript"]}]},
     {
      RowBox[{
       TemplateBox[{"\"T\"", "10"},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"M\"", 
         RowBox[{"-", "3"}]},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"L\"", 
         RowBox[{"-", "2"}]},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"I\"", "4"},
        "Superscript"]}]},
     {
      RowBox[{
       TemplateBox[{"\"T\"", 
         RowBox[{"-", "6"}]},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"M\"", "4"},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"L\"", "8"},
        "Superscript"]}]},
     {
      RowBox[{
       TemplateBox[{"\"\[CapitalTheta]\"", 
         RowBox[{"-", "2"}]},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"T\"", 
         RowBox[{"-", "6"}]},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"M\"", "2"},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"L\"", "4"},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"I\"", 
         RowBox[{"-", "2"}]},
        "Superscript"]}]},
     {
      RowBox[{
       TemplateBox[{"\"T\"", 
         RowBox[{"-", "8"}]},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"M\"", "2"},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"L\"", "4"},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"I\"", 
         RowBox[{"-", "2"}]},
        "Superscript"]}]},
     {
      RowBox[{
       TemplateBox[{"\"\[CapitalTheta]\"", 
         RowBox[{"-", "2"}]},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"T\"", 
         RowBox[{"-", "6"}]},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"M\"", "2"},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"L\"", "4"},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"I\"", 
         RowBox[{"-", "2"}]},
        "Superscript"]}]},
     {
      RowBox[{
       TemplateBox[{"\"T\"", "7"},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"M\"", 
         RowBox[{"-", "2"}]},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"L\"", 
         RowBox[{"-", "4"}]},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"I\"", "3"},
        "Superscript"]}]},
     {
      RowBox[{
       TemplateBox[{"\"T\"", "8"},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"M\"", 
         RowBox[{"-", "3"}]},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"I\"", "4"},
        "Superscript"]}]},
     {
      RowBox[{
       TemplateBox[{"\"T\"", "7"},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"M\"", 
         RowBox[{"-", "2"}]},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"L\"", 
         RowBox[{"-", "4"}]},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"I\"", "2"},
        "Superscript"]}]},
     {
      RowBox[{
       TemplateBox[{"\"T\"", 
         RowBox[{"-", "7"}]},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"M\"", "2"},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"L\"", "3"},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"I\"", 
         RowBox[{"-", "2"}]},
        "Superscript"]}]},
     {
      RowBox[{
       TemplateBox[{"\"T\"", 
         RowBox[{"-", "6"}]},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"M\"", "2"},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"L\"", "4"},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"I\"", 
         RowBox[{"-", "2"}]},
        "Superscript"]}]},
     {
      RowBox[{
       TemplateBox[{"\"T\"", "4"},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"M\"", 
         RowBox[{"-", "1"}]},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"L\"", 
         RowBox[{"-", "7"}]},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"I\"", "2"},
        "Superscript"]}]},
     {
      RowBox[{
       TemplateBox[{"\"T\"", "5"},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"M\"", 
         RowBox[{"-", "1"}]},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"L\"", 
         RowBox[{"-", "6"}]},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"I\"", "2"},
        "Superscript"]}]},
     {
      RowBox[{
       TemplateBox[{"\"T\"", 
         RowBox[{"-", "6"}]},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"M\"", "2"},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"L\"", "4"},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"I\"", 
         RowBox[{"-", "2"}]},
        "Superscript"]}]},
     {
      RowBox[{
       TemplateBox[{"\"T\"", "4"},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"M\"", 
         RowBox[{"-", "2"}]},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"L\"", 
         RowBox[{"-", "6"}]},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"I\"", "1"},
        "Superscript"]}]},
     {
      RowBox[{
       TemplateBox[{"\"T\"", 
         RowBox[{"-", "4"}]},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"M\"", "1"},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"L\"", "4"},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"J\"", 
         RowBox[{"-", "1"}]},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"I\"", 
         RowBox[{"-", "1"}]},
        "Superscript"]}]},
     {
      RowBox[{
       TemplateBox[{"\"T\"", "6"},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"M\"", 
         RowBox[{"-", "2"}]},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"L\"", 
         RowBox[{"-", "3"}]},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"I\"", "2"},
        "Superscript"]}]},
     {
      RowBox[{
       TemplateBox[{"\"T\"", 
         RowBox[{"-", "4"}]},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"M\"", "2"},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"L\"", "5"},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"I\"", 
         RowBox[{"-", "2"}]},
        "Superscript"]}]},
     {
      RowBox[{
       TemplateBox[{"\"T\"", "6"},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"M\"", 
         RowBox[{"-", "2"}]},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"L\"", 
         RowBox[{"-", "3"}]},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"I\"", "2"},
        "Superscript"]}]},
     {
      RowBox[{
       TemplateBox[{"\"T\"", 
         RowBox[{"-", "5"}]},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"M\"", "2"},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"L\"", "4"},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"I\"", 
         RowBox[{"-", "2"}]},
        "Superscript"]}]},
     {
      RowBox[{
       TemplateBox[{"\"T\"", 
         RowBox[{"-", "5"}]},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"M\"", "2"},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"L\"", "4"},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"I\"", 
         RowBox[{"-", "2"}]},
        "Superscript"]}]},
     {
      RowBox[{
       TemplateBox[{"\"T\"", "7"},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"M\"", 
         RowBox[{"-", "2"}]},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"L\"", 
         RowBox[{"-", "1"}]},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"I\"", "3"},
        "Superscript"]}]},
     {
      RowBox[{
       TemplateBox[{"\"T\"", "4"},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"M\"", 
         RowBox[{"-", "1"}]},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"L\"", 
         RowBox[{"-", "6"}]},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"I\"", "2"},
        "Superscript"]}]},
     {
      RowBox[{
       TemplateBox[{"\"\[CapitalTheta]\"", 
         RowBox[{"-", "6"}]},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"T\"", 
         RowBox[{"-", "3"}]},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"M\"", "1"},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"L\"", 
         RowBox[{"-", "2"}]},
        "Superscript"]}]},
     {
      RowBox[{
       TemplateBox[{"\"T\"", "3"},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"M\"", 
         RowBox[{"-", "1"}]},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"L\"", 
         RowBox[{"-", "4"}]},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"I\"", "2"},
        "Superscript"]}]},
     {
      RowBox[{
       TemplateBox[{"\"T\"", "6"},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"M\"", 
         RowBox[{"-", "2"}]},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"L\"", 
         RowBox[{"-", "2"}]},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"I\"", "2"},
        "Superscript"]}]},
     {
      RowBox[{
       TemplateBox[{"\"T\"", "3"},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"M\"", 
         RowBox[{"-", "3"}]},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"L\"", 
         RowBox[{"-", "6"}]},
        "Superscript"]}]},
     {
      RowBox[{
       TemplateBox[{"\"T\"", 
         RowBox[{"-", "3"}]},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"M\"", "3"},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"L\"", "6"},
        "Superscript"]}]},
     {
      RowBox[{
       TemplateBox[{"\"T\"", "4"},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"N\"", 
         RowBox[{"-", "1"}]},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"M\"", 
         RowBox[{"-", "2"}]},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"L\"", "3"},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"I\"", "2"},
        "Superscript"]}]},
     {
      RowBox[{
       TemplateBox[{"\"T\"", "6"},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"M\"", 
         RowBox[{"-", "2"}]},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"L\"", 
         RowBox[{"-", "2"}]},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"I\"", "2"},
        "Superscript"]}]},
     {
      RowBox[{
       TemplateBox[{"\"T\"", "6"},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"M\"", 
         RowBox[{"-", "2"}]},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"L\"", 
         RowBox[{"-", "2"}]},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"I\"", "2"},
        "Superscript"]}]},
     {
      RowBox[{
       TemplateBox[{"\"T\"", "6"},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"M\"", 
         RowBox[{"-", "2"}]},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"L\"", 
         RowBox[{"-", "2"}]},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"I\"", "2"},
        "Superscript"]}]},
     {
      RowBox[{
       TemplateBox[{"\"T\"", "6"},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"M\"", 
         RowBox[{"-", "2"}]},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"L\"", 
         RowBox[{"-", "2"}]},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"I\"", "2"},
        "Superscript"]}]},
     {
      RowBox[{
       TemplateBox[{"\"T\"", "3"},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"M\"", 
         RowBox[{"-", "1"}]},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"L\"", 
         RowBox[{"-", "6"}]},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"I\"", "2"},
        "Superscript"]}]},
     {
      RowBox[{
       TemplateBox[{"\"T\"", 
         RowBox[{"-", "4"}]},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"M\"", "2"},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"L\"", "4"},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"I\"", 
         RowBox[{"-", "2"}]},
        "Superscript"]}]},
     {
      RowBox[{
       TemplateBox[{"\"T\"", "4"},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"M\"", 
         RowBox[{"-", "1"}]},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"L\"", 
         RowBox[{"-", "5"}]},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"I\"", "2"},
        "Superscript"]}]},
     {
      RowBox[{
       TemplateBox[{"\"T\"", 
         RowBox[{"-", "4"}]},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"M\"", "2"},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"L\"", "4"},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"I\"", 
         RowBox[{"-", "2"}]},
        "Superscript"]}]},
     {
      RowBox[{
       TemplateBox[{"\"T\"", 
         RowBox[{"-", "4"}]},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"M\"", "2"},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"L\"", "4"},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"I\"", 
         RowBox[{"-", "2"}]},
        "Superscript"]}]},
     {
      RowBox[{
       TemplateBox[{"\"T\"", 
         FractionBox["9", "2"]},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"M\"", 
         RowBox[{"-", 
           FractionBox["3", "2"]}]},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"L\"", 
         RowBox[{"-", "3"}]},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"I\"", 
         FractionBox["5", "2"]},
        "Superscript"]}]},
     {
      RowBox[{
       TemplateBox[{"\"T\"", "3"},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"M\"", 
         RowBox[{"-", "1"}]},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"L\"", 
         RowBox[{"-", "4"}]},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"I\"", "1"},
        "Superscript"]}]},
     {
      RowBox[{
       TemplateBox[{"\"T\"", "3"},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"M\"", 
         RowBox[{"-", "1"}]},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"L\"", 
         RowBox[{"-", "4"}]},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"J\"", "1"},
        "Superscript"]}]},
     {
      RowBox[{
       TemplateBox[{"\"T\"", "4"},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"M\"", 
         RowBox[{"-", "1"}]},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"L\"", 
         RowBox[{"-", "4"}]},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"I\"", "2"},
        "Superscript"]}]},
     {
      RowBox[{
       TemplateBox[{"\"\[CapitalTheta]\"", 
         RowBox[{"-", "1"}]},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"T\"", "4"},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"M\"", 
         RowBox[{"-", "1"}]},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"L\"", 
         RowBox[{"-", "3"}]},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"I\"", "2"},
        "Superscript"]}]},
     {
      RowBox[{
       TemplateBox[{"\"T\"", 
         RowBox[{"-", "5"}]},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"M\"", "2"},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"L\"", "2"},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"I\"", 
         RowBox[{"-", "2"}]},
        "Superscript"]}]},
     {
      RowBox[{
       TemplateBox[{"\"T\"", "2"},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"M\"", 
         RowBox[{"-", "1"}]},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"L\"", 
         RowBox[{"-", "6"}]},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"I\"", "2"},
        "Superscript"]}]},
     {
      RowBox[{
       TemplateBox[{"\"T\"", "4"},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"M\"", 
         RowBox[{"-", "1"}]},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"L\"", 
         RowBox[{"-", "4"}]},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"I\"", "2"},
        "Superscript"]}]},
     {
      RowBox[{
       TemplateBox[{"\"\[CapitalTheta]\"", 
         FractionBox["1", "2"]},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"T\"", 
         RowBox[{"-", "2"}]},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"N\"", 
         RowBox[{"-", "2"}]},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"M\"", "1"},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"L\"", "5"},
        "Superscript"]}]},
     {
      RowBox[{
       TemplateBox[{"\"T\"", 
         RowBox[{"-", "2"}]},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"N\"", 
         RowBox[{"-", "2"}]},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"M\"", "1"},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"L\"", "5"},
        "Superscript"]}]},
     {
      RowBox[{
       TemplateBox[{"\"\[CapitalTheta]\"", 
         RowBox[{"-", "5"}]},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"T\"", 
         RowBox[{"-", "3"}]},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"M\"", "1"},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"L\"", 
         RowBox[{"-", "1"}]},
        "Superscript"]}]},
     {
      RowBox[{
       TemplateBox[{"\"\[CapitalTheta]\"", 
         RowBox[{"-", "5"}]},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"T\"", 
         RowBox[{"-", "3"}]},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"M\"", "1"},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"L\"", 
         RowBox[{"-", "1"}]},
        "Superscript"]}]},
     {
      RowBox[{
       TemplateBox[{"\"T\"", 
         RowBox[{"-", "4"}]},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"M\"", "2"},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"L\"", "4"},
        "Superscript"]}]},
     {
      RowBox[{
       TemplateBox[{"\"T\"", 
         RowBox[{"-", "4"}]},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"M\"", "2"},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"L\"", "4"},
        "Superscript"]}]}
    },
    DefaultBaseStyle->"Column",
    GridBoxAlignment->{"Columns" -> {{Left}}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
   "Column"], TraditionalForm]], "Output",
 CellChangeTimes->{3.8749386875798473`*^9},
 CellLabel->"Out[390]//TraditionalForm=",
 CellID->413480686,ExpressionUUID->"a182e07a-1520-4c3f-9138-010745e22394"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Take", "[", 
   RowBox[{"dimensionsizes", ",", "3"}], "]"}], "[", 
  RowBox[{"[", 
   RowBox[{"All", ",", "2"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8749387104818535`*^9, 3.874938737414745*^9}},
 CellLabel->"In[394]:=",
 CellID->35788928,ExpressionUUID->"e031abe1-d0dc-4089-97ea-19f83fc002a1"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"QEDEulerHeisenbergLagrangianFactor\"\>", 
   ",", "\<\"ElectricAlternativeThirdOrderNonlinearSusceptibility\"\>", 
   ",", "\<\"QuarticCauchyCoefficients\"\>"}], "}"}]], "Output",
 CellChangeTimes->{{3.874938710961189*^9, 3.8749387379331446`*^9}},
 CellLabel->"Out[394]=",
 CellID->95227006,ExpressionUUID->"c5dd88b0-c114-410e-87fb-f2c8ea4a20c9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Map", "[", 
  RowBox[{"DimensionalProduct", ",", 
   RowBox[{
    RowBox[{"Take", "[", 
     RowBox[{"dimensionsizes", ",", "3"}], "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", 
      RowBox[{"-", "1"}]}], "]"}], "]"}], ",", 
   RowBox[{"{", "1", "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8749387529841223`*^9, 3.874938758852702*^9}},
 CellLabel->"In[397]:=",
 CellID->258736146,ExpressionUUID->"5118c130-b401-4988-9d78-dc177b709ddb"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    TemplateBox[{"\"T\"", "11"},
     "Superscript"], "\[CenterDot]", 
    TemplateBox[{"\"M\"", 
      RowBox[{"-", "4"}]},
     "Superscript"], "\[CenterDot]", 
    TemplateBox[{"\"L\"", 
      RowBox[{"-", "7"}]},
     "Superscript"], "\[CenterDot]", 
    TemplateBox[{"\"I\"", "4"},
     "Superscript"]}], ",", 
   RowBox[{
    TemplateBox[{"\"T\"", "10"},
     "Superscript"], "\[CenterDot]", 
    TemplateBox[{"\"M\"", 
      RowBox[{"-", "3"}]},
     "Superscript"], "\[CenterDot]", 
    TemplateBox[{"\"L\"", 
      RowBox[{"-", "5"}]},
     "Superscript"], "\[CenterDot]", 
    TemplateBox[{"\"I\"", "4"},
     "Superscript"]}], ",", 
   RowBox[{
    TemplateBox[{"\"T\"", 
      RowBox[{"-", "8"}]},
     "Superscript"], "\[CenterDot]", 
    TemplateBox[{"\"M\"", "4"},
     "Superscript"], "\[CenterDot]", 
    TemplateBox[{"\"L\"", "8"},
     "Superscript"]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.874938748873233*^9, 3.874938759465601*^9}},
 CellLabel->"Out[397]=",
 CellID->856584628,ExpressionUUID->"ee8f5ca1-0fd5-4075-9115-0f42a055ef9c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Transpose", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"Take", "[", 
      RowBox[{"dimensionsizes", ",", "3"}], "]"}], "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", 
    RowBox[{"Map", "[", 
     RowBox[{"DimensionalProduct", ",", 
      RowBox[{
       RowBox[{"Take", "[", 
        RowBox[{"dimensionsizes", ",", "3"}], "]"}], "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", 
         RowBox[{"-", "1"}]}], "]"}], "]"}], ",", 
      RowBox[{"{", "1", "}"}]}], "]"}]}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.874938762715977*^9, 3.8749387723730545`*^9}},
 CellLabel->"In[398]:=",
 CellID->13750140,ExpressionUUID->"19a50eb7-2649-4421-943b-b525d3080563"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\<\"QEDEulerHeisenbergLagrangianFactor\"\>", ",", 
     RowBox[{
      TemplateBox[{"\"T\"", "11"},
       "Superscript"], "\[CenterDot]", 
      TemplateBox[{"\"M\"", 
        RowBox[{"-", "4"}]},
       "Superscript"], "\[CenterDot]", 
      TemplateBox[{"\"L\"", 
        RowBox[{"-", "7"}]},
       "Superscript"], "\[CenterDot]", 
      TemplateBox[{"\"I\"", "4"},
       "Superscript"]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ElectricAlternativeThirdOrderNonlinearSusceptibility\"\>", 
     ",", 
     RowBox[{
      TemplateBox[{"\"T\"", "10"},
       "Superscript"], "\[CenterDot]", 
      TemplateBox[{"\"M\"", 
        RowBox[{"-", "3"}]},
       "Superscript"], "\[CenterDot]", 
      TemplateBox[{"\"L\"", 
        RowBox[{"-", "5"}]},
       "Superscript"], "\[CenterDot]", 
      TemplateBox[{"\"I\"", "4"},
       "Superscript"]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"QuarticCauchyCoefficients\"\>", ",", 
     RowBox[{
      TemplateBox[{"\"T\"", 
        RowBox[{"-", "8"}]},
       "Superscript"], "\[CenterDot]", 
      TemplateBox[{"\"M\"", "4"},
       "Superscript"], "\[CenterDot]", 
      TemplateBox[{"\"L\"", "8"},
       "Superscript"]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.8749387727584963`*^9},
 CellLabel->"Out[398]=",
 CellID->405748864,ExpressionUUID->"37f2ca71-3a3e-4daf-8f3c-77a6c53bde13"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"TableForm", "[", 
   RowBox[{"Transpose", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"Take", "[", 
        RowBox[{"dimensionsizes", ",", "3"}], "]"}], "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", 
      RowBox[{"Map", "[", 
       RowBox[{"DimensionalProduct", ",", 
        RowBox[{
         RowBox[{"Take", "[", 
          RowBox[{"dimensionsizes", ",", "3"}], "]"}], "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", 
           RowBox[{"-", "1"}]}], "]"}], "]"}], ",", 
        RowBox[{"{", "1", "}"}]}], "]"}]}], "}"}], "]"}], "]"}], "//", 
  "TraditionalForm"}]], "Input",
 CellChangeTimes->{{3.8749387758581753`*^9, 3.8749387792003107`*^9}},
 CellLabel->"In[399]:=",
 CellID->1989243,ExpressionUUID->"7243d62d-8edd-4b5e-86cc-fad171ac9ec2"],

Cell[BoxData[
 FormBox[
  TagBox[GridBox[{
     {"\<\"QEDEulerHeisenbergLagrangianFactor\"\>", 
      RowBox[{
       TemplateBox[{"\"T\"", "11"},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"M\"", 
         RowBox[{"-", "4"}]},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"L\"", 
         RowBox[{"-", "7"}]},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"I\"", "4"},
        "Superscript"]}]},
     {"\<\"ElectricAlternativeThirdOrderNonlinearSusceptibility\"\>", 
      RowBox[{
       TemplateBox[{"\"T\"", "10"},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"M\"", 
         RowBox[{"-", "3"}]},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"L\"", 
         RowBox[{"-", "5"}]},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"I\"", "4"},
        "Superscript"]}]},
     {"\<\"QuarticCauchyCoefficients\"\>", 
      RowBox[{
       TemplateBox[{"\"T\"", 
         RowBox[{"-", "8"}]},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"M\"", "4"},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"L\"", "8"},
        "Superscript"]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[2.0999999999999996`]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   Function[BoxForm`e$, 
    TableForm[BoxForm`e$]]], TraditionalForm]], "Output",
 CellChangeTimes->{3.8749387794352407`*^9},
 CellLabel->"Out[399]//TraditionalForm=",
 CellID->657057656,ExpressionUUID->"ff4eae82-7cf5-44b9-ab61-682d1d1f9942"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"TableForm", "[", 
   RowBox[{
    RowBox[{"Transpose", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"EntityValue", "[", 
          RowBox[{
           RowBox[{"Entity", "[", 
            RowBox[{"\"\<PhysicalQuantity\>\"", ",", "#"}], "]"}], ",", 
           "\"\<Name\>\""}], "]"}], "&"}], "/@", 
        RowBox[{
         RowBox[{"Take", "[", 
          RowBox[{"dimensionsizes", ",", "20"}], "]"}], "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "2"}], "]"}], "]"}]}], ",", 
       RowBox[{"Map", "[", 
        RowBox[{"DimensionalProduct", ",", 
         RowBox[{
          RowBox[{"Take", "[", 
           RowBox[{"dimensionsizes", ",", "20"}], "]"}], "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", 
            RowBox[{"-", "1"}]}], "]"}], "]"}], ",", 
         RowBox[{"{", "1", "}"}]}], "]"}]}], "}"}], "]"}], ",", 
    RowBox[{"TableHeadings", "->", 
     RowBox[{"{", 
      RowBox[{
      "\"\<Physical Quantity\>\"", ",", "\"\<Dimensional Product\>\""}], 
      "}"}]}]}], "]"}], "//", "TraditionalForm"}]], "Input",
 CellChangeTimes->{{3.8749387758581753`*^9, 3.8749387933637314`*^9}, {
  3.874938922248818*^9, 3.8749389868061075`*^9}},
 CellLabel->"In[411]:=",
 CellID->534690965,ExpressionUUID->"72444cb3-e96e-4e65-a01f-a974ed0990a9"],

Cell[BoxData[
 FormBox[
  TagBox[GridBox[{
     {"\<\"QED Euler\[Hyphen]Heisenberg Lagrangian factor\"\>", 
      RowBox[{
       TemplateBox[{"\"T\"", "11"},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"M\"", 
         RowBox[{"-", "4"}]},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"L\"", 
         RowBox[{"-", "7"}]},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"I\"", "4"},
        "Superscript"]}]},
     {"\<\"alternative third\[Hyphen]order nonlinear susceptibility\"\>", 
      RowBox[{
       TemplateBox[{"\"T\"", "10"},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"M\"", 
         RowBox[{"-", "3"}]},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"L\"", 
         RowBox[{"-", "5"}]},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"I\"", "4"},
        "Superscript"]}]},
     {"\<\"quartic Cauchy coefficient\"\>", 
      RowBox[{
       TemplateBox[{"\"T\"", 
         RowBox[{"-", "8"}]},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"M\"", "4"},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"L\"", "8"},
        "Superscript"]}]},
     {"\<\"second dipole hyperpolarizability\"\>", 
      RowBox[{
       TemplateBox[{"\"T\"", "10"},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"M\"", 
         RowBox[{"-", "3"}]},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"L\"", 
         RowBox[{"-", "2"}]},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"I\"", "4"},
        "Superscript"]}]},
     {"\<\"quartic Casimir operator of the Poincar\[EAcute] group\"\>", 
      RowBox[{
       TemplateBox[{"\"T\"", 
         RowBox[{"-", "6"}]},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"M\"", "4"},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"L\"", "8"},
        "Superscript"]}]},
     {"\<\"Wiedemann\[Hyphen]Franz law ratio\"\>", 
      RowBox[{
       TemplateBox[{"\"\[CapitalTheta]\"", 
         RowBox[{"-", "2"}]},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"T\"", 
         RowBox[{"-", "6"}]},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"M\"", "2"},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"L\"", "4"},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"I\"", 
         RowBox[{"-", "2"}]},
        "Superscript"]}]},
     {"\<\"Johnson's figure of merit\"\>", 
      RowBox[{
       TemplateBox[{"\"T\"", 
         RowBox[{"-", "8"}]},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"M\"", "2"},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"L\"", "4"},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"I\"", 
         RowBox[{"-", "2"}]},
        "Superscript"]}]},
     {"\<\"Lorenz coefficient\"\>", 
      RowBox[{
       TemplateBox[{"\"\[CapitalTheta]\"", 
         RowBox[{"-", "2"}]},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"T\"", 
         RowBox[{"-", "6"}]},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"M\"", "2"},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"L\"", "4"},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"I\"", 
         RowBox[{"-", "2"}]},
        "Superscript"]}]},
     {"\<\"alternative quadratic susceptibility\"\>", 
      RowBox[{
       TemplateBox[{"\"T\"", "7"},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"M\"", 
         RowBox[{"-", "2"}]},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"L\"", 
         RowBox[{"-", "4"}]},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"I\"", "3"},
        "Superscript"]}]},
     {"\<\"second hypermagnetizability\"\>", 
      RowBox[{
       TemplateBox[{"\"T\"", "8"},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"M\"", 
         RowBox[{"-", "3"}]},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"I\"", "4"},
        "Superscript"]}]},
     {"\<\"stiffening capacitance power ratio\"\>", 
      RowBox[{
       TemplateBox[{"\"T\"", "7"},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"M\"", 
         RowBox[{"-", "2"}]},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"L\"", 
         RowBox[{"-", "4"}]},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"I\"", "2"},
        "Superscript"]}]},
     {"\<\"Baliga's figure of merit\"\>", 
      RowBox[{
       TemplateBox[{"\"T\"", 
         RowBox[{"-", "7"}]},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"M\"", "2"},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"L\"", "3"},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"I\"", 
         RowBox[{"-", "2"}]},
        "Superscript"]}]},
     {"\<\"electric voltage squared\"\>", 
      RowBox[{
       TemplateBox[{"\"T\"", 
         RowBox[{"-", "6"}]},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"M\"", "2"},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"L\"", "4"},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"I\"", 
         RowBox[{"-", "2"}]},
        "Superscript"]}]},
     {"\<\"electric polarizability per distance to the seventh\"\>", 
      RowBox[{
       TemplateBox[{"\"T\"", "4"},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"M\"", 
         RowBox[{"-", "1"}]},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"L\"", 
         RowBox[{"-", "7"}]},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"I\"", "2"},
        "Superscript"]}]},
     {"\<\"permittivity space\[Hyphen]frequency tensor density\"\>", 
      RowBox[{
       TemplateBox[{"\"T\"", "5"},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"M\"", 
         RowBox[{"-", "1"}]},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"L\"", 
         RowBox[{"-", "6"}]},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"I\"", "2"},
        "Superscript"]}]},
     {"\<\"amplifier noise slope\"\>", 
      RowBox[{
       TemplateBox[{"\"T\"", 
         RowBox[{"-", "6"}]},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"M\"", "2"},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"L\"", "4"},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"I\"", 
         RowBox[{"-", "2"}]},
        "Superscript"]}]},
     {"\<\"Sommerfeld supply density\"\>", 
      RowBox[{
       TemplateBox[{"\"T\"", "4"},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"M\"", 
         RowBox[{"-", "2"}]},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"L\"", 
         RowBox[{"-", "6"}]},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"I\"", "1"},
        "Superscript"]}]},
     {"\<\"photometric sensitivity\"\>", 
      RowBox[{
       TemplateBox[{"\"T\"", 
         RowBox[{"-", "4"}]},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"M\"", "1"},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"L\"", "4"},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"J\"", 
         RowBox[{"-", "1"}]},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"I\"", 
         RowBox[{"-", "1"}]},
        "Superscript"]}]},
     {"\<\"photoconductivity\"\>", 
      RowBox[{
       TemplateBox[{"\"T\"", "6"},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"M\"", 
         RowBox[{"-", "2"}]},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"L\"", 
         RowBox[{"-", "3"}]},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"I\"", "2"},
        "Superscript"]}]},
     {"\<\"volume integral of the square of the magnetic potential\"\>", 
      RowBox[{
       TemplateBox[{"\"T\"", 
         RowBox[{"-", "4"}]},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"M\"", "2"},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"L\"", "5"},
        "Superscript"], "\[CenterDot]", 
       TemplateBox[{"\"I\"", 
         RowBox[{"-", "2"}]},
        "Superscript"]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[2.0999999999999996`]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   Function[BoxForm`e$, 
    TableForm[
    BoxForm`e$, 
     TableHeadings -> {"Physical Quantity", "Dimensional Product"}]]], 
  TraditionalForm]], "Output",
 CellChangeTimes->{
  3.874938793811833*^9, {3.874938947265516*^9, 3.874938963600341*^9}, 
   3.874938995169466*^9},
 CellLabel->"Out[411]//TraditionalForm=",
 CellID->109633622,ExpressionUUID->"bd8be3cf-831b-4cc7-97cb-188c83aaf1b8"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1152., 585.6},
WindowMargins->{{
  Automatic, -5.399999999999864}, {-5.399999999999977, Automatic}},
TaggingRules->{
 "ResourceType" -> "ComputationalEssay", "ResourceCreateNotebook" -> True, 
  "TemplateVersion" -> <||>, "CreationTimestamp" -> 
  3.8572120809455172`17.338848507479508*^9, "UpdatedTimestamp" -> 
  3.8572120809455172`17.338848507479508*^9, "CompatibilityTest" -> 
  HoldComplete[
    BinaryDeserialize[
     ByteArray[{56, 67, 58, 120, 156, 133, 143, 205, 78, 131, 64, 20, 133, 
      163, 173, 110, 116, 213, 165, 79, 224, 6, 70, 11, 105, 138, 59, 197, 
      198, 184, 193, 70, 92, 184, 100, 24, 238, 164, 83, 7, 46, 153, 123, 41, 
      229, 237, 29, 140, 186, 193, 196, 245, 249, 249, 206, 209, 115, 90, 164,
       88, 183, 216, 53, 213, 230, 216, 58, 32, 50, 216, 232, 19, 58, 203, 0, 
      42, 202, 175, 95, 129, 176, 115, 10, 242, 129, 24, 234, 212, 26, 104, 
      184, 120, 4, 109, 26, 195, 222, 153, 33, 67, 137, 248, 81, 232, 83, 154,
       229, 192, 62, 25, 252, 25, 217, 58, 115, 144, 12, 133, 69, 89, 253, 24,
       222, 134, 22, 124, 238, 242, 222, 50, 184, 70, 178, 57, 0, 229, 87, 
      227, 156, 142, 229, 216, 46, 237, 134, 72, 14, 191, 133, 139, 169, 70, 
      243, 172, 179, 214, 99, 207, 159, 253, 11, 55, 14, 184, 72, 45, 118, 
      213, 75, 185, 7, 197, 249, 251, 142, 185, 165, 59, 33, 250, 190, 15, 
      123, 180, 218, 201, 90, 141, 122, 168, 176, 22, 88, 238, 133, 251, 110, 
      167, 175, 185, 98, 138, 72, 177, 97, 127, 65, 248, 215, 217, 195, 86, 
      178, 218, 133, 253, 81, 123, 208, 236, 9, 38, 188, 205, 191, 188, 106, 
      149, 68, 55, 75, 121, 27, 64, 164, 203, 32, 6, 41, 131, 36, 134, 117, 
      160, 228, 58, 74, 226, 74, 173, 202, 104, 249, 9, 89, 192, 149, 140}]]],
   "ToolsOpen" -> True, "StatusMessage" -> "", "TryRealOnly" -> False},
CreateCellID->True,
FrontEndVersion->"13.1 for Microsoft Windows (64-bit) (June 16, 2022)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[StyleDefinitions -> "Default.nb"]], 
   Cell[
    StyleData[All, "Working"], DockedCells -> {
      Cell[
       BoxData[
        TemplateBox[{}, "MainGridTemplate"]], "DockedCell", 
       CellMargins -> {{-10, -10}, {-8, -8}}, CellFrame -> 0, Background -> 
       RGBColor[0.7185389999999999, 0.5009625, 0.266231], 
       CellTags -> {"MainDockedCell"}, CacheGraphics -> False], 
      Cell[
       BoxData[
        TemplateBox[{}, "ToolsGridTemplate"]], "DockedCell", 
       TaggingRules -> {"Tools" -> True}, CellTags -> {"ToolbarDockedCell"}, 
       CellFrameMargins -> {{39, 5}, {2, 2}}, CellFrame -> {{0, 0}, {1, 0}}, 
       CacheGraphics -> False, CellOpen -> Dynamic[
         CurrentValue[
          EvaluationNotebook[], {TaggingRules, "ToolsOpen"}, True]]]}, 
    AutoQuoteCharacters -> {}], 
   Cell[
    StyleData["Item"], DefaultNewCellStyle -> "Item"], 
   Cell[
    StyleData["MoreInfoText", StyleDefinitions -> StyleData["Text"]], 
    FontColor -> GrayLevel[0.25]], 
   Cell[
    StyleData["ErrorText", StyleDefinitions -> StyleData["Text"]], 
    ShowCellBracket -> False, CellMargins -> {{66, Inherited}, {10, 10}}, 
    CellElementSpacings -> {"CellMinHeight" -> 0, "ClosedCellHeight" -> 0}, 
    FontWeight -> Bold, FontColor -> RGBColor[1, 0, 0]], 
   Cell[
    StyleData["WarningText", StyleDefinitions -> StyleData["Text"]], 
    ShowCellBracket -> False, CellMargins -> {{66, 35}, {0, 0}}, FontSize -> 
    14, GridBoxOptions -> {BaseStyle -> {}}], 
   Cell[
    StyleData["ButtonText"], FontFamily -> "Sans Serif", FontSize -> 11, 
    FontWeight -> Bold, FontColor -> RGBColor[0.458824, 0.458824, 0.458824]], 
   Cell[
    StyleData["MoreInfoOpenerIconTemplate"], 
    TemplateBoxOptions -> {
     DisplayFunction -> (PaneSelectorBox[{False -> GraphicsBox[{
            Thickness[0.09090909090909091], 
            StyleBox[{
              
              JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGZiAAOF25VKDkD6QeAOUQckvgKHjhSIThCYoQii
HbYVy4HVqbApgOgVx06DaYaoJzIgumJfPMScpbMlQHQAj5MyiF7wXl0EmX+g
KIMfmZ9gfZ8NWb9CTD8Divm/6r7YI9l/wP3hK3sk98H4MPfD+A1TnQWR9TOc
/86JbD6D4gZmZPsZmg78skdyH4Pous/2SO6H8WH+g/Fh/ofph4UP3Hxo+MHt
h4YvzH0o4Q8Ayr1fpA==
               "], CurveClosed -> {1}]}, {
              JoinForm[{"Miter", 10.}], 
              Thickness[0.04581818255511197], 
              RGBColor[
              0.6274509803921569, 0.6274509803921569, 0.6274509803921569, 
               1.]}, StripOnInput -> False], 
            StyleBox[{
              
              FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1,
                 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQBGIQzcDw4OydWhEHBoYJO6YlyIBoE+cbwkj8CybOHiB+
xY5p00D8BefunBUC0g8CDdhkgTQHk0A4iF8j97cYxP9w7o4kiL+kJZlBDomv
EmiwFpm/RPZvpDyQtjF1DgXxzzQnP5NHMv/cQUNNBSDNklHmBrJ/20HDeBD/
SHrZNRB/1UHDKhAf5n4Yf8rZOxqiSPyQs3d2iCLpfzNzpb4YkvktaWXLxJDs
v3DmzkMxJPfB+DD3w/gFgQZMckj6PV6fLJVFMh8WPgqzVu4C2e/SmjwDFH4J
s1ZqiSKFL2r4AwBR8n/j
                "], CompressedData["
1:eJxTTMoPSmViYGCQB2IQzcBQ8J9fV8KBgeFBne5FTgcEn6FB15MdSAfMWXlO
AAsfpr5j9soJQkD6x5PJjVxAWsHUeQqIv8Pr13duEH3uznQQv2BDQgMvEn/H
+gQ5fiT+lq7kGAEkvkG4gZAgEj9g77QNyPw1e6YpCiPx34QavAbx3zAKTAPx
OfZMmyQCpPecu9MH4p/ZPU1SFEirmDp3g/gTdk9bAOIfOHenFcRveXdSTwxI
x2SUNYD4d9qTD4H4LGbOk0HuilD8yyKOxF/x9qQsKJw6jJ21QOoW7Jz2RxJk
PoPADBD/y5uTm0D8KWllTSD+H8W/k0WR+DD/wOWV/woj82HhAeN31OiK8yPx
VzyeXAoKzwRj5xawvPjxD6DwPjJzZacYUnygxi8A+72aOA==
                "]}]}, {
              FaceForm[
               RGBColor[
               0.6274509803921569, 0.6274509803921569, 0.6274509803921569, 
                1.]]}, StripOnInput -> False]}, ImageSize -> {11., 11.}, 
           PlotRange -> {{0., 11.}, {0., 11.}}, AspectRatio -> Automatic], 
         True -> GraphicsBox[{
            Thickness[0.09090909090909091], 
            StyleBox[{
              
              JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGZiAAOF25VKDkD6QeAOUQckvgKHjhSIThCYoQii
HbYVy4HVqbApgOgVx06DaYaoJzIgumJfPMScpbMlQHQAj5MyiF7wXl0EmX+g
KIMfmZ9gfZ8NWb9CTD8Divm/6r7YI9l/wP3hK3sk98H4MPfD+A1TnQWR9TOc
/86JbD6D4gZmZPsZmg78skdyH4Pous/2SO6H8WH+g/Fh/ofph4UP3Hxo+MHt
h4YvzH0o4Q8Ayr1fpA==
               "], CurveClosed -> {1}]}, {
              JoinForm[{"Miter", 10.}], 
              Thickness[0.04581818255511197], 
              RGBColor[
              0.5019607843137255, 0.5019607843137255, 0.5019607843137255, 
               1.]}, StripOnInput -> False], 
            StyleBox[{
              
              FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGZiAAOF25VKDkD6QeAOUQckvgKHjhSIThCYoQii
HbYVy4HVqbApgOgVx06DaYaoJzIgumJfPMScpbMlQHQAj5MyiF7wXl0EmX+g
KIMfmZ9gfZ8NWb9CTD8Divm/6r7YI9l/wP3hK3sk98H4MPfD+A1TnQWR9TOc
/86JbD6D4gZmZPsZmg78skdyH4Pous/2SO6H8WH+g/Fh/ofph4UP3Hxo+MHt
h4YvzH0o4Q8Ayr1fpA==
               "]]}, {
              FaceForm[
               RGBColor[
               0.5019607843137255, 0.5019607843137255, 0.5019607843137255, 
                1.]]}, StripOnInput -> False], 
            StyleBox[{
              
              FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1,
                 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQBGIQzcDw4OydWhEHBoYJO6YlyIBoE+cbwkj8CybOHiB+
xY5p00D8BefunBUC0g8CDdhkgTQHk0A4iF8j97cYxP9w7o4kiL+kJZlBDomv
EmiwFpm/RPZvpDyQtjF1DgXxzzQnP5NHMv/cQUNNBSDNklHmBrJ/20HDeBD/
SHrZNRB/1UHDKhAf5n4Yf8rZOxqiSPyQs3d2iCLpfzNzpb4YkvktaWXLxJDs
v3DmzkMxJPfB+DD3w/gFgQZMckj6PV6fLJVFMh8WPgqzVu4C2e/SmjwDFH4J
s1ZqiSKFL2r4AwBR8n/j
                "], CompressedData["
1:eJxTTMoPSmViYGCQB2IQzcBQ8J9fV8KBgeFBne5FTgcEn6FB15MdSAfMWXlO
AAsfpr5j9soJQkD6x5PJjVxAWsHUeQqIv8Pr13duEH3uznQQv2BDQgMvEn/H
+gQ5fiT+lq7kGAEkvkG4gZAgEj9g77QNyPw1e6YpCiPx34QavAbx3zAKTAPx
OfZMmyQCpPecu9MH4p/ZPU1SFEirmDp3g/gTdk9bAOIfOHenFcRveXdSTwxI
x2SUNYD4d9qTD4H4LGbOk0HuilD8yyKOxF/x9qQsKJw6jJ21QOoW7Jz2RxJk
PoPADBD/y5uTm0D8KWllTSD+H8W/k0WR+DD/wOWV/woj82HhAeN31OiK8yPx
VzyeXAoKzwRj5xawvPjxD6DwPjJzZacYUnygxi8A+72aOA==
                "]}]}, {
              FaceForm[
               RGBColor[1., 1., 1., 1.]]}, StripOnInput -> False]}, 
           ImageSize -> {11., 11.}, PlotRange -> {{0., 11.}, {0., 11.}}, 
           AspectRatio -> Automatic]}, 
        Dynamic[
         CurrentValue["MouseOver"]], ImageSize -> Automatic, FrameMargins -> 
        0]& )}], 
   Cell[
    StyleData["MoreInfoOpenerButtonTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (AdjustmentBox[
        ButtonBox[
         TemplateBox[{
           TemplateBox[{}, "MoreInfoOpenerIconTemplate"], 
           "\"Click for more information\""}, "PrettyTooltipTemplate"], 
         ButtonFunction :> (NotebookDelete[
            CurrentValue[
             ParentCell[
              EvaluationCell[]], {TaggingRules, "AttachedMoreInfoCell"}]]; If[
            And[
             MatchQ[
              CurrentValue[
               ParentCell[
                EvaluationCell[]], {TaggingRules, "AttachedMoreInfoCell"}], 
              Blank[CellObject]], CurrentValue[
               ParentCell[
                EvaluationCell[]], {
               TaggingRules, "AttachedMoreInfoTag"}] === #], CurrentValue[
               ParentCell[
                EvaluationCell[]], {TaggingRules, "AttachedMoreInfoCell"}] = 
             Inherited; CurrentValue[
               ParentCell[
                EvaluationCell[]], {TaggingRules, "AttachedMoreInfoTag"}] = 
             Inherited; Null, CurrentValue[
               ParentCell[
                EvaluationCell[]], {TaggingRules, "AttachedMoreInfoTag"}] = #; 
            CurrentValue[
               ParentCell[
                EvaluationCell[]], {TaggingRules, "AttachedMoreInfoCell"}] = 
             MathLink`CallFrontEnd[
               FrontEnd`AttachCell[
                ParentCell[
                 EvaluationCell[]], #2, "Inline", 
                "ClosingActions" -> {"ParentChanged", "EvaluatorQuit"}]]]), 
         Appearance -> None, Evaluator -> Automatic, Method -> "Preemptive"], 
        BoxBaselineShift -> -0.5, BoxMargins -> 0.2]& )}], 
   Cell[
    StyleData["InlineMoreInfoOpenerButtonTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (AdjustmentBox[
        ButtonBox[
         TemplateBox[{
           TemplateBox[{}, "MoreInfoOpenerIconTemplate"], #4}, 
          "PrettyTooltipTemplate"], ButtonFunction :> (NotebookDelete[
            CurrentValue[
             ReleaseHold[#3], {TaggingRules, "AttachedMoreInfoCell"}]]; If[
            And[
             MatchQ[
              CurrentValue[
               ReleaseHold[#3], {TaggingRules, "AttachedMoreInfoCell"}], 
              Blank[CellObject]], CurrentValue[
               ReleaseHold[#3], {TaggingRules, "AttachedMoreInfoTag"}] === #],
             CurrentValue[
               ReleaseHold[#3], {TaggingRules, "AttachedMoreInfoCell"}] = 
             Inherited; CurrentValue[
               ReleaseHold[#3], {TaggingRules, "AttachedMoreInfoTag"}] = 
             Inherited; Null, CurrentValue[
               ReleaseHold[#3], {TaggingRules, "AttachedMoreInfoTag"}] = #; 
            CurrentValue[
               ReleaseHold[#3], {TaggingRules, "AttachedMoreInfoCell"}] = 
             MathLink`CallFrontEnd[
               FrontEnd`AttachCell[
                ReleaseHold[#3], #2, "Inline", 
                "ClosingActions" -> {"ParentChanged", "EvaluatorQuit"}]]]), 
         Appearance -> None, Evaluator -> Automatic, Method -> "Preemptive"], 
        BoxBaselineShift -> -0.5, BoxMargins -> 0.2]& )}], 
   Cell[
    StyleData["ClickToCopyTemplate"], 
    TemplateBoxOptions -> {
     DisplayFunction -> (PaneSelectorBox[{False -> TagBox[
           GridBox[{{#, 
              ButtonBox[
               GraphicsBox[{
                 GrayLevel[0.75], 
                 Thickness[
                  NCache[
                   Rational[2, 45], 0.044444444444444446`]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                   0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                   0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                   0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 18.}, {
                   9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 18.}, {12., 
                   18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {16.5, 4.5}, {
                   16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {15.75, 17.25}, {
                   15.75, 5.25}, {6.75, 5.25}, {6.75, 17.25}, {8.25, 17.25}, {
                   8.25, 18.}}, {{9.75, 17.25}, {12.75, 17.25}, {12.75, 
                   16.5}, {9.75, 16.5}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                  0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 14.25}, {
                  14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{8.25, 12.}, {
                  14.25, 12.}, {14.25, 11.25}, {8.25, 11.25}}, {{8.25, 
                  9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25, 9.}}, {{8.25, 
                  7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 6.75}}}]}, 
                ImageSize -> 12], ButtonFunction :> Null, 
               Appearance -> {
                "Default" -> None, "Hover" -> None, "Pressed" -> None}, 
               Evaluator -> Automatic, Method -> "Preemptive"]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Center}}},
             AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {{0.4}}}], "Grid"], True -> 
         DynamicModuleBox[{RSNB`clickTime$$ = 0., RSNB`timeout$$ = 3.}, 
           TagBox[
            GridBox[{{#, 
               TagBox[
                ButtonBox[
                 DynamicBox[
                  ToBoxes[
                   Refresh[
                    If[AbsoluteTime[] - RSNB`clickTime$$ > RSNB`timeout$$, 
                    (RawBoxes[
                    TemplateBox[{
                    ToBoxes[#], 
                    ToBoxes[#2]}, "PrettyTooltipTemplate"]]& )[
                    Mouseover[
                    Graphics[{
                    GrayLevel[0.5], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 12], 
                    Graphics[{
                    RGBColor[
                    0.9882352941176471, 0.4196078431372549, 
                    0.20392156862745098`], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 12]], 
                    "Click to copy to the clipboard"], 
                    (RawBoxes[
                    TemplateBox[{
                    ToBoxes[#], 
                    ToBoxes[#2]}, "PrettyTooltipTemplate"]]& )[
                    Graphics[{
                    RGBColor[0, 
                    Rational[2, 3], 0], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 12], "Copied"]], UpdateInterval -> 
                    1, TrackedSymbols :> {RSNB`clickTime$$}], StandardForm], 
                  Evaluator -> "System"], 
                 ButtonFunction :> (RSNB`clickTime$$ = AbsoluteTime[]; 
                  CopyToClipboard[
                    BinaryDeserialize[
                    BaseDecode[#2], Defer]]), 
                 Appearance -> {
                  "Default" -> None, "Hover" -> None, "Pressed" -> None}, 
                 Method -> "Queued", Evaluator -> "System"], 
                MouseAppearanceTag["LinkHand"]]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{0.4}}}], "Grid"], 
           DynamicModuleValues :> {}]}, 
        Dynamic[
         CurrentValue["MouseOver"]], ImageSize -> Automatic, FrameMargins -> 
        0]& )}], 
   Cell[
    StyleData["PrettyTooltipTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (TagBox[
        TooltipBox[#, 
         FrameBox[
          
          StyleBox[#2, "Text", FontColor -> 
           RGBColor[
            0.5372549019607843, 0.5372549019607843, 0.5372549019607843], 
           FontSize -> 12, FontWeight -> "Plain", FontTracking -> "Plain", 
           StripOnInput -> False], Background -> 
          RGBColor[
           0.9607843137254902, 0.9607843137254902, 0.9607843137254902], 
          FrameStyle -> 
          RGBColor[
           0.8980392156862745, 0.8980392156862745, 0.8980392156862745], 
          FrameMargins -> 8, StripOnInput -> False], TooltipDelay -> 0.1, 
         TooltipStyle -> {Background -> None, CellFrame -> 0}], Annotation[#, 
         Framed[
          Style[
          RSNB`$$tooltip, "Text", FontColor -> 
           RGBColor[
            0.5372549019607843, 0.5372549019607843, 0.5372549019607843], 
           FontSize -> 12, FontWeight -> "Plain", FontTracking -> "Plain"], 
          Background -> 
          RGBColor[
           0.9607843137254902, 0.9607843137254902, 0.9607843137254902], 
          FrameStyle -> 
          RGBColor[
           0.8980392156862745, 0.8980392156862745, 0.8980392156862745], 
          FrameMargins -> 8], "Tooltip"]& ]& )}], 
   Cell[
    StyleData["ToolsGridTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (TagBox[
        GridBox[{{
           ButtonBox[
            StyleBox[
            "\"Insert Code Group\"", "Text", FontFamily -> "Source Sans Pro", 
             FontSize -> 11, StripOnInput -> False], ButtonFunction :> 
            With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
              Quiet[
               
               Block[{$ContextPath = RSNB`$cp$, 
                 ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                 False}, 
                Internal`WithLocalSettings[
                 ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                   True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                  Needs["ResourceSystemClient`DefinitionNotebook`"], 
                  ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                  RSNB`nb$, 
                   
                   ComputationalEssayHelpers`Private`\
createComputationalParagraph[]], 
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                   False; Null]; Null]]], FrameMargins -> {{4, 4}, {0, 0}}, 
            BaseStyle -> Dynamic[
              FEPrivate`If[
               CurrentValue[Enabled], 
               FEPrivate`If[
                CurrentValue["MouseOver"], {
                FontColor -> RGBColor[0.898039, 0.898039, 0.898039]}, {
                FontColor -> 
                 RGBColor[
                  0.17960779999999998`, 0.17960779999999998`, 
                   0.17960779999999998`]}], {
               FontColor -> 
                RGBColor[
                 0.5898038999999999, 0.5898038999999999, 
                  0.5898038999999999]}], Evaluator -> "System"], 
            Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQPEUCl2EAWRBZGVCqt7e3HQaAbLhiuLLz588DpR48eAC3
AsgGigDF4coePnzY19cH5yI7BigOlIW4Fqilu7sbq7OB4kBZBjAgRhmRphHv
NiJ9Sny4ERMLaABrnAIA5lG1ZQ==
                "], "Byte", ColorSpace -> "RGB", Interleaving -> True], 
              "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQPEUCl2EAWRBZGVCqs7WpoaoEgoBsuGK4svPnzzfWlK+o
9dve4AJBQDZQBCgOV/bw4cOOloZVtb5wNRAEFAGKA2UhrgVqaaouRlMDQUBx
oCwDGBCjjEjTiHcbkT4lPtyIiQVi4hQArnpwkw==
                "], "Byte", ColorSpace -> "RGB", Interleaving -> True], 
              "Pressed" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQPEUCL2EAWRBZGVDqw5dvrz9BEZANVwxX9urVq3efvxUt
PujVuQGCgGygCFAcruzZs2fvPn3Nmb8frgaCgCJAcaAsxLVALc/efUZTA0FA
caAsAxgQo4xI04h3G5E+JT7ciIkFYuIUAHu5mtk=
                "], "Byte", ColorSpace -> "RGB", Interleaving -> True]}, 
            Background -> RGBColor[0.898039, 0.898039, 0.898039], Method -> 
            "Queued", ImageSize -> {All, 20}, Enabled -> Dynamic[
              Not[
               TrueQ[
               ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled]], 
              TrackedSymbols :> {
               ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled}], 
            Evaluator -> Automatic], 
           ActionMenuBox[
            ButtonBox[
             TemplateBox[{
               StyleBox[
                
                TemplateBox[{
                 "\"Insert Headings\"", 
                  "\"\[ThinSpace]\[ThinSpace]\[ThinSpace]\[FilledDownTriangle]\
\""}, "RowDefault"], "Text", FontFamily -> "Source Sans Pro", FontSize -> 11, 
                StripOnInput -> False], 
               "\"Insert a cell of the chosen type below the current \
selection\""}, "PrettyTooltipTemplate"], ButtonFunction :> 
             With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; CurrentValue[
                    RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, Null], 
                   CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; ResourceSystemClient`DefinitionNotebook`$\
ButtonsDisabled = False; Null]; Null]]], FrameMargins -> {{4, 4}, {0, 0}}, 
             BaseStyle -> Dynamic[
               FEPrivate`If[
                CurrentValue[Enabled], 
                FEPrivate`If[
                 CurrentValue["MouseOver"], {
                 FontColor -> RGBColor[0.898039, 0.898039, 0.898039]}, {
                 FontColor -> 
                  RGBColor[
                   0.17960779999999998`, 0.17960779999999998`, 
                    0.17960779999999998`]}], {
                FontColor -> 
                 RGBColor[
                  0.5898038999999999, 0.5898038999999999, 
                   0.5898038999999999]}], Evaluator -> "System"], 
             Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQPEUCl2EAWRBZGVCqt7e3HQaAbLhiuLLz588DpR48eAC3
AsgGigDF4coePnzY19cH5yI7BigOlIW4Fqilu7sbq7OB4kBZBjAgRhmRphHv
NiJ9Sny4ERMLaABrnAIA5lG1ZQ==
                 "], "Byte", ColorSpace -> "RGB", Interleaving -> True], 
               "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQPEUCl2EAWRBZGVCqs7WpoaoEgoBsuGK4svPnzzfWlK+o
9dve4AJBQDZQBCgOV/bw4cOOloZVtb5wNRAEFAGKA2UhrgVqaaouRlMDQUBx
oCwDGBCjjEjTiHcbkT4lPtyIiQVi4hQArnpwkw==
                 "], "Byte", ColorSpace -> "RGB", Interleaving -> True], 
               "Pressed" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQPEUCL2EAWRBZGVDqw5dvrz9BEZANVwxX9urVq3efvxUt
PujVuQGCgGygCFAcruzZs2fvPn3Nmb8frgaCgCJAcaAsxLVALc/efUZTA0FA
caAsAxgQo4xI04h3G5E+JT7ciIkFYuIUAHu5mtk=
                 "], "Byte", ColorSpace -> "RGB", Interleaving -> True]}, 
             Background -> RGBColor[0.898039, 0.898039, 0.898039], Method -> 
             "Queued", ImageSize -> {All, 20}, Enabled -> Dynamic[
               Not[
                TrueQ[
                ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled]], 
               TrackedSymbols :> {
                ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled}], 
             Evaluator -> Automatic], {DynamicBox[
               ToBoxes[
                
                Grid[{{"Section", (((" (" <> 
                    If[$OperatingSystem === "MacOSX", "Cmd", "Alt"]) <> "+") <> 
                    "4") <> ")"}}, Alignment -> {{Left, Right}, Automatic}, 
                 ItemSize -> {10, Automatic}], StandardForm]] :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    ComputationalEssayHelpers`Private`createCellBelow[
                    "Section"]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]], DynamicBox[
               ToBoxes[
                
                Grid[{{"Subsection", (((" (" <> 
                    If[$OperatingSystem === "MacOSX", "Cmd", "Alt"]) <> "+") <> 
                    "5") <> ")"}}, Alignment -> {{Left, Right}, Automatic}, 
                 ItemSize -> {10, Automatic}], StandardForm]] :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    ComputationalEssayHelpers`Private`createCellBelow[
                    "Subsection"]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]], DynamicBox[
               ToBoxes[
                
                Grid[{{"Subsubsection", (((" (" <> 
                    If[$OperatingSystem === "MacOSX", "Cmd", "Alt"]) <> "+") <> 
                    "6") <> ")"}}, Alignment -> {{Left, Right}, Automatic}, 
                 ItemSize -> {10, Automatic}], StandardForm]] :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    ComputationalEssayHelpers`Private`createCellBelow[
                    "Subsubsection"]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]], Delimiter, DynamicBox[
               ToBoxes[
                
                Grid[{{"Title", (((" (" <> 
                    If[$OperatingSystem === "MacOSX", "Cmd", "Alt"]) <> "+") <> 
                    "1") <> ")"}}, Alignment -> {{Left, Right}, Automatic}, 
                 ItemSize -> {10, Automatic}], StandardForm]] :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    ComputationalEssayHelpers`Private`createCellBelow[
                    "Title"]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]], DynamicBox[
               ToBoxes[
                
                Grid[{{"Subtitle", (((" (" <> 
                    If[$OperatingSystem === "MacOSX", "Cmd", "Alt"]) <> "+") <> 
                    "2") <> ")"}}, Alignment -> {{Left, Right}, Automatic}, 
                 ItemSize -> {10, Automatic}], StandardForm]] :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    ComputationalEssayHelpers`Private`createCellBelow[
                    "Subtitle"]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]], DynamicBox[
               ToBoxes[
                
                Grid[{{"Chapter", (((" (" <> 
                    If[$OperatingSystem === "MacOSX", "Cmd", "Alt"]) <> "+") <> 
                    "3") <> ")"}}, Alignment -> {{Left, Right}, Automatic}, 
                 ItemSize -> {10, Automatic}], StandardForm]] :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    ComputationalEssayHelpers`Private`createCellBelow[
                    "Chapter"]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]], "\"Author\"" :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    ComputationalEssayHelpers`Private`createCellBelow[
                    "Author"]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]], "\"Abstract\"" :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    ComputationalEssayHelpers`Private`createCellBelow[
                    "Abstract"]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]]}, Appearance -> None, Method -> 
            "Queued", Enabled -> Dynamic[
              Not[
               TrueQ[
               ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled]], 
              TrackedSymbols :> {
               ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled}]], 
           ActionMenuBox[
            ButtonBox[
             TemplateBox[{
               StyleBox[
                
                TemplateBox[{
                 "\"Insert Text\"", 
                  "\"\[ThinSpace]\[ThinSpace]\[ThinSpace]\[FilledDownTriangle]\
\""}, "RowDefault"], "Text", FontFamily -> "Source Sans Pro", FontSize -> 11, 
                StripOnInput -> False], 
               "\"Insert a cell of the chosen type below the current \
selection\""}, "PrettyTooltipTemplate"], ButtonFunction :> 
             With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; CurrentValue[
                    RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, Null], 
                   CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; ResourceSystemClient`DefinitionNotebook`$\
ButtonsDisabled = False; Null]; Null]]], FrameMargins -> {{4, 4}, {0, 0}}, 
             BaseStyle -> Dynamic[
               FEPrivate`If[
                CurrentValue[Enabled], 
                FEPrivate`If[
                 CurrentValue["MouseOver"], {
                 FontColor -> RGBColor[0.898039, 0.898039, 0.898039]}, {
                 FontColor -> 
                  RGBColor[
                   0.17960779999999998`, 0.17960779999999998`, 
                    0.17960779999999998`]}], {
                FontColor -> 
                 RGBColor[
                  0.5898038999999999, 0.5898038999999999, 
                   0.5898038999999999]}], Evaluator -> "System"], 
             Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQPEUCl2EAWRBZGVCqt7e3HQaAbLhiuLLz588DpR48eAC3
AsgGigDF4coePnzY19cH5yI7BigOlIW4Fqilu7sbq7OB4kBZBjAgRhmRphHv
NiJ9Sny4ERMLaABrnAIA5lG1ZQ==
                 "], "Byte", ColorSpace -> "RGB", Interleaving -> True], 
               "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQPEUCl2EAWRBZGVCqs7WpoaoEgoBsuGK4svPnzzfWlK+o
9dve4AJBQDZQBCgOV/bw4cOOloZVtb5wNRAEFAGKA2UhrgVqaaouRlMDQUBx
oCwDGBCjjEjTiHcbkT4lPtyIiQVi4hQArnpwkw==
                 "], "Byte", ColorSpace -> "RGB", Interleaving -> True], 
               "Pressed" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQPEUCL2EAWRBZGVDqw5dvrz9BEZANVwxX9urVq3efvxUt
PujVuQGCgGygCFAcruzZs2fvPn3Nmb8frgaCgCJAcaAsxLVALc/efUZTA0FA
caAsAxgQo4xI04h3G5E+JT7ciIkFYuIUAHu5mtk=
                 "], "Byte", ColorSpace -> "RGB", Interleaving -> True]}, 
             Background -> RGBColor[0.898039, 0.898039, 0.898039], Method -> 
             "Queued", ImageSize -> {All, 20}, Enabled -> Dynamic[
               Not[
                TrueQ[
                ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled]], 
               TrackedSymbols :> {
                ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled}], 
             Evaluator -> Automatic], {DynamicBox[
               ToBoxes[
                
                Grid[{{"Text", (((" (" <> 
                    If[$OperatingSystem === "MacOSX", "Cmd", "Alt"]) <> "+") <> 
                    "7") <> ")"}}, Alignment -> {{Left, Right}, Automatic}, 
                 ItemSize -> {10, Automatic}], StandardForm]] :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    ComputationalEssayHelpers`Private`createCellBelow[
                    "Text"]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]], DynamicBox[
               ToBoxes[
                
                Grid[{{"CodeText", ((((" (" <> "Shift+") <> 
                    If[$OperatingSystem === "MacOSX", "Cmd", "Alt"]) <> "+") <> 
                    "7") <> ")"}}, Alignment -> {{Left, Right}, Automatic}, 
                 ItemSize -> {10, Automatic}], StandardForm]] :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    ComputationalEssayHelpers`Private`createCellBelow[
                    "CodeText"]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]], "\"Item\"" :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    ComputationalEssayHelpers`Private`createCellBelow[
                    "Item"]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]]}, Appearance -> None, Method -> 
            "Queued", Enabled -> Dynamic[
              Not[
               TrueQ[
               ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled]], 
              TrackedSymbols :> {
               ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled}]], 
           ActionMenuBox[
            ButtonBox[
             StyleBox[
              
              TemplateBox[{
               "\"Open/Close Groups\"", 
                "\"\[ThinSpace]\[ThinSpace]\[ThinSpace]\[FilledDownTriangle]\"\
"}, "RowDefault"], "Text", FontFamily -> "Source Sans Pro", FontSize -> 11, 
              StripOnInput -> False], ButtonFunction :> 
             With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; CurrentValue[
                    RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, Null], 
                   CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; ResourceSystemClient`DefinitionNotebook`$\
ButtonsDisabled = False; Null]; Null]]], FrameMargins -> {{4, 4}, {0, 0}}, 
             BaseStyle -> Dynamic[
               FEPrivate`If[
                CurrentValue[Enabled], 
                FEPrivate`If[
                 CurrentValue["MouseOver"], {
                 FontColor -> RGBColor[0.898039, 0.898039, 0.898039]}, {
                 FontColor -> 
                  RGBColor[
                   0.17960779999999998`, 0.17960779999999998`, 
                    0.17960779999999998`]}], {
                FontColor -> 
                 RGBColor[
                  0.5898038999999999, 0.5898038999999999, 
                   0.5898038999999999]}], Evaluator -> "System"], 
             Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQPEUCl2EAWRBZGVCqt7e3HQaAbLhiuLLz588DpR48eAC3
AsgGigDF4coePnzY19cH5yI7BigOlIW4Fqilu7sbq7OB4kBZBjAgRhmRphHv
NiJ9Sny4ERMLaABrnAIA5lG1ZQ==
                 "], "Byte", ColorSpace -> "RGB", Interleaving -> True], 
               "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQPEUCl2EAWRBZGVCqs7WpoaoEgoBsuGK4svPnzzfWlK+o
9dve4AJBQDZQBCgOV/bw4cOOloZVtb5wNRAEFAGKA2UhrgVqaaouRlMDQUBx
oCwDGBCjjEjTiHcbkT4lPtyIiQVi4hQArnpwkw==
                 "], "Byte", ColorSpace -> "RGB", Interleaving -> True], 
               "Pressed" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQPEUCL2EAWRBZGVDqw5dvrz9BEZANVwxX9urVq3efvxUt
PujVuQGCgGygCFAcruzZs2fvPn3Nmb8frgaCgCJAcaAsxLVALc/efUZTA0FA
caAsAxgQo4xI04h3G5E+JT7ciIkFYuIUAHu5mtk=
                 "], "Byte", ColorSpace -> "RGB", Interleaving -> True]}, 
             Background -> RGBColor[0.898039, 0.898039, 0.898039], Method -> 
             "Queued", ImageSize -> {All, 20}, Enabled -> Dynamic[
               Not[
                TrueQ[
                ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled]], 
               TrackedSymbols :> {
                ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled}], 
             Evaluator -> Automatic], {
            "\"Open Chapters\"" :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    ComputationalEssayHelpers`Private`openCloseAll[
                    ButtonNotebook[], "Chapter", Open]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]], "\"Close Chapters\"" :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    ComputationalEssayHelpers`Private`openCloseAll[
                    ButtonNotebook[], "Chapter", Closed]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]], "\"Open Sections\"" :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    ComputationalEssayHelpers`Private`openCloseAll[
                    ButtonNotebook[], "Section", Open]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]], "\"Close Sections\"" :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    ComputationalEssayHelpers`Private`openCloseAll[
                    ButtonNotebook[], "Section", Closed]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]]}, Appearance -> None, Method -> 
            "Queued", Enabled -> Dynamic[
              Not[
               TrueQ[
               ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled]], 
              TrackedSymbols :> {
               ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled}]]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, 
         GridBoxBackground -> {"Columns" -> {{None}}, "Rows" -> {
             RGBColor[0.898039, 0.898039, 0.898039]}}, 
         GridBoxFrame -> {
          "Columns" -> False, 
           "RowsIndexed" -> {1 -> RGBColor[0.898039, 0.898039, 0.898039]}}, 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         GridBoxSpacings -> {
          "ColumnsIndexed" -> {1 -> 0, -1 -> 0}, "Rows" -> {{Automatic}}}, 
         FrameStyle -> GrayLevel[0.75]], "Grid"]& )}], 
   Cell[
    StyleData["MainGridTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (TagBox[
        GridBox[{{
           TagBox[
            GridBox[{{
               GraphicsBox[{{
                  Thickness[0.03333333333333333], {
                   FaceForm[{
                    RGBColor[
                    0.8200000000000001, 0.8200000000000001, 
                    0.8200000000000001], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{27.,
                     1.}, {3., 1.}, {3., 29.}, {27., 29.}}}]}, {
                   FaceForm[{
                    RGBColor[1., 1., 1.], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{4., 
                    2.}, {26., 2.}, {26., 28.}, {4., 28.}}}]}, {
                   FaceForm[{
                    RGBColor[0.749, 0.749, 0.749], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{24.,
                     2.}, {6., 2.}, {6., 10.}, {24., 10.}}}]}, {
                   FaceForm[{
                    RGBColor[0.898, 0.898, 0.898], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{23.,
                     2.}, {7., 2.}, {7., 9.}, {23., 9.}}}]}, {
                   FaceForm[{
                    RGBColor[1., 1., 1.], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{22.,
                     2.}, {12., 2.}, {12., 8.}, {22., 8.}}}]}, {
                   FaceForm[{
                    RGBColor[0.984, 0.6859999999999999, 0.365], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{8., 7.}, {11., 7.}, {11., 8.}, {8., 8.}}, {{8., 
                    5.}, {11., 5.}, {11., 6.}, {8., 6.}}, {{8., 4.}, {11., 
                    4.}, {11., 3.}, {8., 3.}}}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
                    2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 
                    1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0,
                     1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{
                    0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {
                    0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
                    2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 
                    1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{9.697299999999998, 24.522}, {
                    9.133299999999998, 24.645}, {8.861299999999998, 
                    24.259999999999998`}, {9.313299999999998, 24.092}}, {{
                    9.291299999999998, 23.933}, {8.9683, 
                    24.052999999999997`}, {9.2183, 23.726999999999997`}, {
                    9.587299999999999, 23.601}}, {{9.553299999999998, 
                    23.447}, {9.169299999999998, 23.578}, {8.760299999999999, 
                    23.456999999999997`}, {9.102299999999998, 
                    23.348999999999997`}}, {{9.083299999999998, 22.633}, {
                    9.025299999999998, 23.208}, {8.567299999999998, 23.354}, {
                    8.555299999999999, 22.865}}, {{8.521299999999998, 
                    23.551}, {9.039299999999999, 23.703}, {8.711299999999998, 
                    24.13}, {8.2183, 23.962999999999997`}}, {{8.4073, 
                    23.197}, {8.171299999999999, 22.851}, {8.171299999999999, 
                    22.445}, {8.398299999999999, 22.837}}, {{
                    8.091299999999999, 23.014}, {8.395299999999999, 23.458}, {
                    8.091299999999999, 23.871}, {7.786299999999999, 
                    23.458}}, {{8.010299999999999, 22.851}, {
                    7.773299999999999, 23.197}, {7.782299999999998, 22.837}, {
                    8.010299999999999, 22.445}}, {{7.964299999999999, 
                    23.962999999999997`}, {7.469299999999999, 24.13}, {
                    7.141299999999999, 23.703}, {7.659299999999998, 
                    23.551}}, {{7.626299999999999, 22.865}, {
                    7.614299999999998, 23.354}, {7.155299999999999, 23.209}, {
                    7.097299999999999, 22.633999999999997`}}, {{
                    7.078299999999999, 23.348999999999997`}, {
                    7.422299999999998, 23.456999999999997`}, {
                    7.0112999999999985`, 23.578}, {6.6282999999999985`, 
                    23.447}}, {{6.593299999999998, 23.601}, {
                    6.962299999999999, 23.726999999999997`}, {
                    7.214299999999998, 24.054}, {6.889299999999999, 
                    23.933999999999997`}}, {{6.867299999999998, 24.092}, {
                    7.319299999999998, 24.259999999999998`}, {
                    7.0482999999999985`, 24.645}, {6.484299999999998, 
                    24.522}}, {{7.113299999999999, 25.217}, {
                    7.158299999999999, 24.761}, {7.356299999999999, 
                    24.479999999999997`}, {7.344299999999999, 24.904}}, {{
                    7.5032999999999985`, 24.817999999999998`}, {
                    7.518299999999998, 24.279}, {8.010299999999999, 24.113}, {
                    8.010299999999999, 24.637999999999998`}}, {{
                    7.2452999999999985`, 25.302}, {7.4712999999999985`, 
                    24.997}, {7.8622999999999985`, 24.857}, {
                    7.656299999999998, 25.122}}, {{7.800299999999998, 
                    25.192}, {8.091299999999999, 24.82}, {8.381299999999998, 
                    25.192}, {8.091299999999999, 25.689}}, {{
                    8.171299999999999, 24.637999999999998`}, {
                    8.171299999999999, 24.113}, {8.663299999999998, 24.279}, {
                    8.677299999999999, 24.817999999999998`}}, {{
                    8.836299999999998, 24.904}, {8.8243, 
                    24.479999999999997`}, {9.022299999999998, 24.761}, {
                    9.068299999999999, 25.217}}, {{8.318299999999999, 
                    24.857}, {8.710299999999998, 24.997}, {8.935299999999998, 
                    25.302}, {8.525299999999998, 25.122}}, CompressedData["
1:eJxTTMoPSmViYGAQAWIQbb/k/j6+P8oOE9/W2JvOs3CQKL4u9OmhkgMDGFg4
wOTzhJoPnEo0d1i3Lan+ZqySw+2fdVl7TMwdPjqeT7vargSVN3MQkT351J5F
0eH64gJbru1mDk9BBugpQM0zcwicpthXulEOLl8ja5HuslIarp/ZRNDM5q80
3PwHEeLbLx6QgNuvt1udn/urFNx9MHmY+2H6VdgapzqftoCbD5G3hNuvGdN/
6KuHJZr7rODuh8nX3bStjOhQguuH+R9mPgC7F3w4
                    "]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{11.,
                     25.}, {24.000999999999998`, 25.}, {24.000999999999998`, 
                    26.}, {11., 26.}}}]}, {
                   FaceForm[{
                    RGBColor[0.749, 0.749, 0.749], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{24.,
                     22.}, {11., 22.}, {11., 24.}, {24., 24.}}}]}, {
                   FaceForm[{
                    RGBColor[0.984, 0.6859999999999999, 0.365], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{19., 20.}, {
                    24., 20.}, {24., 21.}, {19., 21.}}, {{6., 20.}, {18., 
                    20.}, {18., 21.}, {6., 21.}}, {{6., 18.}, {10., 18.}, {
                    10., 19.}, {6., 19.}}, {{11., 19.}, {17., 19.}, {17., 
                    18.}, {11., 18.}}}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
                    2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 
                    1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0,
                     1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{
                    0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJx10ksKgzAYReHQdtgFZFqRIEEkPioOXUOXUOjY/c90kDvogSuEn08OaoKv
7/H53UMIz2s9rnULutL+P4txh/vyiPtvY/byWudQ52Zc0MtLnRk93aOX9byE
nub3yhG9m+xlnY/2MxsP6OUJfTZmLzd16jyicUYvd/Bs3KOXE9waZ/R8v/YT
jfkfl/0EHWIqGQ==
                    "]]}, {
                   FaceForm[{
                    RGBColor[0.392, 0.392, 0.392], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 
                    3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 
                    3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
                    3}}, {{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {0, 1, 
                    0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {CompressedData["
1:eJxTTMoPSmViYGAQBWIQ/YB78sqmiXoOlxjuMXF2sTisvRFf5h+n59Dj9YrF
RJDFwUzqQLQCo56D3oQFPwyfMUH4B3Ud1qs+aZ53lsHhxfb1zM959OD8lpoL
myNN9Rwq5ixS3vmH0QEo26ORC+MzOSQuvGbyfoeew7F/m6o/bWB2mLcaZKO+
g5xFuktmPqvD1mWVxzWtDBy2XwQ5iNXhjf5udf5uAwdWE0Ezm71MDs/WgSwy
cFh9/mrYG30mhw+tJ0MOrjBwiM09CjSR0QFkS/sWA7h7+koLpXkfIPgvbq75
FXPWwCHx8GXtVEkmuHoJsIXMDm0g45YYOHR8uX29sZjZgZ8b6CJ3A4fvbPEz
fETZHKqW6jjLZOs7sIO4PWwO6OEHAOM+kNE=
                    "], CompressedData["
1:eJxTTMoPSmViYGCQBmIQ3XHp3gNuYX2HJyKyJ5/aSzgsZtzDKiSi65AbVrtu
2yMxB7VDbcvDuXQcOKXnxWmeFnSo+21VcI5D24HVRNDMZi+nQ+LCaybvd2g5
RDvZvbi5hs0hXSmnoipVy0HtSfO8s6uYHaIVHD8m82g5rFcFCTA4aElMvcKZ
geBv1MsDWqnlYLM3aJpiHzPUPm0HOYt0l8x8NofU708SF4ZpO1zRTpV8FMHp
EFyiMv1/gI7D9qT6m7aVghD3hug6HN+1o5etQMzh/wSgCw30HfbxzTFetEXc
4dOGgOxZ0w0cwM4XkHQ4Xe+xv3avocO0TTyFa7pFHfi5ty6rbDdyqFu3Lak+
Ushhho9oj5eXscOcRco7/7TzOSyrPK5p9cnYQazH6xWLCbuDLNhdJnD3r/kV
k3t0HoJfKM37QNfAxEEDbDCbwxI/B+HExcYOBrvVgSI8DidDDq5Ywmfs8OaA
pbLXbwEHq0lAF8kbOXzJAQa4magDSPuEAwYOINfdfiHpgB4/AHQArZ4=
                    "], CompressedData["
1:eJxTTMoPSmViYGCQAWIQvTz8lNGRjXoO67Yl1d/cK+MwK3T+6rUROg5rum9n
MLyXcujReMu7z0Db4ULa1edZq0Ucchcz7mEV0nJ4xWIiaGbD62AzG6RB08HZ
7sXNNb84HDzmNqgdctN0MNitzs+9lcXht1XBuY5LGg7rVZ80zzvL4ACxThPO
V3D8mHxmrqbDs3UgARaHAE+gAUxaDqwg4/dyOIBU5yVrOajs/NP+5TaPA5C3
mLFG22HG3cntrVEiDpNWNgV6ztVxYPsg5hFQI+UgmuX7ue+ynkNokPqCTgMZ
B3ZboANf6ztUN+v7LOOSdQC5atlMAwe+OcaLtmyXcZC1SHfJ9Dd0WA/yv620
wyJlkEVGDh4BfySKr4s7TPnGFj9jjYlDxBt9oI/4HL7cvt5YfMwU7n4w/xkm
/2PryZCDKxgdmordpnxzM3XQSZV8FCHO6QA2vtrEIXKF6VnrcwIOQdMU+0o3
Gju4/Hr7+oCliEO9x/5a2R+GDixH+w3L10o7AAMhaFqjAcT9XXIO6PEFAPga
wsg=
                    "], CompressedData["
1:eJxTTMoPSmViYGAQBWIQPSt0/uq1N/QdLjHcY+Ls4nNoUDvUtjxcz8Fq0ul6
j/28DmtvxJf5x+k6bL8IUsDusJtVSMS+TcdhveqT5nlnGRycZF4/MruF4DcF
es5tWKbroAbirmJzCC5Rmf5/gp5D1XFNoJE8Dkt1nIE69B3ico/+21TN6/BA
d8KCH4UGDo8ixIFW8DnIWqS7ZPIbOrQAdZ+/yuVgszdommKfocPq81fD3uiz
OkQ52b24ucbQwd9BOPHwZWaH5HdAkROGDln5H1pPhjA5gK25bwh3Ty3IQE4j
OB9oyG7194YO7PEzfER7mBxWgcw9b+jwmsVE0MyGBWLfOkOHApBxB1nBtmir
wtzD7QAKldpaAwdGUHDJ8zughx8AsHaP1w==
                    "], CompressedData["
1:eJxTTMoPSmViYGCQBmIQvb9W1iI9xchhwoIfhs/WcTs42b24uWaXkYNI4uHL
2qkcDlO+scXP4DF2YI+f4SPaw+JgszdomqKfscN61SfN884yOHTJJ7+LUkLw
d6vzc299ZuSQM6t8ziJlFgeQcb/mGDmogaRXsTu0nQw5uMLFyMFXtMfrFQu3
Q7EbyAZDh9yw2nXbHgk6gKzzKTVwaGI52m/4XdjB4WPymdhufQeXX29fH7AU
dugLLlGZ/l/XYc9jEdmTqUION+LL/OXEdB3W/orJPfqPx8FPTizL11jHYR/Q
mX2lrA5ty8NPGbHoOPSVFkrzPmB2MJipJTH1irbDKaAzlvgxOeyPVnD8uFgb
7n4QN9kHwc+uqFqq06wNNY/JYeetrr+p27UdykDG6bI4AGWdZV5rO/wEhp7q
E1aHRYx7WIWu6ED9y+uw4JrJe4ujug4z7k5ub70l5HBna0vNhWJ9B4ni60Kf
Dgo7GIG0HTZwOGftd3HiHRGHTxsCsmddN3TQ+TYdqEPAAT1+AE3XvCM=
                    "]}]}}}, {
                ImageSize -> {Automatic, 32}, 
                 ImagePadding -> {{5, 0}, {0, 0}}, BaselinePosition -> 
                 Scaled[0.25], AspectRatio -> Automatic, 
                 ImageSize -> {30., 30.}, 
                 PlotRange -> {{0., 30.}, {0., 30.}}}], 
               StyleBox[
                TagBox[
                 GridBox[{{
                    StyleBox[
                    "\"Computational Essay\"", FontFamily -> 
                    "Source Sans Pro", FontWeight -> "SemiBold", StripOnInput -> 
                    False]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, AutoDelete -> 
                  False, GridBoxDividers -> {
                   "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Grid"], FontSize -> 24, FontColor -> GrayLevel[1], 
                StripOnInput -> False]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
           "\[SpanFromLeft]", "\[SpanFromLeft]", "\[SpanFromLeft]", 
           "\[SpanFromLeft]", "\[SpanFromLeft]", "\[SpanFromLeft]", "\"\""}, {
           ActionMenuBox[
            TemplateBox[{
              TemplateBox[{
                TemplateBox[{"\"Sample Content\"", 
                  TemplateBox[{5}, "Spacer1"], "\"\[FilledDownTriangle]\""}, 
                 "RowDefault"], 
                "\"Clear sample content in the current notebook, or view a \
completed sample computational essay\""}, "PrettyTooltipTemplate"], Null& , 
              "\"Clear sample content in the current notebook, or view a \
completed sample computational essay\"", True}, "OrangeButtonTemplate"], {
            "\"Insert Sample Content\"" :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    ComputationalEssayHelpers`Private`insertSampleContent[]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]], "\"Clear Sample Content\"" :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    Module[{$CellContext`cells = Flatten[
                    Map[{NotebookFind[
                    ButtonNotebook[], #, All, CellTags, AutoScroll -> False]; 
                    SelectedCells[]}& , {
                    "ExampleTopicSentence", "TopicSentenceButton", 
                    "ExampleCodeText", "ExampleInput", "ExampleOutput", 
                    "EssayStructureExample", "CitationExample", 
                    "SectionMoreInfoYourEssayTitle", 
                    "SectionMoreInfoAuthorInfoButton", 
                    "SectionMoreInfoAbstract", 
                    "SectionMoreInfoSectionHeaderInfoButton"}]]}, 
                    NotebookDelete[$CellContext`cells]]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]], "\"Open Sample Essay\"" :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    SystemOpen["https://wolfr.am/SampleEssay"]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]]}, Appearance -> None, Method -> 
            "Queued", Enabled -> Dynamic[
              Not[
               TrueQ[
               ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled]], 
              TrackedSymbols :> {
               ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled}]], 
           
           TemplateBox[{
            "\"Open Guidelines\"", SystemOpen[
             "https://wolfr.am/ComputationalEssayGuidelines"]& , "\"\"", 
             False}, "OrangeButtonTemplate"], 
           TemplateBox[{
             TemplateBox[{
               TagBox[
                GridBox[{{"\"Tools\"", 
                   PaneSelectorBox[{False -> GraphicsBox[{
                    GrayLevel[1], 
                    AbsoluteThickness[1], 
                    LineBox[{{-1, -1}, {-1, 1}, {1, 1}, {1, -1}, {-1, -1}}], 
                    LineBox[{{0., 0.65}, {0., -0.65}}], 
                    LineBox[{{-0.65, 0.}, {0.65, 0.}}]}, ImageSize -> 8, 
                    PlotRangePadding -> None, Background -> None], True -> 
                    GraphicsBox[{
                    GrayLevel[1], 
                    AbsoluteThickness[1], 
                    LineBox[{{-1, -1}, {-1, 1}, {1, 1}, {1, -1}, {-1, -1}}], 
                    LineBox[{{-0.65, 0.}, {0.65, 0.}}]}, ImageSize -> 8, 
                    PlotRangePadding -> None, Background -> None]}, 
                    Dynamic[
                    CurrentValue[
                    EvaluationNotebook[], {TaggingRules, "ToolsOpen"}, True]],
                     BaselinePosition -> Scaled[-0.1]]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{0.35}}}], "Grid"], 
               "\"Toggle documentation toolbar\""}, "PrettyTooltipTemplate"], 
             ResourceSystemClient`DefinitionNotebook`ToggleToolbar[
              ButtonNotebook[]]& , "\"Toggle documentation toolbar\"", False},
             "OrangeButtonTemplate"], 
           TagBox[
            
            GridBox[{{"\"\"", "\"\""}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
             False, GridBoxDividers -> {
              "ColumnsIndexed" -> {2 -> True}, "Rows" -> {{False}}}, 
             GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{2}}},
              GridBoxSpacings -> {"Columns" -> {{0.5}}}, FrameStyle -> 
             RGBColor[0.99215, 0.843125, 0.68235]], "Grid"], 
           TemplateBox[{
             
             TemplateBox[{
              "\"Check\"", "\"Check notebook for potential errors\""}, 
              "PrettyTooltipTemplate"], 
             ResourceSystemClient`DefinitionNotebook`CheckDefinitionNotebook[
              ButtonNotebook[]]& , "\"Check notebook for potential errors\"", 
             False}, "OrangeButtonTemplate"], 
           TemplateBox[{
             
             TemplateBox[{
              "\"Publish to Cloud\"", 
               "\"Publish your computational essay to the cloud\""}, 
              "PrettyTooltipTemplate"], 
             With[{$CellContext`nb = ButtonNotebook[]}, CreateDialog[
                
                ComputationalEssayHelpers`Private`createSubmissionDialog[$\
CellContext`nb], WindowSize -> {350, 150}, Background -> White, WindowFrame -> 
                "Normal", "Evaluator" -> "System"]; Null]& , 
             "\"Publish your computational essay to the cloud\"", False}, 
            "OrangeButtonTemplate"], 
           ItemBox[
            StyleBox[
             DynamicBox[
              ToBoxes[
               CurrentValue[
                EvaluationNotebook[], {TaggingRules, "StatusMessage"}, ""], 
               StandardForm], Evaluator -> "System", 
              Initialization :> (CurrentValue[
                 EvaluationNotebook[], {TaggingRules, "StatusMessage"}] = 
               "")], "Text", 
             GrayLevel[1], StripOnInput -> False], ItemSize -> Fit, 
            StripOnInput -> False], 
           TemplateBox[{
             
             TemplateBox[{
              "\"Submit to Notebook Archive\"", 
               "\"Submit your essay to the Wolfram Notebook Archive\""}, 
              "PrettyTooltipTemplate"], 
             ComputationalEssayHelpers`Private`submitEssay[]& , 
             "\"Submit your essay to the Wolfram Notebook Archive\"", False}, 
            "OrangeButtonTemplate"]}}, 
         GridBoxAlignment -> {
          "Columns" -> {{Left}}, "ColumnsIndexed" -> {-1 -> Right}, 
           "Rows" -> {{Center}}}, AutoDelete -> False, 
         GridBoxBackground -> {"Columns" -> {{None}}, "Rows" -> {
             RGBColor[0.9843, 0.68625, 0.3647], 
             RGBColor[0.7185389999999999, 0.5009625, 0.266231]}}, 
         GridBoxFrame -> {
          "Columns" -> False, 
           "RowsIndexed" -> {
            1 -> RGBColor[0.9843, 0.68625, 0.3647], 2 -> 
             RGBColor[0.7185389999999999, 0.5009625, 0.266231]}}, 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         GridBoxSpacings -> {
          "Columns" -> {5, {0.9}, 5}, 
           "RowsIndexed" -> {1 -> 1.1, 2 -> 1.3, 3 -> 1.55}}, FrameStyle -> 
         RGBColor[0.9843, 0.68625, 0.3647]], "Grid"]& )}], 
   Cell[
    StyleData["ReviewerCommentLabelTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (TagBox[
        GridBox[{{#, 
           TemplateBox[{
             GraphicsBox[{{
                Thickness[0.03333333333333333], {
                 FaceForm[{
                   RGBColor[
                   0.8200000000000001, 0.8200000000000001, 
                    0.8200000000000001], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{27., 
                  1.}, {3., 1.}, {3., 29.}, {27., 29.}}}]}, {
                 FaceForm[{
                   RGBColor[1., 1., 1.], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{4., 
                  2.}, {26., 2.}, {26., 28.}, {4., 28.}}}]}, {
                 FaceForm[{
                   RGBColor[0.749, 0.749, 0.749], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 
                  2.}, {6., 2.}, {6., 10.}, {24., 10.}}}]}, {
                 FaceForm[{
                   RGBColor[0.898, 0.898, 0.898], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 
                  2.}, {7., 2.}, {7., 9.}, {23., 9.}}}]}, {
                 FaceForm[{
                   RGBColor[1., 1., 1.], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{22., 
                  2.}, {12., 2.}, {12., 8.}, {22., 8.}}}]}, {
                 FaceForm[{
                   RGBColor[0.984, 0.6859999999999999, 0.365], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                  0}}}, {{{8., 7.}, {11., 7.}, {11., 8.}, {8., 8.}}, {{8., 
                  5.}, {11., 5.}, {11., 6.}, {8., 6.}}, {{8., 4.}, {11., 
                  4.}, {11., 3.}, {8., 3.}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                   0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                   0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                   0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                   0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                   0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                   0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                   0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                   0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                   0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                   0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                   0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                   0}}}, {{{9.697299999999998, 24.522}, {9.133299999999998, 
                   24.645}, {8.861299999999998, 24.259999999999998`}, {
                   9.313299999999998, 24.092}}, {{9.291299999999998, 
                   23.933}, {8.9683, 24.052999999999997`}, {9.2183, 
                   23.726999999999997`}, {9.587299999999999, 23.601}}, {{
                   9.553299999999998, 23.447}, {9.169299999999998, 23.578}, {
                   8.760299999999999, 23.456999999999997`}, {
                   9.102299999999998, 23.348999999999997`}}, {{
                   9.083299999999998, 22.633}, {9.025299999999998, 23.208}, {
                   8.567299999999998, 23.354}, {8.555299999999999, 
                   22.865}}, {{8.521299999999998, 23.551}, {9.039299999999999,
                    23.703}, {8.711299999999998, 24.13}, {8.2183, 
                   23.962999999999997`}}, {{8.4073, 23.197}, {
                   8.171299999999999, 22.851}, {8.171299999999999, 22.445}, {
                   8.398299999999999, 22.837}}, {{8.091299999999999, 
                   23.014}, {8.395299999999999, 23.458}, {8.091299999999999, 
                   23.871}, {7.786299999999999, 23.458}}, {{8.010299999999999,
                    22.851}, {7.773299999999999, 23.197}, {7.782299999999998, 
                   22.837}, {8.010299999999999, 22.445}}, {{7.964299999999999,
                    23.962999999999997`}, {7.469299999999999, 24.13}, {
                   7.141299999999999, 23.703}, {7.659299999999998, 
                   23.551}}, {{7.626299999999999, 22.865}, {7.614299999999998,
                    23.354}, {7.155299999999999, 23.209}, {7.097299999999999, 
                   22.633999999999997`}}, {{7.078299999999999, 
                   23.348999999999997`}, {7.422299999999998, 
                   23.456999999999997`}, {7.0112999999999985`, 23.578}, {
                   6.6282999999999985`, 23.447}}, {{6.593299999999998, 
                   23.601}, {6.962299999999999, 23.726999999999997`}, {
                   7.214299999999998, 24.054}, {6.889299999999999, 
                   23.933999999999997`}}, {{6.867299999999998, 24.092}, {
                   7.319299999999998, 24.259999999999998`}, {
                   7.0482999999999985`, 24.645}, {6.484299999999998, 
                   24.522}}, {{7.113299999999999, 25.217}, {7.158299999999999,
                    24.761}, {7.356299999999999, 24.479999999999997`}, {
                   7.344299999999999, 24.904}}, {{7.5032999999999985`, 
                   24.817999999999998`}, {7.518299999999998, 24.279}, {
                   8.010299999999999, 24.113}, {8.010299999999999, 
                   24.637999999999998`}}, {{7.2452999999999985`, 25.302}, {
                   7.4712999999999985`, 24.997}, {7.8622999999999985`, 
                   24.857}, {7.656299999999998, 25.122}}, {{7.800299999999998,
                    25.192}, {8.091299999999999, 24.82}, {8.381299999999998, 
                   25.192}, {8.091299999999999, 25.689}}, {{8.171299999999999,
                    24.637999999999998`}, {8.171299999999999, 24.113}, {
                   8.663299999999998, 24.279}, {8.677299999999999, 
                   24.817999999999998`}}, {{8.836299999999998, 24.904}, {
                   8.8243, 24.479999999999997`}, {9.022299999999998, 
                   24.761}, {9.068299999999999, 25.217}}, {{8.318299999999999,
                    24.857}, {8.710299999999998, 24.997}, {8.935299999999998, 
                   25.302}, {8.525299999999998, 25.122}}, CompressedData["
1:eJxTTMoPSmViYGAQAWIQbb/k/j6+P8oOE9/W2JvOs3CQKL4u9OmhkgMDGFg4
wOTzhJoPnEo0d1i3Lan+ZqySw+2fdVl7TMwdPjqeT7vargSVN3MQkT351J5F
0eH64gJbru1mDk9BBugpQM0zcwicpthXulEOLl8ja5HuslIarp/ZRNDM5q80
3PwHEeLbLx6QgNuvt1udn/urFNx9MHmY+2H6VdgapzqftoCbD5G3hNuvGdN/
6KuHJZr7rODuh8nX3bStjOhQguuH+R9mPgC7F3w4
                   "]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{11., 
                  25.}, {24.000999999999998`, 25.}, {24.000999999999998`, 
                  26.}, {11., 26.}}}]}, {
                 FaceForm[{
                   RGBColor[0.749, 0.749, 0.749], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 
                  22.}, {11., 22.}, {11., 24.}, {24., 24.}}}]}, {
                 FaceForm[{
                   RGBColor[0.984, 0.6859999999999999, 0.365], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                  0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{19., 20.}, {24.,
                   20.}, {24., 21.}, {19., 21.}}, {{6., 20.}, {18., 20.}, {
                  18., 21.}, {6., 21.}}, {{6., 18.}, {10., 18.}, {10., 19.}, {
                  6., 19.}}, {{11., 19.}, {17., 19.}, {17., 18.}, {11., 
                  18.}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                  0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                  0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                  0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                  0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJx10ksKgzAYReHQdtgFZFqRIEEkPioOXUOXUOjY/c90kDvogSuEn08OaoKv
7/H53UMIz2s9rnULutL+P4txh/vyiPtvY/byWudQ52Zc0MtLnRk93aOX9byE
nub3yhG9m+xlnY/2MxsP6OUJfTZmLzd16jyicUYvd/Bs3KOXE9waZ/R8v/YT
jfkfl/0EHWIqGQ==
                  "]]}, {
                 FaceForm[{
                   RGBColor[0.392, 0.392, 0.392], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
                   3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 
                   3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                   3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 
                   3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                   3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
                   3}}, {{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                   3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {0, 1, 
                   0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                   0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {CompressedData["
1:eJxTTMoPSmViYGAQBWIQ/YB78sqmiXoOlxjuMXF2sTisvRFf5h+n59Dj9YrF
RJDFwUzqQLQCo56D3oQFPwyfMUH4B3Ud1qs+aZ53lsHhxfb1zM959OD8lpoL
myNN9Rwq5ixS3vmH0QEo26ORC+MzOSQuvGbyfoeew7F/m6o/bWB2mLcaZKO+
g5xFuktmPqvD1mWVxzWtDBy2XwQ5iNXhjf5udf5uAwdWE0Ezm71MDs/WgSwy
cFh9/mrYG30mhw+tJ0MOrjBwiM09CjSR0QFkS/sWA7h7+koLpXkfIPgvbq75
FXPWwCHx8GXtVEkmuHoJsIXMDm0g45YYOHR8uX29sZjZgZ8b6CJ3A4fvbPEz
fETZHKqW6jjLZOs7sIO4PWwO6OEHAOM+kNE=
                   "], CompressedData["
1:eJxTTMoPSmViYGCQBmIQ3XHp3gNuYX2HJyKyJ5/aSzgsZtzDKiSi65AbVrtu
2yMxB7VDbcvDuXQcOKXnxWmeFnSo+21VcI5D24HVRNDMZi+nQ+LCaybvd2g5
RDvZvbi5hs0hXSmnoipVy0HtSfO8s6uYHaIVHD8m82g5rFcFCTA4aElMvcKZ
geBv1MsDWqnlYLM3aJpiHzPUPm0HOYt0l8x8NofU708SF4ZpO1zRTpV8FMHp
EFyiMv1/gI7D9qT6m7aVghD3hug6HN+1o5etQMzh/wSgCw30HfbxzTFetEXc
4dOGgOxZ0w0cwM4XkHQ4Xe+xv3avocO0TTyFa7pFHfi5ty6rbDdyqFu3Lak+
Ushhho9oj5eXscOcRco7/7TzOSyrPK5p9cnYQazH6xWLCbuDLNhdJnD3r/kV
k3t0HoJfKM37QNfAxEEDbDCbwxI/B+HExcYOBrvVgSI8DidDDq5Ywmfs8OaA
pbLXbwEHq0lAF8kbOXzJAQa4magDSPuEAwYOINfdfiHpgB4/AHQArZ4=
                   "], CompressedData["
1:eJxTTMoPSmViYGCQAWIQvTz8lNGRjXoO67Yl1d/cK+MwK3T+6rUROg5rum9n
MLyXcujReMu7z0Db4ULa1edZq0Ucchcz7mEV0nJ4xWIiaGbD62AzG6RB08HZ
7sXNNb84HDzmNqgdctN0MNitzs+9lcXht1XBuY5LGg7rVZ80zzvL4ACxThPO
V3D8mHxmrqbDs3UgARaHAE+gAUxaDqwg4/dyOIBU5yVrOajs/NP+5TaPA5C3
mLFG22HG3cntrVEiDpNWNgV6ztVxYPsg5hFQI+UgmuX7ue+ynkNokPqCTgMZ
B3ZboANf6ztUN+v7LOOSdQC5atlMAwe+OcaLtmyXcZC1SHfJ9Dd0WA/yv620
wyJlkEVGDh4BfySKr4s7TPnGFj9jjYlDxBt9oI/4HL7cvt5YfMwU7n4w/xkm
/2PryZCDKxgdmordpnxzM3XQSZV8FCHO6QA2vtrEIXKF6VnrcwIOQdMU+0o3
Gju4/Hr7+oCliEO9x/5a2R+GDixH+w3L10o7AAMhaFqjAcT9XXIO6PEFAPga
wsg=
                   "], CompressedData["
1:eJxTTMoPSmViYGAQBWIQPSt0/uq1N/QdLjHcY+Ls4nNoUDvUtjxcz8Fq0ul6
j/28DmtvxJf5x+k6bL8IUsDusJtVSMS+TcdhveqT5nlnGRycZF4/MruF4DcF
es5tWKbroAbirmJzCC5Rmf5/gp5D1XFNoJE8Dkt1nIE69B3ico/+21TN6/BA
d8KCH4UGDo8ixIFW8DnIWqS7ZPIbOrQAdZ+/yuVgszdommKfocPq81fD3uiz
OkQ52b24ucbQwd9BOPHwZWaH5HdAkROGDln5H1pPhjA5gK25bwh3Ty3IQE4j
OB9oyG7194YO7PEzfER7mBxWgcw9b+jwmsVE0MyGBWLfOkOHApBxB1nBtmir
wtzD7QAKldpaAwdGUHDJ8zughx8AsHaP1w==
                   "], CompressedData["
1:eJxTTMoPSmViYGCQBmIQvb9W1iI9xchhwoIfhs/WcTs42b24uWaXkYNI4uHL
2qkcDlO+scXP4DF2YI+f4SPaw+JgszdomqKfscN61SfN884yOHTJJ7+LUkLw
d6vzc299ZuSQM6t8ziJlFgeQcb/mGDmogaRXsTu0nQw5uMLFyMFXtMfrFQu3
Q7EbyAZDh9yw2nXbHgk6gKzzKTVwaGI52m/4XdjB4WPymdhufQeXX29fH7AU
dugLLlGZ/l/XYc9jEdmTqUION+LL/OXEdB3W/orJPfqPx8FPTizL11jHYR/Q
mX2lrA5ty8NPGbHoOPSVFkrzPmB2MJipJTH1irbDKaAzlvgxOeyPVnD8uFgb
7n4QN9kHwc+uqFqq06wNNY/JYeetrr+p27UdykDG6bI4AGWdZV5rO/wEhp7q
E1aHRYx7WIWu6ED9y+uw4JrJe4ujug4z7k5ub70l5HBna0vNhWJ9B4ni60Kf
Dgo7GIG0HTZwOGftd3HiHRGHTxsCsmddN3TQ+TYdqEPAAT1+AE3XvCM=
                   "]}]}}}, {
              ImageSize -> 12, AspectRatio -> Automatic, 
               ImageSize -> {30., 30.}, PlotRange -> {{0., 30.}, {0., 30.}}}],
              "Wolfram Function Repository Reviewer"}, 
            "PrettyTooltipTemplate"]}}, 
         GridBoxAlignment -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Center}}}, AutoDelete -> 
         False, GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         GridBoxSpacings -> {"Columns" -> {{0.25}}}], "Grid"]& )}], 
   Cell[
    StyleData["CommentCellLabelTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (StyleBox[
        TagBox[
         GridBox[{{
            StyleBox[#, FontSize -> 11]}, {
            StyleBox[
             DynamicBox[
              ToBoxes[
               DateString[
                TimeZoneConvert[
                 DateObject[#2, TimeZone -> 0]], {
                "Month", "/", "Day", "/", "Year", " ", "Hour24", ":", 
                 "Minute"}], StandardForm], SingleEvaluation -> True], 
             FontSize -> 9]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {"Columns" -> {{Automatic}}, "Rows" -> {{0}}}], 
         "Grid"], "CommentLabel", ShowStringCharacters -> False]& )}], 
   Cell[
    StyleData["OrangeButtonTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (ButtonBox[
        StyleBox[#, "Text", FontFamily -> "Source Sans Pro", FontWeight -> 
         "SemiBold", FontTracking -> "Condensed", FontSize -> 13, FontColor -> 
         Dynamic[
           FEPrivate`If[
            CurrentValue[Enabled], 
            GrayLevel[1], 
            RGBColor[0.8730375, 0.83578125, 0.7955875]], Evaluator -> 
           "System"], StripOnInput -> False], ButtonFunction :> 
        With[{RSNB`nb$ = ButtonNotebook[]}, 
          If[#4, CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
            ProgressIndicator[Appearance -> "Necklace"]]; 
          With[{RSNB`$cp$ = $ContextPath}, 
            Quiet[
             
             Block[{$ContextPath = RSNB`$cp$, 
               ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
               False}, 
              Internal`WithLocalSettings[
               ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                 True; Once[
                  ReleaseHold[
                   CurrentValue[
                   RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                  "KernelSession"]; 
                Needs["ResourceSystemClient`DefinitionNotebook`"], 
                ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                RSNB`nb$, 
                 #2[]], 
                ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                 False; Null]; Null]]]; 
          CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = ""; Null],
         FrameMargins -> {{5, 5}, {0, 0}}, 
        Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQbG9wgaN1lY4QhCyIrAwo1R5n1BhlAEFANlwxXNmaCoem
KIPacD1kBBQBisOVba1zbos1QlMDQUBxoCzEtUAtjRhGQVAj2EAGMCBGGZGm
Ee82In1KfLgREwvExCkA9SYWEg==
            "], "Byte", ColorSpace -> "RGB", Interleaving -> True], "Hover" -> 
          Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQbG9wgaN1lY4QhCyIrAwo1Zds2ptsAkFANlwxXNmaCoee
JJP7c4J/r4+FICAbKAIUhyvbWufcn2L6eH4IXA0EAUWA4kBZiGuBWiammqGp
gSCgOFCWAQyIUUakacS7jUifEh9uxMQCMXEKAB4IRIc=
            "], "Byte", ColorSpace -> "RGB", Interleaving -> True], "Pressed" -> 
          Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQbG9wgaNDUxIhCFkQWRlQ6vOz678/PIEgIBuuGK7s6Iz0
X++f/DnY+Ht9LAQB2UARoDhc2c4Wry/Pb/zZVw1XA1W5rxooDpSFuBZk1Nv7
aGogCCgOlGUAA2KUEWka8W4j0qfEhxsxsUBMnAIAq2R1ew==
            "], "Byte", ColorSpace -> "RGB", Interleaving -> True]}, 
        Background -> RGBColor[0.7185389999999999, 0.5009625, 0.266231], 
        Method -> "Queued", ImageSize -> {All, 23}, Enabled -> Dynamic[
          Not[
           TrueQ[ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled]], 
          TrackedSymbols :> {
           ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled}], 
        Evaluator -> Automatic]& )}], 
   Cell[
    StyleData["SuggestionGridTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (StyleBox[
        FrameBox[
         AdjustmentBox[
          TagBox[
           GridBox[{{
              
              TemplateBox[{#2, #3, {16., 16.}, {{1., 17.}, {1., 17.}}}, 
               "SuggestionIconTemplate"], 
              
              PaneBox[#, ImageSizeAction -> "ShrinkToFit", BaselinePosition -> 
               Baseline, ImageSize -> Full], 
              AdjustmentBox[
               TemplateBox[{
                 ActionMenuBox[
                  TagBox[
                   PaneSelectorBox[{False -> GraphicsBox[{
                    EdgeForm[
                    Directive[
                    GrayLevel[1, 0], 
                    Thickness[0.025]]], 
                    FaceForm[#4], 
                    RectangleBox[{-1.75, -2}, {1.75, 2}, RoundingRadius -> 
                    0.2], 
                    Thickness[0.15], #5, 
                    LineBox[{{-0.5, -1.}, {0.5, 0.}, {-0.5, 1.}}]}, 
                    ImageSize -> {Automatic, 15}, ImageMargins -> 0], True -> 
                    GraphicsBox[{
                    EdgeForm[
                    Directive[#5, 
                    Thickness[0.025]]], 
                    FaceForm[#2], 
                    
                    RectangleBox[{-1.75, -2}, {1.75, 2}, RoundingRadius -> 
                    0.2], 
                    Thickness[0.15], 
                    GrayLevel[1], 
                    LineBox[{{-0.5, -1.}, {0.5, 0.}, {-0.5, 1.}}]}, 
                    ImageSize -> {Automatic, 15}, ImageMargins -> 0]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], 
                   MouseAppearanceTag["LinkHand"]], #6, Appearance -> None, 
                  Method -> "Queued"], "\"View suggestions\""}, 
                "PrettyTooltipTemplate"], BoxBaselineShift -> -0.3]}}, 
            GridBoxAlignment -> {
             "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, AutoDelete -> 
            False, GridBoxItemSize -> {
             "Columns" -> {Automatic, Automatic, Fit}, 
              "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {{0.4}}}], "Grid"], 
          BoxMargins -> {{0.25, -1.}, {0.15, -0.15}}], 
         RoundingRadius -> {13, 75}, Background -> #4, FrameStyle -> None, 
         FrameMargins -> {{0, 8}, {0, 0}}, ImageMargins -> {{0, 0}, {5, 5}}, 
         StripOnInput -> False], "Text", FontColor -> #5, FontSize -> 14, 
        FontFamily -> "Source Sans Pro", FontWeight -> "SemiBold", 
        FontTracking -> "Plain", 
        PrivateFontOptions -> {"OperatorSubstitution" -> False}, 
        LineBreakWithin -> False]& )}], 
   Cell[
    StyleData["SuggestionIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05555555555555555], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGZigIIGAwcIQ8kBxk94ekHp9k9Vh4qXaoYcOfoO
m+a+X37stKZDbP+hrxpzdOA0TBymDqYPl7n2pnG7PHlk4PzZRxQ2FGWIwPWD
jI3p54WbLxuVYn3fnwluD8S8H/Yo9gD5KPYA+TB7YPph9sDMh9EwcZg6FPdh
MRfdXpi7YPph7oaZD/MXzB5c4QCzBwA8nn+Z
            "]]}, 
          FaceForm[#]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
              0}, {0, 1, 0}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
              3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{8.175292500000001, 
             7.416875}, {7.796855000000001, 11.3084375}, {7.796855000000001, 
             13.38}, {10.11998, 13.38}, {10.11998, 11.3084375}, {
             9.741542500000001, 7.416875}, {8.175292500000001, 
             7.416875}}, CompressedData["
1:eJxTTMoPSmViYGCQBGIQ/cTvZcLf/4oOD6tE1rk/5HNQjDzAkqeL4FsusdsW
1KjgwAAGAg7hCSdehX2Xd5BvfR24Q07QwaZCOJPjjZyDHdf1xQW2Qg56LJYa
iWlyDv2HvmrEzBeG80GmVbmIwvkvtjT6Sb8Qg+t/BLLPUwJuPti6DEm4/WD7
2qTg7gMZJyIm7QBzP4y/zEVob88lJTi/7+dk7hV1ynD9c3LzfPxZVODmr3ro
0futUwVu/0bpbbqnzqjA3Qfjw9wP48P8B9MP8z/MfFj4wOyHhR/MfbDwRQ9/
ACBxmlc=
             "]}]}, 
          FaceForm[#2]]}, ImageSize -> #3, PlotRange -> #4, AspectRatio -> 
        Automatic, BaselinePosition -> Scaled[0.1]]& )}], 
   Cell[
    StyleData["UsageInputs", StyleDefinitions -> StyleData["Input"]], 
    CellMargins -> {{66, 10}, {0, 8}}, 
    StyleKeyMapping -> {"Tab" -> "UsageDescription"}, Evaluatable -> False, 
    CellEventActions -> {"ReturnKeyDown" :> With[{RSNB`nb = Notebooks[
           EvaluationCell[]]}, SelectionMove[
          EvaluationCell[], After, Cell]; NotebookWrite[RSNB`nb, 
          Cell["", "UsageDescription"], All]; 
        SelectionMove[RSNB`nb, Before, CellContents]], {"KeyDown", "\t"} :> 
      Replace[SelectionMove[
          SelectedNotebook[], After, Cell]; NotebookFind[
          SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
          WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
          SelectedNotebook[], All, CellContents, AutoScroll -> True]]}, 
    ShowAutoStyles -> False, ShowCodeAssist -> False, 
    CodeAssistOptions -> {"DynamicHighlighting" -> False}, 
    LineSpacing -> {1, 3}, TabSpacings -> {2.5}, CounterIncrements -> "Text", 
    FontFamily -> "Source Sans Pro", FontSize -> 15, FontWeight -> "Plain"], 
   Cell[
    StyleData["UsageDescription", StyleDefinitions -> StyleData["Text"]], 
    CellMargins -> {{86, 10}, {7, 0}}, 
    StyleKeyMapping -> {"Backspace" -> "UsageInputs"}, CellGroupingRules -> 
    "OutputGrouping", 
    CellEventActions -> {"ReturnKeyDown" :> With[{RSNB`nb = Notebooks[
           EvaluationCell[]]}, SelectionMove[
          EvaluationCell[], After, Cell]; NotebookWrite[RSNB`nb, 
          Cell[
           BoxData[""], "UsageInputs", FontFamily -> "Source Sans Pro"], All]; 
        SelectionMove[RSNB`nb, Before, CellContents]], {"KeyDown", "\t"} :> 
      Replace[SelectionMove[
          SelectedNotebook[], After, Cell]; NotebookFind[
          SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
          WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
          SelectedNotebook[], All, CellContents, AutoScroll -> True]]}, 
    ShowAutoSpellCheck -> False], 
   Cell[
    StyleData["Notes", StyleDefinitions -> StyleData["Item"]], CellDingbat -> 
    StyleBox["\[FilledVerySmallSquare]", FontColor -> GrayLevel[0.6]], 
    CellMargins -> {{66, 24}, {9, 7}}, ReturnCreatesNewCell -> False, 
    StyleKeyMapping -> {}, DefaultNewCellStyle -> "Notes", ShowAutoSpellCheck -> 
    False, GridBoxOptions -> {BaseStyle -> "TableNotes"}], 
   Cell[
    StyleData["TableNotes", StyleDefinitions -> StyleData["Notes"]], 
    CellDingbat -> None, CellFrameColor -> RGBColor[0.749, 0.694, 0.553], 
    StyleMenuListing -> None, 
    ButtonBoxOptions -> {Appearance -> {Automatic, None}}, 
    GridBoxOptions -> {
     FrameStyle -> GrayLevel[0.906], 
      GridBoxAlignment -> {
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}}, 
      GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{True}}}, 
      GridDefaultElement -> Cell["\[Placeholder]", "TableText"]}], 
   Cell[
    StyleData["TableText"], DefaultInlineFormatType -> 
    "DefaultInputInlineFormatType", AutoQuoteCharacters -> {}, 
    StyleMenuListing -> None], 
   Cell[
    StyleData["Hyperlink"], FontColor -> 
    RGBColor[0.7185389999999999, 0.5009625, 0.266231]], 
   Cell[
    StyleData["HyperlinkActive"], FontColor -> 
    RGBColor[0.47902599999999995`, 0.333975, 0.17748733333333333`]], 
   Cell[
    StyleData["Link"], FontFamily -> "Source Sans Pro", FontColor -> Dynamic[
      If[
       CurrentValue["MouseOver"], 
       RGBColor[0.854902, 0.396078, 0.145098], 
       RGBColor[
       0.0196078431372549, 0.28627450980392155`, 0.6509803921568628]]]], 
   Cell[
    StyleData["StringTypeLink"], 
    TemplateBoxOptions -> {DisplayFunction :> (TagBox[
        DynamicBox[
         If[
          CurrentValue["MouseOver"], 
          ButtonBox[
           
           StyleBox[#, FontColor -> 
            RGBColor[0.9686274509803922, 0.4666666666666667, 0.]], 
           ButtonData -> #2], 
          ButtonBox[#, ButtonData -> #2]]], 
        MouseAppearanceTag["LinkHand"]]& )}, 
    ButtonBoxOptions -> {
     BaseStyle -> {FontColor -> GrayLevel[0.46666667], "Link"}}], 
   Cell[
    StyleData["InlineFormula"], 
    HyphenationOptions -> {"HyphenationCharacter" -> "\[Continuation]"}, 
    LanguageCategory -> "Formula", AutoSpacing -> True, ScriptLevel -> 1, 
    SingleLetterItalics -> False, SpanMaxSize -> 1, StyleMenuListing -> None, 
    FontFamily -> "Source Sans Pro", FontSize -> 1. Inherited, 
    ButtonBoxOptions -> {Appearance -> {Automatic, None}}, 
    FractionBoxOptions -> {BaseStyle -> {SpanMaxSize -> Automatic}}, 
    GridBoxOptions -> {
     GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}}}], 
   Cell[
    StyleData["ExampleDelimiter"], Selectable -> False, ShowCellBracket -> 
    Automatic, CellMargins -> {{66, 14}, {5, 10}}, Evaluatable -> True, 
    CellGroupingRules -> {"SectionGrouping", 58}, 
    CellEvaluationFunction -> (($Line = 0; Null)& ), ShowCellLabel -> False, 
    CellLabelAutoDelete -> True, TabFilling -> 
    "\[LongDash]\[NegativeThickSpace]", TabSpacings -> {100}, 
    StyleMenuListing -> None, FontFamily -> "Verdana", FontWeight -> Bold, 
    FontSlant -> "Plain", FontColor -> GrayLevel[0.905882]], 
   Cell[
    StyleData["ExampleText", StyleDefinitions -> StyleData["Text"]]], 
   Cell[
    StyleData["PageBreak", StyleDefinitions -> StyleData["ExampleDelimiter"]],
     Selectable -> False, CellFrame -> {{0, 0}, {1, 0}}, 
    CellMargins -> {{66, 14}, {15, -5}}, 
    CellElementSpacings -> {"CellMinHeight" -> 1}, Evaluatable -> True, 
    CellEvaluationFunction -> (($Line = 0; Null)& ), CellFrameColor -> 
    GrayLevel[
      Rational[77, 85]]], 
   Cell[
    StyleData["Subsection"], Evaluatable -> True, 
    CellEvaluationFunction -> (($Line = 0; Null)& ), ShowCellLabel -> False], 
   Cell[
    StyleData["Subsubsection"], Evaluatable -> True, 
    CellEvaluationFunction -> (($Line = 0; Null)& ), ShowCellLabel -> False], 
   Cell[
    StyleData["Excluded"], 
    CellBracketOptions -> {
     "Color" -> RGBColor[0.9, 0.4, 0.4], "Thickness" -> 2}, 
    GeneratedCellStyles -> {
     "Graphics" -> {"Graphics", "Excluded"}, 
      "Message" -> {"Message", "MSG", "Excluded"}, 
      "Output" -> {"Output", "Excluded"}, "Print" -> {"Print", "Excluded"}, 
      "PrintTemporary" -> {"PrintTemporary", "Excluded"}}, CellFrameMargins -> 
    4, StyleMenuListing -> None, Background -> RGBColor[1, 0.95, 0.95]], 
   Cell[
    StyleData["Comment", StyleDefinitions -> StyleData["Text"]], 
    CellFrame -> {{3, 0}, {0, 0}}, CellMargins -> {{66, 0}, {1, 0}}, 
    CellElementSpacings -> {"ClosedCellHeight" -> 0}, 
    GeneratedCellStyles -> {
     "Graphics" -> {"Graphics", "Comment"}, 
      "Message" -> {"Message", "MSG", "Comment"}, 
      "Output" -> {"Output", "Comment"}, "Print" -> {"Print", "Comment"}, 
      "PrintTemporary" -> {"PrintTemporary", "Comment"}}, CellFrameColor -> 
    RGBColor[0.880722, 0.611041, 0.142051], 
    CellFrameLabelMargins -> {{0, 10}, {0, 0}}, FontColor -> GrayLevel[0.25], 
    Background -> RGBColor[0.9821083, 0.94165615, 0.87130765]], 
   Cell[
    StyleData["AuthorComment", StyleDefinitions -> StyleData["Comment"]], 
    GeneratedCellStyles -> {
     "Graphics" -> {"Graphics", "AuthorComment"}, 
      "Message" -> {"Message", "MSG", "AuthorComment"}, 
      "Output" -> {"Output", "AuthorComment"}, 
      "Print" -> {"Print", "AuthorComment"}, 
      "PrintTemporary" -> {"PrintTemporary", "AuthorComment"}}, 
    CellFrameColor -> RGBColor[0.368417, 0.506779, 0.709798], Background -> 
    RGBColor[0.90526255, 0.92601685, 0.9564697]], 
   Cell[
    StyleData["ReviewerComment", StyleDefinitions -> StyleData["Comment"]], 
    GeneratedCellStyles -> {
     "Graphics" -> {"Graphics", "ReviewerComment"}, 
      "Message" -> {"Message", "MSG", "ReviewerComment"}, 
      "Output" -> {"Output", "ReviewerComment"}, 
      "Print" -> {"Print", "ReviewerComment"}, 
      "PrintTemporary" -> {"PrintTemporary", "ReviewerComment"}}, 
    CellFrameColor -> RGBColor[0.560181, 0.691569, 0.194885], Background -> 
    RGBColor[0.9340271499999999, 0.95373535, 0.87923275]], 
   Cell[
    StyleData["CommentLabel", StyleDefinitions -> StyleData["Text"]], 
    ShowStringCharacters -> False, FontSlant -> "Italic", FontColor -> 
    GrayLevel[0.5]], 
   Cell[
    StyleData["CharactersRefLink"], ShowSpecialCharacters -> False], 
   Cell[
    StyleData["DockedCell"], CellFrameColor -> GrayLevel[0.75], Background -> 
    RGBColor[0.898039, 0.898039, 0.898039]], 
   Cell[
    StyleData["ExampleImage"], PageWidth :> 650, 
    CellMargins -> {{66, 66}, {16, 5}}, Evaluatable -> False, ShowCellLabel -> 
    False, MenuSortingValue -> 10000, 
    RasterBoxOptions -> {ImageEditMode -> False}]}, Visible -> False, 
  FrontEndVersion -> "13.1 for Microsoft Windows (64-bit) (June 16, 2022)", 
  StyleDefinitions -> "PrivateStylesheetFormatting.nb"],
ExpressionUUID->"4137490c-b88e-4e95-96a5-1ed2550cb6c4"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "Examples"->{
  Cell[580, 22, 655, 9, 98, "Title",ExpressionUUID->"1d92d1b8-f6d7-48ed-8825-cd049ebbaf36",
   CellTags->{"Examples", "Your Essay Title"},
   CellID->805710577]},
 "Your Essay Title"->{
  Cell[580, 22, 655, 9, 98, "Title",ExpressionUUID->"1d92d1b8-f6d7-48ed-8825-cd049ebbaf36",
   CellTags->{"Examples", "Your Essay Title"},
   CellID->805710577]},
 "AuthorName"->{
  Cell[1238, 33, 266, 5, 30, "Author",ExpressionUUID->"3a631b5a-3636-4c6d-8965-482ae9171f2c",
   CellTags->"AuthorName",
   CellID->960727095]},
 "Abstract"->{
  Cell[1507, 40, 387, 6, 62, "Abstract",ExpressionUUID->"2ac58def-5955-4744-85c7-434e15df125e",
   CellTags->{"Abstract", "TemplateCell"},
   CellID->587432573]},
 "TemplateCell"->{
  Cell[1507, 40, 387, 6, 62, "Abstract",ExpressionUUID->"2ac58def-5955-4744-85c7-434e15df125e",
   CellTags->{"Abstract", "TemplateCell"},
   CellID->587432573]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"Examples", 811024, 15927},
 {"Your Essay Title", 811210, 15931},
 {"AuthorName", 811390, 15935},
 {"Abstract", 811550, 15939},
 {"TemplateCell", 811732, 15943}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 655, 9, 98, "Title",ExpressionUUID->"1d92d1b8-f6d7-48ed-8825-cd049ebbaf36",
 CellTags->{"Examples", "Your Essay Title"},
 CellID->805710577],
Cell[1238, 33, 266, 5, 30, "Author",ExpressionUUID->"3a631b5a-3636-4c6d-8965-482ae9171f2c",
 CellTags->"AuthorName",
 CellID->960727095],
Cell[1507, 40, 387, 6, 62, "Abstract",ExpressionUUID->"2ac58def-5955-4744-85c7-434e15df125e",
 CellTags->{"Abstract", "TemplateCell"},
 CellID->587432573],
Cell[CellGroupData[{
Cell[1919, 50, 173, 2, 67, "Section",ExpressionUUID->"f16f8d0c-adce-40f7-994f-46518f8b670b",
 CellID->90980663],
Cell[CellGroupData[{
Cell[2117, 56, 588, 18, 62, "WolframAlphaLong",ExpressionUUID->"5266987c-afad-4303-a7ff-3016e27b6bf3",
 CellID->95994100],
Cell[2708, 76, 73164, 1472, 2698, "Print",ExpressionUUID->"5a653667-6628-4343-8213-01eccf28f4a6",
 CellID->2442385]
}, Open  ]],
Cell[CellGroupData[{
Cell[75909, 1553, 492, 15, 61, "Input",ExpressionUUID->"6e00357b-6361-4ed7-b313-a32cc71f8ec3",
 CellID->488249806],
Cell[76404, 1570, 417, 11, 32, "Output",ExpressionUUID->"141074e7-6d60-4be5-a365-53b22fe1359c",
 CellID->102998469]
}, Open  ]],
Cell[CellGroupData[{
Cell[76858, 1586, 583, 18, 61, "Input",ExpressionUUID->"e41bd07d-9ca6-4a7a-afd0-ad03edefbc38",
 CellID->105960481],
Cell[77444, 1606, 755, 23, 113, "Output",ExpressionUUID->"10289f12-2573-40cd-8c56-46eb1e1ae725",
 CellID->463675034]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[78248, 1635, 219, 3, 67, "Section",ExpressionUUID->"24a2c22e-0e87-4a88-8a2c-12042e52d1c2",
 CellID->64733077],
Cell[78470, 1640, 171, 2, 35, "Text",ExpressionUUID->"eb6c6dbd-1032-4d6f-ba20-91c84f5628cf",
 CellID->143195493],
Cell[78644, 1644, 47570, 852, 248, "Input",ExpressionUUID->"f48bc8b7-7f69-44d4-8581-bf9fdd3d7e63",
 CellID->516549626],
Cell[126217, 2498, 59311, 1081, 248, "Input",ExpressionUUID->"b389929c-102e-464e-bcbd-e5ccdf83de4e",
 CellID->22916911],
Cell[185531, 3581, 47323, 856, 248, "Input",ExpressionUUID->"86020d2f-939c-42d2-abb0-9d3bd17245de",
 CellID->474012036],
Cell[232857, 4439, 113704, 2127, 620, "Input",ExpressionUUID->"3aa6a21e-50ab-44b4-9fe7-a44a80be4a72",
 CellID->364727067],
Cell[346564, 6568, 67518, 1222, 410, "Input",ExpressionUUID->"51e5bddf-e8d2-4451-ab28-e91802a35a19",
 CellID->208053774],
Cell[414085, 7792, 125419, 2273, 620, "Input",ExpressionUUID->"b3124a0c-0e2d-4a6f-a708-bdf55dd332b7",
 CellID->707036],
Cell[539507, 10067, 88641, 1579, 491, "Input",ExpressionUUID->"119f1d01-b0e7-4a1f-ba5a-2339d07ef9eb",
 CellID->177833965]
}, Open  ]],
Cell[CellGroupData[{
Cell[628185, 11651, 179, 2, 67, "Section",ExpressionUUID->"f646b03c-88f1-48ee-a193-08ed8febc992",
 CellID->431147246],
Cell[628367, 11655, 216, 2, 35, "Text",ExpressionUUID->"d22042f3-72d5-443b-9884-b914f1f5d82b",
 CellID->268717739],
Cell[CellGroupData[{
Cell[628608, 11661, 259, 4, 28, "Input",ExpressionUUID->"eb6f11c7-9842-420c-87e3-81d14eff6ffb",
 CellID->209557182],
Cell[628870, 11667, 1319, 29, 74, "Output",ExpressionUUID->"7a183a8f-c400-447b-8efa-35cc706b9e16",
 CellID->112104980]
}, Open  ]],
Cell[630204, 11699, 173, 2, 35, "Text",ExpressionUUID->"8331600d-1a0c-46e5-aa24-75a28beab2db",
 CellID->1029365149],
Cell[CellGroupData[{
Cell[630402, 11705, 414, 10, 48, "Input",ExpressionUUID->"6a502ff1-8511-46c6-a908-3c953ff35f0d",
 CellID->33730613],
Cell[630819, 11717, 1396, 30, 74, "Output",ExpressionUUID->"8530bf6e-10a7-4346-b49d-5d50bc344110",
 CellID->535295915]
}, Open  ]],
Cell[632230, 11750, 203, 2, 35, "Text",ExpressionUUID->"630ed799-cdec-4d82-8077-c1a75b5d907c",
 CellID->523688926],
Cell[CellGroupData[{
Cell[632458, 11756, 607, 17, 67, "Input",ExpressionUUID->"a2b8abbf-2bdc-4665-b504-c668dc25a541",
 CellID->23915411],
Cell[633068, 11775, 473, 10, 43, "Output",ExpressionUUID->"1f98cf6c-7683-4d86-9848-5f8c4d101e9f",
 CellID->292825508]
}, Open  ]],
Cell[633556, 11788, 209, 2, 35, "Text",ExpressionUUID->"fb6451f8-8d27-41d1-a473-3e1f4ceeacf3",
 CellID->2141125],
Cell[CellGroupData[{
Cell[633790, 11794, 657, 18, 67, "Input",ExpressionUUID->"61352518-d353-4cdb-b291-acb6702e4224",
 CellID->164217521],
Cell[634450, 11814, 2035, 48, 74, "Output",ExpressionUUID->"21ee3c88-9499-4444-a38f-b50e616509e9",
 CellID->121216579]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[636534, 11868, 175, 2, 67, "Section",ExpressionUUID->"0891018b-720c-4793-b62c-b94a87f15b17",
 CellID->131566826],
Cell[636712, 11872, 210, 2, 35, "Text",ExpressionUUID->"618bc220-31dc-4b86-b47f-460c3ea214e3",
 CellID->13514422],
Cell[636925, 11876, 6090, 145, 820, "Input",ExpressionUUID->"35a2733b-1010-4ece-898d-859035ae58d0",
 CellID->688034743],
Cell[643018, 12023, 173, 3, 35, "ExampleText",ExpressionUUID->"4dcd32fc-96e6-442c-858f-69586e061e28",
 CellID->998168428],
Cell[643194, 12028, 742, 21, 86, "Input",ExpressionUUID->"3b62a419-9e0b-44a4-a758-2d29471642b0",
 CellID->74519032],
Cell[CellGroupData[{
Cell[643961, 12053, 289, 6, 28, "Input",ExpressionUUID->"667d64cf-1ab7-4b7c-b3d4-3876747014b5",
 CellID->303662033],
Cell[644253, 12061, 1727, 46, 147, "Output",ExpressionUUID->"67d344b4-8a17-46f3-935f-b6bdc1f1295b",
 CellID->43873204]
}, Open  ]],
Cell[CellGroupData[{
Cell[646017, 12112, 677, 17, 67, "Input",ExpressionUUID->"f7234bf3-d0b6-4388-bddd-a4f77504cf42",
 CellID->134165909],
Cell[646697, 12131, 591, 16, 32, "Output",ExpressionUUID->"379d849a-7e2b-46ab-982b-ad3d150da6e9",
 CellID->487910261]
}, Open  ]],
Cell[CellGroupData[{
Cell[647325, 12152, 357, 9, 28, "Input",ExpressionUUID->"0df055c6-f35b-4885-afea-744b030b5a57",
 CellID->243364218],
Cell[647685, 12163, 1369, 39, 90, "Output",ExpressionUUID->"37afb874-169a-4576-8020-6cc4a430dbee",
 CellID->198797989]
}, Open  ]],
Cell[CellGroupData[{
Cell[649091, 12207, 473, 12, 28, "Input",ExpressionUUID->"39495c78-6e80-487b-84e9-317b0717ff57",
 CellID->64168897],
Cell[649567, 12221, 1140, 36, 35, "Output",ExpressionUUID->"bad4b0b2-546b-4d2c-b213-d509800383ba",
 CellID->124928308]
}, Open  ]],
Cell[CellGroupData[{
Cell[650744, 12262, 565, 15, 48, "Input",ExpressionUUID->"0e0de20b-7483-48e7-ba88-837046c7a4e1",
 CellID->278941956],
Cell[651312, 12279, 1446, 44, 88, "Output",ExpressionUUID->"2d4ba55e-7f11-4f1b-b359-c16a4996739b",
 CellID->78622866]
}, Open  ]],
Cell[CellGroupData[{
Cell[652795, 12328, 568, 15, 48, "Input",ExpressionUUID->"ea6c1ba8-8ef1-4d67-93a2-1905c2ec1cdb",
 CellID->673880173],
Cell[653366, 12345, 7746, 251, 431, "Output",ExpressionUUID->"146cdcaa-9494-487f-87df-e8f022b91969",
 CellID->62760128]
}, Open  ]],
Cell[CellGroupData[{
Cell[661149, 12601, 617, 15, 48, "Input",ExpressionUUID->"3e13a781-4f08-46e3-8056-e9cddf40ab0f",
 CellID->92270501],
Cell[661769, 12618, 20120, 661, 1132, "Output",ExpressionUUID->"a182e07a-1520-4c3f-9138-010745e22394",
 CellID->413480686]
}, Open  ]],
Cell[CellGroupData[{
Cell[681926, 13284, 338, 8, 28, "Input",ExpressionUUID->"e031abe1-d0dc-4089-97ea-19f83fc002a1",
 CellID->35788928],
Cell[682267, 13294, 390, 7, 32, "Output",ExpressionUUID->"c5dd88b0-c114-410e-87fb-f2c8ea4a20c9",
 CellID->95227006]
}, Open  ]],
Cell[CellGroupData[{
Cell[682694, 13306, 474, 12, 28, "Input",ExpressionUUID->"5118c130-b401-4988-9d78-dc177b709ddb",
 CellID->258736146],
Cell[683171, 13320, 1110, 35, 35, "Output",ExpressionUUID->"ee8f5ca1-0fd5-4075-9115-0f42a055ef9c",
 CellID->856584628]
}, Open  ]],
Cell[CellGroupData[{
Cell[684318, 13360, 741, 20, 28, "Input",ExpressionUUID->"19a50eb7-2649-4421-943b-b525d3080563",
 CellID->13750140],
Cell[685062, 13382, 1433, 42, 57, "Output",ExpressionUUID->"37f2ca71-3a3e-4daf-8f3c-77a6c53bde13",
 CellID->405748864]
}, Open  ]],
Cell[CellGroupData[{
Cell[686532, 13429, 852, 23, 28, "Input",ExpressionUUID->"7243d62d-8edd-4b5e-86cc-fad171ac9ec2",
 CellID->1989243],
Cell[687387, 13454, 1736, 49, 88, "Output",ExpressionUUID->"ff4eae82-7cf5-44b9-ab61-682d1d1f9942",
 CellID->657057656]
}, Open  ]],
Cell[CellGroupData[{
Cell[689160, 13508, 1355, 36, 67, "Input",ExpressionUUID->"72444cb3-e96e-4e65-a01f-a974ed0990a9",
 CellID->534690965],
Cell[690518, 13546, 8942, 261, 431, "Output",ExpressionUUID->"bd8be3cf-831b-4cc7-97cb-188c83aaf1b8",
 CellID->109633622]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

