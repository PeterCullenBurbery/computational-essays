(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   1035808,      19350]
NotebookOptionsPosition[   1021116,      19090]
NotebookOutlinePosition[   1021599,      19108]
CellTagsIndexPosition[   1021556,      19105]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<PeterBurbery`DimensionalAnalysis`\>\"", 
  "]"}]], "Input",
 CellChangeTimes->{{3.877879112166913*^9, 3.877879119475516*^9}},
 CellLabel->
  "In[835]:=",ExpressionUUID->"0f1d799d-da0e-4727-b0ef-12a066954e58"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"tests", "=", 
  RowBox[{"{", 
   RowBox[{
    TemplateBox[{
      InterpretationBox["\[InvisibleSpace]", 1], "\"E\"", "exas", "\"Exa\""},
     "Quantity"], ",", 
    TemplateBox[{
      InterpretationBox["\[InvisibleSpace]", 1], 
      RowBox[{"\"J\"", "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]", 
        SuperscriptBox["\"m\"", "3"]}], "joules per meter cubed", 
      FractionBox["\"Joules\"", 
       SuperscriptBox["\"Meters\"", "3"]]},
     "Quantity"], ",", 
    RowBox[{"QuantityVariable", "[", "\"\<EnergyDensity\>\"", "]"}], ",", 
    RowBox[{"Entity", "[", 
     RowBox[{"\"\<PhysicalQuantity\>\"", ",", "\"\<EnergyDensity\>\""}], 
     "]"}], ",", 
    RowBox[{"Entity", "[", 
     RowBox[{"\"\<PhysicalConstant\>\"", ",", "\"\<VonKlitzingConstant\>\""}],
      "]"}], ",", 
    RowBox[{"Entity", "[", 
     RowBox[{"\"\<PhysicalQuantity\>\"", ",", "\"\<AbbeNumber\>\""}], "]"}], 
    ",", 
    RowBox[{"Entity", "[", 
     RowBox[{"\"\<PhysicalQuantity\>\"", ",", "\"\<PhotonCount\>\""}], "]"}], 
    ",", 
    RowBox[{"Quantity", "[", "\"\<KelvinsDifference\>\"", "]"}], ",", 
    RowBox[{"Quantity", "[", "\"\<Radians\>\"", "]"}], ",", 
    RowBox[{"Quantity", "[", "\"\<People\>\"", "]"}], ",", 
    RowBox[{"QuantityVariable", "[", "\"\<PopulationDensity\>\"", "]"}], ",", 
    RowBox[{"Quantity", "[", "\"\<Liters\>\"", "]"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.877879121737129*^9, 3.8778791925982227`*^9}, {
  3.8778793199578824`*^9, 3.8778793240479136`*^9}, {3.8778793554198*^9, 
  3.877879358176893*^9}, {3.87787944159932*^9, 3.877879462756982*^9}, {
  3.877879624305503*^9, 3.877879627299841*^9}},
 CellLabel->
  "In[888]:=",ExpressionUUID->"9a38c89b-0da7-4b16-b172-5bf5fe755217"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{"1", "\"E\"", "exa", "\"Exa\""},
    "Quantity"], ",", 
   TemplateBox[{"1", 
     RowBox[{"\"J\"", "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]", 
       SuperscriptBox["\"m\"", "3"]}], "joule per meter cubed", 
     FractionBox["\"Joules\"", 
      SuperscriptBox["\"Meters\"", "3"]]},
    "Quantity"], ",", 
   TemplateBox[{"\"EnergyDensity\""},
    "QuantityVariable",
    DisplayFunction->(TooltipBox[
      StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> False], 
      RowBox[{"Quantity variable:", " energy density"}], TooltipStyle -> 
      "TextStyling"]& )], ",", 
   TemplateBox[{"\"energy density\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"EnergyDensity\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \\\"EnergyDensity\\\"]\"", 
     "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"von Klitzing constant\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalConstant\"", ",", "\"VonKlitzingConstant\""}], 
       "]"}], "\"Entity[\\\"PhysicalConstant\\\", \
\\\"VonKlitzingConstant\\\"]\"", "\"physical constant\""},
    "Entity"], ",", 
   TemplateBox[{"\"Abbe number\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"AbbeNumber\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \\\"AbbeNumber\\\"]\"", 
     "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"photon count\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"PhotonCount\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \\\"PhotonCount\\\"]\"", 
     "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"1", "\"K\"", "kelvin", "\"Kelvins\""},
    "Quantity"], ",", 
   TemplateBox[{"1", "\"rad\"", "radian", "\"Radians\""},
    "Quantity"], ",", 
   TemplateBox[{"1", "\"person\"", "person", "\"People\""},
    "Quantity"], ",", 
   TemplateBox[{"\"PopulationDensity\""},
    "QuantityVariable",
    DisplayFunction->(TooltipBox[
      StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> False], 
      RowBox[{"Quantity variable:", " population density"}], TooltipStyle -> 
      "TextStyling"]& )], ",", 
   TemplateBox[{"1", "\"L\"", "liter", "\"Liters\""},
    "Quantity"]}], "}"}]], "Output",
 CellChangeTimes->{{3.877879193617424*^9, 3.877879197575017*^9}, 
   3.87787932468034*^9, 3.877879358486949*^9, {3.8778794448302*^9, 
   3.877879463599864*^9}, 3.8778796278743324`*^9},
 CellLabel->
  "Out[888]=",ExpressionUUID->"75c09aa3-1154-474c-a16a-a7d0bb8fbfbc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PhysicalQuantityDimensions", "/@", "tests"}]], "Input",
 CellChangeTimes->{{3.877879201287218*^9, 3.8778792064029503`*^9}},
 CellLabel->
  "In[852]:=",ExpressionUUID->"04ba9bee-d74b-4dee-ad84-c23ea221bca8"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"LengthUnit\"\>", ",", "\<\"MassUnit\"\>", 
     ",", "\<\"TimeUnit\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"LengthUnit\"\>", ",", "\<\"MassUnit\"\>", 
     ",", "\<\"TimeUnit\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"LengthUnit\"\>", ",", "\<\"MassUnit\"\>", 
     ",", "\<\"TimeUnit\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ElectricCurrentUnit\"\>", ",", "\<\"LengthUnit\"\>", 
     ",", "\<\"MassUnit\"\>", ",", "\<\"TimeUnit\"\>"}], "}"}], ",", 
   RowBox[{"{", "}"}], ",", 
   RowBox[{"{", "\<\"PhotonUnit\"\>", "}"}], ",", 
   RowBox[{"{", "\<\"TemperatureUnit\"\>", "}"}], ",", 
   RowBox[{"{", "\<\"AngleUnit\"\>", "}"}], ",", 
   RowBox[{"{", "\<\"PersonUnit\"\>", "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.8778792069307127`*^9, 3.877879326792966*^9, 
  3.877879359879397*^9, 3.877879448551047*^9},
 CellLabel->
  "Out[852]=",ExpressionUUID->"cbb7b87f-f303-4bc7-b9fe-0f1af304442b"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{"ISQConformantQuantityQ", "//", "ClearAll"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ISQConformantQuantityQ", "[", "quantity_", "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", "ISQBaseQuantities", "}"}], ",", 
    RowBox[{
     RowBox[{"ISQBaseQuantities", "=", 
      RowBox[{"{", 
       RowBox[{
       "\"\<TimeUnit\>\"", ",", "\"\<LengthUnit\>\"", ",", "\"\<MassUnit\>\"",
         ",", "\"\<ElectricCurrentUnit\>\"", ",", "\"\<TemperatureUnit\>\"", 
        ",", "\"\<AmountUnit\>\"", ",", "\"\<LuminousIntensityUnit\>\""}], 
       "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"ContainsAll", "[", 
      RowBox[{"ISQBaseQuantities", ",", 
       RowBox[{"PhysicalQuantityDimensions", "[", "quantity", "]"}]}], 
      "]"}]}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.877879215469717*^9, 3.8778794108637486`*^9}, {
  3.8778796945620575`*^9, 3.877879694980276*^9}, {3.8778797428753996`*^9, 
  3.8778797640287075`*^9}, {3.8778798728276615`*^9, 3.8778798806646404`*^9}, {
  3.8778799788165393`*^9, 3.877879985056014*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"06cda7e6-ebce-458f-b33f-55e0277ccf62"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AssociationMap", "[", 
  RowBox[{"ISQConformantQ", ",", "tests"}], "]"}]], "Input",
 CellChangeTimes->{{3.8778794132309856`*^9, 3.8778794278119717`*^9}, {
  3.8778797702380753`*^9, 3.8778797729047136`*^9}},
 CellLabel->
  "In[895]:=",ExpressionUUID->"c8024879-3342-4369-9082-d7bd49661705"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{
    TemplateBox[{"1", "\"E\"", "exa", "\"Exa\""},
     "Quantity"], "\[Rule]", "True"}], ",", 
   RowBox[{
    TemplateBox[{"1", 
      RowBox[{"\"J\"", "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]", 
        SuperscriptBox["\"m\"", "3"]}], "joule per meter cubed", 
      FractionBox["\"Joules\"", 
       SuperscriptBox["\"Meters\"", "3"]]},
     "Quantity"], "\[Rule]", "True"}], ",", 
   RowBox[{
    TemplateBox[{"\"EnergyDensity\""},
     "QuantityVariable",
     DisplayFunction->(TooltipBox[
       StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
        False], 
       RowBox[{"Quantity variable:", " energy density"}], TooltipStyle -> 
       "TextStyling"]& )], "\[Rule]", "True"}], ",", 
   RowBox[{
    RowBox[{"Entity", "[", 
     RowBox[{"\<\"PhysicalQuantity\"\>", ",", "\<\"EnergyDensity\"\>"}], 
     "]"}], "\[Rule]", "True"}], ",", 
   RowBox[{
    RowBox[{"Entity", "[", 
     RowBox[{"\<\"PhysicalConstant\"\>", ",", "\<\"VonKlitzingConstant\"\>"}],
      "]"}], "\[Rule]", "True"}], ",", 
   RowBox[{
    RowBox[{"Entity", "[", 
     RowBox[{"\<\"PhysicalQuantity\"\>", ",", "\<\"AbbeNumber\"\>"}], "]"}], 
    "\[Rule]", "True"}], ",", 
   RowBox[{
    RowBox[{"Entity", "[", 
     RowBox[{"\<\"PhysicalQuantity\"\>", ",", "\<\"PhotonCount\"\>"}], "]"}], 
    "\[Rule]", "False"}], ",", 
   RowBox[{
    TemplateBox[{"1", "\"K\"", "kelvin", "\"Kelvins\""},
     "Quantity"], "\[Rule]", "True"}], ",", 
   RowBox[{
    TemplateBox[{"1", "\"rad\"", "radian", "\"Radians\""},
     "Quantity"], "\[Rule]", "False"}], ",", 
   RowBox[{
    TemplateBox[{"1", "\"person\"", "person", "\"People\""},
     "Quantity"], "\[Rule]", "False"}], ",", 
   RowBox[{
    TemplateBox[{"\"PopulationDensity\""},
     "QuantityVariable",
     DisplayFunction->(TooltipBox[
       StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
        False], 
       RowBox[{"Quantity variable:", " population density"}], TooltipStyle -> 
       "TextStyling"]& )], "\[Rule]", "False"}], ",", 
   RowBox[{
    TemplateBox[{"1", "\"L\"", "liter", "\"Liters\""},
     "Quantity"], "\[Rule]", "True"}]}], "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{{3.877879417706401*^9, 3.877879467310737*^9}, 
   3.877879632591642*^9, 3.8778797732491035`*^9},
 CellLabel->
  "Out[895]=",ExpressionUUID->"a50e0c38-da73-4530-bef7-2146ed8e6f20"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Names", "[", "\"\<*Q\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.877879708826085*^9, 3.8778797110165176`*^9}},
 CellLabel->
  "In[890]:=",ExpressionUUID->"63600993-3ea2-4e23-9bd4-f99f3a7bd9ac"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"AcyclicGraphQ\"\>", ",", "\<\"AlgebraicIntegerQ\"\>", 
   ",", "\<\"AlgebraicUnitQ\"\>", ",", "\<\"AntihermitianMatrixQ\"\>", 
   ",", "\<\"AntisymmetricMatrixQ\"\>", 
   ",", "\<\"ApplicationDirectoryHasCodeFilesQ\"\>", 
   ",", "\<\"ArgumentCountQ\"\>", ",", "\<\"ArrayQ\"\>", 
   ",", "\<\"AskedQ\"\>", ",", "\<\"AssociationQ\"\>", ",", "\<\"AtomQ\"\>", 
   ",", "\<\"AudioInstanceQ\"\>", ",", "\<\"AudioQ\"\>", 
   ",", "\<\"BinaryImageQ\"\>", ",", "\<\"BioSequenceQ\"\>", 
   ",", "\<\"BipartiteGraphQ\"\>", ",", "\<\"BondQ\"\>", 
   ",", "\<\"BooleanQ\"\>", ",", "\<\"BoundaryMeshRegionQ\"\>", 
   ",", "\<\"BoundedRegionQ\"\>", ",", "\<\"BusinessDayQ\"\>", 
   ",", "\<\"ByteArrayFormatQ\"\>", ",", "\<\"ByteArrayQ\"\>", 
   ",", "\<\"ColorQ\"\>", ",", "\<\"CompatibleUnitQ\"\>", 
   ",", "\<\"CompleteGraphQ\"\>", ",", "\<\"CompositeQ\"\>", 
   ",", "\<\"ConnectedGraphQ\"\>", ",", "\<\"ConnectedMoleculeQ\"\>", 
   ",", "\<\"ConstantRegionQ\"\>", ",", "\<\"ContinuousTimeModelQ\"\>", 
   ",", "\<\"ControllableModelQ\"\>", ",", "\<\"ConvexPolygonQ\"\>", 
   ",", "\<\"ConvexPolyhedronQ\"\>", ",", "\<\"ConvexRegionQ\"\>", 
   ",", "\<\"CoprimeQ\"\>", ",", "\<\"CSGRegionQ\"\>", 
   ",", "\<\"CurrentPacletHasDirectoryQ\"\>", ",", "\<\"DataStructureQ\"\>", 
   ",", "\<\"DateObjectQ\"\>", ",", "\<\"DateOverlapsQ\"\>", 
   ",", "\<\"DateWithinQ\"\>", ",", "\<\"DaylightQ\"\>", 
   ",", "\<\"DayMatchQ\"\>", ",", "\<\"DeviceOpenQ\"\>", 
   ",", "\<\"DiagonalizableMatrixQ\"\>", ",", "\<\"DiagonalMatrixQ\"\>", 
   ",", "\<\"DictionaryWordQ\"\>", ",", "\<\"DigitQ\"\>", 
   ",", "\<\"DirectedGraphQ\"\>", ",", "\<\"DirectoryQ\"\>", 
   ",", "\<\"DiscreteTimeModelQ\"\>", ",", "\<\"DisjointQ\"\>", 
   ",", "\<\"DispatchQ\"\>", ",", "\<\"DistributionParameterQ\"\>", 
   ",", "\<\"DuplicateFreeQ\"\>", ",", "\<\"EdgeCoverQ\"\>", 
   ",", "\<\"EdgeQ\"\>", ",", "\<\"EdgeTaggedGraphQ\"\>", 
   ",", "\<\"EdgeTransitiveGraphQ\"\>", ",", "\<\"EdgeWeightedGraphQ\"\>", 
   ",", "\<\"EllipticNomeQ\"\>", ",", "\<\"EmptyGraphQ\"\>", 
   ",", "\<\"EulerianGraphQ\"\>", ",", "\<\"EvenQ\"\>", 
   ",", "\<\"ExactNumberQ\"\>", ",", "\<\"FailureQ\"\>", 
   ",", "\<\"FileExistsQ\"\>", ",", "\<\"FileFormatQ\"\>", 
   ",", "\<\"FreeQ\"\>", ",", "\<\"FrontEndSharedQ\"\>", 
   ",", "\<\"FunctionLinkableQ\"\>", ",", "\<\"GeoWithinQ\"\>", 
   ",", "\<\"GraphQ\"\>", ",", "\<\"GroupElementQ\"\>", 
   ",", "\<\"HamiltonianGraphQ\"\>", ",", "\<\"HermitianMatrixQ\"\>", 
   ",", "\<\"HypergeometricPFQ\"\>", ",", "\<\"ImageContainsQ\"\>", 
   ",", "\<\"ImageInstanceQ\"\>", ",", "\<\"ImageQ\"\>", 
   ",", "\<\"IndefiniteMatrixQ\"\>", ",", "\<\"IndependentEdgeSetQ\"\>", 
   ",", "\<\"IndependentVertexSetQ\"\>", ",", "\<\"InexactNumberQ\"\>", 
   ",", "\<\"IntegerQ\"\>", ",", "\<\"IntegralNumberQ\"\>", 
   ",", "\<\"IntersectingQ\"\>", ",", "\<\"IntervalMemberQ\"\>", 
   ",", "\<\"InverseEllipticNomeQ\"\>", ",", "\<\"IrreduciblePolynomialQ\"\>",
    ",", "\<\"IsomorphicGraphQ\"\>", ",", "\<\"IsomorphicSubgraphQ\"\>", 
   ",", "\<\"JavaObjectQ\"\>", ",", "\<\"KEdgeConnectedGraphQ\"\>", 
   ",", "\<\"KernelSharedQ\"\>", ",", "\<\"KeyExistsQ\"\>", 
   ",", "\<\"KeyFreeQ\"\>", ",", "\<\"KeyMemberQ\"\>", 
   ",", "\<\"KnownUnitQ\"\>", ",", "\<\"KVertexConnectedGraphQ\"\>", 
   ",", "\<\"LeapYearQ\"\>", ",", "\<\"LegendreQ\"\>", ",", "\<\"LetterQ\"\>",
    ",", "\<\"LinkConnectedQ\"\>", ",", "\<\"LinkReadyQ\"\>", 
   ",", "\<\"ListQ\"\>", ",", "\<\"LoopFreeGraphQ\"\>", 
   ",", "\<\"LowerCaseQ\"\>", ",", "\<\"LowerTriangularMatrixQ\"\>", 
   ",", "\<\"MachineNumberQ\"\>", ",", "\<\"ManagedLibraryExpressionQ\"\>", 
   ",", "\<\"MandelbrotSetMemberQ\"\>", ",", "\<\"MarcumQ\"\>", 
   ",", "\<\"MatchLocalNameQ\"\>", ",", "\<\"MatchQ\"\>", 
   ",", "\<\"MatrixQ\"\>", ",", "\<\"MemberQ\"\>", 
   ",", "\<\"MersennePrimeExponentQ\"\>", ",", "\<\"MeshRegionQ\"\>", 
   ",", "\<\"MissingQ\"\>", ",", "\<\"MixedGraphQ\"\>", 
   ",", "\<\"MoleculeContainsQ\"\>", ",", "\<\"MoleculeEquivalentQ\"\>", 
   ",", "\<\"MoleculeFreeQ\"\>", ",", "\<\"MoleculeMatchQ\"\>", 
   ",", "\<\"MoleculeQ\"\>", ",", "\<\"MultigraphQ\"\>", ",", "\<\"NameQ\"\>",
    ",", "\<\"NegativeDefiniteMatrixQ\"\>", 
   ",", "\<\"NegativeSemidefiniteMatrixQ\"\>", ",", "\<\"NormalMatrixQ\"\>", 
   ",", "\<\"NumberQ\"\>", ",", "\<\"NumericArrayQ\"\>", 
   ",", "\<\"NumericQ\"\>", ",", "\<\"ObjectExistsQ\"\>", 
   ",", "\<\"ObservableModelQ\"\>", ",", "\<\"OddQ\"\>", 
   ",", "\<\"OptionQ\"\>", ",", "\<\"OrderedQ\"\>", 
   ",", "\<\"OrthogonalMatrixQ\"\>", ",", "\<\"OutputControllableModelQ\"\>", 
   ",", "\<\"PacletNewerQ\"\>", ",", "\<\"PacletObjectQ\"\>", 
   ",", "\<\"PalindromeQ\"\>", ",", "\<\"PartitionsQ\"\>", 
   ",", "\<\"PathGraphQ\"\>", ",", "\<\"PerfectNumberQ\"\>", 
   ",", "\<\"PermissionsGroupMemberQ\"\>", ",", "\<\"PermutationCyclesQ\"\>", 
   ",", "\<\"PermutationListQ\"\>", ",", "\<\"PlanarGraphQ\"\>", 
   ",", "\<\"PointProcessParameterQ\"\>", 
   ",", "\<\"PolynomialExpressionQ\"\>", ",", "\<\"PolynomialQ\"\>", 
   ",", "\<\"PositiveDefiniteMatrixQ\"\>", 
   ",", "\<\"PositiveSemidefiniteMatrixQ\"\>", ",", "\<\"PossibleZeroQ\"\>", 
   ",", "\<\"PrimePowerQ\"\>", ",", "\<\"PrimeQ\"\>", 
   ",", "\<\"PrimitivePolynomialQ\"\>", ",", "\<\"PrintableASCIIQ\"\>", 
   ",", "\<\"ProcessParameterQ\"\>", ",", "\<\"QHypergeometricPFQ\"\>", 
   ",", "\<\"QuadraticIrrationalQ\"\>", ",", "\<\"QuantityQ\"\>", 
   ",", "\<\"RationalExpressionQ\"\>", ",", "\<\"ReactionBalancedQ\"\>", 
   ",", "\<\"RegionQ\"\>", ",", "\<\"RegularlySampledQ\"\>", 
   ",", "\<\"RootOfUnityQ\"\>", ",", "\<\"SameObjectQ\"\>", 
   ",", "\<\"SameQ\"\>", ",", "\<\"SatisfiableQ\"\>", 
   ",", "\<\"ScheduledTaskActiveQ\"\>", ",", "\<\"SIConformantQ\"\>", 
   ",", "\<\"SimpleGraphQ\"\>", ",", "\<\"SimplePolygonQ\"\>", 
   ",", "\<\"SimplePolyhedronQ\"\>", ",", "\<\"SIQuantityQ\"\>", 
   ",", "\<\"SocketReadyQ\"\>", ",", "\<\"SolidRegionQ\"\>", 
   ",", "\<\"SparseArrayQ\"\>", ",", "\<\"SpatialObservationRegionQ\"\>", 
   ",", "\<\"SpeakerMatchQ\"\>", ",", "\<\"SquareFreeQ\"\>", 
   ",", "\<\"SquareMatrixQ\"\>", ",", "\<\"StringContainsQ\"\>", 
   ",", "\<\"StringEndsQ\"\>", ",", "\<\"StringFormatQ\"\>", 
   ",", "\<\"StringFreeQ\"\>", ",", "\<\"StringMatchQ\"\>", 
   ",", "\<\"StringQ\"\>", ",", "\<\"StringStartsQ\"\>", 
   ",", "\<\"StructuredArrayHeadQ\"\>", ",", "\<\"SubsetQ\"\>", 
   ",", "\<\"SymmetricMatrixQ\"\>", ",", "\<\"SyntaxQ\"\>", 
   ",", "\<\"TautologyQ\"\>", ",", "\<\"TensorQ\"\>", 
   ",", "\<\"TimeObjectQ\"\>", ",", "\<\"TreeGraphQ\"\>", 
   ",", "\<\"TreeLeafQ\"\>", ",", "\<\"TreeQ\"\>", ",", "\<\"TrueQ\"\>", 
   ",", "\<\"UnateQ\"\>", ",", "\<\"UndirectedGraphQ\"\>", 
   ",", "\<\"UnitaryMatrixQ\"\>", ",", "\<\"UnsameQ\"\>", 
   ",", "\<\"UpperCaseQ\"\>", ",", "\<\"UpperTriangularMatrixQ\"\>", 
   ",", "\<\"ValueQ\"\>", ",", "\<\"VectorQ\"\>", ",", "\<\"VertexCoverQ\"\>",
    ",", "\<\"VertexQ\"\>", ",", "\<\"VertexTransitiveGraphQ\"\>", 
   ",", "\<\"VertexWeightedGraphQ\"\>", ",", "\<\"VideoQ\"\>", 
   ",", "\<\"WeaklyConnectedGraphQ\"\>", ",", "\<\"WeightedGraphQ\"\>", 
   ",", "\<\"$AntBuildQ\"\>", ",", "\<\"$lastArgumentIndexQ\"\>", 
   ",", "\<\"$optionFunctionQ\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.8778797116710896`*^9},
 CellLabel->
  "Out[890]=",ExpressionUUID->"a86841cf-7153-4ba0-9fbb-93c7e6117b82"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PhysicalQuantityDimensions", "[", 
  RowBox[{"IndependentUnit", "[", "\"\<oranges\>\"", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8778804565673075`*^9, 3.8778804631618395`*^9}},
 CellLabel->"In[42]:=",ExpressionUUID->"c7c14f7b-ad1d-4788-b484-76addeba82d0"],

Cell[BoxData[
 RowBox[{"PhysicalQuantityDimensions", "[", 
  RowBox[{"IndependentUnit", "[", "\<\"oranges\"\>", "]"}], "]"}]], "Output",
 CellChangeTimes->{3.8778804636389875`*^9},
 CellLabel->"Out[42]=",ExpressionUUID->"60066a9a-5434-4a69-bcb1-f0a70fd9a150"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Quantity", "[", 
  RowBox[{"IndependentUnit", "[", "\"\<oranges\>\"", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.877880465285452*^9, 3.877880474535366*^9}},
 CellLabel->"In[43]:=",ExpressionUUID->"d8bf831e-7bb1-4f0e-b583-08822518fe27"],

Cell[BoxData[
 TemplateBox[{"1", 
   RowBox[{
     FrameBox[
      StyleBox[
      "\"oranges\"", ShowStringCharacters -> False, StripOnInput -> False], 
      FrameMargins -> 1, FrameStyle -> GrayLevel[0.85], BaselinePosition -> 
      Baseline, RoundingRadius -> 3, StripOnInput -> False]}], "oranges", 
   RowBox[{"IndependentUnit", "[", "\"oranges\"", "]"}]},
  "Quantity"]], "Output",
 CellChangeTimes->{3.8778804751183777`*^9},
 CellLabel->"Out[43]=",ExpressionUUID->"55f8ca3f-7b87-4671-87cc-5c22cffcf256"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PhysicalQuantityDimensions", "[", 
  RowBox[{"Quantity", "[", 
   RowBox[{"IndependentUnit", "[", "\"\<oranges\>\"", "]"}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8778804767312975`*^9, 3.877880478975718*^9}},
 CellLabel->"In[44]:=",ExpressionUUID->"c8f6fe49-8ebc-4c64-8546-8994480b7fef"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"IndependentUnitDimension", "[", "\<\"oranges\"\>", "]"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.8778804795162973`*^9},
 CellLabel->"Out[44]=",ExpressionUUID->"0185c2e1-09c0-4f7a-87a8-bd1aa6c71948"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{"SIConformantQuantityQ", "//", "ClearAll"}], "\[IndentingNewLine]", 
 RowBox[{"SIConformantQuantityQ", "[", "]"}]}], "Input",
 CellChangeTimes->{{3.8778825354963145`*^9, 
  3.87788254532082*^9}},ExpressionUUID->"b8dbf261-8e61-4a8e-a96a-\
b555dbba0c9c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Quantity", "[", 
  RowBox[{"\"\<Liters\>\"", "\"\<Pascals\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.8778825485678816`*^9, 3.8778825511896114`*^9}, {
  3.877882581349699*^9, 3.8778825950314984`*^9}},
 CellLabel->"In[49]:=",ExpressionUUID->"31c51385-aec6-4f13-915a-96d0a8ccd4f7"],

Cell[BoxData[
 TemplateBox[{"1", 
   RowBox[{"\"L\"", "\[ThinSpace]", "\"Pa\""}], "liter pascal", 
   RowBox[{"\"Liters\"", " ", "\"Pascals\""}]},
  "Quantity"]], "Output",
 CellChangeTimes->{3.877882595517446*^9},
 CellLabel->"Out[49]=",ExpressionUUID->"096a058b-5d9f-482e-9a13-ccd51050df4e"]
}, Open  ]],

Cell[BoxData["Leaf"], "Input",
 CellChangeTimes->{{3.877882602173147*^9, 
  3.8778826040862093`*^9}},ExpressionUUID->"9067767d-231b-4c08-a120-\
1fbc4eee149f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullForm", "[", 
  RowBox[{"Quantity", "[", 
   RowBox[{"\"\<Liters\>\"", "\"\<Pascals\>\""}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8778825978893194`*^9, 3.877882599508219*^9}},
 CellLabel->"In[50]:=",ExpressionUUID->"1f40568a-cefc-4861-a51e-605de85ec3c6"],

Cell[BoxData[
 TagBox[
  StyleBox[
   RowBox[{"Quantity", "[", 
    RowBox[{"1", ",", 
     RowBox[{"Times", "[", 
      RowBox[{"\"\<Liters\>\"", ",", "\"\<Pascals\>\""}], "]"}]}], "]"}],
   ShowSpecialCharacters->False,
   ShowStringCharacters->True,
   NumberMarks->True],
  FullForm]], "Output",
 CellChangeTimes->{3.8778825999434075`*^9},
 CellLabel->
  "Out[50]//FullForm=",ExpressionUUID->"626c6d26-c1c9-48e3-a2e6-c60d223761dd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Level", "[", 
  RowBox[{
   RowBox[{"Quantity", "[", 
    RowBox[{"\"\<Liters\>\"", "\"\<Pascals\>\""}], "]"}], ",", "1"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.877882649073284*^9, 3.8778826523198223`*^9}},
 CellLabel->"In[51]:=",ExpressionUUID->"f6963712-1b47-40f0-aeb5-6fea56ee57a3"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", 
   RowBox[{"\<\"Liters\"\>", " ", "\<\"Pascals\"\>"}]}], "}"}]], "Output",
 CellChangeTimes->{3.8778826529495797`*^9},
 CellLabel->"Out[51]=",ExpressionUUID->"728e93a0-6fb7-4622-8b03-26862745baae"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Level", "[", 
  RowBox[{
   RowBox[{"Quantity", "[", 
    RowBox[{"\"\<Liters\>\"", "\"\<Pascals\>\""}], "]"}], ",", "2"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.877882649073284*^9, 3.877882658041775*^9}},
 CellLabel->"",ExpressionUUID->"6d73dc5e-ac74-42fc-ba7a-f14f3b028968"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Quantity", "[", 
  RowBox[{"\"\<Electronvolts\>\"", "\"\<Hours\>\"", "\"\<Liters\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.877882666955665*^9, 3.8778826820040054`*^9}},
 CellLabel->"In[53]:=",ExpressionUUID->"fd3fce91-fd54-44a9-9692-c48bd4fe742c"],

Cell[BoxData[
 TemplateBox[{"1", 
   RowBox[{"\"L\"", "\[ThinSpace]", "\"h\"", "\[ThinSpace]", "\"eV\""}], 
   "liter hour electronvolt", 
   RowBox[{"\"Electronvolts\"", " ", "\"Hours\"", " ", "\"Liters\""}]},
  "Quantity"]], "Output",
 CellChangeTimes->{3.87788268348204*^9},
 CellLabel->"Out[53]=",ExpressionUUID->"42803963-faaf-4d3d-8e6d-8ea8570f2594"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Level", "[", 
  RowBox[{
   RowBox[{"Quantity", "[", 
    RowBox[{"\"\<Electronvolts\>\"", "\"\<Hours\>\"", "\"\<Liters\>\""}], 
    "]"}], ",", "1"}], "]"}]], "Input",
 CellChangeTimes->{{3.877882686153314*^9, 3.8778826876191816`*^9}},
 CellLabel->"In[54]:=",ExpressionUUID->"b5122346-586d-42f7-b2df-0378b473c1ac"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", 
   RowBox[{"\<\"Electronvolts\"\>", " ", "\<\"Hours\"\>", 
    " ", "\<\"Liters\"\>"}]}], "}"}]], "Output",
 CellChangeTimes->{3.877882688229253*^9},
 CellLabel->"Out[54]=",ExpressionUUID->"751cd9b3-edb4-4e28-a69e-4db8de2b030d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Last", "[", 
   RowBox[{"Level", "[", 
    RowBox[{
     RowBox[{"Quantity", "[", 
      RowBox[{"\"\<Electronvolts\>\"", "\"\<Hours\>\"", "\"\<Liters\>\""}], 
      "]"}], ",", "1"}], "]"}], "]"}], "//", "InputForm"}]], "Input",
 CellChangeTimes->{{3.877882690017737*^9, 3.8778826956167126`*^9}},
 CellLabel->"In[55]:=",ExpressionUUID->"9cee81ee-9ca1-4b67-ab43-f5c64b5f77b6"],

Cell["\"Electronvolts\"*\"Hours\"*\"Liters\"", "Output",
 CellChangeTimes->{3.877882696107581*^9},
 CellLabel->
  "Out[55]//InputForm=",ExpressionUUID->"0b60f393-5ba4-4846-b2cf-\
fec889849e6f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Level", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Last", "[", 
     RowBox[{"Level", "[", 
      RowBox[{
       RowBox[{"Quantity", "[", 
        RowBox[{"\"\<Electronvolts\>\"", "\"\<Hours\>\"", "\"\<Liters\>\""}], 
        "]"}], ",", "1"}], "]"}], "]"}], "//", "InputForm"}], ",", 
   RowBox[{"{", "2", "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8778827046171455`*^9, 3.8778827167822495`*^9}},
 CellLabel->"In[58]:=",ExpressionUUID->"328bc112-5a97-41ef-8181-6c74f1c6a279"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Electronvolts\"\>", ",", "\<\"Hours\"\>", 
   ",", "\<\"Liters\"\>"}], "}"}]], "Output",
 CellChangeTimes->{{3.877882707965906*^9, 3.8778827172808075`*^9}},
 CellLabel->"Out[58]=",ExpressionUUID->"09d62b57-cc19-41a1-b68d-0c756068fda0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ResourceData", "[", 
  RowBox[{"\"\<SI Brochure Data\>\"", ",", "All"}], "]"}]], "Input",
 CellChangeTimes->{{3.8778827208188114`*^9, 3.877882765910616*^9}},
 CellLabel->"In[64]:=",ExpressionUUID->"c3b0a67b-8f4b-41d2-904a-2f1d6f51c461"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"base-quantities-and-dimensions\"\>", "\[Rule]", 
    TagBox[
     TagBox[
      DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
       "InitialData" -> <|
         "time" -> <|
           "typical-symbol-for-quantity" -> "t", "symbol-for-dimension" -> 
            "T"|>, "length" -> <|
           "typical-symbol-for-quantity" -> "l", "symbol-for-dimension" -> 
            "L"|>, "mass" -> <|
           "typical-symbol-for-quantity" -> "m", "symbol-for-dimension" -> 
            "M"|>, "electric-current" -> <|
           "typical-symbol-for-quantity" -> "i", "symbol-for-dimension" -> 
            "I"|>, "thermodynamic-temperature" -> <|
           "typical-symbol-for-quantity" -> "T", "symbol-for-dimension" -> 
            "\[CapitalTheta]"|>, 
          "amount-of-substance" -> <|
           "typical-symbol-for-quantity" -> "n", "symbol-for-dimension" -> 
            "N"|>, "luminous-intensity" -> <|
           "typical-symbol-for-quantity" -> 
            "\!\(\*SubscriptBox[\(I\), \(v\)]\)", "symbol-for-dimension" -> 
            "J"|>|>, "AllowEmbedding" -> True, "InitialShape" -> 
        TypeSystem`PackageScope`HeaderShape[<|{All, 
             TypeSystem`PackageScope`KeyDummy[12]} -> 
           1, {All, "typical-symbol-for-quantity"} -> 
           1, {All, "symbol-for-dimension"} -> 1|>, 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`ColumnShape[
            TypeSystem`PackageScope`KeyValueShape[
             TypeSystem`PackageScope`AtomShape[280.], 
             TypeSystem`PackageScope`Limited[
              
              TypeSystem`PackageScope`RowShape[<|
               "typical-symbol-for-quantity" -> 
                TypeSystem`PackageScope`AtomShape[291.20000000000005`], 
                "symbol-for-dimension" -> 
                TypeSystem`PackageScope`AtomShape[33.6]|>], 
              DirectedInfinity[1], 2, {All}]]], 7, 
           DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Assoc[
          TypeSystem`Atom[String], 
          
          TypeSystem`Struct[{
           "typical-symbol-for-quantity", "symbol-for-dimension"}, {
            TypeSystem`Atom[String], 
            TypeSystem`Atom[String]}], 7], "Meta" -> <||>, "RowTarget" -> 20, 
        "ColumnTarget" -> 10, "Shape" -> 
        TypeSystem`PackageScope`HeaderShape[<|{All, 
             TypeSystem`PackageScope`KeyDummy[12]} -> 
           1, {All, "typical-symbol-for-quantity"} -> 
           1, {All, "symbol-for-dimension"} -> 1|>, 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`ColumnShape[
            TypeSystem`PackageScope`KeyValueShape[
             TypeSystem`PackageScope`AtomShape[280.], 
             TypeSystem`PackageScope`Limited[
              
              TypeSystem`PackageScope`RowShape[<|
               "typical-symbol-for-quantity" -> 
                TypeSystem`PackageScope`AtomShape[291.20000000000005`], 
                "symbol-for-dimension" -> 
                TypeSystem`PackageScope`AtomShape[33.6]|>], 
              DirectedInfinity[1], 2, {All}]]], 7, 
           DirectedInfinity[1], {}]], "Type" -> TypeSystem`Assoc[
          TypeSystem`Atom[String], 
          
          TypeSystem`Struct[{
           "typical-symbol-for-quantity", "symbol-for-dimension"}, {
            TypeSystem`Atom[String], 
            TypeSystem`Atom[String]}], 7], "Path" -> {}, "DisplayedRowCount" -> 
        7, "DisplayedColumnCount" -> 2, "DataRowCount" -> 7, 
        "DataColumnCount" -> 2, "SortPaths" -> {}, "SortDirections" -> {}, 
        "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
       TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
       TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
       TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
       DynamicModule[{
        TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
           Style[
            Grid[{{
               Item[
                Pane[
                 Annotation[
                  Mouseover[
                   
                   Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                    Scaled[-0.15]], 
                   Graphics[{
                    GrayLevel[0.6], 
                    
                    Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
                    Rational[-1, 2]}}]}, ImageSize -> 6, BaselinePosition -> 
                    Scaled[-0.15]]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   All, Keys}, "KeyDummy", True], "Mouse"], 
                 ImageSize -> {{1, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["typical-symbol-for-quantity", 
                    Style[
                    "typical-symbol-for-quantity", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "typical-symbol-for-quantity"}, 1]]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   All, "typical-symbol-for-quantity"}, "ColumnHeader", True],
                   "Mouse"], ImageSize -> {{1, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["symbol-for-dimension", 
                    Style[
                    "symbol-for-dimension", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "symbol-for-dimension"}, 1]]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   All, "symbol-for-dimension"}, "ColumnHeader", True], 
                  "Mouse"], ImageSize -> {{1, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["time", 
                    Style[
                    "time", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["time"]}, 1]]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["time"]}, "RowHeader", False], "Mouse"], 
                 ImageSize -> {{280., Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Pane[
                 Annotation["t", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["time"], 
                    Key["typical-symbol-for-quantity"]}, "Item", False], 
                  "Mouse"], 
                 ImageSize -> {{291.20000000000005`, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation["T", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["time"], 
                    Key["symbol-for-dimension"]}, "Item", False], "Mouse"], 
                 ImageSize -> {{33.6, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["length", 
                    Style[
                    "length", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["length"]}, 1]]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["length"]}, "RowHeader", False], "Mouse"], 
                 ImageSize -> {{280., Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Pane[
                 Annotation["l", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["length"], 
                    Key["typical-symbol-for-quantity"]}, "Item", False], 
                  "Mouse"], 
                 ImageSize -> {{291.20000000000005`, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation["L", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["length"], 
                    Key["symbol-for-dimension"]}, "Item", False], "Mouse"], 
                 ImageSize -> {{33.6, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["mass", 
                    Style[
                    "mass", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["mass"]}, 1]]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["mass"]}, "RowHeader", False], "Mouse"], 
                 ImageSize -> {{280., Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Pane[
                 Annotation["m", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["mass"], 
                    Key["typical-symbol-for-quantity"]}, "Item", False], 
                  "Mouse"], 
                 ImageSize -> {{291.20000000000005`, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation["M", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["mass"], 
                    Key["symbol-for-dimension"]}, "Item", False], "Mouse"], 
                 ImageSize -> {{33.6, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["electric-current", 
                    Style[
                    "electric-current", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["electric-current"]}, 1]]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["electric-current"]}, "RowHeader", False], "Mouse"], 
                 ImageSize -> {{280., Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Pane[
                 Annotation["i", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["electric-current"], 
                    Key["typical-symbol-for-quantity"]}, "Item", False], 
                  "Mouse"], 
                 ImageSize -> {{291.20000000000005`, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation["I", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["electric-current"], 
                    Key["symbol-for-dimension"]}, "Item", False], "Mouse"], 
                 ImageSize -> {{33.6, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["thermodynamic-temperature", 
                    Style[
                    "thermodynamic-temperature", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["thermodynamic-temperature"]}, 1]]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["thermodynamic-temperature"]}, "RowHeader", False], 
                  "Mouse"], ImageSize -> {{280., Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Pane[
                 Annotation["T", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["thermodynamic-temperature"], 
                    Key["typical-symbol-for-quantity"]}, "Item", False], 
                  "Mouse"], 
                 ImageSize -> {{291.20000000000005`, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation["\[CapitalTheta]", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["thermodynamic-temperature"], 
                    Key["symbol-for-dimension"]}, "Item", False], "Mouse"], 
                 ImageSize -> {{33.6, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["amount-of-substance", 
                    Style[
                    "amount-of-substance", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["amount-of-substance"]}, 1]]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["amount-of-substance"]}, "RowHeader", False], 
                  "Mouse"], ImageSize -> {{280., Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Pane[
                 Annotation["n", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["amount-of-substance"], 
                    Key["typical-symbol-for-quantity"]}, "Item", False], 
                  "Mouse"], 
                 ImageSize -> {{291.20000000000005`, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation["N", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["amount-of-substance"], 
                    Key["symbol-for-dimension"]}, "Item", False], "Mouse"], 
                 ImageSize -> {{33.6, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["luminous-intensity", 
                    Style[
                    "luminous-intensity", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["luminous-intensity"]}, 1]]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["luminous-intensity"]}, "RowHeader", False], "Mouse"],
                  ImageSize -> {{280., Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Pane[
                 Annotation["\!\(\*SubscriptBox[\(I\), \(v\)]\)", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["luminous-intensity"], 
                    Key["typical-symbol-for-quantity"]}, "Item", False], 
                  "Mouse"], 
                 ImageSize -> {{291.20000000000005`, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation["J", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["luminous-intensity"], 
                    Key["symbol-for-dimension"]}, "Item", False], "Mouse"], 
                 ImageSize -> {{33.6, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}]}}, 
             BaseStyle -> {
              ContextMenu -> 
               Dynamic[
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                 Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                   TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                   TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                    True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                   TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                    Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
               "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, 
             Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
             Spacings -> {0, 0}, Alignment -> Left, 
             BaseStyle -> {
              FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
               Plain}], LineBreakWithin -> False, ContextMenu -> {}, 
            NumberMarks -> False, ShowAutoStyles -> False]], 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
        Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
            Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
            
            Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
              TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
              TypeSystem`NestedGrid`PackagePrivate`datasetData[
               TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
               Not[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
          TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
          TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
            FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
            TypeSystem`SparseGrid[
             TypeSystem`H["(data no longer present)"]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
         TrackedSymbols :> {
          TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
           TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
        DynamicModuleValues :> {}], 
       TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
         TypeSystem`PackageScope`SubViewPathbar[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, 
          TypeSystem`NestedGrid`PackagePrivate`updateState[
          TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
           TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
           TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
        TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
       TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
        Framed[
         Dynamic[
          Replace[
          TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
           TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
              Blank[]] -> "", 
            TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
              Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
               Blank[]], 
              Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
               Blank[]], 
              Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
               Blank[]]] :> (
             Increment[
              TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
             TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
              TypeSystem`NestedGrid`PackagePrivate`path$; 
             TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
              TypeSystem`NestedGrid`PackagePrivate`pathType$; 
             TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
              TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
             TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
               TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
             TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
              TypeSystem`NestedGrid`PackagePrivate`path$, 
               TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
            Spacer[10], Blank[] :> Spacer[10]}], 
          TrackedSymbols :> {
           TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
         FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
         Top, ImageSize -> {Automatic, 15}], FontSize -> 1], 
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
       DynamicWrapperBox[
        DynamicBox[ToBoxes[
          Dataset`DatasetContent[
          2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
           "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], 
           "State" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
           "VPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], 
           "HPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], 
           "TopBar" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
           "BottomBar" -> 
           Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], 
           "OutputID" -> Hold[
             TypeSystem`NestedGrid`PackagePrivate`localHold[
             TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], 
          StandardForm],
         ImageSizeCache->{734., {113.63403328722343`, 119.36596671277657`}},
         TrackedSymbols:>{
          TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
        MouseAnnotation[],
        ImageSizeCache->{734., {113.63403328722343`, 119.36596671277657`}}],
       BaseStyle->{LineBreakWithin -> False},
       DynamicModuleValues:>{},
       Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
        CreateUUID[]),
       UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
      Deploy,
      DefaultBaseStyle->"Deploy"],
     Dataset`InterpretDataset[1],
     Editable->False,
     SelectWithContents->True,
     Selectable->False]}], ",", 
   RowBox[{"\<\"base-quantities-and-units\"\>", "\[Rule]", 
    TagBox[
     TagBox[
      DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
       "InitialData" -> <|
         "time" -> <|
           "quantity-name" -> "time", "typical-quantity-symbol" -> "t", 
            "unit-name" -> "second", "unit-symbol" -> "s"|>, 
          "length" -> <|
           "quantity-name" -> "length", "typical-quantity-symbol" -> "l", 
            "unit-name" -> "meter", "unit-symbol" -> "m"|>, 
          "mass" -> <|
           "quantity-name" -> "mass", "typical-quantity-symbol" -> "l", 
            "unit-name" -> "kilogram", "unit-symbol" -> "kg"|>, 
          "electric-current" -> <|
           "quantity-name" -> "electric-current", "typical-quantity-symbol" -> 
            "i", "unit-name" -> "ampere", "unit-symbol" -> "A"|>, 
          "thermodynamic-temperature" -> <|
           "quantity-name" -> "thermodynamic-temperature", 
            "typical-quantity-symbol" -> "T", "unit-name" -> "kelvin", 
            "unit-symbol" -> "K"|>, 
          "amount-of-substance" -> <|
           "quantity-name" -> "amount-of-substance", 
            "typical-quantity-symbol" -> "n", "unit-name" -> "mole", 
            "unit-symbol" -> "mol"|>, 
          "luminous-intensity" -> <|
           "quantity-name" -> "luminous-intensity", "typical-quantity-symbol" -> 
            "\!\(\*SubscriptBox[\(I\), \(v\)]\)", "unit-name" -> "candela", 
            "unit-symbol" -> "cd"|>|>, "AllowEmbedding" -> True, 
        "InitialShape" -> TypeSystem`PackageScope`HeaderShape[<|{All, 
             TypeSystem`PackageScope`KeyDummy[13]} -> 
           1, {All, "quantity-name"} -> 1, {All, "typical-quantity-symbol"} -> 
           1, {All, "unit-name"} -> 1, {All, "unit-symbol"} -> 1|>, 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`ColumnShape[
            TypeSystem`PackageScope`KeyValueShape[
             TypeSystem`PackageScope`AtomShape[280.], 
             TypeSystem`PackageScope`Limited[
              
              TypeSystem`PackageScope`RowShape[<|
               "quantity-name" -> TypeSystem`PackageScope`AtomShape[280.], 
                "typical-quantity-symbol" -> 
                TypeSystem`PackageScope`AtomShape[291.20000000000005`], 
                "unit-name" -> 
                TypeSystem`PackageScope`AtomShape[89.60000000000001], 
                "unit-symbol" -> TypeSystem`PackageScope`AtomShape[33.6]|>], 
              DirectedInfinity[1], 4, {All}]]], 7, 
           DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Assoc[
          TypeSystem`Atom[String], 
          
          TypeSystem`Struct[{
           "quantity-name", "typical-quantity-symbol", "unit-name", 
            "unit-symbol"}, {
            TypeSystem`Atom[String], 
            TypeSystem`Atom[String], 
            TypeSystem`Atom[String], 
            TypeSystem`Atom[String]}], 7], "Meta" -> <||>, "RowTarget" -> 20, 
        "ColumnTarget" -> 10, "Shape" -> 
        TypeSystem`PackageScope`HeaderShape[<|{All, 
             TypeSystem`PackageScope`KeyDummy[13]} -> 
           1, {All, "quantity-name"} -> 1, {All, "typical-quantity-symbol"} -> 
           1, {All, "unit-name"} -> 1, {All, "unit-symbol"} -> 1|>, 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`ColumnShape[
            TypeSystem`PackageScope`KeyValueShape[
             TypeSystem`PackageScope`AtomShape[280.], 
             TypeSystem`PackageScope`Limited[
              
              TypeSystem`PackageScope`RowShape[<|
               "quantity-name" -> TypeSystem`PackageScope`AtomShape[280.], 
                "typical-quantity-symbol" -> 
                TypeSystem`PackageScope`AtomShape[291.20000000000005`], 
                "unit-name" -> 
                TypeSystem`PackageScope`AtomShape[89.60000000000001], 
                "unit-symbol" -> TypeSystem`PackageScope`AtomShape[33.6]|>], 
              DirectedInfinity[1], 4, {All}]]], 7, 
           DirectedInfinity[1], {}]], "Type" -> TypeSystem`Assoc[
          TypeSystem`Atom[String], 
          
          TypeSystem`Struct[{
           "quantity-name", "typical-quantity-symbol", "unit-name", 
            "unit-symbol"}, {
            TypeSystem`Atom[String], 
            TypeSystem`Atom[String], 
            TypeSystem`Atom[String], 
            TypeSystem`Atom[String]}], 7], "Path" -> {}, "DisplayedRowCount" -> 
        7, "DisplayedColumnCount" -> 4, "DataRowCount" -> 7, 
        "DataColumnCount" -> 4, "SortPaths" -> {}, "SortDirections" -> {}, 
        "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
       TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
       TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
       TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
       DynamicModule[{
        TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
           Style[
            Grid[{{
               Item[
                Pane[
                 Annotation[
                  Mouseover[
                   
                   Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                    Scaled[-0.15]], 
                   Graphics[{
                    GrayLevel[0.6], 
                    
                    Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
                    Rational[-1, 2]}}]}, ImageSize -> 6, BaselinePosition -> 
                    Scaled[-0.15]]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   All, Keys}, "KeyDummy", True], "Mouse"], 
                 ImageSize -> {{1, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["quantity-name", 
                    Style[
                    "quantity-name", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "quantity-name"}, 1]]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   All, "quantity-name"}, "ColumnHeader", True], "Mouse"], 
                 ImageSize -> {{1, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["typical-quantity-symbol", 
                    Style[
                    "typical-quantity-symbol", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "typical-quantity-symbol"}, 1]]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   All, "typical-quantity-symbol"}, "ColumnHeader", True], 
                  "Mouse"], ImageSize -> {{1, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["unit-name", 
                    Style[
                    "unit-name", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "unit-name"}, 1]]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   All, "unit-name"}, "ColumnHeader", True], "Mouse"], 
                 ImageSize -> {{1, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["unit-symbol", 
                    Style[
                    "unit-symbol", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "unit-symbol"}, 1]]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   All, "unit-symbol"}, "ColumnHeader", True], "Mouse"], 
                 ImageSize -> {{1, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["time", 
                    Style[
                    "time", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["time"]}, 1]]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["time"]}, "RowHeader", False], "Mouse"], 
                 ImageSize -> {{280., Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Pane[
                 Annotation["time", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["time"], 
                    Key["quantity-name"]}, "Item", False], "Mouse"], 
                 ImageSize -> {{280., Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation["t", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["time"], 
                    Key["typical-quantity-symbol"]}, "Item", False], "Mouse"],
                  ImageSize -> {{291.20000000000005`, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation["second", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["time"], 
                    Key["unit-name"]}, "Item", False], "Mouse"], 
                 ImageSize -> {{89.60000000000001, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation["s", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["time"], 
                    Key["unit-symbol"]}, "Item", False], "Mouse"], 
                 ImageSize -> {{33.6, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["length", 
                    Style[
                    "length", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["length"]}, 1]]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["length"]}, "RowHeader", False], "Mouse"], 
                 ImageSize -> {{280., Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Pane[
                 Annotation["length", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["length"], 
                    Key["quantity-name"]}, "Item", False], "Mouse"], 
                 ImageSize -> {{280., Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation["l", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["length"], 
                    Key["typical-quantity-symbol"]}, "Item", False], "Mouse"],
                  ImageSize -> {{291.20000000000005`, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation["meter", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["length"], 
                    Key["unit-name"]}, "Item", False], "Mouse"], 
                 ImageSize -> {{89.60000000000001, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation["m", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["length"], 
                    Key["unit-symbol"]}, "Item", False], "Mouse"], 
                 ImageSize -> {{33.6, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["mass", 
                    Style[
                    "mass", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["mass"]}, 1]]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["mass"]}, "RowHeader", False], "Mouse"], 
                 ImageSize -> {{280., Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Pane[
                 Annotation["mass", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["mass"], 
                    Key["quantity-name"]}, "Item", False], "Mouse"], 
                 ImageSize -> {{280., Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation["l", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["mass"], 
                    Key["typical-quantity-symbol"]}, "Item", False], "Mouse"],
                  ImageSize -> {{291.20000000000005`, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation["kilogram", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["mass"], 
                    Key["unit-name"]}, "Item", False], "Mouse"], 
                 ImageSize -> {{89.60000000000001, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation["kg", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["mass"], 
                    Key["unit-symbol"]}, "Item", False], "Mouse"], 
                 ImageSize -> {{33.6, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["electric-current", 
                    Style[
                    "electric-current", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["electric-current"]}, 1]]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["electric-current"]}, "RowHeader", False], "Mouse"], 
                 ImageSize -> {{280., Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Pane[
                 Annotation["electric-current", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["electric-current"], 
                    Key["quantity-name"]}, "Item", False], "Mouse"], 
                 ImageSize -> {{280., Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation["i", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["electric-current"], 
                    Key["typical-quantity-symbol"]}, "Item", False], "Mouse"],
                  ImageSize -> {{291.20000000000005`, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation["ampere", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["electric-current"], 
                    Key["unit-name"]}, "Item", False], "Mouse"], 
                 ImageSize -> {{89.60000000000001, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation["A", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["electric-current"], 
                    Key["unit-symbol"]}, "Item", False], "Mouse"], 
                 ImageSize -> {{33.6, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["thermodynamic-temperature", 
                    Style[
                    "thermodynamic-temperature", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["thermodynamic-temperature"]}, 1]]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["thermodynamic-temperature"]}, "RowHeader", False], 
                  "Mouse"], ImageSize -> {{280., Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Pane[
                 Annotation["thermodynamic-temperature", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["thermodynamic-temperature"], 
                    Key["quantity-name"]}, "Item", False], "Mouse"], 
                 ImageSize -> {{280., Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation["T", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["thermodynamic-temperature"], 
                    Key["typical-quantity-symbol"]}, "Item", False], "Mouse"],
                  ImageSize -> {{291.20000000000005`, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation["kelvin", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["thermodynamic-temperature"], 
                    Key["unit-name"]}, "Item", False], "Mouse"], 
                 ImageSize -> {{89.60000000000001, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation["K", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["thermodynamic-temperature"], 
                    Key["unit-symbol"]}, "Item", False], "Mouse"], 
                 ImageSize -> {{33.6, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["amount-of-substance", 
                    Style[
                    "amount-of-substance", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["amount-of-substance"]}, 1]]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["amount-of-substance"]}, "RowHeader", False], 
                  "Mouse"], ImageSize -> {{280., Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Pane[
                 Annotation["amount-of-substance", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["amount-of-substance"], 
                    Key["quantity-name"]}, "Item", False], "Mouse"], 
                 ImageSize -> {{280., Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation["n", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["amount-of-substance"], 
                    Key["typical-quantity-symbol"]}, "Item", False], "Mouse"],
                  ImageSize -> {{291.20000000000005`, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation["mole", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["amount-of-substance"], 
                    Key["unit-name"]}, "Item", False], "Mouse"], 
                 ImageSize -> {{89.60000000000001, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation["mol", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["amount-of-substance"], 
                    Key["unit-symbol"]}, "Item", False], "Mouse"], 
                 ImageSize -> {{33.6, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["luminous-intensity", 
                    Style[
                    "luminous-intensity", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["luminous-intensity"]}, 1]]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["luminous-intensity"]}, "RowHeader", False], "Mouse"],
                  ImageSize -> {{280., Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Pane[
                 Annotation["luminous-intensity", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["luminous-intensity"], 
                    Key["quantity-name"]}, "Item", False], "Mouse"], 
                 ImageSize -> {{280., Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation["\!\(\*SubscriptBox[\(I\), \(v\)]\)", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["luminous-intensity"], 
                    Key["typical-quantity-symbol"]}, "Item", False], "Mouse"],
                  ImageSize -> {{291.20000000000005`, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation["candela", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["luminous-intensity"], 
                    Key["unit-name"]}, "Item", False], "Mouse"], 
                 ImageSize -> {{89.60000000000001, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation["cd", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["luminous-intensity"], 
                    Key["unit-symbol"]}, "Item", False], "Mouse"], 
                 ImageSize -> {{33.6, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}]}}, 
             BaseStyle -> {
              ContextMenu -> 
               Dynamic[
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                 Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                   TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                   TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                    True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                   TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                    Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
               "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, 
             Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
             Spacings -> {0, 0}, Alignment -> Left, 
             BaseStyle -> {
              FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
               Plain}], LineBreakWithin -> False, ContextMenu -> {}, 
            NumberMarks -> False, ShowAutoStyles -> False]], 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
        Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
            Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
            
            Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
              TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
              TypeSystem`NestedGrid`PackagePrivate`datasetData[
               TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
               Not[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
          TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
          TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
            FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
            TypeSystem`SparseGrid[
             TypeSystem`H["(data no longer present)"]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
         TrackedSymbols :> {
          TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
           TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
        DynamicModuleValues :> {}], 
       TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
         TypeSystem`PackageScope`SubViewPathbar[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, 
          TypeSystem`NestedGrid`PackagePrivate`updateState[
          TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
           TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
           TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
        TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
       TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
        Framed[
         Dynamic[
          Replace[
          TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
           TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
              Blank[]] -> "", 
            TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
              Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
               Blank[]], 
              Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
               Blank[]], 
              Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
               Blank[]]] :> (
             Increment[
              TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
             TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
              TypeSystem`NestedGrid`PackagePrivate`path$; 
             TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
              TypeSystem`NestedGrid`PackagePrivate`pathType$; 
             TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
              TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
             TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
               TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
             TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
              TypeSystem`NestedGrid`PackagePrivate`path$, 
               TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
            Spacer[10], Blank[] :> Spacer[10]}], 
          TrackedSymbols :> {
           TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
         FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
         Top, ImageSize -> {Automatic, 15}], FontSize -> 1], 
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
       DynamicWrapperBox[
        DynamicBox[ToBoxes[
          Dataset`DatasetContent[
          2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
           "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], 
           "State" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
           "VPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], 
           "HPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], 
           "TopBar" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
           "BottomBar" -> 
           Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], 
           "OutputID" -> Hold[
             TypeSystem`NestedGrid`PackagePrivate`localHold[
             TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], 
          StandardForm],
         ImageSizeCache->{1056., {113.63403328722343`, 119.36596671277657`}},
         TrackedSymbols:>{
          TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
        MouseAnnotation[],
        ImageSizeCache->{1056., {113.63403328722343`, 119.36596671277657`}}],
       BaseStyle->{LineBreakWithin -> False},
       DynamicModuleValues:>{},
       Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
        CreateUUID[]),
       UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
      Deploy,
      DefaultBaseStyle->"Deploy"],
     Dataset`InterpretDataset[1],
     Editable->False,
     SelectWithContents->True,
     Selectable->False]}], ",", 
   RowBox[{"\<\"coherent-derived-units-in-the-SI-expressed-terms-of-base-\
units\"\>", "\[Rule]", 
    TagBox[
     TagBox[
      DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
       "InitialData" -> <|
         "area" -> <|
           "typical-symbol" -> "A", 
            "derived-unit-expressed-in-terms-of-base-units" -> 
            "\!\(\*SuperscriptBox[\(m\), \(2\)]\)"|>, 
          "volume" -> <|
           "typical-symbol" -> "V", 
            "derived-unit-expressed-in-terms-of-base-units" -> 
            "\!\(\*SuperscriptBox[\(m\), \(3\)]\)"|>, 
          "speed-or-velocity" -> <|
           "typical-symbol" -> "v", 
            "derived-unit-expressed-in-terms-of-base-units" -> 
            "m \!\(\*SuperscriptBox[\(s\), \(-1\)]\)"|>, 
          "acceleration" -> <|
           "typical-symbol" -> "a", 
            "derived-unit-expressed-in-terms-of-base-units" -> 
            "m \!\(\*SuperscriptBox[\(s\), \(-2\)]\)"|>, 
          "wavenumber" -> <|
           "typical-symbol" -> "\[Sigma]", 
            "derived-unit-expressed-in-terms-of-base-units" -> 
            "\!\(\*SuperscriptBox[\(m\), \(-1\)]\)"|>, 
          "density-or-mass-density" -> <|
           "typical-symbol" -> "\[Rho]", 
            "derived-unit-expressed-in-terms-of-base-units" -> 
            "kg \!\(\*SuperscriptBox[\(m\), \(-3\)]\)"|>, 
          "surface-density" -> <|
           "typical-symbol" -> "\!\(\*SubscriptBox[\(\[Rho]\), \(A\)]\)", 
            "derived-unit-expressed-in-terms-of-base-units" -> 
            "kg \!\(\*SuperscriptBox[\(m\), \(-2\)]\)"|>, 
          "specific-volume" -> <|
           "typical-symbol" -> "\[Nu]", 
            "derived-unit-expressed-in-terms-of-base-units" -> 
            "\!\(\*SuperscriptBox[\(m\), \(3\)]\) \
\!\(\*SuperscriptBox[\(kg\), \(-1\)]\)"|>, 
          "current-density" -> <|
           "typical-symbol" -> "j", 
            "derived-unit-expressed-in-terms-of-base-units" -> 
            "A \!\(\*SuperscriptBox[\(m\), \(-2\)]\)"|>, 
          "magnetic-field-strength" -> <|
           "typical-symbol" -> "H", 
            "derived-unit-expressed-in-terms-of-base-units" -> 
            "A \!\(\*SuperscriptBox[\(m\), \(-1\)]\)"|>, 
          "amount-of-substance-concentration" -> <|
           "typical-symbol" -> "c", 
            "derived-unit-expressed-in-terms-of-base-units" -> 
            "mol \!\(\*SuperscriptBox[\(m\), \(-3\)]\)"|>, 
          "mass-concentration" -> <|
           "typical-symbol" -> "\[Rho]-or-\[Gamma]", 
            "derived-unit-expressed-in-terms-of-base-units" -> 
            "kg \!\(\*SuperscriptBox[\(m\), \(-3\)]\)"|>, 
          "luminance" -> <|
           "typical-symbol" -> "\!\(\*SubscriptBox[\(L\), \(v\)]\)", 
            "derived-unit-expressed-in-terms-of-base-units" -> 
            "cd \!\(\*SuperscriptBox[\(m\), \(-2\)]\)"|>|>, "AllowEmbedding" -> 
        True, "InitialShape" -> TypeSystem`PackageScope`HeaderShape[<|{All, 
             TypeSystem`PackageScope`KeyDummy[14]} -> 
           1, {All, "typical-symbol"} -> 
           1, {All, "derived-unit-expressed-in-terms-of-base-units"} -> 1|>, 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`ColumnShape[
            TypeSystem`PackageScope`KeyValueShape[
             TypeSystem`PackageScope`AtomShape[257.6], 
             TypeSystem`PackageScope`Limited[
              
              TypeSystem`PackageScope`RowShape[<|
               "typical-symbol" -> 
                TypeSystem`PackageScope`AtomShape[291.20000000000005`], 
                "derived-unit-expressed-in-terms-of-base-units" -> 
                TypeSystem`PackageScope`AtomShape[560.]|>], 
              DirectedInfinity[1], 2, {All}]]], 13, 
           DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Assoc[
          TypeSystem`Atom[String], 
          
          TypeSystem`Struct[{
           "typical-symbol", 
            "derived-unit-expressed-in-terms-of-base-units"}, {
            TypeSystem`Atom[String], 
            TypeSystem`Atom[String]}], 13], "Meta" -> <||>, "RowTarget" -> 20,
         "ColumnTarget" -> 10, "Shape" -> 
        TypeSystem`PackageScope`HeaderShape[<|{All, 
             TypeSystem`PackageScope`KeyDummy[20]} -> 
           1, {All, "typical-symbol"} -> 
           1, {All, "derived-unit-expressed-in-terms-of-base-units"} -> 1|>, 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`ColumnShape[
            TypeSystem`PackageScope`KeyValueShape[
             TypeSystem`PackageScope`AtomShape[257.6], 
             TypeSystem`PackageScope`Limited[
              
              TypeSystem`PackageScope`RowShape[<|
               "typical-symbol" -> 
                TypeSystem`PackageScope`AtomShape[291.20000000000005`], 
                "derived-unit-expressed-in-terms-of-base-units" -> 
                TypeSystem`PackageScope`AtomShape[560.]|>], 
              DirectedInfinity[1], 2, {All}]]], 13, 
           DirectedInfinity[1], {}]], "Type" -> TypeSystem`Assoc[
          TypeSystem`Atom[String], 
          
          TypeSystem`Struct[{
           "typical-symbol", 
            "derived-unit-expressed-in-terms-of-base-units"}, {
            TypeSystem`Atom[String], 
            TypeSystem`Atom[String]}], 13], "Path" -> {}, "DisplayedRowCount" -> 
        13, "DisplayedColumnCount" -> 2, "DataRowCount" -> 13, 
        "DataColumnCount" -> 2, "SortPaths" -> {}, "SortDirections" -> {}, 
        "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
       TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
       TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
       TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
       DynamicModule[{
        TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
           Style[
            Grid[{{
               Item[
                Pane[
                 Annotation[
                  Mouseover[
                   
                   Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                    Scaled[-0.15]], 
                   Graphics[{
                    GrayLevel[0.6], 
                    
                    Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
                    Rational[-1, 2]}}]}, ImageSize -> 6, BaselinePosition -> 
                    Scaled[-0.15]]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  "574a9f67-1e01-4ce5-bbc7-e4b2b7e6f687"][{All, Keys}, 
                   "KeyDummy", True], "Mouse"], 
                 ImageSize -> {{1, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["typical-symbol", 
                    Style[
                    "typical-symbol", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "574a9f67-1e01-4ce5-bbc7-e4b2b7e6f687"]][{
                    All, "typical-symbol"}, 1]]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  "574a9f67-1e01-4ce5-bbc7-e4b2b7e6f687"][{
                   All, "typical-symbol"}, "ColumnHeader", True], "Mouse"], 
                 ImageSize -> {{1, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["derived-unit-expressed-in-terms-of-base-units", 
                    Style[
                    "derived-unit-expressed-in-terms-of-base-units", 
                    FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "574a9f67-1e01-4ce5-bbc7-e4b2b7e6f687"]][{
                    All, "derived-unit-expressed-in-terms-of-base-units"}, 
                    1]]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  "574a9f67-1e01-4ce5-bbc7-e4b2b7e6f687"][{
                   All, "derived-unit-expressed-in-terms-of-base-units"}, 
                   "ColumnHeader", True], "Mouse"], 
                 ImageSize -> {{1, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["area", 
                    Style[
                    "area", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "574a9f67-1e01-4ce5-bbc7-e4b2b7e6f687"]][{
                    Key["area"]}, 1]]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  "574a9f67-1e01-4ce5-bbc7-e4b2b7e6f687"][{
                    Key["area"]}, "RowHeader", False], "Mouse"], 
                 ImageSize -> {{257.6, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Pane[
                 Annotation["A", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  "574a9f67-1e01-4ce5-bbc7-e4b2b7e6f687"][{
                    Key["area"], 
                    Key["typical-symbol"]}, "Item", False], "Mouse"], 
                 ImageSize -> {{291.20000000000005`, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation["\!\(\*SuperscriptBox[\(m\), \(2\)]\)", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  "574a9f67-1e01-4ce5-bbc7-e4b2b7e6f687"][{
                    Key["area"], 
                    Key["derived-unit-expressed-in-terms-of-base-units"]}, 
                   "Item", False], "Mouse"], 
                 ImageSize -> {{560., Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["volume", 
                    Style[
                    "volume", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "574a9f67-1e01-4ce5-bbc7-e4b2b7e6f687"]][{
                    Key["volume"]}, 1]]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  "574a9f67-1e01-4ce5-bbc7-e4b2b7e6f687"][{
                    Key["volume"]}, "RowHeader", False], "Mouse"], 
                 ImageSize -> {{257.6, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Pane[
                 Annotation["V", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  "574a9f67-1e01-4ce5-bbc7-e4b2b7e6f687"][{
                    Key["volume"], 
                    Key["typical-symbol"]}, "Item", False], "Mouse"], 
                 ImageSize -> {{291.20000000000005`, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation["\!\(\*SuperscriptBox[\(m\), \(3\)]\)", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  "574a9f67-1e01-4ce5-bbc7-e4b2b7e6f687"][{
                    Key["volume"], 
                    Key["derived-unit-expressed-in-terms-of-base-units"]}, 
                   "Item", False], "Mouse"], 
                 ImageSize -> {{560., Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["speed-or-velocity", 
                    Style[
                    "speed-or-velocity", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "574a9f67-1e01-4ce5-bbc7-e4b2b7e6f687"]][{
                    Key["speed-or-velocity"]}, 1]]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  "574a9f67-1e01-4ce5-bbc7-e4b2b7e6f687"][{
                    Key["speed-or-velocity"]}, "RowHeader", False], "Mouse"], 
                 ImageSize -> {{257.6, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Pane[
                 Annotation["v", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  "574a9f67-1e01-4ce5-bbc7-e4b2b7e6f687"][{
                    Key["speed-or-velocity"], 
                    Key["typical-symbol"]}, "Item", False], "Mouse"], 
                 ImageSize -> {{291.20000000000005`, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation["m \!\(\*SuperscriptBox[\(s\), \(-1\)]\)", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  "574a9f67-1e01-4ce5-bbc7-e4b2b7e6f687"][{
                    Key["speed-or-velocity"], 
                    Key["derived-unit-expressed-in-terms-of-base-units"]}, 
                   "Item", False], "Mouse"], 
                 ImageSize -> {{560., Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["acceleration", 
                    Style[
                    "acceleration", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "574a9f67-1e01-4ce5-bbc7-e4b2b7e6f687"]][{
                    Key["acceleration"]}, 1]]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  "574a9f67-1e01-4ce5-bbc7-e4b2b7e6f687"][{
                    Key["acceleration"]}, "RowHeader", False], "Mouse"], 
                 ImageSize -> {{257.6, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Pane[
                 Annotation["a", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  "574a9f67-1e01-4ce5-bbc7-e4b2b7e6f687"][{
                    Key["acceleration"], 
                    Key["typical-symbol"]}, "Item", False], "Mouse"], 
                 ImageSize -> {{291.20000000000005`, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation["m \!\(\*SuperscriptBox[\(s\), \(-2\)]\)", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  "574a9f67-1e01-4ce5-bbc7-e4b2b7e6f687"][{
                    Key["acceleration"], 
                    Key["derived-unit-expressed-in-terms-of-base-units"]}, 
                   "Item", False], "Mouse"], 
                 ImageSize -> {{560., Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["wavenumber", 
                    Style[
                    "wavenumber", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "574a9f67-1e01-4ce5-bbc7-e4b2b7e6f687"]][{
                    Key["wavenumber"]}, 1]]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  "574a9f67-1e01-4ce5-bbc7-e4b2b7e6f687"][{
                    Key["wavenumber"]}, "RowHeader", False], "Mouse"], 
                 ImageSize -> {{257.6, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Pane[
                 Annotation["\[Sigma]", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  "574a9f67-1e01-4ce5-bbc7-e4b2b7e6f687"][{
                    Key["wavenumber"], 
                    Key["typical-symbol"]}, "Item", False], "Mouse"], 
                 ImageSize -> {{291.20000000000005`, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation["\!\(\*SuperscriptBox[\(m\), \(-1\)]\)", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  "574a9f67-1e01-4ce5-bbc7-e4b2b7e6f687"][{
                    Key["wavenumber"], 
                    Key["derived-unit-expressed-in-terms-of-base-units"]}, 
                   "Item", False], "Mouse"], 
                 ImageSize -> {{560., Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["density-or-mass-density", 
                    Style[
                    "density-or-mass-density", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "574a9f67-1e01-4ce5-bbc7-e4b2b7e6f687"]][{
                    Key["density-or-mass-density"]}, 1]]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  "574a9f67-1e01-4ce5-bbc7-e4b2b7e6f687"][{
                    Key["density-or-mass-density"]}, "RowHeader", False], 
                  "Mouse"], ImageSize -> {{257.6, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Pane[
                 Annotation["\[Rho]", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  "574a9f67-1e01-4ce5-bbc7-e4b2b7e6f687"][{
                    Key["density-or-mass-density"], 
                    Key["typical-symbol"]}, "Item", False], "Mouse"], 
                 ImageSize -> {{291.20000000000005`, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation["kg \!\(\*SuperscriptBox[\(m\), \(-3\)]\)", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  "574a9f67-1e01-4ce5-bbc7-e4b2b7e6f687"][{
                    Key["density-or-mass-density"], 
                    Key["derived-unit-expressed-in-terms-of-base-units"]}, 
                   "Item", False], "Mouse"], 
                 ImageSize -> {{560., Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["surface-density", 
                    Style[
                    "surface-density", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "574a9f67-1e01-4ce5-bbc7-e4b2b7e6f687"]][{
                    Key["surface-density"]}, 1]]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  "574a9f67-1e01-4ce5-bbc7-e4b2b7e6f687"][{
                    Key["surface-density"]}, "RowHeader", False], "Mouse"], 
                 ImageSize -> {{257.6, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Pane[
                 Annotation["\!\(\*SubscriptBox[\(\[Rho]\), \(A\)]\)", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  "574a9f67-1e01-4ce5-bbc7-e4b2b7e6f687"][{
                    Key["surface-density"], 
                    Key["typical-symbol"]}, "Item", False], "Mouse"], 
                 ImageSize -> {{291.20000000000005`, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation["kg \!\(\*SuperscriptBox[\(m\), \(-2\)]\)", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  "574a9f67-1e01-4ce5-bbc7-e4b2b7e6f687"][{
                    Key["surface-density"], 
                    Key["derived-unit-expressed-in-terms-of-base-units"]}, 
                   "Item", False], "Mouse"], 
                 ImageSize -> {{560., Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["specific-volume", 
                    Style[
                    "specific-volume", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "574a9f67-1e01-4ce5-bbc7-e4b2b7e6f687"]][{
                    Key["specific-volume"]}, 1]]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  "574a9f67-1e01-4ce5-bbc7-e4b2b7e6f687"][{
                    Key["specific-volume"]}, "RowHeader", False], "Mouse"], 
                 ImageSize -> {{257.6, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Pane[
                 Annotation["\[Nu]", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  "574a9f67-1e01-4ce5-bbc7-e4b2b7e6f687"][{
                    Key["specific-volume"], 
                    Key["typical-symbol"]}, "Item", False], "Mouse"], 
                 ImageSize -> {{291.20000000000005`, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation[
                 "\!\(\*SuperscriptBox[\(m\), \(3\)]\) \
\!\(\*SuperscriptBox[\(kg\), \(-1\)]\)", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  "574a9f67-1e01-4ce5-bbc7-e4b2b7e6f687"][{
                    Key["specific-volume"], 
                    Key["derived-unit-expressed-in-terms-of-base-units"]}, 
                   "Item", False], "Mouse"], 
                 ImageSize -> {{560., Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["current-density", 
                    Style[
                    "current-density", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "574a9f67-1e01-4ce5-bbc7-e4b2b7e6f687"]][{
                    Key["current-density"]}, 1]]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  "574a9f67-1e01-4ce5-bbc7-e4b2b7e6f687"][{
                    Key["current-density"]}, "RowHeader", False], "Mouse"], 
                 ImageSize -> {{257.6, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Pane[
                 Annotation["j", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  "574a9f67-1e01-4ce5-bbc7-e4b2b7e6f687"][{
                    Key["current-density"], 
                    Key["typical-symbol"]}, "Item", False], "Mouse"], 
                 ImageSize -> {{291.20000000000005`, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation["A \!\(\*SuperscriptBox[\(m\), \(-2\)]\)", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  "574a9f67-1e01-4ce5-bbc7-e4b2b7e6f687"][{
                    Key["current-density"], 
                    Key["derived-unit-expressed-in-terms-of-base-units"]}, 
                   "Item", False], "Mouse"], 
                 ImageSize -> {{560., Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["magnetic-field-strength", 
                    Style[
                    "magnetic-field-strength", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "574a9f67-1e01-4ce5-bbc7-e4b2b7e6f687"]][{
                    Key["magnetic-field-strength"]}, 1]]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  "574a9f67-1e01-4ce5-bbc7-e4b2b7e6f687"][{
                    Key["magnetic-field-strength"]}, "RowHeader", False], 
                  "Mouse"], ImageSize -> {{257.6, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Pane[
                 Annotation["H", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  "574a9f67-1e01-4ce5-bbc7-e4b2b7e6f687"][{
                    Key["magnetic-field-strength"], 
                    Key["typical-symbol"]}, "Item", False], "Mouse"], 
                 ImageSize -> {{291.20000000000005`, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation["A \!\(\*SuperscriptBox[\(m\), \(-1\)]\)", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  "574a9f67-1e01-4ce5-bbc7-e4b2b7e6f687"][{
                    Key["magnetic-field-strength"], 
                    Key["derived-unit-expressed-in-terms-of-base-units"]}, 
                   "Item", False], "Mouse"], 
                 ImageSize -> {{560., Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["amount-of-substance-concentration", 
                    Style[
                    "amount-of-substance-concentration", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "574a9f67-1e01-4ce5-bbc7-e4b2b7e6f687"]][{
                    Key["amount-of-substance-concentration"]}, 1]]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  "574a9f67-1e01-4ce5-bbc7-e4b2b7e6f687"][{
                    Key["amount-of-substance-concentration"]}, "RowHeader", 
                   False], "Mouse"], ImageSize -> {{257.6, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Pane[
                 Annotation["c", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  "574a9f67-1e01-4ce5-bbc7-e4b2b7e6f687"][{
                    Key["amount-of-substance-concentration"], 
                    Key["typical-symbol"]}, "Item", False], "Mouse"], 
                 ImageSize -> {{291.20000000000005`, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation["mol \!\(\*SuperscriptBox[\(m\), \(-3\)]\)", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  "574a9f67-1e01-4ce5-bbc7-e4b2b7e6f687"][{
                    Key["amount-of-substance-concentration"], 
                    Key["derived-unit-expressed-in-terms-of-base-units"]}, 
                   "Item", False], "Mouse"], 
                 ImageSize -> {{560., Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["mass-concentration", 
                    Style[
                    "mass-concentration", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "574a9f67-1e01-4ce5-bbc7-e4b2b7e6f687"]][{
                    Key["mass-concentration"]}, 1]]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  "574a9f67-1e01-4ce5-bbc7-e4b2b7e6f687"][{
                    Key["mass-concentration"]}, "RowHeader", False], "Mouse"],
                  ImageSize -> {{257.6, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Pane[
                 Annotation["\[Rho]-or-\[Gamma]", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  "574a9f67-1e01-4ce5-bbc7-e4b2b7e6f687"][{
                    Key["mass-concentration"], 
                    Key["typical-symbol"]}, "Item", False], "Mouse"], 
                 ImageSize -> {{291.20000000000005`, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation["kg \!\(\*SuperscriptBox[\(m\), \(-3\)]\)", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  "574a9f67-1e01-4ce5-bbc7-e4b2b7e6f687"][{
                    Key["mass-concentration"], 
                    Key["derived-unit-expressed-in-terms-of-base-units"]}, 
                   "Item", False], "Mouse"], 
                 ImageSize -> {{560., Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["luminance", 
                    Style[
                    "luminance", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "574a9f67-1e01-4ce5-bbc7-e4b2b7e6f687"]][{
                    Key["luminance"]}, 1]]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  "574a9f67-1e01-4ce5-bbc7-e4b2b7e6f687"][{
                    Key["luminance"]}, "RowHeader", False], "Mouse"], 
                 ImageSize -> {{257.6, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Pane[
                 Annotation["\!\(\*SubscriptBox[\(L\), \(v\)]\)", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  "574a9f67-1e01-4ce5-bbc7-e4b2b7e6f687"][{
                    Key["luminance"], 
                    Key["typical-symbol"]}, "Item", False], "Mouse"], 
                 ImageSize -> {{291.20000000000005`, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation["cd \!\(\*SuperscriptBox[\(m\), \(-2\)]\)", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  "574a9f67-1e01-4ce5-bbc7-e4b2b7e6f687"][{
                    Key["luminance"], 
                    Key["derived-unit-expressed-in-terms-of-base-units"]}, 
                   "Item", False], "Mouse"], 
                 ImageSize -> {{560., Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}]}}, 
             BaseStyle -> {
              ContextMenu -> 
               Dynamic[
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                 Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                   "574a9f67-1e01-4ce5-bbc7-e4b2b7e6f687", {}, 
                   TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                   TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                    True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                   TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                    Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "574a9f67-1e01-4ce5-bbc7-e4b2b7e6f687"]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "574a9f67-1e01-4ce5-bbc7-e4b2b7e6f687"]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "574a9f67-1e01-4ce5-bbc7-e4b2b7e6f687"][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "574a9f67-1e01-4ce5-bbc7-e4b2b7e6f687"][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "574a9f67-1e01-4ce5-bbc7-e4b2b7e6f687"][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
               "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, 
             Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
             Spacings -> {0, 0}, Alignment -> Left, 
             BaseStyle -> {
              FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
               Plain}], LineBreakWithin -> False, ContextMenu -> {}, 
            NumberMarks -> False, ShowAutoStyles -> False]], 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
        Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
            Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
            
            Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
              TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
              TypeSystem`NestedGrid`PackagePrivate`datasetData[
               TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                 "574a9f67-1e01-4ce5-bbc7-e4b2b7e6f687"][
                TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
               Not[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
          TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
          TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
            FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
            TypeSystem`SparseGrid[
             TypeSystem`H["(data no longer present)"]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
         TrackedSymbols :> {
          TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
           TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
        DynamicModuleValues :> {}], 
       TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
         TypeSystem`PackageScope`SubViewPathbar[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, 
          TypeSystem`NestedGrid`PackagePrivate`updateState[
          TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
           TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
           TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
        TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
       TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
        Framed[
         Dynamic[
          Replace[
          TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
           TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
              Blank[]] -> "", 
            TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
              Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
               Blank[]], 
              Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
               Blank[]], 
              Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
               Blank[]]] :> (
             Increment[
              TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
             TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
              TypeSystem`NestedGrid`PackagePrivate`path$; 
             TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
              TypeSystem`NestedGrid`PackagePrivate`pathType$; 
             TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
              TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
             TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
               TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
             TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
              TypeSystem`NestedGrid`PackagePrivate`path$, 
               TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
            Spacer[10], Blank[] :> Spacer[10]}], 
          TrackedSymbols :> {
           TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
         FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
         Top, ImageSize -> {Automatic, 15}], FontSize -> 1], 
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
       DynamicWrapperBox[
        DynamicBox[ToBoxes[
          Dataset`DatasetContent[
          2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
           "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], 
           "State" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
           "VPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], 
           "HPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], 
           "TopBar" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
           "BottomBar" -> 
           Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], 
           "OutputID" -> Hold[
             TypeSystem`NestedGrid`PackagePrivate`localHold[
             TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], 
          StandardForm],
         ImageSizeCache->{1134., {194.63403328722342`, 200.36596671277658`}},
         TrackedSymbols:>{
          TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
        MouseAnnotation[],
        ImageSizeCache->{1134., {194.63403328722342`, 200.36596671277658`}}],
       BaseStyle->{LineBreakWithin -> False},
       DynamicModuleValues:>{},
       Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
        CreateUUID[]),
       UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
      Deploy,
      DefaultBaseStyle->"Deploy"],
     Dataset`InterpretDataset[1],
     Editable->False,
     SelectWithContents->True,
     Selectable->False]}], ",", 
   RowBox[{"\<\"coherent-derived-units-whose-names-and-symbols-include-SI-\
coherent-derived-units-with-special-names-and-symbols\"\>", "\[Rule]", 
    TagBox[
     TagBox[
      DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
       "InitialData" -> <|
         "dynamic-viscosity" -> <|
           "name-of-coherent-derived-unit" -> "pascal second", "symbol" -> 
            "Pa s", "derived-unit-expressed-in-terms-of-base-units" -> 
            "kg \!\(\*SuperscriptBox[\(m\), \(-1\)]\) \
\!\(\*SuperscriptBox[\(s\), \(-1\)]\)"|>, 
          "moment-of-force" -> <|
           "name-of-coherent-derived-unit" -> "newton meter", "symbol" -> 
            "N m", "derived-unit-expressed-in-terms-of-base-units" -> 
            "kg \!\(\*SuperscriptBox[\(m\), \(2\)]\) \!\(\*SuperscriptBox[\(s\
\), \(-2\)]\)"|>, 
          "surface-tension" -> <|
           "name-of-coherent-derived-unit" -> "newton per meter", "symbol" -> 
            "N \!\(\*SuperscriptBox[\(m\), \(-1\)]\)", 
            "derived-unit-expressed-in-terms-of-base-units" -> 
            "kg \!\(\*SuperscriptBox[\(s\), \(-2\)]\)"|>, 
          "angular-velocity-or-angular-frequency" -> <|
           "name-of-coherent-derived-unit" -> "radian per second", "symbol" -> 
            "rad \!\(\*SuperscriptBox[\(s\), \(-1\)]\)", 
            "derived-unit-expressed-in-terms-of-base-units" -> 
            "\!\(\*SuperscriptBox[\(s\), \(-1\)]\)"|>, 
          "angular-acceleration" -> <|
           "name-of-coherent-derived-unit" -> "radian per second squared", 
            "symbol" -> "rad/\!\(\*SuperscriptBox[\(s\), \(2\)]\)", 
            "derived-unit-expressed-in-terms-of-base-units" -> 
            "\!\(\*SuperscriptBox[\(s\), \(-2\)]\)"|>, 
          "heat-flux-density-or-irradiance" -> <|
           "name-of-coherent-derived-unit" -> "watt per square meter", 
            "symbol" -> "W/\!\(\*SuperscriptBox[\(m\), \(2\)]\)", 
            "derived-unit-expressed-in-terms-of-base-units" -> 
            "kg \!\(\*SuperscriptBox[\(s\), \(-3\)]\)"|>, 
          "heat-capacity-or-entropy" -> <|
           "name-of-coherent-derived-unit" -> "joule per kelvin", "symbol" -> 
            "J \!\(\*SuperscriptBox[\(K\), \(-1\)]\)", 
            "derived-unit-expressed-in-terms-of-base-units" -> 
            "kg \!\(\*SuperscriptBox[\(m\), \(2\)]\) \!\(\*SuperscriptBox[\(s\
\), \(-2\)]\) \!\(\*SuperscriptBox[\(K\), \(-1\)]\)"|>, 
          "specific-heat-capacity-or-specific-entropy" -> <|
           "name-of-coherent-derived-unit" -> "joule per kilogram kelvin", 
            "symbol" -> 
            "J \!\(\*SuperscriptBox[\(K\), \(-1\)]\) \
\!\(\*SuperscriptBox[\(kg\), \(-1\)]\)", 
            "derived-unit-expressed-in-terms-of-base-units" -> 
            "\!\(\*SuperscriptBox[\(m\), \(2\)]\) \!\(\*SuperscriptBox[\(s\), \
\(-2\)]\) \!\(\*SuperscriptBox[\(K\), \(-1\)]\)"|>, 
          "specific-energy" -> <|
           "name-of-coherent-derived-unit" -> "joule per kilogram", "symbol" -> 
            "J \!\(\*SuperscriptBox[\(kg\), \(-1\)]\)", 
            "derived-unit-expressed-in-terms-of-base-units" -> 
            "\!\(\*SuperscriptBox[\(m\), \(2\)]\) \!\(\*SuperscriptBox[\(s\), \
\(-2\)]\)"|>, 
          "thermal-conductivity" -> <|
           "name-of-coherent-derived-unit" -> "watt per meter kelvin", 
            "symbol" -> 
            "W \!\(\*SuperscriptBox[\(m\), \(-1\)]\) \!\(\*SuperscriptBox[\(K\
\), \(-1\)]\)", "derived-unit-expressed-in-terms-of-base-units" -> 
            "kg m \!\(\*SuperscriptBox[\(s\), \(-3\)]\) \!\(\*SuperscriptBox[\
\(K\), \(-1\)]\)"|>, 
          "energy-density" -> <|
           "name-of-coherent-derived-unit" -> "joule per cubic meter", 
            "symbol" -> "J \!\(\*SuperscriptBox[\(m\), \(-3\)]\)", 
            "derived-unit-expressed-in-terms-of-base-units" -> 
            "kg \!\(\*SuperscriptBox[\(m\), \(-1\)]\) \
\!\(\*SuperscriptBox[\(s\), \(-2\)]\)"|>, 
          "electric-field-strength" -> <|
           "name-of-coherent-derived-unit" -> "volt per meter", "symbol" -> 
            "V \!\(\*SuperscriptBox[\(m\), \(-1\)]\)", 
            "derived-unit-expressed-in-terms-of-base-units" -> 
            "kg m \!\(\*SuperscriptBox[\(s\), \(-3\)]\) \!\(\*SuperscriptBox[\
\(A\), \(-1\)]\)"|>, 
          "electric-charge-density" -> <|
           "name-of-coherent-derived-unit" -> "coulomb per cubic meter", 
            "symbol" -> "C \!\(\*SuperscriptBox[\(m\), \(-3\)]\)", 
            "derived-unit-expressed-in-terms-of-base-units" -> 
            "A s \!\(\*SuperscriptBox[\(m\), \(-3\)]\)"|>, 
          "surface-charge-density" -> <|
           "name-of-coherent-derived-unit" -> "coulomb per square meter", 
            "symbol" -> "C \!\(\*SuperscriptBox[\(m\), \(-2\)]\)", 
            "derived-unit-expressed-in-terms-of-base-units" -> 
            "A s \!\(\*SuperscriptBox[\(m\), \(-2\)]\)"|>, 
          "electric-flux-density-or-electric-displacement" -> <|
           "name-of-coherent-derived-unit" -> "coulomb per square meter", 
            "symbol" -> "C \!\(\*SuperscriptBox[\(m\), \(-2\)]\)", 
            "derived-unit-expressed-in-terms-of-base-units" -> 
            "A s \!\(\*SuperscriptBox[\(m\), \(-2\)]\)"|>, 
          "permittivity" -> <|
           "name-of-coherent-derived-unit" -> "farad per meter", "symbol" -> 
            "F \!\(\*SuperscriptBox[\(m\), \(-1\)]\)", 
            "derived-unit-expressed-in-terms-of-base-units" -> 
            "\!\(\*SuperscriptBox[\(kg\), \(-1\)]\) \
\!\(\*SuperscriptBox[\(m\), \(-3\)]\) \!\(\*SuperscriptBox[\(s\), \(4\)]\) \!\
\(\*SuperscriptBox[\(A\), \(2\)]\)"|>, 
          "permeability" -> <|
           "name-of-coherent-derived-unit" -> "henry per meter", "symbol" -> 
            "H \!\(\*SuperscriptBox[\(m\), \(-1\)]\)", 
            "derived-unit-expressed-in-terms-of-base-units" -> 
            "kg m \!\(\*SuperscriptBox[\(s\), \(-2\)]\) \!\(\*SuperscriptBox[\
\(A\), \(-2\)]\)"|>, 
          "molar-energy" -> <|
           "name-of-coherent-derived-unit" -> "joule per mole", "symbol" -> 
            "J \!\(\*SuperscriptBox[\(mol\), \(-1\)]\)", 
            "derived-unit-expressed-in-terms-of-base-units" -> 
            "kg \!\(\*SuperscriptBox[\(m\), \(2\)]\) \!\(\*SuperscriptBox[\(s\
\), \(-2\)]\) \!\(\*SuperscriptBox[\(mol\), \(-1\)]\)"|>, 
          "molar-entropy-or-molar-heat-capacity" -> <|
           "name-of-coherent-derived-unit" -> "joule per mole kelvin", 
            "symbol" -> 
            "J \!\(\*SuperscriptBox[\(K\), \(-1\)]\) \
\!\(\*SuperscriptBox[\(mol\), \(-1\)]\)", 
            "derived-unit-expressed-in-terms-of-base-units" -> 
            "kg \!\(\*SuperscriptBox[\(m\), \(2\)]\) \!\(\*SuperscriptBox[\(s\
\), \(-2\)]\) \!\(\*SuperscriptBox[\(mol\), \(-1\)]\) \
\!\(\*SuperscriptBox[\(K\), \(-1\)]\)"|>, 
          "exposure(x-and-\[Gamma]-rays)" -> <|
           "name-of-coherent-derived-unit" -> "coulomb per kilogram", 
            "symbol" -> "C \!\(\*SuperscriptBox[\(kg\), \(-1\)]\)", 
            "derived-unit-expressed-in-terms-of-base-units" -> 
            "A s \!\(\*SuperscriptBox[\(kg\), \(-1\)]\)"|>, 
          "absorbed-dose-rate" -> <|
           "name-of-coherent-derived-unit" -> "gray per second", "symbol" -> 
            "Gy \!\(\*SuperscriptBox[\(s\), \(-1\)]\)", 
            "derived-unit-expressed-in-terms-of-base-units" -> 
            "\!\(\*SuperscriptBox[\(m\), \(2\)]\) \!\(\*SuperscriptBox[\(s\), \
\(-3\)]\)"|>, 
          "radiant-intensity" -> <|
           "name-of-coherent-derived-unit" -> "watt per steradian", "symbol" -> 
            "W \!\(\*SuperscriptBox[\(sr\), \(-1\)]\)", 
            "derived-unit-expressed-in-terms-of-base-units" -> 
            "kg \!\(\*SuperscriptBox[\(m\), \(2\)]\) \!\(\*SuperscriptBox[\(s\
\), \(-3\)]\)"|>, 
          "radiance" -> <|
           "name-of-coherent-derived-unit" -> 
            "watt per square meter steradian", "symbol" -> 
            "W \!\(\*SuperscriptBox[\(sr\), \(-1\)]\) \
\!\(\*SuperscriptBox[\(m\), \(-2\)]\)", 
            "derived-unit-expressed-in-terms-of-base-units" -> 
            "kg \!\(\*SuperscriptBox[\(s\), \(-3\)]\)"|>, 
          "catalytic-activity-concentration" -> <|
           "name-of-coherent-derived-unit" -> "katal per cubic meter", 
            "symbol" -> "kat \!\(\*SuperscriptBox[\(m\), \(-3\)]\)", 
            "derived-unit-expressed-in-terms-of-base-units" -> 
            "mol \!\(\*SuperscriptBox[\(s\), \(-1\)]\) \
\!\(\*SuperscriptBox[\(m\), \(-3\)]\)"|>|>, "AllowEmbedding" -> True, 
        "InitialShape" -> TypeSystem`PackageScope`HeaderShape[<|{All, 
             TypeSystem`PackageScope`KeyDummy[15]} -> 
           1, {All, "name-of-coherent-derived-unit"} -> 1, {All, "symbol"} -> 
           1, {All, "derived-unit-expressed-in-terms-of-base-units"} -> 1|>, 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`ColumnShape[
            TypeSystem`PackageScope`KeyValueShape[
             TypeSystem`PackageScope`AtomShape[515.2], 
             TypeSystem`PackageScope`Limited[
              
              TypeSystem`PackageScope`RowShape[<|
               "name-of-coherent-derived-unit" -> 
                TypeSystem`PackageScope`AtomShape[280.], "symbol" -> 
                TypeSystem`PackageScope`AtomShape[560.], 
                "derived-unit-expressed-in-terms-of-base-units" -> 
                TypeSystem`PackageScope`AtomShape[560.]|>], 
              DirectedInfinity[1], 3, {All}]]], 20, 
           DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Assoc[
          TypeSystem`Atom[String], 
          
          TypeSystem`Struct[{
           "name-of-coherent-derived-unit", "symbol", 
            "derived-unit-expressed-in-terms-of-base-units"}, {
            TypeSystem`Atom[String], 
            TypeSystem`Atom[String], 
            TypeSystem`Atom[String]}], 24], "Meta" -> <||>, "RowTarget" -> 20,
         "ColumnTarget" -> 10, "Shape" -> 
        TypeSystem`PackageScope`HeaderShape[<|{All, 
             TypeSystem`PackageScope`KeyDummy[15]} -> 
           1, {All, "name-of-coherent-derived-unit"} -> 1, {All, "symbol"} -> 
           1, {All, "derived-unit-expressed-in-terms-of-base-units"} -> 1|>, 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`ColumnShape[
            TypeSystem`PackageScope`KeyValueShape[
             TypeSystem`PackageScope`AtomShape[515.2], 
             TypeSystem`PackageScope`Limited[
              
              TypeSystem`PackageScope`RowShape[<|
               "name-of-coherent-derived-unit" -> 
                TypeSystem`PackageScope`AtomShape[280.], "symbol" -> 
                TypeSystem`PackageScope`AtomShape[560.], 
                "derived-unit-expressed-in-terms-of-base-units" -> 
                TypeSystem`PackageScope`AtomShape[560.]|>], 
              DirectedInfinity[1], 3, {All}]]], 20, 
           DirectedInfinity[1], {}]], "Type" -> TypeSystem`Assoc[
          TypeSystem`Atom[String], 
          
          TypeSystem`Struct[{
           "name-of-coherent-derived-unit", "symbol", 
            "derived-unit-expressed-in-terms-of-base-units"}, {
            TypeSystem`Atom[String], 
            TypeSystem`Atom[String], 
            TypeSystem`Atom[String]}], 24], "Path" -> {}, "DisplayedRowCount" -> 
        20, "DisplayedColumnCount" -> 3, "DataRowCount" -> 24, 
        "DataColumnCount" -> 3, "SortPaths" -> {}, "SortDirections" -> {}, 
        "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
       TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
       TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
       TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
       DynamicModule[{
        TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
           Style[
            Grid[{{
               Item[
                Pane[
                 Annotation[
                  Mouseover[
                   
                   Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                    Scaled[-0.15]], 
                   Graphics[{
                    GrayLevel[0.6], 
                    
                    Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
                    Rational[-1, 2]}}]}, ImageSize -> 6, BaselinePosition -> 
                    Scaled[-0.15]]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   All, Keys}, "KeyDummy", True], "Mouse"], 
                 ImageSize -> {{1, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["name-of-coherent-derived-unit", 
                    Style[
                    "name-of-coherent-derived-unit", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "name-of-coherent-derived-unit"}, 1]]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   All, "name-of-coherent-derived-unit"}, "ColumnHeader", 
                   True], "Mouse"], ImageSize -> {{1, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["symbol", 
                    Style[
                    "symbol", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "symbol"}, 1]]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   All, "symbol"}, "ColumnHeader", True], "Mouse"], 
                 ImageSize -> {{1, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["derived-unit-expressed-in-terms-of-base-units", 
                    Style[
                    "derived-unit-expressed-in-terms-of-base-units", 
                    FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "derived-unit-expressed-in-terms-of-base-units"}, 
                    1]]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   All, "derived-unit-expressed-in-terms-of-base-units"}, 
                   "ColumnHeader", True], "Mouse"], 
                 ImageSize -> {{1, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["dynamic-viscosity", 
                    Style[
                    "dynamic-viscosity", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["dynamic-viscosity"]}, 1]]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["dynamic-viscosity"]}, "RowHeader", False], "Mouse"], 
                 ImageSize -> {{515.2, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Pane[
                 Annotation["pascal second", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["dynamic-viscosity"], 
                    Key["name-of-coherent-derived-unit"]}, "Item", False], 
                  "Mouse"], ImageSize -> {{280., Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation["Pa s", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["dynamic-viscosity"], 
                    Key["symbol"]}, "Item", False], "Mouse"], 
                 ImageSize -> {{560., Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation[
                 "kg \!\(\*SuperscriptBox[\(m\), \(-1\)]\) \
\!\(\*SuperscriptBox[\(s\), \(-1\)]\)", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["dynamic-viscosity"], 
                    Key["derived-unit-expressed-in-terms-of-base-units"]}, 
                   "Item", False], "Mouse"], 
                 ImageSize -> {{560., Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["moment-of-force", 
                    Style[
                    "moment-of-force", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["moment-of-force"]}, 1]]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["moment-of-force"]}, "RowHeader", False], "Mouse"], 
                 ImageSize -> {{515.2, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Pane[
                 Annotation["newton meter", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["moment-of-force"], 
                    Key["name-of-coherent-derived-unit"]}, "Item", False], 
                  "Mouse"], ImageSize -> {{280., Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation["N m", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["moment-of-force"], 
                    Key["symbol"]}, "Item", False], "Mouse"], 
                 ImageSize -> {{560., Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation[
                 "kg \!\(\*SuperscriptBox[\(m\), \(2\)]\) \
\!\(\*SuperscriptBox[\(s\), \(-2\)]\)", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["moment-of-force"], 
                    Key["derived-unit-expressed-in-terms-of-base-units"]}, 
                   "Item", False], "Mouse"], 
                 ImageSize -> {{560., Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["surface-tension", 
                    Style[
                    "surface-tension", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["surface-tension"]}, 1]]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["surface-tension"]}, "RowHeader", False], "Mouse"], 
                 ImageSize -> {{515.2, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Pane[
                 Annotation["newton per meter", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["surface-tension"], 
                    Key["name-of-coherent-derived-unit"]}, "Item", False], 
                  "Mouse"], ImageSize -> {{280., Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation["N \!\(\*SuperscriptBox[\(m\), \(-1\)]\)", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["surface-tension"], 
                    Key["symbol"]}, "Item", False], "Mouse"], 
                 ImageSize -> {{560., Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation["kg \!\(\*SuperscriptBox[\(s\), \(-2\)]\)", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["surface-tension"], 
                    Key["derived-unit-expressed-in-terms-of-base-units"]}, 
                   "Item", False], "Mouse"], 
                 ImageSize -> {{560., Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["angular-velocity-or-angular-frequency", 
                    Style[
                    "angular-velocity-or-angular-frequency", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["angular-velocity-or-angular-frequency"]}, 1]]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["angular-velocity-or-angular-frequency"]}, 
                   "RowHeader", False], "Mouse"], 
                 ImageSize -> {{515.2, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Pane[
                 Annotation["radian per second", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["angular-velocity-or-angular-frequency"], 
                    Key["name-of-coherent-derived-unit"]}, "Item", False], 
                  "Mouse"], ImageSize -> {{280., Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation["rad \!\(\*SuperscriptBox[\(s\), \(-1\)]\)", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["angular-velocity-or-angular-frequency"], 
                    Key["symbol"]}, "Item", False], "Mouse"], 
                 ImageSize -> {{560., Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation["\!\(\*SuperscriptBox[\(s\), \(-1\)]\)", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["angular-velocity-or-angular-frequency"], 
                    Key["derived-unit-expressed-in-terms-of-base-units"]}, 
                   "Item", False], "Mouse"], 
                 ImageSize -> {{560., Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["angular-acceleration", 
                    Style[
                    "angular-acceleration", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["angular-acceleration"]}, 1]]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["angular-acceleration"]}, "RowHeader", False], 
                  "Mouse"], ImageSize -> {{515.2, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Pane[
                 Annotation["radian per second squared", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["angular-acceleration"], 
                    Key["name-of-coherent-derived-unit"]}, "Item", False], 
                  "Mouse"], ImageSize -> {{280., Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation["rad/\!\(\*SuperscriptBox[\(s\), \(2\)]\)", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["angular-acceleration"], 
                    Key["symbol"]}, "Item", False], "Mouse"], 
                 ImageSize -> {{560., Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation["\!\(\*SuperscriptBox[\(s\), \(-2\)]\)", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["angular-acceleration"], 
                    Key["derived-unit-expressed-in-terms-of-base-units"]}, 
                   "Item", False], "Mouse"], 
                 ImageSize -> {{560., Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["heat-flux-density-or-irradiance", 
                    Style[
                    "heat-flux-density-or-irradiance", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["heat-flux-density-or-irradiance"]}, 1]]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["heat-flux-density-or-irradiance"]}, "RowHeader", 
                   False], "Mouse"], ImageSize -> {{515.2, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Pane[
                 Annotation["watt per square meter", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["heat-flux-density-or-irradiance"], 
                    Key["name-of-coherent-derived-unit"]}, "Item", False], 
                  "Mouse"], ImageSize -> {{280., Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation["W/\!\(\*SuperscriptBox[\(m\), \(2\)]\)", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["heat-flux-density-or-irradiance"], 
                    Key["symbol"]}, "Item", False], "Mouse"], 
                 ImageSize -> {{560., Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation["kg \!\(\*SuperscriptBox[\(s\), \(-3\)]\)", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["heat-flux-density-or-irradiance"], 
                    Key["derived-unit-expressed-in-terms-of-base-units"]}, 
                   "Item", False], "Mouse"], 
                 ImageSize -> {{560., Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["heat-capacity-or-entropy", 
                    Style[
                    "heat-capacity-or-entropy", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["heat-capacity-or-entropy"]}, 1]]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["heat-capacity-or-entropy"]}, "RowHeader", False], 
                  "Mouse"], ImageSize -> {{515.2, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Pane[
                 Annotation["joule per kelvin", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["heat-capacity-or-entropy"], 
                    Key["name-of-coherent-derived-unit"]}, "Item", False], 
                  "Mouse"], ImageSize -> {{280., Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation["J \!\(\*SuperscriptBox[\(K\), \(-1\)]\)", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["heat-capacity-or-entropy"], 
                    Key["symbol"]}, "Item", False], "Mouse"], 
                 ImageSize -> {{560., Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation[
                 "kg \!\(\*SuperscriptBox[\(m\), \(2\)]\) \
\!\(\*SuperscriptBox[\(s\), \(-2\)]\) \!\(\*SuperscriptBox[\(K\), \(-1\)]\)", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["heat-capacity-or-entropy"], 
                    Key["derived-unit-expressed-in-terms-of-base-units"]}, 
                   "Item", False], "Mouse"], 
                 ImageSize -> {{560., Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["specific-heat-capacity-or-specific-entropy", 
                    Style[
                    "specific-heat-capacity-or-specific-entropy", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["specific-heat-capacity-or-specific-entropy"]}, 1]]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["specific-heat-capacity-or-specific-entropy"]}, 
                   "RowHeader", False], "Mouse"], 
                 ImageSize -> {{515.2, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Pane[
                 Annotation["joule per kilogram kelvin", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["specific-heat-capacity-or-specific-entropy"], 
                    Key["name-of-coherent-derived-unit"]}, "Item", False], 
                  "Mouse"], ImageSize -> {{280., Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation[
                 "J \!\(\*SuperscriptBox[\(K\), \(-1\)]\) \
\!\(\*SuperscriptBox[\(kg\), \(-1\)]\)", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["specific-heat-capacity-or-specific-entropy"], 
                    Key["symbol"]}, "Item", False], "Mouse"], 
                 ImageSize -> {{560., Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation[
                 "\!\(\*SuperscriptBox[\(m\), \(2\)]\) \
\!\(\*SuperscriptBox[\(s\), \(-2\)]\) \!\(\*SuperscriptBox[\(K\), \(-1\)]\)", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["specific-heat-capacity-or-specific-entropy"], 
                    Key["derived-unit-expressed-in-terms-of-base-units"]}, 
                   "Item", False], "Mouse"], 
                 ImageSize -> {{560., Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["specific-energy", 
                    Style[
                    "specific-energy", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["specific-energy"]}, 1]]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["specific-energy"]}, "RowHeader", False], "Mouse"], 
                 ImageSize -> {{515.2, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Pane[
                 Annotation["joule per kilogram", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["specific-energy"], 
                    Key["name-of-coherent-derived-unit"]}, "Item", False], 
                  "Mouse"], ImageSize -> {{280., Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation["J \!\(\*SuperscriptBox[\(kg\), \(-1\)]\)", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["specific-energy"], 
                    Key["symbol"]}, "Item", False], "Mouse"], 
                 ImageSize -> {{560., Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation[
                 "\!\(\*SuperscriptBox[\(m\), \(2\)]\) \
\!\(\*SuperscriptBox[\(s\), \(-2\)]\)", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["specific-energy"], 
                    Key["derived-unit-expressed-in-terms-of-base-units"]}, 
                   "Item", False], "Mouse"], 
                 ImageSize -> {{560., Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["thermal-conductivity", 
                    Style[
                    "thermal-conductivity", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["thermal-conductivity"]}, 1]]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["thermal-conductivity"]}, "RowHeader", False], 
                  "Mouse"], ImageSize -> {{515.2, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Pane[
                 Annotation["watt per meter kelvin", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["thermal-conductivity"], 
                    Key["name-of-coherent-derived-unit"]}, "Item", False], 
                  "Mouse"], ImageSize -> {{280., Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation[
                 "W \!\(\*SuperscriptBox[\(m\), \(-1\)]\) \
\!\(\*SuperscriptBox[\(K\), \(-1\)]\)", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["thermal-conductivity"], 
                    Key["symbol"]}, "Item", False], "Mouse"], 
                 ImageSize -> {{560., Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation[
                 "kg m \!\(\*SuperscriptBox[\(s\), \(-3\)]\) \
\!\(\*SuperscriptBox[\(K\), \(-1\)]\)", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["thermal-conductivity"], 
                    Key["derived-unit-expressed-in-terms-of-base-units"]}, 
                   "Item", False], "Mouse"], 
                 ImageSize -> {{560., Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["energy-density", 
                    Style[
                    "energy-density", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["energy-density"]}, 1]]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["energy-density"]}, "RowHeader", False], "Mouse"], 
                 ImageSize -> {{515.2, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Pane[
                 Annotation["joule per cubic meter", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["energy-density"], 
                    Key["name-of-coherent-derived-unit"]}, "Item", False], 
                  "Mouse"], ImageSize -> {{280., Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation["J \!\(\*SuperscriptBox[\(m\), \(-3\)]\)", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["energy-density"], 
                    Key["symbol"]}, "Item", False], "Mouse"], 
                 ImageSize -> {{560., Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation[
                 "kg \!\(\*SuperscriptBox[\(m\), \(-1\)]\) \
\!\(\*SuperscriptBox[\(s\), \(-2\)]\)", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["energy-density"], 
                    Key["derived-unit-expressed-in-terms-of-base-units"]}, 
                   "Item", False], "Mouse"], 
                 ImageSize -> {{560., Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["electric-field-strength", 
                    Style[
                    "electric-field-strength", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["electric-field-strength"]}, 1]]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["electric-field-strength"]}, "RowHeader", False], 
                  "Mouse"], ImageSize -> {{515.2, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Pane[
                 Annotation["volt per meter", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["electric-field-strength"], 
                    Key["name-of-coherent-derived-unit"]}, "Item", False], 
                  "Mouse"], ImageSize -> {{280., Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation["V \!\(\*SuperscriptBox[\(m\), \(-1\)]\)", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["electric-field-strength"], 
                    Key["symbol"]}, "Item", False], "Mouse"], 
                 ImageSize -> {{560., Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation[
                 "kg m \!\(\*SuperscriptBox[\(s\), \(-3\)]\) \
\!\(\*SuperscriptBox[\(A\), \(-1\)]\)", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["electric-field-strength"], 
                    Key["derived-unit-expressed-in-terms-of-base-units"]}, 
                   "Item", False], "Mouse"], 
                 ImageSize -> {{560., Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["electric-charge-density", 
                    Style[
                    "electric-charge-density", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["electric-charge-density"]}, 1]]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["electric-charge-density"]}, "RowHeader", False], 
                  "Mouse"], ImageSize -> {{515.2, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Pane[
                 Annotation["coulomb per cubic meter", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["electric-charge-density"], 
                    Key["name-of-coherent-derived-unit"]}, "Item", False], 
                  "Mouse"], ImageSize -> {{280., Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation["C \!\(\*SuperscriptBox[\(m\), \(-3\)]\)", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["electric-charge-density"], 
                    Key["symbol"]}, "Item", False], "Mouse"], 
                 ImageSize -> {{560., Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation["A s \!\(\*SuperscriptBox[\(m\), \(-3\)]\)", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["electric-charge-density"], 
                    Key["derived-unit-expressed-in-terms-of-base-units"]}, 
                   "Item", False], "Mouse"], 
                 ImageSize -> {{560., Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["surface-charge-density", 
                    Style[
                    "surface-charge-density", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["surface-charge-density"]}, 1]]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["surface-charge-density"]}, "RowHeader", False], 
                  "Mouse"], ImageSize -> {{515.2, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Pane[
                 Annotation["coulomb per square meter", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["surface-charge-density"], 
                    Key["name-of-coherent-derived-unit"]}, "Item", False], 
                  "Mouse"], ImageSize -> {{280., Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation["C \!\(\*SuperscriptBox[\(m\), \(-2\)]\)", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["surface-charge-density"], 
                    Key["symbol"]}, "Item", False], "Mouse"], 
                 ImageSize -> {{560., Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation["A s \!\(\*SuperscriptBox[\(m\), \(-2\)]\)", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["surface-charge-density"], 
                    Key["derived-unit-expressed-in-terms-of-base-units"]}, 
                   "Item", False], "Mouse"], 
                 ImageSize -> {{560., Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover[
                    "electric-flux-density-or-electric-displacement", 
                    Style[
                    "electric-flux-density-or-electric-displacement", 
                    FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["electric-flux-density-or-electric-displacement"]}, 
                    1]]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["electric-flux-density-or-electric-displacement"]}, 
                   "RowHeader", False], "Mouse"], 
                 ImageSize -> {{515.2, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Pane[
                 Annotation["coulomb per square meter", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["electric-flux-density-or-electric-displacement"], 
                    Key["name-of-coherent-derived-unit"]}, "Item", False], 
                  "Mouse"], ImageSize -> {{280., Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation["C \!\(\*SuperscriptBox[\(m\), \(-2\)]\)", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["electric-flux-density-or-electric-displacement"], 
                    Key["symbol"]}, "Item", False], "Mouse"], 
                 ImageSize -> {{560., Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation["A s \!\(\*SuperscriptBox[\(m\), \(-2\)]\)", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["electric-flux-density-or-electric-displacement"], 
                    Key["derived-unit-expressed-in-terms-of-base-units"]}, 
                   "Item", False], "Mouse"], 
                 ImageSize -> {{560., Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["permittivity", 
                    Style[
                    "permittivity", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["permittivity"]}, 1]]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["permittivity"]}, "RowHeader", False], "Mouse"], 
                 ImageSize -> {{515.2, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Pane[
                 Annotation["farad per meter", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["permittivity"], 
                    Key["name-of-coherent-derived-unit"]}, "Item", False], 
                  "Mouse"], ImageSize -> {{280., Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation["F \!\(\*SuperscriptBox[\(m\), \(-1\)]\)", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["permittivity"], 
                    Key["symbol"]}, "Item", False], "Mouse"], 
                 ImageSize -> {{560., Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation[
                 "\!\(\*SuperscriptBox[\(kg\), \(-1\)]\) \
\!\(\*SuperscriptBox[\(m\), \(-3\)]\) \!\(\*SuperscriptBox[\(s\), \(4\)]\) \!\
\(\*SuperscriptBox[\(A\), \(2\)]\)", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["permittivity"], 
                    Key["derived-unit-expressed-in-terms-of-base-units"]}, 
                   "Item", False], "Mouse"], 
                 ImageSize -> {{560., Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["permeability", 
                    Style[
                    "permeability", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["permeability"]}, 1]]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["permeability"]}, "RowHeader", False], "Mouse"], 
                 ImageSize -> {{515.2, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Pane[
                 Annotation["henry per meter", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["permeability"], 
                    Key["name-of-coherent-derived-unit"]}, "Item", False], 
                  "Mouse"], ImageSize -> {{280., Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation["H \!\(\*SuperscriptBox[\(m\), \(-1\)]\)", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["permeability"], 
                    Key["symbol"]}, "Item", False], "Mouse"], 
                 ImageSize -> {{560., Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation[
                 "kg m \!\(\*SuperscriptBox[\(s\), \(-2\)]\) \
\!\(\*SuperscriptBox[\(A\), \(-2\)]\)", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["permeability"], 
                    Key["derived-unit-expressed-in-terms-of-base-units"]}, 
                   "Item", False], "Mouse"], 
                 ImageSize -> {{560., Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["molar-energy", 
                    Style[
                    "molar-energy", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["molar-energy"]}, 1]]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["molar-energy"]}, "RowHeader", False], "Mouse"], 
                 ImageSize -> {{515.2, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Pane[
                 Annotation["joule per mole", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["molar-energy"], 
                    Key["name-of-coherent-derived-unit"]}, "Item", False], 
                  "Mouse"], ImageSize -> {{280., Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation["J \!\(\*SuperscriptBox[\(mol\), \(-1\)]\)", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["molar-energy"], 
                    Key["symbol"]}, "Item", False], "Mouse"], 
                 ImageSize -> {{560., Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation[
                 "kg \!\(\*SuperscriptBox[\(m\), \(2\)]\) \
\!\(\*SuperscriptBox[\(s\), \(-2\)]\) \!\(\*SuperscriptBox[\(mol\), \
\(-1\)]\)", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["molar-energy"], 
                    Key["derived-unit-expressed-in-terms-of-base-units"]}, 
                   "Item", False], "Mouse"], 
                 ImageSize -> {{560., Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["molar-entropy-or-molar-heat-capacity", 
                    Style[
                    "molar-entropy-or-molar-heat-capacity", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["molar-entropy-or-molar-heat-capacity"]}, 1]]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["molar-entropy-or-molar-heat-capacity"]}, "RowHeader",
                    False], "Mouse"], ImageSize -> {{515.2, Full}, Automatic},
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Pane[
                 Annotation["joule per mole kelvin", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["molar-entropy-or-molar-heat-capacity"], 
                    Key["name-of-coherent-derived-unit"]}, "Item", False], 
                  "Mouse"], ImageSize -> {{280., Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation[
                 "J \!\(\*SuperscriptBox[\(K\), \(-1\)]\) \
\!\(\*SuperscriptBox[\(mol\), \(-1\)]\)", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["molar-entropy-or-molar-heat-capacity"], 
                    Key["symbol"]}, "Item", False], "Mouse"], 
                 ImageSize -> {{560., Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation[
                 "kg \!\(\*SuperscriptBox[\(m\), \(2\)]\) \
\!\(\*SuperscriptBox[\(s\), \(-2\)]\) \!\(\*SuperscriptBox[\(mol\), \(-1\)]\) \
\!\(\*SuperscriptBox[\(K\), \(-1\)]\)", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["molar-entropy-or-molar-heat-capacity"], 
                    Key["derived-unit-expressed-in-terms-of-base-units"]}, 
                   "Item", False], "Mouse"], 
                 ImageSize -> {{560., Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["exposure(x-and-\[Gamma]-rays)", 
                    Style[
                    "exposure(x-and-\[Gamma]-rays)", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["exposure(x-and-\[Gamma]-rays)"]}, 1]]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["exposure(x-and-\[Gamma]-rays)"]}, "RowHeader", 
                   False], "Mouse"], ImageSize -> {{515.2, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Pane[
                 Annotation["coulomb per kilogram", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["exposure(x-and-\[Gamma]-rays)"], 
                    Key["name-of-coherent-derived-unit"]}, "Item", False], 
                  "Mouse"], ImageSize -> {{280., Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation["C \!\(\*SuperscriptBox[\(kg\), \(-1\)]\)", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["exposure(x-and-\[Gamma]-rays)"], 
                    Key["symbol"]}, "Item", False], "Mouse"], 
                 ImageSize -> {{560., Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation["A s \!\(\*SuperscriptBox[\(kg\), \(-1\)]\)", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["exposure(x-and-\[Gamma]-rays)"], 
                    Key["derived-unit-expressed-in-terms-of-base-units"]}, 
                   "Item", False], "Mouse"], 
                 ImageSize -> {{560., Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}]}, {
               Item[
                Deploy[
                 Pane[
                  Row[{
                    Spacer[2], 
                    Style[
                    Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + (-20) 
                    If[True, 24, 1], {1, 24 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + (-20) 
                    If[False, 24, 1], {1, 24 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], " ", 
                    Style[
                    Mouseover[
                    Style[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[24, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    Style[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[24, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 30, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100000000, {}]], MenuEvaluator -> Automatic]}], 
                    " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[False, 24, 1], {1, 24 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[True, 24, 1], {1, 24 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None]}], ContextMenu -> {}]}], 
                  ImageMargins -> {{0, -1}, {-1, 1}}]], Background -> 
                RGBColor[
                 0.9764705882352941, 0.9764705882352941, 0.9764705882352941], 
                Alignment -> {Left, Top}], SpanFromLeft, SpanFromLeft, 
               SpanFromLeft}}, 
             BaseStyle -> {
              ContextMenu -> 
               Dynamic[
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                 Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                   TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                   TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                    True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                   TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                    Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
               "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, 
             Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
             Spacings -> {0, 0}, Alignment -> Left, 
             BaseStyle -> {
              FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
               Plain}], LineBreakWithin -> False, ContextMenu -> {}, 
            NumberMarks -> False, ShowAutoStyles -> False]], 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
        Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
            Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
            
            Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
              TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
              TypeSystem`NestedGrid`PackagePrivate`datasetData[
               TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
               Not[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
          TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
          TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
            FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
            TypeSystem`SparseGrid[
             TypeSystem`H["(data no longer present)"]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
         TrackedSymbols :> {
          TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
           TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
        DynamicModuleValues :> {}], 
       TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
         TypeSystem`PackageScope`SubViewPathbar[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, 
          TypeSystem`NestedGrid`PackagePrivate`updateState[
          TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
           TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
           TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
        TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
       TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
        Framed[
         Dynamic[
          Replace[
          TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
           TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
              Blank[]] -> "", 
            TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
              Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
               Blank[]], 
              Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
               Blank[]], 
              Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
               Blank[]]] :> (
             Increment[
              TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
             TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
              TypeSystem`NestedGrid`PackagePrivate`path$; 
             TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
              TypeSystem`NestedGrid`PackagePrivate`pathType$; 
             TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
              TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
             TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
               TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
             TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
              TypeSystem`NestedGrid`PackagePrivate`path$, 
               TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
            Spacer[10], Blank[] :> Spacer[10]}], 
          TrackedSymbols :> {
           TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
         FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
         Top, ImageSize -> {Automatic, 15}], FontSize -> 1], 
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
       DynamicWrapperBox[
        DynamicBox[ToBoxes[
          Dataset`DatasetContent[
          2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
           "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], 
           "State" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
           "VPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], 
           "HPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], 
           "TopBar" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
           "BottomBar" -> 
           Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], 
           "OutputID" -> Hold[
             TypeSystem`NestedGrid`PackagePrivate`localHold[
             TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], 
          StandardForm],
         ImageSizeCache->{1967., {299.6340332872234, 305.3659667127766}},
         TrackedSymbols:>{
          TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
        MouseAnnotation[],
        ImageSizeCache->{1967., {299.6340332872234, 305.3659667127766}}],
       BaseStyle->{LineBreakWithin -> False},
       DynamicModuleValues:>{},
       Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
        CreateUUID[]),
       UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
      Deploy,
      DefaultBaseStyle->"Deploy"],
     Dataset`InterpretDataset[1],
     Editable->False,
     SelectWithContents->True,
     Selectable->False]}], ",", 
   RowBox[{"\<\"Dataset\"\>", "\[Rule]", 
    TagBox[
     TagBox[
      DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
       "InitialData" -> <|
         "hyperfine-transition-frequency-of-Cs" -> <|
           "numerical-value" -> 9192631770, "unit" -> "Hz"|>, 
          "speed-of-light-in-vacuum" -> <|
           "numerical-value" -> 299792458, "unit" -> 
            "m \!\(\*SuperscriptBox[\(s\), \(-1\)]\)"|>, 
          "Planck-constant" -> <|
           "numerical-value" -> 6.6260701500000015`*^-34, "unit" -> "J s"|>, 
          "elementary-charge" -> <|
           "numerical-value" -> 1.6021766340000001`*^-19, "unit" -> "C"|>, 
          "Boltzmann-constant" -> <|
           "numerical-value" -> 1.380649*^-23, "unit" -> 
            "J \!\(\*SuperscriptBox[\(K\), \(-1\)]\)"|>, 
          "Avogadro-constant" -> <|
           "numerical-value" -> 6.02214076*^23, "unit" -> 
            "\!\(\*SuperscriptBox[\(mol\), \(-1\)]\)"|>, 
          "luminous-efficacy" -> <|
           "numerical-value" -> 683, "unit" -> 
            "lm \!\(\*SuperscriptBox[\(W\), \(-1\)]\)"|>|>, "AllowEmbedding" -> 
        True, "InitialShape" -> TypeSystem`PackageScope`HeaderShape[<|{All, 
             TypeSystem`PackageScope`KeyDummy[16]} -> 
           1, {All, "numerical-value"} -> 1, {All, "unit"} -> 1|>, 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`ColumnShape[
            TypeSystem`PackageScope`KeyValueShape[
             TypeSystem`PackageScope`AtomShape[403.20000000000005`], 
             TypeSystem`PackageScope`Limited[
              
              TypeSystem`PackageScope`RowShape[<|
               "numerical-value" -> TypeSystem`PackageScope`AtomShape[60], 
                "unit" -> TypeSystem`PackageScope`AtomShape[
                 358.40000000000003`]|>], 
              DirectedInfinity[1], 2, {All}]]], 7, 
           DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Assoc[
          TypeSystem`Atom[String], 
          TypeSystem`Struct[{"numerical-value", "unit"}, {
            TypeSystem`Atom[Real], 
            TypeSystem`Atom[String]}], 7], "Meta" -> <||>, "RowTarget" -> 20, 
        "ColumnTarget" -> 10, "Shape" -> 
        TypeSystem`PackageScope`HeaderShape[<|{All, 
             TypeSystem`PackageScope`KeyDummy[16]} -> 
           1, {All, "numerical-value"} -> 1, {All, "unit"} -> 1|>, 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`ColumnShape[
            TypeSystem`PackageScope`KeyValueShape[
             TypeSystem`PackageScope`AtomShape[403.20000000000005`], 
             TypeSystem`PackageScope`Limited[
              
              TypeSystem`PackageScope`RowShape[<|
               "numerical-value" -> TypeSystem`PackageScope`AtomShape[60], 
                "unit" -> TypeSystem`PackageScope`AtomShape[
                 358.40000000000003`]|>], 
              DirectedInfinity[1], 2, {All}]]], 7, 
           DirectedInfinity[1], {}]], "Type" -> TypeSystem`Assoc[
          TypeSystem`Atom[String], 
          TypeSystem`Struct[{"numerical-value", "unit"}, {
            TypeSystem`Atom[Real], 
            TypeSystem`Atom[String]}], 7], "Path" -> {}, "DisplayedRowCount" -> 
        7, "DisplayedColumnCount" -> 2, "DataRowCount" -> 7, 
        "DataColumnCount" -> 2, "SortPaths" -> {}, "SortDirections" -> {}, 
        "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
       TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
       TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
       TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
       DynamicModule[{
        TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
           Style[
            Grid[{{
               Item[
                Pane[
                 Annotation[
                  Mouseover[
                   
                   Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                    Scaled[-0.15]], 
                   Graphics[{
                    GrayLevel[0.6], 
                    
                    Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
                    Rational[-1, 2]}}]}, ImageSize -> 6, BaselinePosition -> 
                    Scaled[-0.15]]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   All, Keys}, "KeyDummy", True], "Mouse"], 
                 ImageSize -> {{1, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["numerical-value", 
                    Style[
                    "numerical-value", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "numerical-value"}, 1]]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   All, "numerical-value"}, "ColumnHeader", True], "Mouse"], 
                 ImageSize -> {{1, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["unit", 
                    Style[
                    "unit", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "unit"}, 1]]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   All, "unit"}, "ColumnHeader", True], "Mouse"], 
                 ImageSize -> {{1, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["hyperfine-transition-frequency-of-Cs", 
                    Style[
                    "hyperfine-transition-frequency-of-Cs", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["hyperfine-transition-frequency-of-Cs"]}, 1]]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["hyperfine-transition-frequency-of-Cs"]}, "RowHeader",
                    False], "Mouse"], 
                 ImageSize -> {{403.20000000000005`, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Pane[
                 Annotation[
                  RawBoxes["9192631770"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["hyperfine-transition-frequency-of-Cs"], 
                    Key["numerical-value"]}, "Item", False], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation["Hz", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["hyperfine-transition-frequency-of-Cs"], 
                    Key["unit"]}, "Item", False], "Mouse"], 
                 ImageSize -> {{358.40000000000003`, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["speed-of-light-in-vacuum", 
                    Style[
                    "speed-of-light-in-vacuum", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["speed-of-light-in-vacuum"]}, 1]]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["speed-of-light-in-vacuum"]}, "RowHeader", False], 
                  "Mouse"], 
                 ImageSize -> {{403.20000000000005`, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Pane[
                 Annotation[
                  RawBoxes["299792458"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["speed-of-light-in-vacuum"], 
                    Key["numerical-value"]}, "Item", False], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation["m \!\(\*SuperscriptBox[\(s\), \(-1\)]\)", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["speed-of-light-in-vacuum"], 
                    Key["unit"]}, "Item", False], "Mouse"], 
                 ImageSize -> {{358.40000000000003`, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["Planck-constant", 
                    Style[
                    "Planck-constant", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Planck-constant"]}, 1]]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Planck-constant"]}, "RowHeader", False], "Mouse"], 
                 ImageSize -> {{403.20000000000005`, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Pane[
                 Annotation[
                  RawBoxes["0.000000000000000000000000000000000662607"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Planck-constant"], 
                    Key["numerical-value"]}, "Item", False], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation["J s", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Planck-constant"], 
                    Key["unit"]}, "Item", False], "Mouse"], 
                 ImageSize -> {{358.40000000000003`, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["elementary-charge", 
                    Style[
                    "elementary-charge", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["elementary-charge"]}, 1]]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["elementary-charge"]}, "RowHeader", False], "Mouse"], 
                 ImageSize -> {{403.20000000000005`, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Pane[
                 Annotation[
                  RawBoxes["0.000000000000000000160218"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["elementary-charge"], 
                    Key["numerical-value"]}, "Item", False], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation["C", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["elementary-charge"], 
                    Key["unit"]}, "Item", False], "Mouse"], 
                 ImageSize -> {{358.40000000000003`, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["Boltzmann-constant", 
                    Style[
                    "Boltzmann-constant", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Boltzmann-constant"]}, 1]]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Boltzmann-constant"]}, "RowHeader", False], "Mouse"],
                  ImageSize -> {{403.20000000000005`, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Pane[
                 Annotation[
                  RawBoxes["0.0000000000000000000000138065"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Boltzmann-constant"], 
                    Key["numerical-value"]}, "Item", False], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation["J \!\(\*SuperscriptBox[\(K\), \(-1\)]\)", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Boltzmann-constant"], 
                    Key["unit"]}, "Item", False], "Mouse"], 
                 ImageSize -> {{358.40000000000003`, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["Avogadro-constant", 
                    Style[
                    "Avogadro-constant", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Avogadro-constant"]}, 1]]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Avogadro-constant"]}, "RowHeader", False], "Mouse"], 
                 ImageSize -> {{403.20000000000005`, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Pane[
                 Annotation[
                  RawBoxes["602214000000000000000000."], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Avogadro-constant"], 
                    Key["numerical-value"]}, "Item", False], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation["\!\(\*SuperscriptBox[\(mol\), \(-1\)]\)", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Avogadro-constant"], 
                    Key["unit"]}, "Item", False], "Mouse"], 
                 ImageSize -> {{358.40000000000003`, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["luminous-efficacy", 
                    Style[
                    "luminous-efficacy", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["luminous-efficacy"]}, 1]]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["luminous-efficacy"]}, "RowHeader", False], "Mouse"], 
                 ImageSize -> {{403.20000000000005`, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Pane[
                 Annotation[
                  RawBoxes["683"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["luminous-efficacy"], 
                    Key["numerical-value"]}, "Item", False], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation["lm \!\(\*SuperscriptBox[\(W\), \(-1\)]\)", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["luminous-efficacy"], 
                    Key["unit"]}, "Item", False], "Mouse"], 
                 ImageSize -> {{358.40000000000003`, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}]}}, 
             BaseStyle -> {
              ContextMenu -> 
               Dynamic[
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                 Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                   TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                   TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                    True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                   TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                    Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
               "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, 
             Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
             Spacings -> {0, 0}, Alignment -> Left, 
             BaseStyle -> {
              FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
               Plain}], LineBreakWithin -> False, ContextMenu -> {}, 
            NumberMarks -> False, ShowAutoStyles -> False]], 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
        Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
            Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
            
            Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
              TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
              TypeSystem`NestedGrid`PackagePrivate`datasetData[
               TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
               Not[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
          TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
          TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
            FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
            TypeSystem`SparseGrid[
             TypeSystem`H["(data no longer present)"]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
         TrackedSymbols :> {
          TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
           TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
        DynamicModuleValues :> {}], 
       TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
         TypeSystem`PackageScope`SubViewPathbar[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, 
          TypeSystem`NestedGrid`PackagePrivate`updateState[
          TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
           TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
           TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
        TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
       TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
        Framed[
         Dynamic[
          Replace[
          TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
           TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
              Blank[]] -> "", 
            TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
              Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
               Blank[]], 
              Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
               Blank[]], 
              Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
               Blank[]]] :> (
             Increment[
              TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
             TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
              TypeSystem`NestedGrid`PackagePrivate`path$; 
             TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
              TypeSystem`NestedGrid`PackagePrivate`pathType$; 
             TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
              TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
             TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
               TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
             TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
              TypeSystem`NestedGrid`PackagePrivate`path$, 
               TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
            Spacer[10], Blank[] :> Spacer[10]}], 
          TrackedSymbols :> {
           TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
         FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
         Top, ImageSize -> {Automatic, 15}], FontSize -> 1], 
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
       DynamicWrapperBox[
        DynamicBox[ToBoxes[
          Dataset`DatasetContent[
          2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
           "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], 
           "State" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
           "VPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], 
           "HPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], 
           "TopBar" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
           "BottomBar" -> 
           Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], 
           "OutputID" -> Hold[
             TypeSystem`NestedGrid`PackagePrivate`localHold[
             TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], 
          StandardForm],
         ImageSizeCache->{1069., {113.63403328722343`, 119.36596671277657`}},
         TrackedSymbols:>{
          TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
        MouseAnnotation[],
        ImageSizeCache->{1069., {113.63403328722343`, 119.36596671277657`}}],
       BaseStyle->{LineBreakWithin -> False},
       DynamicModuleValues:>{},
       Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
        CreateUUID[]),
       UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
      Deploy,
      DefaultBaseStyle->"Deploy"],
     Dataset`InterpretDataset[1],
     Editable->False,
     SelectWithContents->True,
     Selectable->False]}], ",", 
   RowBox[{"\<\"defining-constants-of-the-SI\"\>", "\[Rule]", 
    TagBox[
     TagBox[
      DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
       "InitialData" -> <|
         "hyperfine-transition-frequency-of-Cs" -> <|
           "numerical-value" -> 9192631770, "unit" -> "Hz"|>, 
          "speed-of-light-in-vacuum" -> <|
           "numerical-value" -> 299792458, "unit" -> 
            "m \!\(\*SuperscriptBox[\(s\), \(-1\)]\)"|>, 
          "Planck-constant" -> <|
           "numerical-value" -> 6.6260701500000015`*^-34, "unit" -> "J s"|>, 
          "elementary-charge" -> <|
           "numerical-value" -> 1.6021766340000001`*^-19, "unit" -> "C"|>, 
          "Boltzmann-constant" -> <|
           "numerical-value" -> 1.380649*^-23, "unit" -> 
            "J \!\(\*SuperscriptBox[\(K\), \(-1\)]\)"|>, 
          "Avogadro-constant" -> <|
           "numerical-value" -> 6.02214076*^23, "unit" -> 
            "\!\(\*SuperscriptBox[\(mol\), \(-1\)]\)"|>, 
          "luminous-efficacy" -> <|
           "numerical-value" -> 683, "unit" -> 
            "lm \!\(\*SuperscriptBox[\(W\), \(-1\)]\)"|>|>, "AllowEmbedding" -> 
        True, "InitialShape" -> TypeSystem`PackageScope`HeaderShape[<|{All, 
             TypeSystem`PackageScope`KeyDummy[17]} -> 
           1, {All, "numerical-value"} -> 1, {All, "unit"} -> 1|>, 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`ColumnShape[
            TypeSystem`PackageScope`KeyValueShape[
             TypeSystem`PackageScope`AtomShape[403.20000000000005`], 
             TypeSystem`PackageScope`Limited[
              
              TypeSystem`PackageScope`RowShape[<|
               "numerical-value" -> TypeSystem`PackageScope`AtomShape[60], 
                "unit" -> TypeSystem`PackageScope`AtomShape[
                 358.40000000000003`]|>], 
              DirectedInfinity[1], 2, {All}]]], 7, 
           DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Assoc[
          TypeSystem`Atom[String], 
          TypeSystem`Struct[{"numerical-value", "unit"}, {
            TypeSystem`Atom[Real], 
            TypeSystem`Atom[String]}], 7], "Meta" -> <||>, "RowTarget" -> 20, 
        "ColumnTarget" -> 10, "Shape" -> 
        TypeSystem`PackageScope`HeaderShape[<|{All, 
             TypeSystem`PackageScope`KeyDummy[17]} -> 
           1, {All, "numerical-value"} -> 1, {All, "unit"} -> 1|>, 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`ColumnShape[
            TypeSystem`PackageScope`KeyValueShape[
             TypeSystem`PackageScope`AtomShape[403.20000000000005`], 
             TypeSystem`PackageScope`Limited[
              
              TypeSystem`PackageScope`RowShape[<|
               "numerical-value" -> TypeSystem`PackageScope`AtomShape[60], 
                "unit" -> TypeSystem`PackageScope`AtomShape[
                 358.40000000000003`]|>], 
              DirectedInfinity[1], 2, {All}]]], 7, 
           DirectedInfinity[1], {}]], "Type" -> TypeSystem`Assoc[
          TypeSystem`Atom[String], 
          TypeSystem`Struct[{"numerical-value", "unit"}, {
            TypeSystem`Atom[Real], 
            TypeSystem`Atom[String]}], 7], "Path" -> {}, "DisplayedRowCount" -> 
        7, "DisplayedColumnCount" -> 2, "DataRowCount" -> 7, 
        "DataColumnCount" -> 2, "SortPaths" -> {}, "SortDirections" -> {}, 
        "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
       TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
       TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
       TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
       DynamicModule[{
        TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
           Style[
            Grid[{{
               Item[
                Pane[
                 Annotation[
                  Mouseover[
                   
                   Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                    Scaled[-0.15]], 
                   Graphics[{
                    GrayLevel[0.6], 
                    
                    Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
                    Rational[-1, 2]}}]}, ImageSize -> 6, BaselinePosition -> 
                    Scaled[-0.15]]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   All, Keys}, "KeyDummy", True], "Mouse"], 
                 ImageSize -> {{1, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["numerical-value", 
                    Style[
                    "numerical-value", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "numerical-value"}, 1]]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   All, "numerical-value"}, "ColumnHeader", True], "Mouse"], 
                 ImageSize -> {{1, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["unit", 
                    Style[
                    "unit", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "unit"}, 1]]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   All, "unit"}, "ColumnHeader", True], "Mouse"], 
                 ImageSize -> {{1, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["hyperfine-transition-frequency-of-Cs", 
                    Style[
                    "hyperfine-transition-frequency-of-Cs", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["hyperfine-transition-frequency-of-Cs"]}, 1]]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["hyperfine-transition-frequency-of-Cs"]}, "RowHeader",
                    False], "Mouse"], 
                 ImageSize -> {{403.20000000000005`, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Pane[
                 Annotation[
                  RawBoxes["9192631770"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["hyperfine-transition-frequency-of-Cs"], 
                    Key["numerical-value"]}, "Item", False], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation["Hz", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["hyperfine-transition-frequency-of-Cs"], 
                    Key["unit"]}, "Item", False], "Mouse"], 
                 ImageSize -> {{358.40000000000003`, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["speed-of-light-in-vacuum", 
                    Style[
                    "speed-of-light-in-vacuum", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["speed-of-light-in-vacuum"]}, 1]]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["speed-of-light-in-vacuum"]}, "RowHeader", False], 
                  "Mouse"], 
                 ImageSize -> {{403.20000000000005`, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Pane[
                 Annotation[
                  RawBoxes["299792458"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["speed-of-light-in-vacuum"], 
                    Key["numerical-value"]}, "Item", False], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation["m \!\(\*SuperscriptBox[\(s\), \(-1\)]\)", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["speed-of-light-in-vacuum"], 
                    Key["unit"]}, "Item", False], "Mouse"], 
                 ImageSize -> {{358.40000000000003`, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["Planck-constant", 
                    Style[
                    "Planck-constant", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Planck-constant"]}, 1]]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Planck-constant"]}, "RowHeader", False], "Mouse"], 
                 ImageSize -> {{403.20000000000005`, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Pane[
                 Annotation[
                  RawBoxes["0.000000000000000000000000000000000662607"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Planck-constant"], 
                    Key["numerical-value"]}, "Item", False], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation["J s", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Planck-constant"], 
                    Key["unit"]}, "Item", False], "Mouse"], 
                 ImageSize -> {{358.40000000000003`, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["elementary-charge", 
                    Style[
                    "elementary-charge", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["elementary-charge"]}, 1]]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["elementary-charge"]}, "RowHeader", False], "Mouse"], 
                 ImageSize -> {{403.20000000000005`, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Pane[
                 Annotation[
                  RawBoxes["0.000000000000000000160218"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["elementary-charge"], 
                    Key["numerical-value"]}, "Item", False], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation["C", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["elementary-charge"], 
                    Key["unit"]}, "Item", False], "Mouse"], 
                 ImageSize -> {{358.40000000000003`, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["Boltzmann-constant", 
                    Style[
                    "Boltzmann-constant", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Boltzmann-constant"]}, 1]]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Boltzmann-constant"]}, "RowHeader", False], "Mouse"],
                  ImageSize -> {{403.20000000000005`, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Pane[
                 Annotation[
                  RawBoxes["0.0000000000000000000000138065"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Boltzmann-constant"], 
                    Key["numerical-value"]}, "Item", False], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation["J \!\(\*SuperscriptBox[\(K\), \(-1\)]\)", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Boltzmann-constant"], 
                    Key["unit"]}, "Item", False], "Mouse"], 
                 ImageSize -> {{358.40000000000003`, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["Avogadro-constant", 
                    Style[
                    "Avogadro-constant", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Avogadro-constant"]}, 1]]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Avogadro-constant"]}, "RowHeader", False], "Mouse"], 
                 ImageSize -> {{403.20000000000005`, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Pane[
                 Annotation[
                  RawBoxes["602214000000000000000000."], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Avogadro-constant"], 
                    Key["numerical-value"]}, "Item", False], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation["\!\(\*SuperscriptBox[\(mol\), \(-1\)]\)", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Avogadro-constant"], 
                    Key["unit"]}, "Item", False], "Mouse"], 
                 ImageSize -> {{358.40000000000003`, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["luminous-efficacy", 
                    Style[
                    "luminous-efficacy", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["luminous-efficacy"]}, 1]]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["luminous-efficacy"]}, "RowHeader", False], "Mouse"], 
                 ImageSize -> {{403.20000000000005`, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Pane[
                 Annotation[
                  RawBoxes["683"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["luminous-efficacy"], 
                    Key["numerical-value"]}, "Item", False], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation["lm \!\(\*SuperscriptBox[\(W\), \(-1\)]\)", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["luminous-efficacy"], 
                    Key["unit"]}, "Item", False], "Mouse"], 
                 ImageSize -> {{358.40000000000003`, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}]}}, 
             BaseStyle -> {
              ContextMenu -> 
               Dynamic[
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                 Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                   TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                   TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                    True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                   TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                    Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
               "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, 
             Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
             Spacings -> {0, 0}, Alignment -> Left, 
             BaseStyle -> {
              FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
               Plain}], LineBreakWithin -> False, ContextMenu -> {}, 
            NumberMarks -> False, ShowAutoStyles -> False]], 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
        Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
            Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
            
            Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
              TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
              TypeSystem`NestedGrid`PackagePrivate`datasetData[
               TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
               Not[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
          TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
          TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
            FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
            TypeSystem`SparseGrid[
             TypeSystem`H["(data no longer present)"]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
         TrackedSymbols :> {
          TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
           TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
        DynamicModuleValues :> {}], 
       TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
         TypeSystem`PackageScope`SubViewPathbar[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, 
          TypeSystem`NestedGrid`PackagePrivate`updateState[
          TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
           TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
           TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
        TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
       TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
        Framed[
         Dynamic[
          Replace[
          TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
           TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
              Blank[]] -> "", 
            TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
              Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
               Blank[]], 
              Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
               Blank[]], 
              Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
               Blank[]]] :> (
             Increment[
              TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
             TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
              TypeSystem`NestedGrid`PackagePrivate`path$; 
             TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
              TypeSystem`NestedGrid`PackagePrivate`pathType$; 
             TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
              TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
             TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
               TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
             TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
              TypeSystem`NestedGrid`PackagePrivate`path$, 
               TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
            Spacer[10], Blank[] :> Spacer[10]}], 
          TrackedSymbols :> {
           TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
         FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
         Top, ImageSize -> {Automatic, 15}], FontSize -> 1], 
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
       DynamicWrapperBox[
        DynamicBox[ToBoxes[
          Dataset`DatasetContent[
          2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
           "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], 
           "State" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
           "VPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], 
           "HPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], 
           "TopBar" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
           "BottomBar" -> 
           Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], 
           "OutputID" -> Hold[
             TypeSystem`NestedGrid`PackagePrivate`localHold[
             TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], 
          StandardForm],
         ImageSizeCache->{1069., {113.63403328722343`, 119.36596671277657`}},
         TrackedSymbols:>{
          TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
        MouseAnnotation[],
        ImageSizeCache->{1069., {113.63403328722343`, 119.36596671277657`}}],
       BaseStyle->{LineBreakWithin -> False},
       DynamicModuleValues:>{},
       Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
        CreateUUID[]),
       UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
      Deploy,
      DefaultBaseStyle->"Deploy"],
     Dataset`InterpretDataset[1],
     Editable->False,
     SelectWithContents->True,
     Selectable->False]}], ",", 
   RowBox[{"\<\"RawData\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"hyperfine-transition-frequency-of-Cs\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", 
        RowBox[{
         RowBox[{"\<\"numerical-value\"\>", "\[Rule]", "9192631770"}], ",", 
         RowBox[{"\<\"unit\"\>", "\[Rule]", "\<\"Hz\"\>"}]}], 
        "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"speed-of-light-in-vacuum\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", 
        RowBox[{
         RowBox[{"\<\"numerical-value\"\>", "\[Rule]", "299792458"}], ",", 
         RowBox[{"\<\"unit\"\>", 
          "\[Rule]", "\<\"m \\!\\(\\*SuperscriptBox[\\(s\\), \
\\(-1\\)]\\)\"\>"}]}], "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"Planck-constant\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", 
        RowBox[{
         RowBox[{"\<\"numerical-value\"\>", "\[Rule]", 
          "6.6260701500000015`*^-34"}], ",", 
         RowBox[{"\<\"unit\"\>", "\[Rule]", "\<\"J s\"\>"}]}], 
        "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"elementary-charge\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", 
        RowBox[{
         RowBox[{"\<\"numerical-value\"\>", "\[Rule]", 
          "1.6021766340000001`*^-19"}], ",", 
         RowBox[{"\<\"unit\"\>", "\[Rule]", "\<\"C\"\>"}]}], 
        "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"Boltzmann-constant\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", 
        RowBox[{
         RowBox[{"\<\"numerical-value\"\>", "\[Rule]", "1.380649`*^-23"}], 
         ",", 
         RowBox[{"\<\"unit\"\>", 
          "\[Rule]", "\<\"J \\!\\(\\*SuperscriptBox[\\(K\\), \
\\(-1\\)]\\)\"\>"}]}], "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"Avogadro-constant\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", 
        RowBox[{
         RowBox[{"\<\"numerical-value\"\>", "\[Rule]", "6.02214076`*^23"}], 
         ",", 
         RowBox[{"\<\"unit\"\>", 
          "\[Rule]", "\<\"\\!\\(\\*SuperscriptBox[\\(mol\\), \
\\(-1\\)]\\)\"\>"}]}], "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"luminous-efficacy\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", 
        RowBox[{
         RowBox[{"\<\"numerical-value\"\>", "\[Rule]", "683"}], ",", 
         RowBox[{"\<\"unit\"\>", 
          "\[Rule]", "\<\"lm \\!\\(\\*SuperscriptBox[\\(W\\), \
\\(-1\\)]\\)\"\>"}]}], "\[RightAssociation]"}]}]}], "\[RightAssociation]"}]}],
    ",", 
   RowBox[{"\<\"SI-prefixes\"\>", "\[Rule]", 
    TagBox[
     TagBox[
      DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
       "InitialData" -> <|
         "\!\(\*SuperscriptBox[\(10\), \(3\)]\)" -> <|
           "factor" -> "\!\(\*SuperscriptBox[\(10\), \(3\)]\)", "name" -> 
            "kilo", "symbol" -> "k"|>, 
          "\!\(\*SuperscriptBox[\(10\), \(6\)]\)" -> <|
           "factor" -> "\!\(\*SuperscriptBox[\(10\), \(6\)]\)", "name" -> 
            "mega", "symbol" -> "M"|>, 
          "\!\(\*SuperscriptBox[\(10\), \(9\)]\)" -> <|
           "factor" -> "\!\(\*SuperscriptBox[\(10\), \(9\)]\)", "name" -> 
            "giga", "symbol" -> "G"|>, 
          "\!\(\*SuperscriptBox[\(10\), \(12\)]\)" -> <|
           "factor" -> "\!\(\*SuperscriptBox[\(10\), \(12\)]\)", "name" -> 
            "tera", "symbol" -> "T"|>, 
          "\!\(\*SuperscriptBox[\(10\), \(15\)]\)" -> <|
           "factor" -> "\!\(\*SuperscriptBox[\(10\), \(15\)]\)", "name" -> 
            "peta", "symbol" -> "P"|>, 
          "\!\(\*SuperscriptBox[\(10\), \(18\)]\)" -> <|
           "factor" -> "\!\(\*SuperscriptBox[\(10\), \(18\)]\)", "name" -> 
            "exa", "symbol" -> "E"|>, 
          "\!\(\*SuperscriptBox[\(10\), \(21\)]\)" -> <|
           "factor" -> "\!\(\*SuperscriptBox[\(10\), \(21\)]\)", "name" -> 
            "zetta", "symbol" -> "Z"|>, 
          "\!\(\*SuperscriptBox[\(10\), \(24\)]\)" -> <|
           "factor" -> "\!\(\*SuperscriptBox[\(10\), \(24\)]\)", "name" -> 
            "yotta", "symbol" -> "Y"|>, 
          "\!\(\*SuperscriptBox[\(10\), \(-3\)]\)" -> <|
           "factor" -> "\!\(\*SuperscriptBox[\(10\), \(-3\)]\)", "name" -> 
            "milli", "symbol" -> "m"|>, 
          "\!\(\*SuperscriptBox[\(10\), \(-6\)]\)" -> <|
           "factor" -> "\!\(\*SuperscriptBox[\(10\), \(-6\)]\)", "name" -> 
            "micro", "symbol" -> "\[Mu]"|>, 
          "\!\(\*SuperscriptBox[\(10\), \(-9\)]\)" -> <|
           "factor" -> "\!\(\*SuperscriptBox[\(10\), \(-9\)]\)", "name" -> 
            "nano", "symbol" -> "n"|>, 
          "\!\(\*SuperscriptBox[\(10\), \(-12\)]\)" -> <|
           "factor" -> "\!\(\*SuperscriptBox[\(10\), \(-12\)]\)", "name" -> 
            "pico", "symbol" -> "p"|>, 
          "\!\(\*SuperscriptBox[\(10\), \(-15\)]\)" -> <|
           "factor" -> "\!\(\*SuperscriptBox[\(10\), \(-15\)]\)", "name" -> 
            "femto", "symbol" -> "f"|>, 
          "\!\(\*SuperscriptBox[\(10\), \(-18\)]\)" -> <|
           "factor" -> "\!\(\*SuperscriptBox[\(10\), \(-18\)]\)", "name" -> 
            "atto", "symbol" -> "a"|>, 
          "\!\(\*SuperscriptBox[\(10\), \(-21\)]\)" -> <|
           "factor" -> "\!\(\*SuperscriptBox[\(10\), \(-21\)]\)", "name" -> 
            "zepto", "symbol" -> "z"|>, 
          "\!\(\*SuperscriptBox[\(10\), \(-24\)]\)" -> <|
           "factor" -> "\!\(\*SuperscriptBox[\(10\), \(-24\)]\)", "name" -> 
            "yocto", "symbol" -> "y"|>|>, "AllowEmbedding" -> True, 
        "InitialShape" -> TypeSystem`PackageScope`HeaderShape[<|{All, 
             TypeSystem`PackageScope`KeyDummy[18]} -> 1, {All, "factor"} -> 
           1, {All, "name"} -> 1, {All, "symbol"} -> 1|>, 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`ColumnShape[
            TypeSystem`PackageScope`KeyValueShape[
             TypeSystem`PackageScope`AtomShape[347.20000000000005`], 
             TypeSystem`PackageScope`Limited[
              
              TypeSystem`PackageScope`RowShape[<|
               "factor" -> 
                TypeSystem`PackageScope`AtomShape[347.20000000000005`], 
                "name" -> TypeSystem`PackageScope`AtomShape[
                 56.00000000000001], "symbol" -> 
                TypeSystem`PackageScope`AtomShape[33.6]|>], 
              DirectedInfinity[1], 3, {All}]]], 16, 
           DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Assoc[
          TypeSystem`Atom[String], 
          TypeSystem`Struct[{"factor", "name", "symbol"}, {
            TypeSystem`Atom[String], 
            TypeSystem`Atom[String], 
            TypeSystem`Atom[String]}], 16], "Meta" -> <||>, "RowTarget" -> 20,
         "ColumnTarget" -> 10, "Shape" -> 
        TypeSystem`PackageScope`HeaderShape[<|{All, 
             TypeSystem`PackageScope`KeyDummy[18]} -> 1, {All, "factor"} -> 
           1, {All, "name"} -> 1, {All, "symbol"} -> 1|>, 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`ColumnShape[
            TypeSystem`PackageScope`KeyValueShape[
             TypeSystem`PackageScope`AtomShape[347.20000000000005`], 
             TypeSystem`PackageScope`Limited[
              
              TypeSystem`PackageScope`RowShape[<|
               "factor" -> 
                TypeSystem`PackageScope`AtomShape[347.20000000000005`], 
                "name" -> TypeSystem`PackageScope`AtomShape[
                 56.00000000000001], "symbol" -> 
                TypeSystem`PackageScope`AtomShape[33.6]|>], 
              DirectedInfinity[1], 3, {All}]]], 16, 
           DirectedInfinity[1], {}]], "Type" -> TypeSystem`Assoc[
          TypeSystem`Atom[String], 
          TypeSystem`Struct[{"factor", "name", "symbol"}, {
            TypeSystem`Atom[String], 
            TypeSystem`Atom[String], 
            TypeSystem`Atom[String]}], 16], "Path" -> {}, "DisplayedRowCount" -> 
        16, "DisplayedColumnCount" -> 3, "DataRowCount" -> 16, 
        "DataColumnCount" -> 3, "SortPaths" -> {}, "SortDirections" -> {}, 
        "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
       TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
       TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
       TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
       DynamicModule[{
        TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
           Style[
            Grid[{{
               Item[
                Pane[
                 Annotation[
                  Mouseover[
                   
                   Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                    Scaled[-0.15]], 
                   Graphics[{
                    GrayLevel[0.6], 
                    
                    Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
                    Rational[-1, 2]}}]}, ImageSize -> 6, BaselinePosition -> 
                    Scaled[-0.15]]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   All, Keys}, "KeyDummy", True], "Mouse"], 
                 ImageSize -> {{1, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["factor", 
                    Style[
                    "factor", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "factor"}, 1]]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   All, "factor"}, "ColumnHeader", True], "Mouse"], 
                 ImageSize -> {{1, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["name", 
                    Style[
                    "name", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "name"}, 1]]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   All, "name"}, "ColumnHeader", True], "Mouse"], 
                 ImageSize -> {{1, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["symbol", 
                    Style[
                    "symbol", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "symbol"}, 1]]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   All, "symbol"}, "ColumnHeader", True], "Mouse"], 
                 ImageSize -> {{1, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["\!\(\*SuperscriptBox[\(10\), \(3\)]\)", 
                    Style[
                    "\!\(\*SuperscriptBox[\(10\), \(3\)]\)", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["\!\(\*SuperscriptBox[\(10\), \(3\)]\)"]}, 1]]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["\!\(\*SuperscriptBox[\(10\), \(3\)]\)"]}, 
                   "RowHeader", False], "Mouse"], 
                 ImageSize -> {{347.20000000000005`, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Pane[
                 Annotation["\!\(\*SuperscriptBox[\(10\), \(3\)]\)", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["\!\(\*SuperscriptBox[\(10\), \(3\)]\)"], 
                    Key["factor"]}, "Item", False], "Mouse"], 
                 ImageSize -> {{347.20000000000005`, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation["kilo", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["\!\(\*SuperscriptBox[\(10\), \(3\)]\)"], 
                    Key["name"]}, "Item", False], "Mouse"], 
                 ImageSize -> {{56.00000000000001, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation["k", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["\!\(\*SuperscriptBox[\(10\), \(3\)]\)"], 
                    Key["symbol"]}, "Item", False], "Mouse"], 
                 ImageSize -> {{33.6, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["\!\(\*SuperscriptBox[\(10\), \(6\)]\)", 
                    Style[
                    "\!\(\*SuperscriptBox[\(10\), \(6\)]\)", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["\!\(\*SuperscriptBox[\(10\), \(6\)]\)"]}, 1]]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["\!\(\*SuperscriptBox[\(10\), \(6\)]\)"]}, 
                   "RowHeader", False], "Mouse"], 
                 ImageSize -> {{347.20000000000005`, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Pane[
                 Annotation["\!\(\*SuperscriptBox[\(10\), \(6\)]\)", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["\!\(\*SuperscriptBox[\(10\), \(6\)]\)"], 
                    Key["factor"]}, "Item", False], "Mouse"], 
                 ImageSize -> {{347.20000000000005`, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation["mega", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["\!\(\*SuperscriptBox[\(10\), \(6\)]\)"], 
                    Key["name"]}, "Item", False], "Mouse"], 
                 ImageSize -> {{56.00000000000001, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation["M", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["\!\(\*SuperscriptBox[\(10\), \(6\)]\)"], 
                    Key["symbol"]}, "Item", False], "Mouse"], 
                 ImageSize -> {{33.6, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["\!\(\*SuperscriptBox[\(10\), \(9\)]\)", 
                    Style[
                    "\!\(\*SuperscriptBox[\(10\), \(9\)]\)", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["\!\(\*SuperscriptBox[\(10\), \(9\)]\)"]}, 1]]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["\!\(\*SuperscriptBox[\(10\), \(9\)]\)"]}, 
                   "RowHeader", False], "Mouse"], 
                 ImageSize -> {{347.20000000000005`, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Pane[
                 Annotation["\!\(\*SuperscriptBox[\(10\), \(9\)]\)", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["\!\(\*SuperscriptBox[\(10\), \(9\)]\)"], 
                    Key["factor"]}, "Item", False], "Mouse"], 
                 ImageSize -> {{347.20000000000005`, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation["giga", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["\!\(\*SuperscriptBox[\(10\), \(9\)]\)"], 
                    Key["name"]}, "Item", False], "Mouse"], 
                 ImageSize -> {{56.00000000000001, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation["G", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["\!\(\*SuperscriptBox[\(10\), \(9\)]\)"], 
                    Key["symbol"]}, "Item", False], "Mouse"], 
                 ImageSize -> {{33.6, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["\!\(\*SuperscriptBox[\(10\), \(12\)]\)", 
                    Style[
                    "\!\(\*SuperscriptBox[\(10\), \(12\)]\)", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["\!\(\*SuperscriptBox[\(10\), \(12\)]\)"]}, 1]]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["\!\(\*SuperscriptBox[\(10\), \(12\)]\)"]}, 
                   "RowHeader", False], "Mouse"], 
                 ImageSize -> {{347.20000000000005`, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Pane[
                 Annotation["\!\(\*SuperscriptBox[\(10\), \(12\)]\)", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["\!\(\*SuperscriptBox[\(10\), \(12\)]\)"], 
                    Key["factor"]}, "Item", False], "Mouse"], 
                 ImageSize -> {{347.20000000000005`, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation["tera", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["\!\(\*SuperscriptBox[\(10\), \(12\)]\)"], 
                    Key["name"]}, "Item", False], "Mouse"], 
                 ImageSize -> {{56.00000000000001, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation["T", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["\!\(\*SuperscriptBox[\(10\), \(12\)]\)"], 
                    Key["symbol"]}, "Item", False], "Mouse"], 
                 ImageSize -> {{33.6, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["\!\(\*SuperscriptBox[\(10\), \(15\)]\)", 
                    Style[
                    "\!\(\*SuperscriptBox[\(10\), \(15\)]\)", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["\!\(\*SuperscriptBox[\(10\), \(15\)]\)"]}, 1]]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["\!\(\*SuperscriptBox[\(10\), \(15\)]\)"]}, 
                   "RowHeader", False], "Mouse"], 
                 ImageSize -> {{347.20000000000005`, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Pane[
                 Annotation["\!\(\*SuperscriptBox[\(10\), \(15\)]\)", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["\!\(\*SuperscriptBox[\(10\), \(15\)]\)"], 
                    Key["factor"]}, "Item", False], "Mouse"], 
                 ImageSize -> {{347.20000000000005`, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation["peta", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["\!\(\*SuperscriptBox[\(10\), \(15\)]\)"], 
                    Key["name"]}, "Item", False], "Mouse"], 
                 ImageSize -> {{56.00000000000001, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation["P", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["\!\(\*SuperscriptBox[\(10\), \(15\)]\)"], 
                    Key["symbol"]}, "Item", False], "Mouse"], 
                 ImageSize -> {{33.6, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["\!\(\*SuperscriptBox[\(10\), \(18\)]\)", 
                    Style[
                    "\!\(\*SuperscriptBox[\(10\), \(18\)]\)", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["\!\(\*SuperscriptBox[\(10\), \(18\)]\)"]}, 1]]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["\!\(\*SuperscriptBox[\(10\), \(18\)]\)"]}, 
                   "RowHeader", False], "Mouse"], 
                 ImageSize -> {{347.20000000000005`, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Pane[
                 Annotation["\!\(\*SuperscriptBox[\(10\), \(18\)]\)", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["\!\(\*SuperscriptBox[\(10\), \(18\)]\)"], 
                    Key["factor"]}, "Item", False], "Mouse"], 
                 ImageSize -> {{347.20000000000005`, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation["exa", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["\!\(\*SuperscriptBox[\(10\), \(18\)]\)"], 
                    Key["name"]}, "Item", False], "Mouse"], 
                 ImageSize -> {{56.00000000000001, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation["E", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["\!\(\*SuperscriptBox[\(10\), \(18\)]\)"], 
                    Key["symbol"]}, "Item", False], "Mouse"], 
                 ImageSize -> {{33.6, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["\!\(\*SuperscriptBox[\(10\), \(21\)]\)", 
                    Style[
                    "\!\(\*SuperscriptBox[\(10\), \(21\)]\)", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["\!\(\*SuperscriptBox[\(10\), \(21\)]\)"]}, 1]]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["\!\(\*SuperscriptBox[\(10\), \(21\)]\)"]}, 
                   "RowHeader", False], "Mouse"], 
                 ImageSize -> {{347.20000000000005`, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Pane[
                 Annotation["\!\(\*SuperscriptBox[\(10\), \(21\)]\)", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["\!\(\*SuperscriptBox[\(10\), \(21\)]\)"], 
                    Key["factor"]}, "Item", False], "Mouse"], 
                 ImageSize -> {{347.20000000000005`, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation["zetta", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["\!\(\*SuperscriptBox[\(10\), \(21\)]\)"], 
                    Key["name"]}, "Item", False], "Mouse"], 
                 ImageSize -> {{56.00000000000001, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation["Z", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["\!\(\*SuperscriptBox[\(10\), \(21\)]\)"], 
                    Key["symbol"]}, "Item", False], "Mouse"], 
                 ImageSize -> {{33.6, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["\!\(\*SuperscriptBox[\(10\), \(24\)]\)", 
                    Style[
                    "\!\(\*SuperscriptBox[\(10\), \(24\)]\)", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["\!\(\*SuperscriptBox[\(10\), \(24\)]\)"]}, 1]]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["\!\(\*SuperscriptBox[\(10\), \(24\)]\)"]}, 
                   "RowHeader", False], "Mouse"], 
                 ImageSize -> {{347.20000000000005`, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Pane[
                 Annotation["\!\(\*SuperscriptBox[\(10\), \(24\)]\)", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["\!\(\*SuperscriptBox[\(10\), \(24\)]\)"], 
                    Key["factor"]}, "Item", False], "Mouse"], 
                 ImageSize -> {{347.20000000000005`, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation["yotta", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["\!\(\*SuperscriptBox[\(10\), \(24\)]\)"], 
                    Key["name"]}, "Item", False], "Mouse"], 
                 ImageSize -> {{56.00000000000001, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation["Y", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["\!\(\*SuperscriptBox[\(10\), \(24\)]\)"], 
                    Key["symbol"]}, "Item", False], "Mouse"], 
                 ImageSize -> {{33.6, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["\!\(\*SuperscriptBox[\(10\), \(-3\)]\)", 
                    Style[
                    "\!\(\*SuperscriptBox[\(10\), \(-3\)]\)", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["\!\(\*SuperscriptBox[\(10\), \(-3\)]\)"]}, 1]]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["\!\(\*SuperscriptBox[\(10\), \(-3\)]\)"]}, 
                   "RowHeader", False], "Mouse"], 
                 ImageSize -> {{347.20000000000005`, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Pane[
                 Annotation["\!\(\*SuperscriptBox[\(10\), \(-3\)]\)", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["\!\(\*SuperscriptBox[\(10\), \(-3\)]\)"], 
                    Key["factor"]}, "Item", False], "Mouse"], 
                 ImageSize -> {{347.20000000000005`, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation["milli", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["\!\(\*SuperscriptBox[\(10\), \(-3\)]\)"], 
                    Key["name"]}, "Item", False], "Mouse"], 
                 ImageSize -> {{56.00000000000001, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation["m", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["\!\(\*SuperscriptBox[\(10\), \(-3\)]\)"], 
                    Key["symbol"]}, "Item", False], "Mouse"], 
                 ImageSize -> {{33.6, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["\!\(\*SuperscriptBox[\(10\), \(-6\)]\)", 
                    Style[
                    "\!\(\*SuperscriptBox[\(10\), \(-6\)]\)", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["\!\(\*SuperscriptBox[\(10\), \(-6\)]\)"]}, 1]]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["\!\(\*SuperscriptBox[\(10\), \(-6\)]\)"]}, 
                   "RowHeader", False], "Mouse"], 
                 ImageSize -> {{347.20000000000005`, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Pane[
                 Annotation["\!\(\*SuperscriptBox[\(10\), \(-6\)]\)", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["\!\(\*SuperscriptBox[\(10\), \(-6\)]\)"], 
                    Key["factor"]}, "Item", False], "Mouse"], 
                 ImageSize -> {{347.20000000000005`, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation["micro", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["\!\(\*SuperscriptBox[\(10\), \(-6\)]\)"], 
                    Key["name"]}, "Item", False], "Mouse"], 
                 ImageSize -> {{56.00000000000001, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation["\[Mu]", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["\!\(\*SuperscriptBox[\(10\), \(-6\)]\)"], 
                    Key["symbol"]}, "Item", False], "Mouse"], 
                 ImageSize -> {{33.6, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["\!\(\*SuperscriptBox[\(10\), \(-9\)]\)", 
                    Style[
                    "\!\(\*SuperscriptBox[\(10\), \(-9\)]\)", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["\!\(\*SuperscriptBox[\(10\), \(-9\)]\)"]}, 1]]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["\!\(\*SuperscriptBox[\(10\), \(-9\)]\)"]}, 
                   "RowHeader", False], "Mouse"], 
                 ImageSize -> {{347.20000000000005`, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Pane[
                 Annotation["\!\(\*SuperscriptBox[\(10\), \(-9\)]\)", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["\!\(\*SuperscriptBox[\(10\), \(-9\)]\)"], 
                    Key["factor"]}, "Item", False], "Mouse"], 
                 ImageSize -> {{347.20000000000005`, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation["nano", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["\!\(\*SuperscriptBox[\(10\), \(-9\)]\)"], 
                    Key["name"]}, "Item", False], "Mouse"], 
                 ImageSize -> {{56.00000000000001, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation["n", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["\!\(\*SuperscriptBox[\(10\), \(-9\)]\)"], 
                    Key["symbol"]}, "Item", False], "Mouse"], 
                 ImageSize -> {{33.6, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["\!\(\*SuperscriptBox[\(10\), \(-12\)]\)", 
                    Style[
                    "\!\(\*SuperscriptBox[\(10\), \(-12\)]\)", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["\!\(\*SuperscriptBox[\(10\), \(-12\)]\)"]}, 1]]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["\!\(\*SuperscriptBox[\(10\), \(-12\)]\)"]}, 
                   "RowHeader", False], "Mouse"], 
                 ImageSize -> {{347.20000000000005`, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Pane[
                 Annotation["\!\(\*SuperscriptBox[\(10\), \(-12\)]\)", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["\!\(\*SuperscriptBox[\(10\), \(-12\)]\)"], 
                    Key["factor"]}, "Item", False], "Mouse"], 
                 ImageSize -> {{347.20000000000005`, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation["pico", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["\!\(\*SuperscriptBox[\(10\), \(-12\)]\)"], 
                    Key["name"]}, "Item", False], "Mouse"], 
                 ImageSize -> {{56.00000000000001, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation["p", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["\!\(\*SuperscriptBox[\(10\), \(-12\)]\)"], 
                    Key["symbol"]}, "Item", False], "Mouse"], 
                 ImageSize -> {{33.6, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["\!\(\*SuperscriptBox[\(10\), \(-15\)]\)", 
                    Style[
                    "\!\(\*SuperscriptBox[\(10\), \(-15\)]\)", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["\!\(\*SuperscriptBox[\(10\), \(-15\)]\)"]}, 1]]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["\!\(\*SuperscriptBox[\(10\), \(-15\)]\)"]}, 
                   "RowHeader", False], "Mouse"], 
                 ImageSize -> {{347.20000000000005`, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Pane[
                 Annotation["\!\(\*SuperscriptBox[\(10\), \(-15\)]\)", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["\!\(\*SuperscriptBox[\(10\), \(-15\)]\)"], 
                    Key["factor"]}, "Item", False], "Mouse"], 
                 ImageSize -> {{347.20000000000005`, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation["femto", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["\!\(\*SuperscriptBox[\(10\), \(-15\)]\)"], 
                    Key["name"]}, "Item", False], "Mouse"], 
                 ImageSize -> {{56.00000000000001, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation["f", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["\!\(\*SuperscriptBox[\(10\), \(-15\)]\)"], 
                    Key["symbol"]}, "Item", False], "Mouse"], 
                 ImageSize -> {{33.6, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["\!\(\*SuperscriptBox[\(10\), \(-18\)]\)", 
                    Style[
                    "\!\(\*SuperscriptBox[\(10\), \(-18\)]\)", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["\!\(\*SuperscriptBox[\(10\), \(-18\)]\)"]}, 1]]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["\!\(\*SuperscriptBox[\(10\), \(-18\)]\)"]}, 
                   "RowHeader", False], "Mouse"], 
                 ImageSize -> {{347.20000000000005`, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Pane[
                 Annotation["\!\(\*SuperscriptBox[\(10\), \(-18\)]\)", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["\!\(\*SuperscriptBox[\(10\), \(-18\)]\)"], 
                    Key["factor"]}, "Item", False], "Mouse"], 
                 ImageSize -> {{347.20000000000005`, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation["atto", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["\!\(\*SuperscriptBox[\(10\), \(-18\)]\)"], 
                    Key["name"]}, "Item", False], "Mouse"], 
                 ImageSize -> {{56.00000000000001, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation["a", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["\!\(\*SuperscriptBox[\(10\), \(-18\)]\)"], 
                    Key["symbol"]}, "Item", False], "Mouse"], 
                 ImageSize -> {{33.6, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["\!\(\*SuperscriptBox[\(10\), \(-21\)]\)", 
                    Style[
                    "\!\(\*SuperscriptBox[\(10\), \(-21\)]\)", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["\!\(\*SuperscriptBox[\(10\), \(-21\)]\)"]}, 1]]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["\!\(\*SuperscriptBox[\(10\), \(-21\)]\)"]}, 
                   "RowHeader", False], "Mouse"], 
                 ImageSize -> {{347.20000000000005`, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Pane[
                 Annotation["\!\(\*SuperscriptBox[\(10\), \(-21\)]\)", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["\!\(\*SuperscriptBox[\(10\), \(-21\)]\)"], 
                    Key["factor"]}, "Item", False], "Mouse"], 
                 ImageSize -> {{347.20000000000005`, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation["zepto", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["\!\(\*SuperscriptBox[\(10\), \(-21\)]\)"], 
                    Key["name"]}, "Item", False], "Mouse"], 
                 ImageSize -> {{56.00000000000001, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation["z", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["\!\(\*SuperscriptBox[\(10\), \(-21\)]\)"], 
                    Key["symbol"]}, "Item", False], "Mouse"], 
                 ImageSize -> {{33.6, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["\!\(\*SuperscriptBox[\(10\), \(-24\)]\)", 
                    Style[
                    "\!\(\*SuperscriptBox[\(10\), \(-24\)]\)", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["\!\(\*SuperscriptBox[\(10\), \(-24\)]\)"]}, 1]]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["\!\(\*SuperscriptBox[\(10\), \(-24\)]\)"]}, 
                   "RowHeader", False], "Mouse"], 
                 ImageSize -> {{347.20000000000005`, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Pane[
                 Annotation["\!\(\*SuperscriptBox[\(10\), \(-24\)]\)", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["\!\(\*SuperscriptBox[\(10\), \(-24\)]\)"], 
                    Key["factor"]}, "Item", False], "Mouse"], 
                 ImageSize -> {{347.20000000000005`, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation["yocto", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["\!\(\*SuperscriptBox[\(10\), \(-24\)]\)"], 
                    Key["name"]}, "Item", False], "Mouse"], 
                 ImageSize -> {{56.00000000000001, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation["y", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["\!\(\*SuperscriptBox[\(10\), \(-24\)]\)"], 
                    Key["symbol"]}, "Item", False], "Mouse"], 
                 ImageSize -> {{33.6, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}]}}, 
             BaseStyle -> {
              ContextMenu -> 
               Dynamic[
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                 Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                   TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                   TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                    True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                   TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                    Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
               "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, 
             Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
             Spacings -> {0, 0}, Alignment -> Left, 
             BaseStyle -> {
              FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
               Plain}], LineBreakWithin -> False, ContextMenu -> {}, 
            NumberMarks -> False, ShowAutoStyles -> False]], 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
        Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
            Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
            
            Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
              TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
              TypeSystem`NestedGrid`PackagePrivate`datasetData[
               TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
               Not[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
          TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
          TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
            FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
            TypeSystem`SparseGrid[
             TypeSystem`H["(data no longer present)"]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
         TrackedSymbols :> {
          TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
           TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
        DynamicModuleValues :> {}], 
       TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
         TypeSystem`PackageScope`SubViewPathbar[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, 
          TypeSystem`NestedGrid`PackagePrivate`updateState[
          TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
           TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
           TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
        TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
       TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
        Framed[
         Dynamic[
          Replace[
          TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
           TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
              Blank[]] -> "", 
            TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
              Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
               Blank[]], 
              Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
               Blank[]], 
              Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
               Blank[]]] :> (
             Increment[
              TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
             TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
              TypeSystem`NestedGrid`PackagePrivate`path$; 
             TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
              TypeSystem`NestedGrid`PackagePrivate`pathType$; 
             TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
              TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
             TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
               TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
             TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
              TypeSystem`NestedGrid`PackagePrivate`path$, 
               TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
            Spacer[10], Blank[] :> Spacer[10]}], 
          TrackedSymbols :> {
           TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
         FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
         Top, ImageSize -> {Automatic, 15}], FontSize -> 1], 
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
       DynamicWrapperBox[
        DynamicBox[ToBoxes[
          Dataset`DatasetContent[
          2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
           "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], 
           "State" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
           "VPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], 
           "HPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], 
           "TopBar" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
           "BottomBar" -> 
           Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], 
           "OutputID" -> Hold[
             TypeSystem`NestedGrid`PackagePrivate`localHold[
             TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], 
          StandardForm],
         ImageSizeCache->{827., {235.13403328722342`, 240.86596671277658`}},
         TrackedSymbols:>{
          TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
        MouseAnnotation[],
        ImageSizeCache->{827., {235.13403328722342`, 240.86596671277658`}}],
       BaseStyle->{LineBreakWithin -> False},
       DynamicModuleValues:>{},
       Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
        CreateUUID[]),
       UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
      Deploy,
      DefaultBaseStyle->"Deploy"],
     Dataset`InterpretDataset[1],
     Editable->False,
     SelectWithContents->True,
     Selectable->False]}], ",", 
   RowBox[{"\<\"SI-units-with-special-names-and-symbols\"\>", "\[Rule]", 
    TagBox[
     TagBox[
      DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
       "InitialData" -> <|
         "plane-angle" -> <|
           "special-name-of-unit" -> "radian", 
            "unit-expressed-terms-of-base-units" -> "rad=m/m", 
            "unit-expressed-in-terms-of-other-SI-units" -> ""|>, 
          "solid-angle" -> <|
           "special-name-of-unit" -> "steradian", 
            "unit-expressed-terms-of-base-units" -> 
            "sr=\!\(\*SuperscriptBox[\(m\), \(2\)]\)/\!\(\*SuperscriptBox[\(m\
\), \(2\)]\)", "unit-expressed-in-terms-of-other-SI-units" -> ""|>, 
          "frequency" -> <|
           "special-name-of-unit" -> "hertz", 
            "unit-expressed-terms-of-base-units" -> 
            "Hz=\!\(\*SuperscriptBox[\(s\), \(-1\)]\)", 
            "unit-expressed-in-terms-of-other-SI-units" -> ""|>, 
          "force" -> <|
           "special-name-of-unit" -> "newton", 
            "unit-expressed-terms-of-base-units" -> 
            "N=kg m \!\(\*SuperscriptBox[\(s\), \(-2\)]\)", 
            "unit-expressed-in-terms-of-other-SI-units" -> ""|>, 
          "pressure-or-stress" -> <|
           "special-name-of-unit" -> "pascal", 
            "unit-expressed-terms-of-base-units" -> 
            "Pa=kg \!\(\*SuperscriptBox[\(m\), \(-1\)]\) \
\!\(\*SuperscriptBox[\(s\), \(-2\)]\)", 
            "unit-expressed-in-terms-of-other-SI-units" -> ""|>, 
          "energy-or-work-or-amount-of-heat" -> <|
           "special-name-of-unit" -> "joule", 
            "unit-expressed-terms-of-base-units" -> 
            "J=kg \!\(\*SuperscriptBox[\(m\), \(2\)]\) \
\!\(\*SuperscriptBox[\(s\), \(-2\)]\)", 
            "unit-expressed-in-terms-of-other-SI-units" -> "N m"|>, 
          "power-or-radiant-flux" -> <|
           "special-name-of-unit" -> "watt", 
            "unit-expressed-terms-of-base-units" -> 
            "W=kg \!\(\*SuperscriptBox[\(m\), \(2\)]\) \
\!\(\*SuperscriptBox[\(s\), \(-3\)]\)", 
            "unit-expressed-in-terms-of-other-SI-units" -> "J/s"|>, 
          "electric-charge" -> <|
           "special-name-of-unit" -> "coulomb", 
            "unit-expressed-terms-of-base-units" -> "C=A s", 
            "unit-expressed-in-terms-of-other-SI-units" -> ""|>, 
          "electric-potential-difference" -> <|
           "special-name-of-unit" -> "volt", 
            "unit-expressed-terms-of-base-units" -> 
            "V=kg \!\(\*SuperscriptBox[\(m\), \(2\)]\) \
\!\(\*SuperscriptBox[\(s\), \(-3\)]\) \!\(\*SuperscriptBox[\(A\), \(-1\)]\)", 
            "unit-expressed-in-terms-of-other-SI-units" -> "W/A"|>, 
          "capacitance" -> <|
           "special-name-of-unit" -> "farad", 
            "unit-expressed-terms-of-base-units" -> 
            "F=\!\(\*SuperscriptBox[\(kg\), \(-1\)]\) \
\!\(\*SuperscriptBox[\(m\), \(-2\)]\) \!\(\*SuperscriptBox[\(s\), \(4\)]\) \!\
\(\*SuperscriptBox[\(A\), \(2\)]\)", 
            "unit-expressed-in-terms-of-other-SI-units" -> "C/V"|>, 
          "electric-resistance" -> <|
           "special-name-of-unit" -> "ohm", 
            "unit-expressed-terms-of-base-units" -> 
            "\[CapitalOmega]=kg \!\(\*SuperscriptBox[\(m\), \(2\)]\) \
\!\(\*SuperscriptBox[\(s\), \(-3\)]\) \!\(\*SuperscriptBox[\(A\), \(-2\)]\)", 
            "unit-expressed-in-terms-of-other-SI-units" -> "V/A"|>, 
          "electric-conductance" -> <|
           "special-name-of-unit" -> "siemens", 
            "unit-expressed-terms-of-base-units" -> 
            "S=\!\(\*SuperscriptBox[\(kg\), \(-1\)]\) \
\!\(\*SuperscriptBox[\(m\), \(-2\)]\) \!\(\*SuperscriptBox[\(s\), \(3\)]\) \!\
\(\*SuperscriptBox[\(A\), \(2\)]\)", 
            "unit-expressed-in-terms-of-other-SI-units" -> "A/V"|>, 
          "magnetic-flux" -> <|
           "special-name-of-unit" -> "weber", 
            "unit-expressed-terms-of-base-units" -> 
            "Wb=kg \!\(\*SuperscriptBox[\(m\), \(2\)]\) \!\(\*SuperscriptBox[\
\(s\), \(-2\)]\) \!\(\*SuperscriptBox[\(A\), \(-1\)]\)", 
            "unit-expressed-in-terms-of-other-SI-units" -> "V s"|>, 
          "magnetic-flux-density" -> <|
           "special-name-of-unit" -> "tesla", 
            "unit-expressed-terms-of-base-units" -> 
            "T=kg \!\(\*SuperscriptBox[\(s\), \(-2\)]\) \!\(\*SuperscriptBox[\
\(A\), \(-1\)]\)", "unit-expressed-in-terms-of-other-SI-units" -> 
            "Wb/\!\(\*SuperscriptBox[\(m\), \(2\)]\)"|>, 
          "inductance" -> <|
           "special-name-of-unit" -> "henry", 
            "unit-expressed-terms-of-base-units" -> 
            "H=kg \!\(\*SuperscriptBox[\(m\), \(2\)]\) \
\!\(\*SuperscriptBox[\(s\), \(-2\)]\) \!\(\*SuperscriptBox[\(A\), \(-2\)]\)", 
            "unit-expressed-in-terms-of-other-SI-units" -> "Wb/A"|>, 
          "Celsius-temperature" -> <|
           "special-name-of-unit" -> "degree Celsius", 
            "unit-expressed-terms-of-base-units" -> "\[Degree]C=K", 
            "unit-expressed-in-terms-of-other-SI-units" -> ""|>, 
          "luminous-flux" -> <|
           "special-name-of-unit" -> "lumen", 
            "unit-expressed-terms-of-base-units" -> "lm=cd sr", 
            "unit-expressed-in-terms-of-other-SI-units" -> ""|>, 
          "illuminance" -> <|
           "special-name-of-unit" -> "lux", 
            "unit-expressed-terms-of-base-units" -> 
            "lx=cd sr \!\(\*SuperscriptBox[\(m\), \(-2\)]\)", 
            "unit-expressed-in-terms-of-other-SI-units" -> 
            "lm/\!\(\*SuperscriptBox[\(m\), \(2\)]\)"|>, 
          "activity-referred-to-a-radionuclide" -> <|
           "special-name-of-unit" -> "becquerel", 
            "unit-expressed-terms-of-base-units" -> 
            "Bq=\!\(\*SuperscriptBox[\(s\), \(-1\)]\)", 
            "unit-expressed-in-terms-of-other-SI-units" -> ""|>, 
          "absorbed-dose-or-kerma" -> <|
           "special-name-of-unit" -> "gray", 
            "unit-expressed-terms-of-base-units" -> 
            "Gy=\!\(\*SuperscriptBox[\(m\), \(2\)]\) \!\(\*SuperscriptBox[\(s\
\), \(-2\)]\)", "unit-expressed-in-terms-of-other-SI-units" -> "J/kg"|>, 
          "dose-equivalent" -> <|
           "special-name-of-unit" -> "sievert", 
            "unit-expressed-terms-of-base-units" -> 
            "Sv=\!\(\*SuperscriptBox[\(m\), \(2\)]\) \!\(\*SuperscriptBox[\(s\
\), \(-2\)]\)", "unit-expressed-in-terms-of-other-SI-units" -> "J/kg"|>, 
          "catalytic-activity" -> <|
           "special-name-of-unit" -> "katal", 
            "unit-expressed-terms-of-base-units" -> 
            "kat=mol \!\(\*SuperscriptBox[\(s\), \(-1\)]\)", 
            "unit-expressed-in-terms-of-other-SI-units" -> ""|>|>, 
        "AllowEmbedding" -> True, "InitialShape" -> 
        TypeSystem`PackageScope`HeaderShape[<|{All, 
             TypeSystem`PackageScope`KeyDummy[19]} -> 
           1, {All, "special-name-of-unit"} -> 
           1, {All, "unit-expressed-terms-of-base-units"} -> 
           1, {All, "unit-expressed-in-terms-of-other-SI-units"} -> 1|>, 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`ColumnShape[
            TypeSystem`PackageScope`KeyValueShape[
             TypeSystem`PackageScope`AtomShape[392.00000000000006`], 
             TypeSystem`PackageScope`Limited[
              
              TypeSystem`PackageScope`RowShape[<|
               "special-name-of-unit" -> 
                TypeSystem`PackageScope`AtomShape[100.80000000000001`], 
                "unit-expressed-terms-of-base-units" -> 
                TypeSystem`PackageScope`AtomShape[560.], 
                "unit-expressed-in-terms-of-other-SI-units" -> 
                TypeSystem`PackageScope`AtomShape[44.800000000000004`]|>], 
              DirectedInfinity[1], 3, {All}]]], 20, 
           DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Assoc[
          TypeSystem`Atom[String], 
          
          TypeSystem`Struct[{
           "special-name-of-unit", "unit-expressed-terms-of-base-units", 
            "unit-expressed-in-terms-of-other-SI-units"}, {
            TypeSystem`Atom[String], 
            TypeSystem`Atom[String], 
            TypeSystem`Atom[String]}], 22], "Meta" -> <||>, "RowTarget" -> 20,
         "ColumnTarget" -> 10, "Shape" -> 
        TypeSystem`PackageScope`HeaderShape[<|{All, 
             TypeSystem`PackageScope`KeyDummy[19]} -> 
           1, {All, "special-name-of-unit"} -> 
           1, {All, "unit-expressed-terms-of-base-units"} -> 
           1, {All, "unit-expressed-in-terms-of-other-SI-units"} -> 1|>, 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`ColumnShape[
            TypeSystem`PackageScope`KeyValueShape[
             TypeSystem`PackageScope`AtomShape[392.00000000000006`], 
             TypeSystem`PackageScope`Limited[
              
              TypeSystem`PackageScope`RowShape[<|
               "special-name-of-unit" -> 
                TypeSystem`PackageScope`AtomShape[100.80000000000001`], 
                "unit-expressed-terms-of-base-units" -> 
                TypeSystem`PackageScope`AtomShape[560.], 
                "unit-expressed-in-terms-of-other-SI-units" -> 
                TypeSystem`PackageScope`AtomShape[44.800000000000004`]|>], 
              DirectedInfinity[1], 3, {All}]]], 20, 
           DirectedInfinity[1], {}]], "Type" -> TypeSystem`Assoc[
          TypeSystem`Atom[String], 
          
          TypeSystem`Struct[{
           "special-name-of-unit", "unit-expressed-terms-of-base-units", 
            "unit-expressed-in-terms-of-other-SI-units"}, {
            TypeSystem`Atom[String], 
            TypeSystem`Atom[String], 
            TypeSystem`Atom[String]}], 22], "Path" -> {}, "DisplayedRowCount" -> 
        20, "DisplayedColumnCount" -> 3, "DataRowCount" -> 22, 
        "DataColumnCount" -> 3, "SortPaths" -> {}, "SortDirections" -> {}, 
        "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
       TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
       TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
       TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
       DynamicModule[{
        TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
           Style[
            Grid[{{
               Item[
                Pane[
                 Annotation[
                  Mouseover[
                   
                   Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                    Scaled[-0.15]], 
                   Graphics[{
                    GrayLevel[0.6], 
                    
                    Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
                    Rational[-1, 2]}}]}, ImageSize -> 6, BaselinePosition -> 
                    Scaled[-0.15]]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   All, Keys}, "KeyDummy", True], "Mouse"], 
                 ImageSize -> {{1, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["special-name-of-unit", 
                    Style[
                    "special-name-of-unit", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "special-name-of-unit"}, 1]]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   All, "special-name-of-unit"}, "ColumnHeader", True], 
                  "Mouse"], ImageSize -> {{1, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["unit-expressed-terms-of-base-units", 
                    Style[
                    "unit-expressed-terms-of-base-units", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "unit-expressed-terms-of-base-units"}, 1]]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   All, "unit-expressed-terms-of-base-units"}, "ColumnHeader",
                    True], "Mouse"], ImageSize -> {{1, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["unit-expressed-in-terms-of-other-SI-units", 
                    Style[
                    "unit-expressed-in-terms-of-other-SI-units", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "unit-expressed-in-terms-of-other-SI-units"}, 1]]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   All, "unit-expressed-in-terms-of-other-SI-units"}, 
                   "ColumnHeader", True], "Mouse"], 
                 ImageSize -> {{1, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["plane-angle", 
                    Style[
                    "plane-angle", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["plane-angle"]}, 1]]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["plane-angle"]}, "RowHeader", False], "Mouse"], 
                 ImageSize -> {{392.00000000000006`, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Pane[
                 Annotation["radian", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["plane-angle"], 
                    Key["special-name-of-unit"]}, "Item", False], "Mouse"], 
                 ImageSize -> {{100.80000000000001`, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation["rad=m/m", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["plane-angle"], 
                    Key["unit-expressed-terms-of-base-units"]}, "Item", 
                   False], "Mouse"], ImageSize -> {{560., Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation["", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["plane-angle"], 
                    Key["unit-expressed-in-terms-of-other-SI-units"]}, "Item",
                    False], "Mouse"], 
                 ImageSize -> {{44.800000000000004`, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["solid-angle", 
                    Style[
                    "solid-angle", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["solid-angle"]}, 1]]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["solid-angle"]}, "RowHeader", False], "Mouse"], 
                 ImageSize -> {{392.00000000000006`, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Pane[
                 Annotation["steradian", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["solid-angle"], 
                    Key["special-name-of-unit"]}, "Item", False], "Mouse"], 
                 ImageSize -> {{100.80000000000001`, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation[
                 "sr=\!\(\*SuperscriptBox[\(m\), \
\(2\)]\)/\!\(\*SuperscriptBox[\(m\), \(2\)]\)", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["solid-angle"], 
                    Key["unit-expressed-terms-of-base-units"]}, "Item", 
                   False], "Mouse"], ImageSize -> {{560., Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation["", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["solid-angle"], 
                    Key["unit-expressed-in-terms-of-other-SI-units"]}, "Item",
                    False], "Mouse"], 
                 ImageSize -> {{44.800000000000004`, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["frequency", 
                    Style[
                    "frequency", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["frequency"]}, 1]]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["frequency"]}, "RowHeader", False], "Mouse"], 
                 ImageSize -> {{392.00000000000006`, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Pane[
                 Annotation["hertz", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["frequency"], 
                    Key["special-name-of-unit"]}, "Item", False], "Mouse"], 
                 ImageSize -> {{100.80000000000001`, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation["Hz=\!\(\*SuperscriptBox[\(s\), \(-1\)]\)", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["frequency"], 
                    Key["unit-expressed-terms-of-base-units"]}, "Item", 
                   False], "Mouse"], ImageSize -> {{560., Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation["", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["frequency"], 
                    Key["unit-expressed-in-terms-of-other-SI-units"]}, "Item",
                    False], "Mouse"], 
                 ImageSize -> {{44.800000000000004`, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["force", 
                    Style[
                    "force", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["force"]}, 1]]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["force"]}, "RowHeader", False], "Mouse"], 
                 ImageSize -> {{392.00000000000006`, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Pane[
                 Annotation["newton", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["force"], 
                    Key["special-name-of-unit"]}, "Item", False], "Mouse"], 
                 ImageSize -> {{100.80000000000001`, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation["N=kg m \!\(\*SuperscriptBox[\(s\), \(-2\)]\)", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["force"], 
                    Key["unit-expressed-terms-of-base-units"]}, "Item", 
                   False], "Mouse"], ImageSize -> {{560., Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation["", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["force"], 
                    Key["unit-expressed-in-terms-of-other-SI-units"]}, "Item",
                    False], "Mouse"], 
                 ImageSize -> {{44.800000000000004`, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["pressure-or-stress", 
                    Style[
                    "pressure-or-stress", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["pressure-or-stress"]}, 1]]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["pressure-or-stress"]}, "RowHeader", False], "Mouse"],
                  ImageSize -> {{392.00000000000006`, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Pane[
                 Annotation["pascal", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["pressure-or-stress"], 
                    Key["special-name-of-unit"]}, "Item", False], "Mouse"], 
                 ImageSize -> {{100.80000000000001`, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation[
                 "Pa=kg \!\(\*SuperscriptBox[\(m\), \(-1\)]\) \
\!\(\*SuperscriptBox[\(s\), \(-2\)]\)", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["pressure-or-stress"], 
                    Key["unit-expressed-terms-of-base-units"]}, "Item", 
                   False], "Mouse"], ImageSize -> {{560., Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation["", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["pressure-or-stress"], 
                    Key["unit-expressed-in-terms-of-other-SI-units"]}, "Item",
                    False], "Mouse"], 
                 ImageSize -> {{44.800000000000004`, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["energy-or-work-or-amount-of-heat", 
                    Style[
                    "energy-or-work-or-amount-of-heat", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["energy-or-work-or-amount-of-heat"]}, 1]]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["energy-or-work-or-amount-of-heat"]}, "RowHeader", 
                   False], "Mouse"], 
                 ImageSize -> {{392.00000000000006`, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Pane[
                 Annotation["joule", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["energy-or-work-or-amount-of-heat"], 
                    Key["special-name-of-unit"]}, "Item", False], "Mouse"], 
                 ImageSize -> {{100.80000000000001`, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation[
                 "J=kg \!\(\*SuperscriptBox[\(m\), \(2\)]\) \
\!\(\*SuperscriptBox[\(s\), \(-2\)]\)", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["energy-or-work-or-amount-of-heat"], 
                    Key["unit-expressed-terms-of-base-units"]}, "Item", 
                   False], "Mouse"], ImageSize -> {{560., Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation["N m", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["energy-or-work-or-amount-of-heat"], 
                    Key["unit-expressed-in-terms-of-other-SI-units"]}, "Item",
                    False], "Mouse"], 
                 ImageSize -> {{44.800000000000004`, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["power-or-radiant-flux", 
                    Style[
                    "power-or-radiant-flux", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["power-or-radiant-flux"]}, 1]]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["power-or-radiant-flux"]}, "RowHeader", False], 
                  "Mouse"], 
                 ImageSize -> {{392.00000000000006`, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Pane[
                 Annotation["watt", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["power-or-radiant-flux"], 
                    Key["special-name-of-unit"]}, "Item", False], "Mouse"], 
                 ImageSize -> {{100.80000000000001`, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation[
                 "W=kg \!\(\*SuperscriptBox[\(m\), \(2\)]\) \
\!\(\*SuperscriptBox[\(s\), \(-3\)]\)", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["power-or-radiant-flux"], 
                    Key["unit-expressed-terms-of-base-units"]}, "Item", 
                   False], "Mouse"], ImageSize -> {{560., Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation["J/s", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["power-or-radiant-flux"], 
                    Key["unit-expressed-in-terms-of-other-SI-units"]}, "Item",
                    False], "Mouse"], 
                 ImageSize -> {{44.800000000000004`, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["electric-charge", 
                    Style[
                    "electric-charge", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["electric-charge"]}, 1]]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["electric-charge"]}, "RowHeader", False], "Mouse"], 
                 ImageSize -> {{392.00000000000006`, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Pane[
                 Annotation["coulomb", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["electric-charge"], 
                    Key["special-name-of-unit"]}, "Item", False], "Mouse"], 
                 ImageSize -> {{100.80000000000001`, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation["C=A s", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["electric-charge"], 
                    Key["unit-expressed-terms-of-base-units"]}, "Item", 
                   False], "Mouse"], ImageSize -> {{560., Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation["", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["electric-charge"], 
                    Key["unit-expressed-in-terms-of-other-SI-units"]}, "Item",
                    False], "Mouse"], 
                 ImageSize -> {{44.800000000000004`, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["electric-potential-difference", 
                    Style[
                    "electric-potential-difference", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["electric-potential-difference"]}, 1]]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["electric-potential-difference"]}, "RowHeader", 
                   False], "Mouse"], 
                 ImageSize -> {{392.00000000000006`, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Pane[
                 Annotation["volt", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["electric-potential-difference"], 
                    Key["special-name-of-unit"]}, "Item", False], "Mouse"], 
                 ImageSize -> {{100.80000000000001`, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation[
                 "V=kg \!\(\*SuperscriptBox[\(m\), \(2\)]\) \
\!\(\*SuperscriptBox[\(s\), \(-3\)]\) \!\(\*SuperscriptBox[\(A\), \(-1\)]\)", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["electric-potential-difference"], 
                    Key["unit-expressed-terms-of-base-units"]}, "Item", 
                   False], "Mouse"], ImageSize -> {{560., Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation["W/A", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["electric-potential-difference"], 
                    Key["unit-expressed-in-terms-of-other-SI-units"]}, "Item",
                    False], "Mouse"], 
                 ImageSize -> {{44.800000000000004`, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["capacitance", 
                    Style[
                    "capacitance", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["capacitance"]}, 1]]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["capacitance"]}, "RowHeader", False], "Mouse"], 
                 ImageSize -> {{392.00000000000006`, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Pane[
                 Annotation["farad", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["capacitance"], 
                    Key["special-name-of-unit"]}, "Item", False], "Mouse"], 
                 ImageSize -> {{100.80000000000001`, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation[
                 "F=\!\(\*SuperscriptBox[\(kg\), \(-1\)]\) \
\!\(\*SuperscriptBox[\(m\), \(-2\)]\) \!\(\*SuperscriptBox[\(s\), \(4\)]\) \!\
\(\*SuperscriptBox[\(A\), \(2\)]\)", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["capacitance"], 
                    Key["unit-expressed-terms-of-base-units"]}, "Item", 
                   False], "Mouse"], ImageSize -> {{560., Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation["C/V", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["capacitance"], 
                    Key["unit-expressed-in-terms-of-other-SI-units"]}, "Item",
                    False], "Mouse"], 
                 ImageSize -> {{44.800000000000004`, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["electric-resistance", 
                    Style[
                    "electric-resistance", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["electric-resistance"]}, 1]]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["electric-resistance"]}, "RowHeader", False], 
                  "Mouse"], 
                 ImageSize -> {{392.00000000000006`, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Pane[
                 Annotation["ohm", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["electric-resistance"], 
                    Key["special-name-of-unit"]}, "Item", False], "Mouse"], 
                 ImageSize -> {{100.80000000000001`, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation[
                 "\[CapitalOmega]=kg \!\(\*SuperscriptBox[\(m\), \(2\)]\) \
\!\(\*SuperscriptBox[\(s\), \(-3\)]\) \!\(\*SuperscriptBox[\(A\), \(-2\)]\)", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["electric-resistance"], 
                    Key["unit-expressed-terms-of-base-units"]}, "Item", 
                   False], "Mouse"], ImageSize -> {{560., Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation["V/A", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["electric-resistance"], 
                    Key["unit-expressed-in-terms-of-other-SI-units"]}, "Item",
                    False], "Mouse"], 
                 ImageSize -> {{44.800000000000004`, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["electric-conductance", 
                    Style[
                    "electric-conductance", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["electric-conductance"]}, 1]]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["electric-conductance"]}, "RowHeader", False], 
                  "Mouse"], 
                 ImageSize -> {{392.00000000000006`, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Pane[
                 Annotation["siemens", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["electric-conductance"], 
                    Key["special-name-of-unit"]}, "Item", False], "Mouse"], 
                 ImageSize -> {{100.80000000000001`, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation[
                 "S=\!\(\*SuperscriptBox[\(kg\), \(-1\)]\) \
\!\(\*SuperscriptBox[\(m\), \(-2\)]\) \!\(\*SuperscriptBox[\(s\), \(3\)]\) \!\
\(\*SuperscriptBox[\(A\), \(2\)]\)", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["electric-conductance"], 
                    Key["unit-expressed-terms-of-base-units"]}, "Item", 
                   False], "Mouse"], ImageSize -> {{560., Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation["A/V", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["electric-conductance"], 
                    Key["unit-expressed-in-terms-of-other-SI-units"]}, "Item",
                    False], "Mouse"], 
                 ImageSize -> {{44.800000000000004`, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["magnetic-flux", 
                    Style[
                    "magnetic-flux", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["magnetic-flux"]}, 1]]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["magnetic-flux"]}, "RowHeader", False], "Mouse"], 
                 ImageSize -> {{392.00000000000006`, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Pane[
                 Annotation["weber", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["magnetic-flux"], 
                    Key["special-name-of-unit"]}, "Item", False], "Mouse"], 
                 ImageSize -> {{100.80000000000001`, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation[
                 "Wb=kg \!\(\*SuperscriptBox[\(m\), \(2\)]\) \
\!\(\*SuperscriptBox[\(s\), \(-2\)]\) \!\(\*SuperscriptBox[\(A\), \(-1\)]\)", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["magnetic-flux"], 
                    Key["unit-expressed-terms-of-base-units"]}, "Item", 
                   False], "Mouse"], ImageSize -> {{560., Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation["V s", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["magnetic-flux"], 
                    Key["unit-expressed-in-terms-of-other-SI-units"]}, "Item",
                    False], "Mouse"], 
                 ImageSize -> {{44.800000000000004`, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["magnetic-flux-density", 
                    Style[
                    "magnetic-flux-density", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["magnetic-flux-density"]}, 1]]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["magnetic-flux-density"]}, "RowHeader", False], 
                  "Mouse"], 
                 ImageSize -> {{392.00000000000006`, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Pane[
                 Annotation["tesla", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["magnetic-flux-density"], 
                    Key["special-name-of-unit"]}, "Item", False], "Mouse"], 
                 ImageSize -> {{100.80000000000001`, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation[
                 "T=kg \!\(\*SuperscriptBox[\(s\), \(-2\)]\) \
\!\(\*SuperscriptBox[\(A\), \(-1\)]\)", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["magnetic-flux-density"], 
                    Key["unit-expressed-terms-of-base-units"]}, "Item", 
                   False], "Mouse"], ImageSize -> {{560., Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation["Wb/\!\(\*SuperscriptBox[\(m\), \(2\)]\)", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["magnetic-flux-density"], 
                    Key["unit-expressed-in-terms-of-other-SI-units"]}, "Item",
                    False], "Mouse"], 
                 ImageSize -> {{44.800000000000004`, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["inductance", 
                    Style[
                    "inductance", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["inductance"]}, 1]]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["inductance"]}, "RowHeader", False], "Mouse"], 
                 ImageSize -> {{392.00000000000006`, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Pane[
                 Annotation["henry", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["inductance"], 
                    Key["special-name-of-unit"]}, "Item", False], "Mouse"], 
                 ImageSize -> {{100.80000000000001`, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation[
                 "H=kg \!\(\*SuperscriptBox[\(m\), \(2\)]\) \
\!\(\*SuperscriptBox[\(s\), \(-2\)]\) \!\(\*SuperscriptBox[\(A\), \(-2\)]\)", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["inductance"], 
                    Key["unit-expressed-terms-of-base-units"]}, "Item", 
                   False], "Mouse"], ImageSize -> {{560., Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation["Wb/A", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["inductance"], 
                    Key["unit-expressed-in-terms-of-other-SI-units"]}, "Item",
                    False], "Mouse"], 
                 ImageSize -> {{44.800000000000004`, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["Celsius-temperature", 
                    Style[
                    "Celsius-temperature", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Celsius-temperature"]}, 1]]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Celsius-temperature"]}, "RowHeader", False], 
                  "Mouse"], 
                 ImageSize -> {{392.00000000000006`, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Pane[
                 Annotation["degree Celsius", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Celsius-temperature"], 
                    Key["special-name-of-unit"]}, "Item", False], "Mouse"], 
                 ImageSize -> {{100.80000000000001`, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation["\[Degree]C=K", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Celsius-temperature"], 
                    Key["unit-expressed-terms-of-base-units"]}, "Item", 
                   False], "Mouse"], ImageSize -> {{560., Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation["", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Celsius-temperature"], 
                    Key["unit-expressed-in-terms-of-other-SI-units"]}, "Item",
                    False], "Mouse"], 
                 ImageSize -> {{44.800000000000004`, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["luminous-flux", 
                    Style[
                    "luminous-flux", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["luminous-flux"]}, 1]]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["luminous-flux"]}, "RowHeader", False], "Mouse"], 
                 ImageSize -> {{392.00000000000006`, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Pane[
                 Annotation["lumen", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["luminous-flux"], 
                    Key["special-name-of-unit"]}, "Item", False], "Mouse"], 
                 ImageSize -> {{100.80000000000001`, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation["lm=cd sr", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["luminous-flux"], 
                    Key["unit-expressed-terms-of-base-units"]}, "Item", 
                   False], "Mouse"], ImageSize -> {{560., Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation["", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["luminous-flux"], 
                    Key["unit-expressed-in-terms-of-other-SI-units"]}, "Item",
                    False], "Mouse"], 
                 ImageSize -> {{44.800000000000004`, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["illuminance", 
                    Style[
                    "illuminance", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["illuminance"]}, 1]]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["illuminance"]}, "RowHeader", False], "Mouse"], 
                 ImageSize -> {{392.00000000000006`, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Pane[
                 Annotation["lux", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["illuminance"], 
                    Key["special-name-of-unit"]}, "Item", False], "Mouse"], 
                 ImageSize -> {{100.80000000000001`, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation["lx=cd sr \!\(\*SuperscriptBox[\(m\), \(-2\)]\)", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["illuminance"], 
                    Key["unit-expressed-terms-of-base-units"]}, "Item", 
                   False], "Mouse"], ImageSize -> {{560., Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation["lm/\!\(\*SuperscriptBox[\(m\), \(2\)]\)", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["illuminance"], 
                    Key["unit-expressed-in-terms-of-other-SI-units"]}, "Item",
                    False], "Mouse"], 
                 ImageSize -> {{44.800000000000004`, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["activity-referred-to-a-radionuclide", 
                    Style[
                    "activity-referred-to-a-radionuclide", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["activity-referred-to-a-radionuclide"]}, 1]]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["activity-referred-to-a-radionuclide"]}, "RowHeader", 
                   False], "Mouse"], 
                 ImageSize -> {{392.00000000000006`, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Pane[
                 Annotation["becquerel", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["activity-referred-to-a-radionuclide"], 
                    Key["special-name-of-unit"]}, "Item", False], "Mouse"], 
                 ImageSize -> {{100.80000000000001`, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation["Bq=\!\(\*SuperscriptBox[\(s\), \(-1\)]\)", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["activity-referred-to-a-radionuclide"], 
                    Key["unit-expressed-terms-of-base-units"]}, "Item", 
                   False], "Mouse"], ImageSize -> {{560., Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation["", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["activity-referred-to-a-radionuclide"], 
                    Key["unit-expressed-in-terms-of-other-SI-units"]}, "Item",
                    False], "Mouse"], 
                 ImageSize -> {{44.800000000000004`, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["absorbed-dose-or-kerma", 
                    Style[
                    "absorbed-dose-or-kerma", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["absorbed-dose-or-kerma"]}, 1]]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["absorbed-dose-or-kerma"]}, "RowHeader", False], 
                  "Mouse"], 
                 ImageSize -> {{392.00000000000006`, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Pane[
                 Annotation["gray", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["absorbed-dose-or-kerma"], 
                    Key["special-name-of-unit"]}, "Item", False], "Mouse"], 
                 ImageSize -> {{100.80000000000001`, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation[
                 "Gy=\!\(\*SuperscriptBox[\(m\), \(2\)]\) \
\!\(\*SuperscriptBox[\(s\), \(-2\)]\)", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["absorbed-dose-or-kerma"], 
                    Key["unit-expressed-terms-of-base-units"]}, "Item", 
                   False], "Mouse"], ImageSize -> {{560., Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation["J/kg", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["absorbed-dose-or-kerma"], 
                    Key["unit-expressed-in-terms-of-other-SI-units"]}, "Item",
                    False], "Mouse"], 
                 ImageSize -> {{44.800000000000004`, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}]}, {
               Item[
                Deploy[
                 Pane[
                  Row[{
                    Spacer[2], 
                    Style[
                    Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + (-20) 
                    If[True, 22, 1], {1, 22 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + (-20) 
                    If[False, 22, 1], {1, 22 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], " ", 
                    Style[
                    Mouseover[
                    Style[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[22, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    Style[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[22, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 30, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100000000, {}]], MenuEvaluator -> Automatic]}], 
                    " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[False, 22, 1], {1, 22 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[True, 22, 1], {1, 22 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None]}], ContextMenu -> {}]}], 
                  ImageMargins -> {{0, -1}, {-1, 1}}]], Background -> 
                RGBColor[
                 0.9764705882352941, 0.9764705882352941, 0.9764705882352941], 
                Alignment -> {Left, Top}], SpanFromLeft, SpanFromLeft, 
               SpanFromLeft}}, 
             BaseStyle -> {
              ContextMenu -> 
               Dynamic[
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                 Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                   TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                   TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                    True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                   TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                    Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
               "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, 
             Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
             Spacings -> {0, 0}, Alignment -> Left, 
             BaseStyle -> {
              FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
               Plain}], LineBreakWithin -> False, ContextMenu -> {}, 
            NumberMarks -> False, ShowAutoStyles -> False]], 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
        Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
            Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
            
            Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
              TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
              TypeSystem`NestedGrid`PackagePrivate`datasetData[
               TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
               Not[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
          TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
          TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
            FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
            TypeSystem`SparseGrid[
             TypeSystem`H["(data no longer present)"]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
         TrackedSymbols :> {
          TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
           TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
        DynamicModuleValues :> {}], 
       TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
         TypeSystem`PackageScope`SubViewPathbar[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, 
          TypeSystem`NestedGrid`PackagePrivate`updateState[
          TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
           TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
           TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
        TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
       TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
        Framed[
         Dynamic[
          Replace[
          TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
           TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
              Blank[]] -> "", 
            TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
              Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
               Blank[]], 
              Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
               Blank[]], 
              Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
               Blank[]]] :> (
             Increment[
              TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
             TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
              TypeSystem`NestedGrid`PackagePrivate`path$; 
             TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
              TypeSystem`NestedGrid`PackagePrivate`pathType$; 
             TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
              TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
             TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
               TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
             TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
              TypeSystem`NestedGrid`PackagePrivate`path$, 
               TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
            Spacer[10], Blank[] :> Spacer[10]}], 
          TrackedSymbols :> {
           TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
         FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
         Top, ImageSize -> {Automatic, 15}], FontSize -> 1], 
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
       DynamicWrapperBox[
        DynamicBox[ToBoxes[
          Dataset`DatasetContent[
          2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
           "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], 
           "State" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
           "VPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], 
           "HPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], 
           "TopBar" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
           "BottomBar" -> 
           Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], 
           "OutputID" -> Hold[
             TypeSystem`NestedGrid`PackagePrivate`localHold[
             TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], 
          StandardForm],
         ImageSizeCache->{1402., {299.6340332872234, 305.3659667127766}},
         TrackedSymbols:>{
          TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
        MouseAnnotation[],
        ImageSizeCache->{1402., {299.6340332872234, 305.3659667127766}}],
       BaseStyle->{LineBreakWithin -> False},
       DynamicModuleValues:>{},
       Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
        CreateUUID[]),
       UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
      Deploy,
      DefaultBaseStyle->"Deploy"],
     Dataset`InterpretDataset[1],
     Editable->False,
     SelectWithContents->True,
     Selectable->False]}]}], "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{{3.8778827316295958`*^9, 3.8778827670029955`*^9}},
 CellLabel->"Out[64]=",ExpressionUUID->"5adf8008-12e5-4433-b5a0-20f872f96f12"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ResourceData", "[", 
  RowBox[{"\"\<SI Brochure Data\>\"", ",", 
   RowBox[{"{", 
    RowBox[{
    "\"\<SI-units-with-special-names-and-symbols\>\"", ",", 
     "\"\<base-quantities-and-units\>\""}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8778827208188114`*^9, 3.877882765910616*^9}, {
  3.877882857112062*^9, 3.8778828602454176`*^9}, {3.877882894310397*^9, 
  3.8778828968541126`*^9}},
 CellLabel->"In[65]:=",ExpressionUUID->"5ee08b0c-86f1-4ec4-9956-a638e5ddf215"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"SI-units-with-special-names-and-symbols\"\>", "\[Rule]", 
    TagBox[
     TagBox[
      DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
       "InitialData" -> <|
         "plane-angle" -> <|
           "special-name-of-unit" -> "radian", 
            "unit-expressed-terms-of-base-units" -> "rad=m/m", 
            "unit-expressed-in-terms-of-other-SI-units" -> ""|>, 
          "solid-angle" -> <|
           "special-name-of-unit" -> "steradian", 
            "unit-expressed-terms-of-base-units" -> 
            "sr=\!\(\*SuperscriptBox[\(m\), \(2\)]\)/\!\(\*SuperscriptBox[\(m\
\), \(2\)]\)", "unit-expressed-in-terms-of-other-SI-units" -> ""|>, 
          "frequency" -> <|
           "special-name-of-unit" -> "hertz", 
            "unit-expressed-terms-of-base-units" -> 
            "Hz=\!\(\*SuperscriptBox[\(s\), \(-1\)]\)", 
            "unit-expressed-in-terms-of-other-SI-units" -> ""|>, 
          "force" -> <|
           "special-name-of-unit" -> "newton", 
            "unit-expressed-terms-of-base-units" -> 
            "N=kg m \!\(\*SuperscriptBox[\(s\), \(-2\)]\)", 
            "unit-expressed-in-terms-of-other-SI-units" -> ""|>, 
          "pressure-or-stress" -> <|
           "special-name-of-unit" -> "pascal", 
            "unit-expressed-terms-of-base-units" -> 
            "Pa=kg \!\(\*SuperscriptBox[\(m\), \(-1\)]\) \
\!\(\*SuperscriptBox[\(s\), \(-2\)]\)", 
            "unit-expressed-in-terms-of-other-SI-units" -> ""|>, 
          "energy-or-work-or-amount-of-heat" -> <|
           "special-name-of-unit" -> "joule", 
            "unit-expressed-terms-of-base-units" -> 
            "J=kg \!\(\*SuperscriptBox[\(m\), \(2\)]\) \
\!\(\*SuperscriptBox[\(s\), \(-2\)]\)", 
            "unit-expressed-in-terms-of-other-SI-units" -> "N m"|>, 
          "power-or-radiant-flux" -> <|
           "special-name-of-unit" -> "watt", 
            "unit-expressed-terms-of-base-units" -> 
            "W=kg \!\(\*SuperscriptBox[\(m\), \(2\)]\) \
\!\(\*SuperscriptBox[\(s\), \(-3\)]\)", 
            "unit-expressed-in-terms-of-other-SI-units" -> "J/s"|>, 
          "electric-charge" -> <|
           "special-name-of-unit" -> "coulomb", 
            "unit-expressed-terms-of-base-units" -> "C=A s", 
            "unit-expressed-in-terms-of-other-SI-units" -> ""|>, 
          "electric-potential-difference" -> <|
           "special-name-of-unit" -> "volt", 
            "unit-expressed-terms-of-base-units" -> 
            "V=kg \!\(\*SuperscriptBox[\(m\), \(2\)]\) \
\!\(\*SuperscriptBox[\(s\), \(-3\)]\) \!\(\*SuperscriptBox[\(A\), \(-1\)]\)", 
            "unit-expressed-in-terms-of-other-SI-units" -> "W/A"|>, 
          "capacitance" -> <|
           "special-name-of-unit" -> "farad", 
            "unit-expressed-terms-of-base-units" -> 
            "F=\!\(\*SuperscriptBox[\(kg\), \(-1\)]\) \
\!\(\*SuperscriptBox[\(m\), \(-2\)]\) \!\(\*SuperscriptBox[\(s\), \(4\)]\) \!\
\(\*SuperscriptBox[\(A\), \(2\)]\)", 
            "unit-expressed-in-terms-of-other-SI-units" -> "C/V"|>, 
          "electric-resistance" -> <|
           "special-name-of-unit" -> "ohm", 
            "unit-expressed-terms-of-base-units" -> 
            "\[CapitalOmega]=kg \!\(\*SuperscriptBox[\(m\), \(2\)]\) \
\!\(\*SuperscriptBox[\(s\), \(-3\)]\) \!\(\*SuperscriptBox[\(A\), \(-2\)]\)", 
            "unit-expressed-in-terms-of-other-SI-units" -> "V/A"|>, 
          "electric-conductance" -> <|
           "special-name-of-unit" -> "siemens", 
            "unit-expressed-terms-of-base-units" -> 
            "S=\!\(\*SuperscriptBox[\(kg\), \(-1\)]\) \
\!\(\*SuperscriptBox[\(m\), \(-2\)]\) \!\(\*SuperscriptBox[\(s\), \(3\)]\) \!\
\(\*SuperscriptBox[\(A\), \(2\)]\)", 
            "unit-expressed-in-terms-of-other-SI-units" -> "A/V"|>, 
          "magnetic-flux" -> <|
           "special-name-of-unit" -> "weber", 
            "unit-expressed-terms-of-base-units" -> 
            "Wb=kg \!\(\*SuperscriptBox[\(m\), \(2\)]\) \!\(\*SuperscriptBox[\
\(s\), \(-2\)]\) \!\(\*SuperscriptBox[\(A\), \(-1\)]\)", 
            "unit-expressed-in-terms-of-other-SI-units" -> "V s"|>, 
          "magnetic-flux-density" -> <|
           "special-name-of-unit" -> "tesla", 
            "unit-expressed-terms-of-base-units" -> 
            "T=kg \!\(\*SuperscriptBox[\(s\), \(-2\)]\) \!\(\*SuperscriptBox[\
\(A\), \(-1\)]\)", "unit-expressed-in-terms-of-other-SI-units" -> 
            "Wb/\!\(\*SuperscriptBox[\(m\), \(2\)]\)"|>, 
          "inductance" -> <|
           "special-name-of-unit" -> "henry", 
            "unit-expressed-terms-of-base-units" -> 
            "H=kg \!\(\*SuperscriptBox[\(m\), \(2\)]\) \
\!\(\*SuperscriptBox[\(s\), \(-2\)]\) \!\(\*SuperscriptBox[\(A\), \(-2\)]\)", 
            "unit-expressed-in-terms-of-other-SI-units" -> "Wb/A"|>, 
          "Celsius-temperature" -> <|
           "special-name-of-unit" -> "degree Celsius", 
            "unit-expressed-terms-of-base-units" -> "\[Degree]C=K", 
            "unit-expressed-in-terms-of-other-SI-units" -> ""|>, 
          "luminous-flux" -> <|
           "special-name-of-unit" -> "lumen", 
            "unit-expressed-terms-of-base-units" -> "lm=cd sr", 
            "unit-expressed-in-terms-of-other-SI-units" -> ""|>, 
          "illuminance" -> <|
           "special-name-of-unit" -> "lux", 
            "unit-expressed-terms-of-base-units" -> 
            "lx=cd sr \!\(\*SuperscriptBox[\(m\), \(-2\)]\)", 
            "unit-expressed-in-terms-of-other-SI-units" -> 
            "lm/\!\(\*SuperscriptBox[\(m\), \(2\)]\)"|>, 
          "activity-referred-to-a-radionuclide" -> <|
           "special-name-of-unit" -> "becquerel", 
            "unit-expressed-terms-of-base-units" -> 
            "Bq=\!\(\*SuperscriptBox[\(s\), \(-1\)]\)", 
            "unit-expressed-in-terms-of-other-SI-units" -> ""|>, 
          "absorbed-dose-or-kerma" -> <|
           "special-name-of-unit" -> "gray", 
            "unit-expressed-terms-of-base-units" -> 
            "Gy=\!\(\*SuperscriptBox[\(m\), \(2\)]\) \!\(\*SuperscriptBox[\(s\
\), \(-2\)]\)", "unit-expressed-in-terms-of-other-SI-units" -> "J/kg"|>, 
          "dose-equivalent" -> <|
           "special-name-of-unit" -> "sievert", 
            "unit-expressed-terms-of-base-units" -> 
            "Sv=\!\(\*SuperscriptBox[\(m\), \(2\)]\) \!\(\*SuperscriptBox[\(s\
\), \(-2\)]\)", "unit-expressed-in-terms-of-other-SI-units" -> "J/kg"|>, 
          "catalytic-activity" -> <|
           "special-name-of-unit" -> "katal", 
            "unit-expressed-terms-of-base-units" -> 
            "kat=mol \!\(\*SuperscriptBox[\(s\), \(-1\)]\)", 
            "unit-expressed-in-terms-of-other-SI-units" -> ""|>|>, 
        "AllowEmbedding" -> True, "InitialShape" -> 
        TypeSystem`PackageScope`HeaderShape[<|{All, 
             TypeSystem`PackageScope`KeyDummy[21]} -> 
           1, {All, "special-name-of-unit"} -> 
           1, {All, "unit-expressed-terms-of-base-units"} -> 
           1, {All, "unit-expressed-in-terms-of-other-SI-units"} -> 1|>, 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`ColumnShape[
            TypeSystem`PackageScope`KeyValueShape[
             TypeSystem`PackageScope`AtomShape[392.00000000000006`], 
             TypeSystem`PackageScope`Limited[
              
              TypeSystem`PackageScope`RowShape[<|
               "special-name-of-unit" -> 
                TypeSystem`PackageScope`AtomShape[100.80000000000001`], 
                "unit-expressed-terms-of-base-units" -> 
                TypeSystem`PackageScope`AtomShape[560.], 
                "unit-expressed-in-terms-of-other-SI-units" -> 
                TypeSystem`PackageScope`AtomShape[44.800000000000004`]|>], 
              DirectedInfinity[1], 3, {All}]]], 20, 
           DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Assoc[
          TypeSystem`Atom[String], 
          
          TypeSystem`Struct[{
           "special-name-of-unit", "unit-expressed-terms-of-base-units", 
            "unit-expressed-in-terms-of-other-SI-units"}, {
            TypeSystem`Atom[String], 
            TypeSystem`Atom[String], 
            TypeSystem`Atom[String]}], 22], "Meta" -> <||>, "RowTarget" -> 20,
         "ColumnTarget" -> 10, "Shape" -> 
        TypeSystem`PackageScope`HeaderShape[<|{All, 
             TypeSystem`PackageScope`KeyDummy[21]} -> 
           1, {All, "special-name-of-unit"} -> 
           1, {All, "unit-expressed-terms-of-base-units"} -> 
           1, {All, "unit-expressed-in-terms-of-other-SI-units"} -> 1|>, 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`ColumnShape[
            TypeSystem`PackageScope`KeyValueShape[
             TypeSystem`PackageScope`AtomShape[392.00000000000006`], 
             TypeSystem`PackageScope`Limited[
              
              TypeSystem`PackageScope`RowShape[<|
               "special-name-of-unit" -> 
                TypeSystem`PackageScope`AtomShape[100.80000000000001`], 
                "unit-expressed-terms-of-base-units" -> 
                TypeSystem`PackageScope`AtomShape[560.], 
                "unit-expressed-in-terms-of-other-SI-units" -> 
                TypeSystem`PackageScope`AtomShape[44.800000000000004`]|>], 
              DirectedInfinity[1], 3, {All}]]], 20, 
           DirectedInfinity[1], {}]], "Type" -> TypeSystem`Assoc[
          TypeSystem`Atom[String], 
          
          TypeSystem`Struct[{
           "special-name-of-unit", "unit-expressed-terms-of-base-units", 
            "unit-expressed-in-terms-of-other-SI-units"}, {
            TypeSystem`Atom[String], 
            TypeSystem`Atom[String], 
            TypeSystem`Atom[String]}], 22], "Path" -> {}, "DisplayedRowCount" -> 
        20, "DisplayedColumnCount" -> 3, "DataRowCount" -> 22, 
        "DataColumnCount" -> 3, "SortPaths" -> {}, "SortDirections" -> {}, 
        "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
       TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
       TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
       TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
       DynamicModule[{
        TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
           Style[
            Grid[{{
               Item[
                Pane[
                 Annotation[
                  Mouseover[
                   
                   Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                    Scaled[-0.15]], 
                   Graphics[{
                    GrayLevel[0.6], 
                    
                    Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
                    Rational[-1, 2]}}]}, ImageSize -> 6, BaselinePosition -> 
                    Scaled[-0.15]]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   All, Keys}, "KeyDummy", True], "Mouse"], 
                 ImageSize -> {{1, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["special-name-of-unit", 
                    Style[
                    "special-name-of-unit", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "special-name-of-unit"}, 1]]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   All, "special-name-of-unit"}, "ColumnHeader", True], 
                  "Mouse"], ImageSize -> {{1, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["unit-expressed-terms-of-base-units", 
                    Style[
                    "unit-expressed-terms-of-base-units", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "unit-expressed-terms-of-base-units"}, 1]]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   All, "unit-expressed-terms-of-base-units"}, "ColumnHeader",
                    True], "Mouse"], ImageSize -> {{1, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["unit-expressed-in-terms-of-other-SI-units", 
                    Style[
                    "unit-expressed-in-terms-of-other-SI-units", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "unit-expressed-in-terms-of-other-SI-units"}, 1]]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   All, "unit-expressed-in-terms-of-other-SI-units"}, 
                   "ColumnHeader", True], "Mouse"], 
                 ImageSize -> {{1, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["plane-angle", 
                    Style[
                    "plane-angle", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["plane-angle"]}, 1]]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["plane-angle"]}, "RowHeader", False], "Mouse"], 
                 ImageSize -> {{392.00000000000006`, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Pane[
                 Annotation["radian", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["plane-angle"], 
                    Key["special-name-of-unit"]}, "Item", False], "Mouse"], 
                 ImageSize -> {{100.80000000000001`, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation["rad=m/m", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["plane-angle"], 
                    Key["unit-expressed-terms-of-base-units"]}, "Item", 
                   False], "Mouse"], ImageSize -> {{560., Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation["", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["plane-angle"], 
                    Key["unit-expressed-in-terms-of-other-SI-units"]}, "Item",
                    False], "Mouse"], 
                 ImageSize -> {{44.800000000000004`, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["solid-angle", 
                    Style[
                    "solid-angle", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["solid-angle"]}, 1]]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["solid-angle"]}, "RowHeader", False], "Mouse"], 
                 ImageSize -> {{392.00000000000006`, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Pane[
                 Annotation["steradian", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["solid-angle"], 
                    Key["special-name-of-unit"]}, "Item", False], "Mouse"], 
                 ImageSize -> {{100.80000000000001`, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation[
                 "sr=\!\(\*SuperscriptBox[\(m\), \
\(2\)]\)/\!\(\*SuperscriptBox[\(m\), \(2\)]\)", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["solid-angle"], 
                    Key["unit-expressed-terms-of-base-units"]}, "Item", 
                   False], "Mouse"], ImageSize -> {{560., Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation["", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["solid-angle"], 
                    Key["unit-expressed-in-terms-of-other-SI-units"]}, "Item",
                    False], "Mouse"], 
                 ImageSize -> {{44.800000000000004`, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["frequency", 
                    Style[
                    "frequency", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["frequency"]}, 1]]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["frequency"]}, "RowHeader", False], "Mouse"], 
                 ImageSize -> {{392.00000000000006`, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Pane[
                 Annotation["hertz", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["frequency"], 
                    Key["special-name-of-unit"]}, "Item", False], "Mouse"], 
                 ImageSize -> {{100.80000000000001`, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation["Hz=\!\(\*SuperscriptBox[\(s\), \(-1\)]\)", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["frequency"], 
                    Key["unit-expressed-terms-of-base-units"]}, "Item", 
                   False], "Mouse"], ImageSize -> {{560., Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation["", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["frequency"], 
                    Key["unit-expressed-in-terms-of-other-SI-units"]}, "Item",
                    False], "Mouse"], 
                 ImageSize -> {{44.800000000000004`, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["force", 
                    Style[
                    "force", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["force"]}, 1]]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["force"]}, "RowHeader", False], "Mouse"], 
                 ImageSize -> {{392.00000000000006`, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Pane[
                 Annotation["newton", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["force"], 
                    Key["special-name-of-unit"]}, "Item", False], "Mouse"], 
                 ImageSize -> {{100.80000000000001`, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation["N=kg m \!\(\*SuperscriptBox[\(s\), \(-2\)]\)", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["force"], 
                    Key["unit-expressed-terms-of-base-units"]}, "Item", 
                   False], "Mouse"], ImageSize -> {{560., Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation["", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["force"], 
                    Key["unit-expressed-in-terms-of-other-SI-units"]}, "Item",
                    False], "Mouse"], 
                 ImageSize -> {{44.800000000000004`, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["pressure-or-stress", 
                    Style[
                    "pressure-or-stress", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["pressure-or-stress"]}, 1]]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["pressure-or-stress"]}, "RowHeader", False], "Mouse"],
                  ImageSize -> {{392.00000000000006`, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Pane[
                 Annotation["pascal", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["pressure-or-stress"], 
                    Key["special-name-of-unit"]}, "Item", False], "Mouse"], 
                 ImageSize -> {{100.80000000000001`, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation[
                 "Pa=kg \!\(\*SuperscriptBox[\(m\), \(-1\)]\) \
\!\(\*SuperscriptBox[\(s\), \(-2\)]\)", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["pressure-or-stress"], 
                    Key["unit-expressed-terms-of-base-units"]}, "Item", 
                   False], "Mouse"], ImageSize -> {{560., Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation["", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["pressure-or-stress"], 
                    Key["unit-expressed-in-terms-of-other-SI-units"]}, "Item",
                    False], "Mouse"], 
                 ImageSize -> {{44.800000000000004`, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["energy-or-work-or-amount-of-heat", 
                    Style[
                    "energy-or-work-or-amount-of-heat", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["energy-or-work-or-amount-of-heat"]}, 1]]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["energy-or-work-or-amount-of-heat"]}, "RowHeader", 
                   False], "Mouse"], 
                 ImageSize -> {{392.00000000000006`, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Pane[
                 Annotation["joule", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["energy-or-work-or-amount-of-heat"], 
                    Key["special-name-of-unit"]}, "Item", False], "Mouse"], 
                 ImageSize -> {{100.80000000000001`, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation[
                 "J=kg \!\(\*SuperscriptBox[\(m\), \(2\)]\) \
\!\(\*SuperscriptBox[\(s\), \(-2\)]\)", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["energy-or-work-or-amount-of-heat"], 
                    Key["unit-expressed-terms-of-base-units"]}, "Item", 
                   False], "Mouse"], ImageSize -> {{560., Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation["N m", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["energy-or-work-or-amount-of-heat"], 
                    Key["unit-expressed-in-terms-of-other-SI-units"]}, "Item",
                    False], "Mouse"], 
                 ImageSize -> {{44.800000000000004`, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["power-or-radiant-flux", 
                    Style[
                    "power-or-radiant-flux", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["power-or-radiant-flux"]}, 1]]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["power-or-radiant-flux"]}, "RowHeader", False], 
                  "Mouse"], 
                 ImageSize -> {{392.00000000000006`, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Pane[
                 Annotation["watt", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["power-or-radiant-flux"], 
                    Key["special-name-of-unit"]}, "Item", False], "Mouse"], 
                 ImageSize -> {{100.80000000000001`, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation[
                 "W=kg \!\(\*SuperscriptBox[\(m\), \(2\)]\) \
\!\(\*SuperscriptBox[\(s\), \(-3\)]\)", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["power-or-radiant-flux"], 
                    Key["unit-expressed-terms-of-base-units"]}, "Item", 
                   False], "Mouse"], ImageSize -> {{560., Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation["J/s", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["power-or-radiant-flux"], 
                    Key["unit-expressed-in-terms-of-other-SI-units"]}, "Item",
                    False], "Mouse"], 
                 ImageSize -> {{44.800000000000004`, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["electric-charge", 
                    Style[
                    "electric-charge", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["electric-charge"]}, 1]]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["electric-charge"]}, "RowHeader", False], "Mouse"], 
                 ImageSize -> {{392.00000000000006`, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Pane[
                 Annotation["coulomb", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["electric-charge"], 
                    Key["special-name-of-unit"]}, "Item", False], "Mouse"], 
                 ImageSize -> {{100.80000000000001`, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation["C=A s", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["electric-charge"], 
                    Key["unit-expressed-terms-of-base-units"]}, "Item", 
                   False], "Mouse"], ImageSize -> {{560., Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation["", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["electric-charge"], 
                    Key["unit-expressed-in-terms-of-other-SI-units"]}, "Item",
                    False], "Mouse"], 
                 ImageSize -> {{44.800000000000004`, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["electric-potential-difference", 
                    Style[
                    "electric-potential-difference", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["electric-potential-difference"]}, 1]]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["electric-potential-difference"]}, "RowHeader", 
                   False], "Mouse"], 
                 ImageSize -> {{392.00000000000006`, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Pane[
                 Annotation["volt", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["electric-potential-difference"], 
                    Key["special-name-of-unit"]}, "Item", False], "Mouse"], 
                 ImageSize -> {{100.80000000000001`, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation[
                 "V=kg \!\(\*SuperscriptBox[\(m\), \(2\)]\) \
\!\(\*SuperscriptBox[\(s\), \(-3\)]\) \!\(\*SuperscriptBox[\(A\), \(-1\)]\)", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["electric-potential-difference"], 
                    Key["unit-expressed-terms-of-base-units"]}, "Item", 
                   False], "Mouse"], ImageSize -> {{560., Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation["W/A", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["electric-potential-difference"], 
                    Key["unit-expressed-in-terms-of-other-SI-units"]}, "Item",
                    False], "Mouse"], 
                 ImageSize -> {{44.800000000000004`, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["capacitance", 
                    Style[
                    "capacitance", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["capacitance"]}, 1]]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["capacitance"]}, "RowHeader", False], "Mouse"], 
                 ImageSize -> {{392.00000000000006`, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Pane[
                 Annotation["farad", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["capacitance"], 
                    Key["special-name-of-unit"]}, "Item", False], "Mouse"], 
                 ImageSize -> {{100.80000000000001`, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation[
                 "F=\!\(\*SuperscriptBox[\(kg\), \(-1\)]\) \
\!\(\*SuperscriptBox[\(m\), \(-2\)]\) \!\(\*SuperscriptBox[\(s\), \(4\)]\) \!\
\(\*SuperscriptBox[\(A\), \(2\)]\)", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["capacitance"], 
                    Key["unit-expressed-terms-of-base-units"]}, "Item", 
                   False], "Mouse"], ImageSize -> {{560., Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation["C/V", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["capacitance"], 
                    Key["unit-expressed-in-terms-of-other-SI-units"]}, "Item",
                    False], "Mouse"], 
                 ImageSize -> {{44.800000000000004`, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["electric-resistance", 
                    Style[
                    "electric-resistance", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["electric-resistance"]}, 1]]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["electric-resistance"]}, "RowHeader", False], 
                  "Mouse"], 
                 ImageSize -> {{392.00000000000006`, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Pane[
                 Annotation["ohm", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["electric-resistance"], 
                    Key["special-name-of-unit"]}, "Item", False], "Mouse"], 
                 ImageSize -> {{100.80000000000001`, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation[
                 "\[CapitalOmega]=kg \!\(\*SuperscriptBox[\(m\), \(2\)]\) \
\!\(\*SuperscriptBox[\(s\), \(-3\)]\) \!\(\*SuperscriptBox[\(A\), \(-2\)]\)", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["electric-resistance"], 
                    Key["unit-expressed-terms-of-base-units"]}, "Item", 
                   False], "Mouse"], ImageSize -> {{560., Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation["V/A", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["electric-resistance"], 
                    Key["unit-expressed-in-terms-of-other-SI-units"]}, "Item",
                    False], "Mouse"], 
                 ImageSize -> {{44.800000000000004`, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["electric-conductance", 
                    Style[
                    "electric-conductance", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["electric-conductance"]}, 1]]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["electric-conductance"]}, "RowHeader", False], 
                  "Mouse"], 
                 ImageSize -> {{392.00000000000006`, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Pane[
                 Annotation["siemens", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["electric-conductance"], 
                    Key["special-name-of-unit"]}, "Item", False], "Mouse"], 
                 ImageSize -> {{100.80000000000001`, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation[
                 "S=\!\(\*SuperscriptBox[\(kg\), \(-1\)]\) \
\!\(\*SuperscriptBox[\(m\), \(-2\)]\) \!\(\*SuperscriptBox[\(s\), \(3\)]\) \!\
\(\*SuperscriptBox[\(A\), \(2\)]\)", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["electric-conductance"], 
                    Key["unit-expressed-terms-of-base-units"]}, "Item", 
                   False], "Mouse"], ImageSize -> {{560., Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation["A/V", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["electric-conductance"], 
                    Key["unit-expressed-in-terms-of-other-SI-units"]}, "Item",
                    False], "Mouse"], 
                 ImageSize -> {{44.800000000000004`, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["magnetic-flux", 
                    Style[
                    "magnetic-flux", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["magnetic-flux"]}, 1]]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["magnetic-flux"]}, "RowHeader", False], "Mouse"], 
                 ImageSize -> {{392.00000000000006`, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Pane[
                 Annotation["weber", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["magnetic-flux"], 
                    Key["special-name-of-unit"]}, "Item", False], "Mouse"], 
                 ImageSize -> {{100.80000000000001`, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation[
                 "Wb=kg \!\(\*SuperscriptBox[\(m\), \(2\)]\) \
\!\(\*SuperscriptBox[\(s\), \(-2\)]\) \!\(\*SuperscriptBox[\(A\), \(-1\)]\)", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["magnetic-flux"], 
                    Key["unit-expressed-terms-of-base-units"]}, "Item", 
                   False], "Mouse"], ImageSize -> {{560., Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation["V s", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["magnetic-flux"], 
                    Key["unit-expressed-in-terms-of-other-SI-units"]}, "Item",
                    False], "Mouse"], 
                 ImageSize -> {{44.800000000000004`, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["magnetic-flux-density", 
                    Style[
                    "magnetic-flux-density", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["magnetic-flux-density"]}, 1]]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["magnetic-flux-density"]}, "RowHeader", False], 
                  "Mouse"], 
                 ImageSize -> {{392.00000000000006`, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Pane[
                 Annotation["tesla", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["magnetic-flux-density"], 
                    Key["special-name-of-unit"]}, "Item", False], "Mouse"], 
                 ImageSize -> {{100.80000000000001`, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation[
                 "T=kg \!\(\*SuperscriptBox[\(s\), \(-2\)]\) \
\!\(\*SuperscriptBox[\(A\), \(-1\)]\)", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["magnetic-flux-density"], 
                    Key["unit-expressed-terms-of-base-units"]}, "Item", 
                   False], "Mouse"], ImageSize -> {{560., Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation["Wb/\!\(\*SuperscriptBox[\(m\), \(2\)]\)", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["magnetic-flux-density"], 
                    Key["unit-expressed-in-terms-of-other-SI-units"]}, "Item",
                    False], "Mouse"], 
                 ImageSize -> {{44.800000000000004`, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["inductance", 
                    Style[
                    "inductance", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["inductance"]}, 1]]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["inductance"]}, "RowHeader", False], "Mouse"], 
                 ImageSize -> {{392.00000000000006`, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Pane[
                 Annotation["henry", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["inductance"], 
                    Key["special-name-of-unit"]}, "Item", False], "Mouse"], 
                 ImageSize -> {{100.80000000000001`, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation[
                 "H=kg \!\(\*SuperscriptBox[\(m\), \(2\)]\) \
\!\(\*SuperscriptBox[\(s\), \(-2\)]\) \!\(\*SuperscriptBox[\(A\), \(-2\)]\)", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["inductance"], 
                    Key["unit-expressed-terms-of-base-units"]}, "Item", 
                   False], "Mouse"], ImageSize -> {{560., Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation["Wb/A", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["inductance"], 
                    Key["unit-expressed-in-terms-of-other-SI-units"]}, "Item",
                    False], "Mouse"], 
                 ImageSize -> {{44.800000000000004`, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["Celsius-temperature", 
                    Style[
                    "Celsius-temperature", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Celsius-temperature"]}, 1]]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Celsius-temperature"]}, "RowHeader", False], 
                  "Mouse"], 
                 ImageSize -> {{392.00000000000006`, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Pane[
                 Annotation["degree Celsius", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Celsius-temperature"], 
                    Key["special-name-of-unit"]}, "Item", False], "Mouse"], 
                 ImageSize -> {{100.80000000000001`, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation["\[Degree]C=K", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Celsius-temperature"], 
                    Key["unit-expressed-terms-of-base-units"]}, "Item", 
                   False], "Mouse"], ImageSize -> {{560., Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation["", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Celsius-temperature"], 
                    Key["unit-expressed-in-terms-of-other-SI-units"]}, "Item",
                    False], "Mouse"], 
                 ImageSize -> {{44.800000000000004`, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["luminous-flux", 
                    Style[
                    "luminous-flux", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["luminous-flux"]}, 1]]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["luminous-flux"]}, "RowHeader", False], "Mouse"], 
                 ImageSize -> {{392.00000000000006`, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Pane[
                 Annotation["lumen", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["luminous-flux"], 
                    Key["special-name-of-unit"]}, "Item", False], "Mouse"], 
                 ImageSize -> {{100.80000000000001`, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation["lm=cd sr", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["luminous-flux"], 
                    Key["unit-expressed-terms-of-base-units"]}, "Item", 
                   False], "Mouse"], ImageSize -> {{560., Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation["", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["luminous-flux"], 
                    Key["unit-expressed-in-terms-of-other-SI-units"]}, "Item",
                    False], "Mouse"], 
                 ImageSize -> {{44.800000000000004`, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["illuminance", 
                    Style[
                    "illuminance", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["illuminance"]}, 1]]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["illuminance"]}, "RowHeader", False], "Mouse"], 
                 ImageSize -> {{392.00000000000006`, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Pane[
                 Annotation["lux", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["illuminance"], 
                    Key["special-name-of-unit"]}, "Item", False], "Mouse"], 
                 ImageSize -> {{100.80000000000001`, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation["lx=cd sr \!\(\*SuperscriptBox[\(m\), \(-2\)]\)", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["illuminance"], 
                    Key["unit-expressed-terms-of-base-units"]}, "Item", 
                   False], "Mouse"], ImageSize -> {{560., Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation["lm/\!\(\*SuperscriptBox[\(m\), \(2\)]\)", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["illuminance"], 
                    Key["unit-expressed-in-terms-of-other-SI-units"]}, "Item",
                    False], "Mouse"], 
                 ImageSize -> {{44.800000000000004`, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["activity-referred-to-a-radionuclide", 
                    Style[
                    "activity-referred-to-a-radionuclide", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["activity-referred-to-a-radionuclide"]}, 1]]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["activity-referred-to-a-radionuclide"]}, "RowHeader", 
                   False], "Mouse"], 
                 ImageSize -> {{392.00000000000006`, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Pane[
                 Annotation["becquerel", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["activity-referred-to-a-radionuclide"], 
                    Key["special-name-of-unit"]}, "Item", False], "Mouse"], 
                 ImageSize -> {{100.80000000000001`, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation["Bq=\!\(\*SuperscriptBox[\(s\), \(-1\)]\)", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["activity-referred-to-a-radionuclide"], 
                    Key["unit-expressed-terms-of-base-units"]}, "Item", 
                   False], "Mouse"], ImageSize -> {{560., Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation["", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["activity-referred-to-a-radionuclide"], 
                    Key["unit-expressed-in-terms-of-other-SI-units"]}, "Item",
                    False], "Mouse"], 
                 ImageSize -> {{44.800000000000004`, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["absorbed-dose-or-kerma", 
                    Style[
                    "absorbed-dose-or-kerma", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["absorbed-dose-or-kerma"]}, 1]]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["absorbed-dose-or-kerma"]}, "RowHeader", False], 
                  "Mouse"], 
                 ImageSize -> {{392.00000000000006`, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Pane[
                 Annotation["gray", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["absorbed-dose-or-kerma"], 
                    Key["special-name-of-unit"]}, "Item", False], "Mouse"], 
                 ImageSize -> {{100.80000000000001`, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation[
                 "Gy=\!\(\*SuperscriptBox[\(m\), \(2\)]\) \
\!\(\*SuperscriptBox[\(s\), \(-2\)]\)", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["absorbed-dose-or-kerma"], 
                    Key["unit-expressed-terms-of-base-units"]}, "Item", 
                   False], "Mouse"], ImageSize -> {{560., Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation["J/kg", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["absorbed-dose-or-kerma"], 
                    Key["unit-expressed-in-terms-of-other-SI-units"]}, "Item",
                    False], "Mouse"], 
                 ImageSize -> {{44.800000000000004`, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}]}, {
               Item[
                Deploy[
                 Pane[
                  Row[{
                    Spacer[2], 
                    Style[
                    Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + (-20) 
                    If[True, 22, 1], {1, 22 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + (-20) 
                    If[False, 22, 1], {1, 22 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], " ", 
                    Style[
                    Mouseover[
                    Style[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[22, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    Style[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[22, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 30, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100000000, {}]], MenuEvaluator -> Automatic]}], 
                    " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[False, 22, 1], {1, 22 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[True, 22, 1], {1, 22 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None]}], ContextMenu -> {}]}], 
                  ImageMargins -> {{0, -1}, {-1, 1}}]], Background -> 
                RGBColor[
                 0.9764705882352941, 0.9764705882352941, 0.9764705882352941], 
                Alignment -> {Left, Top}], SpanFromLeft, SpanFromLeft, 
               SpanFromLeft}}, 
             BaseStyle -> {
              ContextMenu -> 
               Dynamic[
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                 Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                   TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                   TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                    True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                   TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                    Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
               "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, 
             Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
             Spacings -> {0, 0}, Alignment -> Left, 
             BaseStyle -> {
              FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
               Plain}], LineBreakWithin -> False, ContextMenu -> {}, 
            NumberMarks -> False, ShowAutoStyles -> False]], 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
        Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
            Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
            
            Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
              TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
              TypeSystem`NestedGrid`PackagePrivate`datasetData[
               TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
               Not[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
          TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
          TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
            FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
            TypeSystem`SparseGrid[
             TypeSystem`H["(data no longer present)"]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
         TrackedSymbols :> {
          TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
           TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
        DynamicModuleValues :> {}], 
       TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
         TypeSystem`PackageScope`SubViewPathbar[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, 
          TypeSystem`NestedGrid`PackagePrivate`updateState[
          TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
           TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
           TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
        TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
       TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
        Framed[
         Dynamic[
          Replace[
          TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
           TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
              Blank[]] -> "", 
            TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
              Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
               Blank[]], 
              Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
               Blank[]], 
              Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
               Blank[]]] :> (
             Increment[
              TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
             TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
              TypeSystem`NestedGrid`PackagePrivate`path$; 
             TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
              TypeSystem`NestedGrid`PackagePrivate`pathType$; 
             TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
              TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
             TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
               TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
             TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
              TypeSystem`NestedGrid`PackagePrivate`path$, 
               TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
            Spacer[10], Blank[] :> Spacer[10]}], 
          TrackedSymbols :> {
           TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
         FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
         Top, ImageSize -> {Automatic, 15}], FontSize -> 1], 
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
       DynamicWrapperBox[
        DynamicBox[ToBoxes[
          Dataset`DatasetContent[
          2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
           "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], 
           "State" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
           "VPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], 
           "HPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], 
           "TopBar" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
           "BottomBar" -> 
           Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], 
           "OutputID" -> Hold[
             TypeSystem`NestedGrid`PackagePrivate`localHold[
             TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], 
          StandardForm],
         ImageSizeCache->{1402., {299.6340332872234, 305.3659667127766}},
         TrackedSymbols:>{
          TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
        MouseAnnotation[],
        ImageSizeCache->{1402., {299.6340332872234, 305.3659667127766}}],
       BaseStyle->{LineBreakWithin -> False},
       DynamicModuleValues:>{},
       Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
        CreateUUID[]),
       UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
      Deploy,
      DefaultBaseStyle->"Deploy"],
     Dataset`InterpretDataset[1],
     Editable->False,
     SelectWithContents->True,
     Selectable->False]}], ",", 
   RowBox[{"\<\"base-quantities-and-units\"\>", "\[Rule]", 
    TagBox[
     TagBox[
      DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
       "InitialData" -> <|
         "time" -> <|
           "quantity-name" -> "time", "typical-quantity-symbol" -> "t", 
            "unit-name" -> "second", "unit-symbol" -> "s"|>, 
          "length" -> <|
           "quantity-name" -> "length", "typical-quantity-symbol" -> "l", 
            "unit-name" -> "meter", "unit-symbol" -> "m"|>, 
          "mass" -> <|
           "quantity-name" -> "mass", "typical-quantity-symbol" -> "l", 
            "unit-name" -> "kilogram", "unit-symbol" -> "kg"|>, 
          "electric-current" -> <|
           "quantity-name" -> "electric-current", "typical-quantity-symbol" -> 
            "i", "unit-name" -> "ampere", "unit-symbol" -> "A"|>, 
          "thermodynamic-temperature" -> <|
           "quantity-name" -> "thermodynamic-temperature", 
            "typical-quantity-symbol" -> "T", "unit-name" -> "kelvin", 
            "unit-symbol" -> "K"|>, 
          "amount-of-substance" -> <|
           "quantity-name" -> "amount-of-substance", 
            "typical-quantity-symbol" -> "n", "unit-name" -> "mole", 
            "unit-symbol" -> "mol"|>, 
          "luminous-intensity" -> <|
           "quantity-name" -> "luminous-intensity", "typical-quantity-symbol" -> 
            "\!\(\*SubscriptBox[\(I\), \(v\)]\)", "unit-name" -> "candela", 
            "unit-symbol" -> "cd"|>|>, "AllowEmbedding" -> True, 
        "InitialShape" -> TypeSystem`PackageScope`HeaderShape[<|{All, 
             TypeSystem`PackageScope`KeyDummy[22]} -> 
           1, {All, "quantity-name"} -> 1, {All, "typical-quantity-symbol"} -> 
           1, {All, "unit-name"} -> 1, {All, "unit-symbol"} -> 1|>, 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`ColumnShape[
            TypeSystem`PackageScope`KeyValueShape[
             TypeSystem`PackageScope`AtomShape[280.], 
             TypeSystem`PackageScope`Limited[
              
              TypeSystem`PackageScope`RowShape[<|
               "quantity-name" -> TypeSystem`PackageScope`AtomShape[280.], 
                "typical-quantity-symbol" -> 
                TypeSystem`PackageScope`AtomShape[291.20000000000005`], 
                "unit-name" -> 
                TypeSystem`PackageScope`AtomShape[89.60000000000001], 
                "unit-symbol" -> TypeSystem`PackageScope`AtomShape[33.6]|>], 
              DirectedInfinity[1], 4, {All}]]], 7, 
           DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Assoc[
          TypeSystem`Atom[String], 
          
          TypeSystem`Struct[{
           "quantity-name", "typical-quantity-symbol", "unit-name", 
            "unit-symbol"}, {
            TypeSystem`Atom[String], 
            TypeSystem`Atom[String], 
            TypeSystem`Atom[String], 
            TypeSystem`Atom[String]}], 7], "Meta" -> <||>, "RowTarget" -> 20, 
        "ColumnTarget" -> 10, "Shape" -> 
        TypeSystem`PackageScope`HeaderShape[<|{All, 
             TypeSystem`PackageScope`KeyDummy[22]} -> 
           1, {All, "quantity-name"} -> 1, {All, "typical-quantity-symbol"} -> 
           1, {All, "unit-name"} -> 1, {All, "unit-symbol"} -> 1|>, 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`ColumnShape[
            TypeSystem`PackageScope`KeyValueShape[
             TypeSystem`PackageScope`AtomShape[280.], 
             TypeSystem`PackageScope`Limited[
              
              TypeSystem`PackageScope`RowShape[<|
               "quantity-name" -> TypeSystem`PackageScope`AtomShape[280.], 
                "typical-quantity-symbol" -> 
                TypeSystem`PackageScope`AtomShape[291.20000000000005`], 
                "unit-name" -> 
                TypeSystem`PackageScope`AtomShape[89.60000000000001], 
                "unit-symbol" -> TypeSystem`PackageScope`AtomShape[33.6]|>], 
              DirectedInfinity[1], 4, {All}]]], 7, 
           DirectedInfinity[1], {}]], "Type" -> TypeSystem`Assoc[
          TypeSystem`Atom[String], 
          
          TypeSystem`Struct[{
           "quantity-name", "typical-quantity-symbol", "unit-name", 
            "unit-symbol"}, {
            TypeSystem`Atom[String], 
            TypeSystem`Atom[String], 
            TypeSystem`Atom[String], 
            TypeSystem`Atom[String]}], 7], "Path" -> {}, "DisplayedRowCount" -> 
        7, "DisplayedColumnCount" -> 4, "DataRowCount" -> 7, 
        "DataColumnCount" -> 4, "SortPaths" -> {}, "SortDirections" -> {}, 
        "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
       TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
       TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
       TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
       DynamicModule[{
        TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
           Style[
            Grid[{{
               Item[
                Pane[
                 Annotation[
                  Mouseover[
                   
                   Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                    Scaled[-0.15]], 
                   Graphics[{
                    GrayLevel[0.6], 
                    
                    Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
                    Rational[-1, 2]}}]}, ImageSize -> 6, BaselinePosition -> 
                    Scaled[-0.15]]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   All, Keys}, "KeyDummy", True], "Mouse"], 
                 ImageSize -> {{1, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["quantity-name", 
                    Style[
                    "quantity-name", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "quantity-name"}, 1]]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   All, "quantity-name"}, "ColumnHeader", True], "Mouse"], 
                 ImageSize -> {{1, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["typical-quantity-symbol", 
                    Style[
                    "typical-quantity-symbol", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "typical-quantity-symbol"}, 1]]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   All, "typical-quantity-symbol"}, "ColumnHeader", True], 
                  "Mouse"], ImageSize -> {{1, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["unit-name", 
                    Style[
                    "unit-name", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "unit-name"}, 1]]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   All, "unit-name"}, "ColumnHeader", True], "Mouse"], 
                 ImageSize -> {{1, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["unit-symbol", 
                    Style[
                    "unit-symbol", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "unit-symbol"}, 1]]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   All, "unit-symbol"}, "ColumnHeader", True], "Mouse"], 
                 ImageSize -> {{1, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["time", 
                    Style[
                    "time", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["time"]}, 1]]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["time"]}, "RowHeader", False], "Mouse"], 
                 ImageSize -> {{280., Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Pane[
                 Annotation["time", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["time"], 
                    Key["quantity-name"]}, "Item", False], "Mouse"], 
                 ImageSize -> {{280., Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation["t", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["time"], 
                    Key["typical-quantity-symbol"]}, "Item", False], "Mouse"],
                  ImageSize -> {{291.20000000000005`, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation["second", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["time"], 
                    Key["unit-name"]}, "Item", False], "Mouse"], 
                 ImageSize -> {{89.60000000000001, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation["s", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["time"], 
                    Key["unit-symbol"]}, "Item", False], "Mouse"], 
                 ImageSize -> {{33.6, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["length", 
                    Style[
                    "length", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["length"]}, 1]]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["length"]}, "RowHeader", False], "Mouse"], 
                 ImageSize -> {{280., Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Pane[
                 Annotation["length", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["length"], 
                    Key["quantity-name"]}, "Item", False], "Mouse"], 
                 ImageSize -> {{280., Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation["l", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["length"], 
                    Key["typical-quantity-symbol"]}, "Item", False], "Mouse"],
                  ImageSize -> {{291.20000000000005`, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation["meter", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["length"], 
                    Key["unit-name"]}, "Item", False], "Mouse"], 
                 ImageSize -> {{89.60000000000001, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation["m", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["length"], 
                    Key["unit-symbol"]}, "Item", False], "Mouse"], 
                 ImageSize -> {{33.6, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["mass", 
                    Style[
                    "mass", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["mass"]}, 1]]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["mass"]}, "RowHeader", False], "Mouse"], 
                 ImageSize -> {{280., Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Pane[
                 Annotation["mass", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["mass"], 
                    Key["quantity-name"]}, "Item", False], "Mouse"], 
                 ImageSize -> {{280., Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation["l", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["mass"], 
                    Key["typical-quantity-symbol"]}, "Item", False], "Mouse"],
                  ImageSize -> {{291.20000000000005`, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation["kilogram", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["mass"], 
                    Key["unit-name"]}, "Item", False], "Mouse"], 
                 ImageSize -> {{89.60000000000001, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation["kg", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["mass"], 
                    Key["unit-symbol"]}, "Item", False], "Mouse"], 
                 ImageSize -> {{33.6, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["electric-current", 
                    Style[
                    "electric-current", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["electric-current"]}, 1]]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["electric-current"]}, "RowHeader", False], "Mouse"], 
                 ImageSize -> {{280., Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Pane[
                 Annotation["electric-current", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["electric-current"], 
                    Key["quantity-name"]}, "Item", False], "Mouse"], 
                 ImageSize -> {{280., Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation["i", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["electric-current"], 
                    Key["typical-quantity-symbol"]}, "Item", False], "Mouse"],
                  ImageSize -> {{291.20000000000005`, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation["ampere", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["electric-current"], 
                    Key["unit-name"]}, "Item", False], "Mouse"], 
                 ImageSize -> {{89.60000000000001, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation["A", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["electric-current"], 
                    Key["unit-symbol"]}, "Item", False], "Mouse"], 
                 ImageSize -> {{33.6, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["thermodynamic-temperature", 
                    Style[
                    "thermodynamic-temperature", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["thermodynamic-temperature"]}, 1]]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["thermodynamic-temperature"]}, "RowHeader", False], 
                  "Mouse"], ImageSize -> {{280., Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Pane[
                 Annotation["thermodynamic-temperature", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["thermodynamic-temperature"], 
                    Key["quantity-name"]}, "Item", False], "Mouse"], 
                 ImageSize -> {{280., Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation["T", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["thermodynamic-temperature"], 
                    Key["typical-quantity-symbol"]}, "Item", False], "Mouse"],
                  ImageSize -> {{291.20000000000005`, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation["kelvin", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["thermodynamic-temperature"], 
                    Key["unit-name"]}, "Item", False], "Mouse"], 
                 ImageSize -> {{89.60000000000001, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation["K", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["thermodynamic-temperature"], 
                    Key["unit-symbol"]}, "Item", False], "Mouse"], 
                 ImageSize -> {{33.6, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["amount-of-substance", 
                    Style[
                    "amount-of-substance", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["amount-of-substance"]}, 1]]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["amount-of-substance"]}, "RowHeader", False], 
                  "Mouse"], ImageSize -> {{280., Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Pane[
                 Annotation["amount-of-substance", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["amount-of-substance"], 
                    Key["quantity-name"]}, "Item", False], "Mouse"], 
                 ImageSize -> {{280., Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation["n", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["amount-of-substance"], 
                    Key["typical-quantity-symbol"]}, "Item", False], "Mouse"],
                  ImageSize -> {{291.20000000000005`, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation["mole", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["amount-of-substance"], 
                    Key["unit-name"]}, "Item", False], "Mouse"], 
                 ImageSize -> {{89.60000000000001, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation["mol", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["amount-of-substance"], 
                    Key["unit-symbol"]}, "Item", False], "Mouse"], 
                 ImageSize -> {{33.6, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["luminous-intensity", 
                    Style[
                    "luminous-intensity", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["luminous-intensity"]}, 1]]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["luminous-intensity"]}, "RowHeader", False], "Mouse"],
                  ImageSize -> {{280., Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Pane[
                 Annotation["luminous-intensity", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["luminous-intensity"], 
                    Key["quantity-name"]}, "Item", False], "Mouse"], 
                 ImageSize -> {{280., Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation["\!\(\*SubscriptBox[\(I\), \(v\)]\)", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["luminous-intensity"], 
                    Key["typical-quantity-symbol"]}, "Item", False], "Mouse"],
                  ImageSize -> {{291.20000000000005`, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation["candela", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["luminous-intensity"], 
                    Key["unit-name"]}, "Item", False], "Mouse"], 
                 ImageSize -> {{89.60000000000001, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation["cd", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["luminous-intensity"], 
                    Key["unit-symbol"]}, "Item", False], "Mouse"], 
                 ImageSize -> {{33.6, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}]}}, 
             BaseStyle -> {
              ContextMenu -> 
               Dynamic[
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                 Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                   TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                   TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                    True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                   TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                    Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
               "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, 
             Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
             Spacings -> {0, 0}, Alignment -> Left, 
             BaseStyle -> {
              FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
               Plain}], LineBreakWithin -> False, ContextMenu -> {}, 
            NumberMarks -> False, ShowAutoStyles -> False]], 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
        Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
            Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
            
            Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
              TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
              TypeSystem`NestedGrid`PackagePrivate`datasetData[
               TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
               Not[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
          TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
          TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
            FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
            TypeSystem`SparseGrid[
             TypeSystem`H["(data no longer present)"]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
         TrackedSymbols :> {
          TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
           TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
        DynamicModuleValues :> {}], 
       TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
         TypeSystem`PackageScope`SubViewPathbar[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, 
          TypeSystem`NestedGrid`PackagePrivate`updateState[
          TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
           TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
           TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
        TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
       TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
        Framed[
         Dynamic[
          Replace[
          TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
           TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
              Blank[]] -> "", 
            TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
              Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
               Blank[]], 
              Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
               Blank[]], 
              Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
               Blank[]]] :> (
             Increment[
              TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
             TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
              TypeSystem`NestedGrid`PackagePrivate`path$; 
             TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
              TypeSystem`NestedGrid`PackagePrivate`pathType$; 
             TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
              TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
             TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
               TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
             TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
              TypeSystem`NestedGrid`PackagePrivate`path$, 
               TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
            Spacer[10], Blank[] :> Spacer[10]}], 
          TrackedSymbols :> {
           TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
         FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
         Top, ImageSize -> {Automatic, 15}], FontSize -> 1], 
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
       DynamicWrapperBox[
        DynamicBox[ToBoxes[
          Dataset`DatasetContent[
          2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
           "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], 
           "State" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
           "VPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], 
           "HPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], 
           "TopBar" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
           "BottomBar" -> 
           Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], 
           "OutputID" -> Hold[
             TypeSystem`NestedGrid`PackagePrivate`localHold[
             TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], 
          StandardForm],
         ImageSizeCache->{1056., {113.63403328722343`, 119.36596671277657`}},
         TrackedSymbols:>{
          TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
        MouseAnnotation[],
        ImageSizeCache->{1056., {113.63403328722343`, 119.36596671277657`}}],
       BaseStyle->{LineBreakWithin -> False},
       DynamicModuleValues:>{},
       Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
        CreateUUID[]),
       UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
      Deploy,
      DefaultBaseStyle->"Deploy"],
     Dataset`InterpretDataset[1],
     Editable->False,
     SelectWithContents->True,
     Selectable->False]}]}], "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.877882897651615*^9},
 CellLabel->"Out[65]=",ExpressionUUID->"1c305f2b-2f74-46fb-af7a-273006760f64"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Keys", "/@", 
  RowBox[{"ResourceData", "[", 
   RowBox[{"\"\<SI Brochure Data\>\"", ",", 
    RowBox[{"{", 
     RowBox[{
     "\"\<SI-units-with-special-names-and-symbols\>\"", ",", 
      "\"\<base-quantities-and-units\>\""}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.877882909951467*^9, 3.877882911223363*^9}},
 CellLabel->"In[66]:=",ExpressionUUID->"d46593d3-381b-4c56-86e8-a8f3f113eae8"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"SI-units-with-special-names-and-symbols\"\>", "\[Rule]", 
    TagBox[
     TagBox[
      DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
       "InitialData" -> {
         "plane-angle", "solid-angle", "frequency", "force", 
          "pressure-or-stress", "energy-or-work-or-amount-of-heat", 
          "power-or-radiant-flux", "electric-charge", 
          "electric-potential-difference", "capacitance", 
          "electric-resistance", "electric-conductance", "magnetic-flux", 
          "magnetic-flux-density", "inductance", "Celsius-temperature", 
          "luminous-flux", "illuminance", 
          "activity-referred-to-a-radionuclide", "absorbed-dose-or-kerma", 
          "dose-equivalent", "catalytic-activity"}, "AllowEmbedding" -> True, 
        "InitialShape" -> TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`MulticolumnShape[
          2, 11, 22, 392.00000000000006`], 22, 11, {All}], "InitialType" -> 
        TypeSystem`Vector[
          TypeSystem`Atom[String], 22], "Meta" -> <||>, "RowTarget" -> 20, 
        "ColumnTarget" -> 10, "Shape" -> TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`MulticolumnShape[
          2, 11, 22, 392.00000000000006`], 22, 11, {All}], "Type" -> 
        TypeSystem`Vector[
          TypeSystem`Atom[String], 22], "Path" -> {}, "DisplayedRowCount" -> 
        2, "DisplayedColumnCount" -> 11, "DataRowCount" -> 2, 
        "DataColumnCount" -> 11, "SortPaths" -> {}, "SortDirections" -> {}, 
        "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
       TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
       TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
       TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
       DynamicModule[{
        TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
           Style[
            Grid[{{
               Item[
                Pane[
                 Annotation["plane-angle", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1}, 
                   "Item", False], "Mouse"], 
                 ImageSize -> {{392.00000000000006`, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}, Frame -> {{
                   GrayLevel[0.7490196078431373], 
                   GrayLevel[0.7490196078431373]}, Inherited}], 
               Item[
                Pane[
                 Annotation["solid-angle", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2}, 
                   "Item", False], "Mouse"], 
                 ImageSize -> {{392.00000000000006`, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}, Frame -> {{
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                   GrayLevel[0.7490196078431373]}, Inherited}], 
               Item[
                Pane[
                 Annotation["frequency", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3}, 
                   "Item", False], "Mouse"], 
                 ImageSize -> {{392.00000000000006`, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}, Frame -> {{
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                   GrayLevel[0.7490196078431373]}, Inherited}], 
               Item[
                Pane[
                 Annotation["force", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4}, 
                   "Item", False], "Mouse"], 
                 ImageSize -> {{392.00000000000006`, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}, Frame -> {{
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                   GrayLevel[0.7490196078431373]}, Inherited}], 
               Item[
                Pane[
                 Annotation["pressure-or-stress", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5}, 
                   "Item", False], "Mouse"], 
                 ImageSize -> {{392.00000000000006`, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}, Frame -> {{
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                   GrayLevel[0.7490196078431373]}, Inherited}], 
               Item[
                Pane[
                 Annotation["energy-or-work-or-amount-of-heat", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6}, 
                   "Item", False], "Mouse"], 
                 ImageSize -> {{392.00000000000006`, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}, Frame -> {{
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                   GrayLevel[0.7490196078431373]}, Inherited}], 
               Item[
                Pane[
                 Annotation["power-or-radiant-flux", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7}, 
                   "Item", False], "Mouse"], 
                 ImageSize -> {{392.00000000000006`, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}, Frame -> {{
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                   GrayLevel[0.7490196078431373]}, Inherited}], 
               Item[
                Pane[
                 Annotation["electric-charge", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8}, 
                   "Item", False], "Mouse"], 
                 ImageSize -> {{392.00000000000006`, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}, Frame -> {{
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                   GrayLevel[0.7490196078431373]}, Inherited}], 
               Item[
                Pane[
                 Annotation["electric-potential-difference", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9}, 
                   "Item", False], "Mouse"], 
                 ImageSize -> {{392.00000000000006`, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}, Frame -> {{
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                   GrayLevel[0.7490196078431373]}, Inherited}], 
               Item[
                Pane[
                 Annotation["capacitance", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10}, 
                   "Item", False], "Mouse"], 
                 ImageSize -> {{392.00000000000006`, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}, Frame -> {{
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                   GrayLevel[0.7490196078431373]}, Inherited}], 
               Item[
                Pane[
                 Annotation["electric-resistance", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11}, 
                   "Item", False], "Mouse"], 
                 ImageSize -> {{392.00000000000006`, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}, Frame -> {{
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                   GrayLevel[0.7490196078431373]}, Inherited}]}, {
               Item[
                Pane[
                 Annotation["electric-conductance", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12}, 
                   "Item", False], "Mouse"], 
                 ImageSize -> {{392.00000000000006`, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}, Frame -> {{
                   GrayLevel[0.7490196078431373], 
                   GrayLevel[0.7490196078431373]}, Inherited}], 
               Item[
                Pane[
                 Annotation["magnetic-flux", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13}, 
                   "Item", False], "Mouse"], 
                 ImageSize -> {{392.00000000000006`, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}, Frame -> {{
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                   GrayLevel[0.7490196078431373]}, Inherited}], 
               Item[
                Pane[
                 Annotation["magnetic-flux-density", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14}, 
                   "Item", False], "Mouse"], 
                 ImageSize -> {{392.00000000000006`, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}, Frame -> {{
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                   GrayLevel[0.7490196078431373]}, Inherited}], 
               Item[
                Pane[
                 Annotation["inductance", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15}, 
                   "Item", False], "Mouse"], 
                 ImageSize -> {{392.00000000000006`, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}, Frame -> {{
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                   GrayLevel[0.7490196078431373]}, Inherited}], 
               Item[
                Pane[
                 Annotation["Celsius-temperature", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16}, 
                   "Item", False], "Mouse"], 
                 ImageSize -> {{392.00000000000006`, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}, Frame -> {{
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                   GrayLevel[0.7490196078431373]}, Inherited}], 
               Item[
                Pane[
                 Annotation["luminous-flux", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17}, 
                   "Item", False], "Mouse"], 
                 ImageSize -> {{392.00000000000006`, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}, Frame -> {{
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                   GrayLevel[0.7490196078431373]}, Inherited}], 
               Item[
                Pane[
                 Annotation["illuminance", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18}, 
                   "Item", False], "Mouse"], 
                 ImageSize -> {{392.00000000000006`, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}, Frame -> {{
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                   GrayLevel[0.7490196078431373]}, Inherited}], 
               Item[
                Pane[
                 Annotation["activity-referred-to-a-radionuclide", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19}, 
                   "Item", False], "Mouse"], 
                 ImageSize -> {{392.00000000000006`, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}, Frame -> {{
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                   GrayLevel[0.7490196078431373]}, Inherited}], 
               Item[
                Pane[
                 Annotation["absorbed-dose-or-kerma", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20}, 
                   "Item", False], "Mouse"], 
                 ImageSize -> {{392.00000000000006`, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}, Frame -> {{
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                   GrayLevel[0.7490196078431373]}, Inherited}], 
               Item[
                Pane[
                 Annotation["dose-equivalent", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{21}, 
                   "Item", False], "Mouse"], 
                 ImageSize -> {{392.00000000000006`, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}, Frame -> {{
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                   GrayLevel[0.7490196078431373]}, Inherited}], 
               Item[
                Pane[
                 Annotation["catalytic-activity", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{22}, 
                   "Item", False], "Mouse"], 
                 ImageSize -> {{392.00000000000006`, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}, Frame -> {{
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                   GrayLevel[0.7490196078431373]}, Inherited}]}}, 
             BaseStyle -> {
              ContextMenu -> 
               Dynamic[
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                 Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                   TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                   TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                    True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                   TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                    Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
               "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, 
             Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
             Spacings -> {0, 0}, Alignment -> Left, 
             BaseStyle -> {
              FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
               Plain}], LineBreakWithin -> False, ContextMenu -> {}, 
            NumberMarks -> False, ShowAutoStyles -> False]], 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
        Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
            Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
            
            Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
              TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
              TypeSystem`NestedGrid`PackagePrivate`datasetData[
               TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
               Not[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
          TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
          TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
            FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
            TypeSystem`SparseGrid[
             TypeSystem`H["(data no longer present)"]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
         TrackedSymbols :> {
          TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
           TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
        DynamicModuleValues :> {}], 
       TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
         TypeSystem`PackageScope`SubViewPathbar[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, 
          TypeSystem`NestedGrid`PackagePrivate`updateState[
          TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
           TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
           TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
        TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
       TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
        Framed[
         Dynamic[
          Replace[
          TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
           TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
              Blank[]] -> "", 
            TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
              Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
               Blank[]], 
              Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
               Blank[]], 
              Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
               Blank[]]] :> (
             Increment[
              TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
             TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
              TypeSystem`NestedGrid`PackagePrivate`path$; 
             TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
              TypeSystem`NestedGrid`PackagePrivate`pathType$; 
             TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
              TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
             TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
               TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
             TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
              TypeSystem`NestedGrid`PackagePrivate`path$, 
               TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
            Spacer[10], Blank[] :> Spacer[10]}], 
          TrackedSymbols :> {
           TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
         FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
         Top, ImageSize -> {Automatic, 15}], FontSize -> 1], 
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
       DynamicWrapperBox[
        DynamicBox[ToBoxes[
          Dataset`DatasetContent[
          2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
           "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], 
           "State" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
           "VPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], 
           "HPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], 
           "TopBar" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
           "BottomBar" -> 
           Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], 
           "OutputID" -> Hold[
             TypeSystem`NestedGrid`PackagePrivate`localHold[
             TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], 
          StandardForm],
         ImageSizeCache->{4402., {32.63403328722343, 38.36596671277657}},
         TrackedSymbols:>{
          TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
        MouseAnnotation[],
        ImageSizeCache->{4402., {32.63403328722343, 38.36596671277657}}],
       BaseStyle->{LineBreakWithin -> False},
       DynamicModuleValues:>{},
       Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
        CreateUUID[]),
       UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
      Deploy,
      DefaultBaseStyle->"Deploy"],
     Dataset`InterpretDataset[1],
     Editable->False,
     SelectWithContents->True,
     Selectable->False]}], ",", 
   RowBox[{"\<\"base-quantities-and-units\"\>", "\[Rule]", 
    TagBox[
     TagBox[
      DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
       "InitialData" -> {
         "time", "length", "mass", "electric-current", 
          "thermodynamic-temperature", "amount-of-substance", 
          "luminous-intensity"}, "AllowEmbedding" -> True, "InitialShape" -> 
        TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`ColumnShape[
           TypeSystem`PackageScope`AtomShape[280.]], 7, 
          DirectedInfinity[1], {}], "InitialType" -> TypeSystem`Vector[
          TypeSystem`Atom[String], 7], "Meta" -> <||>, "RowTarget" -> 20, 
        "ColumnTarget" -> 10, "Shape" -> TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`ColumnShape[
           TypeSystem`PackageScope`AtomShape[280.]], 7, 
          DirectedInfinity[1], {}], "Type" -> TypeSystem`Vector[
          TypeSystem`Atom[String], 7], "Path" -> {}, "DisplayedRowCount" -> 7,
         "DisplayedColumnCount" -> 1, "DataRowCount" -> 7, "DataColumnCount" -> 
        1, "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> 
        Null, "UpdateType" -> 1|>, 
       TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
       TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
       TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
       DynamicModule[{
        TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
           Style[
            Grid[{{
               Item[
                Pane[
                 Annotation["time", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1}, 
                   "Item", False], "Mouse"], 
                 ImageSize -> {{280., Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}]}, {
               Item[
                Pane[
                 Annotation["length", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2}, 
                   "Item", False], "Mouse"], 
                 ImageSize -> {{280., Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}]}, {
               Item[
                Pane[
                 Annotation["mass", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3}, 
                   "Item", False], "Mouse"], 
                 ImageSize -> {{280., Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}]}, {
               Item[
                Pane[
                 Annotation["electric-current", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4}, 
                   "Item", False], "Mouse"], 
                 ImageSize -> {{280., Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}]}, {
               Item[
                Pane[
                 Annotation["thermodynamic-temperature", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5}, 
                   "Item", False], "Mouse"], 
                 ImageSize -> {{280., Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}]}, {
               Item[
                Pane[
                 Annotation["amount-of-substance", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6}, 
                   "Item", False], "Mouse"], 
                 ImageSize -> {{280., Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}]}, {
               Item[
                Pane[
                 Annotation["luminous-intensity", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7}, 
                   "Item", False], "Mouse"], 
                 ImageSize -> {{280., Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}]}}, 
             BaseStyle -> {
              ContextMenu -> 
               Dynamic[
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                 Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                   TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                   TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                    True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                   TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                    Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
               "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, 
             Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
             Spacings -> {0, 0}, Alignment -> Left, 
             BaseStyle -> {
              FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
               Plain}], LineBreakWithin -> False, ContextMenu -> {}, 
            NumberMarks -> False, ShowAutoStyles -> False]], 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
        Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
            Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
            
            Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
              TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
              TypeSystem`NestedGrid`PackagePrivate`datasetData[
               TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
               Not[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
          TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
          TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
            FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
            TypeSystem`SparseGrid[
             TypeSystem`H["(data no longer present)"]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
         TrackedSymbols :> {
          TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
           TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
        DynamicModuleValues :> {}], 
       TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
         TypeSystem`PackageScope`SubViewPathbar[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, 
          TypeSystem`NestedGrid`PackagePrivate`updateState[
          TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
           TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
           TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
        TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
       TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
        Framed[
         Dynamic[
          Replace[
          TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
           TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
              Blank[]] -> "", 
            TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
              Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
               Blank[]], 
              Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
               Blank[]], 
              Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
               Blank[]]] :> (
             Increment[
              TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
             TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
              TypeSystem`NestedGrid`PackagePrivate`path$; 
             TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
              TypeSystem`NestedGrid`PackagePrivate`pathType$; 
             TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
              TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
             TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
               TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
             TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
              TypeSystem`NestedGrid`PackagePrivate`path$, 
               TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
            Spacer[10], Blank[] :> Spacer[10]}], 
          TrackedSymbols :> {
           TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
         FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
         Top, ImageSize -> {Automatic, 15}], FontSize -> 1], 
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
       DynamicWrapperBox[
        DynamicBox[ToBoxes[
          Dataset`DatasetContent[
          2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
           "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], 
           "State" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
           "VPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], 
           "HPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], 
           "TopBar" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
           "BottomBar" -> 
           Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], 
           "OutputID" -> Hold[
             TypeSystem`NestedGrid`PackagePrivate`localHold[
             TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], 
          StandardForm],
         ImageSizeCache->{289., {100.13403328722343`, 105.86596671277657`}},
         TrackedSymbols:>{
          TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
        MouseAnnotation[],
        ImageSizeCache->{289., {100.13403328722343`, 105.86596671277657`}}],
       BaseStyle->{LineBreakWithin -> False},
       DynamicModuleValues:>{},
       Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
        CreateUUID[]),
       UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
      Deploy,
      DefaultBaseStyle->"Deploy"],
     Dataset`InterpretDataset[1],
     Editable->False,
     SelectWithContents->True,
     Selectable->False]}]}], "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.877882911827429*^9},
 CellLabel->"Out[66]=",ExpressionUUID->"69c852ee-f361-427b-a20e-fa7241796c14"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Normal", "[", 
    RowBox[{"Keys", "[", "#", "]"}], "]"}], "&"}], "/@", 
  RowBox[{"ResourceData", "[", 
   RowBox[{"\"\<SI Brochure Data\>\"", ",", 
    RowBox[{"{", 
     RowBox[{
     "\"\<SI-units-with-special-names-and-symbols\>\"", ",", 
      "\"\<base-quantities-and-units\>\""}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.877882929623106*^9, 3.877882957994115*^9}},
 CellLabel->"In[68]:=",ExpressionUUID->"bf9a27d0-02de-4334-b0c2-d09edc462ac5"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"SI-units-with-special-names-and-symbols\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"plane-angle\"\>", ",", "\<\"solid-angle\"\>", 
      ",", "\<\"frequency\"\>", ",", "\<\"force\"\>", 
      ",", "\<\"pressure-or-stress\"\>", 
      ",", "\<\"energy-or-work-or-amount-of-heat\"\>", 
      ",", "\<\"power-or-radiant-flux\"\>", ",", "\<\"electric-charge\"\>", 
      ",", "\<\"electric-potential-difference\"\>", 
      ",", "\<\"capacitance\"\>", ",", "\<\"electric-resistance\"\>", 
      ",", "\<\"electric-conductance\"\>", ",", "\<\"magnetic-flux\"\>", 
      ",", "\<\"magnetic-flux-density\"\>", ",", "\<\"inductance\"\>", 
      ",", "\<\"Celsius-temperature\"\>", ",", "\<\"luminous-flux\"\>", 
      ",", "\<\"illuminance\"\>", 
      ",", "\<\"activity-referred-to-a-radionuclide\"\>", 
      ",", "\<\"absorbed-dose-or-kerma\"\>", ",", "\<\"dose-equivalent\"\>", 
      ",", "\<\"catalytic-activity\"\>"}], "}"}]}], ",", 
   RowBox[{"\<\"base-quantities-and-units\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"time\"\>", ",", "\<\"length\"\>", ",", "\<\"mass\"\>", 
      ",", "\<\"electric-current\"\>", 
      ",", "\<\"thermodynamic-temperature\"\>", 
      ",", "\<\"amount-of-substance\"\>", ",", "\<\"luminous-intensity\"\>"}],
      "}"}]}]}], "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{{3.877882931623557*^9, 3.8778829585020337`*^9}},
 CellLabel->"Out[68]=",ExpressionUUID->"329ed232-b981-4a2c-88b4-9e66695f001c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Values", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Normal", "[", 
     RowBox[{"Keys", "[", "#", "]"}], "]"}], "&"}], "/@", 
   RowBox[{"ResourceData", "[", 
    RowBox[{"\"\<SI Brochure Data\>\"", ",", 
     RowBox[{"{", 
      RowBox[{
      "\"\<SI-units-with-special-names-and-symbols\>\"", ",", 
       "\"\<base-quantities-and-units\>\""}], "}"}]}], "]"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8778829654060583`*^9, 3.877883007758958*^9}},
 CellLabel->"In[71]:=",ExpressionUUID->"92945013-203f-4229-b6e8-2e6ca052c2b5"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\<\"plane-angle\"\>", ",", "\<\"solid-angle\"\>", 
     ",", "\<\"frequency\"\>", ",", "\<\"force\"\>", 
     ",", "\<\"pressure-or-stress\"\>", 
     ",", "\<\"energy-or-work-or-amount-of-heat\"\>", 
     ",", "\<\"power-or-radiant-flux\"\>", ",", "\<\"electric-charge\"\>", 
     ",", "\<\"electric-potential-difference\"\>", ",", "\<\"capacitance\"\>",
      ",", "\<\"electric-resistance\"\>", ",", "\<\"electric-conductance\"\>",
      ",", "\<\"magnetic-flux\"\>", ",", "\<\"magnetic-flux-density\"\>", 
     ",", "\<\"inductance\"\>", ",", "\<\"Celsius-temperature\"\>", 
     ",", "\<\"luminous-flux\"\>", ",", "\<\"illuminance\"\>", 
     ",", "\<\"activity-referred-to-a-radionuclide\"\>", 
     ",", "\<\"absorbed-dose-or-kerma\"\>", ",", "\<\"dose-equivalent\"\>", 
     ",", "\<\"catalytic-activity\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"time\"\>", ",", "\<\"length\"\>", ",", "\<\"mass\"\>", 
     ",", "\<\"electric-current\"\>", 
     ",", "\<\"thermodynamic-temperature\"\>", 
     ",", "\<\"amount-of-substance\"\>", ",", "\<\"luminous-intensity\"\>"}], 
    "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.87788296685328*^9, {3.877883000066532*^9, 3.877883008408957*^9}},
 CellLabel->"Out[71]=",ExpressionUUID->"c20b34ae-47aa-445e-a311-c83a8e40ec83"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Join", "[", 
  RowBox[{"Values", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Normal", "[", 
      RowBox[{"Keys", "[", "#", "]"}], "]"}], "&"}], "/@", 
    RowBox[{"ResourceData", "[", 
     RowBox[{"\"\<SI Brochure Data\>\"", ",", 
      RowBox[{"{", 
       RowBox[{
       "\"\<SI-units-with-special-names-and-symbols\>\"", ",", 
        "\"\<base-quantities-and-units\>\""}], "}"}]}], "]"}]}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.877883011245678*^9, 3.8778830123812723`*^9}},
 CellLabel->"In[72]:=",ExpressionUUID->"5545fbdb-2b14-41de-a662-aad80d1b2854"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\<\"plane-angle\"\>", ",", "\<\"solid-angle\"\>", 
     ",", "\<\"frequency\"\>", ",", "\<\"force\"\>", 
     ",", "\<\"pressure-or-stress\"\>", 
     ",", "\<\"energy-or-work-or-amount-of-heat\"\>", 
     ",", "\<\"power-or-radiant-flux\"\>", ",", "\<\"electric-charge\"\>", 
     ",", "\<\"electric-potential-difference\"\>", ",", "\<\"capacitance\"\>",
      ",", "\<\"electric-resistance\"\>", ",", "\<\"electric-conductance\"\>",
      ",", "\<\"magnetic-flux\"\>", ",", "\<\"magnetic-flux-density\"\>", 
     ",", "\<\"inductance\"\>", ",", "\<\"Celsius-temperature\"\>", 
     ",", "\<\"luminous-flux\"\>", ",", "\<\"illuminance\"\>", 
     ",", "\<\"activity-referred-to-a-radionuclide\"\>", 
     ",", "\<\"absorbed-dose-or-kerma\"\>", ",", "\<\"dose-equivalent\"\>", 
     ",", "\<\"catalytic-activity\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"time\"\>", ",", "\<\"length\"\>", ",", "\<\"mass\"\>", 
     ",", "\<\"electric-current\"\>", 
     ",", "\<\"thermodynamic-temperature\"\>", 
     ",", "\<\"amount-of-substance\"\>", ",", "\<\"luminous-intensity\"\>"}], 
    "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.8778830129376373`*^9},
 CellLabel->"Out[72]=",ExpressionUUID->"be0da427-6a6a-4084-a914-504730720bd1"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"SIConformantBaseQUantities", "=", 
  RowBox[{"{", 
   RowBox[{
   "\"\<Second\>\"", ",", "\"\<Meter\>\"", ",", "\"\<Kilogram\>\"", ",", 
    "\"\<Ampere\>\"", ","}], "}"}]}]], "Input",
 CellChangeTimes->{{3.8778830775373464`*^9, 3.877883130210964*^9}, {
  3.877884964914787*^9, 
  3.87788498714821*^9}},ExpressionUUID->"3d962bcc-f501-4b29-8e28-\
d0f5d1400ce0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceData", "[", 
   RowBox[{
   "\"\<SI Brochure Data\>\"", ",", 
    "\"\<SI-units-with-special-names-and-symbols\>\""}], "]"}], "[", 
  RowBox[{"All", ",", "\"\<special-name-of-unit\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.8778849993863454`*^9, 3.8778850495604105`*^9}},
 CellLabel->"In[76]:=",ExpressionUUID->"8dc9a4c8-454b-4cfd-869a-1179d75b6049"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> <|
      "plane-angle" -> "radian", "solid-angle" -> "steradian", "frequency" -> 
       "hertz", "force" -> "newton", "pressure-or-stress" -> "pascal", 
       "energy-or-work-or-amount-of-heat" -> "joule", "power-or-radiant-flux" -> 
       "watt", "electric-charge" -> "coulomb", 
       "electric-potential-difference" -> "volt", "capacitance" -> "farad", 
       "electric-resistance" -> "ohm", "electric-conductance" -> "siemens", 
       "magnetic-flux" -> "weber", "magnetic-flux-density" -> "tesla", 
       "inductance" -> "henry", "Celsius-temperature" -> "degree Celsius", 
       "luminous-flux" -> "lumen", "illuminance" -> "lux", 
       "activity-referred-to-a-radionuclide" -> "becquerel", 
       "absorbed-dose-or-kerma" -> "gray", "dose-equivalent" -> "sievert", 
       "catalytic-activity" -> "katal"|>, "AllowEmbedding" -> True, 
     "InitialShape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`AtomShape[392.00000000000006`], 
         TypeSystem`PackageScope`AtomShape[100.80000000000001`]]], 20, 
       DirectedInfinity[1], {}], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Atom[String], 
       TypeSystem`Atom[String], 22], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`AtomShape[392.00000000000006`], 
         TypeSystem`PackageScope`AtomShape[100.80000000000001`]]], 20, 
       DirectedInfinity[1], {}], "Type" -> TypeSystem`Assoc[
       TypeSystem`Atom[String], 
       TypeSystem`Atom[String], 22], "Path" -> {}, "DisplayedRowCount" -> 20, 
     "DisplayedColumnCount" -> 1, "DataRowCount" -> 22, "DataColumnCount" -> 
     1, "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["plane-angle", 
                  Style[
                  "plane-angle", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["plane-angle"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["plane-angle"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{392.00000000000006`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["radian", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["plane-angle"]}, "Item", False], "Mouse"], 
              ImageSize -> {{100.80000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["solid-angle", 
                  Style[
                  "solid-angle", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["solid-angle"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["solid-angle"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{392.00000000000006`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["steradian", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["solid-angle"]}, "Item", False], "Mouse"], 
              ImageSize -> {{100.80000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["frequency", 
                  Style[
                  "frequency", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["frequency"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["frequency"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{392.00000000000006`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["hertz", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["frequency"]}, "Item", False], "Mouse"], 
              ImageSize -> {{100.80000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["force", 
                  Style[
                  "force", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["force"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["force"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{392.00000000000006`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["newton", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["force"]}, "Item", False], "Mouse"], 
              ImageSize -> {{100.80000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["pressure-or-stress", 
                  Style[
                  "pressure-or-stress", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["pressure-or-stress"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["pressure-or-stress"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{392.00000000000006`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["pascal", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["pressure-or-stress"]}, "Item", False], "Mouse"], 
              ImageSize -> {{100.80000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["energy-or-work-or-amount-of-heat", 
                  Style[
                  "energy-or-work-or-amount-of-heat", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["energy-or-work-or-amount-of-heat"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["energy-or-work-or-amount-of-heat"]}, "RowHeader", 
                False], "Mouse"], 
              ImageSize -> {{392.00000000000006`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["joule", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["energy-or-work-or-amount-of-heat"]}, "Item", False], 
               "Mouse"], 
              ImageSize -> {{100.80000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["power-or-radiant-flux", 
                  Style[
                  "power-or-radiant-flux", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["power-or-radiant-flux"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["power-or-radiant-flux"]}, "RowHeader", False], "Mouse"],
               ImageSize -> {{392.00000000000006`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["watt", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["power-or-radiant-flux"]}, "Item", False], "Mouse"], 
              ImageSize -> {{100.80000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["electric-charge", 
                  Style[
                  "electric-charge", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["electric-charge"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["electric-charge"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{392.00000000000006`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["coulomb", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["electric-charge"]}, "Item", False], "Mouse"], 
              ImageSize -> {{100.80000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["electric-potential-difference", 
                  Style[
                  "electric-potential-difference", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["electric-potential-difference"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["electric-potential-difference"]}, "RowHeader", False], 
               "Mouse"], 
              ImageSize -> {{392.00000000000006`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["volt", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["electric-potential-difference"]}, "Item", False], 
               "Mouse"], 
              ImageSize -> {{100.80000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["capacitance", 
                  Style[
                  "capacitance", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["capacitance"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["capacitance"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{392.00000000000006`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["farad", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["capacitance"]}, "Item", False], "Mouse"], 
              ImageSize -> {{100.80000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["electric-resistance", 
                  Style[
                  "electric-resistance", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["electric-resistance"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["electric-resistance"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{392.00000000000006`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["ohm", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["electric-resistance"]}, "Item", False], "Mouse"], 
              ImageSize -> {{100.80000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["electric-conductance", 
                  Style[
                  "electric-conductance", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["electric-conductance"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["electric-conductance"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{392.00000000000006`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["siemens", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["electric-conductance"]}, "Item", False], "Mouse"], 
              ImageSize -> {{100.80000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["magnetic-flux", 
                  Style[
                  "magnetic-flux", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["magnetic-flux"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["magnetic-flux"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{392.00000000000006`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["weber", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["magnetic-flux"]}, "Item", False], "Mouse"], 
              ImageSize -> {{100.80000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["magnetic-flux-density", 
                  Style[
                  "magnetic-flux-density", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["magnetic-flux-density"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["magnetic-flux-density"]}, "RowHeader", False], "Mouse"],
               ImageSize -> {{392.00000000000006`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["tesla", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["magnetic-flux-density"]}, "Item", False], "Mouse"], 
              ImageSize -> {{100.80000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["inductance", 
                  Style[
                  "inductance", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["inductance"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["inductance"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{392.00000000000006`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["henry", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["inductance"]}, "Item", False], "Mouse"], 
              ImageSize -> {{100.80000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Celsius-temperature", 
                  Style[
                  "Celsius-temperature", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Celsius-temperature"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Celsius-temperature"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{392.00000000000006`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["degree Celsius", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Celsius-temperature"]}, "Item", False], "Mouse"], 
              ImageSize -> {{100.80000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["luminous-flux", 
                  Style[
                  "luminous-flux", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["luminous-flux"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["luminous-flux"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{392.00000000000006`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["lumen", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["luminous-flux"]}, "Item", False], "Mouse"], 
              ImageSize -> {{100.80000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["illuminance", 
                  Style[
                  "illuminance", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["illuminance"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["illuminance"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{392.00000000000006`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["lux", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["illuminance"]}, "Item", False], "Mouse"], 
              ImageSize -> {{100.80000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["activity-referred-to-a-radionuclide", 
                  Style[
                  "activity-referred-to-a-radionuclide", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["activity-referred-to-a-radionuclide"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["activity-referred-to-a-radionuclide"]}, "RowHeader", 
                False], "Mouse"], 
              ImageSize -> {{392.00000000000006`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["becquerel", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["activity-referred-to-a-radionuclide"]}, "Item", False], 
               "Mouse"], 
              ImageSize -> {{100.80000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["absorbed-dose-or-kerma", 
                  Style[
                  "absorbed-dose-or-kerma", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["absorbed-dose-or-kerma"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["absorbed-dose-or-kerma"]}, "RowHeader", False], 
               "Mouse"], 
              ImageSize -> {{392.00000000000006`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["gray", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["absorbed-dose-or-kerma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{100.80000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Deploy[
              Pane[
               Row[{
                 Spacer[2], 
                 Style[
                  Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + (-20) 
                    If[True, 22, 1], {1, 22 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + (-20) 
                    If[False, 22, 1], {1, 22 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], " ", 
                    Style[
                    Mouseover[
                    Style[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[22, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    Style[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[22, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 30, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100000000, {}]], MenuEvaluator -> Automatic]}], 
                    " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[False, 22, 1], {1, 22 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[True, 22, 1], {1, 22 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None]}], ContextMenu -> {}]}], 
               ImageMargins -> {{0, -1}, {-1, 1}}]], Background -> 
             RGBColor[
              0.9764705882352941, 0.9764705882352941, 0.9764705882352941], 
             Alignment -> {Left, Top}], SpanFromLeft}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{528., {286.1340332872234, 291.8659667127766}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{528., {286.1340332872234, 291.8659667127766}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.877885003805603*^9, 3.877885050175869*^9}},
 CellLabel->"Out[76]=",ExpressionUUID->"81f6e989-ab7f-44c0-a617-c4c075c309fe"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"Normal", "[", 
    RowBox[{"Values", "[", 
     RowBox[{
      RowBox[{"ResourceData", "[", 
       RowBox[{"\"\<SI Brochure Data\>\"", ",", "data"}], "]"}], "[", 
      RowBox[{"All", ",", "\"\<special-name-of-unit\>\""}], "]"}], "]"}], 
    "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"data", ",", 
     RowBox[{"{", "\"\<SI-units-with-special-names-and-symbols\>\"", "}"}]}], 
    "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8778850516650925`*^9, 3.8778851169470844`*^9}},
 CellLabel->"In[80]:=",ExpressionUUID->"95ee9337-8bfb-4e06-88f3-55542c451bce"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"\<\"radian\"\>", ",", "\<\"steradian\"\>", ",", "\<\"hertz\"\>", 
    ",", "\<\"newton\"\>", ",", "\<\"pascal\"\>", ",", "\<\"joule\"\>", 
    ",", "\<\"watt\"\>", ",", "\<\"coulomb\"\>", ",", "\<\"volt\"\>", 
    ",", "\<\"farad\"\>", ",", "\<\"ohm\"\>", ",", "\<\"siemens\"\>", 
    ",", "\<\"weber\"\>", ",", "\<\"tesla\"\>", ",", "\<\"henry\"\>", 
    ",", "\<\"degree Celsius\"\>", ",", "\<\"lumen\"\>", ",", "\<\"lux\"\>", 
    ",", "\<\"becquerel\"\>", ",", "\<\"gray\"\>", ",", "\<\"sievert\"\>", 
    ",", "\<\"katal\"\>"}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.877885053464221*^9, 3.877885118058922*^9}},
 CellLabel->"Out[80]=",ExpressionUUID->"34598034-ca52-4e51-8463-bf28bdcd0cbd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Values", "[", 
  RowBox[{"Normal", "[", 
   RowBox[{
    RowBox[{"ResourceData", "[", 
     RowBox[{
     "\"\<SI Brochure Data\>\"", ",", "\"\<base-quantities-and-units\>\""}], 
     "]"}], "[", 
    RowBox[{"All", ",", "\"\<unit-name\>\""}], "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8778851278312154`*^9, 3.877885203628512*^9}},
 CellLabel->"In[88]:=",ExpressionUUID->"778d4b90-b9dc-48a0-8d32-678b2dd9db65"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"second\"\>", ",", "\<\"meter\"\>", ",", "\<\"kilogram\"\>", 
   ",", "\<\"ampere\"\>", ",", "\<\"kelvin\"\>", ",", "\<\"mole\"\>", 
   ",", "\<\"candela\"\>"}], "}"}]], "Output",
 CellChangeTimes->{{3.8778851436154146`*^9, 3.8778852043194675`*^9}},
 CellLabel->"Out[88]=",ExpressionUUID->"a0d8b70e-8276-4041-97ee-e74a34267cf4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MapThread", "[", 
  RowBox[{
   RowBox[{"Function", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"data", ",", "property"}], "}"}], ",", 
     RowBox[{"Values", "[", 
      RowBox[{"Normal", "[", 
       RowBox[{
        RowBox[{"ResourceData", "[", 
         RowBox[{"\"\<SI Brochure Data\>\"", ",", "data"}], "]"}], "[", 
        RowBox[{"All", ",", "property"}], "]"}], "]"}], "]"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "\"\<SI-units-with-special-names-and-symbols\>\"", ",", 
       "\"\<base-quantities-and-units\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\"\<special-name-of-unit\>\"", ",", "\"\<unit-name\>\""}], 
      "}"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8778852076918917`*^9, 3.8778852714526353`*^9}},
 CellLabel->"In[89]:=",ExpressionUUID->"0ad6e845-cff1-4578-8346-34fe0f1f2501"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\<\"radian\"\>", ",", "\<\"steradian\"\>", ",", "\<\"hertz\"\>", 
     ",", "\<\"newton\"\>", ",", "\<\"pascal\"\>", ",", "\<\"joule\"\>", 
     ",", "\<\"watt\"\>", ",", "\<\"coulomb\"\>", ",", "\<\"volt\"\>", 
     ",", "\<\"farad\"\>", ",", "\<\"ohm\"\>", ",", "\<\"siemens\"\>", 
     ",", "\<\"weber\"\>", ",", "\<\"tesla\"\>", ",", "\<\"henry\"\>", 
     ",", "\<\"degree Celsius\"\>", ",", "\<\"lumen\"\>", ",", "\<\"lux\"\>", 
     ",", "\<\"becquerel\"\>", ",", "\<\"gray\"\>", ",", "\<\"sievert\"\>", 
     ",", "\<\"katal\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"second\"\>", ",", "\<\"meter\"\>", ",", "\<\"kilogram\"\>", 
     ",", "\<\"ampere\"\>", ",", "\<\"kelvin\"\>", ",", "\<\"mole\"\>", 
     ",", "\<\"candela\"\>"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.8778852719877205`*^9},
 CellLabel->"Out[89]=",ExpressionUUID->"7f92a240-4f4a-47f8-92b4-698148532e25"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Flatten", "[", 
  RowBox[{"MapThread", "[", 
   RowBox[{
    RowBox[{"Function", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"data", ",", "property"}], "}"}], ",", 
      RowBox[{"Values", "[", 
       RowBox[{"Normal", "[", 
        RowBox[{
         RowBox[{"ResourceData", "[", 
          RowBox[{"\"\<SI Brochure Data\>\"", ",", "data"}], "]"}], "[", 
         RowBox[{"All", ",", "property"}], "]"}], "]"}], "]"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
       "\"\<base-quantities-and-units\>\"", ",", 
        "\"\<SI-units-with-special-names-and-symbols\>\""}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\"\<unit-name\>\"", ",", "\"\<special-name-of-unit\>\""}], 
       "}"}]}], "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.877885275604439*^9, 3.877885309945*^9}},
 CellLabel->"In[92]:=",ExpressionUUID->"95aad5b6-7a88-4723-a7e2-aa4585028894"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"second\"\>", ",", "\<\"meter\"\>", ",", "\<\"kilogram\"\>", 
   ",", "\<\"ampere\"\>", ",", "\<\"kelvin\"\>", ",", "\<\"mole\"\>", 
   ",", "\<\"candela\"\>", ",", "\<\"radian\"\>", ",", "\<\"steradian\"\>", 
   ",", "\<\"hertz\"\>", ",", "\<\"newton\"\>", ",", "\<\"pascal\"\>", 
   ",", "\<\"joule\"\>", ",", "\<\"watt\"\>", ",", "\<\"coulomb\"\>", 
   ",", "\<\"volt\"\>", ",", "\<\"farad\"\>", ",", "\<\"ohm\"\>", 
   ",", "\<\"siemens\"\>", ",", "\<\"weber\"\>", ",", "\<\"tesla\"\>", 
   ",", "\<\"henry\"\>", ",", "\<\"degree Celsius\"\>", ",", "\<\"lumen\"\>", 
   ",", "\<\"lux\"\>", ",", "\<\"becquerel\"\>", ",", "\<\"gray\"\>", 
   ",", "\<\"sievert\"\>", ",", "\<\"katal\"\>"}], "}"}]], "Output",
 CellChangeTimes->{{3.8778852793104753`*^9, 3.877885310655016*^9}},
 CellLabel->"Out[92]=",ExpressionUUID->"8ea197af-417c-44f4-b776-8a8170cf3697"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SIQuantities", "=", 
  RowBox[{"Quantity", "/@", 
   RowBox[{"Flatten", "[", 
    RowBox[{"MapThread", "[", 
     RowBox[{
      RowBox[{"Function", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"data", ",", "property"}], "}"}], ",", 
        RowBox[{"Values", "[", 
         RowBox[{"Normal", "[", 
          RowBox[{
           RowBox[{"ResourceData", "[", 
            RowBox[{"\"\<SI Brochure Data\>\"", ",", "data"}], "]"}], "[", 
           RowBox[{"All", ",", "property"}], "]"}], "]"}], "]"}]}], "]"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
         "\"\<base-quantities-and-units\>\"", ",", 
          "\"\<SI-units-with-special-names-and-symbols\>\""}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"\"\<unit-name\>\"", ",", "\"\<special-name-of-unit\>\""}], 
         "}"}]}], "}"}]}], "]"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.87788534110592*^9, 3.8778853625294995`*^9}},
 CellLabel->"In[93]:=",ExpressionUUID->"e25279a9-8167-4db2-ad34-c2b6f77413eb"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{"1", "\"s\"", "second", "\"Seconds\""},
    "Quantity"], ",", 
   TemplateBox[{"1", "\"m\"", "meter", "\"Meters\""},
    "Quantity"], ",", 
   TemplateBox[{"1", "\"kg\"", "kilogram", "\"Kilograms\""},
    "Quantity"], ",", 
   TemplateBox[{"1", "\"A\"", "ampere", "\"Amperes\""},
    "Quantity"], ",", 
   TemplateBox[{"1", "\"K\"", "kelvin", "\"Kelvins\""},
    "Quantity"], ",", 
   TemplateBox[{"1", "\"mol\"", "mole", "\"Moles\""},
    "Quantity"], ",", 
   TemplateBox[{"1", "\"cd\"", "candela", "\"Candelas\""},
    "Quantity"], ",", 
   TemplateBox[{"1", "\"rad\"", "radian", "\"Radians\""},
    "Quantity"], ",", 
   TemplateBox[{"1", "\"sr\"", "steradian", "\"Steradians\""},
    "Quantity"], ",", 
   TemplateBox[{"1", "\"Hz\"", "hertz", "\"Hertz\""},
    "Quantity"], ",", 
   TemplateBox[{"1", "\"N\"", "newton", "\"Newtons\""},
    "Quantity"], ",", 
   TemplateBox[{"1", "\"Pa\"", "pascal", "\"Pascals\""},
    "Quantity"], ",", 
   TemplateBox[{"1", "\"J\"", "joule", "\"Joules\""},
    "Quantity"], ",", 
   TemplateBox[{"1", "\"W\"", "watt", "\"Watts\""},
    "Quantity"], ",", 
   TemplateBox[{"1", "\"C\"", "coulomb", "\"Coulombs\""},
    "Quantity"], ",", 
   TemplateBox[{"1", "\"V\"", "volt", "\"Volts\""},
    "Quantity"], ",", 
   TemplateBox[{"1", "\"F\"", "farad", "\"Farads\""},
    "Quantity"], ",", 
   TemplateBox[{"1", "\"\[CapitalOmega]\"", "ohm", "\"Ohms\""},
    "Quantity"], ",", 
   TemplateBox[{"1", "\"S\"", "siemens", "\"Siemens\""},
    "Quantity"], ",", 
   TemplateBox[{"1", "\"Wb\"", "weber", "\"Webers\""},
    "Quantity"], ",", 
   TemplateBox[{"1", "\"T\"", "tesla", "\"Teslas\""},
    "Quantity"], ",", 
   TemplateBox[{"1", "\"H\"", "henry", "\"Henries\""},
    "Quantity"], ",", 
   TemplateBox[{"1", "\"\[Degree]C\"", "degree Celsius", "\"DegreesCelsius\""},
    "Quantity"], ",", 
   TemplateBox[{"1", "\"lm\"", "lumen", "\"Lumens\""},
    "Quantity"], ",", 
   TemplateBox[{"1", "\"lx\"", "lux", "\"Lux\""},
    "Quantity"], ",", 
   TemplateBox[{"1", "\"Bq\"", "becquerel", "\"Becquerels\""},
    "Quantity"], ",", 
   TemplateBox[{"1", "\"Gy\"", "gray", "\"Grays\""},
    "Quantity"], ",", 
   TemplateBox[{"1", "\"Sv\"", "sievert", "\"Sieverts\""},
    "Quantity"], ",", 
   TemplateBox[{"1", "\"kat\"", "katal", "\"Katals\""},
    "Quantity"]}], "}"}]], "Output",
 CellChangeTimes->{3.8778853899902906`*^9},
 CellLabel->"Out[93]=",ExpressionUUID->"050f9676-4874-4b82-893d-032fe189ab60"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"Last", "[", 
    RowBox[{"Level", "[", 
     RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "SIQuantities"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.877885423643877*^9, 3.877885442907368*^9}, {
  3.877885474632517*^9, 3.877885476774102*^9}},
 CellLabel->"In[98]:=",ExpressionUUID->"7b9ed504-0e06-40a6-8dc0-309773a71886"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Seconds\"\>", ",", "\<\"Meters\"\>", ",", "\<\"Kilograms\"\>", 
   ",", "\<\"Amperes\"\>", ",", "\<\"Kelvins\"\>", ",", "\<\"Moles\"\>", 
   ",", "\<\"Candelas\"\>", ",", "\<\"Radians\"\>", ",", "\<\"Steradians\"\>",
    ",", "\<\"Hertz\"\>", ",", "\<\"Newtons\"\>", ",", "\<\"Pascals\"\>", 
   ",", "\<\"Joules\"\>", ",", "\<\"Watts\"\>", ",", "\<\"Coulombs\"\>", 
   ",", "\<\"Volts\"\>", ",", "\<\"Farads\"\>", ",", "\<\"Ohms\"\>", 
   ",", "\<\"Siemens\"\>", ",", "\<\"Webers\"\>", ",", "\<\"Teslas\"\>", 
   ",", "\<\"Henries\"\>", ",", "\<\"DegreesCelsius\"\>", 
   ",", "\<\"Lumens\"\>", ",", "\<\"Lux\"\>", ",", "\<\"Becquerels\"\>", 
   ",", "\<\"Grays\"\>", ",", "\<\"Sieverts\"\>", ",", "\<\"Katals\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.877885437481455*^9, 3.877885443852679*^9}, 
   3.877885477090989*^9},
 CellLabel->"Out[98]=",ExpressionUUID->"c0534f83-4758-4056-958b-c686a81469b6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Level", "[", 
  RowBox[{
   TemplateBox[{"1", "\"s\"", "second", "\"Seconds\""},
    "Quantity"], ",", "1"}], "]"}]], "Input",
 CellChangeTimes->{{3.877885453125252*^9, 3.8778854610437346`*^9}},
 CellLabel->"In[96]:=",ExpressionUUID->"ffe2baf7-6683-4779-9c2c-7f985c4dbffa"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "\<\"Seconds\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.8778854616600294`*^9},
 CellLabel->"Out[96]=",ExpressionUUID->"5cf81d11-66c5-4204-924f-f610ad6fab16"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Last", "[", 
  RowBox[{"Level", "[", 
   RowBox[{
    TemplateBox[{"1", "\"s\"", "second", "\"Seconds\""},
     "Quantity"], ",", "1"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8778854633857775`*^9, 3.8778854645657387`*^9}},
 CellLabel->"In[97]:=",ExpressionUUID->"acb9005b-bb67-4875-9f1b-818339c49c16"],

Cell[BoxData["\<\"Seconds\"\>"], "Output",
 CellChangeTimes->{3.8778854649396567`*^9},
 CellLabel->"Out[97]=",ExpressionUUID->"091551f8-1a9d-46aa-8488-4db0e2dcb093"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Last", "[", 
  RowBox[{"Level", "[", 
   RowBox[{
    RowBox[{
     TemplateBox[{"1", "\"s\"", "second", "\"Seconds\""},
      "Quantity"], 
     TemplateBox[{"1", "\"m\"", "meter", "\"Meters\""},
      "Quantity"]}], ",", "1"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8778854633857775`*^9, 3.8778854645657387`*^9}, {
  3.8778855327453537`*^9, 3.877885536679772*^9}},
 CellLabel->
  "In[100]:=",ExpressionUUID->"09ea61b8-3549-49cf-9e7b-c619ae77c9ce"],

Cell[BoxData[
 RowBox[{"\<\"Meters\"\>", " ", "\<\"Seconds\"\>"}]], "Output",
 CellChangeTimes->{{3.8778855404313984`*^9, 3.8778855444301414`*^9}},
 CellLabel->
  "Out[100]=",ExpressionUUID->"4acfff08-5b8d-4721-a2fe-594dca6a69bf"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullForm", "[", 
  RowBox[{
   TemplateBox[{"1", "\"s\"", "second", "\"Seconds\""},
    "Quantity"], 
   TemplateBox[{"1", "\"m\"", "meter", "\"Meters\""},
    "Quantity"]}], "]"}]], "Input",
 CellChangeTimes->{{3.8778855513993034`*^9, 3.877885558177034*^9}},
 CellLabel->
  "In[101]:=",ExpressionUUID->"8b9b2b7a-fd95-4f80-b86f-6e3ad4ff721c"],

Cell[BoxData[
 TagBox[
  StyleBox[
   RowBox[{"Quantity", "[", 
    RowBox[{"1", ",", 
     RowBox[{"Times", "[", 
      RowBox[{"\"\<Meters\>\"", ",", "\"\<Seconds\>\""}], "]"}]}], "]"}],
   ShowSpecialCharacters->False,
   ShowStringCharacters->True,
   NumberMarks->True],
  FullForm]], "Output",
 CellChangeTimes->{3.877885559192086*^9},
 CellLabel->
  "Out[101]//FullForm=",ExpressionUUID->"62d89e92-85e6-4bd2-b3f0-\
139269aaa578"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullForm", "[", 
  TemplateBox[{"1", "\"s\"", "second", "\"Seconds\""},
   "Quantity"], "]"}]], "Input",
 CellChangeTimes->{{3.8778855513993034`*^9, 3.8778855800792418`*^9}},
 CellLabel->
  "In[102]:=",ExpressionUUID->"9e485a6c-9b11-41e6-86b1-8267be4e12dd"],

Cell[BoxData[
 TagBox[
  StyleBox[
   RowBox[{"Quantity", "[", 
    RowBox[{"1", ",", "\"\<Seconds\>\""}], "]"}],
   ShowSpecialCharacters->False,
   ShowStringCharacters->True,
   NumberMarks->True],
  FullForm]], "Output",
 CellChangeTimes->{3.877885580770146*^9},
 CellLabel->
  "Out[102]//FullForm=",ExpressionUUID->"1b8ca491-652d-43ef-9231-\
d45b3f27fcce"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatchQ", "[", 
  RowBox[{
   TemplateBox[{"1", "\"s\"", "second", "\"Seconds\""},
    "Quantity"], ",", 
   RowBox[{"Quantity", "[", 
    RowBox[{"_", ",", "_"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8778855984170656`*^9, 3.8778856279283495`*^9}},
 CellLabel->
  "In[103]:=",ExpressionUUID->"f7029cf6-f153-4f01-92e7-d59b471bde69"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.8778856286088796`*^9},
 CellLabel->
  "Out[103]=",ExpressionUUID->"31ad7968-ee12-42e7-b644-a18030814b84"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatchQ", "[", 
  RowBox[{
   TemplateBox[{"1", "\"s\"", "second", "\"Seconds\""},
    "Quantity"], ",", 
   RowBox[{"Quantity", "[", 
    RowBox[{"_", ",", 
     RowBox[{"_", "?", "AtomQ"}]}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8778855984170656`*^9, 3.87788563637702*^9}},
 CellLabel->
  "In[104]:=",ExpressionUUID->"e8a46c0d-b93a-4e71-8dda-44c90f149983"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.877885636966508*^9},
 CellLabel->
  "Out[104]=",ExpressionUUID->"82a72939-bd7a-4bba-8606-d0d07af13d7a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatchQ", "[", 
  RowBox[{
   RowBox[{
    TemplateBox[{"1", "\"s\"", "second", "\"Seconds\""},
     "Quantity"], 
    TemplateBox[{"1", "\"m\"", "meter", "\"Meters\""},
     "Quantity"]}], ",", 
   RowBox[{"Quantity", "[", 
    RowBox[{"_", ",", 
     RowBox[{"_", "?", "AtomQ"}]}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8778855984170656`*^9, 3.8778856484654226`*^9}},
 CellLabel->
  "In[105]:=",ExpressionUUID->"2fe1fa69-2f55-4292-b80c-bf41f390a682"],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{3.877885649520092*^9},
 CellLabel->
  "Out[105]=",ExpressionUUID->"054e7d05-d3b2-470f-888d-ca05b89147b2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Last", "[", 
   RowBox[{"Level", "[", 
    RowBox[{
     RowBox[{"Quantity", "[", 
      RowBox[{"1", ",", 
       RowBox[{"\"\<Meters\>\"", "\"\<Seconds\>\""}]}], "]"}], ",", "1"}], 
    "]"}], "]"}], "//", "FullForm"}]], "Input",
 CellChangeTimes->{{3.8778857271875873`*^9, 3.87788576303946*^9}},
 CellLabel->
  "In[109]:=",ExpressionUUID->"e377af34-8e3c-452a-b2e6-86baa0652df9"],

Cell[BoxData[
 TagBox[
  StyleBox[
   RowBox[{"Times", "[", 
    RowBox[{"\"\<Meters\>\"", ",", "\"\<Seconds\>\""}], "]"}],
   ShowSpecialCharacters->False,
   ShowStringCharacters->True,
   NumberMarks->True],
  FullForm]], "Output",
 CellChangeTimes->{{3.8778857341465836`*^9, 3.877885763505573*^9}},
 CellLabel->
  "Out[109]//FullForm=",ExpressionUUID->"9faa2eea-9742-4d01-b12a-\
601f595bd11e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Last", "[", 
  RowBox[{"Level", "[", 
   RowBox[{
    RowBox[{"Quantity", "[", 
     RowBox[{"1", ",", "\"\<Seconds\>\""}], "]"}], ",", "1"}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8778857271875873`*^9, 3.8778857502061386`*^9}},
 CellLabel->
  "In[108]:=",ExpressionUUID->"d8f5b580-3673-4498-9bbc-178d41a08088"],

Cell[BoxData["\<\"Seconds\"\>"], "Output",
 CellChangeTimes->{3.8778857506855836`*^9},
 CellLabel->
  "Out[108]=",ExpressionUUID->"c6c088f4-9b1c-4128-955a-47b4afebab77"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Level", "[", 
  RowBox[{
   RowBox[{"Quantity", "[", 
    RowBox[{"1", ",", "\"\<Seconds\>\""}], "]"}], ",", "Infinity"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8778858725359144`*^9, 3.877885883906996*^9}},
 CellLabel->
  "In[110]:=",ExpressionUUID->"668f3d1d-bce9-4959-9dca-bcd4fdffe16a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "\<\"Seconds\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.8778858843377266`*^9},
 CellLabel->
  "Out[110]=",ExpressionUUID->"03befd9d-668e-476c-835a-5da38069579e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Level", "[", 
  RowBox[{
   RowBox[{"Quantity", "[", 
    RowBox[{"1", ",", 
     SuperscriptBox["\"\<Seconds\>\"", "2"]}], "]"}], ",", "Infinity"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8778858725359144`*^9, 3.8778858892370415`*^9}},
 CellLabel->
  "In[111]:=",ExpressionUUID->"46f2949c-7e82-4fc1-8176-559edf204350"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "\<\"Seconds\"\>", ",", "2", ",", 
   SuperscriptBox["\<\"Seconds\"\>", "2"]}], "}"}]], "Output",
 CellChangeTimes->{3.877885890274162*^9},
 CellLabel->
  "Out[111]=",ExpressionUUID->"56d754ff-90d8-486f-a4a7-093d416d4e1d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Cases", "[", 
   RowBox[{"_", "?", "AtomQ"}], "]"}], "[", 
  RowBox[{"Level", "[", 
   RowBox[{
    RowBox[{"Quantity", "[", 
     RowBox[{"1", ",", 
      SuperscriptBox["\"\<Seconds\>\"", "2"]}], "]"}], ",", "Infinity"}], 
   "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8778858964836135`*^9, 3.877885909539058*^9}},
 CellLabel->
  "In[112]:=",ExpressionUUID->"f6d29863-0ced-4ad0-a336-3ad4d41e2de2"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "\<\"Seconds\"\>", ",", "2"}], "}"}]], "Output",
 CellChangeTimes->{3.8778859102549763`*^9},
 CellLabel->
  "Out[112]=",ExpressionUUID->"6c0d8a9b-5e5c-4cee-bc37-aaf1be176541"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Cases", "[", 
   RowBox[{"_", "?", "StringQ"}], "]"}], "[", 
  RowBox[{
   RowBox[{"Cases", "[", 
    RowBox[{"_", "?", "AtomQ"}], "]"}], "[", 
   RowBox[{"Level", "[", 
    RowBox[{
     RowBox[{"Quantity", "[", 
      RowBox[{"1", ",", 
       RowBox[{
        SuperscriptBox["\"\<Seconds\>\"", "2"], 
        FractionBox[
         SuperscriptBox["\"\<Kilogram\>\"", "3"], 
         SuperscriptBox["\"\<Meters\>\"", "6"]]}]}], "]"}], ",", "Infinity"}],
     "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8778858964836135`*^9, 3.8778859514486713`*^9}},
 CellLabel->
  "In[114]:=",ExpressionUUID->"b59560c2-83b4-4173-9a28-e758f3c93e7d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Kilograms\"\>", ",", "\<\"Meters\"\>", 
   ",", "\<\"Seconds\"\>"}], "}"}]], "Output",
 CellChangeTimes->{{3.8778859256705523`*^9, 3.877885951895096*^9}},
 CellLabel->
  "Out[114]=",ExpressionUUID->"3c9667cf-08a4-4b63-a3e2-7fe59ef7b2b1"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{"QuantityUnitStrings", "//", "ClearAll"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"QuantityUnitStrings", "[", 
   RowBox[{"q_", "?", "QuantityQ"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"Cases", "[", 
    RowBox[{"_", "?", "StringQ"}], "]"}], "[", 
   RowBox[{
    RowBox[{"Cases", "[", 
     RowBox[{"_", "?", "AtomQ"}], "]"}], "[", 
    RowBox[{"Level", "[", 
     RowBox[{"q", ",", "Infinity"}], "]"}], "]"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.8778856568032866`*^9, 3.877885698313655*^9}, 
   3.877885771199642*^9, {3.877885958725175*^9, 3.877885962531554*^9}},
 CellLabel->
  "In[115]:=",ExpressionUUID->"88af2a02-6916-478c-a352-fe2dbf99a489"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Times", "@@", "SIQuantities"}]], "Input",
 CellChangeTimes->{{3.8778859654029703`*^9, 3.8778859826744795`*^9}},
 CellLabel->
  "In[117]:=",ExpressionUUID->"9040d8d9-ec67-4c32-b8bd-7463d3e713bd"],

Cell[BoxData[
 TemplateBox[{
   FractionBox["5483", "20"], 
   RowBox[{"\"kg\"", "\[ThinSpace]", "\"m\"", "\[ThinSpace]", 
     SuperscriptBox["\"Bq\"", "2"], "\[InvisibleSpace]", "\"s\"", 
     "\[ThinSpace]", "\"A\"", "\[ThinSpace]", 
     SuperscriptBox["\"K\"", "2"], "\[InvisibleSpace]", "\"mol\"", 
     "\[ThinSpace]", "\"cd\"", "\[ThinSpace]", "\"C\"", "\[ThinSpace]", 
     "\"F\"", "\[ThinSpace]", 
     SuperscriptBox["\"Gy\"", "2"], "\[InvisibleSpace]", "\"H\"", 
     "\[ThinSpace]", "\"J\"", "\[ThinSpace]", "\"kat\"", "\[ThinSpace]", 
     "\"lm\"", "\[ThinSpace]", "\"lx\"", "\[ThinSpace]", "\"N\"", 
     "\[ThinSpace]", "\"\[CapitalOmega]\"", "\[ThinSpace]", "\"Pa\"", 
     "\[ThinSpace]", "\"rad\"", "\[ThinSpace]", "\"S\"", "\[ThinSpace]", 
     "\"sr\"", "\[ThinSpace]", "\"T\"", "\[ThinSpace]", "\"V\"", 
     "\[ThinSpace]", "\"W\"", "\[ThinSpace]", "\"Wb\""}], 
   "kilogram meter becquerel squared second ampere kelvin squared mole \
candela coulomb farad gray squared henry joule katal lumen lux newton ohm \
pascal radian siemens steradian tesla volt watt webers", 
   RowBox[{"\"Amperes\"", " ", 
     SuperscriptBox["\"Becquerels\"", "2"], " ", "\"Candelas\"", " ", 
     "\"Coulombs\"", " ", "\"Farads\"", " ", 
     SuperscriptBox["\"Grays\"", "2"], " ", "\"Henries\"", " ", "\"Joules\"", 
     " ", "\"Katals\"", " ", 
     SuperscriptBox["\"Kelvins\"", "2"], " ", "\"Kilograms\"", " ", 
     "\"Lumens\"", " ", "\"Lux\"", " ", "\"Meters\"", " ", "\"Moles\"", " ", 
     "\"Newtons\"", " ", "\"Ohms\"", " ", "\"Pascals\"", " ", "\"Radians\"", 
     " ", "\"Seconds\"", " ", "\"Siemens\"", " ", "\"Steradians\"", " ", 
     "\"Teslas\"", " ", "\"Volts\"", " ", "\"Watts\"", " ", "\"Webers\""}]},
  "Quantity"]], "Output",
 CellChangeTimes->{3.8778859831365643`*^9},
 CellLabel->
  "Out[117]=",ExpressionUUID->"6145f8ab-0d8d-4cd4-8946-d8cdb9986419"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"QuantityUnitStrings", "[", 
  RowBox[{"Times", "@@", "SIQuantities"}], "]"}]], "Input",
 CellChangeTimes->{{3.8778859871398726`*^9, 3.8778859893657117`*^9}},
 CellLabel->
  "In[118]:=",ExpressionUUID->"fc7b7467-b11a-47b5-bd59-7337b4a6ff8b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Amperes\"\>", ",", "\<\"Becquerels\"\>", 
   ",", "\<\"Candelas\"\>", ",", "\<\"Coulombs\"\>", ",", "\<\"Farads\"\>", 
   ",", "\<\"Grays\"\>", ",", "\<\"Henries\"\>", ",", "\<\"Joules\"\>", 
   ",", "\<\"Katals\"\>", ",", "\<\"Kelvins\"\>", ",", "\<\"Kilograms\"\>", 
   ",", "\<\"Lumens\"\>", ",", "\<\"Lux\"\>", ",", "\<\"Meters\"\>", 
   ",", "\<\"Moles\"\>", ",", "\<\"Newtons\"\>", ",", "\<\"Ohms\"\>", 
   ",", "\<\"Pascals\"\>", ",", "\<\"Radians\"\>", ",", "\<\"Seconds\"\>", 
   ",", "\<\"Siemens\"\>", ",", "\<\"Steradians\"\>", ",", "\<\"Teslas\"\>", 
   ",", "\<\"Volts\"\>", ",", "\<\"Watts\"\>", ",", "\<\"Webers\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.8778859899192667`*^9},
 CellLabel->
  "Out[118]=",ExpressionUUID->"f0f90df4-817a-4532-8257-bd18b2824531"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ContainsExactly", "[", 
  RowBox[{
   RowBox[{"QuantityUnitStrings", "/@", "SIQuantities"}], ",", 
   RowBox[{"QuantityUnitStrings", "[", 
    RowBox[{"Times", "@@", "SIQuantities"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.877885994606753*^9, 3.8778859987318077`*^9}, {
  3.8778860355189943`*^9, 3.877886038715165*^9}},
 CellLabel->
  "In[122]:=",ExpressionUUID->"f1d20646-1a53-4c39-b71e-a942dddf9c7b"],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{3.8778859992285376`*^9, 3.8778860390815268`*^9},
 CellLabel->
  "Out[122]=",ExpressionUUID->"7451aea7-4cb5-4b87-a247-57f87a53a384"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"UniqueElements", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"Flatten", "[", 
     RowBox[{"QuantityUnitStrings", "/@", "SIQuantities"}], "]"}], ",", 
    RowBox[{"QuantityUnitStrings", "[", 
     RowBox[{"Times", "@@", "SIQuantities"}], "]"}]}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.8778860093946476`*^9, 3.8778860542853794`*^9}},
 CellLabel->
  "In[124]:=",ExpressionUUID->"b4c04057-2ad5-4711-b245-0676e970faf0"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\<\"Hertz\"\>", ",", "\<\"DegreesCelsius\"\>", 
     ",", "\<\"Sieverts\"\>"}], "}"}], ",", 
   RowBox[{"{", "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.877886024322219*^9, 3.877886054916654*^9}},
 CellLabel->
  "Out[124]=",ExpressionUUID->"1cb7198b-05f2-4642-9365-b5cf8149d018"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MapThread", "[", 
  RowBox[{"Power", ",", 
   RowBox[{"{", 
    RowBox[{"SIQuantities", ",", 
     RowBox[{"Range", "[", "29", "]"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.877886105178981*^9, 3.8778861188911467`*^9}},
 CellLabel->
  "In[125]:=",ExpressionUUID->"93249b09-8df7-41f3-a41d-5d72e9046f90"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{"1", "\"s\"", "second", "\"Seconds\""},
    "Quantity"], ",", 
   TemplateBox[{"1", 
     RowBox[{
       SuperscriptBox["\"m\"", "2"]}], "meter squared", 
     SuperscriptBox["\"Meters\"", "2"]},
    "Quantity"], ",", 
   TemplateBox[{"1", 
     RowBox[{
       SuperscriptBox["\"kg\"", "3"]}], "kilogram cubed", 
     SuperscriptBox["\"Kilograms\"", "3"]},
    "Quantity"], ",", 
   TemplateBox[{"1", 
     RowBox[{
       SuperscriptBox["\"A\"", "4"]}], "ampere to the fourth", 
     SuperscriptBox["\"Amperes\"", "4"]},
    "Quantity"], ",", 
   TemplateBox[{"1", 
     RowBox[{
       SuperscriptBox["\"K\"", "5"]}], "kelvin to the fifth", 
     SuperscriptBox["\"Kelvins\"", "5"]},
    "Quantity"], ",", 
   TemplateBox[{"1", 
     RowBox[{
       SuperscriptBox["\"mol\"", "6"]}], "mole to the 6", 
     SuperscriptBox["\"Moles\"", "6"]},
    "Quantity"], ",", 
   TemplateBox[{"1", 
     RowBox[{
       SuperscriptBox["\"cd\"", "7"]}], "candela to the 7", 
     SuperscriptBox["\"Candelas\"", "7"]},
    "Quantity"], ",", 
   TemplateBox[{"1", 
     RowBox[{
       SuperscriptBox["\"rad\"", "8"]}], "radian to the 8", 
     SuperscriptBox["\"Radians\"", "8"]},
    "Quantity"], ",", 
   TemplateBox[{"1", 
     RowBox[{
       SuperscriptBox["\"sr\"", "9"]}], "steradian to the 9", 
     SuperscriptBox["\"Steradians\"", "9"]},
    "Quantity"], ",", 
   TemplateBox[{"1", 
     RowBox[{
       SuperscriptBox["\"Hz\"", "10"]}], "hertz to the 10", 
     SuperscriptBox["\"Hertz\"", "10"]},
    "Quantity"], ",", 
   TemplateBox[{"1", 
     RowBox[{
       SuperscriptBox["\"N\"", "11"]}], "newton to the 11", 
     SuperscriptBox["\"Newtons\"", "11"]},
    "Quantity"], ",", 
   TemplateBox[{"1", 
     RowBox[{
       SuperscriptBox["\"Pa\"", "12"]}], "pascal to the 12", 
     SuperscriptBox["\"Pascals\"", "12"]},
    "Quantity"], ",", 
   TemplateBox[{"1", 
     RowBox[{
       SuperscriptBox["\"J\"", "13"]}], "joule to the 13", 
     SuperscriptBox["\"Joules\"", "13"]},
    "Quantity"], ",", 
   TemplateBox[{"1", 
     RowBox[{
       SuperscriptBox["\"W\"", "14"]}], "watt to the 14", 
     SuperscriptBox["\"Watts\"", "14"]},
    "Quantity"], ",", 
   TemplateBox[{"1", 
     RowBox[{
       SuperscriptBox["\"C\"", "15"]}], "coulomb to the 15", 
     SuperscriptBox["\"Coulombs\"", "15"]},
    "Quantity"], ",", 
   TemplateBox[{"1", 
     RowBox[{
       SuperscriptBox["\"V\"", "16"]}], "volt to the 16", 
     SuperscriptBox["\"Volts\"", "16"]},
    "Quantity"], ",", 
   TemplateBox[{"1", 
     RowBox[{
       SuperscriptBox["\"F\"", "17"]}], "farad to the 17", 
     SuperscriptBox["\"Farads\"", "17"]},
    "Quantity"], ",", 
   TemplateBox[{"1", 
     RowBox[{
       SuperscriptBox["\"\[CapitalOmega]\"", "18"]}], "ohm to the 18", 
     SuperscriptBox["\"Ohms\"", "18"]},
    "Quantity"], ",", 
   TemplateBox[{"1", 
     RowBox[{
       SuperscriptBox["\"S\"", "19"]}], "siemens to the 19", 
     SuperscriptBox["\"Siemens\"", "19"]},
    "Quantity"], ",", 
   TemplateBox[{"1", 
     RowBox[{
       SuperscriptBox["\"Wb\"", "20"]}], "weber to the 20", 
     SuperscriptBox["\"Webers\"", "20"]},
    "Quantity"], ",", 
   TemplateBox[{"1", 
     RowBox[{
       SuperscriptBox["\"T\"", "21"]}], "tesla to the 21", 
     SuperscriptBox["\"Teslas\"", "21"]},
    "Quantity"], ",", 
   TemplateBox[{"1", 
     RowBox[{
       SuperscriptBox["\"H\"", "22"]}], "henry to the 22", 
     SuperscriptBox["\"Henries\"", "22"]},
    "Quantity"], ",", 
   TemplateBox[{
     FractionBox[
     "994076152392911405343441699849216100359313137785637076910650768361225263\
85680490842787", "838860800000000000000000000000"], 
     RowBox[{
       SuperscriptBox["\"K\"", "23"]}], "kelvins to the 23", 
     SuperscriptBox["\"Kelvins\"", "23"]},
    "Quantity"], ",", 
   TemplateBox[{"1", 
     RowBox[{
       SuperscriptBox["\"lm\"", "24"]}], "lumen to the 24", 
     SuperscriptBox["\"Lumens\"", "24"]},
    "Quantity"], ",", 
   TemplateBox[{"1", 
     RowBox[{
       SuperscriptBox["\"lx\"", "25"]}], "lux to the 25", 
     SuperscriptBox["\"Lux\"", "25"]},
    "Quantity"], ",", 
   TemplateBox[{"1", 
     RowBox[{
       SuperscriptBox["\"Bq\"", "26"]}], "becquerel to the 26", 
     SuperscriptBox["\"Becquerels\"", "26"]},
    "Quantity"], ",", 
   TemplateBox[{"1", 
     RowBox[{
       SuperscriptBox["\"Gy\"", "27"]}], "gray to the 27", 
     SuperscriptBox["\"Grays\"", "27"]},
    "Quantity"], ",", 
   TemplateBox[{"1", 
     RowBox[{
       SuperscriptBox["\"Sv\"", "28"]}], "sievert to the 28", 
     SuperscriptBox["\"Sieverts\"", "28"]},
    "Quantity"], ",", 
   TemplateBox[{"1", 
     RowBox[{
       SuperscriptBox["\"kat\"", "29"]}], "katal to the 29", 
     SuperscriptBox["\"Katals\"", "29"]},
    "Quantity"]}], "}"}]], "Output",
 CellChangeTimes->{3.8778861194470143`*^9},
 CellLabel->
  "Out[125]=",ExpressionUUID->"fa03946c-55ab-4423-bde1-c4e96a5d27e4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Times", "@@", 
  RowBox[{"MapThread", "[", 
   RowBox[{"Power", ",", 
    RowBox[{"{", 
     RowBox[{"SIQuantities", ",", 
      RowBox[{"Range", "[", "29", "]"}]}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8778861205558796`*^9, 3.8778861223214254`*^9}},
 CellLabel->
  "In[126]:=",ExpressionUUID->"f569bb3d-b5cb-4d72-8f05-6c7e6aca6f91"],

Cell[BoxData[
 TemplateBox[{
   FractionBox[
   "99407615239291140534344169984921610035931313778563707691065076836122526385\
680490842787", "838860800000000000000000000000"], 
   RowBox[{
     SuperscriptBox["\"kg\"", "3"], "\[InvisibleSpace]", 
     SuperscriptBox["\"m\"", "2"], "\[InvisibleSpace]", 
     SuperscriptBox["\"Bq\"", "36"], "\[InvisibleSpace]", "\"s\"", 
     "\[ThinSpace]", 
     SuperscriptBox["\"A\"", "4"], "\[InvisibleSpace]", 
     SuperscriptBox["\"K\"", "28"], "\[InvisibleSpace]", 
     SuperscriptBox["\"mol\"", "6"], "\[InvisibleSpace]", 
     SuperscriptBox["\"cd\"", "7"], "\[InvisibleSpace]", 
     SuperscriptBox["\"C\"", "15"], "\[InvisibleSpace]", 
     SuperscriptBox["\"F\"", "17"], "\[InvisibleSpace]", 
     SuperscriptBox["\"Gy\"", "55"], "\[InvisibleSpace]", 
     SuperscriptBox["\"H\"", "22"], "\[InvisibleSpace]", 
     SuperscriptBox["\"J\"", "13"], "\[InvisibleSpace]", 
     SuperscriptBox["\"kat\"", "29"], "\[InvisibleSpace]", 
     SuperscriptBox["\"lm\"", "24"], "\[InvisibleSpace]", 
     SuperscriptBox["\"lx\"", "25"], "\[InvisibleSpace]", 
     SuperscriptBox["\"N\"", "11"], "\[InvisibleSpace]", 
     SuperscriptBox["\"\[CapitalOmega]\"", "18"], "\[InvisibleSpace]", 
     SuperscriptBox["\"Pa\"", "12"], "\[InvisibleSpace]", 
     SuperscriptBox["\"rad\"", "8"], "\[InvisibleSpace]", 
     SuperscriptBox["\"S\"", "19"], "\[InvisibleSpace]", 
     SuperscriptBox["\"sr\"", "9"], "\[InvisibleSpace]", 
     SuperscriptBox["\"T\"", "21"], "\[InvisibleSpace]", 
     SuperscriptBox["\"V\"", "16"], "\[InvisibleSpace]", 
     SuperscriptBox["\"W\"", "14"], "\[InvisibleSpace]", 
     SuperscriptBox["\"Wb\"", "20"]}], 
   "kilogram cubed meter squared becquerel to the 36 second ampere to the \
fourth kelvin to the 28 mole to the 6 candela to the 7 coulomb to the 15 \
farad to the 17 gray to the 55 henry to the 22 joule to the 13 katal to the \
29 lumen to the 24 lux to the 25 newton to the 11 ohm to the 18 pascal to the \
12 radian to the 8 siemens to the 19 steradian to the 9 tesla to the 21 volt \
to the 16 watt to the 14 webers to the 20", 
   RowBox[{
     SuperscriptBox["\"Amperes\"", "4"], " ", 
     SuperscriptBox["\"Becquerels\"", "36"], " ", 
     SuperscriptBox["\"Candelas\"", "7"], " ", 
     SuperscriptBox["\"Coulombs\"", "15"], " ", 
     SuperscriptBox["\"Farads\"", "17"], " ", 
     SuperscriptBox["\"Grays\"", "55"], " ", 
     SuperscriptBox["\"Henries\"", "22"], " ", 
     SuperscriptBox["\"Joules\"", "13"], " ", 
     SuperscriptBox["\"Katals\"", "29"], " ", 
     SuperscriptBox["\"Kelvins\"", "28"], " ", 
     SuperscriptBox["\"Kilograms\"", "3"], " ", 
     SuperscriptBox["\"Lumens\"", "24"], " ", 
     SuperscriptBox["\"Lux\"", "25"], " ", 
     SuperscriptBox["\"Meters\"", "2"], " ", 
     SuperscriptBox["\"Moles\"", "6"], " ", 
     SuperscriptBox["\"Newtons\"", "11"], " ", 
     SuperscriptBox["\"Ohms\"", "18"], " ", 
     SuperscriptBox["\"Pascals\"", "12"], " ", 
     SuperscriptBox["\"Radians\"", "8"], " ", "\"Seconds\"", " ", 
     SuperscriptBox["\"Siemens\"", "19"], " ", 
     SuperscriptBox["\"Steradians\"", "9"], " ", 
     SuperscriptBox["\"Teslas\"", "21"], " ", 
     SuperscriptBox["\"Volts\"", "16"], " ", 
     SuperscriptBox["\"Watts\"", "14"], " ", 
     SuperscriptBox["\"Webers\"", "20"]}]},
  "Quantity"]], "Output",
 CellChangeTimes->{3.877886123042452*^9},
 CellLabel->
  "Out[126]=",ExpressionUUID->"f9c7a668-b8be-422a-a9f7-a216972186e6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "[", 
  RowBox[{"QuantityUnitStrings", "[", 
   RowBox[{"Times", "@@", 
    RowBox[{"MapThread", "[", 
     RowBox[{"Power", ",", 
      RowBox[{"{", 
       RowBox[{"SIQuantities", ",", 
        RowBox[{"Range", "[", "29", "]"}]}], "}"}]}], "]"}]}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.877886126796295*^9, 3.877886133860944*^9}},
 CellLabel->
  "In[127]:=",ExpressionUUID->"b7b2676f-50e0-4f8c-b54f-d0d43dd3ad72"],

Cell[BoxData["26"], "Output",
 CellChangeTimes->{3.8778861347721834`*^9},
 CellLabel->
  "Out[127]=",ExpressionUUID->"357aef8d-0fe8-43f4-8b8b-3d3daee1fbfe"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Identity", "[", 
   RowBox[{"QuantityUnitStrings", "[", 
    RowBox[{"Times", "@@", 
     RowBox[{"MapThread", "[", 
      RowBox[{"Power", ",", 
       RowBox[{"{", 
        RowBox[{"SIQuantities", ",", 
         RowBox[{"Range", "[", "29", "]"}]}], "}"}]}], "]"}]}], "]"}], "]"}], 
  "==", 
  RowBox[{"QuantityUnitStrings", "[", 
   RowBox[{"Times", "@@", 
    RowBox[{"MapThread", "[", 
     RowBox[{"Power", ",", 
      RowBox[{"{", 
       RowBox[{"SIQuantities", ",", 
        RowBox[{"Range", "[", "29", "]"}]}], "}"}]}], "]"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.8778861710938983`*^9, 3.8778861739641323`*^9}},
 CellLabel->
  "In[129]:=",ExpressionUUID->"26b7796b-fe34-4e6d-b516-a665f25e16f9"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.8778861747661295`*^9},
 CellLabel->
  "Out[129]=",ExpressionUUID->"778bb6dc-8e9f-459e-adfd-504ffa35ef0b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Complement", "[", 
  RowBox[{
   RowBox[{"Flatten", "[", 
    RowBox[{"QuantityUnitStrings", "/@", "SIQuantities"}], "]"}], ",", 
   RowBox[{"Identity", "[", 
    RowBox[{"QuantityUnitStrings", "[", 
     RowBox[{"Times", "@@", 
      RowBox[{"MapThread", "[", 
       RowBox[{"Power", ",", 
        RowBox[{"{", 
         RowBox[{"SIQuantities", ",", 
          RowBox[{"Range", "[", "29", "]"}]}], "}"}]}], "]"}]}], "]"}], 
    "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8778861436607914`*^9, 3.8778861657918468`*^9}, {
  3.877886198916748*^9, 3.877886199216287*^9}},
 CellLabel->
  "In[130]:=",ExpressionUUID->"022c22cf-5f40-4ecd-afbc-de64c4dfc967"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"DegreesCelsius\"\>", ",", "\<\"Hertz\"\>", 
   ",", "\<\"Sieverts\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.8778861662891335`*^9, 3.8778862020698595`*^9},
 CellLabel->
  "Out[130]=",ExpressionUUID->"53f92238-3dcc-42f4-83b1-518dfd2f556b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Quantity", "/@", 
  RowBox[{"Complement", "[", 
   RowBox[{
    RowBox[{"Flatten", "[", 
     RowBox[{"QuantityUnitStrings", "/@", "SIQuantities"}], "]"}], ",", 
    RowBox[{"Identity", "[", 
     RowBox[{"QuantityUnitStrings", "[", 
      RowBox[{"Times", "@@", 
       RowBox[{"MapThread", "[", 
        RowBox[{"Power", ",", 
         RowBox[{"{", 
          RowBox[{"SIQuantities", ",", 
           RowBox[{"Range", "[", "29", "]"}]}], "}"}]}], "]"}]}], "]"}], 
     "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.877886205102185*^9, 3.8778862069543447`*^9}},
 CellLabel->
  "In[131]:=",ExpressionUUID->"be68b8f9-370d-4088-b515-827f43f41e28"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{"1", "\"\[Degree]C\"", "degree Celsius", "\"DegreesCelsius\""},
    "Quantity"], ",", 
   TemplateBox[{"1", "\"Hz\"", "hertz", "\"Hertz\""},
    "Quantity"], ",", 
   TemplateBox[{"1", "\"Sv\"", "sievert", "\"Sieverts\""},
    "Quantity"]}], "}"}]], "Output",
 CellChangeTimes->{3.8778862075499735`*^9},
 CellLabel->
  "Out[131]=",ExpressionUUID->"b946225a-ab59-437e-9ae5-106513a9a4bb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ContainsAll", "[", 
  RowBox[{
   RowBox[{"Flatten", "[", 
    RowBox[{"QuantityUnitStrings", "/@", "SIQuantities"}], "]"}], ",", 
   RowBox[{"QuantityUnitStrings", "[", 
    RowBox[{"Times", "@@", 
     RowBox[{"MapThread", "[", 
      RowBox[{"Power", ",", 
       RowBox[{"{", 
        RowBox[{"SIQuantities", ",", 
         RowBox[{"Range", "[", "29", "]"}]}], "}"}]}], "]"}]}], "]"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.877886233507918*^9, 3.8778862619622965`*^9}},
 CellLabel->
  "In[132]:=",ExpressionUUID->"24395fc7-d07c-40bd-b4e0-03f47c36470b"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.8778862626762075`*^9},
 CellLabel->
  "Out[132]=",ExpressionUUID->"cd1dbd3f-ff49-440c-b461-07d0546ca1f5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SIConformantBaseQUantities", "=", 
  RowBox[{"Flatten", "[", 
   RowBox[{"QuantityUnitStrings", "/@", "SIQuantities"}], "]"}]}]], "Input",
 CellChangeTimes->{3.877886291419598*^9},
 CellLabel->
  "In[133]:=",ExpressionUUID->"95fba73c-150c-4896-ab9d-a49b748dd65b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Seconds\"\>", ",", "\<\"Meters\"\>", ",", "\<\"Kilograms\"\>", 
   ",", "\<\"Amperes\"\>", ",", "\<\"Kelvins\"\>", ",", "\<\"Moles\"\>", 
   ",", "\<\"Candelas\"\>", ",", "\<\"Radians\"\>", ",", "\<\"Steradians\"\>",
    ",", "\<\"Hertz\"\>", ",", "\<\"Newtons\"\>", ",", "\<\"Pascals\"\>", 
   ",", "\<\"Joules\"\>", ",", "\<\"Watts\"\>", ",", "\<\"Coulombs\"\>", 
   ",", "\<\"Volts\"\>", ",", "\<\"Farads\"\>", ",", "\<\"Ohms\"\>", 
   ",", "\<\"Siemens\"\>", ",", "\<\"Webers\"\>", ",", "\<\"Teslas\"\>", 
   ",", "\<\"Henries\"\>", ",", "\<\"DegreesCelsius\"\>", 
   ",", "\<\"Lumens\"\>", ",", "\<\"Lux\"\>", ",", "\<\"Becquerels\"\>", 
   ",", "\<\"Grays\"\>", ",", "\<\"Sieverts\"\>", ",", "\<\"Katals\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.8778862925732956`*^9},
 CellLabel->
  "Out[133]=",ExpressionUUID->"3bfcc997-cb23-4648-b830-87037d37f691"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{"SIConformantQuantityQ", "//", "ClearAll"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SIConformantQuantityQ", "[", 
   RowBox[{"q_", "?", "QuantityQ"}], "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", "SIConformantBaseQUantities", "}"}], ",", 
    RowBox[{
     RowBox[{"SIConformantBaseQUantities", "=", 
      RowBox[{"Flatten", "[", 
       RowBox[{"QuantityUnitStrings", "/@", "SIQuantities"}], "]"}]}], ";", 
     RowBox[{"ContainsAll", "[", 
      RowBox[{"SIConformantBaseQUantities", ",", 
       RowBox[{"QuantityUnitStrings", "[", "q", "]"}]}], "]"}]}]}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.877886296336251*^9, 3.87788635355449*^9}, {
  3.877886426639614*^9, 3.877886461118529*^9}},
 CellLabel->
  "In[145]:=",ExpressionUUID->"a15582f4-0f28-48ce-972e-f8f978bc6d1e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SIConformantQuantityQ", "[", 
  TemplateBox[{"1", "\"L\"", "liter", "\"Liters\""},
   "Quantity"], "]"}]], "Input",
 CellChangeTimes->{{3.8778863575292273`*^9, 3.8778863618090878`*^9}},
 CellLabel->
  "In[147]:=",ExpressionUUID->"ebb2f102-ec26-4bc7-87fb-51e6e2d0bda9"],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{{3.877886365216194*^9, 3.877886368423828*^9}, {
  3.8778864441383395`*^9, 3.877886463771269*^9}},
 CellLabel->
  "Out[147]=",ExpressionUUID->"3358597f-1f86-471c-81fc-36c0f2b058b5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"AllTrue", "[", "SIConformantQuantityQ", "]"}], "[", "SIQuantities",
   "]"}]], "Input",
 CellChangeTimes->{{3.8778863709580584`*^9, 3.8778863832070775`*^9}},
 CellLabel->
  "In[148]:=",ExpressionUUID->"950ad568-58a7-4cff-975e-1fbc9d5c22f2"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.8778864657969165`*^9},
 CellLabel->
  "Out[148]=",ExpressionUUID->"9fbda1e3-2fe7-4392-9251-758c8f9ebb3b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"QuantityUnit", "[", 
  RowBox[{"Times", "@@", 
   RowBox[{"MapThread", "[", 
    RowBox[{"Power", ",", 
     RowBox[{"{", 
      RowBox[{"SIQuantities", ",", 
       RowBox[{"Range", "[", "29", "]"}]}], "}"}]}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8778866874644537`*^9, 3.877886691004915*^9}},
 CellLabel->
  "In[187]:=",ExpressionUUID->"5e390f91-b282-4f25-b0f9-ef92816ba919"],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["\<\"Amperes\"\>", "4"], " ", 
  SuperscriptBox["\<\"Becquerels\"\>", "36"], " ", 
  SuperscriptBox["\<\"Candelas\"\>", "7"], " ", 
  SuperscriptBox["\<\"Coulombs\"\>", "15"], " ", 
  SuperscriptBox["\<\"Farads\"\>", "17"], " ", 
  SuperscriptBox["\<\"Grays\"\>", "55"], " ", 
  SuperscriptBox["\<\"Henries\"\>", "22"], " ", 
  SuperscriptBox["\<\"Joules\"\>", "13"], " ", 
  SuperscriptBox["\<\"Katals\"\>", "29"], " ", 
  SuperscriptBox["\<\"Kelvins\"\>", "28"], " ", 
  SuperscriptBox["\<\"Kilograms\"\>", "3"], " ", 
  SuperscriptBox["\<\"Lumens\"\>", "24"], " ", 
  SuperscriptBox["\<\"Lux\"\>", "25"], " ", 
  SuperscriptBox["\<\"Meters\"\>", "2"], " ", 
  SuperscriptBox["\<\"Moles\"\>", "6"], " ", 
  SuperscriptBox["\<\"Newtons\"\>", "11"], " ", 
  SuperscriptBox["\<\"Ohms\"\>", "18"], " ", 
  SuperscriptBox["\<\"Pascals\"\>", "12"], " ", 
  SuperscriptBox["\<\"Radians\"\>", "8"], " ", "\<\"Seconds\"\>", " ", 
  SuperscriptBox["\<\"Siemens\"\>", "19"], " ", 
  SuperscriptBox["\<\"Steradians\"\>", "9"], " ", 
  SuperscriptBox["\<\"Teslas\"\>", "21"], " ", 
  SuperscriptBox["\<\"Volts\"\>", "16"], " ", 
  SuperscriptBox["\<\"Watts\"\>", "14"], " ", 
  SuperscriptBox["\<\"Webers\"\>", "20"]}]], "Output",
 CellChangeTimes->{3.877886691681684*^9},
 CellLabel->
  "Out[187]=",ExpressionUUID->"ff80ded4-65ef-49b0-a50b-a33a1d4e8ff9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullForm", "[", 
  RowBox[{"QuantityUnit", "[", 
   RowBox[{"Times", "@@", 
    RowBox[{"MapThread", "[", 
     RowBox[{"Power", ",", 
      RowBox[{"{", 
       RowBox[{"SIQuantities", ",", 
        RowBox[{"Range", "[", "29", "]"}]}], "}"}]}], "]"}]}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8778867059439096`*^9, 3.8778867077514105`*^9}},
 CellLabel->
  "In[189]:=",ExpressionUUID->"719984ba-f5c6-4b78-82e8-3e5ca93dceb4"],

Cell[BoxData[
 TagBox[
  StyleBox[
   RowBox[{"Times", "[", 
    RowBox[{
     RowBox[{"Power", "[", 
      RowBox[{"\"\<Amperes\>\"", ",", "4"}], "]"}], ",", 
     RowBox[{"Power", "[", 
      RowBox[{"\"\<Becquerels\>\"", ",", "36"}], "]"}], ",", 
     RowBox[{"Power", "[", 
      RowBox[{"\"\<Candelas\>\"", ",", "7"}], "]"}], ",", 
     RowBox[{"Power", "[", 
      RowBox[{"\"\<Coulombs\>\"", ",", "15"}], "]"}], ",", 
     RowBox[{"Power", "[", 
      RowBox[{"\"\<Farads\>\"", ",", "17"}], "]"}], ",", 
     RowBox[{"Power", "[", 
      RowBox[{"\"\<Grays\>\"", ",", "55"}], "]"}], ",", 
     RowBox[{"Power", "[", 
      RowBox[{"\"\<Henries\>\"", ",", "22"}], "]"}], ",", 
     RowBox[{"Power", "[", 
      RowBox[{"\"\<Joules\>\"", ",", "13"}], "]"}], ",", 
     RowBox[{"Power", "[", 
      RowBox[{"\"\<Katals\>\"", ",", "29"}], "]"}], ",", 
     RowBox[{"Power", "[", 
      RowBox[{"\"\<Kelvins\>\"", ",", "28"}], "]"}], ",", 
     RowBox[{"Power", "[", 
      RowBox[{"\"\<Kilograms\>\"", ",", "3"}], "]"}], ",", 
     RowBox[{"Power", "[", 
      RowBox[{"\"\<Lumens\>\"", ",", "24"}], "]"}], ",", 
     RowBox[{"Power", "[", 
      RowBox[{"\"\<Lux\>\"", ",", "25"}], "]"}], ",", 
     RowBox[{"Power", "[", 
      RowBox[{"\"\<Meters\>\"", ",", "2"}], "]"}], ",", 
     RowBox[{"Power", "[", 
      RowBox[{"\"\<Moles\>\"", ",", "6"}], "]"}], ",", 
     RowBox[{"Power", "[", 
      RowBox[{"\"\<Newtons\>\"", ",", "11"}], "]"}], ",", 
     RowBox[{"Power", "[", 
      RowBox[{"\"\<Ohms\>\"", ",", "18"}], "]"}], ",", 
     RowBox[{"Power", "[", 
      RowBox[{"\"\<Pascals\>\"", ",", "12"}], "]"}], ",", 
     RowBox[{"Power", "[", 
      RowBox[{"\"\<Radians\>\"", ",", "8"}], "]"}], ",", "\"\<Seconds\>\"", 
     ",", 
     RowBox[{"Power", "[", 
      RowBox[{"\"\<Siemens\>\"", ",", "19"}], "]"}], ",", 
     RowBox[{"Power", "[", 
      RowBox[{"\"\<Steradians\>\"", ",", "9"}], "]"}], ",", 
     RowBox[{"Power", "[", 
      RowBox[{"\"\<Teslas\>\"", ",", "21"}], "]"}], ",", 
     RowBox[{"Power", "[", 
      RowBox[{"\"\<Volts\>\"", ",", "16"}], "]"}], ",", 
     RowBox[{"Power", "[", 
      RowBox[{"\"\<Watts\>\"", ",", "14"}], "]"}], ",", 
     RowBox[{"Power", "[", 
      RowBox[{"\"\<Webers\>\"", ",", "20"}], "]"}]}], "]"}],
   ShowSpecialCharacters->False,
   ShowStringCharacters->True,
   NumberMarks->True],
  FullForm]], "Output",
 CellChangeTimes->{3.877886708332573*^9},
 CellLabel->
  "Out[189]//FullForm=",ExpressionUUID->"7f53a5c0-2819-4328-bb23-\
3ddcca3f56e3"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"FullForm", "[", 
  RowBox[{"QuantityUnit", "[", 
   RowBox[{"Times", "@@", 
    RowBox[{"MapThread", "[", 
     RowBox[{"Power", ",", 
      RowBox[{"{", 
       RowBox[{"SIQuantities", ",", 
        RowBox[{"Range", "[", "29", "]"}]}], "}"}]}], "]"}]}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8778867263085093`*^9, 
  3.8778867300063667`*^9}},ExpressionUUID->"f3e2575d-3e62-46c2-ada4-\
e2c7d23fb8fe"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatchQ", "[", 
  RowBox[{
   RowBox[{
    TemplateBox[{
      InterpretationBox["\[InvisibleSpace]", 1], "\"Bq\"", "becquerels", 
      "\"Becquerels\""},
     "Quantity"], "//", "QuantityUnit"}], ",", 
   TagBox[
    StyleBox[
     RowBox[{"Times", "[", 
      RowBox[{
       RowBox[{"Power", "[", 
        RowBox[{"\"\<Amperes\>\"", ",", "_"}], "]"}], ",", 
       RowBox[{"Power", "[", 
        RowBox[{"\"\<Becquerels\>\"", ",", "_"}], "]"}]}], "]"}],
     ShowSpecialCharacters->False,
     ShowStringCharacters->True,
     NumberMarks->True],
    FullForm]}], "]"}]], "Input",
 CellChangeTimes->{{3.877886741008438*^9, 3.8778867731642957`*^9}},
 CellLabel->
  "In[191]:=",ExpressionUUID->"eeaae5b1-db2c-487c-8b21-1c6b0e1861b4"],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{{3.87788676255132*^9, 3.8778867737571225`*^9}},
 CellLabel->
  "Out[191]=",ExpressionUUID->"ddc4e055-1ac8-458f-8f96-41529cb7f71e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  TemplateBox[{
    InterpretationBox["\[InvisibleSpace]", 1], "\"Bq\"", "becquerels", 
    "\"Becquerels\""},
   "Quantity"], "//", "QuantityUnit"}]], "Input",
 CellLabel->
  "In[192]:=",ExpressionUUID->"25b96d18-2bad-4bb7-9f3e-d70c63cef684"],

Cell[BoxData["\<\"Becquerels\"\>"], "Output",
 CellChangeTimes->{3.8778867824138947`*^9},
 CellLabel->
  "Out[192]=",ExpressionUUID->"932f6619-a3d2-4550-8145-296559cb791e"]
}, Open  ]]
},
WindowSize->{1152., 585.6},
WindowMargins->{{
  Automatic, -5.399999999999864}, {-5.399999999999977, Automatic}},
TaggingRules-><|"TryRealOnly" -> False|>,
FrontEndVersion->"13.2 for Microsoft Windows (64-bit) (November 10, 2022)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"9a70c75c-e9da-44b7-a9e4-f204af34d0a8"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 250, 5, 28, "Input",ExpressionUUID->"0f1d799d-da0e-4727-b0ef-12a066954e58"],
Cell[CellGroupData[{
Cell[833, 29, 1741, 37, 86, "Input",ExpressionUUID->"9a38c89b-0da7-4b16-b172-5bf5fe755217"],
Cell[2577, 68, 2602, 59, 43, "Output",ExpressionUUID->"75c09aa3-1154-474c-a16a-a7d0bb8fbfbc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[5216, 132, 230, 4, 28, "Input",ExpressionUUID->"04ba9bee-d74b-4dee-ad84-c23ea221bca8"],
Cell[5449, 138, 1039, 24, 52, "Output",ExpressionUUID->"cbb7b87f-f303-4bc7-b9fe-0f1af304442b"]
}, Open  ]],
Cell[6503, 165, 1161, 23, 105, "Input",ExpressionUUID->"06cda7e6-ebce-458f-b33f-55e0277ccf62"],
Cell[CellGroupData[{
Cell[7689, 192, 313, 6, 28, "Input",ExpressionUUID->"c8024879-3342-4369-9082-d7bd49661705"],
Cell[8005, 200, 2435, 60, 94, "Output",ExpressionUUID->"a50e0c38-da73-4530-bef7-2146ed8e6f20"]
}, Open  ]],
Cell[CellGroupData[{
Cell[10477, 265, 218, 4, 28, "Input",ExpressionUUID->"63600993-3ea2-4e23-9bd4-f99f3a7bd9ac"],
Cell[10698, 271, 7378, 116, 1174, "Output",ExpressionUUID->"a86841cf-7153-4ba0-9fbb-93c7e6117b82"]
}, Closed]],
Cell[CellGroupData[{
Cell[18113, 392, 284, 4, 24, "Input",ExpressionUUID->"c7c14f7b-ad1d-4788-b484-76addeba82d0"],
Cell[18400, 398, 259, 4, 32, "Output",ExpressionUUID->"60066a9a-5434-4a69-bcb1-f0a70fd9a150"]
}, Open  ]],
Cell[CellGroupData[{
Cell[18696, 407, 262, 4, 28, "Input",ExpressionUUID->"d8bf831e-7bb1-4f0e-b583-08822518fe27"],
Cell[18961, 413, 512, 11, 47, "Output",ExpressionUUID->"55f8ca3f-7b87-4671-87cc-5c22cffcf256"]
}, Open  ]],
Cell[CellGroupData[{
Cell[19510, 429, 321, 6, 28, "Input",ExpressionUUID->"c8f6fe49-8ebc-4c64-8546-8994480b7fef"],
Cell[19834, 437, 241, 5, 32, "Output",ExpressionUUID->"0185c2e1-09c0-4f7a-87a8-bd1aa6c71948"]
}, Open  ]],
Cell[20090, 445, 276, 5, 48, "Input",ExpressionUUID->"b8dbf261-8e61-4a8e-a96a-b555dbba0c9c"],
Cell[CellGroupData[{
Cell[20391, 454, 306, 5, 28, "Input",ExpressionUUID->"31c51385-aec6-4f13-915a-96d0a8ccd4f7"],
Cell[20700, 461, 293, 6, 36, "Output",ExpressionUUID->"096a058b-5d9f-482e-9a13-ccd51050df4e"]
}, Open  ]],
Cell[21008, 470, 158, 3, 28, "Input",ExpressionUUID->"9067767d-231b-4c08-a120-1fbc4eee149f"],
Cell[CellGroupData[{
Cell[21191, 477, 289, 5, 28, "Input",ExpressionUUID->"1f40568a-cefc-4861-a51e-605de85ec3c6"],
Cell[21483, 484, 435, 13, 46, "Output",ExpressionUUID->"626c6d26-c1c9-48e3-a2e6-c60d223761dd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[21955, 502, 314, 7, 28, "Input",ExpressionUUID->"f6963712-1b47-40f0-aeb5-6fea56ee57a3"],
Cell[22272, 511, 247, 5, 32, "Output",ExpressionUUID->"728e93a0-6fb7-4622-8b03-26862745baae"]
}, Open  ]],
Cell[22534, 519, 304, 7, 28, "Input",ExpressionUUID->"6d73dc5e-ac74-42fc-ba7a-f14f3b028968"],
Cell[CellGroupData[{
Cell[22863, 530, 279, 5, 28, "Input",ExpressionUUID->"fd3fce91-fd54-44a9-9692-c48bd4fe742c"],
Cell[23145, 537, 356, 7, 36, "Output",ExpressionUUID->"42803963-faaf-4d3d-8e6d-8ea8570f2594"]
}, Open  ]],
Cell[CellGroupData[{
Cell[23538, 549, 339, 7, 28, "Input",ExpressionUUID->"b5122346-586d-42f7-b2df-0378b473c1ac"],
Cell[23880, 558, 278, 6, 32, "Output",ExpressionUUID->"751cd9b3-edb4-4e28-a69e-4db8de2b030d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[24195, 569, 411, 9, 28, "Input",ExpressionUUID->"9cee81ee-9ca1-4b67-ab43-f5c64b5f77b6"],
Cell[24609, 580, 193, 4, 47, "Output",ExpressionUUID->"0b60f393-5ba4-4846-b2cf-fec889849e6f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[24839, 589, 505, 12, 28, "Input",ExpressionUUID->"328bc112-5a97-41ef-8181-6c74f1c6a279"],
Cell[25347, 603, 279, 5, 32, "Output",ExpressionUUID->"09d62b57-cc19-41a1-b68d-0c756068fda0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[25663, 613, 260, 4, 28, "Input",ExpressionUUID->"c3b0a67b-8f4b-41d2-904a-2f1d6f51c461"],
Cell[25926, 619, 610382, 10965, 2781, "Output",ExpressionUUID->"5adf8008-12e5-4433-b5a0-20f872f96f12"]
}, Open  ]],
Cell[CellGroupData[{
Cell[636345, 11589, 498, 10, 28, "Input",ExpressionUUID->"5ee08b0c-86f1-4ec4-9956-a638e5ddf215"],
Cell[636846, 11601, 184641, 3336, 624, "Output",ExpressionUUID->"1c305f2b-2f74-46fb-af7a-273006760f64"]
}, Open  ]],
Cell[CellGroupData[{
Cell[821524, 14942, 426, 9, 28, "Input",ExpressionUUID->"d46593d3-381b-4c56-86e8-a8f3f113eae8"],
Cell[821953, 14953, 61802, 1110, 225, "Output",ExpressionUUID->"69c852ee-f361-427b-a20e-fa7241796c14"]
}, Open  ]],
Cell[CellGroupData[{
Cell[883792, 16068, 508, 12, 28, "Input",ExpressionUUID->"bf9a27d0-02de-4334-b0c2-d09edc462ac5"],
Cell[884303, 16082, 1536, 27, 109, "Output",ExpressionUUID->"329ed232-b981-4a2c-88b4-9e66695f001c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[885876, 16114, 555, 14, 28, "Input",ExpressionUUID->"92945013-203f-4229-b6e8-2e6ca052c2b5"],
Cell[886434, 16130, 1358, 25, 109, "Output",ExpressionUUID->"c20b34ae-47aa-445e-a311-c83a8e40ec83"]
}, Open  ]],
Cell[CellGroupData[{
Cell[887829, 16160, 596, 15, 28, "Input",ExpressionUUID->"5545fbdb-2b14-41de-a662-aad80d1b2854"],
Cell[888428, 16177, 1312, 24, 109, "Output",ExpressionUUID->"be0da427-6a6a-4084-a914-504730720bd1"]
}, Open  ]],
Cell[889755, 16204, 384, 9, 28, "Input",ExpressionUUID->"3d962bcc-f501-4b29-8e28-d0f5d1400ce0"],
Cell[CellGroupData[{
Cell[890164, 16217, 396, 8, 28, "Input",ExpressionUUID->"8dc9a4c8-454b-4cfd-869a-1179d75b6049"],
Cell[890563, 16227, 80800, 1468, 597, "Output",ExpressionUUID->"81f6e989-ab7f-44c0-a617-c4c075c309fe"]
}, Open  ]],
Cell[CellGroupData[{
Cell[971400, 17700, 617, 15, 28, "Input",ExpressionUUID->"95ee9337-8bfb-4e06-88f3-55542c451bce"],
Cell[972020, 17717, 760, 12, 52, "Output",ExpressionUUID->"34598034-ca52-4e51-8463-bf28bdcd0cbd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[972817, 17734, 445, 10, 28, "Input",ExpressionUUID->"778d4b90-b9dc-48a0-8d32-678b2dd9db65"],
Cell[973265, 17746, 371, 6, 32, "Output",ExpressionUUID->"a0d8b70e-8276-4041-97ee-e74a34267cf4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[973673, 17757, 901, 23, 48, "Input",ExpressionUUID->"0ad6e845-cff1-4578-8346-34fe0f1f2501"],
Cell[974577, 17782, 972, 17, 90, "Output",ExpressionUUID->"7f92a240-4f4a-47f8-92b4-698148532e25"]
}, Open  ]],
Cell[CellGroupData[{
Cell[975586, 17804, 971, 24, 143, "Input",ExpressionUUID->"95aad5b6-7a88-4723-a7e2-aa4585028894"],
Cell[976560, 17830, 900, 13, 90, "Output",ExpressionUUID->"8ea197af-417c-44f4-b776-8a8170cf3697"]
}, Open  ]],
Cell[CellGroupData[{
Cell[977497, 17848, 1090, 27, 181, "Input",ExpressionUUID->"e25279a9-8167-4db2-ad34-c2b6f77413eb"],
Cell[978590, 17877, 2498, 62, 111, "Output",ExpressionUUID->"050f9676-4874-4b82-893d-032fe189ab60"]
}, Open  ]],
Cell[CellGroupData[{
Cell[981125, 17944, 427, 10, 28, "Input",ExpressionUUID->"7b9ed504-0e06-40a6-8dc0-309773a71886"],
Cell[981555, 17956, 953, 15, 90, "Output",ExpressionUUID->"c0534f83-4758-4056-958b-c686a81469b6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[982545, 17976, 297, 6, 33, "Input",ExpressionUUID->"ffe2baf7-6683-4779-9c2c-7f985c4dbffa"],
Cell[982845, 17984, 210, 4, 32, "Output",ExpressionUUID->"5cf81d11-66c5-4204-924f-f610ad6fab16"]
}, Open  ]],
Cell[CellGroupData[{
Cell[983092, 17993, 333, 7, 33, "Input",ExpressionUUID->"acb9005b-bb67-4875-9f1b-818339c49c16"],
Cell[983428, 18002, 165, 2, 32, "Output",ExpressionUUID->"091551f8-1a9d-46aa-8488-4db0e2dcb093"]
}, Open  ]],
Cell[CellGroupData[{
Cell[983630, 18009, 481, 12, 33, "Input",ExpressionUUID->"09ea61b8-3549-49cf-9e7b-c619ae77c9ce"],
Cell[984114, 18023, 230, 4, 32, "Output",ExpressionUUID->"4acfff08-5b8d-4721-a2fe-594dca6a69bf"]
}, Open  ]],
Cell[CellGroupData[{
Cell[984381, 18032, 366, 9, 33, "Input",ExpressionUUID->"8b9b2b7a-fd95-4f80-b86f-6e3ad4ff721c"],
Cell[984750, 18043, 436, 14, 46, "Output",ExpressionUUID->"62d89e92-85e6-4bd2-b3f0-139269aaa578"]
}, Open  ]],
Cell[CellGroupData[{
Cell[985223, 18062, 281, 6, 33, "Input",ExpressionUUID->"9e485a6c-9b11-41e6-86b1-8267be4e12dd"],
Cell[985507, 18070, 361, 12, 46, "Output",ExpressionUUID->"1b8ca491-652d-43ef-9231-d45b3f27fcce"]
}, Open  ]],
Cell[CellGroupData[{
Cell[985905, 18087, 365, 9, 33, "Input",ExpressionUUID->"f7029cf6-f153-4f01-92e7-d59b471bde69"],
Cell[986273, 18098, 158, 3, 32, "Output",ExpressionUUID->"31ad7968-ee12-42e7-b644-a18030814b84"]
}, Open  ]],
Cell[CellGroupData[{
Cell[986468, 18106, 392, 10, 33, "Input",ExpressionUUID->"e8a46c0d-b93a-4e71-8dda-44c90f149983"],
Cell[986863, 18118, 156, 3, 32, "Output",ExpressionUUID->"82a72939-bd7a-4bba-8606-d0d07af13d7a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[987056, 18126, 485, 13, 33, "Input",ExpressionUUID->"2fe1fa69-2f55-4292-b80c-bf41f390a682"],
Cell[987544, 18141, 157, 3, 32, "Output",ExpressionUUID->"054e7d05-d3b2-470f-888d-ca05b89147b2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[987738, 18149, 416, 11, 28, "Input",ExpressionUUID->"e377af34-8e3c-452a-b2e6-86baa0652df9"],
Cell[988157, 18162, 397, 12, 46, "Output",ExpressionUUID->"9faa2eea-9742-4d01-b12a-601f595bd11e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[988591, 18179, 346, 9, 28, "Input",ExpressionUUID->"d8f5b580-3673-4498-9bbc-178d41a08088"],
Cell[988940, 18190, 169, 3, 32, "Output",ExpressionUUID->"c6c088f4-9b1c-4128-955a-47b4afebab77"]
}, Open  ]],
Cell[CellGroupData[{
Cell[989146, 18198, 317, 8, 28, "Input",ExpressionUUID->"668f3d1d-bce9-4959-9dca-bcd4fdffe16a"],
Cell[989466, 18208, 214, 5, 32, "Output",ExpressionUUID->"03befd9d-668e-476c-835a-5da38069579e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[989717, 18218, 346, 9, 31, "Input",ExpressionUUID->"46f2949c-7e82-4fc1-8176-559edf204350"],
Cell[990066, 18229, 271, 6, 35, "Output",ExpressionUUID->"56d754ff-90d8-486f-a4a7-093d416d4e1d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[990374, 18240, 437, 12, 31, "Input",ExpressionUUID->"f6d29863-0ced-4ad0-a336-3ad4d41e2de2"],
Cell[990814, 18254, 224, 5, 32, "Output",ExpressionUUID->"6c0d8a9b-5e5c-4cee-bc37-aaf1be176541"]
}, Open  ]],
Cell[CellGroupData[{
Cell[991075, 18264, 678, 19, 106, "Input",ExpressionUUID->"b59560c2-83b4-4173-9a28-e758f3c93e7d"],
Cell[991756, 18285, 281, 6, 32, "Output",ExpressionUUID->"3c9667cf-08a4-4b63-a3e2-7fe59ef7b2b1"]
}, Open  ]],
Cell[992052, 18294, 682, 16, 67, "Input",ExpressionUUID->"88af2a02-6916-478c-a352-fe2dbf99a489"],
Cell[CellGroupData[{
Cell[992759, 18314, 218, 4, 28, "Input",ExpressionUUID->"9040d8d9-ec67-4c32-b8bd-7463d3e713bd"],
Cell[992980, 18320, 1880, 32, 57, "Output",ExpressionUUID->"6145f8ab-0d8d-4cd4-8946-d8cdb9986419"]
}, Open  ]],
Cell[CellGroupData[{
Cell[994897, 18357, 264, 5, 28, "Input",ExpressionUUID->"fc7b7467-b11a-47b5-bd59-7337b4a6ff8b"],
Cell[995164, 18364, 827, 14, 90, "Output",ExpressionUUID->"f0f90df4-817a-4532-8257-bd18b2824531"]
}, Open  ]],
Cell[CellGroupData[{
Cell[996028, 18383, 435, 9, 48, "Input",ExpressionUUID->"f1d20646-1a53-4c39-b71e-a942dddf9c7b"],
Cell[996466, 18394, 183, 3, 32, "Output",ExpressionUUID->"7451aea7-4cb5-4b87-a247-57f87a53a384"]
}, Open  ]],
Cell[CellGroupData[{
Cell[996686, 18402, 449, 10, 48, "Input",ExpressionUUID->"b4c04057-2ad5-4711-b245-0676e970faf0"],
Cell[997138, 18414, 354, 9, 32, "Output",ExpressionUUID->"1cb7198b-05f2-4642-9365-b5cf8149d018"]
}, Open  ]],
Cell[CellGroupData[{
Cell[997529, 18428, 336, 8, 28, "Input",ExpressionUUID->"93249b09-8df7-41f3-a41d-5d72e9046f90"],
Cell[997868, 18438, 4958, 150, 143, "Output",ExpressionUUID->"fa03946c-55ab-4423-bde1-c4e96a5d27e4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1002863, 18593, 370, 9, 28, "Input",ExpressionUUID->"f569bb3d-b5cb-4d72-8f05-6c7e6aca6f91"],
Cell[1003236, 18604, 3465, 67, 100, "Output",ExpressionUUID->"f9c7a668-b8be-422a-a9f7-a216972186e6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1006738, 18676, 459, 12, 48, "Input",ExpressionUUID->"b7b2676f-50e0-4f8c-b54f-d0d43dd3ad72"],
Cell[1007200, 18690, 156, 3, 32, "Output",ExpressionUUID->"357aef8d-0fe8-43f4-8b8b-3d3daee1fbfe"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1007393, 18698, 748, 21, 86, "Input",ExpressionUUID->"26b7796b-fe34-4e6d-b516-a665f25e16f9"],
Cell[1008144, 18721, 158, 3, 32, "Output",ExpressionUUID->"778bb6dc-8e9f-459e-adfd-504ffa35ef0b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1008339, 18729, 681, 17, 28, "Input",ExpressionUUID->"022c22cf-5f40-4ecd-afbc-de64c4dfc967"],
Cell[1009023, 18748, 286, 6, 32, "Output",ExpressionUUID->"53f92238-3dcc-42f4-83b1-518dfd2f556b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1009346, 18759, 673, 17, 48, "Input",ExpressionUUID->"be68b8f9-370d-4088-b515-827f43f41e28"],
Cell[1010022, 18778, 442, 11, 37, "Output",ExpressionUUID->"b946225a-ab59-437e-9ae5-106513a9a4bb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1010501, 18794, 586, 15, 28, "Input",ExpressionUUID->"24395fc7-d07c-40bd-b4e0-03f47c36470b"],
Cell[1011090, 18811, 158, 3, 32, "Output",ExpressionUUID->"cd1dbd3f-ff49-440c-b461-07d0546ca1f5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1011285, 18819, 287, 6, 28, "Input",ExpressionUUID->"95fba73c-150c-4896-ab9d-a49b748dd65b"],
Cell[1011575, 18827, 909, 15, 52, "Output",ExpressionUUID->"3bfcc997-cb23-4648-b830-87037d37f691"]
}, Open  ]],
Cell[1012499, 18845, 834, 19, 86, "Input",ExpressionUUID->"a15582f4-0f28-48ce-972e-f8f978bc6d1e"],
Cell[CellGroupData[{
Cell[1013358, 18868, 292, 6, 33, "Input",ExpressionUUID->"ebb2f102-ec26-4bc7-87fb-51e6e2d0bda9"],
Cell[1013653, 18876, 232, 4, 32, "Output",ExpressionUUID->"3358597f-1f86-471c-81fc-36c0f2b058b5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1013922, 18885, 275, 6, 28, "Input",ExpressionUUID->"950ad568-58a7-4cff-975e-1fbc9d5c22f2"],
Cell[1014200, 18893, 158, 3, 32, "Output",ExpressionUUID->"9fbda1e3-2fe7-4392-9251-758c8f9ebb3b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1014395, 18901, 412, 10, 28, "Input",ExpressionUUID->"5e390f91-b282-4f25-b0f9-ef92816ba919"],
Cell[1014810, 18913, 1385, 29, 52, "Output",ExpressionUUID->"ff80ded4-65ef-49b0-a50b-a33a1d4e8ff9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1016232, 18947, 458, 12, 28, "Input",ExpressionUUID->"719984ba-f5c6-4b78-82e8-3e5ca93dceb4"],
Cell[1016693, 18961, 2510, 63, 104, "Output",ExpressionUUID->"7f53a5c0-2819-4328-bb23-3ddcca3f56e3"]
}, Open  ]],
Cell[1019218, 19027, 435, 12, 28, "Input",ExpressionUUID->"f3e2575d-3e62-46c2-ada4-e2c7d23fb8fe"],
Cell[CellGroupData[{
Cell[1019678, 19043, 758, 22, 35, "Input",ExpressionUUID->"eeaae5b1-db2c-487c-8b21-1c6b0e1861b4"],
Cell[1020439, 19067, 182, 3, 32, "Output",ExpressionUUID->"ddc4e055-1ac8-458f-8f96-41529cb7f71e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1020658, 19075, 267, 7, 35, "Input",ExpressionUUID->"25b96d18-2bad-4bb7-9f3e-d70c63cef684"],
Cell[1020928, 19084, 172, 3, 32, "Output",ExpressionUUID->"932f6619-a3d2-4550-8145-296559cb791e"]
}, Open  ]]
}
]
*)

