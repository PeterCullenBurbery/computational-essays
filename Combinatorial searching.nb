(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   3619822,      66961]
NotebookOptionsPosition[   3570818,      66157]
NotebookOutlinePosition[   3571297,      66175]
CellTagsIndexPosition[   3571254,      66172]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["\<\
Working through the chapter Combinatorial Searching in \
Knuth\[CloseCurlyQuote]s TAOCP\
\>", "Title",
 CellChangeTimes->{{3.8772759098064613`*^9, 3.8772759265192275`*^9}, 
   3.877275960935297*^9},ExpressionUUID->"23510547-758b-498e-b1cc-\
e16255078060"],

Cell[CellGroupData[{

Cell["Exercise 41", "Section",
 CellChangeTimes->{{3.877274117817298*^9, 3.877274124038843*^9}, {
  3.877275875577175*^9, 
  3.877275876915882*^9}},ExpressionUUID->"783978e7-073d-4de7-9da9-\
d53f65d84f32"],

Cell[TextData[{
 "For what integers n do we have ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["K", "n"], "=", 
    SubscriptBox["P", "n"]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "df7ffc7b-f5d8-45a5-8b0c-78240d08d598"],
 "? ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["K", "n"], "=", 
    SubscriptBox["C", "n"]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "c69a11ef-0864-4777-a487-53a0d3e0ceee"],
 "?"
}], "Text",
 CellChangeTimes->{{3.877274127889776*^9, 
  3.877274151984803*^9}},ExpressionUUID->"1718777a-80ef-41ee-8c05-\
ea49fce358d0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"CompleteGraph", "[", "i", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "9"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8772741551067743`*^9, 3.8772741731893764`*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"40010bc4-9a5f-4c45-b130-903a55ab4dd1"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1}, {}, {
        GraphLayout -> {"CircularEmbedding", "OptimalOrder" -> False}}]]}, 
      TagBox[GraphicsGroupBox[GraphicsComplexBox[{{0., 0.}}, {{}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           DiskBox[1, 0.004014598540145964]}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->"NetworkGraphics",
    FormatType->TraditionalForm,
    FrameTicks->None,
    PlotRangePadding->0.1], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2}, {Null, 
         SparseArray[
         Automatic, {2, 2}, 0, {1, {{0, 1, 2}, {{2}, {1}}}, Pattern}]}, {
        GraphLayout -> {"CircularEmbedding", "OptimalOrder" -> False}}]]}, 
      TagBox[GraphicsGroupBox[GraphicsComplexBox[{{1., 0.}, {-1., 0.}}, {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
           {Arrowheads[0.], ArrowBox[{1, 2}, 0.02261146496815286]}}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           DiskBox[1, 0.02261146496815286], 
           DiskBox[2, 0.02261146496815286]}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->"NetworkGraphics",
    FormatType->TraditionalForm,
    FrameTicks->None], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3}, {Null, 
         SparseArray[
         Automatic, {3, 3}, 0, {
          1, {{0, 2, 4, 6}, {{2}, {3}, {1}, {3}, {1}, {2}}}, Pattern}]}, {
        GraphLayout -> {"CircularEmbedding", "OptimalOrder" -> False}}]]}, 
      TagBox[
       GraphicsGroupBox[
        GraphicsComplexBox[{{-0.8660254037844384, -0.49999999999999933`}, {
         0.8660254037844389, -0.5000000000000012}, {1.8369701987210297`*^-16, 
         1.}}, {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
           ArrowBox[{{1, 2}, {1, 3}, {2, 3}}, 0.020399597244776385`]}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           DiskBox[1, 0.020399597244776385], DiskBox[2, 0.020399597244776385],
            DiskBox[3, 0.020399597244776385]}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->"NetworkGraphics",
    FormatType->TraditionalForm,
    FrameTicks->None], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4}, {Null, 
         SparseArray[
         Automatic, {4, 4}, 0, {
          1, {{0, 3, 6, 9, 12}, {{2}, {3}, {4}, {1}, {3}, {4}, {1}, {2}, {
            4}, {1}, {2}, {3}}}, Pattern}]}, {
        GraphLayout -> "StarEmbedding"}]]}, 
      TagBox[
       GraphicsGroupBox[
        GraphicsComplexBox[{{0., 0.}, {
         0.8660254037844389, -0.5000000000000012}, {1.8369701987210297`*^-16, 
         1.}, {-0.8660254037844386, -0.49999999999999917`}}, {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
           ArrowBox[{{1, 2}, {1, 3}, {1, 4}, {2, 3}, {2, 4}, {3, 4}}, 
            0.020399597244776413`]}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           DiskBox[1, 0.020399597244776413], DiskBox[2, 0.020399597244776413],
            DiskBox[3, 0.020399597244776413], 
           DiskBox[4, 0.020399597244776413]}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->"NetworkGraphics",
    FormatType->TraditionalForm,
    FrameTicks->None], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4, 5}, {Null, 
         SparseArray[
         Automatic, {5, 5}, 0, {
          1, {{0, 4, 8, 12, 16, 20}, {{2}, {3}, {4}, {5}, {1}, {3}, {4}, {
            5}, {1}, {2}, {4}, {5}, {1}, {2}, {3}, {5}, {1}, {2}, {3}, {4}}}, 
           Pattern}]}, {
        GraphLayout -> {"CircularEmbedding", "OptimalOrder" -> False}}]]}, 
      TagBox[
       GraphicsGroupBox[
        GraphicsComplexBox[{{-0.9510565162951538, 
         0.3090169943749484}, {-0.5877852522924726, -0.8090169943749468}, {
         0.5877852522924738, -0.8090169943749481}, {0.9510565162951533, 
         0.30901699437494634`}, {-7.044813998280222*^-16, 1.}}, {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
           ArrowBox[{{1, 2}, {1, 3}, {1, 4}, {1, 5}, {2, 3}, {2, 4}, {2, 5}, {
            3, 4}, {3, 5}, {4, 5}}, 0.021812234931106983`]}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           DiskBox[1, 0.021812234931106983], DiskBox[2, 0.021812234931106983],
            DiskBox[3, 0.021812234931106983], 
           DiskBox[4, 0.021812234931106983], 
           DiskBox[5, 0.021812234931106983]}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->"NetworkGraphics",
    FormatType->TraditionalForm,
    FrameTicks->None], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4, 5, 6}, {Null, 
         SparseArray[
         Automatic, {6, 6}, 0, {
          1, {{0, 5, 10, 15, 20, 25, 30}, {{2}, {3}, {4}, {5}, {6}, {1}, {
            3}, {4}, {5}, {6}, {1}, {2}, {4}, {5}, {6}, {1}, {2}, {3}, {5}, {
            6}, {1}, {2}, {3}, {4}, {6}, {1}, {2}, {3}, {4}, {5}}}, 
           Pattern}]}, {
        GraphLayout -> {"CircularEmbedding", "OptimalOrder" -> False}}]]}, 
      TagBox[
       GraphicsGroupBox[
        GraphicsComplexBox[{{-0.8660254037844389, 
         0.5000000000000008}, {-0.8660254037844384, -0.49999999999999933`}, {
         3.8285686989269494`*^-16, -1.}, {
         0.8660254037844389, -0.5000000000000012}, {0.8660254037844386, 
         0.4999999999999993}, {1.8369701987210297`*^-16, 1.}}, {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
           ArrowBox[{{1, 2}, {1, 3}, {1, 4}, {1, 5}, {1, 6}, {2, 3}, {2, 4}, {
            2, 5}, {2, 6}, {3, 4}, {3, 5}, {3, 6}, {4, 5}, {4, 6}, {5, 6}}, 
            0.02261146496815286]}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           DiskBox[1, 0.02261146496815286], DiskBox[2, 0.02261146496815286], 
           DiskBox[3, 0.02261146496815286], DiskBox[4, 0.02261146496815286], 
           DiskBox[5, 0.02261146496815286], 
           DiskBox[6, 0.02261146496815286]}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->"NetworkGraphics",
    FormatType->TraditionalForm,
    FrameTicks->None], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4, 5, 6, 7}, {Null, 
         SparseArray[
         Automatic, {7, 7}, 0, {
          1, {{0, 6, 12, 18, 24, 30, 36, 42}, {{2}, {3}, {4}, {5}, {6}, {7}, {
            1}, {3}, {4}, {5}, {6}, {7}, {1}, {2}, {4}, {5}, {6}, {7}, {1}, {
            2}, {3}, {5}, {6}, {7}, {1}, {2}, {3}, {4}, {6}, {7}, {1}, {2}, {
            3}, {4}, {5}, {7}, {1}, {2}, {3}, {4}, {5}, {6}}}, Pattern}]}, {
        GraphLayout -> {"CircularEmbedding", "OptimalOrder" -> False}}]]}, 
      TagBox[
       GraphicsGroupBox[
        GraphicsComplexBox[{{-0.7818314824680302, 
         0.6234898018587343}, {-0.9749279121818235, -0.22252093395631342`}, \
{-0.43388373911755757`, -0.9009688679024187}, {
         0.43388373911755884`, -0.9009688679024196}, {
         0.9749279121818237, -0.2225209339563155}, {0.7818314824680294, 
         0.6234898018587326}, {-7.044813998280222*^-16, 1.}}, {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
           ArrowBox[{{1, 2}, {1, 3}, {1, 4}, {1, 5}, {1, 6}, {1, 7}, {2, 3}, {
            2, 4}, {2, 5}, {2, 6}, {2, 7}, {3, 4}, {3, 5}, {3, 6}, {3, 7}, {4,
             5}, {4, 6}, {4, 7}, {5, 6}, {5, 7}, {6, 7}}, 
            0.02220329551621769]}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           DiskBox[1, 0.02220329551621769], DiskBox[2, 0.02220329551621769], 
           DiskBox[3, 0.02220329551621769], DiskBox[4, 0.02220329551621769], 
           DiskBox[5, 0.02220329551621769], DiskBox[6, 0.02220329551621769], 
           DiskBox[7, 0.02220329551621769]}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->"NetworkGraphics",
    FormatType->TraditionalForm,
    FrameTicks->None], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4, 5, 6, 7, 8}, {Null, 
         SparseArray[
         Automatic, {8, 8}, 0, {
          1, {{0, 7, 14, 21, 28, 35, 42, 49, 56}, {{2}, {3}, {4}, {5}, {6}, {
            7}, {8}, {1}, {3}, {4}, {5}, {6}, {7}, {8}, {1}, {2}, {4}, {5}, {
            6}, {7}, {8}, {1}, {2}, {3}, {5}, {6}, {7}, {8}, {1}, {2}, {3}, {
            4}, {6}, {7}, {8}, {1}, {2}, {3}, {4}, {5}, {7}, {8}, {1}, {2}, {
            3}, {4}, {5}, {6}, {8}, {1}, {2}, {3}, {4}, {5}, {6}, {7}}}, 
           Pattern}]}, {
        GraphLayout -> {"CircularEmbedding", "OptimalOrder" -> False}}]]}, 
      TagBox[
       GraphicsGroupBox[
        GraphicsComplexBox[{{-0.707106781186548, 0.7071067811865482}, {-1., 
         1.0106430996148606`*^-15}, {-0.7071067811865471, \
-0.7071067811865468}, {6.049014748177263*^-16, -1.}, {
         0.7071067811865481, -0.7071067811865483}, {
         1., -1.133107779529596*^-15}, {0.707106781186547, 
         0.7071067811865467}, {-7.044813998280222*^-16, 1.}}, {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
           ArrowBox[{{1, 2}, {1, 3}, {1, 4}, {1, 5}, {1, 6}, {1, 7}, {1, 8}, {
            2, 3}, {2, 4}, {2, 5}, {2, 6}, {2, 7}, {2, 8}, {3, 4}, {3, 5}, {3,
             6}, {3, 7}, {3, 8}, {4, 5}, {4, 6}, {4, 7}, {4, 8}, {5, 6}, {5, 
            7}, {5, 8}, {6, 7}, {6, 8}, {7, 8}}, 0.02261146496815286]}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           DiskBox[1, 0.02261146496815286], DiskBox[2, 0.02261146496815286], 
           DiskBox[3, 0.02261146496815286], DiskBox[4, 0.02261146496815286], 
           DiskBox[5, 0.02261146496815286], DiskBox[6, 0.02261146496815286], 
           DiskBox[7, 0.02261146496815286], 
           DiskBox[8, 0.02261146496815286]}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->"NetworkGraphics",
    FormatType->TraditionalForm,
    FrameTicks->None], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9}, {Null, 
         SparseArray[
         Automatic, {9, 9}, 0, {
          1, {{0, 8, 16, 24, 32, 40, 48, 56, 64, 72}, {{2}, {3}, {4}, {5}, {
            6}, {7}, {8}, {9}, {1}, {3}, {4}, {5}, {6}, {7}, {8}, {9}, {1}, {
            2}, {4}, {5}, {6}, {7}, {8}, {9}, {1}, {2}, {3}, {5}, {6}, {7}, {
            8}, {9}, {1}, {2}, {3}, {4}, {6}, {7}, {8}, {9}, {1}, {2}, {3}, {
            4}, {5}, {7}, {8}, {9}, {1}, {2}, {3}, {4}, {5}, {6}, {8}, {9}, {
            1}, {2}, {3}, {4}, {5}, {6}, {7}, {9}, {1}, {2}, {3}, {4}, {5}, {
            6}, {7}, {8}}}, Pattern}]}, {
        GraphLayout -> {"CircularEmbedding", "OptimalOrder" -> False}}]]}, 
      TagBox[
       GraphicsGroupBox[
        GraphicsComplexBox[{{-0.6427876096865398, 
         0.7660444431189786}, {-0.9848077530122081, 
         0.17364817766693114`}, {-0.8660254037844384, -0.49999999999999933`}, \
{-0.34202014332566844`, -0.9396926207859079}, {
         0.3420201433256691, -0.9396926207859085}, {
         0.8660254037844389, -0.5000000000000012}, {0.984807753012208, 
         0.17364817766692903`}, {0.6427876096865388, 
         0.7660444431189772}, {-7.044813998280222*^-16, 1.}}, {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
           ArrowBox[{{1, 2}, {1, 3}, {1, 4}, {1, 5}, {1, 6}, {1, 7}, {1, 8}, {
            1, 9}, {2, 3}, {2, 4}, {2, 5}, {2, 6}, {2, 7}, {2, 8}, {2, 9}, {3,
             4}, {3, 5}, {3, 6}, {3, 7}, {3, 8}, {3, 9}, {4, 5}, {4, 6}, {4, 
            7}, {4, 8}, {4, 9}, {5, 6}, {5, 7}, {5, 8}, {5, 9}, {6, 7}, {6, 
            8}, {6, 9}, {7, 8}, {7, 9}, {8, 9}}, 0.022364449578799767`]}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           DiskBox[1, 0.022364449578799767], DiskBox[2, 0.022364449578799767],
            DiskBox[3, 0.022364449578799767], 
           DiskBox[4, 0.022364449578799767], DiskBox[5, 0.022364449578799767],
            DiskBox[6, 0.022364449578799767], 
           DiskBox[7, 0.022364449578799767], DiskBox[8, 0.022364449578799767],
            DiskBox[9, 0.022364449578799767]}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->"NetworkGraphics",
    FormatType->TraditionalForm,
    FrameTicks->None]}], "}"}]], "Output",
 CellChangeTimes->{{3.877274160716116*^9, 3.87727417368928*^9}},
 CellLabel->"Out[2]=",ExpressionUUID->"9d99222e-1df7-4e0f-a40d-2b77e6b80e7b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"PathGraph", "[", 
    RowBox[{"Range", "[", "i", "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "9"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8772741551067743`*^9, 3.8772741859855766`*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"be6251f1-0ee4-4389-baf0-97cda980040c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1}, {}]]}, 
      TagBox[GraphicsGroupBox[GraphicsComplexBox[{{0., 0.}}, {{}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           DiskBox[1, 0.004014598540145964]}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->"NetworkGraphics",
    FormatType->TraditionalForm,
    FrameTicks->None,
    PlotRangePadding->0.1], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2}, {Null, {{1, 2}}}]]}, 
      TagBox[GraphicsGroupBox[GraphicsComplexBox[{{1., 0.}, {-1., 0.}}, {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
           {Arrowheads[0.], ArrowBox[{1, 2}, 0.02261146496815286]}}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           DiskBox[1, 0.02261146496815286], 
           DiskBox[2, 0.02261146496815286]}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->"NetworkGraphics",
    FormatType->TraditionalForm,
    FrameTicks->None], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3}, {Null, {{1, 2}, {2, 3}}}]]}, 
      TagBox[
       GraphicsGroupBox[
        GraphicsComplexBox[{{0., 3.6739403974420594`*^-16}, {1., 
         2.4492935982947064`*^-16}, {2., 0.}}, {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
           ArrowBox[{{1, 2}, {2, 3}}, 0.02261146496815286]}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           DiskBox[1, 0.02261146496815286], DiskBox[2, 0.02261146496815286], 
           DiskBox[3, 0.02261146496815286]}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->"NetworkGraphics",
    FormatType->TraditionalForm,
    FrameTicks->None], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4}, {Null, {{1, 2}, {2, 3}, {3, 4}}}]]}, 
      TagBox[
       GraphicsGroupBox[
        GraphicsComplexBox[{{0., 6.123233995736766*^-16}, {1., 
         4.898587196589413*^-16}, {2., 2.4492935982947064`*^-16}, {3., 0.}}, {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
           ArrowBox[{{1, 2}, {2, 3}, {3, 4}}, 0.030239520958083826`]}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           DiskBox[1, 0.030239520958083826], DiskBox[2, 0.030239520958083826],
            DiskBox[3, 0.030239520958083826], 
           DiskBox[4, 0.030239520958083826]}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->"NetworkGraphics",
    FormatType->TraditionalForm,
    FrameTicks->None], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4, 5}, {Null, {{1, 2}, {2, 3}, {3, 4}, {4, 5}}}]]}, 
      TagBox[
       GraphicsGroupBox[
        GraphicsComplexBox[{{0., 7.347880794884119*^-16}, {1., 
         6.123233995736766*^-16}, {2., 4.898587196589413*^-16}, {3., 
         2.4492935982947064`*^-16}, {4., 0.}}, {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
           ArrowBox[{{1, 2}, {2, 3}, {3, 4}, {4, 5}}, 0.03700564971751412]}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           DiskBox[1, 0.03700564971751412], DiskBox[2, 0.03700564971751412], 
           DiskBox[3, 0.03700564971751412], DiskBox[4, 0.03700564971751412], 
           DiskBox[5, 0.03700564971751412]}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->"NetworkGraphics",
    FormatType->TraditionalForm,
    FrameTicks->None], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4, 5, 6}, {
        Null, {{1, 2}, {2, 3}, {3, 4}, {4, 5}, {5, 6}}}]]}, 
      TagBox[
       GraphicsGroupBox[
        GraphicsComplexBox[{{0., 9.797174393178826*^-16}, {1., 
         8.572527594031472*^-16}, {2., 7.347880794884119*^-16}, {3., 
         4.898587196589412*^-16}, {4., 2.449293598294706*^-16}, {5., 0.}}, {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
           ArrowBox[{{1, 2}, {2, 3}, {3, 4}, {4, 5}, {5, 6}}, 
            0.043048128342245986`]}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           DiskBox[1, 0.043048128342245986], DiskBox[2, 0.043048128342245986],
            DiskBox[3, 0.043048128342245986], 
           DiskBox[4, 0.043048128342245986], DiskBox[5, 0.043048128342245986],
            DiskBox[6, 0.043048128342245986]}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->"NetworkGraphics",
    FormatType->TraditionalForm,
    FrameTicks->None], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4, 5, 6, 7}, {
        Null, {{1, 2}, {2, 3}, {3, 4}, {4, 5}, {5, 6}, {6, 7}}}]]}, 
      TagBox[
       GraphicsGroupBox[
        GraphicsComplexBox[{{0., 1.102182119232618*^-15}, {1., 
         9.797174393178826*^-16}, {2., 8.572527594031472*^-16}, {3., 
         7.347880794884119*^-16}, {4., 4.898587196589412*^-16}, {5., 
         2.449293598294706*^-16}, {6., 0.}}, {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
           ArrowBox[{{1, 2}, {2, 3}, {3, 4}, {4, 5}, {5, 6}, {6, 7}}, 
            0.04847715736040609]}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           DiskBox[1, 0.04847715736040609], DiskBox[2, 0.04847715736040609], 
           DiskBox[3, 0.04847715736040609], DiskBox[4, 0.04847715736040609], 
           DiskBox[5, 0.04847715736040609], DiskBox[6, 0.04847715736040609], 
           DiskBox[7, 0.04847715736040609]}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->"NetworkGraphics",
    FormatType->TraditionalForm,
    FrameTicks->None], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4, 5, 6, 7, 8}, {
        Null, {{1, 2}, {2, 3}, {3, 4}, {4, 5}, {5, 6}, {6, 7}, {7, 8}}}]]}, 
      TagBox[
       GraphicsGroupBox[
        GraphicsComplexBox[{{0., 1.3471114790620886`*^-15}, {1., 
         1.2246467991473533`*^-15}, {2., 1.102182119232618*^-15}, {3., 
         9.797174393178826*^-16}, {4., 7.347880794884119*^-16}, {5., 
         4.898587196589413*^-16}, {6., 2.449293598294707*^-16}, {7., 0.}}, {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
           ArrowBox[{{1, 2}, {2, 3}, {3, 4}, {4, 5}, {5, 6}, {6, 7}, {7, 8}}, 
            0.05338164251207729]}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           DiskBox[1, 0.05338164251207729], DiskBox[2, 0.05338164251207729], 
           DiskBox[3, 0.05338164251207729], DiskBox[4, 0.05338164251207729], 
           DiskBox[5, 0.05338164251207729], DiskBox[6, 0.05338164251207729], 
           DiskBox[7, 0.05338164251207729], 
           DiskBox[8, 0.05338164251207729]}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->"NetworkGraphics",
    FormatType->TraditionalForm,
    FrameTicks->None], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9}, {
        Null, {{1, 2}, {2, 3}, {3, 4}, {4, 5}, {5, 6}, {6, 7}, {7, 8}, {8, 
         9}}}]]}, 
      TagBox[
       GraphicsGroupBox[
        GraphicsComplexBox[{{0., 1.4695761589768238`*^-15}, {1., 
         1.3471114790620886`*^-15}, {2., 1.2246467991473533`*^-15}, {3., 
         1.102182119232618*^-15}, {4., 9.797174393178826*^-16}, {5., 
         7.347880794884119*^-16}, {6., 4.898587196589413*^-16}, {7., 
         2.449293598294707*^-16}, {8., 0.}}, {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
           ArrowBox[{{1, 2}, {2, 3}, {3, 4}, {4, 5}, {5, 6}, {6, 7}, {7, 8}, {
            8, 9}}, 0.05783410138248847]}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           DiskBox[1, 0.05783410138248847], DiskBox[2, 0.05783410138248847], 
           DiskBox[3, 0.05783410138248847], DiskBox[4, 0.05783410138248847], 
           DiskBox[5, 0.05783410138248847], DiskBox[6, 0.05783410138248847], 
           DiskBox[7, 0.05783410138248847], DiskBox[8, 0.05783410138248847], 
           DiskBox[9, 0.05783410138248847]}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->"NetworkGraphics",
    FormatType->TraditionalForm,
    FrameTicks->None]}], "}"}]], "Output",
 CellChangeTimes->{3.8772741863917255`*^9},
 CellLabel->"Out[3]=",ExpressionUUID->"ff418fd0-2a66-4eec-9dd1-cf077bfa9ddc"]
}, Open  ]],

Cell["\<\
I\[CloseCurlyQuote]ll use the new isomorphism functionality introduced in \
recent releases of Mathematica:\
\>", "Text",
 CellChangeTimes->{{3.8772757902827063`*^9, 
  3.8772758030482655`*^9}},ExpressionUUID->"8abb2d9f-436a-4acb-afb8-\
bb830e53cf1c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindGraphIsomorphism", "[", 
  RowBox[{
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1}, {}]]}, 
      TagBox[GraphicsGroupBox[GraphicsComplexBox[{{0., 0.}}, {{}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           DiskBox[1, 0.004014598540145964]}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->"NetworkGraphics",
    FormatType->TraditionalForm,
    FrameTicks->None,
    PlotRangePadding->0.1], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1}, {}, {
        GraphLayout -> {"CircularEmbedding", "OptimalOrder" -> False}}]]}, 
      TagBox[GraphicsGroupBox[GraphicsComplexBox[{{0., 0.}}, {{}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           DiskBox[1, 0.004014598540145964]}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->"NetworkGraphics",
    FormatType->TraditionalForm,
    FrameTicks->None,
    PlotRangePadding->0.1]}], "]"}]], "Input",
 CellChangeTimes->{{3.877274210658759*^9, 3.877274232275937*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"c296a6bb-835b-44f6-9738-15538067f2a0"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\[LeftAssociation]", 
   RowBox[{"1", "\[Rule]", "1"}], "\[RightAssociation]"}], "}"}]], "Output",
 CellChangeTimes->{3.877274233057017*^9},
 CellLabel->"Out[5]=",ExpressionUUID->"194ed91e-4132-47db-903b-b7d1d71701d1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Names", "[", "\"\<*Isom*\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.8772742541981115`*^9, 3.8772742850209923`*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"f33d7c4d-e620-4981-8a8d-cf95f6e51fc8"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"FindGraphIsomorphism\"\>", ",", "\<\"FindIsomers\"\>", 
   ",", "\<\"FindIsomorphicSubgraph\"\>", 
   ",", "\<\"FindSubgraphIsomorphism\"\>", ",", "\<\"IsomorphicGraphQ\"\>", 
   ",", "\<\"IsomorphicSubgraphQ\"\>"}], "}"}]], "Output",
 CellChangeTimes->{{3.8772742590360775`*^9, 3.877274285505273*^9}},
 CellLabel->"Out[8]=",ExpressionUUID->"74ca0031-7808-428f-bcfd-d3a80d263b5e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Information", "/@", 
  RowBox[{"Names", "[", "\"\<*Isom*\>\"", "]"}]}]], "Input",
 CellChangeTimes->{{3.877274262161058*^9, 3.8772742889272203`*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"62ec24f5-e44f-42bd-a014-eb7440fcda52"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/FindGraphIsomorphism",
                ButtonNote->"paclet:ref/FindGraphIsomorphism"],
               "\"paclet:ref/FindGraphIsomorphism\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"FindGraphIsomorphism\\\", \\\
\"[\\\", RowBox[{SubscriptBox[StyleBox[\\\"g\\\", \\\"TI\\\"], StyleBox[\\\"1\
\\\", \\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"g\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]]}], \\\"]\\\"}]\\) finds an isomorphism that \
maps the graph \\!\\(\\*SubscriptBox[StyleBox[\\\"g\\\", \\\"TI\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]]\\) to \\!\\(\\*SubscriptBox[StyleBox[\\\"g\\\
\", \\\"TI\\\"], StyleBox[\\\"2\\\", \\\"TR\\\"]]\\) by renaming vertices.\\n\
\\!\\(\\*RowBox[{\\\"FindGraphIsomorphism\\\", \\\"[\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"g\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"g\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"n\\\", \
\\\"TI\\\"]}], \\\"]\\\"}]\\) finds at most \\!\\(\\*StyleBox[\\\"n\\\", \
\\\"TI\\\"]\\) isomorphisms. \
\\n\\!\\(\\*RowBox[{\\\"FindGraphIsomorphism\\\", \\\"[\\\", RowBox[{RowBox[{\
\\\"{\\\", RowBox[{RowBox[{StyleBox[\\\"v\\\", \\\"TI\\\"], \\\"\[Rule]\\\", \
StyleBox[\\\"w\\\", \\\"TI\\\"]}], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \
\\\"TR\\\"]}], \\\"}\\\"}], \\\",\\\", \\\"\[Ellipsis]\\\"}], \\\"]\\\"}]\\) \
uses rules \\!\\(\\*RowBox[{StyleBox[\\\"v\\\", \\\"TI\\\"], \\\"\[Rule]\\\", \
StyleBox[\\\"w\\\", \\\"TI\\\"]}]\\) to specify the graph \
\\!\\(\\*StyleBox[\\\"g\\\", \\\"TI\\\"]\\).\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", 
                    "paclet:ref/FindGraphIsomorphism", 
                    "paclet:ref/FindGraphIsomorphism", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/\
FindGraphIsomorphism.html"], None}, 
                    "http://reference.wolfram.com/language/ref/\
FindGraphIsomorphism.html", "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Options\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Options\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Options", "Tooltip"]& ], 
                    RowBox[{"Method", "\[Rule]", "Automatic"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", 
                    RowBox[{"Protected", ",", "ReadProtected"}], "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`FindGraphIsomorphism\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/FindGraphIsomorphism",
                ButtonNote->"paclet:ref/FindGraphIsomorphism"],
               "\"paclet:ref/FindGraphIsomorphism\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"FindGraphIsomorphism\\\", \\\
\"[\\\", RowBox[{SubscriptBox[StyleBox[\\\"g\\\", \\\"TI\\\"], StyleBox[\\\"1\
\\\", \\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"g\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]]}], \\\"]\\\"}]\\) finds an isomorphism that \
maps the graph \\!\\(\\*SubscriptBox[StyleBox[\\\"g\\\", \\\"TI\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]]\\) to \\!\\(\\*SubscriptBox[StyleBox[\\\"g\\\
\", \\\"TI\\\"], StyleBox[\\\"2\\\", \\\"TR\\\"]]\\) by renaming vertices.\\n\
\\!\\(\\*RowBox[{\\\"FindGraphIsomorphism\\\", \\\"[\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"g\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"g\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"n\\\", \
\\\"TI\\\"]}], \\\"]\\\"}]\\) finds at most \\!\\(\\*StyleBox[\\\"n\\\", \
\\\"TI\\\"]\\) isomorphisms. \
\\n\\!\\(\\*RowBox[{\\\"FindGraphIsomorphism\\\", \\\"[\\\", RowBox[{RowBox[{\
\\\"{\\\", RowBox[{RowBox[{StyleBox[\\\"v\\\", \\\"TI\\\"], \\\"\[Rule]\\\", \
StyleBox[\\\"w\\\", \\\"TI\\\"]}], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \
\\\"TR\\\"]}], \\\"}\\\"}], \\\",\\\", \\\"\[Ellipsis]\\\"}], \\\"]\\\"}]\\) \
uses rules \\!\\(\\*RowBox[{StyleBox[\\\"v\\\", \\\"TI\\\"], \\\"\[Rule]\\\", \
StyleBox[\\\"w\\\", \\\"TI\\\"]}]\\) to specify the graph \
\\!\\(\\*StyleBox[\\\"g\\\", \\\"TI\\\"]\\).\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"FindGraphIsomorphism\", \"[\", \
RowBox[{SubscriptBox[StyleBox[\"g\", \"TI\"], StyleBox[\"1\", \"TR\"]], \
\",\", SubscriptBox[StyleBox[\"g\", \"TI\"], StyleBox[\"2\", \"TR\"]]}], \
\"]\"}]\) finds an isomorphism that maps the graph \
\!\(\*SubscriptBox[StyleBox[\"g\", \"TI\"], StyleBox[\"1\", \"TR\"]]\) to \
\!\(\*SubscriptBox[StyleBox[\"g\", \"TI\"], StyleBox[\"2\", \"TR\"]]\) by \
renaming vertices.\n\!\(\*RowBox[{\"FindGraphIsomorphism\", \"[\", \
RowBox[{SubscriptBox[StyleBox[\"g\", \"TI\"], StyleBox[\"1\", \"TR\"]], \
\",\", SubscriptBox[StyleBox[\"g\", \"TI\"], StyleBox[\"2\", \"TR\"]], \",\", \
StyleBox[\"n\", \"TI\"]}], \"]\"}]\) finds at most \!\(\*StyleBox[\"n\", \"TI\
\"]\) isomorphisms. \n\!\(\*RowBox[{\"FindGraphIsomorphism\", \"[\", \
RowBox[{RowBox[{\"{\", RowBox[{RowBox[{StyleBox[\"v\", \"TI\"], \"\[Rule]\", \
StyleBox[\"w\", \"TI\"]}], \",\", StyleBox[\"\[Ellipsis]\", \"TR\"]}], \
\"}\"}], \",\", \"\[Ellipsis]\"}], \"]\"}]\) uses rules \
\!\(\*RowBox[{StyleBox[\"v\", \"TI\"], \"\[Rule]\", StyleBox[\"w\", \"TI\"]}]\
\) to specify the graph \!\(\*StyleBox[\"g\", \"TI\"]\).", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/FindGraphIsomorphism", "Web" -> 
        "http://reference.wolfram.com/language/ref/FindGraphIsomorphism.html"|>\
, "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, "SubValues" -> 
      None, "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> 
      None, "Options" -> {Method -> Automatic}, 
      "Attributes" -> {Protected, ReadProtected}, "FullName" -> 
      "System`FindGraphIsomorphism"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/FindIsomers",
                ButtonNote->"paclet:ref/FindIsomers"],
               "\"paclet:ref/FindIsomers\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"FindIsomers\\\", \\\"[\\\", \
StyleBox[\\\"chem\\\", \\\"TI\\\"], \\\"]\\\"}]\\) returns a list of \
molecules with the same chemical formula as \\!\\(\\*StyleBox[\\\"chem\\\", \
\\\"TI\\\"]\\).\\n\\!\\(\\*RowBox[{\\\"FindIsomers\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"chem\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"form\\\", \
\\\"TI\\\"]}], \\\"]\\\"}]\\) finds isomers of \
\\!\\(\\*StyleBox[\\\"chem\\\", \\\"TI\\\"]\\) and returns them in the given \
form.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", "paclet:ref/FindIsomers", 
                    "paclet:ref/FindIsomers", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/FindIsomers.\
html"], None}, "http://reference.wolfram.com/language/ref/FindIsomers.html", 
                    "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", 
                    RowBox[{"Protected", ",", "ReadProtected"}], "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`FindIsomers\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/FindIsomers",
                ButtonNote->"paclet:ref/FindIsomers"],
               "\"paclet:ref/FindIsomers\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"FindIsomers\\\", \\\"[\\\", \
StyleBox[\\\"chem\\\", \\\"TI\\\"], \\\"]\\\"}]\\) returns a list of \
molecules with the same chemical formula as \\!\\(\\*StyleBox[\\\"chem\\\", \
\\\"TI\\\"]\\).\\n\\!\\(\\*RowBox[{\\\"FindIsomers\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"chem\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"form\\\", \
\\\"TI\\\"]}], \\\"]\\\"}]\\) finds isomers of \
\\!\\(\\*StyleBox[\\\"chem\\\", \\\"TI\\\"]\\) and returns them in the given \
form.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"FindIsomers\", \"[\", StyleBox[\"chem\", \"TI\"], \
\"]\"}]\) returns a list of molecules with the same chemical formula as \
\!\(\*StyleBox[\"chem\", \"TI\"]\).\n\!\(\*RowBox[{\"FindIsomers\", \"[\", \
RowBox[{StyleBox[\"chem\", \"TI\"], \",\", StyleBox[\"form\", \"TI\"]}], \
\"]\"}]\) finds isomers of \!\(\*StyleBox[\"chem\", \"TI\"]\) and returns \
them in the given form.", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/FindIsomers", "Web" -> 
        "http://reference.wolfram.com/language/ref/FindIsomers.html"|>, 
      "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, "Options" -> None, 
      "Attributes" -> {Protected, ReadProtected}, "FullName" -> 
      "System`FindIsomers"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/FindIsomorphicSubgraph",
                ButtonNote->"paclet:ref/FindIsomorphicSubgraph"],
               "\"paclet:ref/FindIsomorphicSubgraph\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"FindIsomorphicSubgraph\\\", \
\\\"[\\\", RowBox[{SubscriptBox[StyleBox[\\\"g\\\", \\\"TI\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"g\\\", \
\\\"TI\\\"], StyleBox[\\\"2\\\", \\\"TR\\\"]]}], \\\"]\\\"}]\\) finds a \
subgraph of \\!\\(\\*SubscriptBox[StyleBox[\\\"g\\\", \\\"TI\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]]\\) that is isomorphic to \
\\!\\(\\*SubscriptBox[StyleBox[\\\"g\\\", \\\"TI\\\"], StyleBox[\\\"2\\\", \\\
\"TR\\\"]]\\).\\n\\!\\(\\*RowBox[{\\\"FindIsomorphicSubgraph\\\", \\\"[\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"g\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"g\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"n\\\", \
\\\"TI\\\"]}], \\\"]\\\"}]\\) finds at most \\!\\(\\*StyleBox[\\\"n\\\", \
\\\"TI\\\"]\\) subgraphs.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", 
                    "paclet:ref/FindIsomorphicSubgraph", 
                    "paclet:ref/FindIsomorphicSubgraph", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/\
FindIsomorphicSubgraph.html"], None}, 
                    "http://reference.wolfram.com/language/ref/\
FindIsomorphicSubgraph.html", "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", 
                    RowBox[{"Protected", ",", "ReadProtected"}], "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`FindIsomorphicSubgraph\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/FindIsomorphicSubgraph",
                ButtonNote->"paclet:ref/FindIsomorphicSubgraph"],
               "\"paclet:ref/FindIsomorphicSubgraph\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"FindIsomorphicSubgraph\\\", \
\\\"[\\\", RowBox[{SubscriptBox[StyleBox[\\\"g\\\", \\\"TI\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"g\\\", \
\\\"TI\\\"], StyleBox[\\\"2\\\", \\\"TR\\\"]]}], \\\"]\\\"}]\\) finds a \
subgraph of \\!\\(\\*SubscriptBox[StyleBox[\\\"g\\\", \\\"TI\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]]\\) that is isomorphic to \
\\!\\(\\*SubscriptBox[StyleBox[\\\"g\\\", \\\"TI\\\"], StyleBox[\\\"2\\\", \\\
\"TR\\\"]]\\).\\n\\!\\(\\*RowBox[{\\\"FindIsomorphicSubgraph\\\", \\\"[\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"g\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"g\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"n\\\", \
\\\"TI\\\"]}], \\\"]\\\"}]\\) finds at most \\!\\(\\*StyleBox[\\\"n\\\", \
\\\"TI\\\"]\\) subgraphs.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"FindIsomorphicSubgraph\", \"[\", \
RowBox[{SubscriptBox[StyleBox[\"g\", \"TI\"], StyleBox[\"1\", \"TR\"]], \
\",\", SubscriptBox[StyleBox[\"g\", \"TI\"], StyleBox[\"2\", \"TR\"]]}], \
\"]\"}]\) finds a subgraph of \!\(\*SubscriptBox[StyleBox[\"g\", \"TI\"], \
StyleBox[\"1\", \"TR\"]]\) that is isomorphic to \!\(\*SubscriptBox[StyleBox[\
\"g\", \"TI\"], StyleBox[\"2\", \"TR\"]]\).\n\
\!\(\*RowBox[{\"FindIsomorphicSubgraph\", \"[\", \
RowBox[{SubscriptBox[StyleBox[\"g\", \"TI\"], StyleBox[\"1\", \"TR\"]], \
\",\", SubscriptBox[StyleBox[\"g\", \"TI\"], StyleBox[\"2\", \"TR\"]], \",\", \
StyleBox[\"n\", \"TI\"]}], \"]\"}]\) finds at most \!\(\*StyleBox[\"n\", \"TI\
\"]\) subgraphs.", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/FindIsomorphicSubgraph", "Web" -> 
        "http://reference.wolfram.com/language/ref/FindIsomorphicSubgraph.\
html"|>, "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, "Options" -> None, 
      "Attributes" -> {Protected, ReadProtected}, "FullName" -> 
      "System`FindIsomorphicSubgraph"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/FindSubgraphIsomorphism",
                ButtonNote->"paclet:ref/FindSubgraphIsomorphism"],
               "\"paclet:ref/FindSubgraphIsomorphism\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"FindSubgraphIsomorphism\\\", \
\\\"[\\\", RowBox[{SubscriptBox[StyleBox[\\\"g\\\", \\\"TI\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"g\\\", \
\\\"TI\\\"], StyleBox[\\\"2\\\", \\\"TR\\\"]]}], \\\"]\\\"}]\\) finds a \
subgraph isomorphism that maps the graph \\!\\(\\*SubscriptBox[StyleBox[\\\"g\
\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \\\"TR\\\"]]\\) to a subgraph of \
\\!\\(\\*SubscriptBox[StyleBox[\\\"g\\\", \\\"TI\\\"], StyleBox[\\\"2\\\", \\\
\"TR\\\"]]\\) by renaming \
vertices.\\n\\!\\(\\*RowBox[{\\\"FindSubgraphIsomorphism\\\", \\\"[\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"g\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"g\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"n\\\", \
\\\"TI\\\"]}], \\\"]\\\"}]\\) finds at most \\!\\(\\*StyleBox[\\\"n\\\", \
\\\"TI\\\"]\\) subgraph isomorphisms.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", 
                    "paclet:ref/FindSubgraphIsomorphism", 
                    "paclet:ref/FindSubgraphIsomorphism", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/\
FindSubgraphIsomorphism.html"], None}, 
                    "http://reference.wolfram.com/language/ref/\
FindSubgraphIsomorphism.html", "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", 
                    RowBox[{"Protected", ",", "ReadProtected"}], "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`FindSubgraphIsomorphism\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/FindSubgraphIsomorphism",
                ButtonNote->"paclet:ref/FindSubgraphIsomorphism"],
               "\"paclet:ref/FindSubgraphIsomorphism\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"FindSubgraphIsomorphism\\\", \
\\\"[\\\", RowBox[{SubscriptBox[StyleBox[\\\"g\\\", \\\"TI\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"g\\\", \
\\\"TI\\\"], StyleBox[\\\"2\\\", \\\"TR\\\"]]}], \\\"]\\\"}]\\) finds a \
subgraph isomorphism that maps the graph \\!\\(\\*SubscriptBox[StyleBox[\\\"g\
\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \\\"TR\\\"]]\\) to a subgraph of \
\\!\\(\\*SubscriptBox[StyleBox[\\\"g\\\", \\\"TI\\\"], StyleBox[\\\"2\\\", \\\
\"TR\\\"]]\\) by renaming \
vertices.\\n\\!\\(\\*RowBox[{\\\"FindSubgraphIsomorphism\\\", \\\"[\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"g\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"g\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"n\\\", \
\\\"TI\\\"]}], \\\"]\\\"}]\\) finds at most \\!\\(\\*StyleBox[\\\"n\\\", \
\\\"TI\\\"]\\) subgraph isomorphisms.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"FindSubgraphIsomorphism\", \"[\", \
RowBox[{SubscriptBox[StyleBox[\"g\", \"TI\"], StyleBox[\"1\", \"TR\"]], \
\",\", SubscriptBox[StyleBox[\"g\", \"TI\"], StyleBox[\"2\", \"TR\"]]}], \
\"]\"}]\) finds a subgraph isomorphism that maps the graph \
\!\(\*SubscriptBox[StyleBox[\"g\", \"TI\"], StyleBox[\"1\", \"TR\"]]\) to a \
subgraph of \!\(\*SubscriptBox[StyleBox[\"g\", \"TI\"], StyleBox[\"2\", \
\"TR\"]]\) by renaming vertices.\n\!\(\*RowBox[{\"FindSubgraphIsomorphism\", \
\"[\", RowBox[{SubscriptBox[StyleBox[\"g\", \"TI\"], StyleBox[\"1\", \
\"TR\"]], \",\", SubscriptBox[StyleBox[\"g\", \"TI\"], StyleBox[\"2\", \
\"TR\"]], \",\", StyleBox[\"n\", \"TI\"]}], \"]\"}]\) finds at most \
\!\(\*StyleBox[\"n\", \"TI\"]\) subgraph isomorphisms.", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/FindSubgraphIsomorphism", "Web" -> 
        "http://reference.wolfram.com/language/ref/FindSubgraphIsomorphism.\
html"|>, "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, "Options" -> None, 
      "Attributes" -> {Protected, ReadProtected}, "FullName" -> 
      "System`FindSubgraphIsomorphism"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/IsomorphicGraphQ",
                ButtonNote->"paclet:ref/IsomorphicGraphQ"],
               "\"paclet:ref/IsomorphicGraphQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"IsomorphicGraphQ\\\", \
\\\"[\\\", RowBox[{SubscriptBox[StyleBox[\\\"g\\\", \\\"TI\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"g\\\", \
\\\"TI\\\"], StyleBox[\\\"2\\\", \\\"TR\\\"]]}], \\\"]\\\"}]\\) yields True \
if the graphs \\!\\(\\*SubscriptBox[StyleBox[\\\"g\\\", \\\"TI\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]]\\) and \
\\!\\(\\*SubscriptBox[StyleBox[\\\"g\\\", \\\"TI\\\"], StyleBox[\\\"2\\\", \\\
\"TR\\\"]]\\) are isomorphic, and False otherwise.\"\>", 
               "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", 
                    "paclet:ref/IsomorphicGraphQ", 
                    "paclet:ref/IsomorphicGraphQ", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/\
IsomorphicGraphQ.html"], None}, 
                    "http://reference.wolfram.com/language/ref/\
IsomorphicGraphQ.html", "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", 
                    RowBox[{"Protected", ",", "ReadProtected"}], "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`IsomorphicGraphQ\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/IsomorphicGraphQ",
                ButtonNote->"paclet:ref/IsomorphicGraphQ"],
               "\"paclet:ref/IsomorphicGraphQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"IsomorphicGraphQ\\\", \
\\\"[\\\", RowBox[{SubscriptBox[StyleBox[\\\"g\\\", \\\"TI\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"g\\\", \
\\\"TI\\\"], StyleBox[\\\"2\\\", \\\"TR\\\"]]}], \\\"]\\\"}]\\) yields True \
if the graphs \\!\\(\\*SubscriptBox[StyleBox[\\\"g\\\", \\\"TI\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]]\\) and \
\\!\\(\\*SubscriptBox[StyleBox[\\\"g\\\", \\\"TI\\\"], StyleBox[\\\"2\\\", \\\
\"TR\\\"]]\\) are isomorphic, and False otherwise.\"\>", 
               "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"IsomorphicGraphQ\", \"[\", \
RowBox[{SubscriptBox[StyleBox[\"g\", \"TI\"], StyleBox[\"1\", \"TR\"]], \
\",\", SubscriptBox[StyleBox[\"g\", \"TI\"], StyleBox[\"2\", \"TR\"]]}], \
\"]\"}]\) yields True if the graphs \!\(\*SubscriptBox[StyleBox[\"g\", \
\"TI\"], StyleBox[\"1\", \"TR\"]]\) and \!\(\*SubscriptBox[StyleBox[\"g\", \
\"TI\"], StyleBox[\"2\", \"TR\"]]\) are isomorphic, and False otherwise.", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/IsomorphicGraphQ", "Web" -> 
        "http://reference.wolfram.com/language/ref/IsomorphicGraphQ.html"|>, 
      "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, "Options" -> None, 
      "Attributes" -> {Protected, ReadProtected}, "FullName" -> 
      "System`IsomorphicGraphQ"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/IsomorphicSubgraphQ",
                ButtonNote->"paclet:ref/IsomorphicSubgraphQ"],
               "\"paclet:ref/IsomorphicSubgraphQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"IsomorphicSubgraphQ\\\", \
\\\"[\\\", RowBox[{SubscriptBox[StyleBox[\\\"g\\\", \\\"TI\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"g\\\", \
\\\"TI\\\"], StyleBox[\\\"2\\\", \\\"TR\\\"]]}], \\\"]\\\"}]\\) yields True \
if the graph \\!\\(\\*SubscriptBox[StyleBox[\\\"g\\\", \\\"TI\\\"], StyleBox[\
\\\"1\\\", \\\"TR\\\"]]\\) is isomorphic to a subgraph of the graph \
\\!\\(\\*SubscriptBox[StyleBox[\\\"g\\\", \\\"TI\\\"], StyleBox[\\\"2\\\", \\\
\"TR\\\"]]\\).\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", 
                    "paclet:ref/IsomorphicSubgraphQ", 
                    "paclet:ref/IsomorphicSubgraphQ", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/\
IsomorphicSubgraphQ.html"], None}, 
                    "http://reference.wolfram.com/language/ref/\
IsomorphicSubgraphQ.html", "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", 
                    RowBox[{"Protected", ",", "ReadProtected"}], "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`IsomorphicSubgraphQ\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/IsomorphicSubgraphQ",
                ButtonNote->"paclet:ref/IsomorphicSubgraphQ"],
               "\"paclet:ref/IsomorphicSubgraphQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"IsomorphicSubgraphQ\\\", \
\\\"[\\\", RowBox[{SubscriptBox[StyleBox[\\\"g\\\", \\\"TI\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"g\\\", \
\\\"TI\\\"], StyleBox[\\\"2\\\", \\\"TR\\\"]]}], \\\"]\\\"}]\\) yields True \
if the graph \\!\\(\\*SubscriptBox[StyleBox[\\\"g\\\", \\\"TI\\\"], StyleBox[\
\\\"1\\\", \\\"TR\\\"]]\\) is isomorphic to a subgraph of the graph \
\\!\\(\\*SubscriptBox[StyleBox[\\\"g\\\", \\\"TI\\\"], StyleBox[\\\"2\\\", \\\
\"TR\\\"]]\\).\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"IsomorphicSubgraphQ\", \"[\", \
RowBox[{SubscriptBox[StyleBox[\"g\", \"TI\"], StyleBox[\"1\", \"TR\"]], \
\",\", SubscriptBox[StyleBox[\"g\", \"TI\"], StyleBox[\"2\", \"TR\"]]}], \
\"]\"}]\) yields True if the graph \!\(\*SubscriptBox[StyleBox[\"g\", \
\"TI\"], StyleBox[\"1\", \"TR\"]]\) is isomorphic to a subgraph of the graph \
\!\(\*SubscriptBox[StyleBox[\"g\", \"TI\"], StyleBox[\"2\", \"TR\"]]\).", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/IsomorphicSubgraphQ", "Web" -> 
        "http://reference.wolfram.com/language/ref/IsomorphicSubgraphQ.html"|>\
, "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, "SubValues" -> 
      None, "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> 
      None, "Options" -> None, "Attributes" -> {Protected, ReadProtected}, 
      "FullName" -> "System`IsomorphicSubgraphQ"|>, True]]}], "}"}]], "Output",
 CellChangeTimes->{3.877274289505316*^9},
 CellLabel->"Out[9]=",ExpressionUUID->"1a8c2dc9-e46e-4dba-8237-f2e211f6d507"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Select", "[", 
   RowBox[{
    RowBox[{"IsomorphicGraphQ", "[", 
     RowBox[{
      RowBox[{"CompleteGraph", "[", "#", "]"}], ",", 
      RowBox[{"PathGraph", "[", 
       RowBox[{"Range", "[", "#", "]"}], "]"}]}], "]"}], "&"}], "]"}], "[", 
  RowBox[{"Range", "[", "10", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.877274303564019*^9, 3.877274320418649*^9}},
 CellLabel->"In[10]:=",ExpressionUUID->"42ce2d0c-9e75-4309-9e36-2a1a9de9cdf5"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "2"}], "}"}]], "Output",
 CellChangeTimes->{3.8772743207154894`*^9},
 CellLabel->"Out[10]=",ExpressionUUID->"53fa4aca-a6aa-47ec-9840-b50f5450581e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Select", "[", 
   RowBox[{
    RowBox[{"IsomorphicGraphQ", "[", 
     RowBox[{
      RowBox[{"CompleteGraph", "[", "#", "]"}], ",", 
      RowBox[{"CycleGraph", "[", "#", "]"}]}], "]"}], "&"}], "]"}], "[", 
  RowBox[{"Range", "[", "10", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.877274303564019*^9, 3.877274330891815*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"6252ebcd-9cc8-4c3e-a834-d1fc4d4f6881"],

Cell[BoxData[
 RowBox[{"{", "3", "}"}]], "Output",
 CellChangeTimes->{3.8772743311106453`*^9},
 CellLabel->"Out[11]=",ExpressionUUID->"eeaa6233-e9fa-4e19-be20-588d31a66dc4"]
}, Open  ]],

Cell["\<\
Donald Knuth lists 0 as an answer as well in addition to 3, but I don\
\[CloseCurlyQuote]t think the 0 graph exists or makes sense.\
\>", "Text",
 CellChangeTimes->{{3.877275807910864*^9, 
  3.8772758250092363`*^9}},ExpressionUUID->"e333f069-bd4f-468e-a05d-\
f5f4ffb5ddc9"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Exercise 43", "Section",
 CellChangeTimes->{{3.877275830845109*^9, 
  3.8772758351894455`*^9}},ExpressionUUID->"938282ed-1f4e-4651-ae92-\
d9e0412a1a09"],

Cell["\<\
Are any of the following graphs the same as the Petersen graph?\
\>", "Text",
 CellChangeTimes->{{3.8772758372509813`*^9, 
  3.877275844998804*^9}},ExpressionUUID->"820b0c65-ea86-4609-97e2-\
2dcd236a42f3"],

Cell["\<\
I have a hard copy edition of the Art of Computer Programming that I am using \
to answer this exercise.\
\>", "Text",
 CellChangeTimes->{{3.8772758488362427`*^9, 
  3.8772758662677903`*^9}},ExpressionUUID->"484a6962-18fa-415f-8235-\
48e8737599e9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GraphData", "[", "\"\<PetersenGraph\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.877274344995186*^9, 3.877274348026516*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"ae69387c-831a-493e-b651-bb03f11a6aaf"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10}, {Null, 
       SparseArray[
       Automatic, {10, 10}, 0, {
        1, {{0, 3, 6, 9, 12, 15, 18, 21, 24, 27, 30}, {{3}, {4}, {6}, {4}, {
          5}, {7}, {1}, {5}, {8}, {1}, {2}, {9}, {2}, {3}, {10}, {1}, {7}, {
          10}, {2}, {6}, {8}, {3}, {7}, {9}, {4}, {8}, {10}, {5}, {6}, {9}}}, 
         Pattern}]}, {
      VertexCoordinates -> {{0., 1.}, {-0.951, 0.309}, {-0.588, -0.809}, {
        0.588, -0.809}, {0.951, 0.309}, {0., 2.}, {-1.902, 
        0.618}, {-1.176, -1.618}, {1.176, -1.618}, {1.902, 0.618}}}]]}, 
    TagBox[
     GraphicsGroupBox[
      GraphicsComplexBox[{{0., 1.}, {-0.951, 0.309}, {-0.588, -0.809}, {
       0.588, -0.809}, {0.951, 0.309}, {0., 2.}, {-1.902, 
       0.618}, {-1.176, -1.618}, {1.176, -1.618}, {1.902, 0.618}}, {
        {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
         ArrowBox[{{1, 3}, {1, 4}, {1, 6}, {2, 4}, {2, 5}, {2, 7}, {3, 5}, {3,
           8}, {4, 9}, {5, 10}, {6, 7}, {6, 10}, {7, 8}, {8, 9}, {9, 10}}, 
          0.03574040219378426]}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         DiskBox[1, 0.03574040219378426], DiskBox[2, 0.03574040219378426], 
         DiskBox[3, 0.03574040219378426], DiskBox[4, 0.03574040219378426], 
         DiskBox[5, 0.03574040219378426], DiskBox[6, 0.03574040219378426], 
         DiskBox[7, 0.03574040219378426], DiskBox[8, 0.03574040219378426], 
         DiskBox[9, 0.03574040219378426], DiskBox[10, 0.03574040219378426]}}]],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->"NetworkGraphics",
  FormatType->TraditionalForm,
  FrameTicks->None]], "Output",
 CellChangeTimes->{3.877274373343834*^9},
 CellLabel->"Out[12]=",ExpressionUUID->"b8c4ae9e-920e-47eb-a8dd-8639ff565ada"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graph", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"1", "<->", "2"}], ",", 
    RowBox[{"2", "<->", "3"}], ",", 
    RowBox[{"3", "<->", "4"}], ",", 
    RowBox[{"4", "<->", "5"}], ",", 
    RowBox[{"5", "<->", "6"}], ",", 
    RowBox[{"6", "<->", "7"}], ",", 
    RowBox[{"7", "<->", "8"}], ",", 
    RowBox[{"8", "<->", "9"}], ",", 
    RowBox[{"1", "<->", "5"}], ",", 
    RowBox[{"9", "<->", "1"}], ",", 
    RowBox[{"2", "<->", "7"}], ",", 
    RowBox[{"3", "<->", "10"}], ",", 
    RowBox[{"9", "<->", "10"}], ",", 
    RowBox[{"6", "<->", "10"}], ",", 
    RowBox[{"4", "<->", "8"}]}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.8772746868569603`*^9, 3.8772748474773893`*^9}},
 CellLabel->"In[21]:=",ExpressionUUID->"0ba47069-28dd-4b7f-a0ea-9192e9c48baa"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10}, {
      Null, {{1, 2}, {2, 3}, {3, 4}, {4, 5}, {5, 6}, {6, 7}, {7, 8}, {8, 9}, {
       1, 5}, {9, 1}, {2, 7}, {3, 10}, {9, 10}, {6, 10}, {4, 8}}}]]}, 
    TagBox[
     GraphicsGroupBox[
      GraphicsComplexBox[{{0., 1.0714731189507671`}, {0.3706958880924952, 
       1.7141375644230792`}, {1.6082208551636819`, 1.71368843968694}, {
       1.9784489811569967`, 1.0704879817334916`}, {0.9894208183159837, 
       1.587319584799415}, {0.9901647331452087, 0.9297319681375992}, {
       0.42041274999437916`, 0.6004652212908816}, {1.360278663808465, 0.}, {
       0.6179234211635735, 0.0011966682806978657`}, {1.5586409833626957`, 
       0.5998675723414539}}, {
        {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
         ArrowBox[{{1, 2}, {1, 5}, {1, 9}, {2, 3}, {2, 7}, {3, 4}, {3, 10}, {
          4, 5}, {4, 8}, {5, 6}, {6, 7}, {6, 10}, {7, 8}, {8, 9}, {9, 10}}, 
          0.022436361377092706`]}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         DiskBox[1, 0.022436361377092706], DiskBox[2, 0.022436361377092706], 
         DiskBox[3, 0.022436361377092706], DiskBox[4, 0.022436361377092706], 
         DiskBox[5, 0.022436361377092706], DiskBox[6, 0.022436361377092706], 
         DiskBox[7, 0.022436361377092706], DiskBox[8, 0.022436361377092706], 
         DiskBox[9, 0.022436361377092706], 
         DiskBox[10, 0.022436361377092706]}}]],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->"NetworkGraphics",
  FormatType->TraditionalForm,
  FrameTicks->None]], "Output",
 CellChangeTimes->{{3.8772747411104736`*^9, 3.8772748478211737`*^9}},
 CellLabel->"Out[21]=",ExpressionUUID->"17a44d1b-43c2-4d87-a606-ef93daeb5d8c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"IsomorphicGraphQ", "[", 
  RowBox[{
   RowBox[{"Graph", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"1", "<->", "2"}], ",", 
      RowBox[{"2", "<->", "3"}], ",", 
      RowBox[{"3", "<->", "4"}], ",", 
      RowBox[{"4", "<->", "5"}], ",", 
      RowBox[{"5", "<->", "6"}], ",", 
      RowBox[{"6", "<->", "7"}], ",", 
      RowBox[{"7", "<->", "8"}], ",", 
      RowBox[{"8", "<->", "9"}], ",", 
      RowBox[{"1", "<->", "5"}], ",", 
      RowBox[{"9", "<->", "1"}], ",", 
      RowBox[{"2", "<->", "7"}], ",", 
      RowBox[{"3", "<->", "10"}], ",", 
      RowBox[{"9", "<->", "10"}], ",", 
      RowBox[{"6", "<->", "10"}], ",", 
      RowBox[{"4", "<->", "8"}]}], "}"}], "]"}], ",", 
   RowBox[{"GraphData", "[", "\"\<PetersenGraph\>\"", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.877274855622608*^9, 3.8772748624784994`*^9}},
 CellLabel->"In[23]:=",ExpressionUUID->"564178b2-11a3-477b-aa16-af52dbf8c1e7"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.8772748627441235`*^9},
 CellLabel->"Out[23]=",ExpressionUUID->"5d52baf7-fc6a-425e-8b7e-9a703c0055a1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindGraphIsomorphism", "[", 
  RowBox[{
   RowBox[{"Graph", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"1", "<->", "2"}], ",", 
      RowBox[{"2", "<->", "3"}], ",", 
      RowBox[{"3", "<->", "4"}], ",", 
      RowBox[{"4", "<->", "5"}], ",", 
      RowBox[{"5", "<->", "6"}], ",", 
      RowBox[{"6", "<->", "7"}], ",", 
      RowBox[{"7", "<->", "8"}], ",", 
      RowBox[{"8", "<->", "9"}], ",", 
      RowBox[{"1", "<->", "5"}], ",", 
      RowBox[{"9", "<->", "1"}], ",", 
      RowBox[{"2", "<->", "7"}], ",", 
      RowBox[{"3", "<->", "10"}], ",", 
      RowBox[{"9", "<->", "10"}], ",", 
      RowBox[{"6", "<->", "10"}], ",", 
      RowBox[{"4", "<->", "8"}]}], "}"}], "]"}], ",", 
   RowBox[{"GraphData", "[", "\"\<PetersenGraph\>\"", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8772743553576913`*^9, 3.8772743618783526`*^9}, {
  3.8772746710312505`*^9, 3.8772746725156255`*^9}, {3.8772749072379513`*^9, 
  3.8772749125815153`*^9}},
 CellLabel->"In[24]:=",ExpressionUUID->"8f2327e6-cc7b-4d2a-8bdd-f327feae0186"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\[LeftAssociation]", 
   RowBox[{
    RowBox[{"1", "\[Rule]", "1"}], ",", 
    RowBox[{"2", "\[Rule]", "4"}], ",", 
    RowBox[{"3", "\[Rule]", "2"}], ",", 
    RowBox[{"4", "\[Rule]", "5"}], ",", 
    RowBox[{"5", "\[Rule]", "3"}], ",", 
    RowBox[{"6", "\[Rule]", "8"}], ",", 
    RowBox[{"7", "\[Rule]", "9"}], ",", 
    RowBox[{"8", "\[Rule]", "10"}], ",", 
    RowBox[{"9", "\[Rule]", "6"}], ",", 
    RowBox[{"10", "\[Rule]", "7"}]}], "\[RightAssociation]"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.8772749128626776`*^9},
 CellLabel->"Out[24]=",ExpressionUUID->"474dc61a-a62b-4976-a34b-01345dde26ff"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GraphData", "[", 
  RowBox[{"\"\<PetersenGraph\>\"", ",", "\"\<Embeddings\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8772749180359607`*^9, 3.877274923864066*^9}},
 CellLabel->"In[26]:=",ExpressionUUID->"ba127e6f-8c6a-4047-b352-6a213255dd03"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0.`", ",", "1.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.951`"}], ",", "0.309`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.588`"}], ",", 
       RowBox[{"-", "0.809`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.588`", ",", 
       RowBox[{"-", "0.809`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.951`", ",", "0.309`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.`", ",", "2.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1.902`"}], ",", "0.618`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1.176`"}], ",", 
       RowBox[{"-", "1.618`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1.176`", ",", 
       RowBox[{"-", "1.618`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1.902`", ",", "0.618`"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0.323`", ",", "0.975`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.037`", ",", "0.789`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.037`", ",", "0.186`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.323`", ",", "0.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.5`", ",", "0.487`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1.287`", ",", "0.975`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1.`", ",", "0.789`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1.`", ",", "0.186`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1.287`", ",", "0.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1.464`", ",", "0.487`"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0.4483544303797468`", ",", 
       RowBox[{"-", "0.269957805907173`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.6048101265822785`", ",", 
       RowBox[{"-", "0.3389873417721519`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.5863291139240506`", ",", 
       RowBox[{"-", "0.5090295358649789`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.5863291139240506`", ",", 
       RowBox[{"-", "0.030911392405063295`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.8624472573839662`", ",", 
       RowBox[{"-", "0.5090295358649789`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.7243037974683544`", ",", 
       RowBox[{"-", "0.13198312236286922`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.7243037974683544`", ",", 
       RowBox[{"-", "0.269957805907173`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.8437974683544304`", ",", 
       RowBox[{"-", "0.3389873417721519`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.8624472573839662`", ",", 
       RowBox[{"-", "0.030911392405063295`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1.`", ",", 
       RowBox[{"-", "0.269957805907173`"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0.4483544303797468`", ",", 
       RowBox[{"-", "0.269957805907173`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.6064978902953587`", ",", 
       RowBox[{"-", "0.14565400843881857`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.529113924050633`", ",", 
       RowBox[{"-", "0.07479324894514768`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.529113924050633`", ",", 
       RowBox[{"-", "0.46514767932489454`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.8421097046413502`", ",", 
       RowBox[{"-", "0.14565400843881857`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1.`", ",", 
       RowBox[{"-", "0.269957805907173`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.919831223628692`", ",", 
       RowBox[{"-", "0.07479324894514768`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.7243037974683544`", ",", "0.006065822784810127`"}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"0.7243037974683544`", ",", 
       RowBox[{"-", "0.5459915611814347`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.919831223628692`", ",", 
       RowBox[{"-", "0.46514767932489454`"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0.454406779661017`", ",", 
       RowBox[{"-", "0.22296610169491526`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.6325423728813558`", ",", 
       RowBox[{"-", "0.5316101694915254`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.5492372881355932`", ",", 
       RowBox[{"-", "0.05873728813559322`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.4873728813559322`", ",", 
       RowBox[{"-", "0.4096610169491525`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.8221186440677966`", ",", 
       RowBox[{"-", "0.5316101694915254`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1.`", ",", 
       RowBox[{"-", "0.22296610169491526`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.9059322033898305`", ",", 
       RowBox[{"-", "0.05873728813559322`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.7273728813559321`", ",", "0.006091525423728813`"}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"0.7273728813559321`", ",", 
       RowBox[{"-", "0.2711016949152542`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.9677966101694915`", ",", 
       RowBox[{"-", "0.4096610169491525`"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0.6022515527950311`", ",", 
       RowBox[{"-", "0.5418478260869565`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.7347049689440993`", ",", 
       RowBox[{"-", "0.3123447204968944`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.6684782608695652`", ",", 
       RowBox[{"-", "0.6565993788819876`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.6684782608695652`", ",", 
       RowBox[{"-", "0.42709627329192545`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.8672360248447204`", ",", 
       RowBox[{"-", "0.3123447204968944`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.9999999999999999`", ",", 
       RowBox[{"-", "0.5418478260869565`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.9332298136645962`", ",", 
       RowBox[{"-", "0.6565993788819876`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.8012422360248447`", ",", 
       RowBox[{"-", "0.6565993788819876`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.8012422360248447`", ",", 
       RowBox[{"-", "0.5035714285714286`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.9332298136645962`", ",", 
       RowBox[{"-", "0.42709627329192545`"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "0"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"2", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"6", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"6", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"5", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"6", ",", "6"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "6"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "6"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "5"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       SqrtBox[
        FractionBox["2", 
         RowBox[{"5", "+", 
          SqrtBox["5"]}]]], ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        FractionBox["1", "2"], " ", 
        SqrtBox[
         RowBox[{"1", "-", 
          FractionBox["2", 
           SqrtBox["5"]]}]]}], ",", 
       FractionBox["1", "2"]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         FractionBox["1", "2"]}], " ", 
        SqrtBox[
         RowBox[{
          FractionBox["1", "10"], " ", 
          RowBox[{"(", 
           RowBox[{"5", "+", 
            SqrtBox["5"]}], ")"}]}]]}], ",", 
       RowBox[{
        FractionBox["1", "4"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          SqrtBox["5"]}], ")"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         FractionBox["1", "2"]}], " ", 
        SqrtBox[
         RowBox[{
          FractionBox["1", "10"], " ", 
          RowBox[{"(", 
           RowBox[{"5", "+", 
            SqrtBox["5"]}], ")"}]}]]}], ",", 
       RowBox[{
        FractionBox["1", "4"], " ", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          SqrtBox["5"]}], ")"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        FractionBox["1", "2"], " ", 
        SqrtBox[
         RowBox[{"1", "-", 
          FractionBox["2", 
           SqrtBox["5"]]}]]}], ",", 
       RowBox[{"-", 
        FractionBox["1", "2"]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", 
       SqrtBox[
        RowBox[{
         FractionBox["1", "10"], " ", 
         RowBox[{"(", 
          RowBox[{"5", "+", 
           SqrtBox["5"]}], ")"}]}]]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        FractionBox["1", "4"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "-", 
          SqrtBox["5"]}], ")"}]}], ",", 
       RowBox[{
        FractionBox["1", "2"], " ", 
        SqrtBox[
         RowBox[{
          FractionBox["1", "10"], " ", 
          RowBox[{"(", 
           RowBox[{"5", "-", 
            SqrtBox["5"]}], ")"}]}]]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "2"]}], ",", 
       RowBox[{
        RowBox[{"-", 
         FractionBox["1", "2"]}], " ", 
        SqrtBox[
         RowBox[{"1", "+", 
          FractionBox["2", 
           SqrtBox["5"]]}]]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["1", "2"], ",", 
       RowBox[{
        RowBox[{"-", 
         FractionBox["1", "2"]}], " ", 
        SqrtBox[
         RowBox[{"1", "+", 
          FractionBox["2", 
           SqrtBox["5"]]}]]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        FractionBox["1", "4"], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          SqrtBox["5"]}], ")"}]}], ",", 
       RowBox[{
        FractionBox["1", "2"], " ", 
        SqrtBox[
         RowBox[{
          FractionBox["1", "10"], " ", 
          RowBox[{"(", 
           RowBox[{"5", "-", 
            SqrtBox["5"]}], ")"}]}]]}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0.5353024564670038`", ",", "0.9588896176713285`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.3281636798341197`", ",", "0.6772739775299917`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.5353024564670038`", ",", "0.4701352008971077`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.07060491293400757`", ",", "0.6212047479000488`"}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"0.3281636798341197`", ",", "0.2629964242642236`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1.`", ",", "0.6212047479000488`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.7424412330998879`", ",", "0.6772739775299917`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.7424412330998879`", ",", "0.2629964242642236`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.24791181420490352`", ",", "0.07459649632074725`"}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"0.8226930987291041`", ",", "0.07459649632074725`"}], "}"}]}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       SqrtBox[
        RowBox[{
         FractionBox["5", "8"], "-", 
         FractionBox[
          SqrtBox["5"], "8"]}]], ",", 
       RowBox[{
        FractionBox["1", "4"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "-", 
          SqrtBox["5"]}], ")"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       SqrtBox[
        RowBox[{
         FractionBox["1", "2"], " ", 
         RowBox[{"(", 
          RowBox[{"5", "-", 
           SqrtBox["5"]}], ")"}]}]], ",", 
       RowBox[{
        FractionBox["1", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "-", 
          SqrtBox["5"]}], ")"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       SqrtBox[
        RowBox[{
         FractionBox["5", "8"], "+", 
         FractionBox[
          SqrtBox["5"], "8"]}]], ",", 
       RowBox[{
        FractionBox["1", "4"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          SqrtBox["5"]}], ")"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         FractionBox["1", "2"]}], " ", 
        SqrtBox[
         RowBox[{
          FractionBox["1", "2"], " ", 
          RowBox[{"(", 
           RowBox[{"5", "-", 
            SqrtBox["5"]}], ")"}]}]]}], ",", 
       RowBox[{
        FractionBox["1", "4"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "-", 
          SqrtBox["5"]}], ")"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         FractionBox["1", "2"]}], " ", 
        SqrtBox[
         RowBox[{
          FractionBox["1", "2"], " ", 
          RowBox[{"(", 
           RowBox[{"5", "+", 
            SqrtBox["5"]}], ")"}]}]]}], ",", 
       RowBox[{
        FractionBox["1", "4"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          SqrtBox["5"]}], ")"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", 
        SqrtBox[
         RowBox[{
          FractionBox["1", "2"], " ", 
          RowBox[{"(", 
           RowBox[{"5", "+", 
            SqrtBox["5"]}], ")"}]}]]}], ",", 
       RowBox[{
        FractionBox["1", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          SqrtBox["5"]}], ")"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       SqrtBox[
        RowBox[{
         FractionBox["1", "2"], " ", 
         RowBox[{"(", 
          RowBox[{"5", "+", 
           SqrtBox["5"]}], ")"}]}]], ",", 
       RowBox[{
        FractionBox["1", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          SqrtBox["5"]}], ")"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", 
        SqrtBox[
         RowBox[{
          FractionBox["1", "2"], " ", 
          RowBox[{"(", 
           RowBox[{"5", "-", 
            SqrtBox["5"]}], ")"}]}]]}], ",", 
       RowBox[{
        FractionBox["1", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "-", 
          SqrtBox["5"]}], ")"}]}]}], "}"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.8772750462400465`*^9},
 CellLabel->"Out[26]=",ExpressionUUID->"3ae698b1-8bc4-4448-9258-1a6936d2a340"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "[", 
  RowBox[{"GraphData", "[", 
   RowBox[{"\"\<PetersenGraph\>\"", ",", "\"\<Embeddings\>\""}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8772750471590967`*^9, 3.8772750481746364`*^9}},
 CellLabel->"In[27]:=",ExpressionUUID->"c90720f0-425c-4ca6-a6ab-c08c27da366a"],

Cell[BoxData["11"], "Output",
 CellChangeTimes->{3.8772750484246435`*^9},
 CellLabel->"Out[27]=",ExpressionUUID->"7c10de78-8e13-481e-9928-258ca71eae9d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Graph", "[", 
    RowBox[{
     RowBox[{"GraphData", "[", "\"\<PetersenGraph\>\"", "]"}], ",", 
     RowBox[{"VertexCoordinates", "->", "#"}]}], "]"}], "&"}], "/@", 
  RowBox[{"GraphData", "[", 
   RowBox[{"\"\<PetersenGraph\>\"", ",", "\"\<Embeddings\>\""}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.8772750522216015`*^9, 3.877275082832396*^9}},
 CellLabel->"In[28]:=",ExpressionUUID->"7670efde-f0cf-4dee-b663-78a320dbfa58"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10}, {Null, 
         SparseArray[
         Automatic, {10, 10}, 0, {
          1, {{0, 3, 6, 9, 12, 15, 18, 21, 24, 27, 30}, {{3}, {4}, {6}, {4}, {
            5}, {7}, {1}, {5}, {8}, {1}, {2}, {9}, {2}, {3}, {10}, {1}, {7}, {
            10}, {2}, {6}, {8}, {3}, {7}, {9}, {4}, {8}, {10}, {5}, {6}, {
            9}}}, Pattern}]}, {
        GraphLayout -> {"Dimension" -> 2}, 
         VertexCoordinates -> {{0., 1.}, {-0.951, 0.309}, {-0.588, -0.809}, {
          0.588, -0.809}, {0.951, 0.309}, {0., 2.}, {-1.902, 
          0.618}, {-1.176, -1.618}, {1.176, -1.618}, {1.902, 0.618}}}]]}, 
      TagBox[
       GraphicsGroupBox[
        GraphicsComplexBox[{{0., 1.}, {-0.951, 0.309}, {-0.588, -0.809}, {
         0.588, -0.809}, {0.951, 0.309}, {0., 2.}, {-1.902, 
         0.618}, {-1.176, -1.618}, {1.176, -1.618}, {1.902, 0.618}}, {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
           ArrowBox[{{1, 3}, {1, 4}, {1, 6}, {2, 4}, {2, 5}, {2, 7}, {3, 5}, {
            3, 8}, {4, 9}, {5, 10}, {6, 7}, {6, 10}, {7, 8}, {8, 9}, {9, 10}},
             0.03574040219378426]}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           DiskBox[1, 0.03574040219378426], DiskBox[2, 0.03574040219378426], 
           DiskBox[3, 0.03574040219378426], DiskBox[4, 0.03574040219378426], 
           DiskBox[5, 0.03574040219378426], DiskBox[6, 0.03574040219378426], 
           DiskBox[7, 0.03574040219378426], DiskBox[8, 0.03574040219378426], 
           DiskBox[9, 0.03574040219378426], 
           DiskBox[10, 0.03574040219378426]}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->"NetworkGraphics",
    FormatType->TraditionalForm,
    FrameTicks->None], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10}, {Null, 
         SparseArray[
         Automatic, {10, 10}, 0, {
          1, {{0, 3, 6, 9, 12, 15, 18, 21, 24, 27, 30}, {{3}, {4}, {6}, {4}, {
            5}, {7}, {1}, {5}, {8}, {1}, {2}, {9}, {2}, {3}, {10}, {1}, {7}, {
            10}, {2}, {6}, {8}, {3}, {7}, {9}, {4}, {8}, {10}, {5}, {6}, {
            9}}}, Pattern}]}, {
        GraphLayout -> {"Dimension" -> 2}, 
         VertexCoordinates -> {{0.323, 0.975}, {0.037, 0.789}, {0.037, 
          0.186}, {0.323, 0.}, {0.5, 0.487}, {1.287, 0.975}, {1., 0.789}, {1.,
           0.186}, {1.287, 0.}, {1.464, 0.487}}}]]}, 
      TagBox[
       GraphicsGroupBox[
        GraphicsComplexBox[{{0.323, 0.975}, {0.037, 0.789}, {0.037, 0.186}, {
         0.323, 0.}, {0.5, 0.487}, {1.287, 0.975}, {1., 0.789}, {1., 0.186}, {
         1.287, 0.}, {1.464, 0.487}}, {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
           ArrowBox[{{1, 3}, {1, 4}, {1, 6}, {2, 4}, {2, 5}, {2, 7}, {3, 5}, {
            3, 8}, {4, 9}, {5, 10}, {6, 7}, {6, 10}, {7, 8}, {8, 9}, {9, 10}},
             0.017786077874000106`]}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           DiskBox[1, 0.017786077874000106], DiskBox[2, 0.017786077874000106],
            DiskBox[3, 0.017786077874000106], 
           DiskBox[4, 0.017786077874000106], DiskBox[5, 0.017786077874000106],
            DiskBox[6, 0.017786077874000106], 
           DiskBox[7, 0.017786077874000106], DiskBox[8, 0.017786077874000106],
            DiskBox[9, 0.017786077874000106], 
           DiskBox[10, 0.017786077874000106]}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->"NetworkGraphics",
    FormatType->TraditionalForm,
    FrameTicks->None], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10}, {Null, 
         SparseArray[
         Automatic, {10, 10}, 0, {
          1, {{0, 3, 6, 9, 12, 15, 18, 21, 24, 27, 30}, {{3}, {4}, {6}, {4}, {
            5}, {7}, {1}, {5}, {8}, {1}, {2}, {9}, {2}, {3}, {10}, {1}, {7}, {
            10}, {2}, {6}, {8}, {3}, {7}, {9}, {4}, {8}, {10}, {5}, {6}, {
            9}}}, Pattern}]}, {
        GraphLayout -> {"Dimension" -> 2}, 
         VertexCoordinates -> {{0.4483544303797468, -0.269957805907173}, {
          0.6048101265822785, -0.3389873417721519}, {
          0.5863291139240506, -0.5090295358649789}, {
          0.5863291139240506, -0.030911392405063295`}, {
          0.8624472573839662, -0.5090295358649789}, {
          0.7243037974683544, -0.13198312236286922`}, {
          0.7243037974683544, -0.269957805907173}, {
          0.8437974683544304, -0.3389873417721519}, {
          0.8624472573839662, -0.030911392405063295`}, {
          1., -0.269957805907173}}}]]}, 
      TagBox[
       GraphicsGroupBox[
        GraphicsComplexBox[{{0.4483544303797468, -0.269957805907173}, {
         0.6048101265822785, -0.3389873417721519}, {
         0.5863291139240506, -0.5090295358649789}, {
         0.5863291139240506, -0.030911392405063295`}, {
         0.8624472573839662, -0.5090295358649789}, {
         0.7243037974683544, -0.13198312236286922`}, {
         0.7243037974683544, -0.269957805907173}, {
         0.8437974683544304, -0.3389873417721519}, {
         0.8624472573839662, -0.030911392405063295`}, {
         1., -0.269957805907173}}, {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
           ArrowBox[{{1, 3}, {1, 4}, {1, 6}, {2, 4}, {2, 5}, {2, 7}, {3, 5}, {
            3, 8}, {4, 9}, {5, 10}, {6, 7}, {6, 10}, {7, 8}, {8, 9}, {9, 10}},
             0.007022448101265823]}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           DiskBox[1, 0.007022448101265823], DiskBox[2, 0.007022448101265823],
            DiskBox[3, 0.007022448101265823], 
           DiskBox[4, 0.007022448101265823], DiskBox[5, 0.007022448101265823],
            DiskBox[6, 0.007022448101265823], 
           DiskBox[7, 0.007022448101265823], DiskBox[8, 0.007022448101265823],
            DiskBox[9, 0.007022448101265823], 
           DiskBox[10, 0.007022448101265823]}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->"NetworkGraphics",
    FormatType->TraditionalForm,
    FrameTicks->None], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10}, {Null, 
         SparseArray[
         Automatic, {10, 10}, 0, {
          1, {{0, 3, 6, 9, 12, 15, 18, 21, 24, 27, 30}, {{3}, {4}, {6}, {4}, {
            5}, {7}, {1}, {5}, {8}, {1}, {2}, {9}, {2}, {3}, {10}, {1}, {7}, {
            10}, {2}, {6}, {8}, {3}, {7}, {9}, {4}, {8}, {10}, {5}, {6}, {
            9}}}, Pattern}]}, {
        GraphLayout -> {"Dimension" -> 2}, 
         VertexCoordinates -> {{0.4483544303797468, -0.269957805907173}, {
          0.6064978902953587, -0.14565400843881857`}, {
          0.529113924050633, -0.07479324894514768}, {
          0.529113924050633, -0.46514767932489454`}, {
          0.8421097046413502, -0.14565400843881857`}, {
          1., -0.269957805907173}, {
          0.919831223628692, -0.07479324894514768}, {0.7243037974683544, 
          0.006065822784810127}, {0.7243037974683544, -0.5459915611814347}, {
          0.919831223628692, -0.46514767932489454`}}}]]}, 
      TagBox[
       GraphicsGroupBox[
        GraphicsComplexBox[{{0.4483544303797468, -0.269957805907173}, {
         0.6064978902953587, -0.14565400843881857`}, {
         0.529113924050633, -0.07479324894514768}, {
         0.529113924050633, -0.46514767932489454`}, {
         0.8421097046413502, -0.14565400843881857`}, {
         1., -0.269957805907173}, {0.919831223628692, -0.07479324894514768}, {
         0.7243037974683544, 0.006065822784810127}, {
         0.7243037974683544, -0.5459915611814347}, {
         0.919831223628692, -0.46514767932489454`}}, {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
           ArrowBox[{{1, 3}, {1, 4}, {1, 6}, {2, 4}, {2, 5}, {2, 7}, {3, 5}, {
            3, 8}, {4, 9}, {5, 10}, {6, 7}, {6, 10}, {7, 8}, {8, 9}, {9, 10}},
             0.007027690497890296]}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           DiskBox[1, 0.007027690497890296], DiskBox[2, 0.007027690497890296],
            DiskBox[3, 0.007027690497890296], 
           DiskBox[4, 0.007027690497890296], DiskBox[5, 0.007027690497890296],
            DiskBox[6, 0.007027690497890296], 
           DiskBox[7, 0.007027690497890296], DiskBox[8, 0.007027690497890296],
            DiskBox[9, 0.007027690497890296], 
           DiskBox[10, 0.007027690497890296]}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->"NetworkGraphics",
    FormatType->TraditionalForm,
    FrameTicks->None], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10}, {Null, 
         SparseArray[
         Automatic, {10, 10}, 0, {
          1, {{0, 3, 6, 9, 12, 15, 18, 21, 24, 27, 30}, {{3}, {4}, {6}, {4}, {
            5}, {7}, {1}, {5}, {8}, {1}, {2}, {9}, {2}, {3}, {10}, {1}, {7}, {
            10}, {2}, {6}, {8}, {3}, {7}, {9}, {4}, {8}, {10}, {5}, {6}, {
            9}}}, Pattern}]}, {
        GraphLayout -> {"Dimension" -> 2}, 
         VertexCoordinates -> {{0.454406779661017, -0.22296610169491526`}, {
          0.6325423728813558, -0.5316101694915254}, {
          0.5492372881355932, -0.05873728813559322}, {
          0.4873728813559322, -0.4096610169491525}, {
          0.8221186440677966, -0.5316101694915254}, {
          1., -0.22296610169491526`}, {
          0.9059322033898305, -0.05873728813559322}, {0.7273728813559321, 
          0.006091525423728813}, {0.7273728813559321, -0.2711016949152542}, {
          0.9677966101694915, -0.4096610169491525}}}]]}, 
      TagBox[
       GraphicsGroupBox[
        GraphicsComplexBox[{{0.454406779661017, -0.22296610169491526`}, {
         0.6325423728813558, -0.5316101694915254}, {
         0.5492372881355932, -0.05873728813559322}, {
         0.4873728813559322, -0.4096610169491525}, {
         0.8221186440677966, -0.5316101694915254}, {
         1., -0.22296610169491526`}, {
         0.9059322033898305, -0.05873728813559322}, {0.7273728813559321, 
         0.006091525423728813}, {0.7273728813559321, -0.2711016949152542}, {
         0.9677966101694915, -0.4096610169491525}}, {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
           ArrowBox[{{1, 3}, {1, 4}, {1, 6}, {2, 4}, {2, 5}, {2, 7}, {3, 5}, {
            3, 8}, {4, 9}, {5, 10}, {6, 7}, {6, 10}, {7, 8}, {8, 9}, {9, 10}},
             0.006945401694915254]}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           DiskBox[1, 0.006945401694915254], DiskBox[2, 0.006945401694915254],
            DiskBox[3, 0.006945401694915254], 
           DiskBox[4, 0.006945401694915254], DiskBox[5, 0.006945401694915254],
            DiskBox[6, 0.006945401694915254], 
           DiskBox[7, 0.006945401694915254], DiskBox[8, 0.006945401694915254],
            DiskBox[9, 0.006945401694915254], 
           DiskBox[10, 0.006945401694915254]}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->"NetworkGraphics",
    FormatType->TraditionalForm,
    FrameTicks->None], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10}, {Null, 
         SparseArray[
         Automatic, {10, 10}, 0, {
          1, {{0, 3, 6, 9, 12, 15, 18, 21, 24, 27, 30}, {{3}, {4}, {6}, {4}, {
            5}, {7}, {1}, {5}, {8}, {1}, {2}, {9}, {2}, {3}, {10}, {1}, {7}, {
            10}, {2}, {6}, {8}, {3}, {7}, {9}, {4}, {8}, {10}, {5}, {6}, {
            9}}}, Pattern}]}, {
        GraphLayout -> {"Dimension" -> 2}, 
         VertexCoordinates -> {{0.6022515527950311, -0.5418478260869565}, {
          0.7347049689440993, -0.3123447204968944}, {
          0.6684782608695652, -0.6565993788819876}, {
          0.6684782608695652, -0.42709627329192545`}, {
          0.8672360248447204, -0.3123447204968944}, {
          0.9999999999999999, -0.5418478260869565}, {
          0.9332298136645962, -0.6565993788819876}, {
          0.8012422360248447, -0.6565993788819876}, {
          0.8012422360248447, -0.5035714285714286}, {
          0.9332298136645962, -0.42709627329192545`}}}]]}, 
      TagBox[
       GraphicsGroupBox[
        GraphicsComplexBox[{{0.6022515527950311, -0.5418478260869565}, {
         0.7347049689440993, -0.3123447204968944}, {
         0.6684782608695652, -0.6565993788819876}, {
         0.6684782608695652, -0.42709627329192545`}, {
         0.8672360248447204, -0.3123447204968944}, {
         0.9999999999999999, -0.5418478260869565}, {
         0.9332298136645962, -0.6565993788819876}, {
         0.8012422360248447, -0.6565993788819876}, {
         0.8012422360248447, -0.5035714285714286}, {
         0.9332298136645962, -0.42709627329192545`}}, {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
           ArrowBox[{{1, 3}, {1, 4}, {1, 6}, {2, 4}, {2, 5}, {2, 7}, {3, 5}, {
            3, 8}, {4, 9}, {5, 10}, {6, 7}, {6, 10}, {7, 8}, {8, 9}, {9, 10}},
             0.005063337732919253]}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           DiskBox[1, 0.005063337732919253], DiskBox[2, 0.005063337732919253],
            DiskBox[3, 0.005063337732919253], 
           DiskBox[4, 0.005063337732919253], DiskBox[5, 0.005063337732919253],
            DiskBox[6, 0.005063337732919253], 
           DiskBox[7, 0.005063337732919253], DiskBox[8, 0.005063337732919253],
            DiskBox[9, 0.005063337732919253], 
           DiskBox[10, 0.005063337732919253]}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->"NetworkGraphics",
    FormatType->TraditionalForm,
    FrameTicks->None], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10}, {Null, 
         SparseArray[
         Automatic, {10, 10}, 0, {
          1, {{0, 3, 6, 9, 12, 15, 18, 21, 24, 27, 30}, {{3}, {4}, {6}, {4}, {
            5}, {7}, {1}, {5}, {8}, {1}, {2}, {9}, {2}, {3}, {10}, {1}, {7}, {
            10}, {2}, {6}, {8}, {3}, {7}, {9}, {4}, {8}, {10}, {5}, {6}, {
            9}}}, Pattern}]}, {
        GraphLayout -> {"Dimension" -> 2}, 
         VertexCoordinates -> {{0, 0}, {1, 3}, {0, 4}, {1, 1}, {4, 4}, {2, 
          0}, {2, 2}, {3, 3}, {3, 1}, {4, 0}}}]]}, 
      TagBox[
       GraphicsGroupBox[
        GraphicsComplexBox[{{0., 0.}, {1., 3.}, {0., 4.}, {1., 1.}, {4., 
         4.}, {2., 0.}, {2., 2.}, {3., 3.}, {3., 1.}, {4., 0.}}, {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
           ArrowBox[{{1, 3}, {1, 4}, {1, 6}, {2, 4}, {2, 5}, {2, 7}, {3, 5}, {
            3, 8}, {4, 9}, {5, 10}, {6, 7}, {6, 10}, {7, 8}, {8, 9}, {9, 10}},
             0.03700564971751412]}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           DiskBox[1, 0.03700564971751412], DiskBox[2, 0.03700564971751412], 
           DiskBox[3, 0.03700564971751412], DiskBox[4, 0.03700564971751412], 
           DiskBox[5, 0.03700564971751412], DiskBox[6, 0.03700564971751412], 
           DiskBox[7, 0.03700564971751412], DiskBox[8, 0.03700564971751412], 
           DiskBox[9, 0.03700564971751412], 
           DiskBox[10, 0.03700564971751412]}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->"NetworkGraphics",
    FormatType->TraditionalForm,
    FrameTicks->None], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10}, {Null, 
         SparseArray[
         Automatic, {10, 10}, 0, {
          1, {{0, 3, 6, 9, 12, 15, 18, 21, 24, 27, 30}, {{3}, {4}, {6}, {4}, {
            5}, {7}, {1}, {5}, {8}, {1}, {2}, {9}, {2}, {3}, {10}, {1}, {7}, {
            10}, {2}, {6}, {8}, {3}, {7}, {9}, {4}, {8}, {10}, {5}, {6}, {
            9}}}, Pattern}]}, {
        GraphLayout -> {"Dimension" -> 2}, 
         VertexCoordinates -> {{2, 2}, {6, 4}, {4, 2}, {2, 4}, {6, 2}, {5, 
          5}, {6, 6}, {4, 6}, {2, 6}, {3, 5}}}]]}, 
      TagBox[
       GraphicsGroupBox[
        GraphicsComplexBox[{{2., 2.}, {6., 4.}, {4., 2.}, {2., 4.}, {6., 
         2.}, {5., 5.}, {6., 6.}, {4., 6.}, {2., 6.}, {3., 5.}}, {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
           ArrowBox[{{1, 3}, {1, 4}, {1, 6}, {2, 4}, {2, 5}, {2, 7}, {3, 5}, {
            3, 8}, {4, 9}, {5, 10}, {6, 7}, {6, 10}, {7, 8}, {8, 9}, {9, 10}},
             0.03700564971751412]}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           DiskBox[1, 0.03700564971751412], DiskBox[2, 0.03700564971751412], 
           DiskBox[3, 0.03700564971751412], DiskBox[4, 0.03700564971751412], 
           DiskBox[5, 0.03700564971751412], DiskBox[6, 0.03700564971751412], 
           DiskBox[7, 0.03700564971751412], DiskBox[8, 0.03700564971751412], 
           DiskBox[9, 0.03700564971751412], 
           DiskBox[10, 0.03700564971751412]}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->"NetworkGraphics",
    FormatType->TraditionalForm,
    FrameTicks->None], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10}, {Null, 
         SparseArray[
         Automatic, {10, 10}, 0, {
          1, {{0, 3, 6, 9, 12, 15, 18, 21, 24, 27, 30}, {{3}, {4}, {6}, {4}, {
            5}, {7}, {1}, {5}, {8}, {1}, {2}, {9}, {2}, {3}, {10}, {1}, {7}, {
            10}, {2}, {6}, {8}, {3}, {7}, {9}, {4}, {8}, {10}, {5}, {6}, {
            9}}}, Pattern}]}, {
        GraphLayout -> {"Dimension" -> 2}, 
         VertexCoordinates -> {{(2/(5 + 5^Rational[1, 2]))^Rational[1, 2], 
            0}, {Rational[1, 2] (1 - 2 5^Rational[-1, 2])^Rational[1, 2], 
            Rational[1, 2]}, {
           Rational[-1, 2] (Rational[1, 10] (5 + 5^Rational[1, 2]))^
             Rational[1, 2], Rational[1, 4] (-1 + 5^Rational[1, 2])}, {
           Rational[-1, 2] (Rational[1, 10] (5 + 5^Rational[1, 2]))^
             Rational[1, 2], Rational[1, 4] (1 - 5^Rational[1, 2])}, {
           Rational[1, 2] (1 - 2 5^Rational[-1, 2])^Rational[1, 2], 
            Rational[-1, 2]}, {
           0, (Rational[1, 10] (5 + 5^Rational[1, 2]))^Rational[1, 2]}, {
           Rational[1, 4] (-1 - 5^Rational[1, 2]), 
            Rational[1, 2] (Rational[1, 10] (5 - 5^Rational[1, 2]))^
             Rational[1, 2]}, {
            Rational[-1, 2], 
            Rational[-1, 2] (1 + 2 5^Rational[-1, 2])^Rational[1, 2]}, {
            Rational[1, 2], 
            Rational[-1, 2] (1 + 2 5^Rational[-1, 2])^Rational[1, 2]}, {
           Rational[1, 4] (1 + 5^Rational[1, 2]), 
            Rational[1, 2] (Rational[1, 10] (5 - 5^Rational[1, 2]))^
             Rational[1, 2]}}}]]}, 
      TagBox[
       GraphicsGroupBox[
        GraphicsComplexBox[{{0.5257311121191336, 0.}, {0.16245984811645317`, 
         0.5}, {-0.42532540417602, 
         0.30901699437494745`}, {-0.42532540417602, -0.30901699437494745`}, {
         0.16245984811645317`, -0.5}, {0., 
         0.85065080835204}, {-0.8090169943749475, 
         0.2628655560595668}, {-0.5, -0.6881909602355868}, {
         0.5, -0.6881909602355868}, {0.8090169943749475, 
         0.2628655560595668}}, {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
           ArrowBox[{{1, 3}, {1, 4}, {1, 6}, {2, 4}, {2, 5}, {2, 7}, {3, 5}, {
            3, 8}, {4, 9}, {5, 10}, {6, 7}, {6, 10}, {7, 8}, {8, 9}, {9, 10}},
             0.019434941751084317`]}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           DiskBox[1, 0.019434941751084317], DiskBox[2, 0.019434941751084317],
            DiskBox[3, 0.019434941751084317], 
           DiskBox[4, 0.019434941751084317], DiskBox[5, 0.019434941751084317],
            DiskBox[6, 0.019434941751084317], 
           DiskBox[7, 0.019434941751084317], DiskBox[8, 0.019434941751084317],
            DiskBox[9, 0.019434941751084317], 
           DiskBox[10, 0.019434941751084317]}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->"NetworkGraphics",
    FormatType->TraditionalForm,
    FrameTicks->None], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10}, {Null, 
         SparseArray[
         Automatic, {10, 10}, 0, {
          1, {{0, 3, 6, 9, 12, 15, 18, 21, 24, 27, 30}, {{3}, {4}, {6}, {4}, {
            5}, {7}, {1}, {5}, {8}, {1}, {2}, {9}, {2}, {3}, {10}, {1}, {7}, {
            10}, {2}, {6}, {8}, {3}, {7}, {9}, {4}, {8}, {10}, {5}, {6}, {
            9}}}, Pattern}]}, {
        GraphLayout -> {"Dimension" -> 2}, 
         VertexCoordinates -> {{0.5353024564670038, 0.9588896176713285}, {
          0.3281636798341197, 0.6772739775299917}, {0.5353024564670038, 
          0.4701352008971077}, {0.07060491293400757, 0.6212047479000488}, {
          0.3281636798341197, 0.2629964242642236}, {1., 0.6212047479000488}, {
          0.7424412330998879, 0.6772739775299917}, {0.7424412330998879, 
          0.2629964242642236}, {0.24791181420490352`, 0.07459649632074725}, {
          0.8226930987291041, 0.07459649632074725}}}]]}, 
      TagBox[
       GraphicsGroupBox[
        GraphicsComplexBox[{{0.5353024564670038, 0.9588896176713285}, {
         0.3281636798341197, 0.6772739775299917}, {0.5353024564670038, 
         0.4701352008971077}, {0.07060491293400757, 0.6212047479000488}, {
         0.3281636798341197, 0.2629964242642236}, {1., 0.6212047479000488}, {
         0.7424412330998879, 0.6772739775299917}, {0.7424412330998879, 
         0.2629964242642236}, {0.24791181420490352`, 0.07459649632074725}, {
         0.8226930987291041, 0.07459649632074725}}, {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
           ArrowBox[{{1, 3}, {1, 4}, {1, 6}, {2, 4}, {2, 5}, {2, 7}, {3, 5}, {
            3, 8}, {4, 9}, {5, 10}, {6, 7}, {6, 10}, {7, 8}, {8, 9}, {9, 10}},
             0.011831199458350082`]}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           DiskBox[1, 0.011831199458350082], DiskBox[2, 0.011831199458350082],
            DiskBox[3, 0.011831199458350082], 
           DiskBox[4, 0.011831199458350082], DiskBox[5, 0.011831199458350082],
            DiskBox[6, 0.011831199458350082], 
           DiskBox[7, 0.011831199458350082], DiskBox[8, 0.011831199458350082],
            DiskBox[9, 0.011831199458350082], 
           DiskBox[10, 0.011831199458350082]}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->"NetworkGraphics",
    FormatType->TraditionalForm,
    FrameTicks->None], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10}, {Null, 
         SparseArray[
         Automatic, {10, 10}, 0, {
          1, {{0, 3, 6, 9, 12, 15, 18, 21, 24, 27, 30}, {{3}, {4}, {6}, {4}, {
            5}, {7}, {1}, {5}, {8}, {1}, {2}, {9}, {2}, {3}, {10}, {1}, {7}, {
            10}, {2}, {6}, {8}, {3}, {7}, {9}, {4}, {8}, {10}, {5}, {6}, {
            9}}}, Pattern}]}, {
        GraphLayout -> {"Dimension" -> 2}, 
         VertexCoordinates -> {{(Rational[5, 8] + 
             Rational[-1, 8] 5^Rational[1, 2])^Rational[1, 2], 
            Rational[1, 4] (-1 - 5^Rational[1, 2])}, {0, 
           1}, {(Rational[1, 2] (5 - 5^Rational[1, 2]))^Rational[1, 2], 
            Rational[1, 2] (-1 - 5^Rational[1, 2])}, {(Rational[5, 8] + 
             Rational[1, 8] 5^Rational[1, 2])^Rational[1, 2], 
            Rational[1, 4] (-1 + 5^Rational[1, 2])}, {0, 2}, {
           Rational[-1, 2] (Rational[1, 2] (5 - 5^Rational[1, 2]))^
             Rational[1, 2], Rational[1, 4] (-1 - 5^Rational[1, 2])}, {
           Rational[-1, 2] (Rational[1, 2] (5 + 5^Rational[1, 2]))^
             Rational[1, 2], 
            Rational[1, 4] (-1 + 
             5^Rational[1, 2])}, {-(Rational[1, 2] (5 + 5^Rational[1, 2]))^
             Rational[1, 2], 
            Rational[1, 2] (-1 + 5^Rational[1, 2])}, {(
             Rational[1, 2] (5 + 5^Rational[1, 2]))^Rational[1, 2], 
            Rational[1, 2] (-1 + 
             5^Rational[1, 2])}, {-(Rational[1, 2] (5 - 5^Rational[1, 2]))^
             Rational[1, 2], Rational[1, 2] (-1 - 5^Rational[1, 2])}}}]]}, 
      TagBox[
       GraphicsGroupBox[
        GraphicsComplexBox[{{0.5877852522924731, -0.8090169943749475}, {0., 
         1.}, {1.1755705045849463`, -1.618033988749895}, {0.9510565162951535, 
         0.30901699437494745`}, {0., 
         2.}, {-0.5877852522924731, -0.8090169943749475}, \
{-0.9510565162951535, 0.30901699437494745`}, {-1.902113032590307, 
         0.6180339887498949}, {1.902113032590307, 
         0.6180339887498949}, {-1.1755705045849463`, -1.618033988749895}}, {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
           ArrowBox[{{1, 3}, {1, 4}, {1, 6}, {2, 4}, {2, 5}, {2, 7}, {3, 5}, {
            3, 8}, {4, 9}, {5, 10}, {6, 7}, {6, 10}, {7, 8}, {8, 9}, {9, 10}},
             0.03574187784409402]}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           DiskBox[1, 0.03574187784409402], DiskBox[2, 0.03574187784409402], 
           DiskBox[3, 0.03574187784409402], DiskBox[4, 0.03574187784409402], 
           DiskBox[5, 0.03574187784409402], DiskBox[6, 0.03574187784409402], 
           DiskBox[7, 0.03574187784409402], DiskBox[8, 0.03574187784409402], 
           DiskBox[9, 0.03574187784409402], 
           DiskBox[10, 0.03574187784409402]}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->"NetworkGraphics",
    FormatType->TraditionalForm,
    FrameTicks->None]}], "}"}]], "Output",
 CellChangeTimes->{3.8772750832385836`*^9},
 CellLabel->"Out[28]=",ExpressionUUID->"5f2b1e88-edf2-4ff4-92ec-0fbc50cbea75"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graph", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"1", "<->", "2"}], ",", 
    RowBox[{"2", "<->", "3"}], ",", 
    RowBox[{"3", "<->", "4"}], ",", 
    RowBox[{"4", "<->", "5"}], ",", 
    RowBox[{"5", "<->", "6"}], ",", 
    RowBox[{"6", "<->", "1"}], ",", 
    RowBox[{"1", "<->", "7"}], ",", 
    RowBox[{"3", "<->", "7"}], ",", 
    RowBox[{"5", "<->", "7"}], ",", 
    RowBox[{"2", "<->", "8"}], ",", 
    RowBox[{"4", "<->", "9"}], ",", 
    RowBox[{"6", "<->", "10"}], ",", 
    RowBox[{"8", "<->", "9"}], ",", 
    RowBox[{"9", "<->", "10"}], ",", 
    RowBox[{"8", "<->", "10"}]}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.877275339522806*^9, 3.8772753396634264`*^9}},
 CellLabel->"In[42]:=",ExpressionUUID->"da2a7170-bc92-4504-ad48-55e8a67d7bd0"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10}, {
      Null, {{1, 2}, {2, 3}, {3, 4}, {4, 5}, {5, 6}, {6, 1}, {1, 7}, {3, 7}, {
       5, 7}, {2, 8}, {4, 9}, {6, 10}, {8, 9}, {9, 10}, {8, 10}}}]]}, 
    TagBox[
     GraphicsGroupBox[
      GraphicsComplexBox[{{1.9671526222809765`, 0.15933874831737238`}, {
       1.0975338020014784`, 0.}, {1.7670671121341712`, 0.9112292035310907}, {
       1.0988220344561788`, 1.8238622315805233`}, {1.9680261403086112`, 
       1.6622923187166894`}, {1.1670543901370138`, 0.9113626329493014}, {
       2.5831162917795245`, 0.9103917748751637}, {0., 0.3394084658421136}, {
       0.0007147226678090313, 1.4834437949644885`}, {0.02308778666949629, 
       0.9110855393061247}}, {
        {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
         ArrowBox[{{1, 2}, {1, 6}, {1, 7}, {2, 3}, {2, 8}, {3, 4}, {3, 7}, {4,
           5}, {4, 9}, {5, 6}, {5, 7}, {6, 10}, {8, 9}, {8, 10}, {9, 10}}, 
          0.027173388425058828`]}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         DiskBox[1, 0.027173388425058828], DiskBox[2, 0.027173388425058828], 
         DiskBox[3, 0.027173388425058828], DiskBox[4, 0.027173388425058828], 
         DiskBox[5, 0.027173388425058828], DiskBox[6, 0.027173388425058828], 
         DiskBox[7, 0.027173388425058828], DiskBox[8, 0.027173388425058828], 
         DiskBox[9, 0.027173388425058828], 
         DiskBox[10, 0.027173388425058828]}}]],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->"NetworkGraphics",
  FormatType->TraditionalForm,
  FrameTicks->None]], "Output",
 CellChangeTimes->{3.877275340442646*^9},
 CellLabel->"Out[42]=",ExpressionUUID->"18133ce4-440a-4836-b382-4b74a4fa1799"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graph", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"1", "<->", "2"}], ",", 
     RowBox[{"2", "<->", "3"}], ",", 
     RowBox[{"3", "<->", "4"}], ",", 
     RowBox[{"4", "<->", "5"}], ",", 
     RowBox[{"5", "<->", "6"}], ",", 
     RowBox[{"6", "<->", "1"}], ",", 
     RowBox[{"1", "<->", "7"}], ",", 
     RowBox[{"3", "<->", "7"}], ",", 
     RowBox[{"5", "<->", "7"}], ",", 
     RowBox[{"2", "<->", "8"}], ",", 
     RowBox[{"4", "<->", "9"}], ",", 
     RowBox[{"6", "<->", "10"}], ",", 
     RowBox[{"8", "<->", "9"}], ",", 
     RowBox[{"9", "<->", "10"}], ",", 
     RowBox[{"8", "<->", "10"}]}], "}"}], ",", 
   RowBox[{"GraphLayout", "->", "\"\<CircularEmbedding\>\""}], ",", 
   RowBox[{"VertexLabels", "->", "Automatic"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8772751293738527`*^9, 3.8772752603436813`*^9}, {
  3.877275301487045*^9, 3.8772753296731*^9}},
 CellLabel->"In[41]:=",ExpressionUUID->"7ea04af8-14ba-4287-a623-2ae9a4f6d5b5"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10}, {
      Null, {{1, 2}, {2, 3}, {3, 4}, {4, 5}, {5, 6}, {6, 1}, {1, 7}, {3, 7}, {
       5, 7}, {2, 8}, {4, 9}, {6, 10}, {8, 9}, {9, 10}, {8, 10}}}, {
      GraphLayout -> "CircularEmbedding", VertexLabels -> {Automatic}}]]}, 
    TagBox[GraphicsGroupBox[{
       {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
        ArrowBox[CompressedData["
1:eJxTTMoPSmVmYGDgB2ImKE6OKmVRPv9o/9ov02eXP35pXxt7Y83GxJN7GMDg
gz26fCSEb78IykeXZwx1EebLf7c/8aW++ftjlzHM+xsClre3wSHPBNFvnwyR
34+uHmr/fqj9GPLo9qOr/wdRv98Oaj66fH3JXEvr00dtoO7BpR7uf3R5HPbD
1adA+eug9qH7F91+dHl0/ejq0eUB43XuVw==
         "], 0.02261146496815286]}, 
       {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
        0.7]}], {
         DiskBox[{-0.5877852522924737, 0.809016994374948}, 
          0.02261146496815286], 
         InsetBox["1", 
          Offset[{-1.4530850560107222, 2.}, \
{-0.602644690572911, 0.8294692565724991}], ImageScaled[{0.8632712640026805, 0.}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-7.044813998280222*^-16, 1.}, 0.02261146496815286], 
         InsetBox["2", 
          Offset[{-1.4089627996560444*^-15, 2.}, \
{-7.204107563209488*^-16, 1.0226114649681528}], ImageScaled[{0.5000000000000003, 0.}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.9510565162951533, 0.30901699437494634}, 
          0.02261146496815286], 
         InsetBox["3", 
          Offset[{1.9999999999999998, 0.6498393924658105}, \
{0.9731146393297004, 0.3161841130107994}], ImageScaled[{5.551115123125783*^-17, 0.33754015188354736}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-0.5877852522924726, -0.8090169943749468}, 
          0.02261146496815286], 
         InsetBox["4", 
          Offset[{-1.4530850560107216, -2.}, \
{-0.6026446905729099, -0.8294692565724979}], ImageScaled[{0.8632712640026804, 1.}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-0.9510565162951534, -0.30901699437494645}, 
          0.02261146496815286], 
         InsetBox["5", 
          Offset[{-2., -0.6498393924658107}, \
{-0.9731146393297005, -0.3161841130107995}], ImageScaled[{1., 0.6624598481164526}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.5877852522924726, 0.8090169943749468}, 
          0.02261146496815286], 
         InsetBox["6", 
          Offset[{1.4530850560107216, 2.}, \
{0.6026446905729099, 0.8294692565724979}], ImageScaled[{0.1367287359973196, 0.}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-0.9510565162951538, 0.3090169943749484}, 
          0.02261146496815286], 
         InsetBox["7", 
          Offset[{-2., 0.6498393924658146}, \
{-0.9731146393297009, 0.3161841130108015}], ImageScaled[{1., 0.33754015188354636}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.9510565162951539, -0.3090169943749485}, 
          0.02261146496815286], 
         InsetBox["8", 
          Offset[{2., -0.6498393924658148}, \
{0.973114639329701, -0.3161841130108016}], ImageScaled[{0., 0.6624598481164536}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{6.049014748177263*^-16, -1.}, 0.02261146496815286], 
         InsetBox["9", 
          Offset[{1.2098029496354525*^-15, -2.}, \
{6.185791833247513*^-16, -1.0226114649681528}], ImageScaled[{0.4999999999999997, 1.}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.5877852522924738, -0.8090169943749481}, 
          0.02261146496815286], 
         InsetBox["10", 
          Offset[{1.4530850560107222, -2.}, \
{0.602644690572911, -0.8294692565724993}], ImageScaled[{0.13672873599731944, 1.}],
          BaseStyle->"Graphics"]}}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->"NetworkGraphics",
  FormatType->TraditionalForm,
  FrameTicks->None]], "Output",
 CellChangeTimes->{{3.8772751512609415`*^9, 3.87727526062488*^9}, {
  3.8772753040494537`*^9, 3.8772753300636683`*^9}},
 CellLabel->"Out[41]=",ExpressionUUID->"c4e412d6-25fe-4e64-99d7-7b897f7855e1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"IsomorphicGraphQ", "[", 
  RowBox[{
   RowBox[{"Graph", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"1", "<->", "2"}], ",", 
       RowBox[{"2", "<->", "3"}], ",", 
       RowBox[{"3", "<->", "4"}], ",", 
       RowBox[{"4", "<->", "5"}], ",", 
       RowBox[{"5", "<->", "6"}], ",", 
       RowBox[{"6", "<->", "1"}], ",", 
       RowBox[{"1", "<->", "7"}], ",", 
       RowBox[{"3", "<->", "7"}], ",", 
       RowBox[{"5", "<->", "7"}], ",", 
       RowBox[{"2", "<->", "8"}], ",", 
       RowBox[{"4", "<->", "9"}], ",", 
       RowBox[{"6", "<->", "10"}], ",", 
       RowBox[{"8", "<->", "9"}], ",", 
       RowBox[{"9", "<->", "10"}], ",", 
       RowBox[{"8", "<->", "10"}]}], "}"}], ",", 
     RowBox[{"GraphLayout", "->", "\"\<CircularEmbedding\>\""}], ",", 
     RowBox[{"VertexLabels", "->", "Automatic"}]}], "]"}], ",", 
   RowBox[{"GraphData", "[", "\"\<PetersenGraph\>\"", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.877275346942771*^9, 3.877275352955202*^9}},
 CellLabel->"In[43]:=",ExpressionUUID->"6e4ff799-4678-4e8c-8802-a6ef4878bb83"],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{3.8772753532206836`*^9},
 CellLabel->"Out[43]=",ExpressionUUID->"81bb6ad9-1a2a-4631-ba62-831c0535f6d9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindGraphIsomorphism", "[", 
  RowBox[{
   RowBox[{"GraphData", "[", "\"\<PetersenGraph\>\"", "]"}], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10}, {Null, 
         SparseArray[
         Automatic, {10, 10}, 0, {
          1, {{0, 3, 6, 9, 12, 15, 18, 21, 24, 27, 30}, {{3}, {4}, {6}, {4}, {
            5}, {7}, {1}, {5}, {8}, {1}, {2}, {9}, {2}, {3}, {10}, {1}, {7}, {
            10}, {2}, {6}, {8}, {3}, {7}, {9}, {4}, {8}, {10}, {5}, {6}, {
            9}}}, Pattern}]}, {
        GraphLayout -> {"Dimension" -> 2}, 
         VertexCoordinates -> {{0.454406779661017, -0.22296610169491526`}, {
          0.6325423728813558, -0.5316101694915254}, {
          0.5492372881355932, -0.05873728813559322}, {
          0.4873728813559322, -0.4096610169491525}, {
          0.8221186440677966, -0.5316101694915254}, {
          1., -0.22296610169491526`}, {
          0.9059322033898305, -0.05873728813559322}, {0.7273728813559321, 
          0.006091525423728813}, {0.7273728813559321, -0.2711016949152542}, {
          0.9677966101694915, -0.4096610169491525}}}]]}, 
      TagBox[
       GraphicsGroupBox[
        GraphicsComplexBox[{{0.454406779661017, -0.22296610169491526`}, {
         0.6325423728813558, -0.5316101694915254}, {
         0.5492372881355932, -0.05873728813559322}, {
         0.4873728813559322, -0.4096610169491525}, {
         0.8221186440677966, -0.5316101694915254}, {
         1., -0.22296610169491526`}, {
         0.9059322033898305, -0.05873728813559322}, {0.7273728813559321, 
         0.006091525423728813}, {0.7273728813559321, -0.2711016949152542}, {
         0.9677966101694915, -0.4096610169491525}}, {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
           ArrowBox[{{1, 3}, {1, 4}, {1, 6}, {2, 4}, {2, 5}, {2, 7}, {3, 5}, {
            3, 8}, {4, 9}, {5, 10}, {6, 7}, {6, 10}, {7, 8}, {8, 9}, {9, 10}},
             0.006945401694915254]}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           DiskBox[1, 0.006945401694915254], DiskBox[2, 0.006945401694915254],
            DiskBox[3, 0.006945401694915254], 
           DiskBox[4, 0.006945401694915254], DiskBox[5, 0.006945401694915254],
            DiskBox[6, 0.006945401694915254], 
           DiskBox[7, 0.006945401694915254], DiskBox[8, 0.006945401694915254],
            DiskBox[9, 0.006945401694915254], 
           DiskBox[10, 0.006945401694915254]}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->"NetworkGraphics",
    FormatType->TraditionalForm,
    FrameTicks->None]}], "]"}]], "Input",
 CellChangeTimes->{{3.8772754426379685`*^9, 3.8772754653816485`*^9}},
 CellLabel->"In[45]:=",ExpressionUUID->"9d928a54-75f4-44d1-bfb9-26049db1a431"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\[LeftAssociation]", 
   RowBox[{
    RowBox[{"1", "\[Rule]", "1"}], ",", 
    RowBox[{"2", "\[Rule]", "2"}], ",", 
    RowBox[{"3", "\[Rule]", "3"}], ",", 
    RowBox[{"4", "\[Rule]", "4"}], ",", 
    RowBox[{"5", "\[Rule]", "5"}], ",", 
    RowBox[{"6", "\[Rule]", "6"}], ",", 
    RowBox[{"7", "\[Rule]", "7"}], ",", 
    RowBox[{"8", "\[Rule]", "8"}], ",", 
    RowBox[{"9", "\[Rule]", "9"}], ",", 
    RowBox[{"10", "\[Rule]", "10"}]}], "\[RightAssociation]"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.87727546158552*^9, 3.877275465662798*^9}},
 CellLabel->"Out[45]=",ExpressionUUID->"a3be9754-8553-4fdb-8542-926e02b4bbbe"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"FindGraphIsomorphism", "[", 
  RowBox[{
   RowBox[{"GraphData", "[", "\"\<PetersenGraph\>\"", "]"}], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10}, {Null, 
         SparseArray[
         Automatic, {10, 10}, 0, {
          1, {{0, 3, 6, 9, 12, 15, 18, 21, 24, 27, 30}, {{3}, {4}, {6}, {4}, {
            5}, {7}, {1}, {5}, {8}, {1}, {2}, {9}, {2}, {3}, {10}, {1}, {7}, {
            10}, {2}, {6}, {8}, {3}, {7}, {9}, {4}, {8}, {10}, {5}, {6}, {
            9}}}, Pattern}]}, {
        GraphLayout -> {"Dimension" -> 2}, 
         VertexCoordinates -> {{0.454406779661017, -0.22296610169491526`}, {
          0.6325423728813558, -0.5316101694915254}, {
          0.5492372881355932, -0.05873728813559322}, {
          0.4873728813559322, -0.4096610169491525}, {
          0.8221186440677966, -0.5316101694915254}, {
          1., -0.22296610169491526`}, {
          0.9059322033898305, -0.05873728813559322}, {0.7273728813559321, 
          0.006091525423728813}, {0.7273728813559321, -0.2711016949152542}, {
          0.9677966101694915, -0.4096610169491525}}}]]}, 
      TagBox[
       GraphicsGroupBox[
        GraphicsComplexBox[{{0.454406779661017, -0.22296610169491526`}, {
         0.6325423728813558, -0.5316101694915254}, {
         0.5492372881355932, -0.05873728813559322}, {
         0.4873728813559322, -0.4096610169491525}, {
         0.8221186440677966, -0.5316101694915254}, {
         1., -0.22296610169491526`}, {
         0.9059322033898305, -0.05873728813559322}, {0.7273728813559321, 
         0.006091525423728813}, {0.7273728813559321, -0.2711016949152542}, {
         0.9677966101694915, -0.4096610169491525}}, {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
           ArrowBox[{{1, 3}, {1, 4}, {1, 6}, {2, 4}, {2, 5}, {2, 7}, {3, 5}, {
            3, 8}, {4, 9}, {5, 10}, {6, 7}, {6, 10}, {7, 8}, {8, 9}, {9, 10}},
             0.006945401694915254]}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           DiskBox[1, 0.006945401694915254], DiskBox[2, 0.006945401694915254],
            DiskBox[3, 0.006945401694915254], 
           DiskBox[4, 0.006945401694915254], DiskBox[5, 0.006945401694915254],
            DiskBox[6, 0.006945401694915254], 
           DiskBox[7, 0.006945401694915254], DiskBox[8, 0.006945401694915254],
            DiskBox[9, 0.006945401694915254], 
           DiskBox[10, 0.006945401694915254]}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->"NetworkGraphics",
    FormatType->TraditionalForm,
    FrameTicks->None]}], "]"}]], "Input",
 CellChangeTimes->{{3.8772754426379685`*^9, 
  3.8772754687053423`*^9}},ExpressionUUID->"ca12cb99-8dd5-4902-bf0d-\
7172bcb4600a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindGraphIsomorphism", "[", 
  RowBox[{
   RowBox[{"GraphData", "[", "\"\<PetersenGraph\>\"", "]"}], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10}, {Null, 
         SparseArray[
         Automatic, {10, 10}, 0, {
          1, {{0, 3, 6, 9, 12, 15, 18, 21, 24, 27, 30}, {{3}, {4}, {6}, {4}, {
            5}, {7}, {1}, {5}, {8}, {1}, {2}, {9}, {2}, {3}, {10}, {1}, {7}, {
            10}, {2}, {6}, {8}, {3}, {7}, {9}, {4}, {8}, {10}, {5}, {6}, {
            9}}}, Pattern}]}, {
        GraphLayout -> {"Dimension" -> 2}, 
         VertexCoordinates -> {{0.4483544303797468, -0.269957805907173}, {
          0.6048101265822785, -0.3389873417721519}, {
          0.5863291139240506, -0.5090295358649789}, {
          0.5863291139240506, -0.030911392405063295`}, {
          0.8624472573839662, -0.5090295358649789}, {
          0.7243037974683544, -0.13198312236286922`}, {
          0.7243037974683544, -0.269957805907173}, {
          0.8437974683544304, -0.3389873417721519}, {
          0.8624472573839662, -0.030911392405063295`}, {
          1., -0.269957805907173}}}]]}, 
      TagBox[
       GraphicsGroupBox[
        GraphicsComplexBox[{{0.4483544303797468, -0.269957805907173}, {
         0.6048101265822785, -0.3389873417721519}, {
         0.5863291139240506, -0.5090295358649789}, {
         0.5863291139240506, -0.030911392405063295`}, {
         0.8624472573839662, -0.5090295358649789}, {
         0.7243037974683544, -0.13198312236286922`}, {
         0.7243037974683544, -0.269957805907173}, {
         0.8437974683544304, -0.3389873417721519}, {
         0.8624472573839662, -0.030911392405063295`}, {
         1., -0.269957805907173}}, {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
           ArrowBox[{{1, 3}, {1, 4}, {1, 6}, {2, 4}, {2, 5}, {2, 7}, {3, 5}, {
            3, 8}, {4, 9}, {5, 10}, {6, 7}, {6, 10}, {7, 8}, {8, 9}, {9, 10}},
             0.007022448101265823]}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           DiskBox[1, 0.007022448101265823], DiskBox[2, 0.007022448101265823],
            DiskBox[3, 0.007022448101265823], 
           DiskBox[4, 0.007022448101265823], DiskBox[5, 0.007022448101265823],
            DiskBox[6, 0.007022448101265823], 
           DiskBox[7, 0.007022448101265823], DiskBox[8, 0.007022448101265823],
            DiskBox[9, 0.007022448101265823], 
           DiskBox[10, 0.007022448101265823]}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->"NetworkGraphics",
    FormatType->TraditionalForm,
    FrameTicks->None]}], "]"}]], "Input",
 CellChangeTimes->{{3.8772754426379685`*^9, 3.877275486116083*^9}},
 CellLabel->"In[46]:=",ExpressionUUID->"3d80461f-8d40-491b-9921-92e330c551fc"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\[LeftAssociation]", 
   RowBox[{
    RowBox[{"1", "\[Rule]", "1"}], ",", 
    RowBox[{"2", "\[Rule]", "2"}], ",", 
    RowBox[{"3", "\[Rule]", "3"}], ",", 
    RowBox[{"4", "\[Rule]", "4"}], ",", 
    RowBox[{"5", "\[Rule]", "5"}], ",", 
    RowBox[{"6", "\[Rule]", "6"}], ",", 
    RowBox[{"7", "\[Rule]", "7"}], ",", 
    RowBox[{"8", "\[Rule]", "8"}], ",", 
    RowBox[{"9", "\[Rule]", "9"}], ",", 
    RowBox[{"10", "\[Rule]", "10"}]}], "\[RightAssociation]"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.8772754871004596`*^9},
 CellLabel->"Out[46]=",ExpressionUUID->"405a1890-997e-4fad-b532-0f00ab30920f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindGraphIsomorphism", "[", 
  RowBox[{
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10}, {Null, 
         SparseArray[
         Automatic, {10, 10}, 0, {
          1, {{0, 3, 6, 9, 12, 15, 18, 21, 24, 27, 30}, {{3}, {4}, {6}, {4}, {
            5}, {7}, {1}, {5}, {8}, {1}, {2}, {9}, {2}, {3}, {10}, {1}, {7}, {
            10}, {2}, {6}, {8}, {3}, {7}, {9}, {4}, {8}, {10}, {5}, {6}, {
            9}}}, Pattern}]}, {
        GraphLayout -> {"Dimension" -> 2}, 
         VertexCoordinates -> {{2, 2}, {6, 4}, {4, 2}, {2, 4}, {6, 2}, {5, 
          5}, {6, 6}, {4, 6}, {2, 6}, {3, 5}}}]]}, 
      TagBox[
       GraphicsGroupBox[
        GraphicsComplexBox[{{2., 2.}, {6., 4.}, {4., 2.}, {2., 4.}, {6., 
         2.}, {5., 5.}, {6., 6.}, {4., 6.}, {2., 6.}, {3., 5.}}, {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
           ArrowBox[{{1, 3}, {1, 4}, {1, 6}, {2, 4}, {2, 5}, {2, 7}, {3, 5}, {
            3, 8}, {4, 9}, {5, 10}, {6, 7}, {6, 10}, {7, 8}, {8, 9}, {9, 10}},
             0.03700564971751412]}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           DiskBox[1, 0.03700564971751412], DiskBox[2, 0.03700564971751412], 
           DiskBox[3, 0.03700564971751412], DiskBox[4, 0.03700564971751412], 
           DiskBox[5, 0.03700564971751412], DiskBox[6, 0.03700564971751412], 
           DiskBox[7, 0.03700564971751412], DiskBox[8, 0.03700564971751412], 
           DiskBox[9, 0.03700564971751412], 
           DiskBox[10, 0.03700564971751412]}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->"NetworkGraphics",
    FormatType->TraditionalForm,
    FrameTicks->None], ",", 
   RowBox[{"GraphData", "[", "\"\<PetersenGraph\>\"", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8772754426379685`*^9, 3.8772755069856696`*^9}},
 CellLabel->"In[47]:=",ExpressionUUID->"c989af07-f08b-4a6e-8725-5c31aa4e7d0f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\[LeftAssociation]", 
   RowBox[{
    RowBox[{"1", "\[Rule]", "1"}], ",", 
    RowBox[{"2", "\[Rule]", "2"}], ",", 
    RowBox[{"3", "\[Rule]", "3"}], ",", 
    RowBox[{"4", "\[Rule]", "4"}], ",", 
    RowBox[{"5", "\[Rule]", "5"}], ",", 
    RowBox[{"6", "\[Rule]", "6"}], ",", 
    RowBox[{"7", "\[Rule]", "7"}], ",", 
    RowBox[{"8", "\[Rule]", "8"}], ",", 
    RowBox[{"9", "\[Rule]", "9"}], ",", 
    RowBox[{"10", "\[Rule]", "10"}]}], "\[RightAssociation]"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.877275507282531*^9},
 CellLabel->"Out[47]=",ExpressionUUID->"3e9aa0bb-0222-443c-984c-7c853f7c1fbb"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Exercise 44", "Section",
 CellChangeTimes->{{3.877275537921226*^9, 3.8772755394107227`*^9}, {
  3.8772759012737303`*^9, 
  3.877275902586233*^9}},ExpressionUUID->"e5619394-c8c3-4629-a93d-\
5d930f6dd6db"],

Cell["How many symmetries does Chv\[AGrave]tal\[CloseCurlyQuote]s graph \
have?", "Text",
 CellChangeTimes->{{3.8772755408639307`*^9, 
  3.8772755541195683`*^9}},ExpressionUUID->"0a3d45db-3116-47d7-bcfc-\
bb6646137ec2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GraphData", "[", "\"\<ChvatalGraph\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.8772755203491106`*^9, 3.8772755229585557`*^9}},
 CellLabel->"In[49]:=",ExpressionUUID->"68f857c8-c32c-41a1-9aff-e48c4530d5f1"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12}, {Null, 
       SparseArray[
       Automatic, {12, 12}, 0, {
        1, {{0, 4, 8, 12, 16, 20, 24, 28, 32, 36, 40, 44, 48}, {{7}, {10}, {
          11}, {12}, {3}, {6}, {8}, {11}, {2}, {7}, {9}, {12}, {8}, {10}, {
          11}, {12}, {6}, {9}, {11}, {12}, {2}, {5}, {7}, {10}, {1}, {3}, {
          6}, {8}, {2}, {4}, {7}, {9}, {3}, {5}, {8}, {10}, {1}, {4}, {6}, {
          9}, {1}, {2}, {4}, {5}, {1}, {3}, {4}, {5}}}, Pattern}]}, {
      VertexCoordinates -> {{-0.9511, 0.309}, {-0.5878, -0.809}, {
         0.5878, -0.809}, {0.9511, 0.309}, {0, 1.}, {-1.9021, 
         0.618}, {-1.1756, -1.618}, {1.1756, -1.618}, {1.9021, 0.618}, {
         0, 2.}, {-0.3, 0}, {0.3, 0}}}]]}, 
    TagBox[
     GraphicsGroupBox[
      GraphicsComplexBox[{{-0.9511, 0.309}, {-0.5878, -0.809}, {
       0.5878, -0.809}, {0.9511, 0.309}, {0., 1.}, {-1.9021, 
       0.618}, {-1.1756, -1.618}, {1.1756, -1.618}, {1.9021, 0.618}, {0., 
       2.}, {-0.3, 0.}, {0.3, 0.}}, {
        {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
         ArrowBox[{{1, 7}, {1, 10}, {1, 11}, {1, 12}, {2, 3}, {2, 6}, {2, 
          8}, {2, 11}, {3, 7}, {3, 9}, {3, 12}, {4, 8}, {4, 10}, {4, 11}, {4, 
          12}, {5, 6}, {5, 9}, {5, 11}, {5, 12}, {6, 7}, {6, 10}, {7, 8}, {8, 
          9}, {9, 10}}, 0.03574170770443663]}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         DiskBox[1, 0.03574170770443663], DiskBox[2, 0.03574170770443663], 
         DiskBox[3, 0.03574170770443663], DiskBox[4, 0.03574170770443663], 
         DiskBox[5, 0.03574170770443663], DiskBox[6, 0.03574170770443663], 
         DiskBox[7, 0.03574170770443663], DiskBox[8, 0.03574170770443663], 
         DiskBox[9, 0.03574170770443663], DiskBox[10, 0.03574170770443663], 
         DiskBox[11, 0.03574170770443663], 
         DiskBox[12, 0.03574170770443663]}}]],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->"NetworkGraphics",
  FormatType->TraditionalForm,
  FrameTicks->None]], "Output",
 CellChangeTimes->{{3.8772755233490777`*^9, 3.8772755351817937`*^9}},
 CellLabel->"Out[49]=",ExpressionUUID->"536746bb-c59f-43df-ab08-a9d2f64ff638"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GraphData", "[", 
  RowBox[{"\"\<ChvatalGraph\>\"", ",", "\"\<AutomorphismCount\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8772759752610645`*^9, 3.877275978404583*^9}},
 CellLabel->"In[50]:=",ExpressionUUID->"eeebe44a-c32f-47df-adab-b6fa20859b16"],

Cell[BoxData["8"], "Output",
 CellChangeTimes->{3.877275978639002*^9},
 CellLabel->"Out[50]=",ExpressionUUID->"14e92b70-915c-47cd-b351-0726cf04ed75"]
}, Open  ]],

Cell["There are 8 symmetries.", "Text",
 CellChangeTimes->{{3.877275981524312*^9, 
  3.8772759865613174`*^9}},ExpressionUUID->"57109d7a-30b7-4484-b397-\
28b280a05647"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Exercise 45", "Section",
 CellChangeTimes->{{3.8772760333797874`*^9, 
  3.8772760415795135`*^9}},ExpressionUUID->"e74b2402-53dc-4f2b-865a-\
ddb7cbabe3e8"],

Cell["\<\
Find an easy way to 4-color the planar graph (17). Would 3 colors suffice?\
\>", "Text",
 CellChangeTimes->{{3.877276042990881*^9, 3.8772760465193834`*^9}, {
  3.8772760893803616`*^9, 
  3.8772761017694054`*^9}},ExpressionUUID->"15b27fb6-0ee4-4fe5-b35b-\
253275c10ebe"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GraphData", "[", "\"\<ContiguousUSAGraph\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.8772760651577616`*^9, 3.877276067987266*^9}},
 CellLabel->"In[51]:=",ExpressionUUID->"c4f3f6e7-518c-4bde-8712-df1a757a5fbb"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
       20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37,
       38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49}, {Null, 
       SparseArray[
       Automatic, {49, 49}, 0, {
        1, {{0, 4, 6, 11, 15, 23, 29, 32, 40, 46, 50, 54, 57, 61, 66, 71, 75, 
          81, 85, 91, 97, 100, 105, 110, 112, 114, 119, 125, 128, 131, 137, 
          141, 143, 149, 154, 158, 164, 168, 174, 178, 180, 184, 191, 194, 
          199, 204, 207, 210, 211, 214}, {{2}, {3}, {4}, {5}, {1}, {3}, {1}, {
          2}, {5}, {31}, {32}, {1}, {5}, {6}, {7}, {1}, {3}, {4}, {6}, {8}, {
          27}, {31}, {42}, {4}, {5}, {7}, {8}, {9}, {10}, {4}, {6}, {10}, {
          5}, {6}, {9}, {18}, {19}, {33}, {34}, {42}, {6}, {8}, {10}, {13}, {
          17}, {18}, {6}, {7}, {9}, {13}, {12}, {13}, {14}, {15}, {11}, {
          14}, {16}, {9}, {10}, {11}, {17}, {11}, {12}, {15}, {16}, {38}, {
          11}, {14}, {17}, {20}, {38}, {12}, {14}, {38}, {40}, {9}, {13}, {
          15}, {18}, {19}, {20}, {8}, {9}, {17}, {19}, {8}, {17}, {18}, {
          20}, {33}, {36}, {15}, {17}, {19}, {36}, {38}, {39}, {22}, {23}, {
          24}, {21}, {23}, {24}, {46}, {47}, {21}, {22}, {29}, {30}, {47}, {
          21}, {22}, {26}, {27}, {25}, {27}, {28}, {30}, {45}, {5}, {25}, {
          26}, {31}, {42}, {45}, {26}, {29}, {30}, {23}, {28}, {30}, {23}, {
          26}, {28}, {29}, {44}, {45}, {3}, {5}, {27}, {32}, {3}, {31}, {8}, {
          19}, {34}, {35}, {36}, {37}, {8}, {33}, {37}, {41}, {42}, {33}, {
          36}, {37}, {49}, {19}, {20}, {33}, {35}, {39}, {49}, {33}, {34}, {
          35}, {43}, {14}, {15}, {16}, {20}, {39}, {40}, {20}, {36}, {38}, {
          49}, {16}, {38}, {34}, {42}, {43}, {44}, {5}, {8}, {27}, {34}, {
          41}, {44}, {45}, {37}, {41}, {44}, {30}, {41}, {42}, {43}, {45}, {
          26}, {27}, {30}, {42}, {44}, {22}, {47}, {48}, {22}, {23}, {46}, {
          46}, {35}, {36}, {39}}}, Pattern}]}, {
      VertexCoordinates -> {{7, 1}, {8, 0}, {8, 1}, {6, 1}, {7, 2}, {5, 2}, {
        5, 1}, {5, 3}, {4, 2}, {4, 1}, {2, 2}, {0, 3}, {3, 2}, {1, 3}, {2, 
        3}, {1, 4}, {3, 3}, {4, 3}, {4, 4}, {3, 4}, {11, 4}, {11, 5}, {10, 
        5}, {12, 4}, {9, 2}, {9, 3}, {8, 2}, {10, 3}, {10, 4}, {9, 4}, {9, 
        1}, {9, 0}, {5, 4}, {6, 4}, {5, 5}, {4, 5}, {6, 5}, {2, 4}, {3, 5}, {
        1, 5}, {7, 4}, {7, 3}, {7, 5}, {8, 4}, {8, 3}, {11, 6}, {10, 6}, {12, 
        6}, {4, 6}}}]]}, 
    TagBox[GraphicsGroupBox[GraphicsComplexBox[CompressedData["
1:eJx1kjEOgzAMRa1OGTNkYGAwKEKsPUFzhh6hEjNX5wgUhd+KJ2IJWc//m9iB
4bO+l4eZPb/PkWv0pebtVbMXu4RD78DqtzOnBssvDmeO8Ef4DbpC/QG6+lgP
0CPqnIfcqk8N1p4ZPMM/Yk6xznHoGbqY7yNr7995dp1L/g6cyr0vwc/vzvtq
/Qc9/OIAlt/hd/h1/5org2fwf+8dO2soag==
       "], {
        {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
         ArrowBox[{{1, 2}, {1, 3}, {1, 4}, {1, 5}, {2, 3}, {3, 5}, {3, 31}, {
          3, 32}, {4, 5}, {4, 6}, {4, 7}, {5, 6}, {5, 8}, {5, 27}, {5, 31}, {
          5, 42}, {6, 7}, {6, 8}, {6, 9}, {6, 10}, {7, 10}, {8, 9}, {8, 18}, {
          8, 19}, {8, 33}, {8, 34}, {8, 42}, {9, 10}, {9, 13}, {9, 17}, {9, 
          18}, {10, 13}, {11, 12}, {11, 13}, {11, 14}, {11, 15}, {12, 14}, {
          12, 16}, {13, 17}, {14, 15}, {14, 16}, {14, 38}, {15, 17}, {15, 
          20}, {15, 38}, {16, 38}, {16, 40}, {17, 18}, {17, 19}, {17, 20}, {
          18, 19}, {19, 20}, {19, 33}, {19, 36}, {20, 36}, {20, 38}, {20, 
          39}, {21, 22}, {21, 23}, {21, 24}, {22, 23}, {22, 24}, {22, 46}, {
          22, 47}, {23, 29}, {23, 30}, {23, 47}, {25, 26}, {25, 27}, {26, 
          27}, {26, 28}, {26, 30}, {26, 45}, {27, 31}, {27, 42}, {27, 45}, {
          28, 29}, {28, 30}, {29, 30}, {30, 44}, {30, 45}, {31, 32}, {33, 
          34}, {33, 35}, {33, 36}, {33, 37}, {34, 37}, {34, 41}, {34, 42}, {
          35, 36}, {35, 37}, {35, 49}, {36, 39}, {36, 49}, {37, 43}, {38, 
          39}, {38, 40}, {39, 49}, {41, 42}, {41, 43}, {41, 44}, {42, 44}, {
          42, 45}, {43, 44}, {44, 45}, {46, 47}, {46, 48}}, 
          0.07217898832684824]}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         DiskBox[1, 0.07217898832684824], DiskBox[2, 0.07217898832684824], 
         DiskBox[3, 0.07217898832684824], DiskBox[4, 0.07217898832684824], 
         DiskBox[5, 0.07217898832684824], DiskBox[6, 0.07217898832684824], 
         DiskBox[7, 0.07217898832684824], DiskBox[8, 0.07217898832684824], 
         DiskBox[9, 0.07217898832684824], DiskBox[10, 0.07217898832684824], 
         DiskBox[11, 0.07217898832684824], DiskBox[12, 0.07217898832684824], 
         DiskBox[13, 0.07217898832684824], DiskBox[14, 0.07217898832684824], 
         DiskBox[15, 0.07217898832684824], DiskBox[16, 0.07217898832684824], 
         DiskBox[17, 0.07217898832684824], DiskBox[18, 0.07217898832684824], 
         DiskBox[19, 0.07217898832684824], DiskBox[20, 0.07217898832684824], 
         DiskBox[21, 0.07217898832684824], DiskBox[22, 0.07217898832684824], 
         DiskBox[23, 0.07217898832684824], DiskBox[24, 0.07217898832684824], 
         DiskBox[25, 0.07217898832684824], DiskBox[26, 0.07217898832684824], 
         DiskBox[27, 0.07217898832684824], DiskBox[28, 0.07217898832684824], 
         DiskBox[29, 0.07217898832684824], DiskBox[30, 0.07217898832684824], 
         DiskBox[31, 0.07217898832684824], DiskBox[32, 0.07217898832684824], 
         DiskBox[33, 0.07217898832684824], DiskBox[34, 0.07217898832684824], 
         DiskBox[35, 0.07217898832684824], DiskBox[36, 0.07217898832684824], 
         DiskBox[37, 0.07217898832684824], DiskBox[38, 0.07217898832684824], 
         DiskBox[39, 0.07217898832684824], DiskBox[40, 0.07217898832684824], 
         DiskBox[41, 0.07217898832684824], DiskBox[42, 0.07217898832684824], 
         DiskBox[43, 0.07217898832684824], DiskBox[44, 0.07217898832684824], 
         DiskBox[45, 0.07217898832684824], DiskBox[46, 0.07217898832684824], 
         DiskBox[47, 0.07217898832684824], DiskBox[48, 0.07217898832684824], 
         DiskBox[49, 0.07217898832684824]}}]],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->"NetworkGraphics",
  FormatType->TraditionalForm,
  FrameTicks->None]], "Output",
 CellChangeTimes->{3.877276076270897*^9},
 CellLabel->"Out[51]=",ExpressionUUID->"a5b9312c-1215-4851-87e7-0d1d75df1fb0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"VertexCount", "[", 
  RowBox[{"GraphData", "[", "\"\<ContiguousUSAGraph\>\"", "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.877276069565404*^9, 3.877276071690259*^9}},
 CellLabel->"In[52]:=",ExpressionUUID->"12e32225-583e-444b-8383-69620b503cf5"],

Cell[BoxData["49"], "Output",
 CellChangeTimes->{3.8772760765209017`*^9},
 CellLabel->"Out[52]=",ExpressionUUID->"02d1e6da-806d-416a-b544-a16619606e66"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GraphData", "[", 
  RowBox[{"\"\<ContiguousUSAGraph\>\"", ",", "\"\<ChromaticNumber\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8772761123166723`*^9, 3.8772761137038326`*^9}, {
  3.877276177160389*^9, 3.877276192768671*^9}},
 CellLabel->"In[54]:=",ExpressionUUID->"058dbe4c-21a5-4af4-beab-b1d0f1d666ce"],

Cell[BoxData["4"], "Output",
 CellChangeTimes->{{3.877276187812787*^9, 3.8772761929718394`*^9}},
 CellLabel->"Out[54]=",ExpressionUUID->"68930ea9-c25f-4ae7-94d2-aa2577a05a07"]
}, Open  ]],

Cell["The minimum number of colors possible is 4.", "Text",
 CellChangeTimes->{{3.877276197133191*^9, 
  3.877276205347638*^9}},ExpressionUUID->"98bbe57f-8ece-485d-b111-\
911b3b9d25b3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindVertexColoring", "[", 
  RowBox[{"GraphData", "[", "\"\<ContiguousUSAGraph\>\"", "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8772762066444416`*^9, 3.8772762171749787`*^9}},
 CellLabel->"In[55]:=",ExpressionUUID->"c2230d97-da35-44f3-a993-3f93dca4fdee"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "3", ",", "1", ",", "2", ",", "2", ",", "1", ",", "3", ",", "1", ",", "2", 
   ",", "1", ",", "2", ",", "2", ",", "4", ",", "3", ",", "3", ",", "1", ",", 
   "1", ",", "2", ",", "3", ",", "1", ",", "3", ",", "3", ",", "2", ",", "1", 
   ",", "1", ",", "1", ",", "3", ",", "2", ",", "1", ",", "3", ",", "2", ",", 
   "3", ",", "1", ",", "3", ",", "1", ",", "1", ",", "2", ",", "2", ",", "2", 
   ",", "1", ",", "3", ",", "2", ",", "3", ",", "1", ",", "4", ",", "1", ",", 
   "1", ",", "3", ",", "2", ",", "3"}], "}"}]], "Output",
 CellChangeTimes->{3.8772762183419757`*^9},
 CellLabel->"Out[55]=",ExpressionUUID->"880bcbd5-10ef-4fa9-9f5c-82a35e1bffc0"]
}, Open  ]],

Cell["I can use a resource function I created to color a graph:", "Text",
 CellChangeTimes->{{3.8772762210894947`*^9, 
  3.8772762306108437`*^9}},ExpressionUUID->"7cf7c94c-addf-47da-875a-\
d27a9491605a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ResourceSearch", "[", "\"\<*color*graph*\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.877276232563897*^9, 3.8772762635145736`*^9}},
 CellLabel->"In[57]:=",ExpressionUUID->"c0254b0e-358c-4976-ad5f-4f8650e53a66"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> {<|
       "Name" -> "ColorGraphEdges", "ResourceType" -> "Function", 
        "ResourceObject" -> 
        ResourceObject[<|
          "Name" -> "ColorGraphEdges", "ShortName" -> "ColorGraphEdges", 
           "UUID" -> "bc9940b2-bf6e-4421-aa7f-5f59a15d314b", "ResourceType" -> 
           "Function", "Version" -> "1.0.0", "Description" -> 
           "Color the edges of a graph so no edges incident to each other \
have the same color", "RepositoryLocation" -> 
           URL["https://www.wolframcloud.com/obj/resourcesystem/api/1.0"], 
           "SymbolName" -> 
           "FunctionRepository`$c48a7ef4e1574db5871291a16ac0ea5d`\
ColorGraphEdges"|>], "Description" -> 
        "Color the edges of a graph so no edges incident to each other have \
the same color", "Location" -> URL["https://resources.wolframcloud.com"], 
        "DocumentationLink" -> 
        URL["https://resources.wolframcloud.com/FunctionRepository/resources/\
ColorGraphEdges"]|>, <|
       "Name" -> "ColorGraphVertices", "ResourceType" -> "Function", 
        "ResourceObject" -> 
        ResourceObject[<|
          "Name" -> "ColorGraphVertices", "ShortName" -> "ColorGraphVertices",
            "UUID" -> "d3137161-1d52-44a8-a00d-801ae32c4e37", "ResourceType" -> 
           "Function", "Version" -> "1.0.0", "Description" -> 
           "Color the vertices in a graph with no adjacent vertices sharing a \
color", "RepositoryLocation" -> 
           URL["https://www.wolframcloud.com/obj/resourcesystem/api/1.0"], 
           "SymbolName" -> 
           "FunctionRepository`$055e89d946aa47f28a60e5055fc8d298`\
ColorGraphVertices"|>], "Description" -> 
        "Color the vertices in a graph with no adjacent vertices sharing a \
color", "Location" -> URL["https://resources.wolframcloud.com"], 
        "DocumentationLink" -> 
        URL["https://resources.wolframcloud.com/FunctionRepository/resources/\
ColorGraphVertices"]|>}, "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "Name"} -> 
        1, {All, "ResourceType"} -> 1, {All, "ResourceObject"} -> 
        1, {All, "Description"} -> 1, {All, "Location"} -> 
        1, {All, "DocumentationLink"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "Name" -> TypeSystem`PackageScope`AtomShape[201.60000000000002`], 
            "ResourceType" -> 
            TypeSystem`PackageScope`AtomShape[89.60000000000001], 
            "ResourceObject" -> TypeSystem`PackageScope`AtomShape[60], 
            "Description" -> TypeSystem`PackageScope`AtomShape[560.], 
            "Location" -> TypeSystem`PackageScope`AtomShape[60], 
            "DocumentationLink" -> TypeSystem`PackageScope`AtomShape[60]|>], 
          DirectedInfinity[1], 6, {All}]], 2, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{
        "Name", "ResourceType", "ResourceObject", "Description", "Location", 
         "DocumentationLink"}, {
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[ResourceObject], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[URL], 
         TypeSystem`Atom[URL]}], 2], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "Name"} -> 
        1, {All, "ResourceType"} -> 1, {All, "ResourceObject"} -> 
        1, {All, "Description"} -> 1, {All, "Location"} -> 
        1, {All, "DocumentationLink"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "Name" -> TypeSystem`PackageScope`AtomShape[201.60000000000002`], 
            "ResourceType" -> 
            TypeSystem`PackageScope`AtomShape[89.60000000000001], 
            "ResourceObject" -> TypeSystem`PackageScope`AtomShape[60], 
            "Description" -> TypeSystem`PackageScope`AtomShape[560.], 
            "Location" -> TypeSystem`PackageScope`AtomShape[60], 
            "DocumentationLink" -> TypeSystem`PackageScope`AtomShape[60]|>], 
          DirectedInfinity[1], 6, {All}]], 2, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{
        "Name", "ResourceType", "ResourceObject", "Description", "Location", 
         "DocumentationLink"}, {
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[ResourceObject], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[URL], 
         TypeSystem`Atom[URL]}], 2], "Path" -> {}, "DisplayedRowCount" -> 2, 
     "DisplayedColumnCount" -> 6, "DataRowCount" -> 2, "DataColumnCount" -> 6,
      "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Name", 
                  Style[
                  "Name", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Name"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Name"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["ResourceType", 
                  Style[
                  "ResourceType", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "ResourceType"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "ResourceType"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["ResourceObject", 
                  Style[
                  "ResourceObject", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "ResourceObject"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "ResourceObject"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Description", 
                  Style[
                  "Description", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Description"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Description"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Location", 
                  Style[
                  "Location", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Location"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Location"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["DocumentationLink", 
                  Style[
                  "DocumentationLink", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "DocumentationLink"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "DocumentationLink"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation["ColorGraphEdges", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{201.60000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Function", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["ResourceType"]}, "Item", False], "Mouse"], 
              ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                
                TemplateBox[{
                 "\"ResourceObject\"", "\"[\"", "\"\\\"\"", 
                  "\"ColorGraphEdges\"", "\"\\\"\"", "\"]\""}, "RowDefault"]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["ResourceObject"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
              "Color the edges of a graph so no edges incident to each other \
have the same color", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Description"]}, "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Hyperlink["https://resources.wolframcloud.com", 
                URL["https://resources.wolframcloud.com"]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Location"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Hyperlink[
               "https://resources.wolframcloud.com/FunctionReposit...", 
                URL[
                "https://resources.wolframcloud.com/FunctionRepository/\
resources/ColorGraphEdges"]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["DocumentationLink"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["ColorGraphVertices", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{201.60000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Function", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["ResourceType"]}, "Item", False], "Mouse"], 
              ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                
                TemplateBox[{
                 "\"ResourceObject\"", "\"[\"", "\"\\\"\"", 
                  "\"ColorGraphVertices\"", "\"\\\"\"", "\"]\""}, 
                 "RowDefault"]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["ResourceObject"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
              "Color the vertices in a graph with no adjacent vertices \
sharing a color", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Description"]}, "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Hyperlink["https://resources.wolframcloud.com", 
                URL["https://resources.wolframcloud.com"]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Location"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Hyperlink[
               "https://resources.wolframcloud.com/FunctionReposit...", 
                URL[
                "https://resources.wolframcloud.com/FunctionRepository/\
resources/ColorGraphVertices"]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["DocumentationLink"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{1081., {46.13403328722343, 51.86596671277657}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{1081., {46.13403328722343, 51.86596671277657}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.877276253656949*^9, 3.877276268648224*^9}},
 CellLabel->"Out[57]=",ExpressionUUID->"044e32cf-c194-4f4d-85db-44594355477b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PersistResourceFunction", "[", 
  RowBox[{"{", "\"\<ColorGraphVertices\>\"", "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.877276270971098*^9, 3.877276284047182*^9}},
 CellLabel->"In[58]:=",ExpressionUUID->"fec78320-b90e-4726-8f44-d2d9a8d7d13f"],

Cell[BoxData[
 RowBox[{"{", 
  InterpretationBox[
   RowBox[{
    TagBox["Success",
     "SummaryHead"], "[", 
    DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
     TemplateBox[{
       PaneSelectorBox[{False -> GridBox[{{
             PaneBox[
              ButtonBox[
               DynamicBox[
                FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
               ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
               BaseStyle -> {}, Evaluator -> Automatic, Method -> 
               "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
              Dynamic[{
                Automatic, 
                 3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])}]], 
             FrameBox[
              StyleBox["\"\[Checkmark]\"", 
               Directive[
                RGBColor[
                0.3607843137254902, 0.596078431372549, 0.3803921568627451], 
                25], StripOnInput -> False], ContentPadding -> False, 
              FrameStyle -> None, FrameMargins -> {{0, 0}, {0, 0}}, 
              StripOnInput -> False], 
             GridBox[{{
                RowBox[{
                  TagBox[
                   TemplateBox[{"\"Message\"", "\": \""}, "RowDefault"], 
                   "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                  TagBox[
                  "\"Successfully stored ColorGraphVertices as an \
initialization symbol.\"", "SummaryItem"]}]}, {
                RowBox[{
                  TagBox[
                   
                   TemplateBox[{"\"PersistenceLocation\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox[
                   InterpretationBox[
                    RowBox[{
                    TagBox["PersistenceLocation", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GraphicsBox[{
                    Thickness[0.04081632653061224], {
                    FaceForm[{
                    RGBColor[0.749, 0.749, 0.749], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGZigAFlBwht7oCLr7ihKGNir7nDlhNl++ZLKUHF
LaC0Ihr/hz2Mv6FksgRL2Dt7VPkH9jDzYHxU+2D8D/Yw/oHvwY+Xzr5jj2oe
DPxA5TfAzGFgiEqxvu/Pa+GAKm/hADMPxkexD843dYDxIe41dUA1z8wB1T4o
n0EVzvcx73RMeKqMJq/scN+/d3peEYIP8z8AUyhEVw==
                    "]]}, {
                    RGBColor[1., 1., 1.], 
                    Opacity[1.], 
                    CapForm["Round"], 
                    JoinForm["Round"], 
                    
                    JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIFIGYC4pASlen/AwwcGMBAxAHM/4Dg7zOYqSWx1dCh
1t40bpeniMP9B9yTVzYZOlhuOVG2T17KIWz+6rU34g0dKl+qGXLoyDkcv7O1
pUbA0OHF75UfL/UqOBx1Wpt576O+gwpb41RnbiWHP6ffnTx8SNchSSDCckuH
skOeScN2BydtB441MlEp1ipw/qdLvkkCEmoOZkBu0yJtiP7TGg6SasGsi4V0
Hc5/D3689LaGw6L0za+KTXUdWl8H7pBr1XXYd1BcLdhV10EeJDBP30Fo6d6D
4mm6UP8YOVx0ufHhC5cGnM/k28Lrv14Jzg8z0FopfEEJrr+oq+/Jp/tKcPPB
7mdShtv/oBCooEgF7r5lQOvULqvA3Q/jw/wHdn+QEtz/geunpHYoK8DDh69w
TfftF9Lw8Hs3dRNP4RopePiuSQgJUleQgoe/V8AfieJwSXj83BL65Hg+TQYe
f2D+MznU+EWKbwBI8b86
                    "], CurveClosed -> {1}]}}, AspectRatio -> Automatic, 
                    ImageSize -> {25., 25.}, 
                    PlotRange -> {{0., 24.5}, {0., 24.5}}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Local\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GraphicsBox[{
                    Thickness[0.04081632653061224], {
                    FaceForm[{
                    RGBColor[0.749, 0.749, 0.749], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGZigAFlBwht7oCLr7ihKGNir7nDlhNl++ZLKUHF
LaC0Ihr/hz2Mv6FksgRL2Dt7VPkH9jDzYHxU+2D8D/Yw/oHvwY+Xzr5jj2oe
DPxA5TfAzGFgiEqxvu/Pa+GAKm/hADMPxkexD843dYDxIe41dUA1z8wB1T4o
n0EVzvcx73RMeKqMJq/scN+/d3peEYIP8z8AUyhEVw==
                    "]]}, {
                    RGBColor[1., 1., 1.], 
                    Opacity[1.], 
                    CapForm["Round"], 
                    JoinForm["Round"], 
                    
                    JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIFIGYC4pASlen/AwwcGMBAxAHM/4Dg7zOYqSWx1dCh
1t40bpeniMP9B9yTVzYZOlhuOVG2T17KIWz+6rU34g0dKl+qGXLoyDkcv7O1
pUbA0OHF75UfL/UqOBx1Wpt576O+gwpb41RnbiWHP6ffnTx8SNchSSDCckuH
skOeScN2BydtB441MlEp1ipw/qdLvkkCEmoOZkBu0yJtiP7TGg6SasGsi4V0
Hc5/D3689LaGw6L0za+KTXUdWl8H7pBr1XXYd1BcLdhV10EeJDBP30Fo6d6D
4mm6UP8YOVx0ufHhC5cGnM/k28Lrv14Jzg8z0FopfEEJrr+oq+/Jp/tKcPPB
7mdShtv/oBCooEgF7r5lQOvULqvA3Q/jw/wHdn+QEtz/geunpHYoK8DDh69w
TfftF9Lw8Hs3dRNP4RopePiuSQgJUleQgoe/V8AfieJwSXj83BL65Hg+TQYe
f2D+MznU+EWKbwBI8b86
                    "], CurveClosed -> {1}]}}, AspectRatio -> Automatic, 
                    ImageSize -> {25., 25.}, 
                    PlotRange -> {{0., 24.5}, {0., 24.5}}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Local\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Base: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    "\"file:///C:/Users/Hannah/AppData/Roaming/Wolfram/\
Objects/Persistence\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                    PersistenceLocation[
                    "Local", 
                    "file:///C:/Users/Hannah/AppData/Roaming/Wolfram/Objects/\
Persistence", 
                    Hold[Persistence`Data`a16937289918179914857$7]], 
                    Selectable -> False, Editable -> False, 
                    SelectWithContents -> True], "SummaryItem"]}]}}, 
              GridBoxAlignment -> {
               "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
              False, GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {
               "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
              BaseStyle -> {
               ShowStringCharacters -> False, NumberMarks -> False, 
                PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
           AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {1, 1}], True -> GridBox[{{
             PaneBox[
              ButtonBox[
               DynamicBox[
                FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
               ButtonFunction :> (Typeset`open$$ = False), Appearance -> None,
                BaseStyle -> {}, Evaluator -> Automatic, Method -> 
               "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
              Dynamic[{
                Automatic, 
                 3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])}]], 
             FrameBox[
              StyleBox["\"\[Checkmark]\"", 
               Directive[
                RGBColor[
                0.3607843137254902, 0.596078431372549, 0.3803921568627451], 
                25], StripOnInput -> False], ContentPadding -> False, 
              FrameStyle -> None, FrameMargins -> {{0, 0}, {0, 0}}, 
              StripOnInput -> False], 
             GridBox[{{
                RowBox[{
                  TagBox[
                   TemplateBox[{"\"Message\"", "\": \""}, "RowDefault"], 
                   "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                  TagBox[
                  "\"Successfully stored ColorGraphVertices as an \
initialization symbol.\"", "SummaryItem"]}]}, {
                RowBox[{
                  TagBox[
                   
                   TemplateBox[{"\"PersistenceLocation\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox[
                   InterpretationBox[
                    RowBox[{
                    TagBox["PersistenceLocation", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GraphicsBox[{
                    Thickness[0.04081632653061224], {
                    FaceForm[{
                    RGBColor[0.749, 0.749, 0.749], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGZigAFlBwht7oCLr7ihKGNir7nDlhNl++ZLKUHF
LaC0Ihr/hz2Mv6FksgRL2Dt7VPkH9jDzYHxU+2D8D/Yw/oHvwY+Xzr5jj2oe
DPxA5TfAzGFgiEqxvu/Pa+GAKm/hADMPxkexD843dYDxIe41dUA1z8wB1T4o
n0EVzvcx73RMeKqMJq/scN+/d3peEYIP8z8AUyhEVw==
                    "]]}, {
                    RGBColor[1., 1., 1.], 
                    Opacity[1.], 
                    CapForm["Round"], 
                    JoinForm["Round"], 
                    
                    JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIFIGYC4pASlen/AwwcGMBAxAHM/4Dg7zOYqSWx1dCh
1t40bpeniMP9B9yTVzYZOlhuOVG2T17KIWz+6rU34g0dKl+qGXLoyDkcv7O1
pUbA0OHF75UfL/UqOBx1Wpt576O+gwpb41RnbiWHP6ffnTx8SNchSSDCckuH
skOeScN2BydtB441MlEp1ipw/qdLvkkCEmoOZkBu0yJtiP7TGg6SasGsi4V0
Hc5/D3689LaGw6L0za+KTXUdWl8H7pBr1XXYd1BcLdhV10EeJDBP30Fo6d6D
4mm6UP8YOVx0ufHhC5cGnM/k28Lrv14Jzg8z0FopfEEJrr+oq+/Jp/tKcPPB
7mdShtv/oBCooEgF7r5lQOvULqvA3Q/jw/wHdn+QEtz/geunpHYoK8DDh69w
TfftF9Lw8Hs3dRNP4RopePiuSQgJUleQgoe/V8AfieJwSXj83BL65Hg+TQYe
f2D+MznU+EWKbwBI8b86
                    "], CurveClosed -> {1}]}}, AspectRatio -> Automatic, 
                    ImageSize -> {25., 25.}, 
                    PlotRange -> {{0., 24.5}, {0., 24.5}}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Local\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GraphicsBox[{
                    Thickness[0.04081632653061224], {
                    FaceForm[{
                    RGBColor[0.749, 0.749, 0.749], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGZigAFlBwht7oCLr7ihKGNir7nDlhNl++ZLKUHF
LaC0Ihr/hz2Mv6FksgRL2Dt7VPkH9jDzYHxU+2D8D/Yw/oHvwY+Xzr5jj2oe
DPxA5TfAzGFgiEqxvu/Pa+GAKm/hADMPxkexD843dYDxIe41dUA1z8wB1T4o
n0EVzvcx73RMeKqMJq/scN+/d3peEYIP8z8AUyhEVw==
                    "]]}, {
                    RGBColor[1., 1., 1.], 
                    Opacity[1.], 
                    CapForm["Round"], 
                    JoinForm["Round"], 
                    
                    JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIFIGYC4pASlen/AwwcGMBAxAHM/4Dg7zOYqSWx1dCh
1t40bpeniMP9B9yTVzYZOlhuOVG2T17KIWz+6rU34g0dKl+qGXLoyDkcv7O1
pUbA0OHF75UfL/UqOBx1Wpt576O+gwpb41RnbiWHP6ffnTx8SNchSSDCckuH
skOeScN2BydtB441MlEp1ipw/qdLvkkCEmoOZkBu0yJtiP7TGg6SasGsi4V0
Hc5/D3689LaGw6L0za+KTXUdWl8H7pBr1XXYd1BcLdhV10EeJDBP30Fo6d6D
4mm6UP8YOVx0ufHhC5cGnM/k28Lrv14Jzg8z0FopfEEJrr+oq+/Jp/tKcPPB
7mdShtv/oBCooEgF7r5lQOvULqvA3Q/jw/wHdn+QEtz/geunpHYoK8DDh69w
TfftF9Lw8Hs3dRNP4RopePiuSQgJUleQgoe/V8AfieJwSXj83BL65Hg+TQYe
f2D+MznU+EWKbwBI8b86
                    "], CurveClosed -> {1}]}}, AspectRatio -> Automatic, 
                    ImageSize -> {25., 25.}, 
                    PlotRange -> {{0., 24.5}, {0., 24.5}}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Local\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Base: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    "\"file:///C:/Users/Hannah/AppData/Roaming/Wolfram/\
Objects/Persistence\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                    PersistenceLocation[
                    "Local", 
                    "file:///C:/Users/Hannah/AppData/Roaming/Wolfram/Objects/\
Persistence", 
                    Hold[Persistence`Data`a16937289918179914857$7]], 
                    Selectable -> False, Editable -> False, 
                    SelectWithContents -> True], "SummaryItem"]}]}, {
                RowBox[{
                  TagBox[
                   TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                   "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                  TagBox["\"InstalledResourceFunction\"", "SummaryItem"]}]}}, 
              GridBoxAlignment -> {
               "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
              False, GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {
               "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
              BaseStyle -> {
               ShowStringCharacters -> False, NumberMarks -> False, 
                PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
           AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {1, 1}]}, 
        Dynamic[Typeset`open$$], ImageSize -> Automatic]},
      "SummaryPanel"],
     DynamicModuleValues:>{}], "]"}],
   Success[
   "InstalledResourceFunction", <|
    "MessageTemplate" :> 
     "Successfully stored `symName` as an initialization symbol.", 
     "MessageParameters" -> <|"symName" -> "ColorGraphVertices"|>, 
     "PersistenceLocation" -> 
     PersistenceLocation[
      "Local", "file:///C:/Users/Hannah/AppData/Roaming/Wolfram/Objects/\
Persistence", 
       Hold[Persistence`Data`a16937289918179914857$7]]|>],
   Editable->False,
   SelectWithContents->True,
   Selectable->False], "}"}]], "Output",
 CellChangeTimes->{3.8772762852762136`*^9},
 CellLabel->"Out[58]=",ExpressionUUID->"ea4ffc2b-e99b-45d5-b390-69ee881abe42"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ColorGraphVertices", "[", 
  RowBox[{"GraphData", "[", "\"\<ContiguousUSAGraph\>\"", "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8772762855262437`*^9, 3.8772762910937986`*^9}},
 CellLabel->"In[59]:=",ExpressionUUID->"cce883ae-2892-4521-a4b6-d5d2346c62ad"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
       20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37,
       38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49}, {Null, 
       SparseArray[
       Automatic, {49, 49}, 0, {
        1, {{0, 4, 6, 11, 15, 23, 29, 32, 40, 46, 50, 54, 57, 61, 66, 71, 75, 
          81, 85, 91, 97, 100, 105, 110, 112, 114, 119, 125, 128, 131, 137, 
          141, 143, 149, 154, 158, 164, 168, 174, 178, 180, 184, 191, 194, 
          199, 204, 207, 210, 211, 214}, {{2}, {3}, {4}, {5}, {1}, {3}, {1}, {
          2}, {5}, {31}, {32}, {1}, {5}, {6}, {7}, {1}, {3}, {4}, {6}, {8}, {
          27}, {31}, {42}, {4}, {5}, {7}, {8}, {9}, {10}, {4}, {6}, {10}, {
          5}, {6}, {9}, {18}, {19}, {33}, {34}, {42}, {6}, {8}, {10}, {13}, {
          17}, {18}, {6}, {7}, {9}, {13}, {12}, {13}, {14}, {15}, {11}, {
          14}, {16}, {9}, {10}, {11}, {17}, {11}, {12}, {15}, {16}, {38}, {
          11}, {14}, {17}, {20}, {38}, {12}, {14}, {38}, {40}, {9}, {13}, {
          15}, {18}, {19}, {20}, {8}, {9}, {17}, {19}, {8}, {17}, {18}, {
          20}, {33}, {36}, {15}, {17}, {19}, {36}, {38}, {39}, {22}, {23}, {
          24}, {21}, {23}, {24}, {46}, {47}, {21}, {22}, {29}, {30}, {47}, {
          21}, {22}, {26}, {27}, {25}, {27}, {28}, {30}, {45}, {5}, {25}, {
          26}, {31}, {42}, {45}, {26}, {29}, {30}, {23}, {28}, {30}, {23}, {
          26}, {28}, {29}, {44}, {45}, {3}, {5}, {27}, {32}, {3}, {31}, {8}, {
          19}, {34}, {35}, {36}, {37}, {8}, {33}, {37}, {41}, {42}, {33}, {
          36}, {37}, {49}, {19}, {20}, {33}, {35}, {39}, {49}, {33}, {34}, {
          35}, {43}, {14}, {15}, {16}, {20}, {39}, {40}, {20}, {36}, {38}, {
          49}, {16}, {38}, {34}, {42}, {43}, {44}, {5}, {8}, {27}, {34}, {
          41}, {44}, {45}, {37}, {41}, {44}, {30}, {41}, {42}, {43}, {45}, {
          26}, {27}, {30}, {42}, {44}, {22}, {47}, {48}, {22}, {23}, {46}, {
          46}, {35}, {36}, {39}}}, Pattern}]}, {
      VertexStyle -> {
        48 -> RGBColor[0.97, 0.606, 0.081], 5 -> RGBColor[0.97, 0.606, 0.081],
          15 -> RGBColor[0.97, 0.606, 0.081], 22 -> 
         RGBColor[0.97, 0.606, 0.081], 9 -> RGBColor[0.97, 0.606, 0.081], 46 -> 
         RGBColor[0.34398, 0.49112, 0.89936], 36 -> 
         RGBColor[0.34398, 0.49112, 0.89936], 14 -> 
         RGBColor[0.91, 0.318, 0.243], 19 -> RGBColor[0.97, 0.606, 0.081], 6 -> 
         RGBColor[0.91, 0.318, 0.243], 26 -> RGBColor[0.448, 0.69232, 0.1538],
          18 -> RGBColor[0.91, 0.318, 0.243], 2 -> 
         RGBColor[0.97, 0.606, 0.081], 38 -> 
         RGBColor[0.34398, 0.49112, 0.89936], 12 -> 
         RGBColor[0.448, 0.69232, 0.1538], 17 -> 
         RGBColor[0.34398, 0.49112, 0.89936], 47 -> 
         RGBColor[0.91, 0.318, 0.243], 31 -> RGBColor[0.91, 0.318, 0.243], 34 -> 
         RGBColor[0.97, 0.606, 0.081], 7 -> RGBColor[0.97, 0.606, 0.081], 37 -> 
         RGBColor[0.34398, 0.49112, 0.89936], 39 -> 
         RGBColor[0.97, 0.606, 0.081], 10 -> 
         RGBColor[0.34398, 0.49112, 0.89936], 24 -> 
         RGBColor[0.34398, 0.49112, 0.89936], 44 -> 
         RGBColor[0.34398, 0.49112, 0.89936], 30 -> 
         RGBColor[0.91, 0.318, 0.243], 8 -> 
         RGBColor[0.34398, 0.49112, 0.89936], 33 -> 
         RGBColor[0.91, 0.318, 0.243], 11 -> 
         RGBColor[0.34398, 0.49112, 0.89936], 13 -> 
         RGBColor[0.91, 0.318, 0.243], 29 -> RGBColor[0.97, 0.606, 0.081], 1 -> 
         RGBColor[0.91, 0.318, 0.243], 43 -> RGBColor[0.97, 0.606, 0.081], 3 -> 
         RGBColor[0.34398, 0.49112, 0.89936], 21 -> 
         RGBColor[0.91, 0.318, 0.243], 27 -> 
         RGBColor[0.34398, 0.49112, 0.89936], 28 -> 
         RGBColor[0.34398, 0.49112, 0.89936], 25 -> 
         RGBColor[0.97, 0.606, 0.081], 4 -> 
         RGBColor[0.34398, 0.49112, 0.89936], 32 -> 
         RGBColor[0.97, 0.606, 0.081], 16 -> RGBColor[0.97, 0.606, 0.081], 49 -> 
         RGBColor[0.91, 0.318, 0.243], 42 -> RGBColor[0.91, 0.318, 0.243], 40 -> 
         RGBColor[0.91, 0.318, 0.243], 35 -> RGBColor[0.97, 0.606, 0.081], 41 -> 
         RGBColor[0.448, 0.69232, 0.1538], 45 -> RGBColor[0.97, 0.606, 0.081],
          20 -> RGBColor[0.91, 0.318, 0.243], 23 -> 
         RGBColor[0.34398, 0.49112, 0.89936]}, 
       VertexCoordinates -> {{7, 1}, {8, 0}, {8, 1}, {6, 1}, {7, 2}, {5, 2}, {
        5, 1}, {5, 3}, {4, 2}, {4, 1}, {2, 2}, {0, 3}, {3, 2}, {1, 3}, {2, 
        3}, {1, 4}, {3, 3}, {4, 3}, {4, 4}, {3, 4}, {11, 4}, {11, 5}, {10, 
        5}, {12, 4}, {9, 2}, {9, 3}, {8, 2}, {10, 3}, {10, 4}, {9, 4}, {9, 
        1}, {9, 0}, {5, 4}, {6, 4}, {5, 5}, {4, 5}, {6, 5}, {2, 4}, {3, 5}, {
        1, 5}, {7, 4}, {7, 3}, {7, 5}, {8, 4}, {8, 3}, {11, 6}, {10, 6}, {12, 
        6}, {4, 6}}}]]}, 
    TagBox[GraphicsGroupBox[GraphicsComplexBox[CompressedData["
1:eJx1kjEOgzAMRa1OGTNkYGAwKEKsPUFzhh6hEjNX5wgUhd+KJ2IJWc//m9iB
4bO+l4eZPb/PkWv0pebtVbMXu4RD78DqtzOnBssvDmeO8Ef4DbpC/QG6+lgP
0CPqnIfcqk8N1p4ZPMM/Yk6xznHoGbqY7yNr7995dp1L/g6cyr0vwc/vzvtq
/Qc9/OIAlt/hd/h1/5org2fwf+8dO2soag==
       "], {
        {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
         ArrowBox[{{1, 2}, {1, 3}, {1, 4}, {1, 5}, {2, 3}, {3, 5}, {3, 31}, {
          3, 32}, {4, 5}, {4, 6}, {4, 7}, {5, 6}, {5, 8}, {5, 27}, {5, 31}, {
          5, 42}, {6, 7}, {6, 8}, {6, 9}, {6, 10}, {7, 10}, {8, 9}, {8, 18}, {
          8, 19}, {8, 33}, {8, 34}, {8, 42}, {9, 10}, {9, 13}, {9, 17}, {9, 
          18}, {10, 13}, {11, 12}, {11, 13}, {11, 14}, {11, 15}, {12, 14}, {
          12, 16}, {13, 17}, {14, 15}, {14, 16}, {14, 38}, {15, 17}, {15, 
          20}, {15, 38}, {16, 38}, {16, 40}, {17, 18}, {17, 19}, {17, 20}, {
          18, 19}, {19, 20}, {19, 33}, {19, 36}, {20, 36}, {20, 38}, {20, 
          39}, {21, 22}, {21, 23}, {21, 24}, {22, 23}, {22, 24}, {22, 46}, {
          22, 47}, {23, 29}, {23, 30}, {23, 47}, {25, 26}, {25, 27}, {26, 
          27}, {26, 28}, {26, 30}, {26, 45}, {27, 31}, {27, 42}, {27, 45}, {
          28, 29}, {28, 30}, {29, 30}, {30, 44}, {30, 45}, {31, 32}, {33, 
          34}, {33, 35}, {33, 36}, {33, 37}, {34, 37}, {34, 41}, {34, 42}, {
          35, 36}, {35, 37}, {35, 49}, {36, 39}, {36, 49}, {37, 43}, {38, 
          39}, {38, 40}, {39, 49}, {41, 42}, {41, 43}, {41, 44}, {42, 44}, {
          42, 45}, {43, 44}, {44, 45}, {46, 47}, {46, 48}}, 
          0.07217898832684824]}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         {RGBColor[0.91, 0.318, 0.243], DiskBox[1, 0.07217898832684824]}, 
         {RGBColor[0.97, 0.606, 0.081], DiskBox[2, 0.07217898832684824]}, 
         {RGBColor[0.34398, 0.49112, 0.89936], 
          DiskBox[3, 0.07217898832684824]}, 
         {RGBColor[0.34398, 0.49112, 0.89936], 
          DiskBox[4, 0.07217898832684824]}, 
         {RGBColor[0.97, 0.606, 0.081], DiskBox[5, 0.07217898832684824]}, 
         {RGBColor[0.91, 0.318, 0.243], DiskBox[6, 0.07217898832684824]}, 
         {RGBColor[0.97, 0.606, 0.081], DiskBox[7, 0.07217898832684824]}, 
         {RGBColor[0.34398, 0.49112, 0.89936], 
          DiskBox[8, 0.07217898832684824]}, 
         {RGBColor[0.97, 0.606, 0.081], DiskBox[9, 0.07217898832684824]}, 
         {RGBColor[0.34398, 0.49112, 0.89936], 
          DiskBox[10, 0.07217898832684824]}, 
         {RGBColor[0.34398, 0.49112, 0.89936], 
          DiskBox[11, 0.07217898832684824]}, 
         {RGBColor[0.448, 0.69232, 0.1538], DiskBox[12, 0.07217898832684824]}, 
         {RGBColor[0.91, 0.318, 0.243], DiskBox[13, 0.07217898832684824]}, 
         {RGBColor[0.91, 0.318, 0.243], DiskBox[14, 0.07217898832684824]}, 
         {RGBColor[0.97, 0.606, 0.081], DiskBox[15, 0.07217898832684824]}, 
         {RGBColor[0.97, 0.606, 0.081], DiskBox[16, 0.07217898832684824]}, 
         {RGBColor[0.34398, 0.49112, 0.89936], 
          DiskBox[17, 0.07217898832684824]}, 
         {RGBColor[0.91, 0.318, 0.243], DiskBox[18, 0.07217898832684824]}, 
         {RGBColor[0.97, 0.606, 0.081], DiskBox[19, 0.07217898832684824]}, 
         {RGBColor[0.91, 0.318, 0.243], DiskBox[20, 0.07217898832684824]}, 
         {RGBColor[0.91, 0.318, 0.243], DiskBox[21, 0.07217898832684824]}, 
         {RGBColor[0.97, 0.606, 0.081], DiskBox[22, 0.07217898832684824]}, 
         {RGBColor[0.34398, 0.49112, 0.89936], 
          DiskBox[23, 0.07217898832684824]}, 
         {RGBColor[0.34398, 0.49112, 0.89936], 
          DiskBox[24, 0.07217898832684824]}, 
         {RGBColor[0.97, 0.606, 0.081], DiskBox[25, 0.07217898832684824]}, 
         {RGBColor[0.448, 0.69232, 0.1538], DiskBox[26, 0.07217898832684824]}, 
         {RGBColor[0.34398, 0.49112, 0.89936], 
          DiskBox[27, 0.07217898832684824]}, 
         {RGBColor[0.34398, 0.49112, 0.89936], 
          DiskBox[28, 0.07217898832684824]}, 
         {RGBColor[0.97, 0.606, 0.081], DiskBox[29, 0.07217898832684824]}, 
         {RGBColor[0.91, 0.318, 0.243], DiskBox[30, 0.07217898832684824]}, 
         {RGBColor[0.91, 0.318, 0.243], DiskBox[31, 0.07217898832684824]}, 
         {RGBColor[0.97, 0.606, 0.081], DiskBox[32, 0.07217898832684824]}, 
         {RGBColor[0.91, 0.318, 0.243], DiskBox[33, 0.07217898832684824]}, 
         {RGBColor[0.97, 0.606, 0.081], DiskBox[34, 0.07217898832684824]}, 
         {RGBColor[0.97, 0.606, 0.081], DiskBox[35, 0.07217898832684824]}, 
         {RGBColor[0.34398, 0.49112, 0.89936], 
          DiskBox[36, 0.07217898832684824]}, 
         {RGBColor[0.34398, 0.49112, 0.89936], 
          DiskBox[37, 0.07217898832684824]}, 
         {RGBColor[0.34398, 0.49112, 0.89936], 
          DiskBox[38, 0.07217898832684824]}, 
         {RGBColor[0.97, 0.606, 0.081], DiskBox[39, 0.07217898832684824]}, 
         {RGBColor[0.91, 0.318, 0.243], DiskBox[40, 0.07217898832684824]}, 
         {RGBColor[0.448, 0.69232, 0.1538], DiskBox[41, 0.07217898832684824]}, 
         {RGBColor[0.91, 0.318, 0.243], DiskBox[42, 0.07217898832684824]}, 
         {RGBColor[0.97, 0.606, 0.081], DiskBox[43, 0.07217898832684824]}, 
         {RGBColor[0.34398, 0.49112, 0.89936], 
          DiskBox[44, 0.07217898832684824]}, 
         {RGBColor[0.97, 0.606, 0.081], DiskBox[45, 0.07217898832684824]}, 
         {RGBColor[0.34398, 0.49112, 0.89936], 
          DiskBox[46, 0.07217898832684824]}, 
         {RGBColor[0.91, 0.318, 0.243], DiskBox[47, 0.07217898832684824]}, 
         {RGBColor[0.97, 0.606, 0.081], DiskBox[48, 0.07217898832684824]}, 
         {RGBColor[0.91, 0.318, 0.243], DiskBox[49, 0.07217898832684824]}}}]],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->"NetworkGraphics",
  FormatType->TraditionalForm,
  FrameTicks->None]], "Output",
 CellChangeTimes->{3.877276291390667*^9},
 CellLabel->"Out[59]=",ExpressionUUID->"0d2f4930-86c1-4d62-80da-87d5c2e6bb56"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ColorGraphVertices", "[", 
  RowBox[{
   RowBox[{"GraphData", "[", "\"\<ContiguousUSAGraph\>\"", "]"}], ",", 
   RowBox[{"ImageSize", "->", "Large"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8772762855262437`*^9, 3.877276303617014*^9}},
 CellLabel->"In[60]:=",ExpressionUUID->"add4b26e-094f-48bc-b33e-d319ca88f570"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
       20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37,
       38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49}, {Null, 
       SparseArray[
       Automatic, {49, 49}, 0, {
        1, {{0, 4, 6, 11, 15, 23, 29, 32, 40, 46, 50, 54, 57, 61, 66, 71, 75, 
          81, 85, 91, 97, 100, 105, 110, 112, 114, 119, 125, 128, 131, 137, 
          141, 143, 149, 154, 158, 164, 168, 174, 178, 180, 184, 191, 194, 
          199, 204, 207, 210, 211, 214}, {{2}, {3}, {4}, {5}, {1}, {3}, {1}, {
          2}, {5}, {31}, {32}, {1}, {5}, {6}, {7}, {1}, {3}, {4}, {6}, {8}, {
          27}, {31}, {42}, {4}, {5}, {7}, {8}, {9}, {10}, {4}, {6}, {10}, {
          5}, {6}, {9}, {18}, {19}, {33}, {34}, {42}, {6}, {8}, {10}, {13}, {
          17}, {18}, {6}, {7}, {9}, {13}, {12}, {13}, {14}, {15}, {11}, {
          14}, {16}, {9}, {10}, {11}, {17}, {11}, {12}, {15}, {16}, {38}, {
          11}, {14}, {17}, {20}, {38}, {12}, {14}, {38}, {40}, {9}, {13}, {
          15}, {18}, {19}, {20}, {8}, {9}, {17}, {19}, {8}, {17}, {18}, {
          20}, {33}, {36}, {15}, {17}, {19}, {36}, {38}, {39}, {22}, {23}, {
          24}, {21}, {23}, {24}, {46}, {47}, {21}, {22}, {29}, {30}, {47}, {
          21}, {22}, {26}, {27}, {25}, {27}, {28}, {30}, {45}, {5}, {25}, {
          26}, {31}, {42}, {45}, {26}, {29}, {30}, {23}, {28}, {30}, {23}, {
          26}, {28}, {29}, {44}, {45}, {3}, {5}, {27}, {32}, {3}, {31}, {8}, {
          19}, {34}, {35}, {36}, {37}, {8}, {33}, {37}, {41}, {42}, {33}, {
          36}, {37}, {49}, {19}, {20}, {33}, {35}, {39}, {49}, {33}, {34}, {
          35}, {43}, {14}, {15}, {16}, {20}, {39}, {40}, {20}, {36}, {38}, {
          49}, {16}, {38}, {34}, {42}, {43}, {44}, {5}, {8}, {27}, {34}, {
          41}, {44}, {45}, {37}, {41}, {44}, {30}, {41}, {42}, {43}, {45}, {
          26}, {27}, {30}, {42}, {44}, {22}, {47}, {48}, {22}, {23}, {46}, {
          46}, {35}, {36}, {39}}}, Pattern}]}, {
      GraphLayout -> {"Dimension" -> 2}, ImageSize -> Large, 
       VertexCoordinates -> {{7, 1}, {8, 0}, {8, 1}, {6, 1}, {7, 2}, {5, 2}, {
        5, 1}, {5, 3}, {4, 2}, {4, 1}, {2, 2}, {0, 3}, {3, 2}, {1, 3}, {2, 
        3}, {1, 4}, {3, 3}, {4, 3}, {4, 4}, {3, 4}, {11, 4}, {11, 5}, {10, 
        5}, {12, 4}, {9, 2}, {9, 3}, {8, 2}, {10, 3}, {10, 4}, {9, 4}, {9, 
        1}, {9, 0}, {5, 4}, {6, 4}, {5, 5}, {4, 5}, {6, 5}, {2, 4}, {3, 5}, {
        1, 5}, {7, 4}, {7, 3}, {7, 5}, {8, 4}, {8, 3}, {11, 6}, {10, 6}, {12, 
        6}, {4, 6}}, 
       VertexStyle -> {
        20 -> RGBColor[0.91, 0.318, 0.243], 3 -> 
         RGBColor[0.34398, 0.49112, 0.89936], 28 -> 
         RGBColor[0.97, 0.606, 0.081], 1 -> RGBColor[0.91, 0.318, 0.243], 23 -> 
         RGBColor[0.97, 0.606, 0.081], 2 -> RGBColor[0.97, 0.606, 0.081], 41 -> 
         RGBColor[0.34398, 0.49112, 0.89936], 43 -> 
         RGBColor[0.97, 0.606, 0.081], 14 -> RGBColor[0.91, 0.318, 0.243], 36 -> 
         RGBColor[0.34398, 0.49112, 0.89936], 13 -> 
         RGBColor[0.91, 0.318, 0.243], 49 -> RGBColor[0.91, 0.318, 0.243], 16 -> 
         RGBColor[0.97, 0.606, 0.081], 46 -> RGBColor[0.97, 0.606, 0.081], 15 -> 
         RGBColor[0.97, 0.606, 0.081], 47 -> RGBColor[0.91, 0.318, 0.243], 21 -> 
         RGBColor[0.91, 0.318, 0.243], 9 -> RGBColor[0.97, 0.606, 0.081], 40 -> 
         RGBColor[0.91, 0.318, 0.243], 33 -> RGBColor[0.91, 0.318, 0.243], 26 -> 
         RGBColor[0.91, 0.318, 0.243], 38 -> 
         RGBColor[0.34398, 0.49112, 0.89936], 4 -> 
         RGBColor[0.34398, 0.49112, 0.89936], 7 -> 
         RGBColor[0.97, 0.606, 0.081], 48 -> 
         RGBColor[0.34398, 0.49112, 0.89936], 5 -> 
         RGBColor[0.97, 0.606, 0.081], 12 -> RGBColor[0.448, 0.69232, 0.1538],
          6 -> RGBColor[0.91, 0.318, 0.243], 27 -> 
         RGBColor[0.34398, 0.49112, 0.89936], 42 -> 
         RGBColor[0.91, 0.318, 0.243], 44 -> RGBColor[0.448, 0.69232, 0.1538],
          22 -> RGBColor[0.34398, 0.49112, 0.89936], 31 -> 
         RGBColor[0.91, 0.318, 0.243], 35 -> RGBColor[0.97, 0.606, 0.081], 17 -> 
         RGBColor[0.34398, 0.49112, 0.89936], 19 -> 
         RGBColor[0.97, 0.606, 0.081], 10 -> 
         RGBColor[0.34398, 0.49112, 0.89936], 37 -> 
         RGBColor[0.34398, 0.49112, 0.89936], 45 -> 
         RGBColor[0.97, 0.606, 0.081], 18 -> RGBColor[0.91, 0.318, 0.243], 11 -> 
         RGBColor[0.34398, 0.49112, 0.89936], 30 -> 
         RGBColor[0.34398, 0.49112, 0.89936], 25 -> 
         RGBColor[0.97, 0.606, 0.081], 24 -> RGBColor[0.97, 0.606, 0.081], 32 -> 
         RGBColor[0.97, 0.606, 0.081], 39 -> RGBColor[0.97, 0.606, 0.081], 8 -> 
         RGBColor[0.34398, 0.49112, 0.89936], 29 -> 
         RGBColor[0.91, 0.318, 0.243], 34 -> 
         RGBColor[0.97, 0.606, 0.081]}}]]}, 
    TagBox[GraphicsGroupBox[GraphicsComplexBox[CompressedData["
1:eJx1kjEOgzAMRa1OGTNkYGAwKEKsPUFzhh6hEjNX5wgUhd+KJ2IJWc//m9iB
4bO+l4eZPb/PkWv0pebtVbMXu4RD78DqtzOnBssvDmeO8Ef4DbpC/QG6+lgP
0CPqnIfcqk8N1p4ZPMM/Yk6xznHoGbqY7yNr7995dp1L/g6cyr0vwc/vzvtq
/Qc9/OIAlt/hd/h1/5org2fwf+8dO2soag==
       "], {
        {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
         ArrowBox[{{1, 2}, {1, 3}, {1, 4}, {1, 5}, {2, 3}, {3, 5}, {3, 31}, {
          3, 32}, {4, 5}, {4, 6}, {4, 7}, {5, 6}, {5, 8}, {5, 27}, {5, 31}, {
          5, 42}, {6, 7}, {6, 8}, {6, 9}, {6, 10}, {7, 10}, {8, 9}, {8, 18}, {
          8, 19}, {8, 33}, {8, 34}, {8, 42}, {9, 10}, {9, 13}, {9, 17}, {9, 
          18}, {10, 13}, {11, 12}, {11, 13}, {11, 14}, {11, 15}, {12, 14}, {
          12, 16}, {13, 17}, {14, 15}, {14, 16}, {14, 38}, {15, 17}, {15, 
          20}, {15, 38}, {16, 38}, {16, 40}, {17, 18}, {17, 19}, {17, 20}, {
          18, 19}, {19, 20}, {19, 33}, {19, 36}, {20, 36}, {20, 38}, {20, 
          39}, {21, 22}, {21, 23}, {21, 24}, {22, 23}, {22, 24}, {22, 46}, {
          22, 47}, {23, 29}, {23, 30}, {23, 47}, {25, 26}, {25, 27}, {26, 
          27}, {26, 28}, {26, 30}, {26, 45}, {27, 31}, {27, 42}, {27, 45}, {
          28, 29}, {28, 30}, {29, 30}, {30, 44}, {30, 45}, {31, 32}, {33, 
          34}, {33, 35}, {33, 36}, {33, 37}, {34, 37}, {34, 41}, {34, 42}, {
          35, 36}, {35, 37}, {35, 49}, {36, 39}, {36, 49}, {37, 43}, {38, 
          39}, {38, 40}, {39, 49}, {41, 42}, {41, 43}, {41, 44}, {42, 44}, {
          42, 45}, {43, 44}, {44, 45}, {46, 47}, {46, 48}}, 
          0.07217898832684824]}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         {RGBColor[0.91, 0.318, 0.243], DiskBox[1, 0.07217898832684824]}, 
         {RGBColor[0.97, 0.606, 0.081], DiskBox[2, 0.07217898832684824]}, 
         {RGBColor[0.34398, 0.49112, 0.89936], 
          DiskBox[3, 0.07217898832684824]}, 
         {RGBColor[0.34398, 0.49112, 0.89936], 
          DiskBox[4, 0.07217898832684824]}, 
         {RGBColor[0.97, 0.606, 0.081], DiskBox[5, 0.07217898832684824]}, 
         {RGBColor[0.91, 0.318, 0.243], DiskBox[6, 0.07217898832684824]}, 
         {RGBColor[0.97, 0.606, 0.081], DiskBox[7, 0.07217898832684824]}, 
         {RGBColor[0.34398, 0.49112, 0.89936], 
          DiskBox[8, 0.07217898832684824]}, 
         {RGBColor[0.97, 0.606, 0.081], DiskBox[9, 0.07217898832684824]}, 
         {RGBColor[0.34398, 0.49112, 0.89936], 
          DiskBox[10, 0.07217898832684824]}, 
         {RGBColor[0.34398, 0.49112, 0.89936], 
          DiskBox[11, 0.07217898832684824]}, 
         {RGBColor[0.448, 0.69232, 0.1538], DiskBox[12, 0.07217898832684824]}, 
         {RGBColor[0.91, 0.318, 0.243], DiskBox[13, 0.07217898832684824]}, 
         {RGBColor[0.91, 0.318, 0.243], DiskBox[14, 0.07217898832684824]}, 
         {RGBColor[0.97, 0.606, 0.081], DiskBox[15, 0.07217898832684824]}, 
         {RGBColor[0.97, 0.606, 0.081], DiskBox[16, 0.07217898832684824]}, 
         {RGBColor[0.34398, 0.49112, 0.89936], 
          DiskBox[17, 0.07217898832684824]}, 
         {RGBColor[0.91, 0.318, 0.243], DiskBox[18, 0.07217898832684824]}, 
         {RGBColor[0.97, 0.606, 0.081], DiskBox[19, 0.07217898832684824]}, 
         {RGBColor[0.91, 0.318, 0.243], DiskBox[20, 0.07217898832684824]}, 
         {RGBColor[0.91, 0.318, 0.243], DiskBox[21, 0.07217898832684824]}, 
         {RGBColor[0.34398, 0.49112, 0.89936], 
          DiskBox[22, 0.07217898832684824]}, 
         {RGBColor[0.97, 0.606, 0.081], DiskBox[23, 0.07217898832684824]}, 
         {RGBColor[0.97, 0.606, 0.081], DiskBox[24, 0.07217898832684824]}, 
         {RGBColor[0.97, 0.606, 0.081], DiskBox[25, 0.07217898832684824]}, 
         {RGBColor[0.91, 0.318, 0.243], DiskBox[26, 0.07217898832684824]}, 
         {RGBColor[0.34398, 0.49112, 0.89936], 
          DiskBox[27, 0.07217898832684824]}, 
         {RGBColor[0.97, 0.606, 0.081], DiskBox[28, 0.07217898832684824]}, 
         {RGBColor[0.91, 0.318, 0.243], DiskBox[29, 0.07217898832684824]}, 
         {RGBColor[0.34398, 0.49112, 0.89936], 
          DiskBox[30, 0.07217898832684824]}, 
         {RGBColor[0.91, 0.318, 0.243], DiskBox[31, 0.07217898832684824]}, 
         {RGBColor[0.97, 0.606, 0.081], DiskBox[32, 0.07217898832684824]}, 
         {RGBColor[0.91, 0.318, 0.243], DiskBox[33, 0.07217898832684824]}, 
         {RGBColor[0.97, 0.606, 0.081], DiskBox[34, 0.07217898832684824]}, 
         {RGBColor[0.97, 0.606, 0.081], DiskBox[35, 0.07217898832684824]}, 
         {RGBColor[0.34398, 0.49112, 0.89936], 
          DiskBox[36, 0.07217898832684824]}, 
         {RGBColor[0.34398, 0.49112, 0.89936], 
          DiskBox[37, 0.07217898832684824]}, 
         {RGBColor[0.34398, 0.49112, 0.89936], 
          DiskBox[38, 0.07217898832684824]}, 
         {RGBColor[0.97, 0.606, 0.081], DiskBox[39, 0.07217898832684824]}, 
         {RGBColor[0.91, 0.318, 0.243], DiskBox[40, 0.07217898832684824]}, 
         {RGBColor[0.34398, 0.49112, 0.89936], 
          DiskBox[41, 0.07217898832684824]}, 
         {RGBColor[0.91, 0.318, 0.243], DiskBox[42, 0.07217898832684824]}, 
         {RGBColor[0.97, 0.606, 0.081], DiskBox[43, 0.07217898832684824]}, 
         {RGBColor[0.448, 0.69232, 0.1538], DiskBox[44, 0.07217898832684824]}, 
         {RGBColor[0.97, 0.606, 0.081], DiskBox[45, 0.07217898832684824]}, 
         {RGBColor[0.97, 0.606, 0.081], DiskBox[46, 0.07217898832684824]}, 
         {RGBColor[0.91, 0.318, 0.243], DiskBox[47, 0.07217898832684824]}, 
         {RGBColor[0.34398, 0.49112, 0.89936], 
          DiskBox[48, 0.07217898832684824]}, 
         {RGBColor[0.91, 0.318, 0.243], DiskBox[49, 0.07217898832684824]}}}]],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->"NetworkGraphics",
  FormatType->TraditionalForm,
  FrameTicks->None,
  ImageSize->Large]], "Output",
 CellChangeTimes->{3.877276303976385*^9},
 CellLabel->"Out[60]=",ExpressionUUID->"b1772741-29a2-4760-b65a-5703f55ffbca"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ColorGraphVertices", "[", 
  RowBox[{
   RowBox[{"GraphData", "[", "\"\<ContiguousUSAGraph\>\"", "]"}], ",", 
   RowBox[{"ImageSize", "->", "Full"}], ",", 
   RowBox[{"VertexSize", "->", "Large"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8772762855262437`*^9, 3.8772763548050184`*^9}},
 CellLabel->"In[63]:=",ExpressionUUID->"435bffee-dc2c-4f22-b693-f2c464a0f8ef"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
       20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37,
       38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49}, {Null, 
       SparseArray[
       Automatic, {49, 49}, 0, {
        1, {{0, 4, 6, 11, 15, 23, 29, 32, 40, 46, 50, 54, 57, 61, 66, 71, 75, 
          81, 85, 91, 97, 100, 105, 110, 112, 114, 119, 125, 128, 131, 137, 
          141, 143, 149, 154, 158, 164, 168, 174, 178, 180, 184, 191, 194, 
          199, 204, 207, 210, 211, 214}, {{2}, {3}, {4}, {5}, {1}, {3}, {1}, {
          2}, {5}, {31}, {32}, {1}, {5}, {6}, {7}, {1}, {3}, {4}, {6}, {8}, {
          27}, {31}, {42}, {4}, {5}, {7}, {8}, {9}, {10}, {4}, {6}, {10}, {
          5}, {6}, {9}, {18}, {19}, {33}, {34}, {42}, {6}, {8}, {10}, {13}, {
          17}, {18}, {6}, {7}, {9}, {13}, {12}, {13}, {14}, {15}, {11}, {
          14}, {16}, {9}, {10}, {11}, {17}, {11}, {12}, {15}, {16}, {38}, {
          11}, {14}, {17}, {20}, {38}, {12}, {14}, {38}, {40}, {9}, {13}, {
          15}, {18}, {19}, {20}, {8}, {9}, {17}, {19}, {8}, {17}, {18}, {
          20}, {33}, {36}, {15}, {17}, {19}, {36}, {38}, {39}, {22}, {23}, {
          24}, {21}, {23}, {24}, {46}, {47}, {21}, {22}, {29}, {30}, {47}, {
          21}, {22}, {26}, {27}, {25}, {27}, {28}, {30}, {45}, {5}, {25}, {
          26}, {31}, {42}, {45}, {26}, {29}, {30}, {23}, {28}, {30}, {23}, {
          26}, {28}, {29}, {44}, {45}, {3}, {5}, {27}, {32}, {3}, {31}, {8}, {
          19}, {34}, {35}, {36}, {37}, {8}, {33}, {37}, {41}, {42}, {33}, {
          36}, {37}, {49}, {19}, {20}, {33}, {35}, {39}, {49}, {33}, {34}, {
          35}, {43}, {14}, {15}, {16}, {20}, {39}, {40}, {20}, {36}, {38}, {
          49}, {16}, {38}, {34}, {42}, {43}, {44}, {5}, {8}, {27}, {34}, {
          41}, {44}, {45}, {37}, {41}, {44}, {30}, {41}, {42}, {43}, {45}, {
          26}, {27}, {30}, {42}, {44}, {22}, {47}, {48}, {22}, {23}, {46}, {
          46}, {35}, {36}, {39}}}, Pattern}]}, {
      GraphLayout -> {"Dimension" -> 2}, ImageSize -> Full, 
       VertexCoordinates -> {{7, 1}, {8, 0}, {8, 1}, {6, 1}, {7, 2}, {5, 2}, {
        5, 1}, {5, 3}, {4, 2}, {4, 1}, {2, 2}, {0, 3}, {3, 2}, {1, 3}, {2, 
        3}, {1, 4}, {3, 3}, {4, 3}, {4, 4}, {3, 4}, {11, 4}, {11, 5}, {10, 
        5}, {12, 4}, {9, 2}, {9, 3}, {8, 2}, {10, 3}, {10, 4}, {9, 4}, {9, 
        1}, {9, 0}, {5, 4}, {6, 4}, {5, 5}, {4, 5}, {6, 5}, {2, 4}, {3, 5}, {
        1, 5}, {7, 4}, {7, 3}, {7, 5}, {8, 4}, {8, 3}, {11, 6}, {10, 6}, {12, 
        6}, {4, 6}}, VertexSize -> {Large}, 
       VertexStyle -> {
        20 -> RGBColor[0.91, 0.318, 0.243], 3 -> RGBColor[0.97, 0.606, 0.081],
          28 -> RGBColor[0.34398, 0.49112, 0.89936], 1 -> 
         RGBColor[0.91, 0.318, 0.243], 23 -> 
         RGBColor[0.34398, 0.49112, 0.89936], 2 -> 
         RGBColor[0.34398, 0.49112, 0.89936], 41 -> 
         RGBColor[0.448, 0.69232, 0.1538], 43 -> 
         RGBColor[0.34398, 0.49112, 0.89936], 14 -> 
         RGBColor[0.91, 0.318, 0.243], 36 -> RGBColor[0.97, 0.606, 0.081], 13 -> 
         RGBColor[0.91, 0.318, 0.243], 49 -> RGBColor[0.91, 0.318, 0.243], 16 -> 
         RGBColor[0.34398, 0.49112, 0.89936], 46 -> 
         RGBColor[0.34398, 0.49112, 0.89936], 15 -> 
         RGBColor[0.34398, 0.49112, 0.89936], 47 -> 
         RGBColor[0.91, 0.318, 0.243], 21 -> RGBColor[0.91, 0.318, 0.243], 9 -> 
         RGBColor[0.34398, 0.49112, 0.89936], 40 -> 
         RGBColor[0.91, 0.318, 0.243], 33 -> RGBColor[0.91, 0.318, 0.243], 26 -> 
         RGBColor[0.448, 0.69232, 0.1538], 38 -> RGBColor[0.97, 0.606, 0.081],
          4 -> RGBColor[0.97, 0.606, 0.081], 7 -> 
         RGBColor[0.34398, 0.49112, 0.89936], 48 -> 
         RGBColor[0.97, 0.606, 0.081], 5 -> 
         RGBColor[0.34398, 0.49112, 0.89936], 12 -> 
         RGBColor[0.448, 0.69232, 0.1538], 6 -> RGBColor[0.91, 0.318, 0.243], 
         27 -> RGBColor[0.97, 0.606, 0.081], 42 -> 
         RGBColor[0.91, 0.318, 0.243], 44 -> RGBColor[0.97, 0.606, 0.081], 22 -> 
         RGBColor[0.97, 0.606, 0.081], 31 -> RGBColor[0.91, 0.318, 0.243], 35 -> 
         RGBColor[0.34398, 0.49112, 0.89936], 17 -> 
         RGBColor[0.97, 0.606, 0.081], 19 -> 
         RGBColor[0.34398, 0.49112, 0.89936], 10 -> 
         RGBColor[0.97, 0.606, 0.081], 37 -> RGBColor[0.97, 0.606, 0.081], 45 -> 
         RGBColor[0.34398, 0.49112, 0.89936], 18 -> 
         RGBColor[0.91, 0.318, 0.243], 11 -> RGBColor[0.97, 0.606, 0.081], 30 -> 
         RGBColor[0.91, 0.318, 0.243], 25 -> 
         RGBColor[0.34398, 0.49112, 0.89936], 24 -> 
         RGBColor[0.34398, 0.49112, 0.89936], 32 -> 
         RGBColor[0.34398, 0.49112, 0.89936], 39 -> 
         RGBColor[0.34398, 0.49112, 0.89936], 8 -> 
         RGBColor[0.97, 0.606, 0.081], 29 -> RGBColor[0.97, 0.606, 0.081], 34 -> 
         RGBColor[0.34398, 0.49112, 0.89936]}}]]}, 
    TagBox[GraphicsGroupBox[GraphicsComplexBox[CompressedData["
1:eJx1kjEOgzAMRa1OGTNkYGAwKEKsPUFzhh6hEjNX5wgUhd+KJ2IJWc//m9iB
4bO+l4eZPb/PkWv0pebtVbMXu4RD78DqtzOnBssvDmeO8Ef4DbpC/QG6+lgP
0CPqnIfcqk8N1p4ZPMM/Yk6xznHoGbqY7yNr7995dp1L/g6cyr0vwc/vzvtq
/Qc9/OIAlt/hd/h1/5org2fwf+8dO2soag==
       "], {
        {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
         ArrowBox[{{1, 2}, {1, 3}, {1, 4}, {1, 5}, {2, 3}, {3, 5}, {3, 31}, {
          3, 32}, {4, 5}, {4, 6}, {4, 7}, {5, 6}, {5, 8}, {5, 27}, {5, 31}, {
          5, 42}, {6, 7}, {6, 8}, {6, 9}, {6, 10}, {7, 10}, {8, 9}, {8, 18}, {
          8, 19}, {8, 33}, {8, 34}, {8, 42}, {9, 10}, {9, 13}, {9, 17}, {9, 
          18}, {10, 13}, {11, 12}, {11, 13}, {11, 14}, {11, 15}, {12, 14}, {
          12, 16}, {13, 17}, {14, 15}, {14, 16}, {14, 38}, {15, 17}, {15, 
          20}, {15, 38}, {16, 38}, {16, 40}, {17, 18}, {17, 19}, {17, 20}, {
          18, 19}, {19, 20}, {19, 33}, {19, 36}, {20, 36}, {20, 38}, {20, 
          39}, {21, 22}, {21, 23}, {21, 24}, {22, 23}, {22, 24}, {22, 46}, {
          22, 47}, {23, 29}, {23, 30}, {23, 47}, {25, 26}, {25, 27}, {26, 
          27}, {26, 28}, {26, 30}, {26, 45}, {27, 31}, {27, 42}, {27, 45}, {
          28, 29}, {28, 30}, {29, 30}, {30, 44}, {30, 45}, {31, 32}, {33, 
          34}, {33, 35}, {33, 36}, {33, 37}, {34, 37}, {34, 41}, {34, 42}, {
          35, 36}, {35, 37}, {35, 49}, {36, 39}, {36, 49}, {37, 43}, {38, 
          39}, {38, 40}, {39, 49}, {41, 42}, {41, 43}, {41, 44}, {42, 44}, {
          42, 45}, {43, 44}, {44, 45}, {46, 47}, {46, 48}}, 0.2]}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         {RGBColor[0.91, 0.318, 0.243], DiskBox[1, 0.2]}, 
         {RGBColor[0.34398, 0.49112, 0.89936], DiskBox[2, 0.2]}, 
         {RGBColor[0.97, 0.606, 0.081], DiskBox[3, 0.2]}, 
         {RGBColor[0.97, 0.606, 0.081], DiskBox[4, 0.2]}, 
         {RGBColor[0.34398, 0.49112, 0.89936], DiskBox[5, 0.2]}, 
         {RGBColor[0.91, 0.318, 0.243], DiskBox[6, 0.2]}, 
         {RGBColor[0.34398, 0.49112, 0.89936], DiskBox[7, 0.2]}, 
         {RGBColor[0.97, 0.606, 0.081], DiskBox[8, 0.2]}, 
         {RGBColor[0.34398, 0.49112, 0.89936], DiskBox[9, 0.2]}, 
         {RGBColor[0.97, 0.606, 0.081], DiskBox[10, 0.2]}, 
         {RGBColor[0.97, 0.606, 0.081], DiskBox[11, 0.2]}, 
         {RGBColor[0.448, 0.69232, 0.1538], DiskBox[12, 0.2]}, 
         {RGBColor[0.91, 0.318, 0.243], DiskBox[13, 0.2]}, 
         {RGBColor[0.91, 0.318, 0.243], DiskBox[14, 0.2]}, 
         {RGBColor[0.34398, 0.49112, 0.89936], DiskBox[15, 0.2]}, 
         {RGBColor[0.34398, 0.49112, 0.89936], DiskBox[16, 0.2]}, 
         {RGBColor[0.97, 0.606, 0.081], DiskBox[17, 0.2]}, 
         {RGBColor[0.91, 0.318, 0.243], DiskBox[18, 0.2]}, 
         {RGBColor[0.34398, 0.49112, 0.89936], DiskBox[19, 0.2]}, 
         {RGBColor[0.91, 0.318, 0.243], DiskBox[20, 0.2]}, 
         {RGBColor[0.91, 0.318, 0.243], DiskBox[21, 0.2]}, 
         {RGBColor[0.97, 0.606, 0.081], DiskBox[22, 0.2]}, 
         {RGBColor[0.34398, 0.49112, 0.89936], DiskBox[23, 0.2]}, 
         {RGBColor[0.34398, 0.49112, 0.89936], DiskBox[24, 0.2]}, 
         {RGBColor[0.34398, 0.49112, 0.89936], DiskBox[25, 0.2]}, 
         {RGBColor[0.448, 0.69232, 0.1538], DiskBox[26, 0.2]}, 
         {RGBColor[0.97, 0.606, 0.081], DiskBox[27, 0.2]}, 
         {RGBColor[0.34398, 0.49112, 0.89936], DiskBox[28, 0.2]}, 
         {RGBColor[0.97, 0.606, 0.081], DiskBox[29, 0.2]}, 
         {RGBColor[0.91, 0.318, 0.243], DiskBox[30, 0.2]}, 
         {RGBColor[0.91, 0.318, 0.243], DiskBox[31, 0.2]}, 
         {RGBColor[0.34398, 0.49112, 0.89936], DiskBox[32, 0.2]}, 
         {RGBColor[0.91, 0.318, 0.243], DiskBox[33, 0.2]}, 
         {RGBColor[0.34398, 0.49112, 0.89936], DiskBox[34, 0.2]}, 
         {RGBColor[0.34398, 0.49112, 0.89936], DiskBox[35, 0.2]}, 
         {RGBColor[0.97, 0.606, 0.081], DiskBox[36, 0.2]}, 
         {RGBColor[0.97, 0.606, 0.081], DiskBox[37, 0.2]}, 
         {RGBColor[0.97, 0.606, 0.081], DiskBox[38, 0.2]}, 
         {RGBColor[0.34398, 0.49112, 0.89936], DiskBox[39, 0.2]}, 
         {RGBColor[0.91, 0.318, 0.243], DiskBox[40, 0.2]}, 
         {RGBColor[0.448, 0.69232, 0.1538], DiskBox[41, 0.2]}, 
         {RGBColor[0.91, 0.318, 0.243], DiskBox[42, 0.2]}, 
         {RGBColor[0.34398, 0.49112, 0.89936], DiskBox[43, 0.2]}, 
         {RGBColor[0.97, 0.606, 0.081], DiskBox[44, 0.2]}, 
         {RGBColor[0.34398, 0.49112, 0.89936], DiskBox[45, 0.2]}, 
         {RGBColor[0.34398, 0.49112, 0.89936], DiskBox[46, 0.2]}, 
         {RGBColor[0.91, 0.318, 0.243], DiskBox[47, 0.2]}, 
         {RGBColor[0.97, 0.606, 0.081], DiskBox[48, 0.2]}, 
         {RGBColor[0.91, 0.318, 0.243], DiskBox[49, 0.2]}}}]],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->"NetworkGraphics",
  FormatType->TraditionalForm,
  FrameTicks->None,
  ImageSize->Full]], "Output",
 CellChangeTimes->{{3.8772763165599117`*^9, 3.8772763552113285`*^9}},
 CellLabel->"Out[63]=",ExpressionUUID->"9a1035e2-9305-484c-91f6-cd6ce7ad7add"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Exercise 46", "Section",
 CellChangeTimes->{{3.8772765392091026`*^9, 
  3.8772765432660956`*^9}},ExpressionUUID->"e409150f-59fd-4580-a52a-\
1449698f85e6"],

Cell[TextData[{
 "Let G with a graph with ",
 Cell[BoxData[
  FormBox[
   RowBox[{"n", ">=", "3"}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "1dd3a131-8f86-44e3-8bb2-1e4934573f28"],
 " vertices, defined by a planar diagram that is \
\[OpenCurlyDoubleQuote]maximal,\[CloseCurlyDoubleQuote] in the sense that no \
additional lines can be drawn between nonadjacent vertices without crossing \
an existing edge."
}], "Text",
 CellChangeTimes->{{3.877276545578627*^9, 
  3.8772765920774207`*^9}},ExpressionUUID->"a3d90864-4c79-45cf-a794-\
8469ba49adff"],

Cell["\<\
The graph data property I am looking for is \
\[OpenCurlyDoubleQuote]Triangulated\[CloseCurlyDoubleQuote] or \
\[OpenCurlyDoubleQuote]maximally planar\[CloseCurlyDoubleQuote].\
\>", "Text",
 CellChangeTimes->{{3.8772766166341753`*^9, 
  3.877276633907487*^9}},ExpressionUUID->"61a7e904-7694-4a46-a59d-\
f4a264c02944"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GraphData", "[", "\"\<Triangulated\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.8772766362512183`*^9, 3.8772766452649884`*^9}},
 CellLabel->"In[69]:=",ExpressionUUID->"b95c413d-4f63-468e-b246-75e871c98fdf"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\<\"Apollonian\"\>", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Apollonian\"\>", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Apollonian\"\>", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Apollonian\"\>", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Apollonian\"\>", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"11", ",", "1", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"11", ",", "1", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"11", ",", "2", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"11", ",", "2", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"11", ",", "3", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"11", ",", "3", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"12", ",", "1", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"12", ",", "1", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"13", ",", "1", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"13", ",", "1", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"13", ",", "1", ",", "3"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"13", ",", "2", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"13", ",", "2", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"14", ",", "1", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"14", ",", "1", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"14", ",", "2", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"14", ",", "2", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"14", ",", "3", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"14", ",", "3", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"14", ",", "4", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"14", ",", "4", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"15", ",", "1", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"15", ",", "1", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"15", ",", "1", ",", "3"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"15", ",", "2", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"15", ",", "2", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"15", ",", "3", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"15", ",", "3", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"15", ",", "4", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"15", ",", "4", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"15", ",", "5", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"15", ",", "5", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"15", ",", "6", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"15", ",", "6", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"16", ",", "1", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"16", ",", "1", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"16", ",", "2", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"16", ",", "2", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"16", ",", "3", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"16", ",", "3", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"16", ",", "4", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"16", ",", "4", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"16", ",", "5", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"16", ",", "5", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"16", ",", "6", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"16", ",", "6", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"16", ",", "7", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"16", ",", "7", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"16", ",", "8", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"16", ",", "8", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"16", ",", "9", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"16", ",", "9", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"17", ",", "1", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"17", ",", "1", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Dipyramid\"\>", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Dipyramid\"\>", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Dipyramid\"\>", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Dipyramid\"\>", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Dipyramid\"\>", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Dipyramid\"\>", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Dipyramid\"\>", ",", "10"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Dipyramid\"\>", ",", "11"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Dipyramid\"\>", ",", "12"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Dipyramid\"\>", ",", "13"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Dipyramid\"\>", ",", "14"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Dipyramid\"\>", ",", "15"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Dipyramid\"\>", ",", "16"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Dipyramid\"\>", ",", "17"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Dipyramid\"\>", ",", "18"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Dipyramid\"\>", ",", "19"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Dipyramid\"\>", ",", "20"}], "}"}], 
   ",", "\<\"DisdyakisDodecahedralGraph\"\>", 
   ",", "\<\"DisdyakisTriacontahedralGraph\"\>", ",", "\<\"ErreraGraph\"\>", 
   ",", "\<\"FritschGraph\"\>", ",", "\<\"GoldnerHararyGraph\"\>", 
   ",", "\<\"HeawoodFourColorGraph\"\>", ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Heptahedral\"\>", ",", "15"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Heptahedral\"\>", ",", "29"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Heptahedral\"\>", ",", "34"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Hexahedral\"\>", ",", "5"}], "}"}], 
   ",", "\<\"IcosahedralGraph\"\>", ",", 
   RowBox[{"{", 
    RowBox[{"\<\"JohnsonSkeleton\"\>", ",", "17"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"JohnsonSkeleton\"\>", ",", "84"}], "}"}], 
   ",", "\<\"KittellGraph\"\>", ",", "\<\"McGregorGraph\"\>", 
   ",", "\<\"MooreGraph\"\>", ",", "\<\"OctahedralGraph\"\>", 
   ",", "\<\"PentakisDodecahedralGraph\"\>", 
   ",", "\<\"PentakisIcosidodecahedralGraph\"\>", ",", "\<\"PoussinGraph\"\>",
    ",", 
   RowBox[{"{", 
    RowBox[{"\<\"SierpinskiTetrahedron\"\>", ",", "2"}], "}"}], 
   ",", "\<\"SmallTriakisOctahedralGraph\"\>", 
   ",", "\<\"TetrahedralGraph\"\>", ",", "\<\"TetrakisHexahedralGraph\"\>", 
   ",", "\<\"TriakisIcosahedralGraph\"\>", 
   ",", "\<\"TriakisTetrahedralGraph\"\>", ",", "\<\"TriangleGraph\"\>", ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Triangulated\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"8", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Triangulated\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"8", ",", "3"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Triangulated\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"8", ",", "4"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Triangulated\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"8", ",", "5"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Triangulated\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"8", ",", "6"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Triangulated\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"8", ",", "8"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Triangulated\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"8", ",", "9"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Triangulated\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"8", ",", "10"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Triangulated\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"8", ",", "11"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Triangulated\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"8", ",", "12"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Triangulated\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"8", ",", "14"}], "}"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.877276660534872*^9},
 CellLabel->"Out[69]=",ExpressionUUID->"a4311c77-bbdd-4ff6-b96f-d4739efd11d9"]
}, Open  ]],

Cell["\<\
Prove that the diagram partitions the plane into regions that each have \
exactly three vertices on their boundary. (One of these regions is the set of \
all points that lie outside the diagram.)\
\>", "Text",
 CellChangeTimes->{{3.8772766586200237`*^9, 
  3.877276690443962*^9}},ExpressionUUID->"189a61b3-c919-476a-825a-\
df4b796a31d4"],

Cell["Therefore G has exactly 3n-6 edges.", "Text",
 CellChangeTimes->{{3.877276692929628*^9, 
  3.877276701869949*^9}},ExpressionUUID->"94031fed-a0f2-4409-9bf2-\
0d22e1b51424"],

Cell["\<\
I think there\[CloseCurlyQuote]s a graph function that does something with a \
plane.\
\>", "Text",
 CellChangeTimes->{{3.877276724532607*^9, 
  3.87727673471801*^9}},ExpressionUUID->"98e13d10-fc96-4aeb-865b-\
08686a7e713c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Names", "[", 
  RowBox[{"\"\<*plan*\>\"", ",", 
   RowBox[{"IgnoreCase", "->", "True"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.877276716286641*^9, 3.8772767228840733`*^9}},
 CellLabel->"In[70]:=",ExpressionUUID->"25cd1a7e-51ff-47c3-b89e-94feee82959f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"ClipPlanes\"\>", ",", "\<\"ClipPlanesStyle\"\>", 
   ",", "\<\"CoplanarPoints\"\>", ",", "\<\"DualPlanarGraph\"\>", 
   ",", "\<\"ExoplanetData\"\>", ",", "\<\"FindPlanarColoring\"\>", 
   ",", "\<\"HalfPlane\"\>", ",", "\<\"Hyperplane\"\>", 
   ",", "\<\"InfinitePlane\"\>", ",", "\<\"MinorPlanetData\"\>", 
   ",", "\<\"PlanarAngle\"\>", ",", "\<\"PlanarFaceList\"\>", 
   ",", "\<\"PlanarGraph\"\>", ",", "\<\"PlanarGraphQ\"\>", 
   ",", "\<\"PlanckRadiationLaw\"\>", ",", "\<\"PlaneCurveData\"\>", 
   ",", "\<\"PlanetaryMoonData\"\>", ",", "\<\"PlanetData\"\>", 
   ",", "\<\"PlantData\"\>", ",", "\<\"PlotRangeClipPlanesStyle\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.8772767356803274`*^9},
 CellLabel->"Out[70]=",ExpressionUUID->"030fbd2d-c7eb-45c7-b269-abb1e03c9d3d"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Information", "/@", 
  RowBox[{"Names", "[", 
   RowBox[{"\"\<*plan*\>\"", ",", 
    RowBox[{"IgnoreCase", "->", "True"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.877276738449082*^9, 3.8772767400935*^9}},
 CellLabel->"In[71]:=",ExpressionUUID->"a9048f6b-2126-4139-aaf3-c9b453c23804"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/DualPlanarGraph",
                ButtonNote->"paclet:ref/DualPlanarGraph"],
               "\"paclet:ref/DualPlanarGraph\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"DualPlanarGraph\\\", \\\"[\\\
\", StyleBox[\\\"g\\\", \\\"TI\\\"], \\\"]\\\"}]\\) gives the dual of the \
planar graph \\!\\(\\*StyleBox[\\\"g\\\", \\\"TI\\\"]\\).\"\>", 
               "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", 
                    "paclet:ref/DualPlanarGraph", 
                    "paclet:ref/DualPlanarGraph", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/\
DualPlanarGraph.html"], None}, 
                    "http://reference.wolfram.com/language/ref/\
DualPlanarGraph.html", "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", 
                    RowBox[{"Protected", ",", "ReadProtected"}], "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`DualPlanarGraph\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/DualPlanarGraph",
                ButtonNote->"paclet:ref/DualPlanarGraph"],
               "\"paclet:ref/DualPlanarGraph\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"DualPlanarGraph\\\", \\\"[\\\
\", StyleBox[\\\"g\\\", \\\"TI\\\"], \\\"]\\\"}]\\) gives the dual of the \
planar graph \\!\\(\\*StyleBox[\\\"g\\\", \\\"TI\\\"]\\).\"\>", 
               "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"DualPlanarGraph\", \"[\", StyleBox[\"g\", \"TI\"], \"]\
\"}]\) gives the dual of the planar graph \!\(\*StyleBox[\"g\", \"TI\"]\).", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/DualPlanarGraph", "Web" -> 
        "http://reference.wolfram.com/language/ref/DualPlanarGraph.html"|>, 
      "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, "Options" -> None, 
      "Attributes" -> {Protected, ReadProtected}, "FullName" -> 
      "System`DualPlanarGraph"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/FindPlanarColoring",
                ButtonNote->"paclet:ref/FindPlanarColoring"],
               "\"paclet:ref/FindPlanarColoring\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"FindPlanarColoring\\\", \
\\\"[\\\", StyleBox[\\\"g\\\", \\\"TI\\\"], \\\"]\\\"}]\\) finds a coloring \
with minimal size for the faces of the planar graph \\!\\(\\*StyleBox[\\\"g\\\
\", \\\"TI\\\"]\\).\\n\\!\\(\\*RowBox[{\\\"FindPlanarColoring\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"g\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"c\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"c\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\
\"TR\\\"]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) finds a coloring \\!\\(\\*RowBox[{\
\\\"{\\\", RowBox[{SubscriptBox[StyleBox[\\\"c\\\", \\\"TI\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"c\\\", \
\\\"TI\\\"], StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\
\[Ellipsis]\\\", \\\"TR\\\"], \\\",\\\", SubscriptBox[StyleBox[\\\"c\\\", \
\\\"TI\\\"], StyleBox[\\\"k\\\", \\\"TI\\\"]]}], \\\"}\\\"}]\\) for the faces \
in the graph \\!\\(\\*StyleBox[\\\"g\\\", \\\"TI\\\"]\\).\"\>", 
               "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", 
                    "paclet:ref/FindPlanarColoring", 
                    "paclet:ref/FindPlanarColoring", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/\
FindPlanarColoring.html"], None}, 
                    "http://reference.wolfram.com/language/ref/\
FindPlanarColoring.html", "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Options\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Options\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Options", "Tooltip"]& ], 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Method", "\[Rule]", "Automatic"}], ",", 
                    RowBox[{
                    "PerformanceGoal", "\[RuleDelayed]", 
                    "$PerformanceGoal"}]}], "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", 
                    RowBox[{"Protected", ",", "ReadProtected"}], "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`FindPlanarColoring\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/FindPlanarColoring",
                ButtonNote->"paclet:ref/FindPlanarColoring"],
               "\"paclet:ref/FindPlanarColoring\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"FindPlanarColoring\\\", \
\\\"[\\\", StyleBox[\\\"g\\\", \\\"TI\\\"], \\\"]\\\"}]\\) finds a coloring \
with minimal size for the faces of the planar graph \\!\\(\\*StyleBox[\\\"g\\\
\", \\\"TI\\\"]\\).\\n\\!\\(\\*RowBox[{\\\"FindPlanarColoring\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"g\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"c\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"c\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\
\"TR\\\"]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) finds a coloring \\!\\(\\*RowBox[{\
\\\"{\\\", RowBox[{SubscriptBox[StyleBox[\\\"c\\\", \\\"TI\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"c\\\", \
\\\"TI\\\"], StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\
\[Ellipsis]\\\", \\\"TR\\\"], \\\",\\\", SubscriptBox[StyleBox[\\\"c\\\", \
\\\"TI\\\"], StyleBox[\\\"k\\\", \\\"TI\\\"]]}], \\\"}\\\"}]\\) for the faces \
in the graph \\!\\(\\*StyleBox[\\\"g\\\", \\\"TI\\\"]\\).\"\>", 
               "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"FindPlanarColoring\", \"[\", StyleBox[\"g\", \"TI\"], \
\"]\"}]\) finds a coloring with minimal size for the faces of the planar \
graph \!\(\*StyleBox[\"g\", \"TI\"]\).\n\!\(\*RowBox[{\"FindPlanarColoring\", \
\"[\", RowBox[{StyleBox[\"g\", \"TI\"], \",\", RowBox[{\"{\", \
RowBox[{SubscriptBox[StyleBox[\"c\", \"TI\"], StyleBox[\"1\", \"TR\"]], \
\",\", SubscriptBox[StyleBox[\"c\", \"TI\"], StyleBox[\"2\", \"TR\"]], \",\", \
StyleBox[\"\[Ellipsis]\", \"TR\"]}], \"}\"}]}], \"]\"}]\) finds a coloring \!\
\(\*RowBox[{\"{\", RowBox[{SubscriptBox[StyleBox[\"c\", \"TI\"], StyleBox[\"1\
\", \"TR\"]], \",\", SubscriptBox[StyleBox[\"c\", \"TI\"], StyleBox[\"2\", \
\"TR\"]], \",\", StyleBox[\"\[Ellipsis]\", \"TR\"], \",\", \
SubscriptBox[StyleBox[\"c\", \"TI\"], StyleBox[\"k\", \"TI\"]]}], \"}\"}]\) \
for the faces in the graph \!\(\*StyleBox[\"g\", \"TI\"]\).", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/FindPlanarColoring", "Web" -> 
        "http://reference.wolfram.com/language/ref/FindPlanarColoring.html"|>,
       "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, 
      "Options" -> {Method -> Automatic, PerformanceGoal :> $PerformanceGoal},
       "Attributes" -> {Protected, ReadProtected}, "FullName" -> 
      "System`FindPlanarColoring"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/PlanarFaceList",
                ButtonNote->"paclet:ref/PlanarFaceList"],
               "\"paclet:ref/PlanarFaceList\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"PlanarFaceList\\\", \
\\\"[\\\", StyleBox[\\\"g\\\", \\\"TI\\\"], \\\"]\\\"}]\\) gives the list of \
faces of the planar graph \\!\\(\\*StyleBox[\\\"g\\\", \\\"TI\\\"]\\).\"\>", 
               "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", 
                    "paclet:ref/PlanarFaceList", "paclet:ref/PlanarFaceList", 
                    "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/PlanarFaceList.\
html"], None}, 
                    "http://reference.wolfram.com/language/ref/PlanarFaceList.\
html", "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", 
                    RowBox[{"Protected", ",", "ReadProtected"}], "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`PlanarFaceList\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/PlanarFaceList",
                ButtonNote->"paclet:ref/PlanarFaceList"],
               "\"paclet:ref/PlanarFaceList\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"PlanarFaceList\\\", \
\\\"[\\\", StyleBox[\\\"g\\\", \\\"TI\\\"], \\\"]\\\"}]\\) gives the list of \
faces of the planar graph \\!\\(\\*StyleBox[\\\"g\\\", \\\"TI\\\"]\\).\"\>", 
               "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"PlanarFaceList\", \"[\", StyleBox[\"g\", \"TI\"], \
\"]\"}]\) gives the list of faces of the planar graph \!\(\*StyleBox[\"g\", \
\"TI\"]\).", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/PlanarFaceList", "Web" -> 
        "http://reference.wolfram.com/language/ref/PlanarFaceList.html"|>, 
      "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, "Options" -> None, 
      "Attributes" -> {Protected, ReadProtected}, "FullName" -> 
      "System`PlanarFaceList"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/PlanarGraph",
                ButtonNote->"paclet:ref/PlanarGraph"],
               "\"paclet:ref/PlanarGraph\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"PlanarGraph\\\", \\\"[\\\", \
RowBox[{\\\"{\\\", RowBox[{SubscriptBox[StyleBox[\\\"e\\\", \\\"TI\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"e\\\", \
\\\"TI\\\"], StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\
\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\"}], \\\"]\\\"}]\\) yields a planar \
graph with edges \\!\\(\\*SubscriptBox[StyleBox[\\\"e\\\", \\\"TI\\\"], \
StyleBox[\\\"j\\\", \\\"TI\\\"]]\\).\\n\\!\\(\\*RowBox[{\\\"PlanarGraph\\\", \
\\\"[\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"v\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"v\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\
\"TR\\\"]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"e\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"e\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\
\"TR\\\"]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) yields a planar graph with \
vertices \\!\\(\\*SubscriptBox[StyleBox[\\\"v\\\", \\\"TI\\\"], \
StyleBox[\\\"i\\\", \\\"TI\\\"]]\\) and edges \\!\\(\\*SubscriptBox[StyleBox[\
\\\"e\\\", \\\"TI\\\"], StyleBox[\\\"j\\\", \
\\\"TI\\\"]]\\).\\n\\!\\(\\*RowBox[{\\\"PlanarGraph\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"], \
\\\",\\\", RowBox[{SubscriptBox[StyleBox[\\\"w\\\", \\\"TI\\\"], \
StyleBox[\\\"i\\\", \\\"TI\\\"]], \\\"[\\\", SubscriptBox[StyleBox[\\\"v\\\", \
\\\"TI\\\"], StyleBox[\\\"i\\\", \\\"TI\\\"]], \\\"]\\\"}], \\\",\\\", \
StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\"}], \\\",\\\", RowBox[{\
\\\"{\\\", RowBox[{StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"], \\\",\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"w\\\", \\\"TI\\\"], StyleBox[\\\"j\\\", \
\\\"TI\\\"]], \\\"[\\\", SubscriptBox[StyleBox[\\\"e\\\", \\\"TI\\\"], \
StyleBox[\\\"j\\\", \\\"TI\\\"]], \\\"]\\\"}], \\\",\\\", StyleBox[\\\"\
\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) yields a planar \
graph with vertex and edge properties defined by the symbolic wrappers \\!\\(\
\\*SubscriptBox[StyleBox[\\\"w\\\", \\\"TI\\\"], StyleBox[\\\"k\\\", \\\"TI\\\
\"]]\\).\\n\\!\\(\\*RowBox[{\\\"PlanarGraph\\\", \\\"[\\\", \
RowBox[{\\\"{\\\", RowBox[{RowBox[{SubscriptBox[StyleBox[\\\"v\\\", \
\\\"TI\\\"], StyleBox[\\\"i\\\", \\\"TI\\\"]], \\\"\[Rule]\\\", \
SubscriptBox[StyleBox[\\\"v\\\", \\\"TI\\\"], StyleBox[\\\"j\\\", \
\\\"TI\\\"]]}], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\
\\\"}], \\\"]\\\"}]\\) uses rules \
\\!\\(\\*RowBox[{SubscriptBox[StyleBox[\\\"v\\\", \\\"TI\\\"], StyleBox[\\\"i\
\\\", \\\"TI\\\"]], \\\"\[Rule]\\\", SubscriptBox[StyleBox[\\\"v\\\", \
\\\"TI\\\"], StyleBox[\\\"j\\\", \\\"TI\\\"]]}]\\) to specify a planar graph.\
\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", "paclet:ref/PlanarGraph", 
                    "paclet:ref/PlanarGraph", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/PlanarGraph.\
html"], None}, "http://reference.wolfram.com/language/ref/PlanarGraph.html", 
                    "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", 
                    RowBox[{"Protected", ",", "ReadProtected"}], "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`PlanarGraph\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/PlanarGraph",
                ButtonNote->"paclet:ref/PlanarGraph"],
               "\"paclet:ref/PlanarGraph\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"PlanarGraph\\\", \\\"[\\\", \
RowBox[{\\\"{\\\", RowBox[{SubscriptBox[StyleBox[\\\"e\\\", \\\"TI\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"e\\\", \
\\\"TI\\\"], StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\
\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\"}], \\\"]\\\"}]\\) yields a planar \
graph with edges \\!\\(\\*SubscriptBox[StyleBox[\\\"e\\\", \\\"TI\\\"], \
StyleBox[\\\"j\\\", \\\"TI\\\"]]\\).\\n\\!\\(\\*RowBox[{\\\"PlanarGraph\\\", \
\\\"[\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"v\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"v\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\
\"TR\\\"]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"e\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"e\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\
\"TR\\\"]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) yields a planar graph with \
vertices \\!\\(\\*SubscriptBox[StyleBox[\\\"v\\\", \\\"TI\\\"], \
StyleBox[\\\"i\\\", \\\"TI\\\"]]\\) and edges \\!\\(\\*SubscriptBox[StyleBox[\
\\\"e\\\", \\\"TI\\\"], StyleBox[\\\"j\\\", \
\\\"TI\\\"]]\\).\\n\\!\\(\\*RowBox[{\\\"PlanarGraph\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"], \
\\\",\\\", RowBox[{SubscriptBox[StyleBox[\\\"w\\\", \\\"TI\\\"], \
StyleBox[\\\"i\\\", \\\"TI\\\"]], \\\"[\\\", SubscriptBox[StyleBox[\\\"v\\\", \
\\\"TI\\\"], StyleBox[\\\"i\\\", \\\"TI\\\"]], \\\"]\\\"}], \\\",\\\", \
StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\"}], \\\",\\\", RowBox[{\
\\\"{\\\", RowBox[{StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"], \\\",\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"w\\\", \\\"TI\\\"], StyleBox[\\\"j\\\", \
\\\"TI\\\"]], \\\"[\\\", SubscriptBox[StyleBox[\\\"e\\\", \\\"TI\\\"], \
StyleBox[\\\"j\\\", \\\"TI\\\"]], \\\"]\\\"}], \\\",\\\", StyleBox[\\\"\
\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) yields a planar \
graph with vertex and edge properties defined by the symbolic wrappers \\!\\(\
\\*SubscriptBox[StyleBox[\\\"w\\\", \\\"TI\\\"], StyleBox[\\\"k\\\", \\\"TI\\\
\"]]\\).\\n\\!\\(\\*RowBox[{\\\"PlanarGraph\\\", \\\"[\\\", \
RowBox[{\\\"{\\\", RowBox[{RowBox[{SubscriptBox[StyleBox[\\\"v\\\", \
\\\"TI\\\"], StyleBox[\\\"i\\\", \\\"TI\\\"]], \\\"\[Rule]\\\", \
SubscriptBox[StyleBox[\\\"v\\\", \\\"TI\\\"], StyleBox[\\\"j\\\", \
\\\"TI\\\"]]}], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\
\\\"}], \\\"]\\\"}]\\) uses rules \
\\!\\(\\*RowBox[{SubscriptBox[StyleBox[\\\"v\\\", \\\"TI\\\"], StyleBox[\\\"i\
\\\", \\\"TI\\\"]], \\\"\[Rule]\\\", SubscriptBox[StyleBox[\\\"v\\\", \
\\\"TI\\\"], StyleBox[\\\"j\\\", \\\"TI\\\"]]}]\\) to specify a planar graph.\
\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"PlanarGraph\", \"[\", RowBox[{\"{\", \
RowBox[{SubscriptBox[StyleBox[\"e\", \"TI\"], StyleBox[\"1\", \"TR\"]], \
\",\", SubscriptBox[StyleBox[\"e\", \"TI\"], StyleBox[\"2\", \"TR\"]], \",\", \
StyleBox[\"\[Ellipsis]\", \"TR\"]}], \"}\"}], \"]\"}]\) yields a planar graph \
with edges \!\(\*SubscriptBox[StyleBox[\"e\", \"TI\"], StyleBox[\"j\", \
\"TI\"]]\).\n\!\(\*RowBox[{\"PlanarGraph\", \"[\", RowBox[{RowBox[{\"{\", \
RowBox[{SubscriptBox[StyleBox[\"v\", \"TI\"], StyleBox[\"1\", \"TR\"]], \
\",\", SubscriptBox[StyleBox[\"v\", \"TI\"], StyleBox[\"2\", \"TR\"]], \",\", \
StyleBox[\"\[Ellipsis]\", \"TR\"]}], \"}\"}], \",\", RowBox[{\"{\", \
RowBox[{SubscriptBox[StyleBox[\"e\", \"TI\"], StyleBox[\"1\", \"TR\"]], \
\",\", SubscriptBox[StyleBox[\"e\", \"TI\"], StyleBox[\"2\", \"TR\"]], \",\", \
StyleBox[\"\[Ellipsis]\", \"TR\"]}], \"}\"}]}], \"]\"}]\) yields a planar \
graph with vertices \!\(\*SubscriptBox[StyleBox[\"v\", \"TI\"], \
StyleBox[\"i\", \"TI\"]]\) and edges \!\(\*SubscriptBox[StyleBox[\"e\", \
\"TI\"], StyleBox[\"j\", \"TI\"]]\).\n\!\(\*RowBox[{\"PlanarGraph\", \"[\", \
RowBox[{RowBox[{\"{\", RowBox[{StyleBox[\"\[Ellipsis]\", \"TR\"], \",\", \
RowBox[{SubscriptBox[StyleBox[\"w\", \"TI\"], StyleBox[\"i\", \"TI\"]], \
\"[\", SubscriptBox[StyleBox[\"v\", \"TI\"], StyleBox[\"i\", \"TI\"]], \
\"]\"}], \",\", StyleBox[\"\[Ellipsis]\", \"TR\"]}], \"}\"}], \",\", RowBox[{\
\"{\", RowBox[{StyleBox[\"\[Ellipsis]\", \"TR\"], \",\", \
RowBox[{SubscriptBox[StyleBox[\"w\", \"TI\"], StyleBox[\"j\", \"TI\"]], \
\"[\", SubscriptBox[StyleBox[\"e\", \"TI\"], StyleBox[\"j\", \"TI\"]], \
\"]\"}], \",\", StyleBox[\"\[Ellipsis]\", \"TR\"]}], \"}\"}]}], \"]\"}]\) \
yields a planar graph with vertex and edge properties defined by the symbolic \
wrappers \!\(\*SubscriptBox[StyleBox[\"w\", \"TI\"], StyleBox[\"k\", \"TI\"]]\
\).\n\!\(\*RowBox[{\"PlanarGraph\", \"[\", RowBox[{\"{\", \
RowBox[{RowBox[{SubscriptBox[StyleBox[\"v\", \"TI\"], StyleBox[\"i\", \
\"TI\"]], \"\[Rule]\", SubscriptBox[StyleBox[\"v\", \"TI\"], StyleBox[\"j\", \
\"TI\"]]}], \",\", StyleBox[\"\[Ellipsis]\", \"TR\"]}], \"}\"}], \"]\"}]\) \
uses rules \!\(\*RowBox[{SubscriptBox[StyleBox[\"v\", \"TI\"], \
StyleBox[\"i\", \"TI\"]], \"\[Rule]\", SubscriptBox[StyleBox[\"v\", \"TI\"], \
StyleBox[\"j\", \"TI\"]]}]\) to specify a planar graph.", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/PlanarGraph", "Web" -> 
        "http://reference.wolfram.com/language/ref/PlanarGraph.html"|>, 
      "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, "Options" -> None, 
      "Attributes" -> {Protected, ReadProtected}, "FullName" -> 
      "System`PlanarGraph"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/PlanarGraphQ",
                ButtonNote->"paclet:ref/PlanarGraphQ"],
               "\"paclet:ref/PlanarGraphQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"PlanarGraphQ\\\", \\\"[\\\", \
StyleBox[\\\"g\\\", \\\"TI\\\"], \\\"]\\\"}]\\) yields True if \
\\!\\(\\*StyleBox[\\\"g\\\", \\\"TI\\\"]\\) is a planar graph and False \
otherwise.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", "paclet:ref/PlanarGraphQ", 
                    "paclet:ref/PlanarGraphQ", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/PlanarGraphQ.\
html"], None}, "http://reference.wolfram.com/language/ref/PlanarGraphQ.html", 
                    "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", "Protected", "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`PlanarGraphQ\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/PlanarGraphQ",
                ButtonNote->"paclet:ref/PlanarGraphQ"],
               "\"paclet:ref/PlanarGraphQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"PlanarGraphQ\\\", \\\"[\\\", \
StyleBox[\\\"g\\\", \\\"TI\\\"], \\\"]\\\"}]\\) yields True if \
\\!\\(\\*StyleBox[\\\"g\\\", \\\"TI\\\"]\\) is a planar graph and False \
otherwise.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"PlanarGraphQ\", \"[\", StyleBox[\"g\", \"TI\"], \
\"]\"}]\) yields True if \!\(\*StyleBox[\"g\", \"TI\"]\) is a planar graph \
and False otherwise.", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/PlanarGraphQ", "Web" -> 
        "http://reference.wolfram.com/language/ref/PlanarGraphQ.html"|>, 
      "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, "Options" -> None, "Attributes" -> {Protected}, 
      "FullName" -> "System`PlanarGraphQ"|>, True]]}], "}"}]], "Input",
 CellChangeTimes->{{3.877276800313175*^9, 
  3.8772768330131865`*^9}},ExpressionUUID->"414bbd95-dd0c-4eb6-989e-\
715c2287b2ee"],

Cell["", "Text",
 CellChangeTimes->{{3.877276762892385*^9, 
  3.8772767633078165`*^9}},ExpressionUUID->"885da1b7-ec20-4681-9388-\
981e6dd608fb"],

Cell["Select graphs with at least three vertices:", "Text",
 CellChangeTimes->{{3.877276883796632*^9, 
  3.877276892106083*^9}},ExpressionUUID->"e9d5fcc8-224d-4e70-b9d1-\
7526d892abf7"],

Cell["\<\
I was running this in 13.2 but I got an error so I had to evaluate it in 13.1.\
\>", "Text",
 CellChangeTimes->{{3.877277262758216*^9, 
  3.877277275700404*^9}},ExpressionUUID->"55bdd4b6-fae6-45f4-9b59-\
f36f824428cf"],

Cell["This is the error in 13.2", "Text",
 CellChangeTimes->{{3.8772772824875727`*^9, 
  3.8772772859723616`*^9}},ExpressionUUID->"7d9dd67b-8750-46ff-9df4-\
789f6ee357e6"],

Cell[CellGroupData[{

Cell[BoxData["$Version"], "Input",
 CellChangeTimes->{{3.8772773005111084`*^9, 3.877277308987604*^9}},
 CellLabel->"In[78]:=",ExpressionUUID->"57500bd9-84cf-4ad1-9c2e-245b04ae8106"],

Cell[BoxData["\<\"13.2.0 for Microsoft Windows (64-bit) (November 6, \
2022)\"\>"], "Output",
 CellChangeTimes->{{3.8772773019260883`*^9, 3.8772773092531395`*^9}},
 CellLabel->"Out[78]=",ExpressionUUID->"cc92e0ac-9ee6-446b-b6ed-aaffb1097b1e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"triangulatedGraphsWithAtLastThreeVertices", "=", 
  RowBox[{
   RowBox[{"Select", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"VertexCount", "[", 
       RowBox[{"GraphData", "[", "#", "]"}], "]"}], ">=", "3"}], "&"}], "]"}],
    "[", 
   RowBox[{"GraphData", "[", "\"\<Triangulated\>\"", "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.877276843177566*^9, 3.8772768794496083`*^9}, {
   3.877276952258453*^9, 3.8772769596245546`*^9}, 3.877277200111591*^9},
 CellLabel->"In[76]:=",ExpressionUUID->"6e016324-642a-4fd2-b5cb-83d4070cbdcc"],

Cell[BoxData[
 TemplateBox[{
  "AdjacencyGraph", "matsq", 
   "\"Argument \\!\\(\\*RowBox[{\\\"If\\\", \\\"[\\\", \
RowBox[{RowBox[{RowBox[{\\\"{\\\", \\\"\\\\\\\"10\[Hyphen]graph \
12002618\\\\\\\"\\\", \\\"}\\\"}], \\\">\\\", \\\"100\\\"}], \\\",\\\", \
RowBox[{\\\"GraphLayout\\\", \\\"\[Rule]\\\", \\\"None\\\"}], \\\",\\\", \
RowBox[{\\\"Sequence\\\", \\\"@@\\\", RowBox[{\\\"{\\\", \\\"}\\\"}]}]}], \
\\\"]\\\"}]\\) at position \\!\\(\\*RowBox[{\\\"2\\\"}]\\) is not a non-empty \
square matrix.\"", 2, 76, 15, 16937289918179914857, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.877277239760353*^9},
 CellLabel->
  "During evaluation of \
In[76]:=",ExpressionUUID->"4d4342f0-b094-402d-bbd9-dd489551e27c"],

Cell[BoxData[
 TemplateBox[{
  "VertexCount", "graph", 
   "\"A graph object is expected at position \\!\\(\\*RowBox[{\\\"1\\\"}]\\) \
in \\!\\(\\*RowBox[{\\\"VertexCount\\\", \\\"[\\\", \
RowBox[{\\\"AdjacencyGraph\\\", \\\"[\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"10\\\", \\\",\\\", \\\"12002618\\\"}], \\\"}\\\
\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"If\\\", \\\"[\\\", \
RowBox[{RowBox[{RowBox[{\\\"{\\\", \\\"\\\\\\\"10\[Hyphen]graph \
12002618\\\\\\\"\\\", \\\"}\\\"}], \\\">\\\", \\\"100\\\"}], \\\",\\\", \
RowBox[{\\\"GraphLayout\\\", \\\"\[Rule]\\\", \\\"None\\\"}], \\\",\\\", \
RowBox[{\\\"Sequence\\\", \\\"@@\\\", RowBox[{\\\"{\\\", \\\"}\\\"}]}]}], \
\\\"]\\\"}]}], \\\"]\\\"}], \\\"]\\\"}]\\).\"", 2, 76, 16, 
   16937289918179914857, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8772772400103817`*^9},
 CellLabel->
  "During evaluation of \
In[76]:=",ExpressionUUID->"48347a54-3901-44ec-8b09-b13915addccd"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\<\"Apollonian\"\>", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Apollonian\"\>", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Apollonian\"\>", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Apollonian\"\>", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Apollonian\"\>", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"11", ",", "1", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"11", ",", "1", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"11", ",", "2", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"11", ",", "2", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"11", ",", "3", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"11", ",", "3", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"12", ",", "1", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"12", ",", "1", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"13", ",", "1", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"13", ",", "1", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"13", ",", "1", ",", "3"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"13", ",", "2", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"13", ",", "2", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"14", ",", "1", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"14", ",", "1", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"14", ",", "2", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"14", ",", "2", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"14", ",", "3", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"14", ",", "3", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"14", ",", "4", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"14", ",", "4", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"15", ",", "1", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"15", ",", "1", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"15", ",", "1", ",", "3"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"15", ",", "2", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"15", ",", "2", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"15", ",", "3", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"15", ",", "3", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"15", ",", "4", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"15", ",", "4", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"15", ",", "5", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"15", ",", "5", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"15", ",", "6", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"15", ",", "6", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"16", ",", "1", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"16", ",", "1", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"16", ",", "2", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"16", ",", "2", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"16", ",", "3", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"16", ",", "3", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"16", ",", "4", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"16", ",", "4", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"16", ",", "5", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"16", ",", "5", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"16", ",", "6", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"16", ",", "6", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"16", ",", "7", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"16", ",", "7", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"16", ",", "8", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"16", ",", "8", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"16", ",", "9", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"16", ",", "9", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"17", ",", "1", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"17", ",", "1", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Dipyramid\"\>", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Dipyramid\"\>", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Dipyramid\"\>", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Dipyramid\"\>", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Dipyramid\"\>", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Dipyramid\"\>", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Dipyramid\"\>", ",", "10"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Dipyramid\"\>", ",", "11"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Dipyramid\"\>", ",", "12"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Dipyramid\"\>", ",", "13"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Dipyramid\"\>", ",", "14"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Dipyramid\"\>", ",", "15"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Dipyramid\"\>", ",", "16"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Dipyramid\"\>", ",", "17"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Dipyramid\"\>", ",", "18"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Dipyramid\"\>", ",", "19"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Dipyramid\"\>", ",", "20"}], "}"}], 
   ",", "\<\"DisdyakisDodecahedralGraph\"\>", 
   ",", "\<\"DisdyakisTriacontahedralGraph\"\>", ",", "\<\"ErreraGraph\"\>", 
   ",", "\<\"FritschGraph\"\>", ",", "\<\"GoldnerHararyGraph\"\>", 
   ",", "\<\"HeawoodFourColorGraph\"\>", ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Heptahedral\"\>", ",", "15"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Heptahedral\"\>", ",", "29"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Heptahedral\"\>", ",", "34"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Hexahedral\"\>", ",", "5"}], "}"}], 
   ",", "\<\"IcosahedralGraph\"\>", ",", 
   RowBox[{"{", 
    RowBox[{"\<\"JohnsonSkeleton\"\>", ",", "17"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"JohnsonSkeleton\"\>", ",", "84"}], "}"}], 
   ",", "\<\"KittellGraph\"\>", ",", "\<\"McGregorGraph\"\>", 
   ",", "\<\"MooreGraph\"\>", ",", "\<\"OctahedralGraph\"\>", 
   ",", "\<\"PentakisDodecahedralGraph\"\>", 
   ",", "\<\"PentakisIcosidodecahedralGraph\"\>", ",", "\<\"PoussinGraph\"\>",
    ",", 
   RowBox[{"{", 
    RowBox[{"\<\"SierpinskiTetrahedron\"\>", ",", "2"}], "}"}], 
   ",", "\<\"SmallTriakisOctahedralGraph\"\>", 
   ",", "\<\"TetrahedralGraph\"\>", ",", "\<\"TetrakisHexahedralGraph\"\>", 
   ",", "\<\"TriakisIcosahedralGraph\"\>", 
   ",", "\<\"TriakisTetrahedralGraph\"\>", ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Triangulated\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"8", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Triangulated\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"8", ",", "3"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Triangulated\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"8", ",", "4"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Triangulated\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"8", ",", "5"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Triangulated\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"8", ",", "6"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Triangulated\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"8", ",", "8"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Triangulated\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"8", ",", "9"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Triangulated\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"8", ",", "10"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Triangulated\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"8", ",", "11"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Triangulated\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"8", ",", "12"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Triangulated\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"8", ",", "14"}], "}"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.877276847100373*^9, 3.877276856969674*^9}, 
   3.8772769166180716`*^9, 3.87727696383687*^9, 3.8772772016115847`*^9, 
   3.8772772403072176`*^9},
 CellLabel->"Out[76]=",ExpressionUUID->"3cff55b4-e29f-49de-b316-f78bf7deeb13"]
}, Open  ]],

Cell["This is the evaluation in 13.1", "Text",
 CellChangeTimes->{{3.8772772888630657`*^9, 
  3.87727729606645*^9}},ExpressionUUID->"3dbfdf04-c32d-45c2-bd70-\
e8ef9abdb1e8"],

Cell[CellGroupData[{

Cell[BoxData["$Version"], "Input",
 CellChangeTimes->{{3.877277328472952*^9, 3.8772773295636787`*^9}},
 CellLabel->
  "In[169]:=",ExpressionUUID->"d8b2b882-c9d5-4a8d-997d-34330bd4c81f"],

Cell[BoxData["\<\"13.1.0 for Microsoft Windows (64-bit) (June 16, \
2022)\"\>"], "Output",
 CellChangeTimes->{3.8772773298652487`*^9},
 CellLabel->
  "Out[169]=",ExpressionUUID->"fc84b8c3-5fb7-4262-9d79-65b856288cb2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"triangulatedGraphsWithAtLastThreeVertices", "=", 
  RowBox[{
   RowBox[{"Select", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"VertexCount", "[", 
       RowBox[{"GraphData", "[", "#", "]"}], "]"}], ">=", "3"}], "&"}], "]"}],
    "[", 
   RowBox[{"GraphData", "[", "\"\<Triangulated\>\"", "]"}], "]"}]}]], "Input",
 CellLabel->
  "In[170]:=",ExpressionUUID->"c0617d92-db9d-4e6c-b5d8-2ed52384b76e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\<\"Apollonian\"\>", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Apollonian\"\>", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Apollonian\"\>", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Apollonian\"\>", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Apollonian\"\>", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"11", ",", "1", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"11", ",", "1", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"11", ",", "2", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"11", ",", "2", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"11", ",", "3", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"11", ",", "3", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"12", ",", "1", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"12", ",", "1", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"13", ",", "1", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"13", ",", "1", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"13", ",", "1", ",", "3"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"13", ",", "2", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"13", ",", "2", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"14", ",", "1", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"14", ",", "1", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"14", ",", "2", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"14", ",", "2", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"14", ",", "3", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"14", ",", "3", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"14", ",", "4", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"14", ",", "4", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"15", ",", "1", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"15", ",", "1", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"15", ",", "1", ",", "3"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"15", ",", "2", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"15", ",", "2", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"15", ",", "3", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"15", ",", "3", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"15", ",", "4", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"15", ",", "4", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"15", ",", "5", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"15", ",", "5", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"15", ",", "6", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"15", ",", "6", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"16", ",", "1", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"16", ",", "1", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"16", ",", "2", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"16", ",", "2", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"16", ",", "3", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"16", ",", "3", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"16", ",", "4", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"16", ",", "4", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"16", ",", "5", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"16", ",", "5", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"16", ",", "6", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"16", ",", "6", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"16", ",", "7", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"16", ",", "7", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"16", ",", "8", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"16", ",", "8", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"16", ",", "9", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"16", ",", "9", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"17", ",", "1", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"17", ",", "1", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Dipyramid\"\>", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Dipyramid\"\>", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Dipyramid\"\>", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Dipyramid\"\>", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Dipyramid\"\>", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Dipyramid\"\>", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Dipyramid\"\>", ",", "10"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Dipyramid\"\>", ",", "11"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Dipyramid\"\>", ",", "12"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Dipyramid\"\>", ",", "13"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Dipyramid\"\>", ",", "14"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Dipyramid\"\>", ",", "15"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Dipyramid\"\>", ",", "16"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Dipyramid\"\>", ",", "17"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Dipyramid\"\>", ",", "18"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Dipyramid\"\>", ",", "19"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Dipyramid\"\>", ",", "20"}], "}"}], 
   ",", "\<\"DisdyakisDodecahedralGraph\"\>", 
   ",", "\<\"DisdyakisTriacontahedralGraph\"\>", ",", "\<\"ErreraGraph\"\>", 
   ",", "\<\"FritschGraph\"\>", ",", "\<\"GoldnerHararyGraph\"\>", 
   ",", "\<\"HeawoodFourColorGraph\"\>", ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Heptahedral\"\>", ",", "15"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Heptahedral\"\>", ",", "29"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Heptahedral\"\>", ",", "34"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Hexahedral\"\>", ",", "5"}], "}"}], 
   ",", "\<\"IcosahedralGraph\"\>", ",", 
   RowBox[{"{", 
    RowBox[{"\<\"JohnsonSkeleton\"\>", ",", "17"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"JohnsonSkeleton\"\>", ",", "84"}], "}"}], 
   ",", "\<\"KittellGraph\"\>", ",", "\<\"McGregorGraph\"\>", 
   ",", "\<\"MooreGraph\"\>", ",", "\<\"OctahedralGraph\"\>", 
   ",", "\<\"PentakisDodecahedralGraph\"\>", ",", "\<\"PoussinGraph\"\>", ",", 
   RowBox[{"{", 
    RowBox[{"\<\"SierpinskiTetrahedron\"\>", ",", "2"}], "}"}], 
   ",", "\<\"SmallTriakisOctahedralGraph\"\>", 
   ",", "\<\"TetrahedralGraph\"\>", ",", "\<\"TetrakisHexahedralGraph\"\>", 
   ",", "\<\"TriakisIcosahedralGraph\"\>", 
   ",", "\<\"TriakisTetrahedralGraph\"\>", ",", "\<\"TriangleGraph\"\>", ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Triangulated\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"8", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Triangulated\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"8", ",", "3"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Triangulated\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"8", ",", "4"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Triangulated\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"8", ",", "5"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Triangulated\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"8", ",", "6"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Triangulated\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"8", ",", "8"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Triangulated\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"8", ",", "9"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Triangulated\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"8", ",", "10"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Triangulated\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"8", ",", "11"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Triangulated\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"8", ",", "12"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Triangulated\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"8", ",", "14"}], "}"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.877277338771502*^9},
 CellLabel->
  "Out[170]=",ExpressionUUID->"96d0ace4-14c1-4345-ae06-415e861e2e4b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"PlanarFaceList", "[", 
    RowBox[{"GraphData", "[", "#", "]"}], "]"}], "&"}], "/@", 
  "triangulatedGraphsWithAtLastThreeVertices"}]], "Input",
 CellChangeTimes->{{3.8772773451200085`*^9, 3.877277362920165*^9}},
 CellLabel->
  "In[172]:=",ExpressionUUID->"5cb61c99-53fe-4f39-99f3-eb202971dc3b"],

Cell[BoxData[
 TemplateBox[<|"shortenedBoxes" -> TagBox[
     RowBox[{"{", 
       RowBox[{
         RowBox[{"{", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"1", ",", "3", ",", "6"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"1", ",", "4", ",", "5"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"1", ",", "5", ",", "2"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"1", ",", "6", ",", "4"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"2", ",", "4", ",", "7"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"2", ",", "5", ",", "4"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"2", ",", "7", ",", "3"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"3", ",", "4", ",", "6"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"3", ",", "7", ",", "4"}], "}"}]}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"1", ",", "3", ",", "11"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"1", ",", "4", ",", "9"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"1", ",", "5", ",", "8"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"1", ",", "6", ",", "12"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"1", ",", "8", ",", "2"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"1", ",", "9", ",", "5"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"1", ",", "11", ",", "6"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"1", ",", "12", ",", "4"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"2", ",", "4", ",", "15"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"2", ",", "5", ",", "10"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"2", ",", "7", ",", "14"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"2", ",", "8", ",", "5"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"2", ",", "10", ",", "4"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"2", ",", "14", ",", "3"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"2", ",", "15", ",", "7"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"3", ",", "4", ",", "13"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"3", ",", "6", ",", "11"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"3", ",", "7", ",", "16"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"3", ",", "13", ",", "6"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"3", ",", "14", ",", "7"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"3", ",", "16", ",", "4"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"4", ",", "5", ",", "9"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"4", ",", "6", ",", "13"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"4", ",", "7", ",", "15"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"4", ",", "10", ",", "5"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"4", ",", "12", ",", "6"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"4", ",", "16", ",", "7"}], "}"}]}], "}"}], ",", 
         TemplateBox[{"110"}, "OutputSizeLimit`Skeleton"], ",", 
         RowBox[{"{", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{"1", ",", "3", ",", "5"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"1", ",", "5", ",", "8"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"1", ",", "6", ",", "7"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"1", ",", "7", ",", "3"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"1", ",", "8", ",", "6"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"2", ",", "4", ",", "8"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"2", ",", "5", ",", "7"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"2", ",", "6", ",", "4"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"2", ",", "7", ",", "6"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"2", ",", "8", ",", "5"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"3", ",", "7", ",", "5"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"4", ",", "6", ",", "8"}], "}"}]}], "}"}]}], "}"}], 
     Short[#, 5]& ], "line" -> 172, "sessionID" -> 16937227258867162981, 
   "byteCount" -> 504188, "size" -> 5, "stored" -> False, "expr" -> 
   Missing["NotAvailable", "NewSessionID"], "wrap" -> OutputSizeLimit`Defer, 
   "version" -> 1|>,
  "OutputSizeLimitTemplate"]], "Output",
 CellChangeTimes->{{3.877277355147786*^9, 3.8772773640919437`*^9}},
 CellLabel->
  "Out[172]=",ExpressionUUID->"6a3a79a4-16f1-47ed-96c4-db23190de81d"]
}, Open  ]],

Cell["\<\
I am going to work on creating a function to make a planar coloring. I used \
the code from ColorGraphEdges to build a new function ColorPlanarGraphFaces.\
\>", "Text",
 CellChangeTimes->{{3.877277403925788*^9, 3.8772774141575017`*^9}, {
  3.877278382517707*^9, 
  3.8772784142357397`*^9}},ExpressionUUID->"8752c286-d44b-4d79-ab3a-\
60bb8632c2c9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
  "ResourceFunction", "[", "\"\<ResourceFunctionDefinitionViewer\>\"", "]"}], 
  "[", "\"\<ColorGraphEdges\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.877277417099618*^9, 3.877277447946751*^9}},
 CellLabel->
  "In[174]:=",ExpressionUUID->"acff18d1-f0bb-4db5-8e88-a52c3b4b211e"],

Cell[BoxData[
 TemplateBox[<|
  "obj" -> NotebookObject[
    "da61faaf-7c16-4c62-bf43-6497d32d8cb2", 
     "8971a45f-6f5b-4977-91b4-3313d7823126"], "label" -> 
   "\"Definitions: ColorGraphEdges\""|>,
  "NotebookObjectUUIDsUnsaved"]], "Output",
 CellChangeTimes->{{3.877277438981807*^9, 3.8772774547716923`*^9}},
 CellLabel->
  "Out[174]=",ExpressionUUID->"9171d3cc-30d9-4057-86b8-fc8469c9a6b5"]
}, Open  ]],

Cell["Here is an example:", "Text",
 CellChangeTimes->{{3.877278429789127*^9, 
  3.8772784321175575`*^9}},ExpressionUUID->"74f1443b-f222-4632-89da-\
8375acc48b39"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceFunction", "[", 
   RowBox[{
   "CloudObject", "[", 
    "\"\<https://www.wolframcloud.com/obj/burbery1/DeployedResources/Function/\
ColorPlanarGraphFaces\>\"", "]"}], "]"}], "[", 
  RowBox[{"GraphData", "[", 
   RowBox[{"{", 
    RowBox[{"\"\<ChromaticallyEquivalent\>\"", ",", 
     RowBox[{"{", 
      RowBox[{"16", ",", "6", ",", "1"}], "}"}]}], "}"}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.877278425577203*^9, 3.877278425577203*^9}},
 CellLabel->
  "In[191]:=",ExpressionUUID->"ec1b8255-5e39-4d2a-a2b8-a3c442dbf5ee"],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.97, 0.606, 0.081], 
    PolygonBox[
     NCache[{{0, Rational[1, 2] 3^Rational[1, 2]}, {Rational[1, 2], 0}, {
       Rational[-1, 2], 0}}, {{0, 0.8660254037844386}, {
       0.5, 0}, {-0.5, 0}}]]}, 
   {RGBColor[0.97, 0.606, 0.081], 
    PolygonBox[
     NCache[{{0, Rational[1, 2] 3^Rational[1, 2]}, {
       Rational[-1, 6], Rational[13, 30]}, {
       Rational[1, 6], Rational[13, 30]}}, {{
       0, 0.8660254037844386}, {-0.16666666666666666`, 
       0.43333333333333335`}, {0.16666666666666666`, 
       0.43333333333333335`}}]]}, 
   {RGBColor[0.91, 0.318, 0.243], 
    PolygonBox[
     NCache[{{0, Rational[1, 2] 3^Rational[1, 2]}, {
       Rational[1, 6], Rational[13, 30]}, {Rational[1, 2], 0}}, {{
       0, 0.8660254037844386}, {0.16666666666666666`, 0.43333333333333335`}, {
       0.5, 0}}]]}, 
   {RGBColor[0.34398, 0.49112, 0.89936], 
    PolygonBox[
     NCache[{{0, Rational[1, 2] 3^Rational[1, 2]}, {Rational[-1, 2], 0}, {
       Rational[-1, 6], Rational[13, 30]}}, {{
       0, 0.8660254037844386}, {-0.5, 0}, {-0.16666666666666666`, 
       0.43333333333333335`}}]]}, 
   {RGBColor[0.34398, 0.49112, 0.89936], 
    PolygonBox[
     NCache[{{Rational[1, 2], 0}, {Rational[1, 6], Rational[1, 10]}, {
       Rational[-1, 2], 0}}, {{0.5, 0}, {0.16666666666666666`, 
       0.1}, {-0.5, 0}}]]}, 
   {RGBColor[0.34398, 0.49112, 0.89936], 
    PolygonBox[
     NCache[{{Rational[1, 2], 0}, {Rational[1, 6], Rational[13, 30]}, {
       Rational[1, 6], Rational[29, 90]}}, {{0.5, 0}, {0.16666666666666666`, 
       0.43333333333333335`}, {0.16666666666666666`, 
       0.32222222222222224`}}]]}, 
   {RGBColor[0.97, 0.606, 0.081], 
    PolygonBox[
     NCache[{{Rational[1, 2], 0}, {Rational[1, 6], Rational[29, 90]}, {
       Rational[1, 6], Rational[1, 10]}}, {{0.5, 0}, {0.16666666666666666`, 
       0.32222222222222224`}, {0.16666666666666666`, 0.1}}]]}, 
   {RGBColor[0.91, 0.318, 0.243], 
    PolygonBox[
     NCache[{{Rational[1, 6], Rational[1, 10]}, {
       Rational[-1, 18], Rational[1, 10]}, {Rational[-1, 2], 0}}, {{
       0.16666666666666666`, 0.1}, {-0.05555555555555555, 0.1}, {-0.5, 0}}]]}, 
   {RGBColor[0.34398, 0.49112, 0.89936], 
    PolygonBox[
     NCache[{{Rational[1, 6], Rational[1, 10]}, {
       Rational[1, 6], Rational[29, 90]}, {
       Rational[1, 18], Rational[4, 15]}}, {{0.16666666666666666`, 0.1}, {
      0.16666666666666666`, 0.32222222222222224`}, {0.05555555555555555, 
      0.26666666666666666`}}]]}, 
   {RGBColor[0.91, 0.318, 0.243], 
    PolygonBox[
     NCache[{{Rational[1, 6], Rational[1, 10]}, {
       Rational[1, 18], Rational[4, 15]}, {
       Rational[1, 18], Rational[7, 45]}}, {{0.16666666666666666`, 0.1}, {
      0.05555555555555555, 0.26666666666666666`}, {0.05555555555555555, 
      0.15555555555555556`}}]]}, 
   {RGBColor[0.97, 0.606, 0.081], 
    PolygonBox[
     NCache[{{Rational[1, 6], Rational[1, 10]}, {
       Rational[1, 18], Rational[7, 45]}, {
       Rational[-1, 18], Rational[1, 10]}}, {{0.16666666666666666`, 0.1}, {
      0.05555555555555555, 0.15555555555555556`}, {-0.05555555555555555, 
      0.1}}]]}, 
   {RGBColor[0.97, 0.606, 0.081], 
    PolygonBox[
     NCache[{{Rational[-1, 18], Rational[1, 10]}, {
       Rational[-1, 6], Rational[1, 10]}, {
       Rational[-1, 2], 0}}, {{-0.05555555555555555, 
       0.1}, {-0.16666666666666666`, 0.1}, {-0.5, 0}}]]}, 
   {RGBColor[0.91, 0.318, 0.243], 
    PolygonBox[
     NCache[{{Rational[-1, 18], Rational[1, 10]}, {
       Rational[-1, 18], Rational[7, 45]}, {
       Rational[-1, 6], Rational[1, 10]}}, {{-0.05555555555555555, 
      0.1}, {-0.05555555555555555, 
      0.15555555555555556`}, {-0.16666666666666666`, 0.1}}]]}, 
   {RGBColor[0.34398, 0.49112, 0.89936], 
    PolygonBox[
     NCache[{{Rational[-1, 18], Rational[1, 10]}, {
       Rational[1, 18], Rational[7, 45]}, {
       Rational[-1, 18], Rational[7, 45]}}, {{-0.05555555555555555, 0.1}, {
      0.05555555555555555, 0.15555555555555556`}, {-0.05555555555555555, 
      0.15555555555555556`}}]]}, 
   {RGBColor[0.34398, 0.49112, 0.89936], 
    PolygonBox[
     NCache[{{Rational[-1, 6], Rational[1, 10]}, {
       Rational[-1, 6], Rational[19, 90]}, {
       Rational[-1, 2], 0}}, {{-0.16666666666666666`, 
       0.1}, {-0.16666666666666666`, 0.2111111111111111}, {-0.5, 0}}]]}, 
   {RGBColor[0.97, 0.606, 0.081], 
    PolygonBox[
     NCache[{{Rational[-1, 6], Rational[1, 10]}, {
       Rational[-1, 18], Rational[7, 45]}, {
       Rational[-1, 6], Rational[19, 90]}}, {{-0.16666666666666666`, 
      0.1}, {-0.05555555555555555, 
      0.15555555555555556`}, {-0.16666666666666666`, 0.2111111111111111}}]]}, 
   {RGBColor[0.97, 0.606, 0.081], 
    PolygonBox[
     NCache[{{Rational[-1, 6], Rational[19, 90]}, {
       Rational[-1, 6], Rational[29, 90]}, {
       Rational[-1, 2], 0}}, {{-0.16666666666666666`, 
       0.2111111111111111}, {-0.16666666666666666`, 
       0.32222222222222224`}, {-0.5, 0}}]]}, 
   {RGBColor[0.34398, 0.49112, 0.89936], 
    PolygonBox[
     NCache[{{Rational[-1, 6], Rational[19, 90]}, {
       Rational[-1, 18], Rational[4, 15]}, {
       Rational[-1, 6], Rational[29, 90]}}, {{-0.16666666666666666`, 
      0.2111111111111111}, {-0.05555555555555555, 
      0.26666666666666666`}, {-0.16666666666666666`, 
      0.32222222222222224`}}]]}, 
   {RGBColor[0.97, 0.606, 0.081], 
    PolygonBox[
     NCache[{{Rational[-1, 6], Rational[19, 90]}, {
       Rational[-1, 18], Rational[19, 90]}, {
       Rational[-1, 18], Rational[4, 15]}}, {{-0.16666666666666666`, 
      0.2111111111111111}, {-0.05555555555555555, 
      0.2111111111111111}, {-0.05555555555555555, 0.26666666666666666`}}]]}, 
   {RGBColor[0.34398, 0.49112, 0.89936], 
    PolygonBox[
     NCache[{{Rational[-1, 6], Rational[19, 90]}, {
       Rational[-1, 18], Rational[7, 45]}, {
       Rational[-1, 18], Rational[19, 90]}}, {{-0.16666666666666666`, 
      0.2111111111111111}, {-0.05555555555555555, 
      0.15555555555555556`}, {-0.05555555555555555, 0.2111111111111111}}]]}, 
   {RGBColor[0.91, 0.318, 0.243], 
    PolygonBox[
     NCache[{{Rational[-1, 6], Rational[29, 90]}, {
       Rational[-1, 6], Rational[13, 30]}, {
       Rational[-1, 2], 0}}, {{-0.16666666666666666`, 
       0.32222222222222224`}, {-0.16666666666666666`, 
       0.43333333333333335`}, {-0.5, 0}}]]}, 
   {RGBColor[0.34398, 0.49112, 0.89936], 
    PolygonBox[
     NCache[{{Rational[-1, 6], Rational[29, 90]}, {
       Rational[1, 6], Rational[13, 30]}, {
       Rational[-1, 6], Rational[13, 30]}}, {{-0.16666666666666666`, 
      0.32222222222222224`}, {0.16666666666666666`, 
      0.43333333333333335`}, {-0.16666666666666666`, 
      0.43333333333333335`}}]]}, 
   {RGBColor[0.97, 0.606, 0.081], 
    PolygonBox[
     NCache[{{Rational[-1, 6], Rational[29, 90]}, {
       Rational[1, 6], Rational[29, 90]}, {
       Rational[1, 6], Rational[13, 30]}}, {{-0.16666666666666666`, 
      0.32222222222222224`}, {0.16666666666666666`, 0.32222222222222224`}, {
      0.16666666666666666`, 0.43333333333333335`}}]]}, 
   {RGBColor[0.91, 0.318, 0.243], 
    PolygonBox[
     NCache[{{Rational[-1, 6], Rational[29, 90]}, {
       Rational[-1, 18], Rational[4, 15]}, {
       Rational[1, 6], Rational[29, 90]}}, {{-0.16666666666666666`, 
      0.32222222222222224`}, {-0.05555555555555555, 0.26666666666666666`}, {
      0.16666666666666666`, 0.32222222222222224`}}]]}, 
   {RGBColor[0.97, 0.606, 0.081], 
    PolygonBox[
     NCache[{{Rational[1, 6], Rational[29, 90]}, {
       Rational[-1, 18], Rational[4, 15]}, {
       Rational[1, 18], Rational[4, 15]}}, {{0.16666666666666666`, 
      0.32222222222222224`}, {-0.05555555555555555, 0.26666666666666666`}, {
      0.05555555555555555, 0.26666666666666666`}}]]}, 
   {RGBColor[0.91, 0.318, 0.243], 
    PolygonBox[
     NCache[{{Rational[-1, 18], Rational[4, 15]}, {
       Rational[-1, 18], Rational[19, 90]}, {
       Rational[1, 18], Rational[4, 15]}}, {{-0.05555555555555555, 
      0.26666666666666666`}, {-0.05555555555555555, 0.2111111111111111}, {
      0.05555555555555555, 0.26666666666666666`}}]]}, 
   {RGBColor[0.34398, 0.49112, 0.89936], 
    PolygonBox[
     NCache[{{Rational[1, 18], Rational[4, 15]}, {
       Rational[-1, 18], Rational[19, 90]}, {
       Rational[1, 18], Rational[7, 45]}}, {{0.05555555555555555, 
      0.26666666666666666`}, {-0.05555555555555555, 0.2111111111111111}, {
      0.05555555555555555, 0.15555555555555556`}}]]}, 
   {RGBColor[0.97, 0.606, 0.081], 
    PolygonBox[
     NCache[{{Rational[-1, 18], Rational[19, 90]}, {
       Rational[-1, 18], Rational[7, 45]}, {
       Rational[1, 18], Rational[7, 45]}}, {{-0.05555555555555555, 
      0.2111111111111111}, {-0.05555555555555555, 0.15555555555555556`}, {
      0.05555555555555555, 0.15555555555555556`}}]]}}]], "Output",
 CellChangeTimes->{3.87727842908604*^9},
 CellLabel->
  "Out[191]=",ExpressionUUID->"24c7bf87-b294-45a6-9bfb-2c433f3f72f5"]
}, Open  ]],

Cell["\<\
I can compare the number of vertices n with the number of edges which should \
be 3n-6.\
\>", "Text",
 CellChangeTimes->{{3.8772784707334576`*^9, 
  3.877278486530712*^9}},ExpressionUUID->"45209bc5-3461-4f30-99ae-\
6a99236e5f06"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AllTrue", "[", 
  RowBox[{"triangulatedGraphsWithAtLastThreeVertices", ",", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"3", 
       RowBox[{"VertexCount", "[", 
        RowBox[{"GraphData", "[", "#", "]"}], "]"}]}], "-", "6"}], "==", 
     RowBox[{"EdgeCount", "[", 
      RowBox[{"GraphData", "[", "#", "]"}], "]"}]}], "&"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.877278507547649*^9, 3.877278538718193*^9}},
 CellLabel->
  "In[192]:=",ExpressionUUID->"d695de83-647f-48af-8c97-10c6317055ee"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.8772785396399593`*^9},
 CellLabel->
  "Out[192]=",ExpressionUUID->"9ff98f65-8867-4469-943f-09043c9140df"]
}, Open  ]],

Cell["This is true for all graphs.", "Text",
 CellChangeTimes->{{3.877278544276946*^9, 
  3.8772785481406064`*^9}},ExpressionUUID->"4ae28b62-d8a0-4e92-8784-\
84c1c90da898"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Exercise 47", "Section",
 CellChangeTimes->{{3.8772785840906515`*^9, 
  3.877278585765384*^9}},ExpressionUUID->"33369eb3-9cd0-47d2-a752-\
7cb124f348ce"],

Cell[TextData[{
 "Prove that the complete bigraph ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["K", 
    RowBox[{"3", ",", "3"}]], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "d8df3d91-9747-4d03-9c85-665ea2247da0"],
 " isn\[CloseCurlyQuote]t planar."
}], "Text",
 CellChangeTimes->{{3.8772785873481145`*^9, 
  3.8772786022172804`*^9}},ExpressionUUID->"a9a222df-7ecd-486a-a00b-\
ca074d19a8fd"],

Cell[TextData[{
 "This is related to the famous three utilities problem. It is well-known \
that you connect three houses to each other so each one has water, gas, and \
electricity. This means the complete bipartite graph ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["K", 
    RowBox[{"3", ",", "3"}]], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "06f0acf5-cef3-4041-9cea-47d390146ad7"],
 " is not planar and cannot be embedded in the plane. This graph can however, \
be embedded on a torus. The toroidal embedding of this graph could be used to \
create a solution to the three utilities on a torus or donut or coffee cup or \
tire or other object that topologically homeomorphic to a torus."
}], "Text",
 CellChangeTimes->{{3.877278606262924*^9, 
  3.877278739477131*^9}},ExpressionUUID->"f3d28020-c60e-4e1d-8eae-\
29fe5dd5869a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CompleteGraph", "[", 
  RowBox[{"{", 
   RowBox[{"3", ",", "3"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.8772787430921993`*^9, 3.877278745996645*^9}},
 CellLabel->"In[79]:=",ExpressionUUID->"c0065f40-8f93-4fc4-903c-0267079122bb"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{1, 2, 3, 4, 5, 6}, {Null, 
       SparseArray[
       Automatic, {6, 6}, 0, {
        1, {{0, 3, 6, 9, 12, 15, 18}, {{4}, {5}, {6}, {4}, {5}, {6}, {4}, {
          5}, {6}, {1}, {2}, {3}, {1}, {2}, {3}, {1}, {2}, {3}}}, 
         Pattern}]}, {
      GraphLayout -> {"MultipartiteLayout", "VertexPartition" -> {3, 3}}}]]}, 
    TagBox[
     GraphicsGroupBox[
      GraphicsComplexBox[{{0., -0.35901699437494755`}, {0., 0.}, {0., 
       0.35901699437494755`}, {1., -0.35901699437494755`}, {1., 0.}, {1., 
       0.35901699437494755`}}, {
        {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
         ArrowBox[{{1, 4}, {1, 5}, {1, 6}, {2, 4}, {2, 5}, {2, 6}, {3, 4}, {3,
           5}, {3, 6}}, 0.01273]}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         DiskBox[1, 0.01273], DiskBox[2, 0.01273], DiskBox[3, 0.01273], 
         DiskBox[4, 0.01273], DiskBox[5, 0.01273], DiskBox[6, 0.01273]}}]],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->"NetworkGraphics",
  FormatType->TraditionalForm,
  FrameTicks->None]], "Output",
 CellChangeTimes->{3.877278746449697*^9, 3.8772789626724997`*^9},
 CellLabel->"Out[79]=",ExpressionUUID->"dcafa96e-6936-4a6c-920c-eec84694bad6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PlanarGraphQ", "[", 
  RowBox[{"CompleteGraph", "[", 
   RowBox[{"{", 
    RowBox[{"3", ",", "3"}], "}"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8772787475590277`*^9, 3.87727875023392*^9}},
 CellLabel->
  "In[194]:=",ExpressionUUID->"50d5083b-5788-4dee-ad8b-6c6b2a059989"],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{3.877278750530763*^9},
 CellLabel->
  "Out[194]=",ExpressionUUID->"fa2442f8-08b6-4100-ab76-be112cbb2ee2"]
}, Open  ]],

Cell["Find the canonical graph:", "Text",
 CellChangeTimes->{{3.8772788379042172`*^9, 
  3.877278840915589*^9}},ExpressionUUID->"1c107692-04c0-46cf-8dd1-\
d5ee81d75a06"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CanonicalGraph", "[", 
  RowBox[{"CompleteGraph", "[", 
   RowBox[{"{", 
    RowBox[{"3", ",", "3"}], "}"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.877278828932147*^9, 3.8772788343887463`*^9}},
 CellLabel->
  "In[195]:=",ExpressionUUID->"9eaf23ec-eca2-4fe2-bc53-736a0ce3d511"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{1, 2, 3, 4, 5, 6}, {Null, 
       SparseArray[
       Automatic, {6, 6}, 0, {
        1, {{0, 3, 6, 9, 12, 15, 18}, {{3}, {4}, {5}, {3}, {4}, {5}, {1}, {
          2}, {6}, {1}, {2}, {6}, {1}, {2}, {6}, {3}, {4}, {5}}}, 
         Pattern}]}]]}, 
    TagBox[
     GraphicsGroupBox[
      GraphicsComplexBox[{{0.7838865497975844, 0.7305948539476249}, {
       0.6766515978658769, 0.}, {0.0013338785384966467`, 
       1.0711569032415549`}, {1.5362714341317965`, 0.7293164161893542}, {0., 
       0.39203047432578986`}, {0.6792317594364689, 1.462177416117535}}, {
        {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
         ArrowBox[{{1, 3}, {1, 4}, {1, 5}, {2, 3}, {2, 4}, {2, 5}, {3, 6}, {4,
           6}, {5, 6}}, 0.018734289183135328`]}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         DiskBox[1, 0.018734289183135328], DiskBox[2, 0.018734289183135328], 
         DiskBox[3, 0.018734289183135328], DiskBox[4, 0.018734289183135328], 
         DiskBox[5, 0.018734289183135328], 
         DiskBox[6, 0.018734289183135328]}}]],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None]], "Output",
 CellChangeTimes->{3.8772788348729687`*^9},
 CellLabel->
  "Out[195]=",ExpressionUUID->"dce7fa63-1880-466b-a89e-bb0696d194d2"]
}, Open  ]],

Cell["Find the name of the graph data entry:", "Text",
 CellChangeTimes->{{3.8772790115716066`*^9, 
  3.8772790167042613`*^9}},ExpressionUUID->"48a8488d-7969-4ab0-af14-\
6b1f65c70793"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GraphData", "[", 
  RowBox[{"{", 
   RowBox[{"\"\<CompleteBipartite\>\"", ",", " ", 
    RowBox[{"{", 
     RowBox[{"3", ",", " ", "3"}], "}"}]}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.87727898201678*^9, 3.8772789917533712`*^9}},
 CellLabel->"In[80]:=",ExpressionUUID->"ae4e1d27-f231-4541-ba2b-e96bdeb7ba2b"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{1, 2, 3, 4, 5, 6}, {Null, 
       SparseArray[
       Automatic, {6, 6}, 0, {
        1, {{0, 3, 6, 9, 12, 15, 18}, {{4}, {5}, {6}, {4}, {5}, {6}, {4}, {
          5}, {6}, {1}, {2}, {3}, {1}, {2}, {3}, {1}, {2}, {3}}}, 
         Pattern}]}, {
      VertexCoordinates -> {{1, -1}, {1, 0}, {1, 1}, {2, -1}, {2, 0}, {2, 
        1}}}]]}, 
    TagBox[
     GraphicsGroupBox[
      GraphicsComplexBox[{{1., -1.}, {1., 0.}, {1., 1.}, {2., -1.}, {2., 
       0.}, {2., 1.}}, {
        {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
         ArrowBox[{{1, 4}, {1, 5}, {1, 6}, {2, 4}, {2, 5}, {2, 6}, {3, 4}, {3,
           5}, {3, 6}}, 0.02261146496815286]}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         DiskBox[1, 0.02261146496815286], DiskBox[2, 0.02261146496815286], 
         DiskBox[3, 0.02261146496815286], DiskBox[4, 0.02261146496815286], 
         DiskBox[5, 0.02261146496815286], DiskBox[6, 0.02261146496815286]}}]],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->"NetworkGraphics",
  FormatType->TraditionalForm,
  FrameTicks->None]], "Output",
 CellChangeTimes->{3.8772789924877357`*^9},
 CellLabel->"Out[80]=",ExpressionUUID->"ad1d7570-00f2-41b0-893a-03c67e361a3c"]
}, Open  ]],

Cell["Verify the graphs are isomorphic:", "Text",
 CellChangeTimes->{{3.8772790200639353`*^9, 
  3.877279025595178*^9}},ExpressionUUID->"44228eec-957e-4ec4-a610-\
7594b28b2021"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"IsomorphicGraphQ", "[", 
  RowBox[{
   RowBox[{"GraphData", "[", 
    RowBox[{"{", 
     RowBox[{"\"\<CompleteBipartite\>\"", ",", " ", 
      RowBox[{"{", 
       RowBox[{"3", ",", " ", "3"}], "}"}]}], "}"}], "]"}], ",", 
   RowBox[{"CompleteGraph", "[", 
    RowBox[{"{", 
     RowBox[{"3", ",", "3"}], "}"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8772789959784718`*^9, 3.8772790026653805`*^9}},
 CellLabel->"In[81]:=",ExpressionUUID->"7f97ce75-5056-4771-ae3b-943c9572f108"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.877279002915357*^9},
 CellLabel->"Out[81]=",ExpressionUUID->"673502ea-03b3-4b78-a39e-b70217bf5adc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GraphData", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\"\<CompleteBipartite\>\"", ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "3"}], "}"}]}], "}"}], ",", "\"\<Planar\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8772790288814898`*^9, 3.87727904994549*^9}},
 CellLabel->"In[83]:=",ExpressionUUID->"d71a1fba-1209-40ff-94a2-cde151c2351d"],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{{3.8772790452718287`*^9, 3.8772790508673735`*^9}},
 CellLabel->"Out[83]=",ExpressionUUID->"b540e48b-5f41-452e-9d08-cd34cc92c0ed"]
}, Open  ]],

Cell["\<\
The property apices is the list of vertices whose removal renders the graph \
planar:\
\>", "Text",
 CellChangeTimes->{{3.8772791064280567`*^9, 
  3.877279118849392*^9}},ExpressionUUID->"e9a4c995-5048-44d5-a9de-\
104acb0e7de4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GraphData", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\"\<CompleteBipartite\>\"", ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "3"}], "}"}]}], "}"}], ",", "\"\<Apices\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8772790288814898`*^9, 3.87727904994549*^9}, {
  3.877279120036894*^9, 3.8772791233262067`*^9}},
 CellLabel->"In[84]:=",ExpressionUUID->"12d474c3-9ba0-446e-a9b3-8afba3b1444a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.8772791236386223`*^9},
 CellLabel->"Out[84]=",ExpressionUUID->"70d66686-13f0-4aa3-8035-42c817b0029b"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Exercise 48", "Section",
 CellChangeTimes->{{3.8772791425286226`*^9, 3.8772791461379156`*^9}, {
  3.8772851941076603`*^9, 
  3.877285212640236*^9}},ExpressionUUID->"377503dc-bb07-46f9-a0ab-\
12dbe0c29f66"],

Cell["\<\
Complete the proof of Theorem B by showing that the stated procedure never \
the same color to two adjacent vertices.\
\>", "Text",
 CellChangeTimes->{{3.8772792251915474`*^9, 
  3.8772792447037334`*^9}},ExpressionUUID->"47d420ef-5a8d-4348-bf4a-\
36c88b991660"],

Cell["\<\
Theorem B: A graph is bipartite if and only if it contains no cycle of odd \
length.\
\>", "Text",
 CellChangeTimes->{{3.8772791754640355`*^9, 
  3.877279192930375*^9}},ExpressionUUID->"215a8f8d-aea0-4776-8145-\
0c72bf939508"],

Cell[TextData[{
 "Conversely, if a graph contains no odd cycles we can color its vertices \
with the two colors {0,1} by carrying out the following procedure: Begin with \
all vertices uncolored. If all neighbors of colored vertices are already \
colored, choose an uncolored vertex ",
 Cell[BoxData[
  FormBox["w", TraditionalForm]],ExpressionUUID->
  "ed4426f5-f2da-4c98-b748-cc6fb058e16e"],
 ", and color it 0. Otherwise choose a colored vertex ",
 Cell[BoxData[
  FormBox["u", TraditionalForm]],ExpressionUUID->
  "d749af6c-3b64-4208-bc1d-74fda51bf056"],
 " that has an uncolored neighbor ",
 Cell[BoxData[
  FormBox["v", TraditionalForm]],ExpressionUUID->
  "77a8a680-16b3-48e6-aafb-2e8b4476a262"],
 "; assign to ",
 Cell[BoxData[
  FormBox["v", TraditionalForm]],ExpressionUUID->
  "b6e509e9-a295-4b99-9997-d4e284103f55"],
 " the opposite color. Exercise 48 proves that a valid 2-coloring is \
eventually obtained."
}], "Text",
 CellChangeTimes->{{3.8772791964568996`*^9, 3.8772792084779935`*^9}, {
  3.877279294532379*^9, 
  3.877279386753459*^9}},ExpressionUUID->"5b64afe6-0e78-4dbd-be66-\
7d091315dad9"],

Cell["I will use examples to demonstrate a case for this.", "Text",
 CellChangeTimes->{{3.877279247313116*^9, 
  3.877279256709482*^9}},ExpressionUUID->"cafe51bf-aa24-4b2a-8e73-\
4cd0246e721e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GraphData", "[", "\"\<Bipartite\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.8772793911287394`*^9, 3.8772794161939983`*^9}},
 CellLabel->"In[86]:=",ExpressionUUID->"93ca2f3d-00f8-4220-b918-d4db072ee393"],

Cell[BoxData[
 TemplateBox[<|"shortenedBoxes" -> TagBox[
     RowBox[{"{", 
       RowBox[{
         RowBox[{"{", 
           RowBox[{"6", ",", "13"}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"6", ",", "24"}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"6", ",", "32"}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"6", ",", "99"}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"7", ",", "15"}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"7", ",", "17"}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"7", ",", "22"}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"7", ",", "26"}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"7", ",", "32"}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"7", ",", "34"}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"7", ",", "40"}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"7", ",", "46"}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"7", ",", "48"}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"7", ",", "50"}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"7", ",", "54"}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"7", ",", "63"}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"7", ",", "68"}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"7", ",", "77"}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"7", ",", "93"}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"7", ",", "109"}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"7", ",", "131"}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"7", ",", "163"}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"7", ",", "177"}], "}"}], ",", 
         TemplateBox[{"3103"}, "OutputSizeLimit`Skeleton"], ",", 
         RowBox[{"{", 
           RowBox[{"\"ZeroTwoBipartite\"", ",", 
             RowBox[{"{", 
               RowBox[{"7", ",", "17"}], "}"}]}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"\"ZeroTwoBipartite\"", ",", 
             RowBox[{"{", 
               RowBox[{"7", ",", "18"}], "}"}]}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"\"ZeroTwoBipartite\"", ",", 
             RowBox[{"{", 
               RowBox[{"7", ",", "19"}], "}"}]}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"\"ZeroTwoBipartite\"", ",", 
             RowBox[{"{", 
               RowBox[{"7", ",", "20"}], "}"}]}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"\"ZeroTwoBipartite\"", ",", 
             RowBox[{"{", 
               RowBox[{"7", ",", "21"}], "}"}]}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"\"ZeroTwoBipartite\"", ",", 
             RowBox[{"{", 
               RowBox[{"7", ",", "22"}], "}"}]}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"\"ZeroTwoBipartite\"", ",", 
             RowBox[{"{", 
               RowBox[{"7", ",", "23"}], "}"}]}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"\"ZeroTwoBipartite\"", ",", 
             RowBox[{"{", 
               RowBox[{"7", ",", "24"}], "}"}]}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"\"ZeroTwoBipartite\"", ",", 
             RowBox[{"{", 
               RowBox[{"7", ",", "25"}], "}"}]}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"\"ZeroTwoBipartite\"", ",", 
             RowBox[{"{", 
               RowBox[{"7", ",", "26"}], "}"}]}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"\"ZeroTwoBipartite\"", ",", 
             RowBox[{"{", 
               RowBox[{"7", ",", "27"}], "}"}]}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"\"ZeroTwoBipartite\"", ",", 
             RowBox[{"{", 
               RowBox[{"7", ",", "28"}], "}"}]}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"\"ZeroTwoBipartite\"", ",", 
             RowBox[{"{", 
               RowBox[{"7", ",", "29"}], "}"}]}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"\"ZeroTwoBipartite\"", ",", 
             RowBox[{"{", 
               RowBox[{"7", ",", "30"}], "}"}]}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"\"ZeroTwoBipartite\"", ",", 
             RowBox[{"{", 
               RowBox[{"7", ",", "31"}], "}"}]}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"\"ZeroTwoBipartite\"", ",", 
             RowBox[{"{", 
               RowBox[{"7", ",", "32"}], "}"}]}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"\"ZeroTwoBipartite\"", ",", 
             RowBox[{"{", 
               RowBox[{"7", ",", "33"}], "}"}]}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"\"ZeroTwoBipartite\"", ",", 
             RowBox[{"{", 
               RowBox[{"7", ",", "34"}], "}"}]}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"\"ZeroTwoBipartite\"", ",", 
             RowBox[{"{", 
               RowBox[{"7", ",", "35"}], "}"}]}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"\"ZeroTwoBipartite\"", ",", 
             RowBox[{"{", 
               RowBox[{"7", ",", "36"}], "}"}]}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"\"ZeroTwoBipartite\"", ",", 
             RowBox[{"{", 
               RowBox[{"7", ",", "37"}], "}"}]}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"\"ZeroTwoBipartite\"", ",", 
             RowBox[{"{", 
               RowBox[{"7", ",", "38"}], "}"}]}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"\"ZeroTwoBipartite\"", ",", 
             RowBox[{"{", 
               RowBox[{"7", ",", "39"}], "}"}]}], "}"}]}], "}"}], 
     Short[#, 8]& ], "line" -> 86, "sessionID" -> 16937289918179914857, 
   "byteCount" -> 655424, "size" -> 8, "stored" -> False, "expr" -> 
   Missing["NotAvailable", "NewSessionID"], "wrap" -> OutputSizeLimit`Defer, 
   "version" -> 1|>,
  "OutputSizeLimitTemplate"]], "Output",
 CellChangeTimes->{{3.8772794044921036`*^9, 3.877279416803255*^9}},
 CellLabel->"Out[86]=",ExpressionUUID->"2e614366-50ec-467d-81a0-81189b6c4417"]
}, Open  ]],

Cell["\<\
I will verify that all bipartite graphs have a chromatic number of two.\
\>", "Text",
 CellChangeTimes->{{3.877279458273652*^9, 
  3.877279472800804*^9}},ExpressionUUID->"03c63fde-dc74-4443-9a24-\
9048c1976a1f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AllTrue", "[", 
  RowBox[{
   RowBox[{"GraphData", "[", "\"\<Bipartite\>\"", "]"}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"GraphData", "[", 
      RowBox[{"#", ",", "\"\<ChromaticNumber\>\""}], "]"}], "==", "2"}], 
    "&"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.877279431312954*^9, 3.877279446877643*^9}},
 CellLabel->
  "In[196]:=",ExpressionUUID->"14dd17ba-a133-45d6-b7a0-fe3396b23626"],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{3.877279472066431*^9, 3.877279530601957*^9},
 CellLabel->
  "Out[196]=",ExpressionUUID->"2f790999-b6e4-4bcd-a70c-8254c63902ed"]
}, Open  ]],

Cell["\<\
I can color the vertices of a random sample of bipartite graphs:\
\>", "Text",
 CellChangeTimes->{{3.877284918355878*^9, 
  3.8772849388896923`*^9}},ExpressionUUID->"45f81a84-f31e-4002-b38e-\
1dafd6c5f705"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RandomSample", "[", 
  RowBox[{
   RowBox[{"GraphData", "[", "\"\<Bipartite\>\"", "]"}], ",", "30"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8772849408115635`*^9, 3.8772849485203056`*^9}},
 CellLabel->
  "In[105]:=",ExpressionUUID->"28e363e5-1324-4a6f-b605-7af679803b20"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Foster674A\"\>", ",", 
   RowBox[{"{", 
    RowBox[{"\<\"KayakPaddle\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "8", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Antelope\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"8", ",", "8"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Tree\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"12", ",", "295"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Giraffe\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"8", ",", "10"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Gear\"\>", ",", "16"}], "}"}], ",", "\<\"Foster554A\"\>", 
   ",", "\<\"3P3\"\>", ",", 
   RowBox[{"{", 
    RowBox[{"\<\"FibonacciCube\"\>", ",", "13"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Tree\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"12", ",", "164"}], "}"}]}], "}"}], ",", "\<\"2P2+K1\"\>", ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Tree\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"11", ",", "84"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Path\"\>", ",", "10"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CompleteBipartite\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"6", ",", "20"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CubicTransitive\"\>", ",", "68"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CompleteBipartite\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"8", ",", "9"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"HexagonalGrid\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "3"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Firecracker\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"7", ",", "3"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Tree\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"11", ",", "187"}], "}"}]}], "}"}], ",", "\<\"Foster936A\"\>", 
   ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CompleteBipartite\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"13", ",", "19"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"MongolianTent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "5"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CompleteBipartite\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"9", ",", "20"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"EdgeTransitive\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"18", ",", "3"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Tree\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"11", ",", "58"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Camel\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"6", ",", "10"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"GeneralizedPetersen\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"24", ",", "11"}], "}"}]}], "}"}], ",", "\<\"Foster194A\"\>", 
   ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Tree\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "64"}], "}"}]}], "}"}], ",", "\<\"Foster880A\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.8772849491139593`*^9},
 CellLabel->
  "Out[105]=",ExpressionUUID->"930053cf-f9a3-4be7-8086-534f4f34397d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PersistResourceFunction", "[", "\"\<ColorGraphVertices\>\"", 
  "]"}]], "Input",
 CellChangeTimes->{{3.877285007211071*^9, 3.8772850174950595`*^9}},
 CellLabel->
  "In[207]:=",ExpressionUUID->"d1c2c8da-1d85-4d18-9a2a-b55111cd6529"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["Success",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            FrameBox[
             StyleBox["\"\[Checkmark]\"", 
              Directive[
               RGBColor[
               0.3607843137254902, 0.596078431372549, 0.3803921568627451], 
               25], StripOnInput -> False], ContentPadding -> False, 
             FrameStyle -> None, FrameMargins -> {{0, 0}, {0, 0}}, 
             StripOnInput -> False], 
            GridBox[{{
               RowBox[{
                 TagBox[
                  TemplateBox[{"\"Message\"", "\": \""}, "RowDefault"], 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox[
                 "\"Successfully stored ColorGraphVertices as an \
initialization symbol.\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                  
                  TemplateBox[{"\"PersistenceLocation\"", "\": \""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  InterpretationBox[
                   RowBox[{
                    TagBox["PersistenceLocation", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GraphicsBox[{
                    Thickness[0.04081632653061224], {
                    FaceForm[{
                    RGBColor[0.749, 0.749, 0.749], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGZigAFlBwht7oCLr7ihKGNir7nDlhNl++ZLKUHF
LaC0Ihr/hz2Mv6FksgRL2Dt7VPkH9jDzYHxU+2D8D/Yw/oHvwY+Xzr5jj2oe
DPxA5TfAzGFgiEqxvu/Pa+GAKm/hADMPxkexD843dYDxIe41dUA1z8wB1T4o
n0EVzvcx73RMeKqMJq/scN+/d3peEYIP8z8AUyhEVw==
                    "]]}, {
                    RGBColor[1., 1., 1.], 
                    Opacity[1.], 
                    CapForm["Round"], 
                    JoinForm["Round"], 
                    
                    JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIFIGYC4pASlen/AwwcGMBAxAHM/4Dg7zOYqSWx1dCh
1t40bpeniMP9B9yTVzYZOlhuOVG2T17KIWz+6rU34g0dKl+qGXLoyDkcv7O1
pUbA0OHF75UfL/UqOBx1Wpt576O+gwpb41RnbiWHP6ffnTx8SNchSSDCckuH
skOeScN2BydtB441MlEp1ipw/qdLvkkCEmoOZkBu0yJtiP7TGg6SasGsi4V0
Hc5/D3689LaGw6L0za+KTXUdWl8H7pBr1XXYd1BcLdhV10EeJDBP30Fo6d6D
4mm6UP8YOVx0ufHhC5cGnM/k28Lrv14Jzg8z0FopfEEJrr+oq+/Jp/tKcPPB
7mdShtv/oBCooEgF7r5lQOvULqvA3Q/jw/wHdn+QEtz/geunpHYoK8DDh69w
TfftF9Lw8Hs3dRNP4RopePiuSQgJUleQgoe/V8AfieJwSXj83BL65Hg+TQYe
f2D+MznU+EWKbwBI8b86
                    "], CurveClosed -> {1}]}}, AspectRatio -> Automatic, 
                    ImageSize -> {25., 25.}, 
                    PlotRange -> {{0., 24.5}, {0., 24.5}}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Local\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GraphicsBox[{
                    Thickness[0.04081632653061224], {
                    FaceForm[{
                    RGBColor[0.749, 0.749, 0.749], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGZigAFlBwht7oCLr7ihKGNir7nDlhNl++ZLKUHF
LaC0Ihr/hz2Mv6FksgRL2Dt7VPkH9jDzYHxU+2D8D/Yw/oHvwY+Xzr5jj2oe
DPxA5TfAzGFgiEqxvu/Pa+GAKm/hADMPxkexD843dYDxIe41dUA1z8wB1T4o
n0EVzvcx73RMeKqMJq/scN+/d3peEYIP8z8AUyhEVw==
                    "]]}, {
                    RGBColor[1., 1., 1.], 
                    Opacity[1.], 
                    CapForm["Round"], 
                    JoinForm["Round"], 
                    
                    JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIFIGYC4pASlen/AwwcGMBAxAHM/4Dg7zOYqSWx1dCh
1t40bpeniMP9B9yTVzYZOlhuOVG2T17KIWz+6rU34g0dKl+qGXLoyDkcv7O1
pUbA0OHF75UfL/UqOBx1Wpt576O+gwpb41RnbiWHP6ffnTx8SNchSSDCckuH
skOeScN2BydtB441MlEp1ipw/qdLvkkCEmoOZkBu0yJtiP7TGg6SasGsi4V0
Hc5/D3689LaGw6L0za+KTXUdWl8H7pBr1XXYd1BcLdhV10EeJDBP30Fo6d6D
4mm6UP8YOVx0ufHhC5cGnM/k28Lrv14Jzg8z0FopfEEJrr+oq+/Jp/tKcPPB
7mdShtv/oBCooEgF7r5lQOvULqvA3Q/jw/wHdn+QEtz/geunpHYoK8DDh69w
TfftF9Lw8Hs3dRNP4RopePiuSQgJUleQgoe/V8AfieJwSXj83BL65Hg+TQYe
f2D+MznU+EWKbwBI8b86
                    "], CurveClosed -> {1}]}}, AspectRatio -> Automatic, 
                    ImageSize -> {25., 25.}, 
                    PlotRange -> {{0., 24.5}, {0., 24.5}}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Local\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Base: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    "\"file:///C:/Users/Hannah/AppData/Roaming/Wolfram/\
Objects/Persistence\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                   PersistenceLocation[
                   "Local", 
                    "file:///C:/Users/Hannah/AppData/Roaming/Wolfram/Objects/\
Persistence", 
                    Hold[Persistence`Data`a16937227258867162981$7]], 
                   Selectable -> False, Editable -> False, SelectWithContents -> 
                   True], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            FrameBox[
             StyleBox["\"\[Checkmark]\"", 
              Directive[
               RGBColor[
               0.3607843137254902, 0.596078431372549, 0.3803921568627451], 
               25], StripOnInput -> False], ContentPadding -> False, 
             FrameStyle -> None, FrameMargins -> {{0, 0}, {0, 0}}, 
             StripOnInput -> False], 
            GridBox[{{
               RowBox[{
                 TagBox[
                  TemplateBox[{"\"Message\"", "\": \""}, "RowDefault"], 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox[
                 "\"Successfully stored ColorGraphVertices as an \
initialization symbol.\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                  
                  TemplateBox[{"\"PersistenceLocation\"", "\": \""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  InterpretationBox[
                   RowBox[{
                    TagBox["PersistenceLocation", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GraphicsBox[{
                    Thickness[0.04081632653061224], {
                    FaceForm[{
                    RGBColor[0.749, 0.749, 0.749], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGZigAFlBwht7oCLr7ihKGNir7nDlhNl++ZLKUHF
LaC0Ihr/hz2Mv6FksgRL2Dt7VPkH9jDzYHxU+2D8D/Yw/oHvwY+Xzr5jj2oe
DPxA5TfAzGFgiEqxvu/Pa+GAKm/hADMPxkexD843dYDxIe41dUA1z8wB1T4o
n0EVzvcx73RMeKqMJq/scN+/d3peEYIP8z8AUyhEVw==
                    "]]}, {
                    RGBColor[1., 1., 1.], 
                    Opacity[1.], 
                    CapForm["Round"], 
                    JoinForm["Round"], 
                    
                    JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIFIGYC4pASlen/AwwcGMBAxAHM/4Dg7zOYqSWx1dCh
1t40bpeniMP9B9yTVzYZOlhuOVG2T17KIWz+6rU34g0dKl+qGXLoyDkcv7O1
pUbA0OHF75UfL/UqOBx1Wpt576O+gwpb41RnbiWHP6ffnTx8SNchSSDCckuH
skOeScN2BydtB441MlEp1ipw/qdLvkkCEmoOZkBu0yJtiP7TGg6SasGsi4V0
Hc5/D3689LaGw6L0za+KTXUdWl8H7pBr1XXYd1BcLdhV10EeJDBP30Fo6d6D
4mm6UP8YOVx0ufHhC5cGnM/k28Lrv14Jzg8z0FopfEEJrr+oq+/Jp/tKcPPB
7mdShtv/oBCooEgF7r5lQOvULqvA3Q/jw/wHdn+QEtz/geunpHYoK8DDh69w
TfftF9Lw8Hs3dRNP4RopePiuSQgJUleQgoe/V8AfieJwSXj83BL65Hg+TQYe
f2D+MznU+EWKbwBI8b86
                    "], CurveClosed -> {1}]}}, AspectRatio -> Automatic, 
                    ImageSize -> {25., 25.}, 
                    PlotRange -> {{0., 24.5}, {0., 24.5}}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Local\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GraphicsBox[{
                    Thickness[0.04081632653061224], {
                    FaceForm[{
                    RGBColor[0.749, 0.749, 0.749], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGZigAFlBwht7oCLr7ihKGNir7nDlhNl++ZLKUHF
LaC0Ihr/hz2Mv6FksgRL2Dt7VPkH9jDzYHxU+2D8D/Yw/oHvwY+Xzr5jj2oe
DPxA5TfAzGFgiEqxvu/Pa+GAKm/hADMPxkexD843dYDxIe41dUA1z8wB1T4o
n0EVzvcx73RMeKqMJq/scN+/d3peEYIP8z8AUyhEVw==
                    "]]}, {
                    RGBColor[1., 1., 1.], 
                    Opacity[1.], 
                    CapForm["Round"], 
                    JoinForm["Round"], 
                    
                    JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIFIGYC4pASlen/AwwcGMBAxAHM/4Dg7zOYqSWx1dCh
1t40bpeniMP9B9yTVzYZOlhuOVG2T17KIWz+6rU34g0dKl+qGXLoyDkcv7O1
pUbA0OHF75UfL/UqOBx1Wpt576O+gwpb41RnbiWHP6ffnTx8SNchSSDCckuH
skOeScN2BydtB441MlEp1ipw/qdLvkkCEmoOZkBu0yJtiP7TGg6SasGsi4V0
Hc5/D3689LaGw6L0za+KTXUdWl8H7pBr1XXYd1BcLdhV10EeJDBP30Fo6d6D
4mm6UP8YOVx0ufHhC5cGnM/k28Lrv14Jzg8z0FopfEEJrr+oq+/Jp/tKcPPB
7mdShtv/oBCooEgF7r5lQOvULqvA3Q/jw/wHdn+QEtz/geunpHYoK8DDh69w
TfftF9Lw8Hs3dRNP4RopePiuSQgJUleQgoe/V8AfieJwSXj83BL65Hg+TQYe
f2D+MznU+EWKbwBI8b86
                    "], CurveClosed -> {1}]}}, AspectRatio -> Automatic, 
                    ImageSize -> {25., 25.}, 
                    PlotRange -> {{0., 24.5}, {0., 24.5}}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Local\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Base: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    "\"file:///C:/Users/Hannah/AppData/Roaming/Wolfram/\
Objects/Persistence\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                   PersistenceLocation[
                   "Local", 
                    "file:///C:/Users/Hannah/AppData/Roaming/Wolfram/Objects/\
Persistence", 
                    Hold[Persistence`Data`a16937227258867162981$7]], 
                   Selectable -> False, Editable -> False, SelectWithContents -> 
                   True], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                  TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox["\"InstalledResourceFunction\"", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  Success[
  "InstalledResourceFunction", <|
   "MessageTemplate" :> 
    "Successfully stored `symName` as an initialization symbol.", 
    "MessageParameters" -> <|"symName" -> "ColorGraphVertices"|>, 
    "PersistenceLocation" -> 
    PersistenceLocation[
     "Local", "file:///C:/Users/Hannah/AppData/Roaming/Wolfram/Objects/\
Persistence", 
      Hold[Persistence`Data`a16937227258867162981$7]]|>],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.8772850215985017`*^9, 3.877285023113654*^9}},
 CellLabel->
  "Out[207]=",ExpressionUUID->"6e94e1de-68e6-44dc-b301-3a237a6c4634"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Select", "[", "GraphQ", "]"}], "[", 
  RowBox[{
   RowBox[{
    RowBox[{"ColorGraphVertices", "[", 
     RowBox[{"GraphData", "[", "#", "]"}], "]"}], "&"}], "/@", 
   RowBox[{"RandomSample", "[", 
    RowBox[{
     RowBox[{"GraphData", "[", "\"\<Bipartite\>\"", "]"}], ",", "30"}], 
    "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8772849534841337`*^9, 3.8772849614692492`*^9}, {
  3.877285039371483*^9, 3.877285045915614*^9}},
 CellLabel->
  "In[209]:=",ExpressionUUID->"aeadbf1d-9541-45aa-821c-6a669d2a69f8"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4, 5, 6, 7}, {Null, 
         SparseArray[
         Automatic, {7, 7}, 0, {
          1, {{0, 2, 4, 6, 6, 6, 9, 12}, {{6}, {7}, {6}, {7}, {6}, {7}, {1}, {
            2}, {3}, {1}, {2}, {3}}}, Pattern}]}, {
        VertexStyle -> {
          6 -> RGBColor[0.34398, 0.49112, 0.89936], 1 -> 
           RGBColor[0.97, 0.606, 0.081], 2 -> RGBColor[0.97, 0.606, 0.081], 3 -> 
           RGBColor[0.97, 0.606, 0.081], 4 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 7 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 5 -> 
           RGBColor[0.34398, 0.49112, 0.89936]}, 
         VertexCoordinates -> {{2., -1.}, {2., 0}, {2., 1.}, {1., -1.2}, {
           1.5, -1.2}, {1., -0.5}, {1., 0.5}}}]]}, 
      TagBox[
       GraphicsGroupBox[
        GraphicsComplexBox[{{2., -1.}, {2., 0.}, {2., 1.}, {1., -1.2}, {
         1.5, -1.2}, {1., -0.5}, {1., 0.5}}, {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
           ArrowBox[{{1, 6}, {1, 7}, {2, 6}, {2, 7}, {3, 6}, {3, 7}}, 
            0.024213836477987416`]}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[1, 0.024213836477987416]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[2, 0.024213836477987416]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[3, 0.024213836477987416]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[4, 0.024213836477987416]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[5, 0.024213836477987416]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[6, 0.024213836477987416]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[7, 0.024213836477987416]}}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    FormatType->TraditionalForm,
    FrameTicks->None], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 
        19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31}, {Null, 
         SparseArray[
         Automatic, {31, 31}, 0, {
          1, {{0, 2, 3, 4, 5, 9, 11, 12, 13, 14, 18, 20, 21, 22, 23, 27, 29, 
            30, 31, 32, 36, 38, 39, 40, 41, 45, 47, 48, 49, 50, 54, 60}, {{
            5}, {31}, {5}, {5}, {5}, {1}, {2}, {3}, {4}, {10}, {31}, {10}, {
            10}, {10}, {6}, {7}, {8}, {9}, {15}, {31}, {15}, {15}, {15}, {
            11}, {12}, {13}, {14}, {20}, {31}, {20}, {20}, {20}, {16}, {17}, {
            18}, {19}, {25}, {31}, {25}, {25}, {25}, {21}, {22}, {23}, {24}, {
            30}, {31}, {30}, {30}, {30}, {26}, {27}, {28}, {29}, {1}, {6}, {
            11}, {16}, {21}, {26}}}, Pattern}]}, {
        VertexStyle -> {
          18 -> RGBColor[0.97, 0.606, 0.081], 6 -> 
           RGBColor[0.97, 0.606, 0.081], 23 -> RGBColor[0.97, 0.606, 0.081], 
           22 -> RGBColor[0.97, 0.606, 0.081], 31 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 15 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 1 -> 
           RGBColor[0.97, 0.606, 0.081], 27 -> RGBColor[0.97, 0.606, 0.081], 
           20 -> RGBColor[0.34398, 0.49112, 0.89936], 24 -> 
           RGBColor[0.97, 0.606, 0.081], 9 -> RGBColor[0.97, 0.606, 0.081], 
           29 -> RGBColor[0.97, 0.606, 0.081], 13 -> 
           RGBColor[0.97, 0.606, 0.081], 2 -> RGBColor[0.97, 0.606, 0.081], 8 -> 
           RGBColor[0.97, 0.606, 0.081], 25 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 21 -> 
           RGBColor[0.97, 0.606, 0.081], 3 -> RGBColor[0.97, 0.606, 0.081], 
           30 -> RGBColor[0.34398, 0.49112, 0.89936], 4 -> 
           RGBColor[0.97, 0.606, 0.081], 11 -> RGBColor[0.97, 0.606, 0.081], 
           26 -> RGBColor[0.97, 0.606, 0.081], 10 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 19 -> 
           RGBColor[0.97, 0.606, 0.081], 7 -> RGBColor[0.97, 0.606, 0.081], 
           16 -> RGBColor[0.97, 0.606, 0.081], 17 -> 
           RGBColor[0.97, 0.606, 0.081], 28 -> RGBColor[0.97, 0.606, 0.081], 
           14 -> RGBColor[0.97, 0.606, 0.081], 12 -> 
           RGBColor[0.97, 0.606, 0.081], 5 -> 
           RGBColor[0.34398, 0.49112, 0.89936]}, 
         VertexCoordinates -> CompressedData["
1:eJxTTMoPSmViYGCQB2IQDQEP7BmwApg4jP6ARqPLw2gWBzSDHLDLw8zhwCEP
4wuhmSeAQx5mnggOeRhfCs08CRzyMPNkcMjD+Ipo5ingkIeZp4RDHsZXRTNP
BYc8zDw1HPIwvhiUz3EAADXYK00=
          "]}]]}, 
      TagBox[GraphicsGroupBox[GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGCQB2IQDQEP7BmwApg4jP6ARqPLw2gWBzSDHLDLw8zhwCEP
4wuhmSeAQx5mnggOeRhfCs08CRzyMPNkcMjD+Ipo5ingkIeZp4RDHsZXRTNP
BYc8zDw1HPIwvhiUz3EAADXYK00=
         "], {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
           ArrowBox[{{1, 5}, {1, 31}, {2, 5}, {3, 5}, {4, 5}, {6, 10}, {6, 
            31}, {7, 10}, {8, 10}, {9, 10}, {11, 15}, {11, 31}, {12, 15}, {13,
             15}, {14, 15}, {16, 20}, {16, 31}, {17, 20}, {18, 20}, {19, 
            20}, {21, 25}, {21, 31}, {22, 25}, {23, 25}, {24, 25}, {26, 30}, {
            26, 31}, {27, 30}, {28, 30}, {29, 30}}, 0.06902834008097165]}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[1, 0.06902834008097165]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[2, 0.06902834008097165]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[3, 0.06902834008097165]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[4, 0.06902834008097165]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[5, 0.06902834008097165]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[6, 0.06902834008097165]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[7, 0.06902834008097165]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[8, 0.06902834008097165]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[9, 0.06902834008097165]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[10, 0.06902834008097165]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[11, 0.06902834008097165]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[12, 0.06902834008097165]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[13, 0.06902834008097165]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[14, 0.06902834008097165]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[15, 0.06902834008097165]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[16, 0.06902834008097165]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[17, 0.06902834008097165]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[18, 0.06902834008097165]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[19, 0.06902834008097165]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[20, 0.06902834008097165]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[21, 0.06902834008097165]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[22, 0.06902834008097165]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[23, 0.06902834008097165]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[24, 0.06902834008097165]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[25, 0.06902834008097165]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[26, 0.06902834008097165]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[27, 0.06902834008097165]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[28, 0.06902834008097165]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[29, 0.06902834008097165]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[30, 0.06902834008097165]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[31, 0.06902834008097165]}}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    FormatType->TraditionalForm,
    FrameTicks->None], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12}, {Null, 
         SparseArray[
         Automatic, {12, 12}, 0, {
          1, {{0, 2, 4, 6, 8, 10, 13, 16, 17, 18, 20, 21, 22}, {{2}, {12}, {
            1}, {3}, {2}, {4}, {3}, {5}, {4}, {6}, {5}, {7}, {10}, {6}, {8}, {
            9}, {7}, {7}, {6}, {11}, {10}, {1}}}, Pattern}]}, {
        VertexStyle -> {
          6 -> RGBColor[0.34398, 0.49112, 0.89936], 1 -> 
           RGBColor[0.97, 0.606, 0.081], 9 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 2 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 8 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 3 -> 
           RGBColor[0.97, 0.606, 0.081], 4 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 11 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 10 -> 
           RGBColor[0.97, 0.606, 0.081], 7 -> RGBColor[0.97, 0.606, 0.081], 
           12 -> RGBColor[0.34398, 0.49112, 0.89936], 5 -> 
           RGBColor[0.97, 0.606, 0.081]}, 
         VertexCoordinates -> {{0, 0.851923233558217}, {
           0, 1.7038464671164344`}, {0, 2.5557697006746514`}, {
           0.9584136377529944, 3.407692934232869}, {1.9168272755059887`, 
           2.5557697006746514`}, {1.9168272755059887`, 1.7038464671164344`}, {
           1.277884850337326, 0.851923233558217}, {0.8519232335582172, 0}, {
           1.7038464671164344`, 0}, {2.555769700674652, 0.851923233558217}, {
           2.555769700674652, 0}, {0, 0}}}]]}, 
      TagBox[
       GraphicsGroupBox[
        GraphicsComplexBox[{{0., 0.851923233558217}, {0., 
         1.7038464671164344`}, {0., 2.5557697006746514`}, {0.9584136377529944,
          3.407692934232869}, {1.9168272755059887`, 2.5557697006746514`}, {
         1.9168272755059887`, 1.7038464671164344`}, {1.277884850337326, 
         0.851923233558217}, {0.8519232335582172, 0.}, {1.7038464671164344`, 
         0.}, {2.555769700674652, 0.851923233558217}, {2.555769700674652, 
         0.}, {0., 0.}}, {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
           ArrowBox[{{1, 2}, {1, 12}, {2, 3}, {3, 4}, {4, 5}, {5, 6}, {6, 
            7}, {6, 10}, {7, 8}, {7, 9}, {10, 11}}, 0.03309352946135968]}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[1, 0.03309352946135968]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[2, 0.03309352946135968]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[3, 0.03309352946135968]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[4, 0.03309352946135968]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[5, 0.03309352946135968]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[6, 0.03309352946135968]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[7, 0.03309352946135968]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[8, 0.03309352946135968]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[9, 0.03309352946135968]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[10, 0.03309352946135968]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[11, 0.03309352946135968]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[12, 0.03309352946135968]}}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    FormatType->TraditionalForm,
    FrameTicks->None], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[CompressedData["
1:eJwl1vO7EAYYBeDbzbZ5s23bvNl1s23btm2bW21xyHZbbotbbmvvffbD+5y/
4DvnCwrpFtw1TEBAwPLAgIDQFAFhCUd4IhCRSEQmClGJRnRiEJNYxCYOcYlH
fBKQkEQkJglJSUZyUpCSVASRmjSkJR3pyUBGMpGZLGQlG9nJQU5ykZs85CUf
+SlAQQpRmCIUpRjFKUFJSlGaMpSlHOWpQEUqUZkqVKUa1alBTWoRTG3qUJd6
1KcBDWlEY5rQlGY0pwUtCaEVrWlDW9rRng50pBOd6UJXutGdHvSkF73pQ1/6
0Z8BDGQQgxnCUIYxnBGMZBSjGcNYxjGeCUxkEpOZwlSmMZ0ZzGQWs5nDXOYx
nwUsZBGLWcJSlrGcFaxkFatZw1rWsZ4NbGQTm9nCVraxnR3sZBe72cNe9rGf
AxzkEIf5ju85wlF+4EeOcZwTnOQUp/mJn/mFXznDWc5xngtc5BKXucJVrnGd
G9zkFre5w13ucZ/f+J0HPOQRj3nCU57xnD/4kxe85BWvecNb/uJv3vGeD3zk
E5/5wlf+4V++EXr8YQgkLOEITwQiEonIRCEq0YhODGISi9jEIS7xiE8CEpKI
xCQhKclITgpSkoogUpOGtKQjPRnISCYyk4WsZCM7OchJLnKTh7zkIz8FKEgh
ClOEohSjOCUoSSlKU4aylKM8FahIJSpThapUozo1qEktgqlNHepSj/o0oCGN
aEwTmtKM5rSgJSG0ojVtaEs72tOBjnSiM10ILe9udKcHPelFb/rQl370ZwAD
GcRghjCUYQxnBCMZxWjGMJZxjGcCE5nEZKYwlWlMZwYzmcVs5jCXecxnAQtZ
xGKWsJRlLGcFK1nFatawlnWsZwMb2cRmtrCVbWxnBzvZxW72sJd97OcABznE
Yb7je45wlB/4kWMc5wQnOcVpfuJnfuFXznCWc5znAhe5xGWucJVrXOcGN7nF
be5wl3vc5zd+5wEPecRjnvCUZzznD/7kBS95xWve8Ja/+Jt3vOcDH/nEZ77w
lX/4l2+EDn8YAglLOMITgYhEIjJRiEo0ohODmMQiNnGISzzik4CEJCIxSUhK
MpKTgpSkIojUpCEt6UhPBjKSicxkISvZyE4OcpKL3OQhL/nITwEKUojCFKEo
xShOCUpSitKUoSzlKE8FKlKJylShKtWoTg1qUotgalOHutSjPg1oSCMa04Sm
NKM5LWhJCK1oTRva0o72dKAjnehMF7rSje70oCe96E0f+tKP/gxgIIMYzBCG
MozhjGAkoxjNGMYyjvFMYCKTmMwUpjKN6cxgJrOYzRzmMo/5LGAhi1jMEpay
LPD///M/Vj819w==
        "], {Null, 
         SparseArray[Automatic, {672, 672}, 0, {1, {CompressedData["
1:eJwl1QWXEFQQgNFl6ZbuWEG6u6S7pDuXzgWkke7uRnCRLkG6u7sbQVK6G/Gq
75z7B2bmOy8oOKRaxzABAQGhgQH/vbBEIDLRiEls4pGQJCQniNSkJQOZyUZO
8pCfQhShOKUoSwUqU5Ua1KYeDWlCM1rShvaE0IVu9KQP/RjIEIYzirFMYDLT
mMkc5jGfhSxhOatYwzo2soXt7GIvBzjMMU5yhvNc4io3uMUd7vOQJzznFW/5
wGe+EmjA4YlEVGIQi7gkIDHJSEkq0pCeTGQlB7nJR0EKU4ySlKE8lahCdWpR
lwY0JpgWtKYd/y68M13pQW/6MoDBDGMkYxjPJKYyg9nMJZQFLGYZK1nNWjaw
mW3sZA/7OcRRTnCac1zkCte5yW3u8RePecZL3vCeT/xNGPcajohEITrfEIf4
JCIpKfiW70hHRrKQnVzkpQDfU5QSlKYcFfmBatSkDvVpRFOa04q2dKATP9Kd
XvxEfwYxlBGMZhwTmcJ0ZvEzv/Ari1jKCn7jd9azia3sYDf7OMgRjnOKs1zg
Mtf4gz+5ywMe8ZQXvOYdH/kS+H/8YYlAZKIRk9jEIyFJSE4QqUlLBjKTjZzk
IT+FKEJxSlGWClSmKjWoTT0a0oRmtKQN7QmhC93oSR/6MZAhDGcUY5nAZKYx
kznMYz4LWcJyVrGGdWxkC9vZxV4OcJhjnOQM57nEVW5wizvc5yFPeM4r3vKB
z3wlMJz+iURUYhCLuCQgMclISSrSkJ5MZCUHuclHQQpTjJKUoTyVqEJ1alGX
BjQmmBa0ph0d6UxXetCbvgxgMMMYyRjGM4mpzGA2cwllAYtZxkpWs5YNbGYb
O9nDfg5xlBOc5hwXucJ1bnKbe/zFY57xkje85xN/Eya8/olIFKLzDXGITyKS
koJv+Y50ZCQL2clFXgrwPUUpQWnKUZEfqEZN6lCfRjSlOa1oSwc68SPd6cVP
9GcQQxnBaMYxkSlMZxY/8wu/soilrOA3fmc9m9jKDnazj4Mc4TinOMsFLnON
P/iTuzzgEU95wWve8ZEv4f//+MMSgchEIyaxiUdCkpCcIFKTlgxkJhs5yUN+
ClGE4pSiLBWoTFVqUJt6NKQJzWhJG9oTQhe60ZM+9GMgQxjOKMYygclMYyZz
mMd8FrKE5axiDevYyBa2s4u9HOAwxzjJGc5ziavc4BZ3uM9DnvCcV7zlA5/5
SmBE/ROJqMQgFnFJQGKSkZJUpCE9mchKDnKTj4IUphglKUN5KlGF6tSiLg1o
TDAtaE07OtKZrvSgN30ZwGCGMZIxjGcSU5nBbOYSygIWs4yVrGYtG9jMNnay
h/0c4ignOM05LnKF69zkH6PAVmU=
            "], CompressedData["
1:eJwtmXXcVkUUhHdXAYtGSkFCbFEERFQsQLERA1vABqTTBFSQVGkkBRsQxAAD
sRXsbsXA7m49jzN/zG/f7357d885c2b2vu9t3KNvlz4lpbS+Uko5Rj5vFNg4
6e8KgU38Oaakzfy5YmBTz988UMv3VA5s6TW2CNT2nCqB6p5TLVDTc6oGanif
OoHtvE+9wPbep25gB8dRP9DUcWwdaOY4tgps6zmNArt4TpNAc89pHNjVezUI
7Oj1twns5H0bBnZ2TrsFjnROLQJHO6fdA0c5pz0CnZ1Tq8AxzqlloIvr0iFw
iGtxcOBQ16hjoJPrcmDgMNelfeAI1+WgwOHea5/Aqd6rXeB077Vv4DTHvF/g
JMd5QOAUx79/4GTHs1fgBMewd6CrY2sbONHxtA4c63jaBI53PHsGjjNXPQK3
maszA0vM1VmBxeaK60vNFdeXmSvuvd08nRG42Tx1C9xqnroHbjFPXJ9mbrg+
w5xx7/Sknjg70CupJ84J9E7qiXMDFyT11nmBPkn9dH6gb1Kf9Qz0S+od7h2U
1DvcOySpd1h/cFLvcG//pN7h3oFJvcP6AzxnZmC251wXmOM5swJzvdfVgXne
69rAAu91TWC+63xJ4HrX+bLAQtf50sAi1/nywA2u7ZWBm1zzKwI3us6jAxNc
56sCE13nMYFJrvOIwFjXdlRgvGs+MjDONbwwsNw1vDhwh2t4UWCFuRgamGwu
hgemmothgSlJ/UXvXVnUU/Tk5UW9Rh9eUaQ/NHVVkebQ2ugiLaKvMUWaQC+d
snSAjg7O0gfaOSRLE+iuY5YO0GP7LH2gwQ5Z64yN9eYVrTMuxvlF64yPcUHR
OhN8nXUmej7rTPIc1p4Z4+yiPWfFOKdon+tinFsU4zRfJ/bpnk+8MzwHnY+I
8eoinY+K8doinY+M8ZoinV8S4+QinV8W49QinV8a45Qi/+pftAf+NbBoD/xr
QFEceAGHADmj/35FOeMLfYvqgsf1KsoHX7ugKB/8rndRzvjFeUV1wS96FtUF
vzi/qHbsdXYRd+x1bhG/7HVOEb+s08NzuPcsz2HNMz0HrzwjxqFFXtk9xuFF
XtktxmGu4akxXuganh7jxa7haTFeVOyF1LKoH0+klkU92JVaFnl3Z+Iq8u4u
xFLk3ccQo+ccaL643t58Mf8g80XMHcwXMR9sjoi5o7mDr/2K+h+ODijSCNzt
X6QRuNjHc+CinefAxb6eg772inFQkab2jnFIkdbaxji4SF97sGeRplqxT5HW
WrJ/keZaE3uRFtsQe5H+9iR29+Fu1MC914K83ZO7U4+i/1MTcuYataIWzKU+
5N/MfMJRU3MId9uaW/japaif0cauRT2MHpoX9TY62dGxwNdOjgWOdnYscLed
96fvt/f+9P0OjpG+b1SkL/ZqXKQp1m9SpDX2bVDUh8TZsKgPiX+boj4k5q3N
A/nUNw/kuZV5ILc6Rfpiv7pFmmK/ekVaY79a5ope3dL80J+1zRt9W7OoV/Gi
6kX9iV/VKOpb/KqK+SSmauaTmKqaT2KqXKQLNLl5kRbQ7RZFGkG3mxZpCq1u
VqQ1tLpJkb7QakXzi/4rmXc8okJRP/R03Zr6OnVr5usNzD33FnMJrxubS3jd
yHx38hx4au058NTGc+CSfv03q77UOrm+1DqbA2r9S8z5K6tGv8b4d1Zdfovx
n6x68X/Wgnv+n833P36Ipg9+z4oJvv7IigO+/syKD75+zMqLPvwpKy967+es
vOjJ7xwDGvrBMaCh7x0nGvo6Sw/0x7dZeqA/vsnSDP3xla/j4V/4Oh7+pe/F
wz/Pig8P/zQrbjz8s6x88PCPs+qCDj/Jqgs63JBVO3T4QVY+eN2HWXnibx9l
5YbvvZeVGx70flZu+M76rNxaeS9yO9Z7kdvx3ovc0PXbWXvQ9+9m7UGvv5MV
Bxp4LWtdfPD1rP3wwVez4sArX8rKGQ9/JStnPPzlrLrg4c9n+QU99kKWj9Bj
L2Z5Bz32XHx+K+t8fybGN7LO9GdjfDPrrF+bFTcaW5cVK7p6OisH9Pao90JX
j3t9dPWY90V7D2XphfgfztIReT2SpR3yXZ3lF+h0TZZfoNMHszwFnT5gHnlO
uM/88pxwvznlOWGlewO+7nVvwNEq9wbc3eV8OcPucb6cYXe7Jpxhd2bxgZ/c
kcUHPrMiiw+85fYYn8g655bF+FTW2bY8xiezzrwl1iBrLrXu2Gux9UgMi7L6
m/k3ZGmAdRZmaYD152d5Mc8/C7I8muef67O8m+cfnvdnx9+3ZT3vz4rxlqzn
/etivDXre8O8GG/O+t4wJ8Ybs743zI3xpiwvxUMru1Z8ruZaca2Ka8W8qubu
PffiGvctPfqg+5m+XOE60/d3uv7o4Q7XHA2sdt1qm/cn3BNrXNta7rd1rgs9
9rTrRe+tdR2X+e865oJ76pov7qnnvFa6duS1yvUlr3td3+WOu6LvJe5K5pq4
K7jf6MVPfB+9+LHXo183+BoaeNbX6PtnfB96QIuLPKeme4DrNdwDzK9u3tEz
OoR3dI4+6Q20jSanZfkV59WULI/ivJqa5V2cVzOyvA4eZ2Z5IPxOz/I9OJ3m
+jf2OtS/ideBo0a+d4nrzr1LzQ3rLzY3k503vnWNc8WrrnUN8LDxjp+zeqxz
5Kwe5xw5q8d4LvW5ymtQk9Feu4bns8fXXpM98OKxjgMvHhW4OksLI/wZvYz0
Z/RyaeDKLC1cFrg8Sy+XBK7I0gvrTXGu7ENdZnr/aa4HsRE38V7kdSYFLvY6
EwMXeq8Jgb6Bwf7cLzDEc/oEBvnegYFh/tw/MNzzBwSGen4Hc4FndTQXeFZ7
84Wv8Z3zBteZ76ULXWe+ly4yFwfEeIHrcGCgl+twUKC367B/oGeWd7QLnJfl
L/sFzs/yl0PMBz3byXzQs+wFZwscM3VCXx1du/+fv1xDNLiv88XL9na++N0+
rgl+1yZwSqBbYK/ASYHugbaBkwNnBFoHuvj6noHOvt4qcIzvbRE4LHBqoGXg
iMDpgT0ChwdOCzT3/3sEdve1swK7ee6ZgV38/3MDu/ra2YGdPfecwA6BIwPH
BnYKHB04LrBj4KjA8YFmvo/6buf1qO/2XgMOmgROcJ7bBrq6Fk0DJ7oWbbz2
INeEPYe4VuxD/23j+dS3kdekvo29Jhw08L70ckPHRi9v7djo93pZfYKG6mf1
D9raKquv0FNt34cu6/o+tFjHa6PRLc0TvNc0T/Bey1zOcjwtzF9D89TZ8bQ0
39WcGzHVcG7EVN25EdNm3g8+NvcecLCF94abSr6fNTfxuuy7qddi340Dlc13
xUBV810hUCWrJ4rzZ/2NnDP7ZteCvf5N0hgc8KN2O3PzT5LG4OPPpL3wl7+T
9sJT/kraC6/5LSk3vOSPpHzwm9+T8sRvfk7KB1/5JSlPfOXXpNzwnq+S8qGX
v07Kkx7/Jik3+vqHpHzQxI9JeaKJn5Jya+51vk2KhXW+S4qRdb5Piutzz0Hr
X/g6Wv/S8/GDj2L8JGnPDYHPkvb8OPBp0p7vJ2kdz383Set4/ntJWsfz30nq
U3zsraTexMfeTupZfOyN+Hxolhe86c94xOv+jC+8kjRSw9eS5lK3V5PmUs+X
kvRKn7+cpGP6/8UkfdPzzyV5AZp8Pskj0O0LSb6Abp9OqgW6fsb1QvvPJtUL
7a9N8m78aF2Sp+NTTyX5OP71eHz+MKkHnohxfVKfPBnjB0l98ohri1c86prj
IY+5zvjGSt+LP63ymvjTPV4HD1uT5AX400NJHoFvPZzkC3jVA+aSvludxDG9
+aB5pTfvTep19HFfkgbQx/1JfY8++P33TvcVv/ne5b7it+C73Xu3WRf05BJr
gb5dbI3Qt0udL7Eucx2I9XbnTj68G8A3yJF3A/gGdeDdAL5BHfjtG/9Fz/z2
jeeiYX77bmttX5/kY/Q2v5vjXfT/wiRPo/9nOxf6d65zoa/nOF/6fZ7nUO8F
nkO953vOw67PA67vCtd3g+uz2rUmd3oavZI7PY1eyZ2e/sY1fM4cUMPnzQE1
fME88Z6B/sYrec+ABvBQ3jOgAXxzpuOp7DnEUNVziA0v4/0KesPHeb+CJvFu
3q+gyUaeQzx4wgzHgydMdzx4Ar/7o216j9/90T+9x+/+6J/+5L0H2sCDeO+B
HvAd3nugE/xoguejz0leB91O9Ppodazj5Nwa7/g5t8Y5Zs620eZzfdJ7D/hE
P2PMJ/rh/QmaR+e8P0Hz6Jz3J2geLxhhztHLKPOMXkaafzTFuxr0g3fzrgb9
4N28q0E/Fd3PT5l7+nmduaef15p76nOP/6Y+K30P9Vnleyb7OnWc6uvUcYrv
pY68q3nEufGu5lHnxruax5zbUMfMvOGOmf8Nc8zc0y1JM2ire5KW0Bzv39AP
OuNdHxzAFe/6xprDHkl8wFsv1+7/51zX9P9nYdcRP+1jnjjneD8Hf5xt/cwZ
Zx4xo1XOeGJGq5zrxIxWOe/JHa1y1pI7+uSsJfcFSecx7/ngiTN3sPnjnOWd
H5xx/vZ3T+CBA9wreOBA9wc+yRzub+g5rMvzEXNYi2cocicfNEnu5IlWyZ3c
0PB/Y92dgA==
            "]}, Pattern}]}, {
        VertexStyle -> {
          183 -> RGBColor[0.97, 0.606, 0.081], 585 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 157 -> 
           RGBColor[0.97, 0.606, 0.081], 426 -> RGBColor[0.97, 0.606, 0.081], 
           367 -> RGBColor[0.97, 0.606, 0.081], 254 -> 
           RGBColor[0.97, 0.606, 0.081], 25 -> RGBColor[0.97, 0.606, 0.081], 
           395 -> RGBColor[0.34398, 0.49112, 0.89936], 586 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 55 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 452 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 105 -> 
           RGBColor[0.97, 0.606, 0.081], 90 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 27 -> 
           RGBColor[0.97, 0.606, 0.081], 442 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 15 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 348 -> 
           RGBColor[0.97, 0.606, 0.081], 358 -> RGBColor[0.97, 0.606, 0.081], 
           209 -> RGBColor[0.97, 0.606, 0.081], 469 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 233 -> 
           RGBColor[0.97, 0.606, 0.081], 539 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 98 -> 
           RGBColor[0.97, 0.606, 0.081], 420 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 328 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 38 -> 
           RGBColor[0.97, 0.606, 0.081], 484 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 325 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 102 -> 
           RGBColor[0.97, 0.606, 0.081], 99 -> RGBColor[0.97, 0.606, 0.081], 
           174 -> RGBColor[0.97, 0.606, 0.081], 472 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 473 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 578 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 398 -> 
           RGBColor[0.97, 0.606, 0.081], 71 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 384 -> 
           RGBColor[0.97, 0.606, 0.081], 600 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 41 -> 
           RGBColor[0.97, 0.606, 0.081], 536 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 644 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 558 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 114 -> 
           RGBColor[0.97, 0.606, 0.081], 515 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 282 -> 
           RGBColor[0.97, 0.606, 0.081], 553 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 433 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 377 -> 
           RGBColor[0.97, 0.606, 0.081], 260 -> RGBColor[0.97, 0.606, 0.081], 
           223 -> RGBColor[0.97, 0.606, 0.081], 479 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 385 -> 
           RGBColor[0.97, 0.606, 0.081], 172 -> RGBColor[0.97, 0.606, 0.081], 
           152 -> RGBColor[0.97, 0.606, 0.081], 292 -> 
           RGBColor[0.97, 0.606, 0.081], 504 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 294 -> 
           RGBColor[0.97, 0.606, 0.081], 165 -> RGBColor[0.97, 0.606, 0.081], 
           75 -> RGBColor[0.34398, 0.49112, 0.89936], 568 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 663 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 509 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 64 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 312 -> 
           RGBColor[0.97, 0.606, 0.081], 217 -> RGBColor[0.97, 0.606, 0.081], 
           491 -> RGBColor[0.34398, 0.49112, 0.89936], 192 -> 
           RGBColor[0.97, 0.606, 0.081], 609 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 63 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 593 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 410 -> 
           RGBColor[0.97, 0.606, 0.081], 589 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 371 -> 
           RGBColor[0.97, 0.606, 0.081], 85 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 575 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 512 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 261 -> 
           RGBColor[0.97, 0.606, 0.081], 160 -> RGBColor[0.97, 0.606, 0.081], 
           613 -> RGBColor[0.34398, 0.49112, 0.89936], 3 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 145 -> 
           RGBColor[0.97, 0.606, 0.081], 445 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 374 -> 
           RGBColor[0.97, 0.606, 0.081], 231 -> RGBColor[0.97, 0.606, 0.081], 
           147 -> RGBColor[0.97, 0.606, 0.081], 158 -> 
           RGBColor[0.97, 0.606, 0.081], 608 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 318 -> 
           RGBColor[0.97, 0.606, 0.081], 652 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 159 -> 
           RGBColor[0.97, 0.606, 0.081], 428 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 417 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 503 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 86 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 554 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 181 -> 
           RGBColor[0.97, 0.606, 0.081], 621 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 342 -> 
           RGBColor[0.97, 0.606, 0.081], 109 -> RGBColor[0.97, 0.606, 0.081], 
           94 -> RGBColor[0.34398, 0.49112, 0.89936], 61 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 532 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 84 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 245 -> 
           RGBColor[0.97, 0.606, 0.081], 477 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 368 -> 
           RGBColor[0.97, 0.606, 0.081], 76 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 516 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 21 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 169 -> 
           RGBColor[0.97, 0.606, 0.081], 642 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 281 -> 
           RGBColor[0.97, 0.606, 0.081], 241 -> RGBColor[0.97, 0.606, 0.081], 
           647 -> RGBColor[0.34398, 0.49112, 0.89936], 645 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 87 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 310 -> 
           RGBColor[0.97, 0.606, 0.081], 283 -> RGBColor[0.97, 0.606, 0.081], 
           148 -> RGBColor[0.97, 0.606, 0.081], 461 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 284 -> 
           RGBColor[0.97, 0.606, 0.081], 459 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 518 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 658 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 423 -> 
           RGBColor[0.97, 0.606, 0.081], 95 -> RGBColor[0.97, 0.606, 0.081], 
           304 -> RGBColor[0.97, 0.606, 0.081], 133 -> 
           RGBColor[0.97, 0.606, 0.081], 179 -> RGBColor[0.97, 0.606, 0.081], 
           651 -> RGBColor[0.34398, 0.49112, 0.89936], 243 -> 
           RGBColor[0.97, 0.606, 0.081], 654 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 401 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 441 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 72 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 513 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 595 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 431 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 525 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 251 -> 
           RGBColor[0.97, 0.606, 0.081], 218 -> RGBColor[0.97, 0.606, 0.081], 
           42 -> RGBColor[0.97, 0.606, 0.081], 583 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 617 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 498 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 390 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 103 -> 
           RGBColor[0.97, 0.606, 0.081], 272 -> RGBColor[0.97, 0.606, 0.081], 
           66 -> RGBColor[0.34398, 0.49112, 0.89936], 315 -> 
           RGBColor[0.97, 0.606, 0.081], 598 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 584 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 1 -> 
           RGBColor[0.97, 0.606, 0.081], 24 -> RGBColor[0.97, 0.606, 0.081], 
           54 -> RGBColor[0.34398, 0.49112, 0.89936], 597 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 376 -> 
           RGBColor[0.97, 0.606, 0.081], 662 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 603 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 502 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 329 -> 
           RGBColor[0.97, 0.606, 0.081], 612 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 255 -> 
           RGBColor[0.97, 0.606, 0.081], 200 -> RGBColor[0.97, 0.606, 0.081], 
           220 -> RGBColor[0.97, 0.606, 0.081], 458 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 190 -> 
           RGBColor[0.97, 0.606, 0.081], 471 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 639 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 387 -> 
           RGBColor[0.97, 0.606, 0.081], 596 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 146 -> 
           RGBColor[0.97, 0.606, 0.081], 666 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 262 -> 
           RGBColor[0.97, 0.606, 0.081], 295 -> RGBColor[0.97, 0.606, 0.081], 
           382 -> RGBColor[0.97, 0.606, 0.081], 389 -> 
           RGBColor[0.97, 0.606, 0.081], 208 -> RGBColor[0.97, 0.606, 0.081], 
           320 -> RGBColor[0.97, 0.606, 0.081], 212 -> 
           RGBColor[0.97, 0.606, 0.081], 4 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 7 -> 
           RGBColor[0.97, 0.606, 0.081], 534 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 404 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 354 -> 
           RGBColor[0.97, 0.606, 0.081], 287 -> RGBColor[0.97, 0.606, 0.081], 
           140 -> RGBColor[0.97, 0.606, 0.081], 408 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 660 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 571 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 205 -> 
           RGBColor[0.97, 0.606, 0.081], 411 -> RGBColor[0.97, 0.606, 0.081], 
           100 -> RGBColor[0.97, 0.606, 0.081], 520 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 379 -> 
           RGBColor[0.97, 0.606, 0.081], 123 -> RGBColor[0.97, 0.606, 0.081], 
           561 -> RGBColor[0.34398, 0.49112, 0.89936], 162 -> 
           RGBColor[0.97, 0.606, 0.081], 672 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 526 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 555 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 12 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 636 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 65 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 522 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 649 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 632 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 569 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 228 -> 
           RGBColor[0.97, 0.606, 0.081], 211 -> RGBColor[0.97, 0.606, 0.081], 
           280 -> RGBColor[0.97, 0.606, 0.081], 232 -> 
           RGBColor[0.97, 0.606, 0.081], 541 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 8 -> 
           RGBColor[0.97, 0.606, 0.081], 602 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 127 -> 
           RGBColor[0.97, 0.606, 0.081], 182 -> RGBColor[0.97, 0.606, 0.081], 
           438 -> RGBColor[0.34398, 0.49112, 0.89936], 519 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 619 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 136 -> 
           RGBColor[0.97, 0.606, 0.081], 273 -> RGBColor[0.97, 0.606, 0.081], 
           57 -> RGBColor[0.34398, 0.49112, 0.89936], 274 -> 
           RGBColor[0.97, 0.606, 0.081], 302 -> RGBColor[0.97, 0.606, 0.081], 
           74 -> RGBColor[0.34398, 0.49112, 0.89936], 464 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 352 -> 
           RGBColor[0.97, 0.606, 0.081], 184 -> RGBColor[0.97, 0.606, 0.081], 
           393 -> RGBColor[0.34398, 0.49112, 0.89936], 330 -> 
           RGBColor[0.97, 0.606, 0.081], 582 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 196 -> 
           RGBColor[0.97, 0.606, 0.081], 549 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 412 -> 
           RGBColor[0.97, 0.606, 0.081], 296 -> RGBColor[0.97, 0.606, 0.081], 
           451 -> RGBColor[0.34398, 0.49112, 0.89936], 177 -> 
           RGBColor[0.97, 0.606, 0.081], 497 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 457 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 587 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 634 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 345 -> 
           RGBColor[0.97, 0.606, 0.081], 298 -> RGBColor[0.97, 0.606, 0.081], 
           343 -> RGBColor[0.97, 0.606, 0.081], 604 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 551 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 344 -> 
           RGBColor[0.97, 0.606, 0.081], 635 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 113 -> 
           RGBColor[0.97, 0.606, 0.081], 259 -> RGBColor[0.97, 0.606, 0.081], 
           588 -> RGBColor[0.34398, 0.49112, 0.89936], 506 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 289 -> 
           RGBColor[0.97, 0.606, 0.081], 643 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 242 -> 
           RGBColor[0.97, 0.606, 0.081], 314 -> RGBColor[0.97, 0.606, 0.081], 
           219 -> RGBColor[0.97, 0.606, 0.081], 285 -> 
           RGBColor[0.97, 0.606, 0.081], 244 -> RGBColor[0.97, 0.606, 0.081], 
           37 -> RGBColor[0.97, 0.606, 0.081], 625 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 170 -> 
           RGBColor[0.97, 0.606, 0.081], 43 -> RGBColor[0.97, 0.606, 0.081], 
           276 -> RGBColor[0.97, 0.606, 0.081], 246 -> 
           RGBColor[0.97, 0.606, 0.081], 39 -> RGBColor[0.97, 0.606, 0.081], 
           124 -> RGBColor[0.97, 0.606, 0.081], 375 -> 
           RGBColor[0.97, 0.606, 0.081], 432 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 383 -> 
           RGBColor[0.97, 0.606, 0.081], 466 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 130 -> 
           RGBColor[0.97, 0.606, 0.081], 135 -> RGBColor[0.97, 0.606, 0.081], 
           106 -> RGBColor[0.97, 0.606, 0.081], 565 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 291 -> 
           RGBColor[0.97, 0.606, 0.081], 347 -> RGBColor[0.97, 0.606, 0.081], 
           483 -> RGBColor[0.34398, 0.49112, 0.89936], 556 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 668 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 657 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 307 -> 
           RGBColor[0.97, 0.606, 0.081], 424 -> RGBColor[0.97, 0.606, 0.081], 
           540 -> RGBColor[0.34398, 0.49112, 0.89936], 264 -> 
           RGBColor[0.97, 0.606, 0.081], 449 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 616 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 351 -> 
           RGBColor[0.97, 0.606, 0.081], 303 -> RGBColor[0.97, 0.606, 0.081], 
           11 -> RGBColor[0.34398, 0.49112, 0.89936], 58 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 397 -> 
           RGBColor[0.97, 0.606, 0.081], 153 -> RGBColor[0.97, 0.606, 0.081], 
           225 -> RGBColor[0.97, 0.606, 0.081], 360 -> 
           RGBColor[0.97, 0.606, 0.081], 670 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 529 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 51 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 630 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 194 -> 
           RGBColor[0.97, 0.606, 0.081], 48 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 533 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 265 -> 
           RGBColor[0.97, 0.606, 0.081], 478 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 20 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 33 -> 
           RGBColor[0.97, 0.606, 0.081], 168 -> RGBColor[0.97, 0.606, 0.081], 
           224 -> RGBColor[0.97, 0.606, 0.081], 547 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 388 -> 
           RGBColor[0.97, 0.606, 0.081], 391 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 524 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 335 -> 
           RGBColor[0.97, 0.606, 0.081], 489 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 115 -> 
           RGBColor[0.97, 0.606, 0.081], 476 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 173 -> 
           RGBColor[0.97, 0.606, 0.081], 271 -> RGBColor[0.97, 0.606, 0.081], 
           655 -> RGBColor[0.34398, 0.49112, 0.89936], 45 -> 
           RGBColor[0.97, 0.606, 0.081], 23 -> RGBColor[0.97, 0.606, 0.081], 
           402 -> RGBColor[0.34398, 0.49112, 0.89936], 22 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 626 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 615 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 341 -> 
           RGBColor[0.97, 0.606, 0.081], 313 -> RGBColor[0.97, 0.606, 0.081], 
           339 -> RGBColor[0.97, 0.606, 0.081], 195 -> 
           RGBColor[0.97, 0.606, 0.081], 2 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 118 -> 
           RGBColor[0.97, 0.606, 0.081], 60 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 373 -> 
           RGBColor[0.97, 0.606, 0.081], 620 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 270 -> 
           RGBColor[0.97, 0.606, 0.081], 455 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 669 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 16 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 139 -> 
           RGBColor[0.97, 0.606, 0.081], 293 -> RGBColor[0.97, 0.606, 0.081], 
           79 -> RGBColor[0.34398, 0.49112, 0.89936], 210 -> 
           RGBColor[0.97, 0.606, 0.081], 487 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 403 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 564 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 89 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 317 -> 
           RGBColor[0.97, 0.606, 0.081], 36 -> RGBColor[0.97, 0.606, 0.081], 
           409 -> RGBColor[0.97, 0.606, 0.081], 496 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 664 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 120 -> 
           RGBColor[0.97, 0.606, 0.081], 189 -> RGBColor[0.97, 0.606, 0.081], 
           247 -> RGBColor[0.97, 0.606, 0.081], 418 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 266 -> 
           RGBColor[0.97, 0.606, 0.081], 191 -> RGBColor[0.97, 0.606, 0.081], 
           311 -> RGBColor[0.97, 0.606, 0.081], 355 -> 
           RGBColor[0.97, 0.606, 0.081], 143 -> RGBColor[0.97, 0.606, 0.081], 
           416 -> RGBColor[0.34398, 0.49112, 0.89936], 614 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 226 -> 
           RGBColor[0.97, 0.606, 0.081], 527 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 576 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 308 -> 
           RGBColor[0.97, 0.606, 0.081], 239 -> RGBColor[0.97, 0.606, 0.081], 
           443 -> RGBColor[0.34398, 0.49112, 0.89936], 405 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 138 -> 
           RGBColor[0.97, 0.606, 0.081], 334 -> RGBColor[0.97, 0.606, 0.081], 
           607 -> RGBColor[0.34398, 0.49112, 0.89936], 131 -> 
           RGBColor[0.97, 0.606, 0.081], 665 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 117 -> 
           RGBColor[0.97, 0.606, 0.081], 171 -> RGBColor[0.97, 0.606, 0.081], 
           396 -> RGBColor[0.97, 0.606, 0.081], 52 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 305 -> 
           RGBColor[0.97, 0.606, 0.081], 128 -> RGBColor[0.97, 0.606, 0.081], 
           495 -> RGBColor[0.34398, 0.49112, 0.89936], 229 -> 
           RGBColor[0.97, 0.606, 0.081], 557 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 32 -> 
           RGBColor[0.97, 0.606, 0.081], 31 -> RGBColor[0.97, 0.606, 0.081], 
           453 -> RGBColor[0.34398, 0.49112, 0.89936], 336 -> 
           RGBColor[0.97, 0.606, 0.081], 68 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 73 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 82 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 35 -> 
           RGBColor[0.97, 0.606, 0.081], 88 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 50 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 606 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 523 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 19 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 316 -> 
           RGBColor[0.97, 0.606, 0.081], 406 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 610 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 380 -> 
           RGBColor[0.97, 0.606, 0.081], 327 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 493 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 17 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 590 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 346 -> 
           RGBColor[0.97, 0.606, 0.081], 421 -> RGBColor[0.97, 0.606, 0.081], 
           545 -> RGBColor[0.34398, 0.49112, 0.89936], 187 -> 
           RGBColor[0.97, 0.606, 0.081], 116 -> RGBColor[0.97, 0.606, 0.081], 
           278 -> RGBColor[0.97, 0.606, 0.081], 667 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 96 -> 
           RGBColor[0.97, 0.606, 0.081], 579 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 121 -> 
           RGBColor[0.97, 0.606, 0.081], 485 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 14 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 104 -> 
           RGBColor[0.97, 0.606, 0.081], 444 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 546 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 494 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 198 -> 
           RGBColor[0.97, 0.606, 0.081], 5 -> RGBColor[0.97, 0.606, 0.081], 
           646 -> RGBColor[0.34398, 0.49112, 0.89936], 216 -> 
           RGBColor[0.97, 0.606, 0.081], 381 -> RGBColor[0.97, 0.606, 0.081], 
           288 -> RGBColor[0.97, 0.606, 0.081], 258 -> 
           RGBColor[0.97, 0.606, 0.081], 594 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 166 -> 
           RGBColor[0.97, 0.606, 0.081], 34 -> RGBColor[0.97, 0.606, 0.081], 
           97 -> RGBColor[0.97, 0.606, 0.081], 132 -> 
           RGBColor[0.97, 0.606, 0.081], 279 -> RGBColor[0.97, 0.606, 0.081], 
           544 -> RGBColor[0.34398, 0.49112, 0.89936], 93 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 462 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 81 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 436 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 137 -> 
           RGBColor[0.97, 0.606, 0.081], 501 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 559 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 69 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 492 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 9 -> 
           RGBColor[0.97, 0.606, 0.081], 161 -> RGBColor[0.97, 0.606, 0.081], 
           481 -> RGBColor[0.34398, 0.49112, 0.89936], 319 -> 
           RGBColor[0.97, 0.606, 0.081], 414 -> RGBColor[0.97, 0.606, 0.081], 
           150 -> RGBColor[0.97, 0.606, 0.081], 13 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 357 -> 
           RGBColor[0.97, 0.606, 0.081], 650 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 510 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 627 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 622 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 628 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 624 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 30 -> 
           RGBColor[0.97, 0.606, 0.081], 230 -> RGBColor[0.97, 0.606, 0.081], 
           349 -> RGBColor[0.97, 0.606, 0.081], 640 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 629 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 641 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 372 -> 
           RGBColor[0.97, 0.606, 0.081], 235 -> RGBColor[0.97, 0.606, 0.081], 
           149 -> RGBColor[0.97, 0.606, 0.081], 366 -> 
           RGBColor[0.97, 0.606, 0.081], 671 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 413 -> 
           RGBColor[0.97, 0.606, 0.081], 203 -> RGBColor[0.97, 0.606, 0.081], 
           59 -> RGBColor[0.34398, 0.49112, 0.89936], 574 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 207 -> 
           RGBColor[0.97, 0.606, 0.081], 475 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 213 -> 
           RGBColor[0.97, 0.606, 0.081], 580 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 28 -> 
           RGBColor[0.97, 0.606, 0.081], 324 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 268 -> 
           RGBColor[0.97, 0.606, 0.081], 633 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 560 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 80 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 631 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 122 -> 
           RGBColor[0.97, 0.606, 0.081], 435 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 257 -> 
           RGBColor[0.97, 0.606, 0.081], 215 -> RGBColor[0.97, 0.606, 0.081], 
           332 -> RGBColor[0.97, 0.606, 0.081], 197 -> 
           RGBColor[0.97, 0.606, 0.081], 517 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 214 -> 
           RGBColor[0.97, 0.606, 0.081], 407 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 309 -> 
           RGBColor[0.97, 0.606, 0.081], 530 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 419 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 552 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 47 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 62 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 567 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 77 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 163 -> 
           RGBColor[0.97, 0.606, 0.081], 427 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 482 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 490 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 447 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 601 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 543 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 637 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 463 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 126 -> 
           RGBColor[0.97, 0.606, 0.081], 299 -> RGBColor[0.97, 0.606, 0.081], 
           392 -> RGBColor[0.34398, 0.49112, 0.89936], 237 -> 
           RGBColor[0.97, 0.606, 0.081], 297 -> RGBColor[0.97, 0.606, 0.081], 
           591 -> RGBColor[0.34398, 0.49112, 0.89936], 204 -> 
           RGBColor[0.97, 0.606, 0.081], 175 -> RGBColor[0.97, 0.606, 0.081], 
           521 -> RGBColor[0.34398, 0.49112, 0.89936], 605 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 592 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 446 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 548 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 577 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 448 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 450 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 180 -> 
           RGBColor[0.97, 0.606, 0.081], 350 -> RGBColor[0.97, 0.606, 0.081], 
           186 -> RGBColor[0.97, 0.606, 0.081], 531 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 415 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 514 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 101 -> 
           RGBColor[0.97, 0.606, 0.081], 119 -> RGBColor[0.97, 0.606, 0.081], 
           238 -> RGBColor[0.97, 0.606, 0.081], 422 -> 
           RGBColor[0.97, 0.606, 0.081], 249 -> RGBColor[0.97, 0.606, 0.081], 
           480 -> RGBColor[0.34398, 0.49112, 0.89936], 267 -> 
           RGBColor[0.97, 0.606, 0.081], 78 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 500 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 454 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 301 -> 
           RGBColor[0.97, 0.606, 0.081], 201 -> RGBColor[0.97, 0.606, 0.081], 
           440 -> RGBColor[0.34398, 0.49112, 0.89936], 236 -> 
           RGBColor[0.97, 0.606, 0.081], 253 -> RGBColor[0.97, 0.606, 0.081], 
           550 -> RGBColor[0.34398, 0.49112, 0.89936], 499 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 573 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 474 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 648 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 356 -> 
           RGBColor[0.97, 0.606, 0.081], 306 -> RGBColor[0.97, 0.606, 0.081], 
           227 -> RGBColor[0.97, 0.606, 0.081], 154 -> 
           RGBColor[0.97, 0.606, 0.081], 40 -> RGBColor[0.97, 0.606, 0.081], 
           221 -> RGBColor[0.97, 0.606, 0.081], 430 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 362 -> 
           RGBColor[0.97, 0.606, 0.081], 142 -> RGBColor[0.97, 0.606, 0.081], 
           505 -> RGBColor[0.34398, 0.49112, 0.89936], 107 -> 
           RGBColor[0.97, 0.606, 0.081], 156 -> RGBColor[0.97, 0.606, 0.081], 
           535 -> RGBColor[0.34398, 0.49112, 0.89936], 112 -> 
           RGBColor[0.97, 0.606, 0.081], 437 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 67 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 429 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 363 -> 
           RGBColor[0.97, 0.606, 0.081], 638 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 361 -> 
           RGBColor[0.97, 0.606, 0.081], 562 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 364 -> 
           RGBColor[0.97, 0.606, 0.081], 300 -> RGBColor[0.97, 0.606, 0.081], 
           618 -> RGBColor[0.34398, 0.49112, 0.89936], 321 -> 
           RGBColor[0.97, 0.606, 0.081], 56 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 141 -> 
           RGBColor[0.97, 0.606, 0.081], 10 -> RGBColor[0.97, 0.606, 0.081], 
           511 -> RGBColor[0.34398, 0.49112, 0.89936], 275 -> 
           RGBColor[0.97, 0.606, 0.081], 337 -> RGBColor[0.97, 0.606, 0.081], 
           206 -> RGBColor[0.97, 0.606, 0.081], 386 -> 
           RGBColor[0.97, 0.606, 0.081], 399 -> RGBColor[0.97, 0.606, 0.081], 
           359 -> RGBColor[0.97, 0.606, 0.081], 240 -> 
           RGBColor[0.97, 0.606, 0.081], 338 -> RGBColor[0.97, 0.606, 0.081], 
           611 -> RGBColor[0.34398, 0.49112, 0.89936], 164 -> 
           RGBColor[0.97, 0.606, 0.081], 234 -> RGBColor[0.97, 0.606, 0.081], 
           322 -> RGBColor[0.97, 0.606, 0.081], 286 -> 
           RGBColor[0.97, 0.606, 0.081], 394 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 340 -> 
           RGBColor[0.97, 0.606, 0.081], 53 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 563 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 425 -> 
           RGBColor[0.97, 0.606, 0.081], 155 -> RGBColor[0.97, 0.606, 0.081], 
           537 -> RGBColor[0.34398, 0.49112, 0.89936], 470 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 26 -> 
           RGBColor[0.97, 0.606, 0.081], 653 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 623 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 134 -> 
           RGBColor[0.97, 0.606, 0.081], 18 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 460 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 250 -> 
           RGBColor[0.97, 0.606, 0.081], 331 -> RGBColor[0.97, 0.606, 0.081], 
           542 -> RGBColor[0.34398, 0.49112, 0.89936], 659 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 538 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 507 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 29 -> 
           RGBColor[0.97, 0.606, 0.081], 661 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 378 -> 
           RGBColor[0.97, 0.606, 0.081], 129 -> RGBColor[0.97, 0.606, 0.081], 
           269 -> RGBColor[0.97, 0.606, 0.081], 193 -> 
           RGBColor[0.97, 0.606, 0.081], 199 -> RGBColor[0.97, 0.606, 0.081], 
           508 -> RGBColor[0.34398, 0.49112, 0.89936], 486 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 178 -> 
           RGBColor[0.97, 0.606, 0.081], 110 -> RGBColor[0.97, 0.606, 0.081], 
           222 -> RGBColor[0.97, 0.606, 0.081], 467 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 369 -> 
           RGBColor[0.97, 0.606, 0.081], 151 -> RGBColor[0.97, 0.606, 0.081], 
           656 -> RGBColor[0.34398, 0.49112, 0.89936], 353 -> 
           RGBColor[0.97, 0.606, 0.081], 326 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 365 -> 
           RGBColor[0.97, 0.606, 0.081], 167 -> RGBColor[0.97, 0.606, 0.081], 
           400 -> RGBColor[0.34398, 0.49112, 0.89936], 176 -> 
           RGBColor[0.97, 0.606, 0.081], 92 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 570 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 599 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 528 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 188 -> 
           RGBColor[0.97, 0.606, 0.081], 108 -> RGBColor[0.97, 0.606, 0.081], 
           572 -> RGBColor[0.34398, 0.49112, 0.89936], 46 -> 
           RGBColor[0.97, 0.606, 0.081], 434 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 468 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 125 -> 
           RGBColor[0.97, 0.606, 0.081], 277 -> RGBColor[0.97, 0.606, 0.081], 
           290 -> RGBColor[0.97, 0.606, 0.081], 49 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 83 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 111 -> 
           RGBColor[0.97, 0.606, 0.081], 465 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 333 -> 
           RGBColor[0.97, 0.606, 0.081], 456 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 439 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 202 -> 
           RGBColor[0.97, 0.606, 0.081], 185 -> RGBColor[0.97, 0.606, 0.081], 
           252 -> RGBColor[0.97, 0.606, 0.081], 370 -> 
           RGBColor[0.97, 0.606, 0.081], 256 -> RGBColor[0.97, 0.606, 0.081], 
           581 -> RGBColor[0.34398, 0.49112, 0.89936], 488 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 263 -> 
           RGBColor[0.97, 0.606, 0.081], 144 -> RGBColor[0.97, 0.606, 0.081], 
           566 -> RGBColor[0.34398, 0.49112, 0.89936], 70 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 44 -> 
           RGBColor[0.97, 0.606, 0.081], 248 -> RGBColor[0.97, 0.606, 0.081], 
           91 -> RGBColor[0.34398, 0.49112, 0.89936], 6 -> 
           RGBColor[0.97, 0.606, 0.081], 323 -> 
           RGBColor[0.34398, 0.49112, 0.89936]}, VertexCoordinates -> {{
            Sin[Rational[1, 672] Pi], -Cos[Rational[1, 672] Pi]}, {
            Sin[Rational[1, 224] Pi], -Cos[Rational[1, 224] Pi]}, {-
            Sin[Rational[1, 672] Pi], -Cos[Rational[1, 672] Pi]}, {
            Sin[Rational[43, 224] Pi], 
            Cos[Rational[43, 224] Pi]}, {
            Sin[Rational[25, 672] Pi], -Cos[Rational[25, 672] Pi]}, {
            Sin[Rational[127, 672] Pi], 
            Cos[Rational[127, 672] Pi]}, {
            Cos[Rational[67, 672] Pi], -Sin[Rational[67, 672] Pi]}, {
            Sin[Rational[5, 672] Pi], -Cos[Rational[5, 672] Pi]}, {
            Sin[Rational[131, 672] Pi], 
            Cos[Rational[131, 672] Pi]}, {-Sin[Rational[1, 224] Pi], -
            Cos[Rational[1, 224] Pi]}, {
            Sin[Rational[9, 224] Pi], -Cos[Rational[9, 224] Pi]}, {
            Cos[Rational[65, 672] Pi], -Sin[Rational[65, 672] Pi]}, {
            Sin[Rational[27, 224] Pi], 
            Cos[Rational[27, 224] Pi]}, {
            Cos[Rational[31, 672] Pi], 
            Sin[Rational[31, 672] Pi]}, {-Cos[Rational[25, 672] Pi], 
            Sin[Rational[25, 672] Pi]}, {
            Sin[Rational[65, 672] Pi], 
            Cos[Rational[65, 672] Pi]}, {
            Sin[Rational[1, 96] Pi], -Cos[Rational[1, 96] Pi]}, {-
            Sin[Rational[5, 672] Pi], -Cos[Rational[5, 672] Pi]}, {
            Sin[Rational[19, 96] Pi], 
            Cos[Rational[19, 96] Pi]}, {
            Sin[Rational[23, 672] Pi], -Cos[Rational[23, 672] Pi]}, {
            Sin[Rational[125, 672] Pi], 
            Cos[Rational[125, 672] Pi]}, {
            Cos[Rational[23, 224] Pi], -Sin[Rational[23, 224] Pi]}, {
            Cos[Rational[15, 224] Pi], 
            Sin[Rational[15, 224] Pi]}, {
            Sin[Rational[79, 672] Pi], 
            Cos[Rational[79, 672] Pi]}, {-Cos[Rational[11, 672] Pi], 
            Sin[Rational[11, 672] Pi]}, {
            Cos[Rational[11, 224] Pi], 
            Sin[Rational[11, 224] Pi]}, {
            Sin[Rational[67, 672] Pi], 
            Cos[Rational[67, 672] Pi]}, {-Cos[Rational[23, 672] Pi], 
            Sin[Rational[23, 672] Pi]}, {
            Cos[Rational[7, 32] Pi], -Sin[Rational[7, 32] Pi]}, {-
            Sin[Rational[17, 224] Pi], -Cos[Rational[17, 224] Pi]}, {-
            Sin[Rational[55, 224] Pi], 
            Cos[Rational[55, 224] Pi]}, {-Sin[Rational[13, 224] Pi], -
            Cos[Rational[13, 224] Pi]}, {
            Cos[Rational[53, 224] Pi], -Sin[Rational[53, 224] Pi]}, {-
            Cos[Rational[53, 224] Pi], 
            Sin[Rational[53, 224] Pi]}, {
            Cos[Rational[29, 672] Pi], 
            Sin[Rational[29, 672] Pi]}, {
            Sin[Rational[3, 32] Pi], 
            Cos[Rational[3, 32] Pi]}, {-Cos[Rational[9, 224] Pi], 
            Sin[Rational[9, 224] Pi]}, {
            Sin[Rational[29, 672] Pi], -Cos[Rational[29, 672] Pi]}, {
            Cos[Rational[3, 32] Pi], -Sin[Rational[3, 32] Pi]}, {
            Sin[Rational[83, 672] Pi], 
            Cos[Rational[83, 672] Pi]}, {
            Sin[Rational[1, 32] Pi], -Cos[Rational[1, 32] Pi]}, {
            Sin[Rational[41, 224] Pi], 
            Cos[Rational[41, 224] Pi]}, {
            Cos[Rational[71, 672] Pi], -Sin[Rational[71, 672] Pi]}, {
            Sin[Rational[3, 224] Pi], -Cos[Rational[3, 224] Pi]}, {
            Sin[Rational[45, 224] Pi], 
            Cos[Rational[45, 224] Pi]}, {-Sin[Rational[1, 96] Pi], -
            Cos[Rational[1, 96] Pi]}, {
            Cos[Rational[47, 672] Pi], 
            Sin[Rational[47, 672] Pi]}, {-Cos[Rational[3, 224] Pi], 
            Sin[Rational[3, 224] Pi]}, {-Sin[Rational[37, 224] Pi], 
            Cos[Rational[37, 224] Pi]}, {
            Sin[Rational[113, 672] Pi], 
            Cos[Rational[113, 672] Pi]}, {-Sin[Rational[107, 672] Pi], 
            Cos[Rational[107, 672] Pi]}, {
            Cos[Rational[27, 224] Pi], -Sin[Rational[27, 224] Pi]}, {-
            Sin[Rational[127, 672] Pi], 
            Cos[Rational[127, 672] Pi]}, {
            Cos[Rational[109, 672] Pi], -Sin[Rational[109, 672] Pi]}, {-
            Sin[Rational[89, 672] Pi], -Cos[Rational[89, 672] Pi]}, {
            Cos[Rational[5, 32] Pi], -Sin[Rational[5, 32] Pi]}, {-
            Sin[Rational[31, 224] Pi], -Cos[Rational[31, 224] Pi]}, {-
            Sin[Rational[41, 224] Pi], 
            Cos[Rational[41, 224] Pi]}, {-Sin[Rational[13, 224] Pi], 
            Cos[Rational[13, 224] Pi]}, {
            Sin[Rational[79, 672] Pi], -Cos[Rational[79, 672] Pi]}, {-
            Cos[Rational[5, 32] Pi], 
            Sin[Rational[5, 32] Pi]}, {
            Sin[Rational[71, 672] Pi], -Cos[Rational[71, 672] Pi]}, {-
            Sin[Rational[47, 672] Pi], 
            Cos[Rational[47, 672] Pi]}, {-Cos[Rational[113, 672] Pi], 
            Sin[Rational[113, 672] Pi]}, {-Sin[Rational[41, 672] Pi], -
            Cos[Rational[41, 672] Pi]}, {-Cos[Rational[23, 96] Pi], 
            Sin[Rational[23, 96] Pi]}, {
            Cos[Rational[157, 672] Pi], -Sin[Rational[157, 672] Pi]}, {
            Cos[Rational[149, 672] Pi], -Sin[Rational[149, 672] Pi]}, {-
            Sin[Rational[167, 672] Pi], 
            Cos[Rational[167, 672] Pi]}, {-Sin[Rational[7, 96] Pi], -
            Cos[Rational[7, 96] Pi]}, {
            Cos[Rational[145, 672] Pi], -Sin[Rational[145, 672] Pi]}, {-
            Sin[Rational[163, 672] Pi], 
            Cos[Rational[163, 672] Pi]}, {-Sin[Rational[53, 672] Pi], -
            Cos[Rational[53, 672] Pi]}, {-Sin[Rational[37, 672] Pi], -
            Cos[Rational[37, 672] Pi]}, {-Cos[Rational[157, 672] Pi], 
            Sin[Rational[157, 672] Pi]}, {
            Cos[Rational[23, 96] Pi], -Sin[Rational[23, 96] Pi]}, {
            Cos[Rational[43, 672] Pi], 
            Sin[Rational[43, 672] Pi]}, {-Cos[Rational[13, 672] Pi], 
            Sin[Rational[13, 672] Pi]}, {
            Sin[Rational[11, 96] Pi], 
            Cos[Rational[11, 96] Pi]}, {
            Cos[Rational[5, 96] Pi], 
            Sin[Rational[5, 96] Pi]}, {
            Sin[Rational[23, 224] Pi], 
            Cos[Rational[23, 224] Pi]}, {-Cos[Rational[1, 32] Pi], 
            Sin[Rational[1, 32] Pi]}, {
            Sin[Rational[11, 672] Pi], -Cos[Rational[11, 672] Pi]}, {-
            Sin[Rational[3, 224] Pi], -Cos[Rational[3, 224] Pi]}, {
            Sin[Rational[137, 672] Pi], 
            Cos[Rational[137, 672] Pi]}, {
            Sin[Rational[19, 672] Pi], -Cos[Rational[19, 672] Pi]}, {
            Sin[Rational[121, 672] Pi], 
            Cos[Rational[121, 672] Pi]}, {
            Cos[Rational[73, 672] Pi], -Sin[Rational[73, 672] Pi]}, {
            Sin[Rational[31, 672] Pi], -Cos[Rational[31, 672] Pi]}, {
            Sin[Rational[85, 672] Pi], 
            Cos[Rational[85, 672] Pi]}, {
            Cos[Rational[61, 672] Pi], -Sin[Rational[61, 672] Pi]}, {
            Cos[Rational[9, 224] Pi], 
            Sin[Rational[9, 224] Pi]}, {-Cos[Rational[29, 672] Pi], 
            Sin[Rational[29, 672] Pi]}, {
            Sin[Rational[61, 672] Pi], 
            Cos[Rational[61, 672] Pi]}, {-Sin[Rational[125, 672] Pi], 
            Cos[Rational[125, 672] Pi]}, {
            Cos[Rational[107, 672] Pi], -Sin[Rational[107, 672] Pi]}, {-
            Sin[Rational[13, 96] Pi], -Cos[Rational[13, 96] Pi]}, {
            Cos[Rational[79, 672] Pi], -Sin[Rational[79, 672] Pi]}, {
            Sin[Rational[115, 672] Pi], 
            Cos[Rational[115, 672] Pi]}, {-Sin[Rational[109, 672] Pi], 
            Cos[Rational[109, 672] Pi]}, {-Sin[Rational[37, 672] Pi], 
            Cos[Rational[37, 672] Pi]}, {
            Sin[Rational[27, 224] Pi], -Cos[Rational[27, 224] Pi]}, {-
            Cos[Rational[103, 672] Pi], 
            Sin[Rational[103, 672] Pi]}, {
            Sin[Rational[23, 224] Pi], -Cos[Rational[23, 224] Pi]}, {-
            Sin[Rational[7, 96] Pi], 
            Cos[Rational[7, 96] Pi]}, {-Cos[Rational[115, 672] Pi], 
            Sin[Rational[115, 672] Pi]}, {-Sin[Rational[41, 672] Pi], 
            Cos[Rational[41, 672] Pi]}, {
            Sin[Rational[11, 96] Pi], -Cos[Rational[11, 96] Pi]}, {-
            Cos[Rational[107, 672] Pi], 
            Sin[Rational[107, 672] Pi]}, {
            Sin[Rational[73, 672] Pi], -Cos[Rational[73, 672] Pi]}, {-
            Sin[Rational[15, 224] Pi], 
            Cos[Rational[15, 224] Pi]}, {-Cos[Rational[37, 224] Pi], 
            Sin[Rational[37, 224] Pi]}, {
            Cos[Rational[151, 672] Pi], -Sin[Rational[151, 672] Pi]}, {-
            Sin[Rational[47, 672] Pi], -Cos[Rational[47, 672] Pi]}, {-
            Cos[Rational[167, 672] Pi], 
            Sin[Rational[167, 672] Pi]}, {-Sin[Rational[43, 672] Pi], -
            Cos[Rational[43, 672] Pi]}, {
            Cos[Rational[155, 672] Pi], -Sin[Rational[155, 672] Pi]}, {-
            Cos[Rational[163, 672] Pi], 
            Sin[Rational[163, 672] Pi]}, {
            Cos[Rational[139, 672] Pi], -Sin[Rational[139, 672] Pi]}, {-
            Sin[Rational[157, 672] Pi], 
            Cos[Rational[157, 672] Pi]}, {-Sin[Rational[59, 672] Pi], -
            Cos[Rational[59, 672] Pi]}, {-Sin[Rational[31, 672] Pi], -
            Cos[Rational[31, 672] Pi]}, {-Cos[Rational[151, 672] Pi], 
            Sin[Rational[151, 672] Pi]}, {
            Cos[Rational[167, 672] Pi], -Sin[Rational[167, 672] Pi]}, {
            Cos[Rational[131, 672] Pi], -Sin[Rational[131, 672] Pi]}, {-
            Sin[Rational[149, 672] Pi], 
            Cos[Rational[149, 672] Pi]}, {-Sin[Rational[67, 672] Pi], -
            Cos[Rational[67, 672] Pi]}, {-Cos[Rational[23, 96] Pi], -
            Sin[Rational[23, 96] Pi]}, {
            Sin[Rational[31, 224] Pi], -Cos[Rational[31, 224] Pi]}, {-
            Cos[Rational[39, 224] Pi], -Sin[Rational[39, 224] Pi]}, {-
            Cos[Rational[5, 672] Pi], -Sin[Rational[5, 672] Pi]}, {-
            Cos[Rational[11, 96] Pi], -Sin[Rational[11, 96] Pi]}, {-
            Cos[Rational[41, 672] Pi], -Sin[Rational[41, 672] Pi]}, {-
            Sin[Rational[53, 224] Pi], -Cos[Rational[53, 224] Pi]}, {-
            Cos[Rational[19, 96] Pi], -Sin[Rational[19, 96] Pi]}, {
            Sin[Rational[167, 672] Pi], 
            Cos[Rational[167, 672] Pi]}, {
            Sin[Rational[17, 672] Pi], -Cos[Rational[17, 672] Pi]}, {
            Cos[Rational[25, 224] Pi], -Sin[Rational[25, 224] Pi]}, {
            Sin[Rational[17, 96] Pi], 
            Cos[Rational[17, 96] Pi]}, {
            Sin[Rational[13, 672] Pi], -Cos[Rational[13, 672] Pi]}, {-
            Sin[Rational[11, 672] Pi], -Cos[Rational[11, 672] Pi]}, {
            Sin[Rational[139, 672] Pi], 
            Cos[Rational[139, 672] Pi]}, {
            Sin[Rational[17, 224] Pi], 
            Cos[Rational[17, 224] Pi]}, {-Cos[Rational[13, 224] Pi], 
            Sin[Rational[13, 224] Pi]}, {
            Cos[Rational[17, 672] Pi], 
            Sin[Rational[17, 672] Pi]}, {
            Cos[Rational[25, 672] Pi], 
            Sin[Rational[25, 672] Pi]}, {
            Sin[Rational[59, 672] Pi], 
            Cos[Rational[59, 672] Pi]}, {-Cos[Rational[31, 672] Pi], 
            Sin[Rational[31, 672] Pi]}, {
            Cos[Rational[103, 672] Pi], -Sin[Rational[103, 672] Pi]}, {-
            Sin[Rational[121, 672] Pi], 
            Cos[Rational[121, 672] Pi]}, {-Sin[Rational[95, 672] Pi], -
            Cos[Rational[95, 672] Pi]}, {
            Cos[Rational[31, 224] Pi], 
            Sin[Rational[31, 224] Pi]}, {
            Sin[Rational[109, 672] Pi], -Cos[Rational[109, 672] Pi]}, {
            Cos[Rational[39, 224] Pi], 
            Sin[Rational[39, 224] Pi]}, {
            Cos[Rational[143, 672] Pi], -Sin[Rational[143, 672] Pi]}, {-
            Sin[Rational[23, 96] Pi], 
            Cos[Rational[23, 96] Pi]}, {-Sin[Rational[55, 672] Pi], -
            Cos[Rational[55, 672] Pi]}, {-Sin[Rational[5, 96] Pi], -
            Cos[Rational[5, 96] Pi]}, {
            Cos[Rational[163, 672] Pi], -Sin[Rational[163, 672] Pi]}, {-
            Cos[Rational[155, 672] Pi], 
            Sin[Rational[155, 672] Pi]}, {
            Cos[Rational[41, 672] Pi], 
            Sin[Rational[41, 672] Pi]}, {-Cos[Rational[5, 224] Pi], 
            Sin[Rational[5, 224] Pi]}, {
            Sin[Rational[25, 224] Pi], 
            Cos[Rational[25, 224] Pi]}, {
            Cos[Rational[37, 672] Pi], 
            Sin[Rational[37, 672] Pi]}, {-Cos[Rational[19, 672] Pi], 
            Sin[Rational[19, 672] Pi]}, {
            Sin[Rational[71, 672] Pi], 
            Cos[Rational[71, 672] Pi]}, {-Sin[Rational[43, 224] Pi], 
            Cos[Rational[43, 224] Pi]}, {-Sin[Rational[29, 224] Pi], -
            Cos[Rational[29, 224] Pi]}, {
            Cos[Rational[37, 224] Pi], -Sin[Rational[37, 224] Pi]}, {
            Cos[Rational[7, 96] Pi], 
            Sin[Rational[7, 96] Pi]}, {-Sin[Rational[113, 672] Pi], 
            Cos[Rational[113, 672] Pi]}, {-Cos[Rational[1, 96] Pi], 
            Sin[Rational[1, 96] Pi]}, {
            Sin[Rational[37, 224] Pi], 
            Cos[Rational[37, 224] Pi]}, {
            Cos[Rational[83, 672] Pi], -Sin[Rational[83, 672] Pi]}, {-
            Sin[Rational[5, 32] Pi], 
            Cos[Rational[5, 32] Pi]}, {
            Sin[Rational[11, 224] Pi], -Cos[Rational[11, 224] Pi]}, {
            Sin[Rational[29, 224] Pi], 
            Cos[Rational[29, 224] Pi]}, {
            Cos[Rational[59, 672] Pi], -Sin[Rational[59, 672] Pi]}, {-
            Cos[Rational[125, 672] Pi], -Sin[Rational[125, 672] Pi]}, {-
            Sin[Rational[167, 672] Pi], -Cos[Rational[167, 672] Pi]}, {
            Cos[Rational[23, 96] Pi], 
            Sin[Rational[23, 96] Pi]}, {
            Sin[Rational[55, 672] Pi], 
            Cos[Rational[55, 672] Pi]}, {
            Cos[Rational[1, 32] Pi], 
            Sin[Rational[1, 32] Pi]}, {-Cos[Rational[5, 96] Pi], 
            Sin[Rational[5, 96] Pi]}, {
            Cos[Rational[45, 224] Pi], -Sin[Rational[45, 224] Pi]}, {-
            Sin[Rational[3, 32] Pi], -Cos[Rational[3, 32] Pi]}, {-
            Sin[Rational[51, 224] Pi], 
            Cos[Rational[51, 224] Pi]}, {
            Cos[Rational[89, 672] Pi], 
            Sin[Rational[89, 672] Pi]}, {
            Cos[Rational[121, 672] Pi], 
            Sin[Rational[121, 672] Pi]}, {
            Sin[Rational[5, 32] Pi], -Cos[Rational[5, 32] Pi]}, {-
            Cos[Rational[55, 224] Pi], -Sin[Rational[55, 224] Pi]}, {
            Cos[Rational[157, 672] Pi], 
            Sin[Rational[157, 672] Pi]}, {-Cos[Rational[121, 672] Pi], -
            Sin[Rational[121, 672] Pi]}, {-Sin[Rational[9, 224] Pi], -
            Cos[Rational[9, 224] Pi]}, {
            Sin[Rational[55, 224] Pi], -Cos[Rational[55, 224] Pi]}, {-
            Cos[Rational[7, 32] Pi], 
            Sin[Rational[7, 32] Pi]}, {
            Sin[Rational[47, 672] Pi], 
            Cos[Rational[47, 672] Pi]}, {-Cos[Rational[43, 672] Pi], 
            Sin[Rational[43, 672] Pi]}, {
            Cos[Rational[13, 672] Pi], 
            Sin[Rational[13, 672] Pi]}, {-Sin[Rational[19, 96] Pi], 
            Cos[Rational[19, 96] Pi]}, {-Sin[Rational[83, 672] Pi], -
            Cos[Rational[83, 672] Pi]}, {
            Cos[Rational[115, 672] Pi], -Sin[Rational[115, 672] Pi]}, {-
            Cos[Rational[3, 224] Pi], -Sin[Rational[3, 224] Pi]}, {-
            Cos[Rational[15, 224] Pi], -Sin[Rational[15, 224] Pi]}, {-
            Cos[Rational[27, 224] Pi], -Sin[Rational[27, 224] Pi]}, {
            Cos[Rational[53, 672] Pi], 
            Sin[Rational[53, 672] Pi]}, {-Sin[Rational[33, 224] Pi], -
            Cos[Rational[33, 224] Pi]}, {-Sin[Rational[39, 224] Pi], 
            Cos[Rational[39, 224] Pi]}, {
            Cos[Rational[97, 672] Pi], 
            Sin[Rational[97, 672] Pi]}, {
            Cos[Rational[113, 672] Pi], 
            Sin[Rational[113, 672] Pi]}, {
            Sin[Rational[113, 672] Pi], -Cos[Rational[113, 672] Pi]}, {
            Sin[Rational[107, 672] Pi], 
            Cos[Rational[107, 672] Pi]}, {
            Cos[Rational[29, 224] Pi], -Sin[Rational[29, 224] Pi]}, {-
            Sin[Rational[101, 672] Pi], 
            Cos[Rational[101, 672] Pi]}, {-Cos[Rational[25, 224] Pi], 
            Sin[Rational[25, 224] Pi]}, {-Sin[Rational[3, 224] Pi], 
            Cos[Rational[3, 224] Pi]}, {
            Sin[Rational[19, 224] Pi], -Cos[Rational[19, 224] Pi]}, {
            Cos[Rational[9, 224] Pi], -Sin[Rational[9, 224] Pi]}, {
            Cos[Rational[149, 672] Pi], 
            Sin[Rational[149, 672] Pi]}, {-Sin[Rational[45, 224] Pi], -
            Cos[Rational[45, 224] Pi]}, {
            Cos[Rational[55, 224] Pi], 
            Sin[Rational[55, 224] Pi]}, {-Sin[Rational[163, 672] Pi], -
            Cos[Rational[163, 672] Pi]}, {-Cos[Rational[43, 224] Pi], -
            Sin[Rational[43, 224] Pi]}, {-Cos[Rational[47, 672] Pi], 
            Sin[Rational[47, 672] Pi]}, {
            Cos[Rational[3, 224] Pi], 
            Sin[Rational[3, 224] Pi]}, {
            Sin[Rational[43, 672] Pi], 
            Cos[Rational[43, 672] Pi]}, {
            Cos[Rational[85, 672] Pi], 
            Sin[Rational[85, 672] Pi]}, {
            Cos[Rational[125, 672] Pi], 
            Sin[Rational[125, 672] Pi]}, {
            Sin[Rational[101, 672] Pi], -Cos[Rational[101, 672] Pi]}, {
            Cos[Rational[61, 672] Pi], 
            Sin[Rational[61, 672] Pi]}, {
            Cos[Rational[5, 224] Pi], -Sin[Rational[5, 224] Pi]}, {-
            Sin[Rational[41, 224] Pi], -Cos[Rational[41, 224] Pi]}, {-
            Cos[Rational[7, 96] Pi], -Sin[Rational[7, 96] Pi]}, {-
            Cos[Rational[85, 672] Pi], -Sin[Rational[85, 672] Pi]}, {-
            Cos[Rational[13, 672] Pi], -Sin[Rational[13, 672] Pi]}, {-
            Cos[Rational[19, 224] Pi], -Sin[Rational[19, 224] Pi]}, {-
            Cos[Rational[1, 32] Pi], -Sin[Rational[1, 32] Pi]}, {-
            Cos[Rational[31, 224] Pi], -Sin[Rational[31, 224] Pi]}, {-
            Cos[Rational[53, 672] Pi], -Sin[Rational[53, 672] Pi]}, {-
            Cos[Rational[17, 672] Pi], -Sin[Rational[17, 672] Pi]}, {-
            Cos[Rational[89, 672] Pi], -Sin[Rational[89, 672] Pi]}, {
            Cos[Rational[19, 224] Pi], 
            Sin[Rational[19, 224] Pi]}, {-Sin[Rational[17, 96] Pi], -
            Cos[Rational[17, 96] Pi]}, {
            Cos[Rational[11, 672] Pi], -Sin[Rational[11, 672] Pi]}, {
            Cos[Rational[27, 224] Pi], 
            Sin[Rational[27, 224] Pi]}, {
            Cos[Rational[43, 224] Pi], 
            Sin[Rational[43, 224] Pi]}, {
            Sin[Rational[97, 672] Pi], -Cos[Rational[97, 672] Pi]}, {
            Sin[Rational[37, 672] Pi], -Cos[Rational[37, 672] Pi]}, {
            Cos[Rational[55, 672] Pi], -Sin[Rational[55, 672] Pi]}, {
            Sin[Rational[13, 96] Pi], 
            Cos[Rational[13, 96] Pi]}, {-Cos[Rational[11, 224] Pi], -
            Sin[Rational[11, 224] Pi]}, {-Cos[Rational[1, 224] Pi], 
            Sin[Rational[1, 224] Pi]}, {-Cos[Rational[23, 224] Pi], -
            Sin[Rational[23, 224] Pi]}, {-Cos[Rational[1, 672] Pi], -
            Sin[Rational[1, 672] Pi]}, {-Cos[Rational[73, 672] Pi], -
            Sin[Rational[73, 672] Pi]}, {-Cos[Rational[37, 672] Pi], -
            Sin[Rational[37, 672] Pi]}, {-Sin[Rational[155, 672] Pi], -
            Cos[Rational[155, 672] Pi]}, {-Cos[Rational[137, 672] Pi], -
            Sin[Rational[137, 672] Pi]}, {
            Sin[Rational[163, 672] Pi], 
            Cos[Rational[163, 672] Pi]}, {-Cos[Rational[25, 672] Pi], -
            Sin[Rational[25, 672] Pi]}, {-Cos[Rational[97, 672] Pi], -
            Sin[Rational[97, 672] Pi]}, {-Cos[Rational[61, 672] Pi], -
            Sin[Rational[61, 672] Pi]}, {
            Cos[Rational[19, 96] Pi], 
            Sin[Rational[19, 96] Pi]}, {
            Cos[Rational[11, 96] Pi], 
            Sin[Rational[11, 96] Pi]}, {-Sin[Rational[31, 224] Pi], 
            Cos[Rational[31, 224] Pi]}, {
            Cos[Rational[1, 224] Pi], -Sin[Rational[1, 224] Pi]}, {
            Sin[Rational[155, 672] Pi], 
            Cos[Rational[155, 672] Pi]}, {-Sin[Rational[37, 224] Pi], -
            Cos[Rational[37, 224] Pi]}, {-Cos[Rational[29, 672] Pi], -
            Sin[Rational[29, 672] Pi]}, {-Cos[Rational[101, 672] Pi], -
            Sin[Rational[101, 672] Pi]}, {-Cos[Rational[65, 672] Pi], -
            Sin[Rational[65, 672] Pi]}, {
            Cos[Rational[73, 672] Pi], 
            Sin[Rational[73, 672] Pi]}, {-Sin[Rational[89, 672] Pi], 
            Cos[Rational[89, 672] Pi]}, {
            Cos[Rational[137, 672] Pi], 
            Sin[Rational[137, 672] Pi]}, {
            Sin[Rational[5, 96] Pi], 
            Cos[Rational[5, 96] Pi]}, {-Cos[Rational[55, 672] Pi], 
            Sin[Rational[55, 672] Pi]}, {
            Cos[Rational[1, 672] Pi], 
            Sin[Rational[1, 672] Pi]}, {-Cos[Rational[47, 224] Pi], -
            Sin[Rational[47, 224] Pi]}, {
            Cos[Rational[13, 224] Pi], -Sin[Rational[13, 224] Pi]}, {-
            Sin[Rational[151, 672] Pi], -Cos[Rational[151, 672] Pi]}, {
            Cos[Rational[65, 672] Pi], 
            Sin[Rational[65, 672] Pi]}, {
            Cos[Rational[19, 672] Pi], -Sin[Rational[19, 672] Pi]}, {-
            Sin[Rational[127, 672] Pi], -Cos[Rational[127, 672] Pi]}, {-
            Cos[Rational[29, 224] Pi], 
            Sin[Rational[29, 224] Pi]}, {-Sin[Rational[1, 32] Pi], 
            Cos[Rational[1, 32] Pi]}, {-Sin[Rational[65, 672] Pi], 
            Cos[Rational[65, 672] Pi]}, {
            Cos[Rational[33, 224] Pi], -Sin[Rational[33, 224] Pi]}, {
            Sin[Rational[53, 672] Pi], -Cos[Rational[53, 672] Pi]}, {-
            Sin[Rational[5, 672] Pi], 
            Cos[Rational[5, 672] Pi]}, {
            Cos[Rational[51, 224] Pi], 
            Sin[Rational[51, 224] Pi]}, {-Sin[Rational[131, 672] Pi], -
            Cos[Rational[131, 672] Pi]}, {
            Cos[Rational[23, 672] Pi], -Sin[Rational[23, 672] Pi]}, {
            Cos[Rational[5, 672] Pi], 
            Sin[Rational[5, 672] Pi]}, {-Cos[Rational[17, 224] Pi], 
            Sin[Rational[17, 224] Pi]}, {
            Sin[Rational[13, 224] Pi], 
            Cos[Rational[13, 224] Pi]}, {
            Cos[Rational[31, 672] Pi], -Sin[Rational[31, 672] Pi]}, {-
            Sin[Rational[5, 224] Pi], -Cos[Rational[5, 224] Pi]}, {
            Sin[Rational[143, 672] Pi], 
            Cos[Rational[143, 672] Pi]}, {
            Cos[Rational[127, 672] Pi], -Sin[Rational[127, 672] Pi]}, {-
            Sin[Rational[145, 672] Pi], 
            Cos[Rational[145, 672] Pi]}, {-Sin[Rational[71, 672] Pi], -
            Cos[Rational[71, 672] Pi]}, {
            Cos[Rational[1, 96] Pi], -Sin[Rational[1, 96] Pi]}, {-
            Sin[Rational[115, 672] Pi], -Cos[Rational[115, 672] Pi]}, {
            Sin[Rational[53, 224] Pi], 
            Cos[Rational[53, 224] Pi]}, {
            Sin[Rational[1, 96] Pi], 
            Cos[Rational[1, 96] Pi]}, {-Cos[Rational[67, 672] Pi], 
            Sin[Rational[67, 672] Pi]}, {
            Sin[Rational[23, 672] Pi], 
            Cos[Rational[23, 672] Pi]}, {-Sin[Rational[13, 672] Pi], 
            Cos[Rational[13, 672] Pi]}, {-Cos[Rational[79, 672] Pi], 
            Sin[Rational[79, 672] Pi]}, {
            Sin[Rational[61, 672] Pi], -Cos[Rational[61, 672] Pi]}, {
            Sin[Rational[157, 672] Pi], -Cos[Rational[157, 672] Pi]}, {-
            Cos[Rational[139, 672] Pi], 
            Sin[Rational[139, 672] Pi]}, {
            Sin[Rational[47, 224] Pi], -Cos[Rational[47, 224] Pi]}, {
            Sin[Rational[9, 224] Pi], 
            Cos[Rational[9, 224] Pi]}, {-Cos[Rational[3, 32] Pi], 
            Sin[Rational[3, 32] Pi]}, {
            Sin[Rational[1, 224] Pi], 
            Cos[Rational[1, 224] Pi]}, {
            Sin[Rational[137, 672] Pi], -Cos[Rational[137, 672] Pi]}, {-
            Cos[Rational[45, 224] Pi], 
            Sin[Rational[45, 224] Pi]}, {
            Sin[Rational[51, 224] Pi], -Cos[Rational[51, 224] Pi]}, {-
            Cos[Rational[157, 672] Pi], -Sin[Rational[157, 672] Pi]}, {
            Sin[Rational[89, 672] Pi], -Cos[Rational[89, 672] Pi]}, {-
            Cos[Rational[113, 672] Pi], -Sin[Rational[113, 672] Pi]}, {-
            Sin[Rational[17, 224] Pi], 
            Cos[Rational[17, 224] Pi]}, {-Cos[Rational[39, 224] Pi], 
            Sin[Rational[39, 224] Pi]}, {
            Sin[Rational[67, 672] Pi], -Cos[Rational[67, 672] Pi]}, {
            Sin[Rational[83, 672] Pi], -Cos[Rational[83, 672] Pi]}, {-
            Cos[Rational[101, 672] Pi], 
            Sin[Rational[101, 672] Pi]}, {-Sin[Rational[5, 96] Pi], 
            Cos[Rational[5, 96] Pi]}, {
            Sin[Rational[5, 224] Pi], 
            Cos[Rational[5, 224] Pi]}, {
            Sin[Rational[11, 672] Pi], 
            Cos[Rational[11, 672] Pi]}, {-Cos[Rational[71, 672] Pi], 
            Sin[Rational[71, 672] Pi]}, {
            Sin[Rational[19, 672] Pi], 
            Cos[Rational[19, 672] Pi]}, {
            Cos[Rational[5, 96] Pi], -Sin[Rational[5, 96] Pi]}, {
            Sin[Rational[151, 672] Pi], 
            Cos[Rational[151, 672] Pi]}, {-Sin[Rational[107, 672] Pi], -
            Cos[Rational[107, 672] Pi]}, {-Sin[Rational[61, 672] Pi], 
            Cos[Rational[61, 672] Pi]}, {-Sin[Rational[17, 672] Pi], 
            Cos[Rational[17, 672] Pi]}, {-Cos[Rational[83, 672] Pi], 
            Sin[Rational[83, 672] Pi]}, {-Sin[Rational[19, 672] Pi], -
            Cos[Rational[19, 672] Pi]}, {-Sin[Rational[103, 672] Pi], -
            Cos[Rational[103, 672] Pi]}, {
            Sin[Rational[7, 32] Pi], 
            Cos[Rational[7, 32] Pi]}, {
            Sin[Rational[149, 672] Pi], -Cos[Rational[149, 672] Pi]}, {-
            Cos[Rational[131, 672] Pi], 
            Sin[Rational[131, 672] Pi]}, {
            Sin[Rational[19, 96] Pi], -Cos[Rational[19, 96] Pi]}, {
            Sin[Rational[43, 224] Pi], -Cos[Rational[43, 224] Pi]}, {
            Sin[Rational[145, 672] Pi], -Cos[Rational[145, 672] Pi]}, {-
            Cos[Rational[127, 672] Pi], 
            Sin[Rational[127, 672] Pi]}, {-Sin[Rational[137, 672] Pi], 
            Cos[Rational[137, 672] Pi]}, {
            Cos[Rational[17, 96] Pi], -Sin[Rational[17, 96] Pi]}, {-
            Sin[Rational[79, 672] Pi], -Cos[Rational[79, 672] Pi]}, {-
            Sin[Rational[19, 224] Pi], 
            Cos[Rational[19, 224] Pi]}, {-Cos[Rational[41, 224] Pi], 
            Sin[Rational[41, 224] Pi]}, {
            Sin[Rational[125, 672] Pi], -Cos[Rational[125, 672] Pi]}, {-
            Sin[Rational[47, 224] Pi], 
            Cos[Rational[47, 224] Pi]}, {-Sin[Rational[25, 224] Pi], -
            Cos[Rational[25, 224] Pi]}, {
            Cos[Rational[41, 224] Pi], -Sin[Rational[41, 224] Pi]}, {-
            Sin[Rational[23, 224] Pi], 
            Cos[Rational[23, 224] Pi]}, {-Sin[Rational[25, 672] Pi], 
            Cos[Rational[25, 672] Pi]}, {-Cos[Rational[13, 96] Pi], 
            Sin[Rational[13, 96] Pi]}, {-Sin[Rational[73, 672] Pi], 
            Cos[Rational[73, 672] Pi]}, {-Cos[Rational[95, 672] Pi], 
            Sin[Rational[95, 672] Pi]}, {-Sin[Rational[29, 672] Pi], 
            Cos[Rational[29, 672] Pi]}, {
            Cos[Rational[47, 224] Pi], 
            Sin[Rational[47, 224] Pi]}, {
            Cos[Rational[23, 224] Pi], 
            Sin[Rational[23, 224] Pi]}, {-Sin[Rational[85, 672] Pi], 
            Cos[Rational[85, 672] Pi]}, {
            Sin[Rational[41, 672] Pi], -Cos[Rational[41, 672] Pi]}, {
            Sin[Rational[95, 672] Pi], 
            Cos[Rational[95, 672] Pi]}, {
            Cos[Rational[17, 224] Pi], -Sin[Rational[17, 224] Pi]}, {
            Sin[Rational[103, 672] Pi], 
            Cos[Rational[103, 672] Pi]}, {
            Cos[Rational[13, 96] Pi], -Sin[Rational[13, 96] Pi]}, {-
            Sin[Rational[97, 672] Pi], 
            Cos[Rational[97, 672] Pi]}, {
            Sin[Rational[23, 96] Pi], -Cos[Rational[23, 96] Pi]}, {-
            Cos[Rational[143, 672] Pi], 
            Sin[Rational[143, 672] Pi]}, {-Sin[Rational[23, 672] Pi], -
            Cos[Rational[23, 672] Pi]}, {
            Cos[Rational[95, 672] Pi], -Sin[Rational[95, 672] Pi]}, {
            Sin[Rational[7, 96] Pi], -Cos[Rational[7, 96] Pi]}, {-
            Sin[Rational[1, 672] Pi], 
            Cos[Rational[1, 672] Pi]}, {-Cos[Rational[145, 672] Pi], -
            Sin[Rational[145, 672] Pi]}, {-Sin[Rational[7, 32] Pi], -
            Cos[Rational[7, 32] Pi]}, {
            Cos[Rational[43, 672] Pi], -Sin[Rational[43, 672] Pi]}, {-
            Sin[Rational[27, 224] Pi], 
            Cos[Rational[27, 224] Pi]}, {
            Cos[Rational[145, 672] Pi], 
            Sin[Rational[145, 672] Pi]}, {-Sin[Rational[139, 672] Pi], -
            Cos[Rational[139, 672] Pi]}, {
            Cos[Rational[101, 672] Pi], 
            Sin[Rational[101, 672] Pi]}, {
            Cos[Rational[109, 672] Pi], 
            Sin[Rational[109, 672] Pi]}, {
            Sin[Rational[39, 224] Pi], -Cos[Rational[39, 224] Pi]}, {-
            Sin[Rational[143, 672] Pi], -Cos[Rational[143, 672] Pi]}, {-
            Cos[Rational[5, 32] Pi], -Sin[Rational[5, 32] Pi]}, {-
            Cos[Rational[149, 672] Pi], -Sin[Rational[149, 672] Pi]}, {
            Sin[Rational[17, 96] Pi], -Cos[Rational[17, 96] Pi]}, {
            Cos[Rational[103, 672] Pi], 
            Sin[Rational[103, 672] Pi]}, {
            Cos[Rational[107, 672] Pi], 
            Sin[Rational[107, 672] Pi]}, {-Cos[Rational[151, 672] Pi], -
            Sin[Rational[151, 672] Pi]}, {-Sin[Rational[47, 224] Pi], -
            Cos[Rational[47, 224] Pi]}, {-Cos[Rational[107, 672] Pi], -
            Sin[Rational[107, 672] Pi]}, {
            Sin[Rational[33, 224] Pi], 
            Cos[Rational[33, 224] Pi]}, {
            Cos[Rational[47, 672] Pi], -Sin[Rational[47, 672] Pi]}, {
            Sin[Rational[15, 224] Pi], -Cos[Rational[15, 224] Pi]}, {
            Cos[Rational[5, 32] Pi], 
            Sin[Rational[5, 32] Pi]}, {-Sin[Rational[145, 672] Pi], -
            Cos[Rational[145, 672] Pi]}, {
            Cos[Rational[15, 224] Pi], -Sin[Rational[15, 224] Pi]}, {-
            Cos[Rational[7, 32] Pi], -Sin[Rational[7, 32] Pi]}, {
            Sin[Rational[97, 672] Pi], 
            Cos[Rational[97, 672] Pi]}, {
            Cos[Rational[7, 96] Pi], -Sin[Rational[7, 96] Pi]}, {
            Sin[Rational[43, 672] Pi], -Cos[Rational[43, 672] Pi]}, {
            Sin[Rational[47, 672] Pi], -Cos[Rational[47, 672] Pi]}, {
            Sin[Rational[101, 672] Pi], 
            Cos[Rational[101, 672] Pi]}, {
            Cos[Rational[31, 224] Pi], -Sin[Rational[31, 224] Pi]}, {-
            Cos[Rational[59, 672] Pi], 
            Sin[Rational[59, 672] Pi]}, {
            Sin[Rational[65, 672] Pi], -Cos[Rational[65, 672] Pi]}, {
            Sin[Rational[31, 672] Pi], 
            Cos[Rational[31, 672] Pi]}, {-Cos[Rational[33, 224] Pi], 
            Sin[Rational[33, 224] Pi]}, {-Sin[Rational[11, 224] Pi], 
            Cos[Rational[11, 224] Pi]}, {-Sin[Rational[11, 96] Pi], 
            Cos[Rational[11, 96] Pi]}, {-Cos[Rational[155, 672] Pi], -
            Sin[Rational[155, 672] Pi]}, {
            Sin[Rational[29, 224] Pi], -Cos[Rational[29, 224] Pi]}, {-
            Cos[Rational[37, 224] Pi], -Sin[Rational[37, 224] Pi]}, {-
            Sin[Rational[31, 672] Pi], 
            Cos[Rational[31, 672] Pi]}, {-Sin[Rational[25, 224] Pi], 
            Cos[Rational[25, 224] Pi]}, {-Cos[Rational[97, 672] Pi], 
            Sin[Rational[97, 672] Pi]}, {-Cos[Rational[109, 672] Pi], -
            Sin[Rational[109, 672] Pi]}, {-Cos[Rational[51, 224] Pi], -
            Sin[Rational[51, 224] Pi]}, {
            Sin[Rational[85, 672] Pi], -Cos[Rational[85, 672] Pi]}, {-
            Cos[Rational[17, 96] Pi], 
            Sin[Rational[17, 96] Pi]}, {
            Sin[Rational[121, 672] Pi], -Cos[Rational[121, 672] Pi]}, {-
            Sin[Rational[53, 672] Pi], 
            Cos[Rational[53, 672] Pi]}, {
            Sin[Rational[1, 672] Pi], 
            Cos[Rational[1, 672] Pi]}, {
            Sin[Rational[29, 672] Pi], 
            Cos[Rational[29, 672] Pi]}, {-Cos[Rational[61, 672] Pi], 
            Sin[Rational[61, 672] Pi]}, {-Cos[Rational[125, 672] Pi], 
            Sin[Rational[125, 672] Pi]}, {
            Sin[Rational[127, 672] Pi], -Cos[Rational[127, 672] Pi]}, {
            Sin[Rational[143, 672] Pi], -Cos[Rational[143, 672] Pi]}, {-
            Cos[Rational[27, 224] Pi], 
            Sin[Rational[27, 224] Pi]}, {-Sin[Rational[59, 672] Pi], 
            Cos[Rational[59, 672] Pi]}, {-Sin[Rational[5, 224] Pi], 
            Cos[Rational[5, 224] Pi]}, {
            Sin[Rational[3, 224] Pi], 
            Cos[Rational[3, 224] Pi]}, {
            Sin[Rational[1, 32] Pi], 
            Cos[Rational[1, 32] Pi]}, {-Cos[Rational[23, 224] Pi], 
            Sin[Rational[23, 224] Pi]}, {-Sin[Rational[139, 672] Pi], 
            Cos[Rational[139, 672] Pi]}, {
            Cos[Rational[121, 672] Pi], -Sin[Rational[121, 672] Pi]}, {-
            Sin[Rational[11, 96] Pi], -Cos[Rational[11, 96] Pi]}, {-
            Sin[Rational[143, 672] Pi], 
            Cos[Rational[143, 672] Pi]}, {-Sin[Rational[73, 672] Pi], -
            Cos[Rational[73, 672] Pi]}, {
            Cos[Rational[125, 672] Pi], -Sin[Rational[125, 672] Pi]}, {
            Cos[Rational[11, 224] Pi], -Sin[Rational[11, 224] Pi]}, {-
            Sin[Rational[5, 32] Pi], -Cos[Rational[5, 32] Pi]}, {
            Sin[Rational[149, 672] Pi], 
            Cos[Rational[149, 672] Pi]}, {-Sin[Rational[71, 672] Pi], 
            Cos[Rational[71, 672] Pi]}, {-Cos[Rational[31, 224] Pi], 
            Sin[Rational[31, 224] Pi]}, {-Sin[Rational[9, 224] Pi], 
            Cos[Rational[9, 224] Pi]}, {
            Sin[Rational[7, 32] Pi], -Cos[Rational[7, 32] Pi]}, {-
            Cos[Rational[43, 224] Pi], 
            Sin[Rational[43, 224] Pi]}, {
            Sin[Rational[131, 672] Pi], -Cos[Rational[131, 672] Pi]}, {
            Sin[Rational[53, 224] Pi], -Cos[Rational[53, 224] Pi]}, {-
            Sin[Rational[1, 32] Pi], -Cos[Rational[1, 32] Pi]}, {-
            Cos[Rational[47, 224] Pi], 
            Sin[Rational[47, 224] Pi]}, {
            Cos[Rational[97, 672] Pi], -Sin[Rational[97, 672] Pi]}, {
            Sin[Rational[17, 224] Pi], -Cos[Rational[17, 224] Pi]}, {-
            Sin[Rational[1, 224] Pi], 
            Cos[Rational[1, 224] Pi]}, {-Sin[Rational[23, 672] Pi], 
            Cos[Rational[23, 672] Pi]}, {-Sin[Rational[67, 672] Pi], 
            Cos[Rational[67, 672] Pi]}, {-Cos[Rational[89, 672] Pi], 
            Sin[Rational[89, 672] Pi]}, {
            Cos[Rational[67, 672] Pi], 
            Sin[Rational[67, 672] Pi]}, {
            Cos[Rational[143, 672] Pi], 
            Sin[Rational[143, 672] Pi]}, {-Sin[Rational[83, 672] Pi], 
            Cos[Rational[83, 672] Pi]}, {-Cos[Rational[143, 672] Pi], -
            Sin[Rational[143, 672] Pi]}, {-Sin[Rational[149, 672] Pi], -
            Cos[Rational[149, 672] Pi]}, {
            Cos[Rational[41, 672] Pi], -Sin[Rational[41, 672] Pi]}, {
            Sin[Rational[3, 32] Pi], -Cos[Rational[3, 32] Pi]}, {
            Sin[Rational[11, 224] Pi], 
            Cos[Rational[11, 224] Pi]}, {-Cos[Rational[19, 224] Pi], 
            Sin[Rational[19, 224] Pi]}, {-Sin[Rational[19, 672] Pi], 
            Cos[Rational[19, 672] Pi]}, {-Sin[Rational[3, 32] Pi], 
            Cos[Rational[3, 32] Pi]}, {-Cos[Rational[85, 672] Pi], 
            Sin[Rational[85, 672] Pi]}, {
            Cos[Rational[71, 672] Pi], 
            Sin[Rational[71, 672] Pi]}, {
            Cos[Rational[139, 672] Pi], 
            Sin[Rational[139, 672] Pi]}, {-Sin[Rational[29, 224] Pi], 
            Cos[Rational[29, 224] Pi]}, {
            Cos[Rational[1, 672] Pi], -Sin[Rational[1, 672] Pi]}, {
            Sin[Rational[51, 224] Pi], 
            Cos[Rational[51, 224] Pi]}, {-Sin[Rational[109, 672] Pi], -
            Cos[Rational[109, 672] Pi]}, {
            Cos[Rational[45, 224] Pi], 
            Sin[Rational[45, 224] Pi]}, {
            Cos[Rational[25, 224] Pi], 
            Sin[Rational[25, 224] Pi]}, {-Sin[Rational[13, 96] Pi], 
            Cos[Rational[13, 96] Pi]}, {-Cos[Rational[9, 224] Pi], -
            Sin[Rational[9, 224] Pi]}, {-Cos[Rational[3, 32] Pi], -
            Sin[Rational[3, 32] Pi]}, {-Cos[Rational[33, 224] Pi], -
            Sin[Rational[33, 224] Pi]}, {-Cos[Rational[139, 672] Pi], -
            Sin[Rational[139, 672] Pi]}, {
            Cos[Rational[37, 672] Pi], -Sin[Rational[37, 672] Pi]}, {-
            Sin[Rational[51, 224] Pi], -Cos[Rational[51, 224] Pi]}, {
            Sin[Rational[151, 672] Pi], -Cos[Rational[151, 672] Pi]}, {
            Sin[Rational[45, 224] Pi], -Cos[Rational[45, 224] Pi]}, {-
            Cos[Rational[19, 96] Pi], 
            Sin[Rational[19, 96] Pi]}, {-Cos[Rational[31, 672] Pi], -
            Sin[Rational[31, 672] Pi]}, {-Cos[Rational[67, 672] Pi], -
            Sin[Rational[67, 672] Pi]}, {-Cos[Rational[103, 672] Pi], -
            Sin[Rational[103, 672] Pi]}, {
            Sin[Rational[13, 224] Pi], -Cos[Rational[13, 224] Pi]}, {
            Sin[Rational[31, 224] Pi], 
            Cos[Rational[31, 224] Pi]}, {
            Cos[Rational[53, 672] Pi], -Sin[Rational[53, 672] Pi]}, {
            Cos[Rational[79, 672] Pi], 
            Sin[Rational[79, 672] Pi]}, {
            Cos[Rational[131, 672] Pi], 
            Sin[Rational[131, 672] Pi]}, {-Sin[Rational[95, 672] Pi], 
            Cos[Rational[95, 672] Pi]}, {-Cos[Rational[59, 672] Pi], -
            Sin[Rational[59, 672] Pi]}, {-Cos[Rational[23, 672] Pi], -
            Sin[Rational[23, 672] Pi]}, {-Cos[Rational[95, 672] Pi], -
            Sin[Rational[95, 672] Pi]}, {
            Sin[Rational[23, 96] Pi], 
            Cos[Rational[23, 96] Pi]}, {-Sin[Rational[39, 224] Pi], -
            Cos[Rational[39, 224] Pi]}, {
            Cos[Rational[3, 224] Pi], -Sin[Rational[3, 224] Pi]}, {-
            Cos[Rational[55, 672] Pi], -Sin[Rational[55, 672] Pi]}, {-
            Cos[Rational[19, 672] Pi], -Sin[Rational[19, 672] Pi]}, {-
            Cos[Rational[13, 96] Pi], -Sin[Rational[13, 96] Pi]}, {-
            Cos[Rational[17, 224] Pi], -Sin[Rational[17, 224] Pi]}, {-
            Cos[Rational[29, 224] Pi], -Sin[Rational[29, 224] Pi]}, {-
            Cos[Rational[5, 224] Pi], -Sin[Rational[5, 224] Pi]}, {
            Cos[Rational[59, 672] Pi], 
            Sin[Rational[59, 672] Pi]}, {-Sin[Rational[121, 672] Pi], -
            Cos[Rational[121, 672] Pi]}, {
            Cos[Rational[13, 672] Pi], -Sin[Rational[13, 672] Pi]}, {
            Sin[Rational[41, 224] Pi], -Cos[Rational[41, 224] Pi]}, {-
            Sin[Rational[55, 672] Pi], 
            Cos[Rational[55, 672] Pi]}, {-Cos[Rational[121, 672] Pi], 
            Sin[Rational[121, 672] Pi]}, {-Sin[Rational[137, 672] Pi], -
            Cos[Rational[137, 672] Pi]}, {-Sin[Rational[79, 672] Pi], 
            Cos[Rational[79, 672] Pi]}, {
            Cos[Rational[7, 32] Pi], 
            Sin[Rational[7, 32] Pi]}, {
            Sin[Rational[17, 672] Pi], 
            Cos[Rational[17, 672] Pi]}, {
            Sin[Rational[13, 672] Pi], 
            Cos[Rational[13, 672] Pi]}, {-Cos[Rational[73, 672] Pi], 
            Sin[Rational[73, 672] Pi]}, {
            Sin[Rational[5, 32] Pi], 
            Cos[Rational[5, 32] Pi]}, {-Sin[Rational[33, 224] Pi], 
            Cos[Rational[33, 224] Pi]}, {
            Cos[Rational[89, 672] Pi], -Sin[Rational[89, 672] Pi]}, {
            Cos[Rational[37, 224] Pi], 
            Sin[Rational[37, 224] Pi]}, {
            Sin[Rational[115, 672] Pi], -Cos[Rational[115, 672] Pi]}, {
            Cos[Rational[33, 224] Pi], 
            Sin[Rational[33, 224] Pi]}, {
            Sin[Rational[145, 672] Pi], 
            Cos[Rational[145, 672] Pi]}, {-Sin[Rational[101, 672] Pi], -
            Cos[Rational[101, 672] Pi]}, {-Sin[Rational[17, 672] Pi], -
            Cos[Rational[17, 672] Pi]}, {-Cos[Rational[11, 672] Pi], -
            Sin[Rational[11, 672] Pi]}, {-Cos[Rational[47, 672] Pi], -
            Sin[Rational[47, 672] Pi]}, {-Cos[Rational[83, 672] Pi], -
            Sin[Rational[83, 672] Pi]}, {-Sin[Rational[27, 224] Pi], -
            Cos[Rational[27, 224] Pi]}, {
            Cos[Rational[39, 224] Pi], -Sin[Rational[39, 224] Pi]}, {-
            Sin[Rational[45, 224] Pi], 
            Cos[Rational[45, 224] Pi]}, {
            Sin[Rational[15, 224] Pi], 
            Cos[Rational[15, 224] Pi]}, {-Cos[Rational[15, 224] Pi], 
            Sin[Rational[15, 224] Pi]}, {
            Cos[Rational[11, 672] Pi], 
            Sin[Rational[11, 672] Pi]}, {-Sin[Rational[25, 672] Pi], -
            Cos[Rational[25, 672] Pi]}, {
            Sin[Rational[163, 672] Pi], -Cos[Rational[163, 672] Pi]}, {-
            Cos[Rational[145, 672] Pi], 
            Sin[Rational[145, 672] Pi]}, {-Cos[Rational[7, 96] Pi], 
            Sin[Rational[7, 96] Pi]}, {
            Sin[Rational[41, 672] Pi], 
            Cos[Rational[41, 672] Pi]}, {
            Cos[Rational[1, 96] Pi], 
            Sin[Rational[1, 96] Pi]}, {
            Cos[Rational[1, 32] Pi], -Sin[Rational[1, 32] Pi]}, {
            Cos[Rational[155, 672] Pi], 
            Sin[Rational[155, 672] Pi]}, {-Sin[Rational[43, 224] Pi], -
            Cos[Rational[43, 224] Pi]}, {
            Sin[Rational[33, 224] Pi], -Cos[Rational[33, 224] Pi]}, {
            Cos[Rational[83, 672] Pi], 
            Sin[Rational[83, 672] Pi]}, {
            Cos[Rational[127, 672] Pi], 
            Sin[Rational[127, 672] Pi]}, {-Cos[Rational[71, 672] Pi], -
            Sin[Rational[71, 672] Pi]}, {-Cos[Rational[5, 96] Pi], -
            Sin[Rational[5, 96] Pi]}, {-Cos[Rational[1, 672] Pi], 
            Sin[Rational[1, 672] Pi]}, {
            Sin[Rational[5, 96] Pi], -Cos[Rational[5, 96] Pi]}, {
            Cos[Rational[19, 224] Pi], -Sin[Rational[19, 224] Pi]}, {
            Sin[Rational[89, 672] Pi], 
            Cos[Rational[89, 672] Pi]}, {
            Cos[Rational[5, 672] Pi], -Sin[Rational[5, 672] Pi]}, {
            Sin[Rational[157, 672] Pi], 
            Cos[Rational[157, 672] Pi]}, {-Sin[Rational[113, 672] Pi], -
            Cos[Rational[113, 672] Pi]}, {
            Cos[Rational[3, 32] Pi], 
            Sin[Rational[3, 32] Pi]}, {-Sin[Rational[125, 672] Pi], -
            Cos[Rational[125, 672] Pi]}, {
            Cos[Rational[17, 672] Pi], -Sin[Rational[17, 672] Pi]}, {
            Cos[Rational[1, 224] Pi], 
            Sin[Rational[1, 224] Pi]}, {-Cos[Rational[53, 672] Pi], 
            Sin[Rational[53, 672] Pi]}, {
            Sin[Rational[37, 672] Pi], 
            Cos[Rational[37, 672] Pi]}, {
            Sin[Rational[155, 672] Pi], -Cos[Rational[155, 672] Pi]}, {-
            Cos[Rational[137, 672] Pi], 
            Sin[Rational[137, 672] Pi]}, {
            Sin[Rational[139, 672] Pi], -Cos[Rational[139, 672] Pi]}, {
            Sin[Rational[5, 672] Pi], 
            Cos[Rational[5, 672] Pi]}, {
            Sin[Rational[25, 672] Pi], 
            Cos[Rational[25, 672] Pi]}, {-Cos[Rational[65, 672] Pi], 
            Sin[Rational[65, 672] Pi]}, {-Sin[Rational[55, 224] Pi], -
            Cos[Rational[55, 224] Pi]}, {
            Cos[Rational[163, 672] Pi], 
            Sin[Rational[163, 672] Pi]}, {-Cos[Rational[127, 672] Pi], -
            Sin[Rational[127, 672] Pi]}, {-Cos[Rational[167, 672] Pi], -
            Sin[Rational[167, 672] Pi]}, {
            Cos[Rational[53, 224] Pi], 
            Sin[Rational[53, 224] Pi]}, {-Cos[Rational[41, 224] Pi], -
            Sin[Rational[41, 224] Pi]}, {
            Cos[Rational[29, 224] Pi], 
            Sin[Rational[29, 224] Pi]}, {
            Sin[Rational[103, 672] Pi], -Cos[Rational[103, 672] Pi]}, {
            Cos[Rational[41, 224] Pi], 
            Sin[Rational[41, 224] Pi]}, {
            Sin[Rational[109, 672] Pi], 
            Cos[Rational[109, 672] Pi]}, {-Sin[Rational[103, 672] Pi], 
            Cos[Rational[103, 672] Pi]}, {
            Cos[Rational[85, 672] Pi], -Sin[Rational[85, 672] Pi]}, {
            Cos[Rational[17, 224] Pi], 
            Sin[Rational[17, 224] Pi]}, {-Cos[Rational[5, 672] Pi], 
            Sin[Rational[5, 672] Pi]}, {-Sin[Rational[115, 672] Pi], 
            Cos[Rational[115, 672] Pi]}, {
            Cos[Rational[95, 672] Pi], 
            Sin[Rational[95, 672] Pi]}, {
            Cos[Rational[115, 672] Pi], 
            Sin[Rational[115, 672] Pi]}, {
            Sin[Rational[37, 224] Pi], -Cos[Rational[37, 224] Pi]}, {
            Cos[Rational[13, 96] Pi], 
            Sin[Rational[13, 96] Pi]}, {
            Cos[Rational[17, 96] Pi], 
            Sin[Rational[17, 96] Pi]}, {
            Sin[Rational[107, 672] Pi], -Cos[Rational[107, 672] Pi]}, {
            Cos[Rational[101, 672] Pi], -Sin[Rational[101, 672] Pi]}, {-
            Sin[Rational[1, 96] Pi], 
            Cos[Rational[1, 96] Pi]}, {
            Sin[Rational[55, 672] Pi], -Cos[Rational[55, 672] Pi]}, {
            Cos[Rational[55, 672] Pi], 
            Sin[Rational[55, 672] Pi]}, {-Sin[Rational[97, 672] Pi], -
            Cos[Rational[97, 672] Pi]}, {-Sin[Rational[17, 96] Pi], 
            Cos[Rational[17, 96] Pi]}, {
            Cos[Rational[151, 672] Pi], 
            Sin[Rational[151, 672] Pi]}, {-Sin[Rational[19, 96] Pi], -
            Cos[Rational[19, 96] Pi]}, {
            Cos[Rational[25, 672] Pi], -Sin[Rational[25, 672] Pi]}, {
            Sin[Rational[7, 96] Pi], 
            Cos[Rational[7, 96] Pi]}, {
            Cos[Rational[5, 224] Pi], 
            Sin[Rational[5, 224] Pi]}, {-Cos[Rational[41, 672] Pi], 
            Sin[Rational[41, 672] Pi]}, {
            Cos[Rational[29, 672] Pi], -Sin[Rational[29, 672] Pi]}, {
            Sin[Rational[47, 224] Pi], 
            Cos[Rational[47, 224] Pi]}, {-Sin[Rational[13, 672] Pi], -
            Cos[Rational[13, 672] Pi]}, {-Sin[Rational[11, 672] Pi], 
            Cos[Rational[11, 672] Pi]}, {-Cos[Rational[11, 96] Pi], 
            Sin[Rational[11, 96] Pi]}, {
            Sin[Rational[59, 672] Pi], -Cos[Rational[59, 672] Pi]}, {-
            Sin[Rational[23, 96] Pi], -Cos[Rational[23, 96] Pi]}, {
            Cos[Rational[167, 672] Pi], 
            Sin[Rational[167, 672] Pi]}, {-Cos[Rational[131, 672] Pi], -
            Sin[Rational[131, 672] Pi]}, {-Cos[Rational[1, 96] Pi], -
            Sin[Rational[1, 96] Pi]}, {-Cos[Rational[43, 672] Pi], -
            Sin[Rational[43, 672] Pi]}, {-Cos[Rational[79, 672] Pi], -
            Sin[Rational[79, 672] Pi]}, {-Cos[Rational[163, 672] Pi], -
            Sin[Rational[163, 672] Pi]}, {-Cos[Rational[17, 96] Pi], -
            Sin[Rational[17, 96] Pi]}, {
            Sin[Rational[95, 672] Pi], -Cos[Rational[95, 672] Pi]}, {
            Cos[Rational[19, 96] Pi], -Sin[Rational[19, 96] Pi]}, {-
            Sin[Rational[65, 672] Pi], -Cos[Rational[65, 672] Pi]}, {-
            Sin[Rational[151, 672] Pi], 
            Cos[Rational[151, 672] Pi]}, {-Sin[Rational[131, 672] Pi], 
            Cos[Rational[131, 672] Pi]}, {
            Cos[Rational[113, 672] Pi], -Sin[Rational[113, 672] Pi]}, {-
            Sin[Rational[85, 672] Pi], -Cos[Rational[85, 672] Pi]}, {
            Sin[Rational[53, 672] Pi], 
            Cos[Rational[53, 672] Pi]}, {
            Cos[Rational[19, 672] Pi], 
            Sin[Rational[19, 672] Pi]}, {-Cos[Rational[37, 672] Pi], 
            Sin[Rational[37, 672] Pi]}, {
            Cos[Rational[23, 672] Pi], 
            Sin[Rational[23, 672] Pi]}, {-Cos[Rational[11, 224] Pi], 
            Sin[Rational[11, 224] Pi]}, {
            Sin[Rational[19, 224] Pi], 
            Cos[Rational[19, 224] Pi]}, {-Sin[Rational[29, 672] Pi], -
            Cos[Rational[29, 672] Pi]}, {
            Sin[Rational[167, 672] Pi], -Cos[Rational[167, 672] Pi]}, {-
            Cos[Rational[149, 672] Pi], 
            Sin[Rational[149, 672] Pi]}, {
            Cos[Rational[137, 672] Pi], -Sin[Rational[137, 672] Pi]}, {-
            Sin[Rational[61, 672] Pi], -Cos[Rational[61, 672] Pi]}, {-
            Sin[Rational[155, 672] Pi], 
            Cos[Rational[155, 672] Pi]}, {
            Sin[Rational[73, 672] Pi], 
            Cos[Rational[73, 672] Pi]}, {
            Cos[Rational[13, 224] Pi], 
            Sin[Rational[13, 224] Pi]}, {-Cos[Rational[17, 672] Pi], 
            Sin[Rational[17, 672] Pi]}, {
            Sin[Rational[39, 224] Pi], 
            Cos[Rational[39, 224] Pi]}, {
            Sin[Rational[5, 224] Pi], -Cos[Rational[5, 224] Pi]}, {
            Cos[Rational[11, 96] Pi], -Sin[Rational[11, 96] Pi]}, {-
            Cos[Rational[115, 672] Pi], -Sin[Rational[115, 672] Pi]}, {-
            Cos[Rational[53, 224] Pi], -Sin[Rational[53, 224] Pi]}, {
            Sin[Rational[13, 96] Pi], -Cos[Rational[13, 96] Pi]}, {
            Sin[Rational[55, 224] Pi], 
            Cos[Rational[55, 224] Pi]}, {-Sin[Rational[157, 672] Pi], -
            Cos[Rational[157, 672] Pi]}, {-Cos[Rational[45, 224] Pi], -
            Sin[Rational[45, 224] Pi]}, {
            Cos[Rational[47, 224] Pi], -Sin[Rational[47, 224] Pi]}, {-
            Sin[Rational[19, 224] Pi], -Cos[Rational[19, 224] Pi]}, {-
            Sin[Rational[53, 224] Pi], 
            Cos[Rational[53, 224] Pi]}, {-Sin[Rational[11, 224] Pi], -
            Cos[Rational[11, 224] Pi]}, {
            Cos[Rational[55, 224] Pi], -Sin[Rational[55, 224] Pi]}, {-
            Cos[Rational[51, 224] Pi], 
            Sin[Rational[51, 224] Pi]}, {-Sin[Rational[23, 224] Pi], -
            Cos[Rational[23, 224] Pi]}, {
            Cos[Rational[43, 224] Pi], -Sin[Rational[43, 224] Pi]}, {-
            Sin[Rational[7, 32] Pi], 
            Cos[Rational[7, 32] Pi]}, {-Cos[Rational[13, 224] Pi], -
            Sin[Rational[13, 224] Pi]}, {-Cos[Rational[1, 224] Pi], -
            Sin[Rational[1, 224] Pi]}, {-Cos[Rational[25, 224] Pi], -
            Sin[Rational[25, 224] Pi]}, {
            Cos[Rational[51, 224] Pi], -Sin[Rational[51, 224] Pi]}, {-
            Sin[Rational[15, 224] Pi], -Cos[Rational[15, 224] Pi]}, {-
            Cos[Rational[55, 224] Pi], 
            Sin[Rational[55, 224] Pi]}, {-Sin[Rational[43, 672] Pi], 
            Cos[Rational[43, 672] Pi]}, {
            Sin[Rational[25, 224] Pi], -Cos[Rational[25, 224] Pi]}, {-
            Cos[Rational[109, 672] Pi], 
            Sin[Rational[109, 672] Pi]}}}]]}, 
      TagBox[GraphicsGroupBox[GraphicsComplexBox[CompressedData["
1:eJxdmnt0TXcWx1MqKEpGQ1rUqyJojY5VtKZre1artGhF4zGr9Rgiy7tKLSLT
iHe9aav1Fs9VVQ1tCZsI47FKiCAhIiQ3r3vv0ZrQeowxa/b3N2t9/2mXxb33
nPPbe3+/388+jYeO6zeiQkhIyPrH//nv/5vX79qpVuQkGZDcLrzkkacdemck
5f+0UL5O260vP/6z/b3i7xvvaTvm3cgbMnRqXIJvYKksfnLNrNo5B6Vg0881
G5zwNP7LXe+FFuVLzQvjX60+u1S+afRWk7gJQfmlwXb/4J8ydWSD+NbVvC+k
6SCNOPrQ04GjLs5vM+KGzPlTyokWfy4V+33F789oEVo3qsFhad1owMLMQ54+
P3R4yrdzg9KvR5/YUZGZ+llOm6H3t12SdUe+Xrz5QEB2S7B+wx2edJ9/5+Gb
09PcdeE67XOC7wmMjnl90eH1Mrb2F1Fr7nu4PsX1JfeM7rZt0w258nFe9UsV
SqXuxNOZrT49IMurdJ2xO8PTir2ubIvemi8psUsefLW7VKZs+bHZtJig9B61
/ePrb13QyB9z1w5725Mz7Z6+nLH/lMydGZb+0XOXZGXVH7qsvxSQqM13NrQq
9/SPH5L+MrzvDikYPWdrylpPpqef+uP1nUfx3NxzxO/iOjrXDY9LSC2Wiw2q
Nrvdq0Bnr1qanv/aGY0ccbFLlwhPK42dO/XsOz6dGLEw+a1ffbIlvsn+Ia/8
U1uvnTum/VRPx7/2pu+FxUVSoco3EZe2FuLPan+Wyrl9oi6keDJq6bfPlvY6
IpXWZbUOXXFecl46Ht15XdCdC84J/84+p/h39jmtuav/xBrtL8uOpfGJ/14b
kBdTWqRuqfuzRDY7t+nzy57eXfdVdueR+dK1/sOsRTmlsuKTnB5XOgUl8+cN
6uVc0G7V/lrSbl6yfLx19n39/fHv/nSm7d78G7LKn9vTyyrBeSrOc2erbr2r
dfTkwNrxHZr6TrvP4XuuTOh4cfnBPF3S62zDz0+WSaw/omXDxtdlwPF3HnXa
VCa3wkJ6NtpzTR9W+T34xjN+V2dWd6h3Rb2HNbpf/TWvTD4NORnftkOetlpf
vOxObrZmDxxw7JnuAf3+YMKvezr4peOd0A5DWl3T98c/WlW5PEdjqgSfvFop
gPtX3D+dF9cPvk/t+/Cc8NzU7ts9B7svxX2+O/G3D0cOPaErGq4LvRfr6b2/
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
         "], {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
           ArrowBox[CompressedData["
1:eJxF2HXUVUUXx/GzD2GQKg2idCMmICrdDUp3N9Kg0qGSFiogpdgtYHcAJmEQ
KqAoICo8dKv79+7vWu8fd33WPM+558yZ2XvPzC3Wa3ibYWmSJBmZkkRa8n8z
YWb+lgUv5H8X4MVckxUv4tpsmIf/5cC8fDc75uOeOfES7pEbL+MZufBS7p0f
S3OvgliGZxXAsty7EJbgXkWwFM8qjCXpw5VYkWcWx8r0qRhW4h0vx3K84xVY
nncsihXo+1XYnL5ejS15lyrYgr5fg63o63XYmne5FtvQl3rYkGc3wMb0rT42
4l1rYxPerS42493rYFPGsAZ2Ycxuxm6M6U3YlTm6BTsyR7WwM3NUEzsxhtWw
HWN4I7ZnDKtjB+boemzLnFTF25izG/BWxr4XPsdY98YXmIs++Dxj3xtfZKz7
4MvMRS98ib50x6d5dg98lr71xGd41x64kHfriY/w7t3xYca+Lw5mrPvhEOai
Pw5l7AfgMMZ6IA5nLgbh7UnEQj8cncTc98exScRGXxyTRKwNxBFJxNYgHJVE
7A3AkUnE5KO4JIkYXIyPJRGji3BpEjG5AJclEYP344okYvQ+XJ5ETk3ElUnk
0GR8PIkcm4RPJJFT03FVEjk1E59KIqdm4JNJxNgsnJtETN2D85KIubtxfhIx
PAXvTSKGp+GcJGJ4Ks5OIkfuwFeSyIm78NUkcuZOfC2JHByHDySRcxPwoSRy
cjw+mEQszUwj5qanEWsz0ojhe9KI9VlpxPjdacx1I4uYaGARCw0t5rS+xdzX
tZjzehYxeW8aLksjJmfj8jRicg6uSCMm56L+r5ich/q+YnI+6nrF2KO4JI2Y
WoSPpRFzi3FpGjG8EPV/xezDqO8rph9BXa+xnIIL0hi7aXh/GmM7Fe9LY64m
4gNpzM1kfCiNuZuED6YRmyNQ/VAsjkL1Q7E6EtVvxc4w1DgqVm5HjaNiaThq
3BXLg1HjotgdihoXxfYQ1Dgqlgegxl2xOwg17ortgah5Ugz3RcWHYrY/Kn4U
0/1QcaQc6YW6XjnSB3W9cqQ36nrlenccl0Zu98QJaeR+DxyfRsx3wTvSiPFu
eFcaOdAV70yjxrbDjmnU1A7YOY2a2x47pVGrWmHbNGpTG7wtjdrVGm9No6bV
RsWPalpdVPyoptVBxY9qWj1U/KiGNUDFywrlGSqeVNNuQeWtalotVF6rptVE
5bdqWg3U9aphN6OuV427CXW91qxqODqNNepGHJvGGlYdx6Sxhl6DzdNYM6/D
lmmsqddiizTW0OuxSRprZlVslsaaegM2TaMGXoUN06iBV2PjNGpgFWzkrub6
1Yz7asZzDdetYX7WMO5rud9a5mUt4/26WwrHoeLpDbcEjkfF3ZtuSZyAire3
3Io4AlVf3nYr4UhUXXnHrYyjUPXnXbccNkTF43tueWyMisP33QrYCBWvH7il
sR6qvnzolsH6qDrzkVsWG6DqzcfulTgR9V6fuMVwEqr/n7rFcTLqfT9zL8fu
qPFc5xbFnqjxX+9egT1Q47zBLYKjUfPzuVsIx6Lm8wu3MI5BzduXbn4cjHq/
r9wCOAT1fl+7BXEo6v2+cfNgc1S92ejmxRaoOrPJzYctUfVos3sZtkKtg1vc
S7A1av381r0U26DW0e/cnNgENU7fu7mxGWqcfnBzYVPUOG11c2A7VL3f5mbD
9qh1YrubHTug1osd7kXYDbVO/OhejF1Q68VP7oXYFbVu/OxmxTqo9WqnewHW
Rq1zu9wsWBe13u0m3mQJ1PW/EG+yFOr6X4lbWRL13D1uiuVR+fqbmxkroPL1
dzcTlkPl617us5d8kqqb+7jPPvJJqn7u5z77yUupOvqH+6+FBWgrrg8kyf8O
9QeI3wPE9Z+uYX5UXP/lnrDwHCqO/nZPWngeFS8H3VMW/oOKr0N8/xD9ksr7
DL6fwfMzyO/DfP8w/ZWqB0fc0xamtJVfR90zFmairfw65p61MDNt5ddx96iF
5WmrHp5wj1lYgbbq3kn3uIXlaKtOnnIzLDyPWodOu0cs/Ae1Dp1xD1t4DrUO
nXX/trASbdWPc+4hCyvTVv047x60sCJt1Y9/3L8srExb+8F/3QMWVqStfaF+
8PnTwkq0tT80xY6FZ1H7xNTdZ+EZ1H4xk7vfwtOofWNm9zcLT6LWwyzuXgtP
odbDrO7vFp5ArYcXuL9YeAy1b7rQ/dXCo6j90kXuHguPo/ZVF7s7LcxA7WOy
ubssPILav2R3d1t4GLXPycF7yb9R63JO3kseQq2/uXgveRC1Xud2f7TwV1S9
v8T92cI9qLp+qfuThb+g1oHL3B8s3I3av+Vxt1q4C7WPy+t+b+FO1P4vn7vF
wn2o/Wx+9zsL96P2tQXcby38A7W/LehutLAMbdWxQu4mC0vTVh0r7G62sCxt
1bEi7jcW7kCd5y53v7JwG+ocV9T92sLtqPPeFe7nFv6IWseudL+w8CfUelXM
/dLCn1HrW3H3EwvL0NZ6VcL9zMKytLVelXQ/tbA0ba17pdwPLSxFW+Nf2v3I
whK0NV9l3I8tLElb81vWfc/CvLS1npZzP7AwH22tp+Xd9y3MQ1vraQX3XQtP
oc6pFd23LTyJOq9Wct+x8ATq3FrZfcPCs6j8usp9y8IzqDyq4r5p4WlU3l3t
rrFwG+r8c437uoXbUeega921Fu5AnYeuc1db+ANqf3K9+6qFW1H7mRvc1yz8
HrVvqeq+ZOE61PmqmvuyhRtQ56rq7isWrkedv250X7DwX1Q/a7gvWpjQ1nvd
5D5vodHWONzsPmHhn6j73+KusvAvVH9quo9beADV/1rucgsL09bvDbXdFRYW
oq3fHeq4Ky0sQlu/P+i3oCUWPmfxm9AifMbiN6PF+KzFb0rL8GmL35Yewyct
fntaik/5p7HFPlNmR+1HmxAnTfi71L62KXHSlOuk9sHNiJNm3E9qv9vcIo/k
TlSda2GRR3IXqi62tMgjuRtV/1oRP3I7qn63tohDuQ1V79tYxKHcgarrbelP
W+JHKo9v5blyHSrvb6OfcgMqv9tZ1Cv5BWr+21vUJfklKl46WNQx+Tkqvjpa
xHlH/i+1T+xkEeedeI7UfrOzRb505jlS+80uzJd8AxVHXZkv+SYqHrsxX/It
VDx257ndGW+p80APntuD8ZY6D/Sk/z0Zb6nzQC/6Id9Grd+9eZ58B7Xe96F/
8l3Uut6X6+SHqHWoH9fJj1HrVn+eJz9CrXMDLPJ6APeROgcOtMjrgVwvdd4b
ZJHXg7i/1PlwsEX+yk2o9W2IRf7Kjaj1cKhFHZCbUeveMP8sxAzUeWm4+6CF
h1Hnpdvdhyw8gjovjXAfsfAoKh9Huo9aeAyVv6Pchy08jsrT0fRHrkOdk8bQ
H7kBdU4aS3/ketQ5aRzPlS+g4n08z5UvovJmAv2Xz6Py5g7/PIBfo/ZPd/rn
PvwGtU+6yz/341eofdVE/8zBzahz8iT3Xgs3oc7Jk93ZFm5EnZOnuHdb+B0q
fqa691j4LSpOprmzLNyCiqvp3H867yG1z51BP2fwHlL73Jn0cybjIQ9y7wX4
LH1bgM/RpwX4DPd4imc/zbO0HszlvnOZ57nMxzz6MY95nse8zqffciFqXhcx
r1Lr/mLmU2q9X0I8SO0XtCatQo271iTl21LGW2uY8nUZ87Wc/q+g/yvpv95N
dUhjoLqjd1e9+g9aUp2N
            "], 0.022611287634278027`]}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[1, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[2, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[3, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[4, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[5, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[6, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[7, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[8, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[9, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[10, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[11, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[12, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[13, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[14, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[15, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[16, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[17, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[18, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[19, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[20, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[21, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[22, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[23, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[24, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[25, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[26, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[27, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[28, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[29, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[30, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[31, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[32, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[33, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[34, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[35, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[36, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[37, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[38, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[39, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[40, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[41, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[42, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[43, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[44, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[45, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[46, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[47, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[48, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[49, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[50, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[51, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[52, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[53, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[54, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[55, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[56, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[57, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[58, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[59, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[60, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[61, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[62, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[63, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[64, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[65, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[66, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[67, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[68, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[69, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[70, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[71, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[72, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[73, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[74, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[75, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[76, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[77, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[78, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[79, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[80, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[81, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[82, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[83, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[84, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[85, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[86, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[87, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[88, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[89, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[90, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[91, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[92, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[93, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[94, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[95, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[96, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[97, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[98, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[99, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[100, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[101, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[102, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[103, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[104, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[105, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[106, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[107, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[108, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[109, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[110, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[111, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[112, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[113, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[114, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[115, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[116, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[117, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[118, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[119, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[120, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[121, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[122, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[123, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[124, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[125, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[126, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[127, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[128, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[129, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[130, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[131, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[132, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[133, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[134, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[135, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[136, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[137, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[138, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[139, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[140, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[141, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[142, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[143, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[144, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[145, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[146, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[147, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[148, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[149, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[150, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[151, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[152, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[153, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[154, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[155, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[156, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[157, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[158, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[159, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[160, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[161, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[162, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[163, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[164, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[165, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[166, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[167, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[168, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[169, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[170, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[171, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[172, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[173, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[174, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[175, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[176, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[177, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[178, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[179, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[180, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[181, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[182, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[183, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[184, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[185, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[186, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[187, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[188, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[189, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[190, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[191, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[192, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[193, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[194, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[195, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[196, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[197, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[198, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[199, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[200, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[201, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[202, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[203, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[204, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[205, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[206, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[207, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[208, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[209, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[210, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[211, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[212, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[213, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[214, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[215, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[216, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[217, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[218, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[219, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[220, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[221, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[222, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[223, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[224, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[225, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[226, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[227, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[228, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[229, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[230, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[231, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[232, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[233, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[234, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[235, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[236, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[237, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[238, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[239, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[240, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[241, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[242, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[243, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[244, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[245, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[246, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[247, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[248, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[249, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[250, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[251, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[252, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[253, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[254, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[255, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[256, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[257, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[258, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[259, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[260, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[261, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[262, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[263, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[264, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[265, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[266, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[267, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[268, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[269, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[270, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[271, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[272, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[273, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[274, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[275, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[276, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[277, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[278, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[279, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[280, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[281, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[282, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[283, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[284, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[285, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[286, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[287, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[288, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[289, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[290, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[291, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[292, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[293, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[294, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[295, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[296, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[297, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[298, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[299, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[300, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[301, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[302, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[303, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[304, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[305, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[306, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[307, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[308, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[309, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[310, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[311, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[312, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[313, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[314, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[315, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[316, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[317, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[318, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[319, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[320, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[321, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[322, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[323, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[324, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[325, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[326, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[327, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[328, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[329, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[330, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[331, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[332, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[333, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[334, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[335, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[336, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[337, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[338, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[339, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[340, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[341, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[342, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[343, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[344, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[345, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[346, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[347, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[348, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[349, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[350, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[351, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[352, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[353, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[354, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[355, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[356, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[357, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[358, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[359, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[360, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[361, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[362, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[363, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[364, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[365, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[366, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[367, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[368, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[369, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[370, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[371, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[372, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[373, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[374, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[375, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[376, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[377, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[378, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[379, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[380, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[381, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[382, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[383, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[384, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[385, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[386, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[387, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[388, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[389, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[390, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[391, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[392, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[393, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[394, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[395, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[396, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[397, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[398, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[399, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[400, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[401, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[402, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[403, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[404, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[405, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[406, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[407, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[408, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[409, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[410, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[411, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[412, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[413, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[414, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[415, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[416, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[417, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[418, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[419, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[420, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[421, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[422, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[423, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[424, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[425, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[426, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[427, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[428, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[429, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[430, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[431, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[432, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[433, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[434, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[435, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[436, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[437, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[438, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[439, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[440, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[441, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[442, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[443, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[444, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[445, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[446, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[447, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[448, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[449, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[450, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[451, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[452, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[453, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[454, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[455, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[456, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[457, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[458, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[459, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[460, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[461, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[462, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[463, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[464, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[465, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[466, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[467, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[468, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[469, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[470, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[471, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[472, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[473, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[474, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[475, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[476, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[477, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[478, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[479, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[480, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[481, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[482, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[483, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[484, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[485, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[486, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[487, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[488, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[489, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[490, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[491, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[492, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[493, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[494, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[495, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[496, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[497, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[498, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[499, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[500, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[501, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[502, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[503, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[504, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[505, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[506, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[507, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[508, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[509, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[510, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[511, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[512, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[513, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[514, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[515, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[516, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[517, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[518, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[519, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[520, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[521, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[522, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[523, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[524, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[525, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[526, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[527, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[528, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[529, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[530, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[531, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[532, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[533, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[534, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[535, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[536, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[537, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[538, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[539, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[540, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[541, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[542, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[543, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[544, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[545, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[546, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[547, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[548, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[549, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[550, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[551, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[552, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[553, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[554, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[555, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[556, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[557, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[558, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[559, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[560, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[561, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[562, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[563, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[564, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[565, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[566, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[567, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[568, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[569, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[570, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[571, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[572, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[573, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[574, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[575, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[576, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[577, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[578, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[579, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[580, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[581, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[582, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[583, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[584, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[585, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[586, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[587, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[588, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[589, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[590, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[591, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[592, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[593, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[594, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[595, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[596, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[597, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[598, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[599, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[600, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[601, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[602, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[603, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[604, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[605, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[606, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[607, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[608, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[609, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[610, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[611, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[612, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[613, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[614, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[615, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[616, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[617, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[618, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[619, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[620, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[621, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[622, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[623, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[624, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[625, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[626, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[627, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[628, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[629, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[630, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[631, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[632, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[633, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[634, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[635, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[636, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[637, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[638, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[639, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[640, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[641, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[642, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[643, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[644, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[645, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[646, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[647, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[648, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[649, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[650, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[651, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[652, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[653, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[654, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[655, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[656, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[657, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[658, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[659, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[660, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[661, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[662, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[663, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[664, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[665, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[666, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[667, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[668, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[669, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[670, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[671, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[672, 0.022611287634278027]}}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    FormatType->TraditionalForm,
    FrameTicks->None,
    ImageCache->GraphicsData["CompressedBitmap", "\<\
eJycvQd4XOWV/z+2epcl2ZK7bOveOy6AKabbkFCs0ciUbEiyyaZA2IQWsiFl
KdZoxsCGhE1I2RSWNDYJJIRAqKH3DsamG2wMxtjYxsa9W7q/8znn3JFMTJ7n
//fzWGU05d73PeV7vqe8c07/1ln//rXTv3X2l09vn33B6f9x1tlf/mb7iV+/
QB4qGZJKDZnG//ZUqfwcp1L/8GW/VOr/z8/f068jD5Av35b/f5D/j8j/RfL/
Lf++4P/D769/6PeF8v8n8n8Gn/J9+8i8fp26r49cOugt35P/O0qGDumrKB0S
Nw4bHo+ceEQ84YBPxaMmzYxHDB8ZD6utjBvq6uKgrTwe11of19bWxcPqa+LK
2hFxY015XCe/jxleH0ejKuLGBvlbXVU8vKU1HjPpyHjiAZ/qHzlx5o6q2tbV
H3Ere116wS79Yv16MJf+Q/n//KC7fkf+by0pq+qrHTY+HhUcH7dNnBXXN0+M
m0ZNj0dOmhXXDhunl9Yy5qC4YXgUT5359fhfvrMo/kzPiviTFy6O9zv22/HE
MSPj0SOGx9MmDI/PPKZKfh8lv7fEwxsq49aWpnj86JHxl2dVxgdMGh6PkudN
GN26z/epbxwV1zWO1mVqkKWory6Lj0lXxt3TK/rHNpfsLC0Zss5vNTWUm06V
PDr4du0+dXtSqdbBt/uu/F8v/3cOHTqkv6KyurjCbcNHxK0TjownTP90PCbd
FY8OT4j3//hFejn8fNwX/6o/N43cL44O+3d9TC47VcKFpxr00oMps+JwVHU8
vHVinD+lJp49vTlukZ9H1A+Nhw1vj4+d1hx/71O18Yi2CfK8mrgjOmzQe4zQ
9xiNdIwYGXcc/HldzqitJP6P2dVxx+iGuKneJGCUS9KgLepvnTBzl0jDuy4F
g5fDliH1Df06avBqrGUl6qqG9Dc2inxOOAK5isd2zIxbmttEBkt1s46YMnKf
m5SsytjJ2Xj68XP1cVaudcJRcfv+nyzTm6qLOw78dDx5VGncODyMzzuuKv7C
0dX6c0vt0LhxRBh/+vC6+Dtd1fEw+XnK6PK444BTUvbakfHE6Z+Kxw+vivf7
2H/q4k4aURKPa2v+p7IzeLNqGsfFzaMOYLH6RW53lJXXrvjQ4viypL6mX5uS
1eEpy+T/9qElZf2VNS0q8k311fHYthH7/NgRw9virx1fHQfpw/mbbWm1/jlZ
oIkH/mscHnqmvoyfW9uP1qs99ZsvJVLEuwaTj4yDkTUiRe1x4dSa+Lj9kaL2
eESdSdEx01riK06riVvb2kWKauMgOpS3SCUfyXuMD46MD5lQrh/HBoxskMVu
aR8sdfb0YXtdIT+P6jhOb2hG95ViB44T3f+YXOVsEbQJ/dVV1bvKS4ZgM653
wZoxsHipc/RrXWIZn8KklIqe1dYPj9smmMwi36Pb2uJwZKXoRWk8asJgHSi1
yxEJPDZdhiiYJES6Xh0HfyEeE3XGB57Qqzc5OpodTznyPF3DyUeeyyLo2n7i
26/qFiEhI8X67D+xJT5jZqVan9EjZDHFGrU1N8ZjRo6KT5fHD+xoUvWfMKp5
n+8zPWiLDwsb4/2RQtmcljqT3L2ltekf9nf8fp/Qa+M9Duq8VH/mmlvGzojr
RG1b249iSfpEdTdX1bY96qt5ri3mV/VrQyKQCOOO8tIhfXWVQ+KGhmFxXdOE
fQri4VNGx9PHlcbjp53sV1aqan1UUBaH6UMHpG1ycRHbJs50tblZ33JY29T4
41+4MT7ilJ/GIzs+Lho9Mx4/9ZS4bfyhcUtTc9xQWxU31tXGHeK5RjaL56qp
1d+r6kaIqcZz1coC18seV4hHq5XnV8rrmuLRE2bE7dNOlj0/NA7HtsSZ/cvj
dHRAPOmgz+lmtYqdbBmxL6lu1WsdvPn8jNhy3ceffmtxoQf//A9upXnSzorq
pnc/bAJsqVNn6teaZMUXo/6VNcP7R7QjuqJEk45RL1jf0qEeckBsy/QjQrFQ
4qHike0zBl36x2yZxWQfOrE0PnLK8H3KWG1Te1xd1xY3j54et44/LK6uHxlX
1Q6PR4w/Qpe+eeQBcVllQ1xW1RBX1A2PKxtGxdXN7fpdfu+rbBjZV9XU3i+/
98vv8n1kv/y9v7J+ZL/+vX7kjsphY/eUVjb0V5SXxcNqhsZTR5fGB02oEGva
LMZhgm5tnXjamsrSeFhD4z/VicHiMrLjYyLvn8Xox4d0fTdxjYN/9rWoKjqJ
NlnLhqbRcW3j6P7GYa1I9iPJdvy7bccZ+rWW7bgn2YomMeYfBT6Q2pEdxyUW
A7P3uSMq4zGt+74D7q5FDFAoQjxqeHPcJrs2furJsvqH9tfWNfWVlZVtKCmt
XDa0tGKR/H+upKzylSElpetKK+s2VtS13VrTEjwy7vAztoRduf6wq7c/6uqN
5fsO+f5elJn7fpQprJTf5e+9u6OuXB/Pk7/xPTWUV6TG9YUZHs/3TzjmvD0j
pma314+ZvqdmeLCrsq61r7y2RXdRdnVPRX1bn3xuPxKA8rU0tYgy2vWOGHeY
rOJYkZyDVFmxC9js6SfkdPUBK+wM9z7l6PMHXHONGqngkC/G48MBzNHa0tI/
tqlkV3XFkKWDdcR2I/VF/VqV6MgbAIjSsiqR11G6qqjn3ntuJn1UcIJsXDBg
fVp0/0Ixp/i4yaNE7GqbZPHNQowWryDi2F9fUyEeuHzD0NLyHRX1rbuqho19
p6y66a3KuhGvNow9eNW4mWctCzP528Ns79BbWdOD75BfV8k6r5SHXpB1f0Z+
fjzM5mQf8rvl/x7737szyOS3BF29D8jzPhdl8yPTsy/LBl2FF+X3LUE2L/uX
e16e937Qldtpeyevy+S3yp7tCjO926Nsbqf8bUeU7d1t753bxvu2H3PeruaO
Y3ZWDhvTV+F7WF4rGllRFldXVcX1ounDWqeKJZE9G7k/Rkm04Vi1KMjoIdkr
ElTgK1i/l/FDrsFEo9OdorUT43EdR8aTpmtY0d/c3LZD/EPiSb5ke/Z5/VrN
nt2LIgnK7zeUf4JIyrFizwL1bXtJx3ABX/+q5m5fygMmxKWOHFbZX15Zv0v2
hzhk6ZAhQ98qrWp8vWHcwc+MO+rM+bIwd8mi/F0Wa0bYWUgNNYRwiizg/bI5
34u685eHnbm75Xlv+QKulZ8XRJn8U7IRsgn5zWFXjylNn2xBqm6XPC4KlV8r
338rG3uy/L18ymm9p4TdvRvDbH61PPdaeY/zgjmF12QTZdN6U0NRzdT+qN06
+dvD8rqfhJme/KTZhbfl7/JY7gn5flGQzc2Nunv4bK5FPju/afysc3Y3d8za
Ud08YbfIX79salxRURHXVJTE9XUNqnys0Qmn3/aRUES91Jf+pvI+dXRZ3Ng6
ZZ82bNzItv66qqG7JMAZrH22g6nP6tf6wfgKqyhA4qPjlilHnbc3yKzTD0Xi
EveJ5IFVRow/PB7R3Bx3tJb2t9SX7RBfs6Rx/IwT68cenCrRj+76pEj7Yln8
5bIwKN1Tsmj/KlrAH9mEo2RRH1Ht68rfIwt4gzz/Gtnoh+Tnj4dzLrkg7O55
xza5900Rih1siLz+A3kvtGx7ZFq6STSTjVwuv78iv/O8DfKcDfLebAzP2Sp/
W4bmifZiWT8QzXxC/oZgvR1lemVjc6+LJnMdx3R0F/5ThAMb8bPAvv8o7OxJ
Nv8dea+V8prN7TPP3TJ8SheWeGNZTfMeoP/wcTMk6j1YN3r4uEMFWZ2qa8ba
HTR7XlEh2kdUaUhWBNfm7gieG2oq42MnV8efP6qy/+OTy3e0NQxNlDT1Odvc
z+jX8Ym72ySBR9/Qkoq4tn7fAUcS57Dpk488+yNFD6SJbxjVcTy+QXxI/Y7y
mpbN9aMPWNwSHve3MYefvlHu/qWwq5Aq+de0qFjXt6KuwlOyc6zm94Ku/B2y
QutURbO5PwfZwkOykvK3/FOyYktl5W+X5x4SZS7+s6jrEvn9UXm/FfK6d+Xn
HwbZnl92ZHsXdHTn7pcdP0feUz4r/658l93ObZTdW6u724UE6E72Ywoi86V7
IvvbvfLZIgkiMdm82F21w3JNhcXymKiz7rJIZW69vMfbIik/le81rSd8s0de
x25fJa/ZJI/pfYjE3SfX3tORzYkU5pHWZ8cfddaixnEzHhJ3s7OsepiipIqK
qniYhE1jw+M0sDtqyggFrc3NI5CCxI8CDg+ZUBqv/klLvP2a4fFDFzXGx08t
j2srS3aWlQxZMDhUsm1OfUq/ViY2eceQoSVxeVlJ3NpQqnQBELkoR2fuFaSh
6ZMO+rciOh8h2g9E5DvOpLZhbFxe1YivXDd8cufr44/6KkDkXblhsbO512TR
sWtr5LEH5XcWJ1m8FfI4j90ri7LQVW2PgppsryxsDod6pzz+sjxPhCbHe2yX
x7fK76gwqvSkb8YqVfGMqHamd408d70Ixy5XXUAPP8v753YFGQVIe1A/+X2t
PH+rPHe9OFvUfbO8n2y2OtgEaPHa92RjXxYheN9Nxi7uSf6Gzb9PzMdi3+yV
5lv0+sAKv5HX/kc4pyBmKL9T3vstsfmXy88vy2vWts86b311y6RdddUV/WOa
SuKD28sMIgtArK4T0NU+KIAyvzxqokEYNv7nX6iLj542UqPEiUrQzBT9bYUC
3FxWWvTLtvmpTw5gqb/I/82VNSPElA+QME1NbYLTh8QT9ktizNHFOJh3rm8J
1W7DcFRW1vSXlZZsGVpWub2yYfSOpkkzV42fedZXRPvapnT1/lwW5mZZqP0E
mU4Msr1seo8s3h3y2K9Eo9Nh90XXyQKx8QVZkF9FOM2HcLvjn5cFFaHJ/ySd
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
H7JgSBUXj0RAzt3MnnRy4ZbAaoLwRCJMav4+ERgx8Lbj5bOibmqI8j+NuueJ
Z8izDSjUMvUAc0Rgsyq0CPirSmDaFmEmn/fcLOsEkF4r399UKlthiFaMDeXJ
qdbnfBm3GC5Vu/Cq/L7YOc4P/HLuDa3IQBBBfkEHKaSsW/mufNx+zHn99WOn
xxUVlXFl+dC4dcy0QcF7pUoX1hbWe1D+ZFddQ+v1RdOamqVfS5Hb3WJ/NSgv
ooApxf6KabMu+HD1txjYhrUV9a2UTWI8t8lFU2dKJdw2MWjJhSaMZD8lM6L8
4uE1d5UQPwmMxBBtV+XO6I3KPvXscSU2GGtGfJV76yQOwlCWqaUaAZp9I7Ty
K2wB2rLWnfm9bkcTr8Xar3CawDMLuaTo4m2nIPgo3tNYgBMhRrc7sGQLbw2N
ylkhb/mQJT40jN5gbKUmN+Io4V8tzawUU2B3vMGKf3qgsgjBYUYxvc95QRF4
SXBL7nl3CW969o7LXhkaIH7RrICyHO+b+VeqO3bW4x295U7P6wKos0pd4ciT
+hFWeLcHFzCWa30pKIJ6xFc72Z13TDOTSNjSyKqSbdz+emfaiT1Ypp2RYouc
WNlz+6vFotbU7Tuzj1WlqyKxmSeccRt0056y8mKK2EQ1dbTxm0UCnaaD4WNn
DKJJD1VbTSsVoNVTwpvLy0purRkeSkQy710Dnrrn3NQWNytJyA9nyO8r1cdl
NZWqVLNFOipy4ufz+DLQ0WL5/WU1fd351RL1CHZQLMHziJ5+EFhFVyLqANdf
y3MxT/CGcDk3i+/EDmAK0f0zOrK93wq6FbVhPt+VaxiqFUa1S6JutarAGkLi
a+Sl87mkwKrIKQZe48DwHLHMxpy2YmyBrXwK8SKGCiMvUf5lavTkinimfLrm
4hZZ5K4fQ8xIhhfCAuJNsyoiojACwOBUGSY31Ym4UMv2XqCRt66svE/+9CkZ
EIReNneEceYz/yi/fzGYk4Ppogh+eyKinuvbITg1qeXb4nTTLq+8kOcXPggs
QSYrpYb+9I5uJdveccuZkPQ4QYwzn/kmxsXiYCUQlR0IrZZwmdzXq14itiSy
pNw9jsR2tUTHx1UNo72k9hQNi4iaQJyJ3EIZFDPWIoWtE2ZuraptTQrpTHhT
Rw3g2g3Uw5SVlSv3cOCJhQ9lqW/07OUJ2sRTUVnTV1NVsb6quX3t+JlnbXVb
5rKr0enagHSD4Fm5k82mjRqU3SaPTdh/zqXnpalSTwyS8T0iBVrvwgoq3yNB
21vuys+IOueucSPGqhN1n2kUJ0aJ6EHTkXCFj6ez4LZcUnJFycHHwznarnC5
ReKOc7Pq92hFITDi2v4szwHfkekmhwjvSBsErzsjys6lxuUxD9LAy19Md0o0
ZHgeXErmnfeHbxJIcQmPH+6BFnU/0Gzg/N/Je6Sndfc+pJF+V573ucaqOTXV
2SP3CJ8E1h4jrydSIiV6uvydXCfvf0NA+sdc2E713RmNmtDtLYEWgQv2z+Z/
J5gVo77E3VyfUYP6HaO7LTDJPqOjcy54+TovCtwRWQCdSOdf5LOudlZhhUpw
JrfIpFb9FT6MagTgzEnOx31RNPD+dFdBS4/l2rFhOJnnPdgWf5gD158adPas
8sB6y3i30iWl5crcT9j/k8U0d+dX7/9nfWqbK6qbriqKdupI/dqoeNi6KY9S
PcEi/7OEOc0m1TWN/bUjgp3ts84ZiitPTSZAgUAUs6IL/qQsBkYSD3i9LA5C
uNvYByXO71AjndFCKTwii0jQkxR2EfX/Wh6/vKNL63oIerjeZ21zRNC7CwgG
1aZiDnK/ko06Wl6HcK/TDbLK/jsDI80JVpyF2J+QHSqLxb1SC8GyRP55KC4o
oXsUq2f0evaLTp57T2ThtD0/m+PaRkw8QSmxv4pgLXfFIyg6JDpJr5O/8Wk3
yXP5PO5L7YoIHHiTa2udNuciHiNwxEQiiH+V/1v0/UyYUBg+F6UutzgG3V7s
EB4LnrCITvIrlc3tA/G2Kiiw1qP18n9DZOnXLe7r0Inu9Jzea8WzbFa2S3Ww
1+TfKjpguC4Tm0R8SKkT24Ose1VIgViTdCvlEFwypf53u2eh04by/fsiS6+u
1dvs0pAFYPaeF7CtDZRZy21vbD+sv7q2Ze/2pX9o+isbzErsrqysvW5AolNH
WMLBAHNFjfY/ogK0rdCfxFseccpPjUK+Lm7f71/UslfXNO2pqqqU+O7wzdyd
aKVV9GWUwpKNyb9mLHcebpI7JbBiVaj3ZqXQ5KcNmeYelrv7vKIFg2Qg3I4p
c3oT7vHCdFciIL1JpQZpwj6HoqCMe5XhyPS6L1amgILXd72Ons8k8PmeXCdW
hfdPCuS+UCzJHiia4zsCeLPXGcGELPHg9NT0Sbp7SFciwDwPK/Qz514Ty061
pOAC9cdY40Sw74ms2kM8AcUxyqBQ9Lsw1J4rKiF7JYrqZU2z6a6eH3pxHutJ
LRM1UVByfDaICy76rdCqMrGeSHns6VPxeD1iMfNvB5rBKJwj6wlGwQst9IBx
sUJsRYx5D3bU2+6wChTCgjyVnPC7S9yiI9WPicL9OTC4f3ja1uGvngFeSAAs
a3Cd4Q4NMlHwGwOF3/nX5LUUS+j72TXrdYPnclh1eZ/VnpDk7/BxuynurfF0
mzdXlrmgA1FoTx056dg9NfUaGLqEpw7Xr8eroFPVDUsBx0bZLzxc08j9ixYc
i37giXlweH9ZZd3myobRy8cffdbKMGl8Uj+tiesDO06ax86I+dOVx3Tjf18y
nKJUBLme9cpbWQUYu3+95yH/18utf+gSeFU0wE2BNZLScD7DML7Zpw/cpiBV
CXGMtHFN54ltQQN4X7D2RelMDsliAZCcpDwUM1mqy5LG4lIa/Cx5d+/8WdiR
0czbgft3zrvY3TBwIXkrYAXCl9B9xJN4JkqBE8V5RAU5Q/eQegNeBwx5wVNb
f5fNf8gEpfeCdLcW6f0gsv6Gd23p1PyZMzr2elvF3udDdSTYES2A2eSRMAwl
ThTKnJ15MOhSZ4otwoKSU2GX+rw1YYtHyqAXckarPRriuYSurzuLuj0sJuB7
+Bs62hVk53KLfwxoxMoq4bTBW+KwLX8Qy/++kjj6mXlHiJor4f0el1uF5CEv
8pIzkCAgJOW3Yw7/0n1Dhgzpq6xpUgxB3Wcx71tRpNqoIaZmvWXMwXvK3bCb
oKcONfNerGAYbNxP/PIdg7q2pylLMigpIj6leXP9mAM9HZzbJHeIzyFjVuuu
GQtKOxldOxuMly3g2ldF2oxCOVD+8I45F3NXNA5K5FG43D0BGHTclO4rVqoP
zeRukp27KbIME0IFdrxXVkWsSM8yraOz1u6kJIpqS8qWsZr4V2+OrMJii6zP
AwcjHbyH6JFmFfDBWh9guKCa13ItWB5WHWKCnV0aWMaArliUQms4Uk1c8iNG
12r1ojZqybJQ14JB+093VALRL74hyoib14JPZfxWOFtGaGByPBl7CFihSh+Q
dpus2P8EXT3PeUJ9lVsTVvJr8hyAl1sRkIxWGC5yDSdTzHMptKRWV/zNvNUK
mrRaUSsT+Xgt2hI7jV2+0IES9bt/jbLaS7bdbe8ez4emhuI5UxHs0a3WwK3I
CfmcS5OhrBifS+fAjrQWuKjuvGGZ8J5tXkCyyi0ihTD4x/e9+h+1f6VxwhHb
6mpr4rr6pn3iZ2oewBukrMekMyDz/rLy6mLZhEm5/ZwKi0ViVq4zQXUk6bIl
4530eYSHfnkgsVLdsKdx3MEsrbh3hSyALJYQJguoQQcXW8OSvu+FBqg0kEAM
r7Y74457vI4OfPt3gTkEfZD5lk+of82Jshc9XvmPtOkEkrAMPiag7E/r0nK7
vAwQu15l4TU29W4LMbWxDkPzbXlLFesKfU7Nj60hL7cisEVGuChjf8JVDzdy
bIKwTW1moEL87ZdhpuBGTgsi1zjooXsA4LDW7+wxqxLSyGWDCkCGdhNlp7kW
KnARRHzFQq8AwXWutzK1nKhv73OiTwj0He7uCOXWuIHcGFkTImrYGVroi1vj
YrnWNwwqKy1wl3ZFmU7uCa307F9E//zeDsBMPR56flYhfDb3bGDl/WQU2A67
towTfUo/UGvWu9WNP6mz99PWRqB9aaHSAQUqHrk2TAuF5ZuUggBwZlCwntvH
HnXmhurhk/qqapr3IlloE0oa0AfPpflQS4BLdeoQwy+DYs+P7jbHsoNqsPSQ
2oKVtjR1HI1e/k9k2S8w4yseaXMrBbl1ahJw+SvluyCSuSu0lTsjuM6wLIzD
2V6h9VvY+0h9pRYSgSKw2F8JOnm9RlU7rFZeC9swm9DLLPkur0RcaLZLr4H8
L2JjUl45PdCKXq0VQudud1MJ6UKC0QzyCYSzWiAYaGaX8DlHRQbgApVL6mpQ
TdA9goN/ODOdmQt6QBCWuHFe7lX7nk7RvhA2/4eRKQu8yxIXzrlBdw/tdqDt
hMOA5yEv+Bu59OsiRRLFum/nNSCec6B0KixwJvuHnb0iND1vBJqzhH3MyQpf
mtQJcZMndnQrP8J1Peur/8WgE4TjjZIZBUqYHU3Cm5054Dte1YIiJ90KT/o9
Wh43kyNfw270e8HCjrBYSphj5MYWj5GJsERx89eIObu0I0P7eX6ZpZ5yVp8k
6EY80Hte/07K6+GGsQdvqigr0VpdzHD6iLP+YU7QhziXXQLXrxuQ9tTB+nWs
wvWqj0hADh6Axu9UF5eV1zAkgjJfhJbUqPbSuu04N7SiFyAFt0iXIdI2eWrX
3D9rtXQmYT5GAbsTZoIljtpPmvu2tQBo9vCXWslmjnqLV8+tiSx7d2dgnVZk
3R7xYoRXw27Nh7BU2zzIxa5VmulGuLlcMOrPnRn8k0jUNW4ikWgkQ6vEzLyV
9Sjjaez/e64g/rcQ0uX8qLtwp8eQSxSlmSlG4kBrSO1zIoHvGZPW+6nJWjKi
cel6h95cItJ6ry2dYuMkNfOUVgNY7FfM+IfWU7MGDB0kWpbJfzGd1bolu7xj
uFQK8SAFET5NbIlgdToIlJcqT/Rr7wVjWSBhvym/L7UIRYQvq4UMAEeIVt6Y
jusVpsw5Qsu/eenTKrmk5bL6T2t5hxZF60yZzeFA8p5g6Zx0Z0HgWUGzRrYM
IvQZtUW8D4+v18bDrOcErU8Vhbsk6iT9kPvlmMO+uKVq2Ph+ivAocfrQZKa9
JvMQqwp2v74o9KmD9OtHJDEP+YeRdtj6mvoRWxrGHsiNfzGwMOtrkfIpvVd2
ZHMJH7EalteKOpVjYN7KL0IbD8LNP+H7jdWDT7lJZ7JkFEljEXkNVvcebX4g
vZbR/i7kgYZc/5tmgn4s1oJcCrmJZwPLwVDVsNqSzSov1AQZIG9FNK7wKPNU
7ynkO5eO6JP5SQwuv5/kKAbjvNSQuU4tWWW+4lIIbnhLZMb7FzsQ1fkGpUm7
aGL6G2HXXN6HkI1EGm1lyXV8RrT40chGNrztz8dqIDe7ZZ8JYFYL2kA+uTYM
PDJN7xFtXtz+j1yeqcR61q+f54LmTBVmstpAzZfdUGzXlTdPu9A9pMRLets3
YnRC6y7DStylgEn5AE1sAoioBxXL0XOdxD5vR2g8fQVWb70oMLqX5z8RDdT/
Y+exCtq7EGrbpiL084PZygztiLKJlchxrU8aW0fFYi4ZHWKSpVko3Yat7lc2
wlOqIAuSd8amOBoP0FNVO2KP85Im+6kDB6kALUWeEbUXHTx4CgPNHQ+Lxb8l
bYkAKMZculMTmVxEYsLoxzGKSyfXaGHNYk8+/DKd7aEBCx7+fyLrjSfwxFqz
hyQ8oOKeVGeazWE2F4o3WavUWZZ5Y0o7XBNoqZkiZvYZkEB4BjpeYyqjPbNL
/DqVETH5L/m2J5oAL27CL8KDJfSpyHSOlCeyc7cLwNLA7E5S2rbDamBUdolK
eX/eD09GEgqby3dkHBv2ZDDgWvIRjWwZpSnwiMx7eSSyXqIdHves0AROhvSj
lrMCop6OuvOdU7ouBQYSTia05yn+Mx40aVyHkkFv/+DXiJ5hArjZ5LWQXi/L
e+82gKHoHCL9Bs9pJB5ZgE2B/UXfAHjW6wBBbsK3JLLU6BnRSUr7WkVBRotQ
8C12L0oN5/d4kRsRSVLNudZeo+Dwt2FnzxJ5TZ9VGIDwtSWWRnwqOrmmBW4i
oaOSxhv2YpFFC7o2T9W2RX3Vtc376E4pt6lQE2dpA574BADRVUVNSE3Xr+Wq
EBWiSlCWg9Kr9iYzBtdg9csbvFnbmn7QmMjetwPTYBb0pqhbM53fijq1H/fa
0EIi416tzUGcnS6wDVoDaXbrQCEUR26mcOQkqu4sPpgRdqsRpKh/a2ixBDWU
hKfgFxz0+PauS7As4IdzBQoRiqJIYpHUglAZ+CffvMtcGLCMKaMoSzHoPAYV
OYAjKpC7GVO7CxIjKBiGcURHuc3UUKBtqtyKkKxce5VTJzOmdhYslmhHJRCv
17zXZEI455JvhJ05RIVeqaS2YrflcDSj8Kyz7RIt9QA9vhp0iyp09WwMB7oL
acGh8hTogitC/RIxHyViyapzSQbbA/6MJCdpZbwJiRSewhN6rEs+l3guygIp
JeR1eDC0jsBuqS1UMcVEEfi1kba+mxMPTCBIo27UW7Si7btC68JNOo/WhkYC
CXquBU1tsCRAbrl1MdJ9lE86Bj/QKjetRdb0lkHotqVeTkwthjhFGoRsIIg8
JpFYMdHHFPHdldWNH9lG0zL2UPUctNC0TTqG7OyMolakDtCvxxaTWFV1rVqt
+88ys7WMdaxp+btoCKNYlnqZF2Lzkpg0gaI6iQmOE5N+k7cyvxVagdEaB/Fa
TO1oijtFi9CEKZ6rT2pNQWOYi0WhERwsmix+7rjJnZfzvPOc//9a0KlkCilU
yvdutZizsNJymFoFfYbATOTrv8XNIUNoF2pgclSJtU+sa3s0+7sgJF72n14q
antTR3gCDb/a6Emy/r1MBLkxbbP33rSktDb2QLnAVLkuTiDPw2o8a1w576Pz
A4gz3o0GRm9sV5HtUpb41KCzkHTToG38/HXLpAggyuS8e1pFVLVHngPnMHnq
KVo3zu3Q7cPzSRP4tWQh6NCqBxyg/1p2ThlknJnf4xoP0RZHlnXBsTKvkM9J
CAaAGiEdxprBZbd6ZLzHkc2uwNDZApHlZc7Zov1Jvz8G5f8CU53t1reiYIPP
wPGgVqhcn1cLv+V/E0mDHe+dOTlLdYXaRypXYDLuc3YA40UdUpL7w/5dU9U8
vq+6ukoHhNBajcSTJ6CSHN4UzhSgBE9U3zxpwYAbSe1vtrMYXdP/z1RkIg3P
+KYs5WtzAXi8srppZ1Xj2I3jZ54logI3WnjLrEb+dIH6Pw+MiVtll6y3vlKW
4+lIC3e8DiEjWF4Lqql/6O0Nu+cyHoHbw0hCjIAHHtJUY0aJC7b7LgWTxHAZ
HU1RJEhEHIjLwHjfi3AplvhiqWjXYfogZAYNtsPGZS/E51O8nojRGZEV50hM
ybi1/IIwq/GixwuH4tq8ITZHLAJ1RgHRYxb1i3Ho0q26w+oacj16fzbyAgMB
cD+rI6P4B+sNqLf6h6y2w5A6XxFYwRFM6/MOpjEg8Ml/dTYR0eZ9EdF7XPzR
ZsRW4pZvrHPjA+tbiObkk0QLzCf49uIgW6CuI2lVMsg5nIQbmk30jiavDo0w
RvrviIzFW6ZxgI2kulokH+kEEn+uwyDd1T7E7BJlBLrzXsp88DYjTzWeYMzU
f0Xdmst5Xen1LmYb5Sj/uCbIFsfC9nuBqYRUGpHe6vCdWkWq6MhDPe1wGvJV
7KKKzYNp2yJuin7l98xJaffXDR7KXa2jEzOFHe2zzt1MaF4mfoKBz40jJitx
lBBMNGt6Sk2eYyk18y9+5EXW4/KBdNpRn/xfndS+j/RxXFFZ3984fsZ2L3an
xXB+aAaJSICdX2aEi6Jdku+kuuChP7Bb1jQAy0ag/qYnezAa61w7iFIgb1YG
1ukJqMKdENE+4uNsMNY/cqQPXvhyEsi768DYWJu3UpliJLMK/r4nrwMgvug5
rO9KIP+yu0l4/BWeaqMRB4gDSAO0QcUOalI7GIOcTBcC+M3wwkwknfddIBIN
oEQjMfxJ8miTfw5t8bjZ1VrAmdEkMCm7gtw72ny+k8xE6kQZfCiOAY0j6roq
6FIYxvU+Ka9jpAeYiGtaodPGNH+dS0ZrsR4kxpabY9NiS4bd6pQRU58s98F6
irYpLNhkw2+UPDmhI9PDGiVNiEQwrNMSyxipw6K7VZ6v1o/SH6IQ4CPw43mD
Gxql4WCY4MbrKVxdY3utXRGbvFGKaGy9TlGzUnESyr3yn/uIopPmUfyxTltJ
Mtpes4oBj/LeMF1XeESWTLsAfIuV1M8TqzGPyPNJpwd2y/7Pm9zZC2DrrxAV
gt71WezFYtHE8Yyc9LE91XVWhWEeJzVNv57IGu/6cBUGL23X0a7HWTO9+rMj
YwmYdjeMOzjpmgWNXW4+WMUdg096i+V6Lp1Vx/Kk9XslQ2nyPlxO86rvuY99
P+js2WlkgNbYvmfdw7mkGfkW+R1I/bhPlKJ8HCxREGeBqP1e3oOtpTry5+nu
HsQNzvW50FSX7qSrrDkg966j/oRJwcraZAWd9qBkxaHBib2WxRuL5iZVFUAg
kuXwRWdFGW1I6nNtvMuNJNDrbbmsxX6pXP6m0PKYt2nioZOBDXlKaviApNzp
yUgjDE10u6a2JfE1/g5ffJNn8FZYIkDneV812eoQVzj45IVoOP7ov0SSKQan
hfTv3nAND4Gf5HPsY+ZAiVk2yRDg90PGA1n+gN9vCzvVfd4T2Rhxfl4d2qQp
qBh2eaFHF3t8l9eJcEI7aJ7HV3yVu8YdHskiCTs9Qt3hryOsxw9eLArNDB12
boFfF4AZWMJ1EfhcEZzU86gFUCpdsJsP+9hE6mNZAu6N+gJ4MgwDszEeT2d1
y/BlPM6Qz4UllfWaqkbS/0k96p76BsuN+JlLU/XrbH5bX1HVpPlE2DAI4eTk
Fd4KvwSqk3Cov7KqflPdmOkbbClUIWQ3C8scVV0fzs5jf0cfkL3sSmcpz3Mb
/pvQWni2uz2C+dzqiQABvIUF2mBsy8qYEGw1f4MdSoru8XukuDZ6KmuVSp+h
qO3uiyAnmCDBALI1UbZYYrzLUJPCETLw2NxrlamxMSR0bSEKpN0ofdKSELPR
ZbTJPeLDxf7g/s/R3XCkmvdcJJ8LM/yfAmmAFAQwLyrzk7W513KdFGowDvGr
0excQkwkpckoOb4FRObM3XTWDdEBfnA9aPQzXjS30ZEhf3vJ/QZGBm1LkCk5
bCDXt93/Dk5p8h3xxrajVU95fp/Pm9RxyiVJzA9KRpxXGfzJ360jWwzmgVA3
mVHUEVKUu2+3eD6PX/JM4ugge9nTxbYaHfCBBuV9CGdBq2gjdWG533nOCqaa
73dE1kNOx2lCabAEbO2p6Wzhq0Y7aIPcMtUkGzoCqSpQJ59M88AgoW1o8ate
EfFi2kgctvD99pnn7KmsrNQRUqjAvpIs48OZe+qrS68ruiBXoja6cfTwD1iz
wZ6IrHqSWCQ8Kq+o3VQ/ZjqkyDMBQMNM7V8sm6GACDBzi1f0PKV9nLN9IU+B
Wcbw3yFRyp89AARzLAqs4w5OZqnJR+EBkWMxiwpdcSpEKL+3gXS0+JKVmDsr
OEEHETyrmMDKk5d5VLXBTePi0JpM2G8ub5F7jQ1al5fRYrjNRlfpHJ5kqhO6
m0Re9Ifzs0B+La5dGQ5MrgJjgAskSskTfVHg88koOxed5rNh0pNqGJwijDXz
i+9xZ8sQBggA5Bx5JP1xjgsKsoxe8zMybrF+0xSHKD3i5zFPb2p1dlaDPSzu
lcpX2NBYdkcgUP4yt8pnixO81QImd0Il+CPeXXl4o0VOTEqwxLL1IILJkFUq
WngRcRQBCFf9EkSO5wK3exPK+zqYRikB8b/d+vgNYvxZHdJmGxLnE9lICJ+j
JZeboehHu+wIhhZqbNnZk6wAVpi6fVAzn82sPFbv8dAmM7MTNGYhhAzOgbh6
U7vuOE/DogSWAQxA+Rnqs9UbNN9yihh4gr9XBN4cHqfjjz1/meRrOP5iXEt5
Um5oapSaol/PJTTq+2fperSMsElg4QbRpvd9sut1YabwuJYuZfInh7N7EDmA
BHMbF1mVRj4ZfgwwogqB+RMsHLnGy9LZHifn81s0n53pedhLlZKpQW/K/sNB
sf8kmRc6EpAQS4PsR3wBCMNg8RicRKLkW4FBdujUu02085hjQNTdjkggnqmp
Q13hbIDskCT/K7brxrSFeM95tQZI400DT0qMbHVCgLIkNu12b8W8Ry2N2cu+
yDr5V3rox4ZhsrGbFKPBv93j4AzW8LSoU4HicudaeZzO9mTKktpWY7/LL44y
ej2P2D4w2iL3S/nubKJED3OXhBaFrvJolSZ2+Hb0xuspWVWmt2xTgjmjVAfB
4CcCGxKhPXvyb6jmY2f+3dqTcknPJV3bkGckkbdGA3QqtVjwzGShvMc0f4eg
S5HinuUSu2y3Dcv/UezK/NCmafV7/fIR02b3JLVjSf3ytLRRGQgRcTDkIpK/
LbANuTptMyugN3QyrXHdGgsykm27k3o2DtK6grdbkboKBjZ1iRdobrG0Z52m
PT+c6eEgkoMnlDEEZU9pafl1RR1KTdavlvosLStXaq+Y/f+P4gFOBF4SgElk
dNCf/ZANcdwKAt5z1hUcO1+zPF2aRoc9PLCjc+7hXiN1s9Ud6ZyhD3wCxnrL
c2j6jaw+23VQevZlFwdWEAhA2GW4WqUKcLfDsja5P1rTJhRd7lUtocyQEs8l
JrTHMbVsHryT5pCT3jQAygrXkhu8AuEpTTWqSVWLgGbgUDgshMwTHuA7HVmt
cCGdmkxkRQtJy9E1cnNkVQ0QJOu9N/ZOERaO1SDw/Y0F/trEvEd5qawmQtC0
t635VGdpAHw3eBT4nj+Ghl/pPX0E9AgaoIu5EA8FdnQRCZVjo9m6XrC7hg8r
PytLsskMheZeXnXfyikZcCemm4fh75KrARMlPSCs/Bvm0y45R5yEpmcig9Fr
3EYINCCpraNq5KM0bQSL1hcNzLoFHtD0dWTUdWkSMWGDuVPiUlg0bN6FYXfP
Nut0osZdYTcq9Glv8Sbl8HWfMPJ/Pth5gdcLbXXagtV83INGuHQf4jBqt3dO
UX9P68FWR1ZiBrQcFYf269DOxPiMhySPVo+I+imr/KizkaaNLovHNg2NxzaX
JLjP9CqVHqRebY3l8fiW8rh9mp9zmNHCSgnJ9lQ2jt5h9oTWSCXoz+qwMJCQ
brMnLFhwjK+oU17jjpQ19zzjicyn5Wfap2nH3GQtHBpuvmUDZnTDeE9s2zqd
zpBVNEDyZZsmMLLMntPJtoyRTGInBIJkBY/DYSHmECO0rPJ3GG3iBtRorofJ
G11ACKfXuedH5S8IrSX0c1PM+Xw5tKplhOE3ZjMvh/lG3TAhjpTKr/bTA74W
MTq7S9l/YhhzHE1oNtboBS1XZspaNk9xFNMliaDne9UKJPVFYsHmRTas0LkW
5XDuLqYSD3jODJQaiZc9qnlJo8Cs0jUJR45YYhzWus9aGVrK5h3FNRYp/Ube
i4bSkeNOvZhdI5LitRRFkvRLknc4tVvC7tymtJ18sd0H5BO1fUNzCVkt+rw1
tGg1YeLAfH2RQdCHBXakbKTA1Lu9H5I7+pG9T4H7edx3lQZlZqk+b60kSlbA
uCEd8wNvQwsMIb/mUxSeUgrJxiRRZnevt4mD0lGr5Q4xuK6djg/xcMBhauH+
7FMebLhMRrt1cNzOB9XLGly4vrH90LimrkWPvJi0/ynFs3imjSmNW4ePiCel
j7Rz0cKZu+obtG7B9CwVGcgwdWsojS/MVsdXfrp275MwD1GX2Np+5M7KivJ1
44/6ykYbhqlhRjL01ikCtSmI8urQemeWKM1AIUpG2Rg4vI3eL7/Z+bb3nPlJ
RkgsC4z+1GorhEZih8Mmn9RzX2SD5sFvCzw3CQ79gx2uwZllGsYgiGfI+wYT
s3OxS8TIOoU1gp/M5oxhqOQWQC4rGVYU0RRuM2FeDs3B2RKX/zjUkZq9D3i5
GqNoCP5M8ksw+hha5Z7tJcOudooK9i5pWEwUDltw3OTOwv1W7aiAj2n7f4Pn
jnSKr/LC/l7fQocpaU7O5SJKoE72B5HBCq6ajBMQjozUS5GlcQjcb5e/4f7I
kqF5r/qklJ0urYTCLNCLvpE8ttySslpMslJjT0sw/0AkXSKTnqetTyCfVG18
4Kl2ClLWu0Px2c85MxbZ3jciRaZoqh5otDX0g4k8Ewk3BCS9KbLh77s8l/B0
ZOB7R2RNh8s9Ht7pY5m2GIjmugrYSAKHm70d/jlv5EJg7JC9DI5Or3lxZMND
3rDRAr2uubqeSR/c4enOy+DEdCqnvCf7TFKavbpN3p/AZPewCUcwE1scWbng
xXId6o/G7SPAom9gRlHlUqF+/ZcijjwqKNcDsl64tCk+ZtqIfblORj09XTdq
/1e8TAhQA3gjUl9sJUG46AI7A/X9I7la+rjZda2LDK1Ry+cyeWF5VndSVLJA
FoOM1uUCksTc97Bi2z1r8U6U1RIRdoPnvyKfBSUOgHzZPRceBrtFrVrSjfKq
S89W48W1yoWVxIPBpoGmyIi9ENngdAog6WD8TWjnxlzsdWUnprsvfdoBIjYZ
wHmjgWqVfvXuRkMMwxveZuyHSv+HtQ8EwGNX2/RYfQ8dI+JQhzF1SdMaz0k4
9KRi/W0P9fj85vRx/+WaWo4FIM2xWG2JxfNEMe5xASGQebs00ZjNHZzOzuMt
UdyTBIMy2zRploE8XaB1+zZWICntw3WZt5oNvtms6dls8fCvPmsoVr7pHU+k
bInMe6DzOiHJgWKf1SqpbqHrSwOtkNOKawGJPRB7v3bDTqXhNT7ijdXZZCNq
dAoTeslgy0876PzAphfr9KR1ShQQ8GYvu93r8WnaXONZC1mSS/9omQsFFlcE
VnR0ZmhTubQMJ20T1e2QNq2q9BGvosvi+TSGK6uoi8c1l8QTw8HHZZfYET8T
Zy4Y8HWpwBBmMcdFr/KnDq0cygllqcPj355Zr/qHB2zf7xSiw93VNU2/G1Ja
gUwtNzYulzSskL17zdpzdGi5dTFZyfYih/vI/oaIidkMxgNdGrRa51nUxfK6
N5xueMghNZTHascGm0Krf1Sa11yiIlEw0weKtQjm7JzA1VajoO/Pdb5gTZla
A0+roqlIA4YON4cnXxrZHISzjbHQ5CbVOe9Zk6QuNptBUppktDezVeaDxLDa
bI9ExRI+wcR+dFJSF07IXEiueJPKbUZnPSVIbowTh1wCv0MW3qDNC5ki17lX
g4X8Y3I/sinuWSkMPaHLPrPsau/063P6V32wafQnuIVfODf6hM2fUn+jk8Ki
ruJ4Yh8yq7zuztB81SZ/bEdUPBdNQQwEuOxQwU7BLc4a5dy2XHLMzQbD+Tk/
MBC/pGkzrMtrgVWfP66N+YxEthbdd+Sx9S4BfT69m1D5T6YHao0fEL+Mb/2J
+GZtWQqV3Nf2969G3cpbQ84xhvJNHQGf1d5Dag5Ak7e5ToIuwR80jnIdSey0
zgcSLakbPb2/tKwy5uA/QZllrmITDvhU/9ChJdcNOLVUh9nDvTJgw8cdHk9s
rY7v+EaDqVqXujrApsR44gIrfi5PJ/B+ObBY/iUx0z8yhw4EVwTHopMntOYg
PZUw/1jQSWGkHiPCrBxtR+vI5u/wGnmbsJtRQLTUKF6VZTFMPejBxWLs2Ig3
Apv+JC6RCaPMIynO7drjtndLEfRkik1FNvbFJjkQVjB2HWHEzWDfmRX0thPs
f/bjPDma4u+OojXB5oUHHMQqungBwo4uIbhG4VUmOvJrx4yCUC9J1O0kLbrl
3/H8yDvd6k+jm07gl57zyOQj3jFJIlPhk/AKhI5Jkw4M1E/Dvfua5kTdBT1R
LMhqViUpe52oPKtOT1I6jtXB6aLK8JkwOUlV5UbLIflBcclkIpvistHP3EHc
X/SYAgf+RGTxJpDr6LDzUhgyed+5rw9iwjalKcLqRpWAp7rTSe2AecuDMGTY
2+cjhp9ZNoZD3P5uPcXqBX28dJLVzBmZZgxjcnIJ2rU6tNFia0Kbo04TB6EH
OASESNx5vcaNlrVZ4Bqt54Ro5scsFwGFnbSY1RYeqBnBToXNJmja5rWxcfxh
HJS693GGZVaOPuGIuKS0ojhaIBisfZ/YO3U23U5CaB89Ms6dbKdxvvfjFo33
2oZVLKppDQltCNh07FyE/81qngd5ozFona2a5pOT50EjYo+wId9xQYJAQGVv
8RwWNB5ZDS0fkL+xydguiCxIsFsCO5GIjd9ueWjtBJNoP+ezjZUNON+vBb9B
in6p75gIDnOc9cSF/tC45Qf8WsAcFMAiA+z+Mo83dmihqHUSbJPvD8nzpzg1
yeINrrIw9atIKJcfkAOwiQX5RPUceDZQdwv9BFHB5DP+/tnIxmuw4f8r//87
HGiuSIovBk1J6Eb7PxspcNfameTASNjiV7zCmdeBDleHxTNmyfXi8hSivSDW
ZVOQHBijfF1OYKDCQpb5CY+TEcqVWsaW0Uaq/SZm5mI9bwkt74MbGOMummsk
nN0cWiz9mijPUodxHARFUeg1kYW9W30reB62ABaae/irBAdc37+JheS+7zUl
Uvco+q5HXy+PjGajf22F6/gWRxnvhF2Dyw7omi1YLN8O0l1ms1OVPYPS2qPl
vKbHW8xT5/5Pq8L8/B35/ju5rTuMp1Lvl5yQuqe6eUJc/1FjD5okPhtVqok2
py9N6VKT9OsMTbSVle97pMfw4aP1+GMivpb68r7GcYfgxzHOgug02cV8RRYJ
w3u/D0fZGNl5stcqnznbTv7x7klKRCF9qbv4faDDlnJ3WaI+d+BkNZg6huYl
HUFdHGeV9+JyHUFJ5vM5O31o3r3WoaF5YRZe+/sNW7WCzym5gYV6xdMQyYB+
NoVkGFaOHBJCRh0LgrDKy4RWhjZh1VCtDVNa6brq3GWDDj8K9ajKPNVRfBY6
Caw0l5rhVKQehOhPnk//kDIqwflLZyUlLikkJ7eSgmgUDDjfMI7EIhk9audp
5Uh0eloOaEuUSjxjAnb+baaPeeoftPQxsIyFNkBFtlQgZUzTg1rWmVUamsks
mx0ybtCwJUOdRP7FtGVsIJxuDK1vBsQgfrZnkev3PR5AJI1s5Ajx39iH181B
6BSjqz2g5ZDxR70RjJH273hS0MI1mxIK4pgfZOZRqpP0ekB84v+hkEnrvxbY
MGImft/uM7VukcfIRaKD3DN26LEgm5xIqhRzUg7BFh2rDW4Z9f3M0OJ+/PRT
bfDTqYOBEbabLeLN+1kTObdTams2RHZ0Pc/bysTAutrqeERzkzrECRKgjWw/
NG5taYonjWrQtN2HiE7TyNRE/XrYwHypCXtXNibjRyiWLK9q7C8trXi/fvT+
62TVmPSlFAZl9aHVjjxKi5od4a5lfAgz1gwBFaehtDErhQN901ARfflqMZcp
OUeRkR0T/2xgqGlVaME8P4uXmcdo6SWRrTBYk5Y5aAoc4gpXzqes7THPRNJU
qWZxR303mIOhUM8g4WoPnd79kU469V5SUe7AOM2rjT4p8L7Ak3V+mgaQSKS5
8FsdDJUhn6f5w4dD6y7nnkp1CGsbwmIFlV0KmY3tt3OiBGIXqG6nRQYM8Ji3
zgBI+Q4J7KcSU8bOxO+8MfW6FBq7lLBGqWF/12LIrGZJmbDOW7NCTC76c2AH
ET4aGOXARCPw42t6ZiYlNlZmkxpKhi1Vvd1DqvcZnWLgLLfQc3bQif8ddurp
WjbKtp4zbbiI74dzNEexM7R55+9oUWEXI24VH65RuG0TcZk3bi9vABLeL/HA
66HNiLazAjO9iwW4vBXYMVF7NJGuN6+FbU/5TCY/h6yBSQMsxgoDYXq37wdZ
9ay4tCvI/0bmuvqcsmMQzVdA9DZifSLTBtaHxWOBChLj5AWNFH7QYbLAae99
BsLy7hB0MpZWNvhkIu7DTpw3hn/38PQJ/U31lfGk1jKOnpRYriSePmmfFSYJ
AWqqmJqgX48AXOysqhn2kWWSuE5P++2sbBj9qpN0S8yNqbvZFBRPU9NZSbAV
WmQbWJPF7ZaE6U3IlDcseuxNDk/qs9K63qTHCVl4PLRR2xudak5OflzqDB07
tdaiy95koPj7USJ/5t7e8wZld2t1vP71gY4KtXtOP+i1IAlG49ln4jZTQ7mC
VPkWx27kYbE4aCr+xqaF17/h7VWPqDtSJiE/Xys2zTh5elgzDJuNrdCK8aGs
ZaoxOaosuRLtgorMJqw1EtCP+NWixMKmwCheVpq4u1KvoiWZmo+ZWGVinU+m
2Bd5EAOs+b7IzNEev6L3fSYSccIyzz/YzdUl0/Le9mZqLnyz1ZDldnlyTUd2
eHqVdfHD1KIHDLPmfSKLT9y2+YY7B3yOXsb7PrkWWPRyaEMtnnQKdJU3Wm/U
cMIif/GjOnyAffezbfMJBfS21wnBQsy3wC/n8a5CHtIsqRI9ia3lAyfH+y1R
WTwmc7MzDxsjM5M7IjtB2Q6mk8CzYcz0/jKOxa6oiw9uL08OTt+b/Zy1YMAB
ptr1a6jUTGXZED2D4p/VVrZNOHJrRXnJc+OOOP1BHfuj53UpgNwaaEmcEs73
R915qzKwkJekkYCvwuveF/muenHjPjZ4wmWtJ49e1zRnNg+qMXM3/beGCxWw
EJvRhqSu0vCqtjrd4+6IdBzFFw9bmk79D5e3UC7pkkDHAMnfugtrLO7TjeI0
7i+Hc7RUHRGn3AU/RTGbHyPJIhdsKJuBpOUuCPK+CtrI4fOay90h/UXeE/OM
mx6qPistcZimxOzka/Y9q7HhY3o6QIYp7PmbRZ5ec8wGdwEWZLzX5sA0DnWw
5Lohg+2+LO95Rc77zq/cIJ/FMlBkWJBdABFg/ekFl1iz58XAXoNnwWVTWzKU
XECqju6nVzSlmi0MOkshR0cP/fuw9+zLv3ToOHf17A426r4bZBQELbQKAyrI
NZpf7j3erzpIecurJ3A4qaE419Qx52nfWzcV5WrCdzgAQpW5bTpd7tf2c7MU
Sc/+c4Se4vS4DaKMszs61e7d6qYdR8hzETp27XkLvXvuCqztfau2f5oa3xF2
U/qgiARbqec5BtarjoT9wsEVw66541Wmhjose5Hf3yuRHZbB++JmVvpWQT9J
1FVgav7KhrGH9JdX1MZjmkphT1NF+nT6ZxiZd92AS3QdPVgJnJqPOLB3ULVm
X21967zUkCGkvVCCjRIYJUfPQqTQTLTJoQnS9aqXndIQ/lpky8TSfSuy6flv
hMV2R7WAFLsn08UIoAhKKVFAZ60oJqMpQP7OcpGsftmTRcV0mx80SvB40iQ7
elpdkqb0Mjpll8dQcLYSV0bVE9EEBM57QUZLP06bkr2MxPc2K+nlzFVNCm1y
L7ptkKNJFPthnyzqXrgaEQa/0g/y9chqIV37tM+SSvmBtF3p4OMvB6YFNk8O
ujg9sPdW8TmsPAWXd5MmnmxFLCBqYh7mut1pdD2mQfuy8ZgJt6N+wE7krNrq
obTGV2Jdmc3rSZ9c0pXuxSqlxJcoHjHiQLalJBkgqyOLjVI6nEj4fq9HgT1A
h+icIBB5wAvjuMupk2fPo8blNY+GXwoyWiDHR6APvI68plhk1fH3vIAxyeKQ
sVECPbKham9r72+3VhmQtaPTAwKc2Tu3yN8Bv8atGh8KfD/Fpx1+IZ3RQ3eL
9sjOtkFge3CBshw9uOiPiX5ZwN9yknHx+YR+hXx4Wr9n85RYG2wnrrHBn3h7
av6Sk+t/XFJW0Q/VOrL9H6hWVK2+eRJjcK4fUNHUeBMRo3sqPjQKaszgYlDm
4Cyra5tKfvyXlgf0miQNCJTqescEUbsA3zXOWS+Ubk/2IBlnTZj9jsFQLYjk
bzAknmdO0tRJ8+ljHjPiKfC/NEreoKO3OrXqD0kkFZ+w+eg3eRdTl+g+B7wI
3DuRMdZkHN2l665hNj5gBqVLWTJiaIuHECvdKr8r1n6rk5ZJDg0H+ZaZDeWM
qLEklzx9StdljEmCg5kYfOK7YEMU5htOgJ490M9TmkznQU+RZFuJMxlWw0c/
PmgwVUJd8ft++508D9qbmJJEPu0NzzllzEwsgDR117cGhuOe8mI2rN6itNHf
G5zrpLBCD2qlsMyj6eRQVvA6FvX8oFtX91qr0cxTAcBmcsnwrL/Qzbd04m2G
A9UZkhzQ9Kb8Q9lIFBCHPGz9FGqxX3WG4A1XclpQuMc/B5ke2mPZqvPdsuEF
FoR2RPudUacuv1rxUA8Q7nnXG+aJNB/2Uh1rRdHiN3X0lEC+IAqMUiu/FVqK
kjXYmLaZtSC9b3j6FvrOdmvcRJ+iQon/r3wo5G9CM42EXQjqdg+RdoUD56a/
7a+jPgQW75mS8ho9SPXDHC1H+3CSJAeo1TSM2VVVo4dFmLamxpnMaAEAAzv3
Gl7VTKyJQ97SYBOWsRIoG7PqyQzGKKysB6NcCbKgXDnhAwi43dkgvM0F6nH0
o8oYpMCApk3KmZmYOk05Eo/4TR949JaCCuMXMaA/9da1W50rFANb+D6z6UPj
DV8OrXIa5onT7Igv7/G29F0eya9RWlWjvOG7HYFTBc5nocKo37VilKj5BCpP
90MmLHVi0wPmO3+JbC+SawEpJOenuletRBZfcx/HtVLWmkxxHiimK03SjYmm
mkik6e3EyJCNwPYkiRgS+fAbSP33NBnEgVXmjDFMRNMvO43/7UFNeDcHnTod
nHp1LclxA7bTVwVQj1tiLvx35a5oWqcwzbMluqq3e2cLjIDd5JE4dTC+9nqF
ZhfvFgVLhrXm5YYplKXqyo//0uYTcAPJ1eSATOzYGw6vXtLkaYYuYj2ucJt5
ORRePfnn3Sg8IZdzeHrOxTwG8nzROH3dYK1PkKXZ6YWXYpi0ZZYB6lbkbady
vO582y875vRgj4FQeyIL6/4nsFsmnrHNaudyk9OVmX+tzSGpgWIq5M8SmMXx
CIRP1j6nZXIDO/LAuKPO3EUfIDOEYFkZXMKYXc7i4uQ4DgfgcU53KS8ZMqOo
qamx+rW8GLO27n12kXnb0QNFqg2jCZh3W4EpTd5zQTEbLUBXxJEIZjK3OB/M
6dkeWq0HJVhM91DoJGLH/qw2IloztINmMx9LUowOHI7SQSwfjnSeQw8LQVIa
eLrWaiF7k3pJ/OJSnw9wv3dg44AQeyrRuKaeDjvQCifytEQojPF7wTrXNFJ7
1etTFhnc0dkRv9LGe0vKo1k4uUUObb8mRp79p84qOb6HDTxZIhaSBkxA+UGQ
nbvBOBuldpJGLtajPTq5eIZskrwc0N5P0KaDP6JkE5mgIR6jzkxRan+fdy4E
eUAE8ZunS3g+IZxz6QnpzOWPOCMgQV3OBol291IurwVNxkRrSSrgiLnFvwk0
pZSnYkPLbn2rnsFveXH5O1FWT4J5Sh67NLT00Q+CzrzzKlrZRO5xvRUe5q3f
IqljzqjWv20F6oomk625Sq4bX84gms4pXRf+ILD3Wmj2WUVqucfo9wTWoUO0
dJerLe+D8+I7j9HfcV9gTYpDARGpg/U0vFAlRA9U8iabHMPyKdm4Vc1rd89S
L5HGNL/uVbwc7Ejla3Lqb5K25vaTcU4YV2DQp2EsQjt0h3zpBpNS5q7q0SRI
scTfWq9JyQWzXe9pGH1gX2X1MJ2Rx3EzzMPbV4BaU9+6IPVhHQ41puX8MYZt
/5P5X/3VDaPhnL4UzVZJQAoAmcrMyeWsjGxeAOgnqT9DMRcZM6bx3t/0ZJNM
4URZiscE3xoo1WmouZtMKrSK5dqifW+c7wIwP7Se121ODvZbEKb9ay6UVIvT
MHEZKznRR1hbX1ADV8OwQ/FO2rGFqX2YE3AjbQTV7+AjvNd8z6YQK/6IvhvT
qVaGSSQnliD/bwQZTQ3fGFgzRIJnGahL6/vLDrcp/MVrLg1sSCbPI+DCo9FY
oYJhn3EaqJ8iFIoGya/gSW8PB3qY0APkl/shqqA+wGuLtBIefQZ7gA9We+r6
6cjqC+CuID8QuivTNqqFMey/195QYwST2gJ27q82bqX38XSG+edaYsJW/DTq
1hPT3vOgSMxSz3fCbM8GN6ub3KTfLNHMBRIHM6Lmm86XPmPP773RzTrv95ZL
DPeQnNr0hEeLoIvlVpek5X6/FawFewEuwobhHr8UzKG6i+mtGqxxHbsCy5xw
OkDKDsztSEz9S372Es0c0F5I5T16HqDlCjDLDwXWN/+W9oR1JWfDFx53pMMc
4LudUEuGinAt2LGE9WDtc2GnypUWeYPX5HfsC1NpTcLLXq8ffQAHiGiDItPu
P9yK3zZxVl9FZe1VRZ1NjTH3a83DNcP1aEBeudfZU/slg8g48Wpz08SjYWtu
NDfSs965a+7tbx02qHVdaHOoGdJ7hQ5CscPWcMEc28HUKK96Vle+Q0NOxeKK
k5M2UUoAGN41T3zCs2kGo2Z6bklndO7L0sDcWb/ljHSA6PnBQIVqymZ7n1Tv
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
yEDp/tNcrCFiikBn+Ddls9uN4i0gnPKakhhXbwKRIWZgt9ESSCLx+7RSXUTx
OoBwBxhSPQS5qMYiZ5yZmf4sx/oJUw/RxNiXM8Pm17rZJvchBKCdj1om9aKX
7RyopwFToI3kcbWy8UyTQgVwX1Qw6qa6HI000TErN5k9Itq/ucunFZHczRKJ
9x0wrqwZQkxqPaBouqjP55YirzKlDu1/LBAQG1JbRENEb2LLNtjAuEi1WVGA
ZyRlsHK/dVYtvhqLyAPiO6i0Q02gKhjqBwFMz85MReC2zIZVbNBDLqkU/HyB
+SZp1TlYDcN49liozZ6FPWtxuQLDJZbhKebFyAJCv1Aw8GmdMHasUkngVaiU
edATW+hPHsNyhaQGQONMVZqaYqZ1ppetJmeu2PmGYkJL1Cz9DDH7SsM4cp1k
4gVbb9SzM5TlZg8vVfPzm/dJwJpSeZU6jSzP5WRstr0lIuwMueqy2ey0KJt8
JBjNUq85bk2/Fqlblc7F/Q6o61z8wqsNDfXmJayM5joNGTy0Onzfw6r9Bu9X
7dlnaLV3fyzMvtX+A4bv6ter24y9D/2vm7VlrCzDYXC9RM6SORtDrdel88PG
TXFMa0o7OzQCLlc/UMolW8THY12Xih1kUxuJceZS0uzCLTb0iBG3YHfRGD6g
NtmwH9bD2/eVqq6Vv5P4Q8fduWHGm+TXSu3f7izpYg/BVNmjjJfH5d2YA2+U
UPeuWOJjCgFAABQAiXL+4tQFU9803BVWOFE5j+luT8qBJYg++P0xXoxs9RYC
og4invToWzeaqob4kctcEaehu6xV14c9KntY/7KfPViw0gPJaYNhCwX84cXS
xDBeGwVSWoz4PozpzWmb/LFY6ri7IBk/nSeWiaVZY9xOoasAgyCgYsbmKlqq
SMooCxaNc4uEzsuO7pI1nOdrQNQVI4mAlRy+2Y/fPerEfqI//PRcxz6oIy/M
m5QgxzS7iqG1Wkt0mVm3qPyck3cK7vLdvP7oRqOkYFuw1kc5zYTwpVMp98sE
w3RBkBtfbDh2xRMwaTWxTHSnMrV4kUt0cEJfTPk3jwAclC0TOjZ/TMuERM8G
L/mEptpWTwg3mJ8SpENTDI+E03xJsbmDKcRmysys3pjbAEBwGW8O1yN+1QfI
rPUW/e15bXRSW6htUxolVTovGaR5IvyL+luZV1Q+3nFx1iLrwnXcnL4Xj3Cu
y02f6zwROrRvKLhcZqZxBcrnX85MB5ktt9QTVgLlHZldxzxniGmOysixH3rb
tMr9j1C7Yo/dLAw7aVfPHt2qPXsPrI7de6/qp943tPq1j/apTjp4aHXcmNHV
fv36vzRg9IHTXS6NVUzprD/IvfElj/t+eSqz6T1czHrRSK212Ji/lrl8MJfA
sygbU/JJsuJQIjBci3ya0LUuVADjI/oBFCW4ig7ukngy/Bvw1oLMRIj4N63Q
1G9e1LCZkgATfk5LPF720IlWQOZWHkqb7HXxJU2CDZ3vv3vvHhuNMzffGWaw
d1dl5outL8K41m/4z3g43KOZi/63+Uc87RIOCMtKNcOlKh6UWnOz9jBHwyRY
jWYGHoSJm9zYUitDaiJR2ldPpuN/px8vKxeN5RRStCM6YCuH+hvWAAwnOi0I
6GdZzqjciK0LgEq5HAtJQAIBITmtqVzqDmeazpE8lKXMr3jRBGZ53fCAAt9D
fTgcGd9JlIG1ON2hNNQ4CDtJakILIUXqEvGiMEM2Ae6B7yEAI6/GmoT0Fbvg
VmfMX+SKOXwuhAiuBT4gM0WjF8ev7evEiDdlVu3l/crtLJdjAHNHUIZfVNXW
kq/IFDjyPEoImmz8nyY/SduwlfnTgaBVsaBGbNNZyqzSjHnAbLi4qTCwTQ5G
v+6BxSrzMmq5fMsjvHXuHJd54cm7soVt7cxM6Y8dmZI3HX+mvLW7oMBvHRO4
19o0RF3Aq7BOrE8wk1HL556Qhpwl2ltZAexLTotgHgfrxLw+OJKYnp3qRabs
JK9WWe5r9TLBzMCB79ynOGjwiLl7mpxjkGN44z1dulTHDB9Q/caRvaqV4/pW
T/lU72r7Z/pWT/x47+q+Iwds6t5HPbP4YyqT7KTYxTzZvxh/WQZym4BPQ2SW
FiQ70WrKqtrlrK5AY8nLpScFMsLum+4DbJMTEq9llROWQFCOGP8Z0ccY3gia
Q26FXeJQcs5ZPdS28Yn3OZflpcwGYWq2n1ddIQaGzM48L+nQJyWmqeeg613y
wZKibgBJAJgg75gkI0H0eqjQAlInaiL7CWs7vdCivrKT8hbPe/pHo37UKsWa
yeieNTqewLz0VijSHDOpLjpkwwJjUIQ+u+hT1KbO87mqh3vx3BVbv1SYJLoq
qmhc54A9ZIz4jLDhZ2VGfGQHk0ReKuduVoBnca/zz3HiG7Ia/Um9XyDVaOYE
E9eu7pzd5LPTfwFMHetEbg7HWqsqicNzYtYydaG7J0KWaY3l9hsN5VArNtsN
qCE+j0NzSWYALfWGq7zKJw3LBhvC87D9vt0u6/jj9xl/3LQvq2NJU7xUPSQM
TClax0/T9oI0vMCv6UUnvJhRUFUuZZtNtcZ/HvZrblj42UaTa6gwDQBW4wty
WfDaWioBa2BoZgEkZy2SVftnbqK5/yw08acEroOHd40bqE0Fn+NqPV/aZIpt
chOzc41tFduJzVYWkAZ31dK8JDyAkP3JzFSdf6n4rblGbTi8OFlJ2QpLymRQ
1ljmpLpPtN1d50cpjPTlWakjWg4xPlwr/FpC89Xdeg0U3rvPyKHVfcd7++L4
w6r7jBLe+0yn4bE/Dl5BNtU4qkf14MKo6r6FD6u9YGx2ZPWgxtHVwqgeb3Tr
2Y8nstXz9EhzDilOUkSKubMmSKtN3mmbU/VWBm+8ZqZavKS3zH20P5cMx+MG
UNEgadMgDeNDHVhY3TZ/wp4bqTYe3Bub1GrYnuUcQ+Z6vMFHkXurJJ4eMEn1
/VpA6z8DpuAsEdjuMC9EuV7CT8jTGOQwgDSBxu0dnjgzQQLiEGbtFRF3jWWl
BLxo2iukUIZh9/rfYnMrF83xWeZ4zs1u7dhibluC6wMu47Ylj0bkD+cmvfg1
D1ti7hG7iVp4TCsGLmLmKn8PETpS3McsaWpzHV4FaTcVmwUFXJ7u7s+ZSUgr
M9AJsfBnna2xaZ7ROeTsmjpFmQOibEbQGcjYX7w/ixdAX2O/rPIWA1QHVni5
7AJHPKC/PV8QWiZ4eo4LimFb6ZRAldYhC0Kr9gszO5245yWW3FXAqGYWy4om
TXjX9gb7MgT+pGivPTLwKYseeOYd2wyVbjvTu6JZ5tMnCOnWNt3kPmuOwxhO
GR0I4YTDySQwAlHyZ7buaq/kAfgRyW0qlhT7VvwQC+y25TucyIv8HcOyIu3T
zdbJYTlBJuyqFaLj39Pvrsg0YVSH/HWjTbf7tckh8vd0FKSyFf5c7WjpkQMe
bXUjIUpDbj22+Hn8+PkpknnRZZ18qp38OpHRbOPqte5yfww3Gjb9m1179KkO
cog327t/deLePdKf/fTvwcPHP/82A2Oz4Ia8c+Vq8JBRW7v3HoSp3ekMAyPL
WGfoTvPrGgqGcYAGuswfrJiJmVIIoh092Z3GNKs85ixtKNQ7rYVB4ic4+7+m
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
q66MmptaJT8BJeyae0qU7WmPVl2YiUbPd4+vJhNlOzLRnGwp6zlZjAgLzvjs
wfzQ2LvVIt4zU7jjMvaUxZUBXdt0oNtodylRcUvgCTILybQA3oRv41s6g3MJ
Zc45pafK4vHd8YrUY/Hy1NpMc3Zd9+KLOFU8UE6vLGu2cmnC+NxwJj7RP2gp
gKJHHJhNpmAFWQmE6RUBBFCFVikCnhRh/LuinalDd/NV+kIKcMouxK1R2fIE
Y+QHv57Vk7xXSb2SPSrp6MQfG3+Ct0q9C5aOyiAG8lfZgaKUKGs4bxC8nWEP
EV6XgXQIfsbPFEE66mMRzwuLjSOW3UtTiVM/Udd7fKE8VRPFyxNRvAxiTm3U
0dIMtHdIp3x0tiO67TN10Un9qai9pTWa3dF4aI2Cpux0fduRW1364JNTe+Kx
v5HPlf7Bb6Perq2cFaVS6g4aXJgh352xp8VFFn3upI8XKfGHGPqIiDloHTR1
HTtVkardFS9Pbk5UtfywLFF5YW3nERfmBle9YIgt9YZv82l7RdFt3MAey0K8
Nh6WAtILyXDJXJ1b9fwwoI05prf8m0CpbJM2TMfwxveyxZ1NooP2tA1osA4A
Gvv8oiR5P7ngVf06g+Y74uiGMudHUg2d62HtnsjYst9HRxi8K9B1TE9YiTWh
X0moxzHsQt/JH4PwVEjWtDkfn44qSnz8Mufje1pq3PnLuIQgFfWHJQlBjd+D
G335XZnoA0srnZ/vidra+pxnaJEqtffI88kRd7tK5O4S368POvZ3Cp2E9i+/
dx+7GHdIJFKysP5wlQlQjeQJ7zAGoVovJ4kXIE3p6j8lamlum66pLNvqPMD2
TEsw1Zw7a6p3yaVSb2ZFQgqdiFFfiSgBU/uhui9Qn6FttRgFLmMwGDV85s6h
3ONPqXtNYGXsoZxumiTbvNYGDwkrDBpq0TAkm0zIxOhAwCy7zjDj5y2XKShg
U7ofsZO69SpXQV2PrqIhL8T8l5xdsdGW7gakUxEX7V16yd7anuP3uixvsjzF
/p42mfED2ceZSn15kP+uq66SBmf/Qg9cpaVNeenpldEZR9Q4d1AfNXUsEIg0
mardHY9X+OP8Pn26H5DPNf40705WzCpUVVEzgNpeICe5qmG2zKkXwbeD+f+L
o7M/cqPkmIdjrrTUJqJERXlUVp7ET2HBu5M1HVvTLcGWxuD0TT0nfRjhHeF7
ZYcEv1S+murePRJ4MrPGeR40hM6dtKsMdN9gsJeL0yObA12/gN8ExKd5vNuw
0HsN1H8iVNk1Sotf5/Kjli8IFOZll8Ez2WChB7wDPGYgOOfynaIjOjS227ng
t+i2VaQbdpclM7udv5osL4tHVTXNUXPnQnl2c499nxRt7+SO53dnorktFVE2
PGEG0qyUb+/pXxKdOS8R9Xa2R8l07d5Zs+JPxEqgTX2AsYvkc8YjUY8RkknS
0pWVxVN69Nmj8tw8412R+jJ5nozjzSRrLUUmR0tteZSuObDPWFffFlVX8hAr
C84zF1xdWKjINE5CGqqorN9T27NoR8+SD5NsPapDLKN+g6du6FxQsHYkHo4k
+W0XGzmwON0tpnWImDv48xr3/88FOgfFDBCEAhobeNY/GTzAz6iA/JDtbh4U
4dEPNAan/XdVc/aJVF33W8nq5j0UIny4h1VIOnusrExHtY29kr+Sj6KeW9rU
8F9nbk3dAe70gkWpqLEmddg42tDQUmiqzewur0j7g/chfWAfPjCM7iorm1UA
6Gl0x5Vj/+es7jJpsSBDp6qlKj/akxuI6usPzRmrqe90zr4raqitEmfv08Dm
7mMl805UxKddsjWVSDfACp+uyDS4O1NNyTbh0seJVF3nRHXbvImm4MypniWX
Tgue7cJqDqa27iOlPALHBl4bCXSbgUpAuCynJTz3gXTz3H3JquZCRWXdtPs9
bzojeTNeUbmnLFm12/15yn0gflGoqu+TybmaxjlR2+ylUVP3cYL6U2KWCmjo
MN6pcq3eIdlXc4HVRRe47KjGqLKqOapJV0RNDU1Rx+zjo74jzy+0aLA74Bzp
84hdMlPocI5+6z6elrOUqikciqdMkXNgtqNysi1tc6LW3pIwfKrWP+7bG+pb
DsjPfCpc25wrOvum7uNdMjRHr949MUTQnBMX+0xLzVRWqEonXO5XzV2drnA2
nUg3uuygtZDINPL/kxXpesimu9wd3l2WyEyWJdIFgkpL30kKfbvXZAJXpNrc
hyv/Sn7ne3XI3Pl03s87BXHID2j58He+L+NdTdGZZf7MmbU1NUT16fi0yx93
l8Vj60sfxqX6MD4mn2v9GSEbneLO0E5s6TnRObb2KOPs+5AyctUZ8DKziWNk
8r4+U+Fzo2jgst/LOyx1z4e7SmyuWs7kaXbnTpW7Rqp6yLvYOEdgXwHPYFXW
98hdPPjO8dR75i+X836oO4txzVv6yYM8UJP8e33bAjkHXLeXbp17zPsklTqM
J4qcJypUZTJvVyVnlSZ6eptjn5hJBfiX77iPR9zH25WJWVP1mVmFmpoGaea6
EyQUUjxKNX+n5u9HAQVNcDeltbaMvETNwjKGEndamkUYW6FJHgo35Z1kQ/yN
654//I437pyP3BS3IV6PiHUE5xwkH1Ve/LfWvpNLt9l3zx8SoMLfSrrZmAkH
lN9K1uryI1wJCP4r7katLrHgT+ot/ZR8bj/4lu6B8cjkQ21L6I51IBy2Qz60
joVRb0vG5wUHOzz5Xu/8ykqi+YEGkzoAEvR/7py5Gf5HS76t+HKARNi5izux
UlF5VpgfcMKri1UeV4VTELWABRdGje0LC5WpzFSqgpM+64CT/o96oz4tn1tK
3e4z7mNnOjGr0NTQ4D03c32I0MuKiN6++cW46/1Nid8p7RHH7WJK7psF0EQR
BfPdE7vYg0Ey/pkPD41woQc6/gbVEXemH5zwkcM2EatciZuubivUtcybcuUu
UCvJ2ndLzqPejNhn5XOrvyeYFxHrhZgWYNMNdc6BNs+J6muqXHRrjFq6NHMo
9QKHameSygPxz7zz1AEtgENcoX5bZ/ECOWOlF8XJwJHx1A910ezJaWg7UlIs
HCQdiZ4jzp+2qvMld0k3HHQT7PJjwkOInVBqGfiuO93Hw+5jI8fJvUShRvyv
HkzJ5OzXUMSAfDM9erhSddlF1xUvo/sdLkN9/sJiYcTvq26c7fx7t+QqVcXf
eX7U1nfCdFV1w67y+KwX7ck9dIjL1MuLrZLPOX+Vd5f8hL9Sjs2z/vm7K55u
9pHQpRlcbWPHMX/hXZW867quQm11xhXas3Yny2e9VPJ7Sn/varvj/rjq24x9
TT43lT6T1fYTDx3inZf+f+m/H3wv9GVjEZ8W/P//OTbr/wEX5W1t\
\>"]], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12}, {Null, 
         SparseArray[
         Automatic, {12, 12}, 0, {
          1, {{0, 1, 3, 5, 7, 10, 13, 15, 17, 19, 20, 21, 22}, {{2}, {1}, {
            3}, {2}, {4}, {3}, {5}, {4}, {6}, {11}, {5}, {7}, {10}, {6}, {
            8}, {7}, {9}, {8}, {12}, {6}, {5}, {9}}}, Pattern}]}, {
        VertexStyle -> {
          6 -> RGBColor[0.34398, 0.49112, 0.89936], 1 -> 
           RGBColor[0.97, 0.606, 0.081], 9 -> RGBColor[0.97, 0.606, 0.081], 2 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 8 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 3 -> 
           RGBColor[0.97, 0.606, 0.081], 4 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 11 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 10 -> 
           RGBColor[0.97, 0.606, 0.081], 7 -> RGBColor[0.97, 0.606, 0.081], 
           12 -> RGBColor[0.34398, 0.49112, 0.89936], 5 -> 
           RGBColor[0.97, 0.606, 0.081]}, 
         VertexCoordinates -> {{0, 0.865410983413526}, {
           0, 1.730821966827052}, {0, 2.5962329502405774`}, {
           0, 3.4616439336541034`}, {1.0817637292669073`, 
           4.327054917067629}, {1.2981164751202887`, 3.4616439336541034`}, {
           0.8654109834135258, 2.5962329502405774`}, {0.8654109834135258, 
           1.730821966827052}, {0.8654109834135258, 0.865410983413526}, {
           1.7308219668270517`, 2.5962329502405774`}, {2.1635274585338147`, 
           3.4616439336541034`}, {0.8654109834135258, 0}}}]]}, 
      TagBox[
       GraphicsGroupBox[
        GraphicsComplexBox[{{0., 0.865410983413526}, {0., 
         1.730821966827052}, {0., 2.5962329502405774`}, {0., 
         3.4616439336541034`}, {1.0817637292669073`, 4.327054917067629}, {
         1.2981164751202887`, 3.4616439336541034`}, {0.8654109834135258, 
         2.5962329502405774`}, {0.8654109834135258, 1.730821966827052}, {
         0.8654109834135258, 0.865410983413526}, {1.7308219668270517`, 
         2.5962329502405774`}, {2.1635274585338147`, 3.4616439336541034`}, {
         0.8654109834135258, 0.}}, {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
           ArrowBox[{{1, 2}, {2, 3}, {3, 4}, {4, 5}, {5, 6}, {5, 11}, {6, 
            7}, {6, 10}, {7, 8}, {8, 9}, {9, 12}}, 0.039055643908509824`]}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[1, 0.039055643908509824]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[2, 0.039055643908509824]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[3, 0.039055643908509824]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[4, 0.039055643908509824]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[5, 0.039055643908509824]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[6, 0.039055643908509824]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[7, 0.039055643908509824]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[8, 0.039055643908509824]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[9, 0.039055643908509824]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[10, 0.039055643908509824]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[11, 0.039055643908509824]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[12, 0.039055643908509824]}}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    FormatType->TraditionalForm,
    FrameTicks->None], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 
        19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32}, {Null, 
         SparseArray[
         Automatic, {32, 32}, 0, {
          1, {{0, 20, 40, 60, 80, 100, 120, 140, 160, 180, 200, 220, 240, 252,
             264, 276, 288, 300, 312, 324, 336, 348, 360, 372, 384, 396, 408, 
            420, 432, 444, 456, 468, 480}, CompressedData["
1:eJxTTMoPSmJiYGB4wMjAAEQMvHz8AoJCwiKiYuISklLSMrJy8grDWYyRiZmF
lY2dg5OLm2cksAFOhx27
            "]}, Pattern}]}, {
        VertexStyle -> {
          5 -> RGBColor[0.34398, 0.49112, 0.89936], 15 -> 
           RGBColor[0.97, 0.606, 0.081], 22 -> RGBColor[0.97, 0.606, 0.081], 
           9 -> RGBColor[0.34398, 0.49112, 0.89936], 14 -> 
           RGBColor[0.97, 0.606, 0.081], 19 -> RGBColor[0.97, 0.606, 0.081], 
           6 -> RGBColor[0.34398, 0.49112, 0.89936], 26 -> 
           RGBColor[0.97, 0.606, 0.081], 18 -> RGBColor[0.97, 0.606, 0.081], 
           2 -> RGBColor[0.34398, 0.49112, 0.89936], 12 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 17 -> 
           RGBColor[0.97, 0.606, 0.081], 31 -> RGBColor[0.97, 0.606, 0.081], 
           7 -> RGBColor[0.34398, 0.49112, 0.89936], 10 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 24 -> 
           RGBColor[0.97, 0.606, 0.081], 30 -> RGBColor[0.97, 0.606, 0.081], 
           8 -> RGBColor[0.34398, 0.49112, 0.89936], 11 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 13 -> 
           RGBColor[0.97, 0.606, 0.081], 29 -> RGBColor[0.97, 0.606, 0.081], 
           1 -> RGBColor[0.34398, 0.49112, 0.89936], 3 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 21 -> 
           RGBColor[0.97, 0.606, 0.081], 27 -> RGBColor[0.97, 0.606, 0.081], 
           28 -> RGBColor[0.97, 0.606, 0.081], 25 -> 
           RGBColor[0.97, 0.606, 0.081], 4 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 32 -> 
           RGBColor[0.97, 0.606, 0.081], 16 -> RGBColor[0.97, 0.606, 0.081], 
           20 -> RGBColor[0.97, 0.606, 0.081], 23 -> 
           RGBColor[0.97, 0.606, 0.081]}, VertexCoordinates -> CompressedData["
1:eJxTTMoPSmViYGBQAGIQDQOaemzHj/Lc3Q/jH1FNurjwyHU4P0F23+3amktw
/jdNkzObM07B+dFGNw5e37Afzp+kOOFav8JSdL49mnp7NPPgfKh9cD7UPXA+
1L1Q/gf7u+qnz60Se7kfxl+t/PPyjKJncH6lvPrNtnOP4Xx36dB7JVoP4XxU
/3+wR/X/B3tU/3+wR/X/B3tU/3+wR/U/nG+Ppt4ezTx7NPvgfFT/w90L50P9
A+dD/QvnQ8MDPbzsAVjLpGA=
          "]}]]}, 
      TagBox[GraphicsGroupBox[GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGBQAGIQDQOaemzHj/Lc3Q/jH1FNurjwyHU4P0F23+3amktw
/jdNkzObM07B+dFGNw5e37Afzp+kOOFav8JSdL49mnp7NPPgfKh9cD7UPXA+
1L1Q/gf7u+qnz60Se7kfxl+t/PPyjKJncH6lvPrNtnOP4Xx36dB7JVoP4XxU
/3+wR/X/B3tU/3+wR/X/B3tU/3+wR/U/nG+Ppt4ezTx7NPvgfFT/w90L50P9
A+dD/QvnQ8MDPbzsAVjLpGA=
         "], {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
           ArrowBox[CompressedData["
1:eJwVxUd1HTEAAMCv3rWr3ospBYIJhLohODnMm6/vv3++4efz+fnn/8AACx7w
Agc8CCCCBDIooIIGOhhgggU2OOBCAy184Asd9DDACBPMsMAKG+xwwAkX3PDA
iwyy6EEvcsijgCJKKKOCKmqoo4EmWmijgy422OIHv9hhjwOOOOGMC6644Y4H
nnjhjQ++xBBLHvISRzwJJJJEMimkkkY6GWSSRTY55FJDLX3oSx31NNBIE820
0Eob7XTQSRfd9NDLDLPsYS9zzLPAIksss8Iqa6yzwSZbbLPDLjfc8oe/3HHP
A4888cwLr7zxzgeffPHND7/CCCse8QonvAgiiiSyKKKKJroYYooltjjiSiOt
fOQrnfQyyCiTzLLIKpvscsgpl9zyyKuMsupRr3LKq6CiSiqroqpqqquhplpq
q6OuNtrqR7/aaa+DjjrprIuuuumuh5566a2Pvr+KHR3L
            "], 0.019007365226349326`]}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[1, 0.019007365226349326]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[2, 0.019007365226349326]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[3, 0.019007365226349326]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[4, 0.019007365226349326]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[5, 0.019007365226349326]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[6, 0.019007365226349326]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[7, 0.019007365226349326]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[8, 0.019007365226349326]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[9, 0.019007365226349326]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[10, 0.019007365226349326]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[11, 0.019007365226349326]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[12, 0.019007365226349326]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[13, 0.019007365226349326]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[14, 0.019007365226349326]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[15, 0.019007365226349326]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[16, 0.019007365226349326]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[17, 0.019007365226349326]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[18, 0.019007365226349326]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[19, 0.019007365226349326]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[20, 0.019007365226349326]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[21, 0.019007365226349326]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[22, 0.019007365226349326]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[23, 0.019007365226349326]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[24, 0.019007365226349326]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[25, 0.019007365226349326]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[26, 0.019007365226349326]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[27, 0.019007365226349326]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[28, 0.019007365226349326]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[29, 0.019007365226349326]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[30, 0.019007365226349326]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[31, 0.019007365226349326]}, 
           {RGBColor[0.97, 0.606, 0.081], 
            DiskBox[32, 0.019007365226349326]}}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    FormatType->TraditionalForm,
    FrameTicks->None], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 
        19, 20, 21, 22, 23, 24, 25, 26, 27, 28}, {Null, 
         SparseArray[
         Automatic, {28, 28}, 0, {
          1, {{0, 14, 28, 42, 56, 70, 84, 98, 112, 126, 140, 154, 168, 182, 
            196, 210, 224, 238, 252, 266, 280, 294, 308, 322, 336, 350, 364, 
            378, 392}, CompressedData["
1:eJxTTMoPSmJiYGDoYGRgACIGfgFBIWERUTFxCUkpaZmhyWNkYmZhZWPn4OTi
5uHlG5o8AIi0GGc=
            "]}, Pattern}]}, {
        VertexStyle -> {
          18 -> RGBColor[0.97, 0.606, 0.081], 6 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 23 -> 
           RGBColor[0.97, 0.606, 0.081], 22 -> RGBColor[0.97, 0.606, 0.081], 
           15 -> RGBColor[0.97, 0.606, 0.081], 1 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 27 -> 
           RGBColor[0.97, 0.606, 0.081], 20 -> RGBColor[0.97, 0.606, 0.081], 
           24 -> RGBColor[0.97, 0.606, 0.081], 9 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 13 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 2 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 8 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 25 -> 
           RGBColor[0.97, 0.606, 0.081], 21 -> RGBColor[0.97, 0.606, 0.081], 
           3 -> RGBColor[0.34398, 0.49112, 0.89936], 4 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 11 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 26 -> 
           RGBColor[0.97, 0.606, 0.081], 10 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 19 -> 
           RGBColor[0.97, 0.606, 0.081], 7 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 16 -> 
           RGBColor[0.97, 0.606, 0.081], 17 -> RGBColor[0.97, 0.606, 0.081], 
           28 -> RGBColor[0.97, 0.606, 0.081], 14 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 12 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 5 -> 
           RGBColor[0.34398, 0.49112, 0.89936]}, 
         VertexCoordinates -> CompressedData["
1:eJxdzzEKgDAMheEgHTtlyFBcPEl7Bo8gOHtEPUqP4OioUiP0D4TwwYPwpmWb
10FExmff2+bM7aajt8EKRzjA19670hl5OBT8gxU2OH2W0vdzG6xwhAPs/dyV
zsjD3u//BytscCo3ZNssfA==
          "]}]]}, 
      TagBox[GraphicsGroupBox[GraphicsComplexBox[CompressedData["
1:eJxdzzEKgDAMheEgHTtlyFBcPEl7Bo8gOHtEPUqP4OioUiP0D4TwwYPwpmWb
10FExmff2+bM7aajt8EKRzjA19670hl5OBT8gxU2OH2W0vdzG6xwhAPs/dyV
zsjD3u//BytscCo3ZNssfA==
         "], {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
           ArrowBox[CompressedData["
1:eJwVxcd1HSAQAMDPEpcMS4aLW3IJakBNujBLh3nz5+v77xd8Pp9/P35niWVW
WGXEGutssMkW2+ywyx4kyFCgAkGDDgMmLNhw4MLjiWdeeOXEG+988MkX3/zw
y59IIosiqiDRRBdDTLHEFkdc8WSSWRZZJckmuxxyyiW3PPLKp5LKqqiqSDXV
1VBTLbXVUVc9nXTWRVdNuumuh5566a2PvvqZZLIpphoyzXQzzDTLbHPMNQ8T
ZixYkbBhx4ETF248ePHZZLMttlqyzXY77LTLbnvstc8ll11x1ZFrrrvhpltu
u+Ouez757Iuvnnzz3Q8//fLbH3/9CynkUEINFFroYYQZVtjhhBteTDHHEmuk
2GKPI8644o4n3vj+A2n+GKM=
            "], 0.07509363295880149]}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[1, 0.07509363295880149]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[2, 0.07509363295880149]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[3, 0.07509363295880149]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[4, 0.07509363295880149]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[5, 0.07509363295880149]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[6, 0.07509363295880149]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[7, 0.07509363295880149]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[8, 0.07509363295880149]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[9, 0.07509363295880149]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[10, 0.07509363295880149]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[11, 0.07509363295880149]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[12, 0.07509363295880149]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[13, 0.07509363295880149]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[14, 0.07509363295880149]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[15, 0.07509363295880149]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[16, 0.07509363295880149]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[17, 0.07509363295880149]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[18, 0.07509363295880149]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[19, 0.07509363295880149]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[20, 0.07509363295880149]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[21, 0.07509363295880149]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[22, 0.07509363295880149]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[23, 0.07509363295880149]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[24, 0.07509363295880149]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[25, 0.07509363295880149]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[26, 0.07509363295880149]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[27, 0.07509363295880149]}, 
           {RGBColor[0.97, 0.606, 0.081], 
            DiskBox[28, 0.07509363295880149]}}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    FormatType->TraditionalForm,
    FrameTicks->None], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 
        19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 
        36, 37, 38, 39, 40, 41, 42, 43, 44}, {Null, 
         SparseArray[
         Automatic, {44, 44}, 0, {
          1, {{0, 3, 6, 9, 12, 15, 18, 21, 24, 27, 30, 33, 36, 39, 42, 45, 48,
             51, 54, 57, 60, 63, 66, 69, 72, 75, 78, 81, 84, 87, 90, 93, 96, 
            99, 102, 105, 108, 111, 114, 117, 120, 123, 126, 129, 132}, {{
            2}, {10}, {44}, {1}, {3}, {37}, {2}, {4}, {12}, {3}, {5}, {39}, {
            4}, {6}, {14}, {5}, {7}, {41}, {6}, {8}, {16}, {7}, {9}, {43}, {
            8}, {10}, {18}, {1}, {9}, {11}, {10}, {12}, {20}, {3}, {11}, {
            13}, {12}, {14}, {22}, {5}, {13}, {15}, {14}, {16}, {24}, {7}, {
            15}, {17}, {16}, {18}, {26}, {9}, {17}, {19}, {18}, {20}, {28}, {
            11}, {19}, {21}, {20}, {22}, {30}, {13}, {21}, {23}, {22}, {24}, {
            32}, {15}, {23}, {25}, {24}, {26}, {34}, {17}, {25}, {27}, {26}, {
            28}, {36}, {19}, {27}, {29}, {28}, {30}, {38}, {21}, {29}, {31}, {
            30}, {32}, {40}, {23}, {31}, {33}, {32}, {34}, {42}, {25}, {33}, {
            35}, {34}, {36}, {44}, {27}, {35}, {37}, {2}, {36}, {38}, {29}, {
            37}, {39}, {4}, {38}, {40}, {31}, {39}, {41}, {6}, {40}, {42}, {
            33}, {41}, {43}, {8}, {42}, {44}, {1}, {35}, {43}}}, Pattern}]}, {
        VertexStyle -> {
          5 -> RGBColor[0.97, 0.606, 0.081], 15 -> 
           RGBColor[0.97, 0.606, 0.081], 22 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 9 -> 
           RGBColor[0.97, 0.606, 0.081], 36 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 14 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 19 -> 
           RGBColor[0.97, 0.606, 0.081], 6 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 26 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 18 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 2 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 38 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 12 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 17 -> 
           RGBColor[0.97, 0.606, 0.081], 31 -> RGBColor[0.97, 0.606, 0.081], 
           34 -> RGBColor[0.34398, 0.49112, 0.89936], 7 -> 
           RGBColor[0.97, 0.606, 0.081], 37 -> RGBColor[0.97, 0.606, 0.081], 
           39 -> RGBColor[0.97, 0.606, 0.081], 10 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 24 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 44 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 30 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 8 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 33 -> 
           RGBColor[0.97, 0.606, 0.081], 11 -> RGBColor[0.97, 0.606, 0.081], 
           13 -> RGBColor[0.97, 0.606, 0.081], 29 -> 
           RGBColor[0.97, 0.606, 0.081], 1 -> RGBColor[0.97, 0.606, 0.081], 
           43 -> RGBColor[0.97, 0.606, 0.081], 3 -> 
           RGBColor[0.97, 0.606, 0.081], 21 -> RGBColor[0.97, 0.606, 0.081], 
           27 -> RGBColor[0.97, 0.606, 0.081], 28 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 25 -> 
           RGBColor[0.97, 0.606, 0.081], 4 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 32 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 16 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 42 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 40 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 35 -> 
           RGBColor[0.97, 0.606, 0.081], 41 -> RGBColor[0.97, 0.606, 0.081], 
           20 -> RGBColor[0.34398, 0.49112, 0.89936], 23 -> 
           RGBColor[0.97, 0.606, 0.081]}, VertexCoordinates -> {{
            Sin[Rational[1, 44] Pi], -
            Cos[Rational[1, 44] Pi]}, {-2^Rational[-1, 2], 2^
            Rational[-1, 2]}, {-Sin[Rational[9, 44] Pi], 
            Cos[Rational[9, 44] Pi]}, {
            Cos[Rational[3, 44] Pi], -Sin[Rational[3, 44] Pi]}, {
            Cos[Rational[5, 44] Pi], -Sin[Rational[5, 44] Pi]}, {-
            Cos[Rational[5, 44] Pi], -Sin[Rational[5, 44] Pi]}, {-
            Cos[Rational[3, 44] Pi], -Sin[Rational[3, 44] Pi]}, {
            Sin[Rational[9, 44] Pi], 
            Cos[Rational[9, 44] Pi]}, {
           2^Rational[-1, 2], 2^Rational[-1, 2]}, {-Sin[Rational[1, 44] Pi], -
            Cos[Rational[1, 44] Pi]}, {-Sin[Rational[3, 44] Pi], -
            Cos[Rational[3, 44] Pi]}, {-Sin[Rational[7, 44] Pi], 
            Cos[Rational[7, 44] Pi]}, {-Sin[Rational[5, 44] Pi], 
            Cos[Rational[5, 44] Pi]}, {
            Cos[Rational[7, 44] Pi], -Sin[Rational[7, 44] Pi]}, {
            Cos[Rational[9, 44] Pi], -Sin[Rational[9, 44] Pi]}, {-
            Cos[Rational[1, 44] Pi], -Sin[Rational[1, 44] Pi]}, {-
            Cos[Rational[1, 44] Pi], 
            Sin[Rational[1, 44] Pi]}, {
            Cos[Rational[9, 44] Pi], 
            Sin[Rational[9, 44] Pi]}, {
            Cos[Rational[7, 44] Pi], 
            Sin[Rational[7, 44] Pi]}, {-Sin[Rational[5, 44] Pi], -
            Cos[Rational[5, 44] Pi]}, {-Sin[Rational[7, 44] Pi], -
            Cos[Rational[7, 44] Pi]}, {-Sin[Rational[3, 44] Pi], 
            Cos[Rational[3, 44] Pi]}, {-Sin[Rational[1, 44] Pi], 
            Cos[Rational[1, 44] Pi]}, {
           2^Rational[-1, 2], -2^Rational[-1, 2]}, {
            Sin[Rational[9, 44] Pi], -Cos[Rational[9, 44] Pi]}, {-
            Cos[Rational[3, 44] Pi], 
            Sin[Rational[3, 44] Pi]}, {-Cos[Rational[5, 44] Pi], 
            Sin[Rational[5, 44] Pi]}, {
            Cos[Rational[5, 44] Pi], 
            Sin[Rational[5, 44] Pi]}, {
            Cos[Rational[3, 44] Pi], 
            Sin[Rational[3, 44] Pi]}, {-Sin[Rational[9, 44] Pi], -
            Cos[Rational[9, 44] Pi]}, {-2^Rational[-1, 2], -2^
             Rational[-1, 2]}, {
            Sin[Rational[1, 44] Pi], 
            Cos[Rational[1, 44] Pi]}, {
            Sin[Rational[3, 44] Pi], 
            Cos[Rational[3, 44] Pi]}, {
            Sin[Rational[7, 44] Pi], -Cos[Rational[7, 44] Pi]}, {
            Sin[Rational[5, 44] Pi], -Cos[Rational[5, 44] Pi]}, {-
            Cos[Rational[7, 44] Pi], 
            Sin[Rational[7, 44] Pi]}, {-Cos[Rational[9, 44] Pi], 
            Sin[Rational[9, 44] Pi]}, {
            Cos[Rational[1, 44] Pi], 
            Sin[Rational[1, 44] Pi]}, {
            Cos[Rational[1, 44] Pi], -Sin[Rational[1, 44] Pi]}, {-
            Cos[Rational[9, 44] Pi], -Sin[Rational[9, 44] Pi]}, {-
            Cos[Rational[7, 44] Pi], -Sin[Rational[7, 44] Pi]}, {
            Sin[Rational[5, 44] Pi], 
            Cos[Rational[5, 44] Pi]}, {
            Sin[Rational[7, 44] Pi], 
            Cos[Rational[7, 44] Pi]}, {
            Sin[Rational[3, 44] Pi], -Cos[Rational[3, 44] Pi]}}}]]}, 
      TagBox[GraphicsGroupBox[GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGDQAWIQrTrz8CMP5032ZeVFmxRev99/xro+bd6CZzDa3rQs
JtpD9/F+hkvSqzjmvbQPaRVvPOny3v5XR9HjMNPT+/NvRP+t/f3WXldqAeP8
2Gsw/n4YH6p+P0w91Dx7mHkwe2A01D37Ye6B6YOZE7dE7SPzmnv7c2om2X8S
fYNurz1MHKYOZg/MHzBz0e2BhQOaenTzMPyJ5h5096L7B92/6OGBHl72aOFp
jxbe6PGBHl/o8bkfLb7h+mDmwPwJ8w+avXB/wtTB7IH5A2Yuuj2wcEBTj24e
hj/R3IPu3v0AwOlvuQ==
         "], {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
           ArrowBox[{{1, 2}, {1, 10}, {1, 44}, {2, 3}, {2, 37}, {3, 4}, {3, 
            12}, {4, 5}, {4, 39}, {5, 6}, {5, 14}, {6, 7}, {6, 41}, {7, 8}, {
            7, 16}, {8, 9}, {8, 43}, {9, 10}, {9, 18}, {10, 11}, {11, 12}, {
            11, 20}, {12, 13}, {13, 14}, {13, 22}, {14, 15}, {15, 16}, {15, 
            24}, {16, 17}, {17, 18}, {17, 26}, {18, 19}, {19, 20}, {19, 28}, {
            20, 21}, {21, 22}, {21, 30}, {22, 23}, {23, 24}, {23, 32}, {24, 
            25}, {25, 26}, {25, 34}, {26, 27}, {27, 28}, {27, 36}, {28, 29}, {
            29, 30}, {29, 38}, {30, 31}, {31, 32}, {31, 40}, {32, 33}, {33, 
            34}, {33, 42}, {34, 35}, {35, 36}, {35, 44}, {36, 37}, {37, 38}, {
            38, 39}, {39, 40}, {40, 41}, {41, 42}, {42, 43}, {43, 44}}, 
            0.022570104870316188`]}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[1, 0.022570104870316188]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[2, 0.022570104870316188]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[3, 0.022570104870316188]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[4, 0.022570104870316188]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[5, 0.022570104870316188]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[6, 0.022570104870316188]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[7, 0.022570104870316188]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[8, 0.022570104870316188]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[9, 0.022570104870316188]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[10, 0.022570104870316188]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[11, 0.022570104870316188]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[12, 0.022570104870316188]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[13, 0.022570104870316188]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[14, 0.022570104870316188]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[15, 0.022570104870316188]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[16, 0.022570104870316188]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[17, 0.022570104870316188]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[18, 0.022570104870316188]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[19, 0.022570104870316188]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[20, 0.022570104870316188]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[21, 0.022570104870316188]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[22, 0.022570104870316188]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[23, 0.022570104870316188]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[24, 0.022570104870316188]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[25, 0.022570104870316188]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[26, 0.022570104870316188]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[27, 0.022570104870316188]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[28, 0.022570104870316188]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[29, 0.022570104870316188]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[30, 0.022570104870316188]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[31, 0.022570104870316188]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[32, 0.022570104870316188]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[33, 0.022570104870316188]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[34, 0.022570104870316188]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[35, 0.022570104870316188]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[36, 0.022570104870316188]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[37, 0.022570104870316188]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[38, 0.022570104870316188]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[39, 0.022570104870316188]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[40, 0.022570104870316188]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[41, 0.022570104870316188]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[42, 0.022570104870316188]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[43, 0.022570104870316188]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[44, 0.022570104870316188]}}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    FormatType->TraditionalForm,
    FrameTicks->None], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12}, {Null, 
         SparseArray[
         Automatic, {12, 12}, 0, {
          1, {{0, 1, 4, 7, 10, 12, 16, 17, 18, 19, 20, 21, 22}, {{2}, {1}, {
            3}, {11}, {2}, {4}, {10}, {3}, {5}, {12}, {4}, {6}, {5}, {7}, {
            8}, {9}, {6}, {6}, {6}, {3}, {2}, {4}}}, Pattern}]}, {
        VertexStyle -> {
          6 -> RGBColor[0.34398, 0.49112, 0.89936], 1 -> 
           RGBColor[0.97, 0.606, 0.081], 9 -> RGBColor[0.97, 0.606, 0.081], 2 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 8 -> 
           RGBColor[0.97, 0.606, 0.081], 3 -> RGBColor[0.97, 0.606, 0.081], 4 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 11 -> 
           RGBColor[0.97, 0.606, 0.081], 10 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 7 -> 
           RGBColor[0.97, 0.606, 0.081], 12 -> RGBColor[0.97, 0.606, 0.081], 
           5 -> RGBColor[0.97, 0.606, 0.081]}, 
         VertexCoordinates -> {{0, 0}, {0.38297084310253526`, 
           0.7659416862050707}, {0.7659416862050705, 1.5318833724101413`}, {
           1.9148542155126764`, 2.297825058615212}, {2.297825058615212, 
           1.5318833724101413`}, {2.297825058615212, 0.7659416862050707}, {
           1.531883372410141, 0}, {2.297825058615212, 0}, {
           3.063766744820282, 0}, {1.148912529307606, 0.7659416862050707}, {
           0.7659416862050705, 0}, {3.063766744820282, 
           1.5318833724101413`}}}]]}, 
      TagBox[
       GraphicsGroupBox[
        GraphicsComplexBox[{{0., 0.}, {0.38297084310253526`, 
         0.7659416862050707}, {0.7659416862050705, 1.5318833724101413`}, {
         1.9148542155126764`, 2.297825058615212}, {2.297825058615212, 
         1.5318833724101413`}, {2.297825058615212, 0.7659416862050707}, {
         1.531883372410141, 0.}, {2.297825058615212, 0.}, {3.063766744820282, 
         0.}, {1.148912529307606, 0.7659416862050707}, {0.7659416862050705, 
         0.}, {3.063766744820282, 1.5318833724101413`}}, {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
           ArrowBox[{{1, 2}, {2, 3}, {2, 11}, {3, 4}, {3, 10}, {4, 5}, {4, 
            12}, {5, 6}, {6, 7}, {6, 8}, {6, 9}}, 0.030695071075361624`]}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[1, 0.030695071075361624]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[2, 0.030695071075361624]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[3, 0.030695071075361624]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[4, 0.030695071075361624]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[5, 0.030695071075361624]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[6, 0.030695071075361624]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[7, 0.030695071075361624]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[8, 0.030695071075361624]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[9, 0.030695071075361624]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[10, 0.030695071075361624]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[11, 0.030695071075361624]}, 
           {RGBColor[0.97, 0.606, 0.081], 
            DiskBox[12, 0.030695071075361624]}}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    FormatType->TraditionalForm,
    FrameTicks->None], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 
        19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32}, {Null, 
         SparseArray[
         Automatic, {32, 32}, 0, {
          1, {{0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 
            8, 8, 8, 8, 9, 10, 11, 12, 13, 14, 15, 16}, {{29}, {30}, {31}, {
            32}, {25}, {26}, {27}, {28}, {5}, {6}, {7}, {8}, {1}, {2}, {3}, {
            4}}}, Pattern}]}, {
        VertexStyle -> {
          5 -> RGBColor[0.34398, 0.49112, 0.89936], 15 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 22 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 9 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 14 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 19 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 6 -> 
           RGBColor[0.97, 0.606, 0.081], 26 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 18 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 2 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 12 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 17 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 31 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 7 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 10 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 24 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 30 -> 
           RGBColor[0.97, 0.606, 0.081], 8 -> RGBColor[0.97, 0.606, 0.081], 
           11 -> RGBColor[0.34398, 0.49112, 0.89936], 13 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 29 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 1 -> 
           RGBColor[0.97, 0.606, 0.081], 3 -> RGBColor[0.97, 0.606, 0.081], 
           21 -> RGBColor[0.34398, 0.49112, 0.89936], 27 -> 
           RGBColor[0.97, 0.606, 0.081], 28 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 25 -> 
           RGBColor[0.97, 0.606, 0.081], 4 -> RGBColor[0.97, 0.606, 0.081], 
           32 -> RGBColor[0.34398, 0.49112, 0.89936], 16 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 20 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 23 -> 
           RGBColor[0.34398, 0.49112, 0.89936]}, 
         VertexCoordinates -> {{0, 0}, {0, 
            Rational[-1, 8]}, {0, 
            Rational[-1, 4]}, {0, 
            Rational[-3, 8]}, {0, 
            Rational[-1, 2]}, {0, 
            Rational[-5, 8]}, {0, 
            Rational[-3, 4]}, {0, 
            Rational[-7, 8]}, {0, -1}, {
            Rational[1, 16], -1}, {
            Rational[1, 8], -1}, {
            Rational[3, 16], -1}, {
            Rational[1, 4], -1}, {
            Rational[5, 16], -1}, {
            Rational[3, 8], -1}, {
            Rational[7, 16], -1}, {
            Rational[1, 2], -1}, {
            Rational[9, 16], -1}, {
            Rational[5, 8], -1}, {
            Rational[11, 16], -1}, {
            Rational[3, 4], -1}, {
            Rational[13, 16], -1}, {
            Rational[7, 8], -1}, {
            Rational[15, 16], -1}, {1, 
            Rational[-1, 2]}, {1, 
            Rational[-5, 8]}, {1, 
            Rational[-3, 4]}, {1, 
            Rational[-7, 8]}, {1, 0}, {1, 
            Rational[-1, 8]}, {1, 
            Rational[-1, 4]}, {1, 
            Rational[-3, 8]}}}]]}, 
      TagBox[GraphicsGroupBox[GraphicsComplexBox[CompressedData["
1:eJx9ybEJgDAUhOHgJDqJOziCYO1qbpCUliksXmERJEiQIBlBhaTIX3hwHB/X
jfMwNUqp9u23/zG6toUFdrCHAxzhlL30tQ28whbeYIF32MEH7OETDvAFR/iG
U7aDPRzgCJcUG/wWFv0AzR5NIQ==
         "], {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
           ArrowBox[{{1, 29}, {2, 30}, {3, 31}, {4, 32}, {5, 25}, {6, 26}, {7,
             27}, {8, 28}}, 0.01273]}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[1, 0.01273]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], DiskBox[2, 0.01273]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[3, 0.01273]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[4, 0.01273]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], DiskBox[5, 0.01273]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[6, 0.01273]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], DiskBox[7, 0.01273]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[8, 0.01273]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], DiskBox[9, 0.01273]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], DiskBox[10, 0.01273]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], DiskBox[11, 0.01273]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], DiskBox[12, 0.01273]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], DiskBox[13, 0.01273]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], DiskBox[14, 0.01273]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], DiskBox[15, 0.01273]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], DiskBox[16, 0.01273]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], DiskBox[17, 0.01273]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], DiskBox[18, 0.01273]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], DiskBox[19, 0.01273]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], DiskBox[20, 0.01273]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], DiskBox[21, 0.01273]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], DiskBox[22, 0.01273]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], DiskBox[23, 0.01273]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], DiskBox[24, 0.01273]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[25, 0.01273]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], DiskBox[26, 0.01273]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[27, 0.01273]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], DiskBox[28, 0.01273]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], DiskBox[29, 0.01273]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[30, 0.01273]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], DiskBox[31, 0.01273]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], DiskBox[32, 0.01273]}}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    FormatType->TraditionalForm,
    FrameTicks->None], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[CompressedData["
1:eJwl1Gl4CAQcBvAd7DCbbTaMHcYu21wbZrdjhg60LkeIokLWQTrkKLeiqChS
ju7TrXJV6KRbOaKblEoUqfDb48Pv/X9/n+f9pw6trhodGBAQcIGouUEEU4va
hBBKGOHUIYK6RBJFPaKJIZb6xBFPAxrSiAQa04REkkgmhaak0ozmpJFOBplk
0YJscsilJa1oTRvakkc+7WhPBwroSCFFFFNCKWWU04nOdKErFXSjku70oGdN
T1zIRVxML3rTh0uo4lIu43Ku4Er60o/+DOAqBjKIwVzNEIZyDdcyjOFcx/Xc
wAhGMoobGU01N3Ezt3ArYxjLbYzjdu7gTu5iPHczgYlMYjL3cC9TmMo0pjOD
mcxiNvdxP3OYywM8yDzm8xAP8wgLWMijPMYiFvM4S3iCJ1nKMpazgqd4mmd4
lud4nhd4kZd4mVd4lZWsYjVrWMs61rOB13idN9jIJjazha28yVu8zTa2s4N3
eJf3eJ8P+JCd7OIjPuYTPuUzPucLdvMlX7GHvexjP19zgIN8w7d8x/f8wI/8
xCEO8zNH+IVfOcpv/M4fHONPjnOCv/ibk5ziH07zL//xP2c4S834AwkimFrU
JoRQwginDhHUJZIo6hFNDLHUJ454GtCQRiTQmCYkkkQyKTQllWY0J410Msgk
ixZkk0MuLWlFa9rQljzyaUd7OlBARwopopgSSimjnE50pgtdqaAblXSnBz0D
z//Jc/xzjKE=
        "], {Null, 
         SparseArray[Automatic, {330, 330}, 0, {1, {CompressedData["
1:eJwl0ysUmHQUwOH/dDp8M1/D59jcFJ/D5+Zzm8+dY/GYjDsmkxKJRCKRSCQS
iUQikUgkEol+Hu853w23/NK99uc/v/99IYTw63/L3KGgZyNx/42aiZP8kRD+
omMlfjSEB1SMHGQXQ3hIy0L0WAj3KBnYSR8P4Q8aZsIlfQp6NpJIn5qJk/wJ
fTpW4if1qRg5yJ7Sp2UhelqfkoGd9Bl9GmbCs/oU9Gwkz+lTM3GSx/p0rMSX
9akYOcie16dlIXpBn5KBnfRFfRpmwkv6FPRsJC/rUzNxkl/Rp2MlTvSpGDnI
XtGnZSF6VZ+SgZ30NX0aZsLr+hT0bCRv6FMzcZK/qU/HSnxVn4qRgyzVp2Uh
uqZPycBOel2fhpnwlj4FPRvJDX1qJk7ym/p0rMRv61MxcpC9o0/LQpTpUzKw
k76rT8NMeE+fgp6N5H19aiZO8g/06ViJP9SnYuQg+0ifloXolj4lAztprk/D
TPhYn4KejeQTfWomTvJP9elYiT/Tp2LkIPtcn5aF6At9SgZ20tv6NMy3/3/+
OxT0bCRf6lMzcZJ/pU/HSvy1PhUjB9k3+rQsRN/qUzKwk36nT8NMuKtPQc9G
ck+fmomT/L4+HSvx9/pUjBxkP+jTshD9qE/JwE76kz4NM+FnfQp6NpJf9KmZ
OMkfhPAvl47QEw==
            "], CompressedData["
1:eJzNnXe4ZldVxvfFQoaWDCWZlJncyRB6CSRDSSbJzUAyCSgoKhmVxBAEpAQk
oxARJaASFQUVEFApigUhClJsCd1K6PYC3FDtBSyEpms9s9/nvN973zNnf/ec
MOeP9cy/9zd773ev9a61z7fz0ic/7Ek3KaWccn4pK/Hvr0b8WsSrI3494jUR
r424OuI3In4z4nURr4/4rYg3RLwx4k0Rb4747YjfifjdiN+L+P2IayKujXhL
xFsj3hbx9oh3RLwz4l0RfxDxhxF/FPHHEX8S8acR7464LuI9Ee+NeF/E+yM+
EPHBiA9F/FnEn0f8RcRfRvxVxF9H/E3E30b8XcTfR3x4ZnwfifhoxHrE9REf
i/h4xCciPhnxqYhPR/xDxD9G/FPEP0f8S8S/RvxbxL9H/EfEf0Z85kbgG7MG
Y/g+G/FfEf8d8T8R/xvxuSX4Wtellc/tp1Y+t1aO7wbD17dOfXy6z/r4dL2U
78OH4NP1Ur7PGL7PER+vGfPx3mM+XjPmU43gNWM+1QNoAfPxmjGfnjWcM+bD
3ryhrl3yYS++ntYNfNANrBv4WCdYA7Fu4OPzpnrHWvcRWjfw8XlTLWEdAR+f
veR7dV275HtdXbvkg3ZAN66pfDhzrIOsge+ufDhzrCeq56rlH618OHOsJ6qV
qpOfLRu1JfnyzF1dOh15Q+nOHOvitaU7c6wnqvHXle7MsZ6oVrq7ar10Z471
RLXS3QNOO52+HM777/MRX4j4YsSXIr4c8X8RmYisRNwk4qsivjriayK+NuKm
EUdEbIm4WcTNI24RccuIW63M6/4bw3dkxFERWyNuHXGbiNsuwfeVuP9a+dxa
Ob7bGb7Def/18el6Kd+tDN9tiW8u9x/z8Zoxn561Wxq+2xDfnO6/z9O6gY/P
m2rJLQzfrYVvTvffFyofzhzriWql6uSRRluSb0733xdLd+ZYT1Qr3T3gtNPp
y9j7YUyNM+Z+ODrimIhtEcdGHBdx/I1wP4ypccbcD47vhBvhfhhT44y5H5Tv
eOKb8n4YU+OMuR+Y7zjim/p+GFPjjLkfwHes8E19P4ypccbcD0cbbTnhRrgf
1svma5wx94PTTqcvffrZmje36qfzg1r10+XSTj+3L6GfrXlzq346P6hVP10u
7fQTfC362Zo3t+qn84Na9dPl0k4/ty+hn615c6t+Oj+oVT9dLu30c/sS+tma
N7fqp/ODWvXT5dJOP7cvoZ+tefN6adNP5we16qfLpZ1+On3py8P69EXr8D59
0XxM9eWG0q8vmo+pvtzO6MsJPfrSl4f16YvW4X36ovmY6ovysb5oPqb6onzH
EZ/qS18e1qcvWof36YvmY6ov4HP6ovmY6gvzHSt8qi99eVifvmgd3qcvmo+p
vtxQ+vVF8zHVF/BpbeT0pS8P69MXrcPXi9cXzcdcL6tPXzQfcz6gq/1w/vhO
5/PHtQ+fP77T+fxpD4jvdD5/2u+Bl87nj+90Pn/qlcGH4PN3/Mri+eM7nc8f
1z58/vhO5/OnPSC+0/n8ab+H+XD++E7n86demfIdK3yvLot3Op8/rn34/PGd
zudPe0B8p/P5034P+Pj88Z3O50+9MubT2h3nj+90Pn9c+/D54ztdPej10p0/
vtPVi3C9Vj5/fKerF+F8audNJN9r6v5Erpn78+3loLZgf8K3xb2A/ck+Lfco
cS9gf3K9rv1I7mXl/sS9gP3J9bp6uewDYn8eJ3yvrfsTueY1pbsXsD/h2+Je
wP5kn5Z7lLgXsD+5Xtd+JPN9ofKhZmC/Rb149eGxP5Xv6ro/kWteW7p7gX2j
60p3L3A9pD2E9dLdC1wPqZfkeuW5P3EvcD2kXpLrMzhvKfnyXn9jXb/Mo99S
1w/eCnyH99T1Q83APjt70NfX9UPNwH6L9pO11/qlun6oGdhvUS9efeqjVzZ6
E8mX9/qbSlfnvbV0ORn7Yu8tXU7G9Z72SD5WupyM6z31ytwswJdLl5Nxvade
meujOO8s+TJneXPp6qC3lS5nYd/ofaXLWbge0h7Cx0uXs3A9pF6S65WnbiJn
4XpIvSTXZ3DekquPDmf/fUf8PSdGrEbsjDgpYlfE7SNOjrhDxB0j7hRx54i7
RNw14m4Rd4+4R8Q9I06JuFfEvW8EvjH99zF8p0acFrE74j4R94243xJ8X4n+
eyufWyvHd3/Ddzj77318ul7Kd2/Ddz/im0v/nfl4zZhPz9q9DN99iW9O/fcd
tG7g4/OmWnKK4buP8M2p/35i5cOZYz1RrVSdPNVoS/LNqf++SmeO9US10t0D
TjudvhzO/vuY++H0iDMi9kScGXFWxNlL8H0l+u9j7gfHt2b4Dmf/fcz9oHxn
E99c+u9j7gfmO4v45tR/H3M/gO9M4ZtT/33M/XC60Zbkm1P/fcz94LTT6cvh
7L+36qfLpZ1+nmP4Dmf/vVU/XS7t9BN8c+m/t+qny6WdfibfnPrvrfrpcmmn
n8k3p/57q366XNrpZ/LNqf/eqp8ul3b66fTlcPbf+/RF8zHVl/sbfVnr0ZfD
2X/v0xfNx1RflO8s4ptT/71PXzQfU31hvjOFb0799z590XxM9QV8Whs5fTmc
/fc+fdF8zPmArvbD+ZtL/53PH9/pfP7UK4MPwefv7JXF8zeX/jufP77T+fyp
V6Z8ZwrfnPrvfP74Tufzp14Z82ntjvM3l/47nz++09WLcD618yaSb0799x0r
3b2A/cn1unq57ANif54lfHPqv5+40t0L2J9cr6uXq3zqvSTfnPrvqyvdvcD1
kHpJrs/gvKXkm1P/fWddP9QM7LeoF68+9ekrG72J5JtT//2klS4n43pPvTLX
R3HeWfLNqf++a6XLWbgeUi/J9Rmct+Tqo7H9hzFv+Mb0H/ZGPCDigRHnRpwX
sW8Jvtb+w5g3fGP6D47vfMM3tv8w5g3fmP6D8u0jvin7D2Pe8I3pPzAf9mby
Td1/GPOGb0z/AXx89pJv6v7DmDd8Y/oPe1c2akvyTd1/GPOGb0z/wWmn05ex
/Ycxb/jG9B+cfl5g+Mb2H8a84RvTf3D6Cb4p+w9j3vCN6T84/Uy+qfsPY97w
jek/OP1Mvqn7D2Pe8I3pPzj9TL6p+w9j3vCN6T84/XT6Mrb/MOYN35j+g+rL
+SteX8b2H8a84RvTf1B9Ad/U/Ycxb/jG9B9UX8A3df9hzBu+Mf0H1RfwTd1/
GPOGb0z/wdV+OH9T9h/GvOEb03/g84fcE+dvyv7DmDd8Y/oPfP6Yb+r+w5g3
fGP6D3z+mG/q/sOYN3xj+g/Om0i+qfsPY97wjek/YH9y7Zd8U/cfxrzhG9N/
wP5Uvqn7D2Pe8I3pPzhvKfmm7j+MecM3pv+Q66feRPJN3X8Y84ZvTP/BeWfJ
N3X/YcwbvjH9B+ctufqoz19qnVtt9Zfc96Ba/SU3y+r8pQcZvj5/qXVutdVf
ct+DavWX3Cyr85fA1+Ivtc6ttvpL7ntQrf6Sm2V1/lLytfpLrXOrrf6S+x5U
q7/kZlmdv5R8rf5S69xqq7/kvgfV6i+5WVbnLyVfq7+0XtrmVlv9Jfc9qFZ/
yc2yOn/J6Uufv9Q6t9rqL7nvQbX6S26W1flLTl/6/KXWudVWf8l9D6rVX3Kz
rM5fcvrS5y+1zq22+kvue1Ct/pKbZXX+ktOXPn+pdW611V9y34Nq9ZfcLKvz
l5y+9PlLffqic6ut/pL7HlSrv+RmWZ2/hPPX4i+1zq22+kvue1Ct/pKbZXX+
Es5fi7/UOrfa6i+570G1+ktultX5Szh/Lf5S69xqq7/kvgfV6i+5WVbnL+H8
tfhLfP4ONbfa6i+570G1+ktultX5S8nX6i+1zq22+kvue1Ct/pKbZXX+UvK1
+kutc6ut/pL7HlSrv+RmWZ2/lHyt/tJ6aZtbbfWX3PegWv0lN8vq/KXka/WX
ri9tc6ut/pL7HlSrv+RmWZ2/lHyt/lLr3Gqrv+S+B9XqL7lZVucvJV+rv9Q6
t9rqL7nvQbX6S26W1flLrj7q67P31Uf6jq+vPtJ+u9ZH+a2rvvpI++1aH52z
srE+umDF10d9ffa++kjf8fXVR9pv1/pI+bg+0n671kfKh9ksVx/19dn76iN9
x9dXH2m/Xesj8Ln6SPvtWh8xH8+eufqor8/eVx/pO76++kj77VofbV/pr4+0
3671Efh0ts7VR3199vXi6yN9x9dXH2m/3X3rv68+0n67+06Bmx109VFfn72v
PtJ3fH31kfbbtT7S88f1kfbbtT7S84fZJVcf9fXZ++ojfcfXVx9pv13rIz1/
XB9pv13rIz1/zKf1UV+fva8+0nd8ffWR9tu1PtLzx/WR9tu1PtLzx3xaH/X1
2fn8cX2k7/j66iPtt7vfouirj7Tf7r6j4WZbXX3U12fvq4/0HV9ffaT9dq2P
sD9dfaT9dq2PeH/y7KCrj/r67H31kb7j66uPtN+u9RH2p6uPtN+u9RHvT+XT
+qivz75efH2k7/j66iPtt7vfEumrj7Tf7r6D4maTXX3U12e/vvj6SN/x9dVH
2m/X+ij5+uoj7bdrfYT109lWVx/19dn76iN9x9dXH2m/3f1WSl99pP12950X
N3vt6qO+PntffaTv+PrqI+23u98S6auPtN/uvoPiZpORv7Cny/kLzwZy/sKe
Lucv+hsA7Oly/qLf+8e3gDl/YU+X8xf9VgHeMXL+gtkC5C/s6XL+wrOBnL+w
p8v5i/4GAHu6nL/o9/6ZD/kLe7qcv+i3CpSPZ6+Rv7Cny/kLzwZy/sKeLucv
+hsA7Oly/qLf+wcf5y/s6XL+ot8qYD6dLUf+wp4u5y88G7heuvyFPV39Bg/n
L+zp6qy8+60bzl/Y09VZefedHjc7j/yFPV3OX3g2kPMX9nQ5f9HfAGBPl/MX
/d4/70/kL+zpcv6i3yrQ/cmzychf2NPl/IVnAzl/YU+X8xf9DQD2dDl/0e/9
8/5E/sKeLucv+q0C3Z/Kd3VZ9HQ5f+HZwPXS5S/s6eo3lDh/YU9X3zq43yri
/IU9XX3r4L6z5N4+IH9hT5fzF54NvL50+Qt7upy/6G8AsKfL+Yt+7x98nL+w
p8v5i36rgNdPZ+eRv7Cny/kLzwZy/sKern4jivMX9nT1LYf7LSbOX9jT1bcc
7jtS7m0H8hf2dDl/4dlAzl/Y09VvKHH+wp6uvnVwv1XE+Qt7uvrWwX1nyb19
SL6s/VI/0QtL/UTdB/3Ed11Q90E/+Tsu/BsqqPugnzxvrb+Xwr9lkPqJug/6
yfPW+q0X/g4D9JNnI5Mva79rStcLe3fp6j7oJ77rgroP+snfceHfUEHdB/3k
eWv9vRTmO3Glq/ugnzxvrd96UT5925F8WftdW7pe2HWlq/v4Xcp66eo+nifQ
b2ClfqLu43kCfavifmtqdaWr+3ieQN+quO9kubcryZe131tK1wt7T+nqPugn
vuuCug/6yd9x4d9QQd0H/eR5a/29FObbudLVfdBPnrfWb73o+unbh+R7U9VP
9MLeW7q6j9/dfKx0dR/PS+g3vr5curqP5yX0LY77La2TVrq6j+cl9C2O+w6Y
e5uTfG+u+ole2PtKV/fxu5SPl67u43kC/QZW6ifqPp4n0Lcq7remdq10dR/P
E+hbFfedLPd2JfnSl3h73Z/Z53t/3Z+Y/cfc+Cfq/kTPlr8zxN+oybs99yd6
tvweQH/PR38L5vZ1f6Jny+8B9FtE+h2b3J86W5586Uu8o3RzEh8onSfI724+
WTpPkOcl9BtfebfDE+R5CX2L435L6+SVzhPkeQl9i+O+A+be5iRf+hLvLN0c
wQdL55nxu5RPlc4z43kC/QZW3u3wzHieQN+quN+ausNK55nxPIG+VXHfyXJv
V5IvPZd3la4P/aHSeS78ruHTpfNcuB+t31DKvAWeC/ej9a2D+62izFvguXA/
Wt86uO8subcPybeS/+f5d6Wup/alPkTcLOLmEbeIuGXErSJuHXGbiNtG3C7i
2IjjIo6PODFiNeL2EfeIuGfEKRH3irh3xH0i7htxv4j7R5wZcVbE2REPiHhg
xPkRD4v4pohvjviWiG+N+LaIb4/4johLIr4z4kkRT4747ojvifjeiO+L+KGI
H4740YifKZ7vpobvSOE7mvhOqHw7I042fKcK3+nEt1b5zo24QPgeTnyPqHyP
jHg08T2l8j014umV70cifiziBT18Rxi+o4TvGOLbXvlOiriD4TtN+M4gvnMq
33kRDxK+C4nvosp3acRjiO/yyve0iO+vfM+J+PGIF/bwbTF8W4VvG/HtqHy7
Iu5o+HYL3x7i21v59kU8WPj2E9/Fle9REY8lvgOV74qIZ1S+qyKeG/Eiw5dn
T/dnnj3en3n2sD/z7OX+XC0H9+edhC/PHu/PPHvYn3n21srBs5f78+uIL88e
9meevdyfl5SD+/O7Kl+evdyfefZyf/5AOXj2cn/+RMTP9vDp/kw+3p/Jh/2Z
fNsrX+7POxs+3p/Jh/2ZfOdUvtyfXy982J/Jd1Hly/35OOK7vPLl/vzBypf7
8ycjXtzDp/sz+Xh/Jh/2Z/LtqHy5P+9i+Hh/Jh/2Z/LtrXy5Px8ifNifyXdx
5cv9+XjiO1D5cn8+s/Ll/nxexEsM303N+h0p63c0rd8Jdf121vW7q/CdKut3
Oq3fWl2/c+v6PZT4Hk7r94i6fo+s6/eEyveUun5Pret3ZTm4N3P9nh/x0h4+
Xb8jZf2OpvU7oa7fzrp+dzN8vH6n0/qt1fU7t67fNwgf1u8Rdf0eWdfvicR3
oPLl+j2r8uX6/VTEzxm+IwzfUcJ3DPFtr3wnVb67C99pwncG8Z1T+c6rfN9I
fBcS30WV79LKd1nlu7zyPa3yPbuuXfL9dMTPCx9yF9ZP5C7QT+QuuYbIXXIN
M2/Ju531E7kL9BO5S64hcpdcw8xb8m6HfiJ3yTVE7pJrmHlL3u2pn8hdcg0z
b8m7PfUz85a821M/f6GHj88f+HD+wHcM8W2vfHm3s36CD+cPfGcQ3zmVL+92
6Cf4LiS+iypf3u2PI77LK1/e7T9Y+fJuT/18WQ8f70/wYX+Cbxvx7ah8ebez
foIP+xN8e4hvb+XLux36Cb79xHdx5cu7/fHEd6Dy5d3+zMqXd3vq58sNn+on
ck9eP+gncs9cv5Pr+rF+Ivfk9YN+IvfM9bugrh/0E7kn1g/6+ei6fk8oXe6Z
6/f0un5XloN7M9cv9fMVPXy6fqyf4MP6QT9PruvH+gk+Xj/oJ/j2Vr5cP+gn
+LB+0M9H1/V7IvEdqHy5fs+qfLl+qZ+vNHyqn8itmQ/6idx6R1275GP9RG7N
fNBP5NZ769olH/QTuTX4oJ+PqXyXlS63PlDXLvmeXdcu+VI/f1H4oJ28P6Gd
2J/QzmSEdiZj6mZqC+9PaCf2J7QzGaGdyZi6mdqC/QntTEZoZzKmbqa25P6E
diZj6mZqy5XloG6mtuT+/KUePl4/8GH9wLeN+HZUvtQW3p/gw/qBbw/x7a18
qS3Yn+DbT3wXV77UlicS34HKl9ryrMqX2pL781WGT/cn7gbmw/7E3bCjrl3y
8f7E3cB82J+4G/bWtUs+7E/cDeDD/nxc5busdHfDgbp2yffsunbJl/vzl4UP
e5P5sDfBh725rXR7M/nuWteO+bA3wYe9uad0ezP5HlrXDnzYm/tLtzeT7wl1
7S4r3d5Mvivr2iXf8+vaJd+vEB97L8hf2HtJTvZekhOeS+aemr+w95Kc7L0k
JzyXzD05f2HvJTnhuWTuyfkLPJfMPTl/Sc8lfYms/Th/YT7oC/MdJXzHEN9J
ZWP+wnynCd8ZxHdeWcxfmO9C4ru0LOYv4HtaWcxfki99iaz9OH9hPuxP5tsq
fNuIb1fZmL8w327h20N8+8pi/sJ8+4nvUWUxfwHfFWUxf0m+9CWy9uP8hb0z
XT+cQfbOsH6o+zR/Ye+M1w9nEJ5Zrh/nL+ydYf1Q93H+As8s14/zlxfU9cva
j/MX5tP1w/3AfFg/1H2avzAfrx/uB/DtK4v5C/Nh/VD3cf4CvivKYv7ygrp+
Wfu90vCxfrI3yHzQT3iCu8rG/IW9QeaDfsIT3FcW8xf2BsGHuo/zF3iCV5TF
/OWFlS9rP85f2Dvj/cn5C3tnybhauv2p+Qt7Z9ifnL9AO5OR8xf2zpLxktLt
T85foJ3JyPlL6mZqS+5Pzl+Yj9eP8xfm20Z8u8rG/IX5sH6cv4BvX1nMX5hv
P/E9qizmL+C7oizmL8mX2pL7k/MX9gaVj/cn5y+rpdufmr+wN8h82J+4G/aV
xfyFvUHwYX9y/oK74YqymL+8uPLl/uT8hb0z5uP8hb2zbaXbm8mn+Qt7Z+Dj
/AV7M/k4f2HvbH/p9mbycf6CvZl8V5Yuf3lpXbvk4/yFcxecP85dkpFzl2RE
zpLaouePc5dk5NwlGZGzpLbw+ePcJRmRs6S28PlDzpLawucvc5a81/Nu4PPH
fFg/5tsqfNuI745l4/ljvt3Ct4f4HlwWzx/z7Se+x5bF8we+Z5TF85d8ea+/
siyeP87NlA/7k3Mz8OFe0PPHuRnzYX8iJ3twWTx/nJuBD/cCnz/kZM8oi+fv
ZZUv7wY+f5y7MB+fP85dtpVubyafnj/OXcDH5w97M/n4/HHusr90ezP5+Pxh
bybflaU7f6+oa5d8fP747IGPz97Wsnj2kg9n7i6Gj8/e7rJ49pIPZ+4hwsdn
L/lw5h4vfDhzzxS+PHOvqmsHPu1NJ6f2ppOT+9Ho2a6WjfWR9qaTk/vRa6W/
PuJ+NHq2l5SN9RH60OnHs6fr6iPlO8LwHSV86Nkmn9ZHynea8KFn6+oj5kPP
Nvm0PgLfc8qip+vqI+XbYvi2Ch96tsmn9ZHy7RY+9GxdfcR86Nkmn9ZH4Luq
LHq6rj7S2QJdP5xBnifA+rn6SGcLeP3WaP1cfcTzBFg/Vx9hjiDXjz1dVx8p
n64f7j/mw/q5+kj5eP3WaP1cfcR8WD9XH4HvqrLo6br6SGcnlA/6yfMS4HP1
kc5OMB88pb76iOclwOfqI8xJXFUWPV1XH+lsAe9PviN4ngA9d1cf6WwB9id7
un31Ec8ToOfu6iNoZzKyp+vqI+Xj9eP8jPnQc3f1kfJh/djT7auPmA89d1cf
ge+qsujpuvpIZyeUj/cne7qrxddHOjvBfNifffURz0uAz9VHuBuuKouerquP
dLaA+Th/4XkC9NxdfaSzBeBbI76++ojnCdBzd/UR9mbysafr6iPtTeP8aX3E
uQt6tq4+0t50MnLugp6tq484d0HP1tVHyFlSW/j8ufpI+bB+Wh8xH3q2rj5S
vt3Ch56tq4+YDz1bVx+B77ll8fy5+kh778qH/cm5GfhcfaS9d+bD/uyrjzg3
A5+rj5CTPbcsnj9XH2lvmvn4/HHugp6tq4+0Nw2+NeLrq484d0HP1tVH2JvJ
x+fP1Ufa2wSf1kd89tDzc/WR9jZ3l8Wzh56fq4/47KHn5+ojnLnnCZ+rj7Q2
SkatjZKR6yHUDE5ftDZKRq6HUDM4feF6CDWD0xfUQZmv8J3u9EX5thi+rcKH
msHpi/LtFj7UDE5fmA81g9MX8L2oLN7pTl+09lM+7E+u98Dn9EVrP+bDnden
L1zvgc/pC+q8F5XFO93pi9ZGzMfnj+sh1AxOX7Q2Ah/f6X36wvUQaganL9ib
ycd3utMXza3Bp/qyKnx9+qK59e6yePaQczp9uUT4+vQFZ+4lwuf0RbVlS9mo
LcnHeoIz5/hUW5KP9QRnzvGxnuDMOT7oyMtlzZSPZyOZU9868HuAIX9J3zrw
e4Ahf4nfNWD23/XZW/0lx3eE4eP3AEP+kvLxe4Ahf4n5MPvv+uyt/pLj22L4
+D3AkL+kfPweYMhfYj7M/rs+e6u/pHw4g/pWhddvyF/Styq8fmvl0P4Sv0vB
+rk+e6u/5Ph0/XjeusVfUj5ev7VyaH+J+bB+rs/e6i8pH/RT3+Iw35C/pG9x
mG/IX+J3N+BzffZWf4n5+I7Qtyr8nmPIX9K3KvyeY60c2l/idyl4u+H67K3+
kuPj9eN+X6u/pHz8nmOtHNpfYj683XB99lZ/Sfl0f3K/r9Vf0rc4zDfkL/G7
G/C5Pnurv8R8nL/oWxV+zzHkL+lbFX7PMeQv8bsUvN1wffZWfwl8mqPpWwd+
DzDkL+lbB34PAMa++o9zF8z+uz57q7/k+LB+2m9v9ZeUj98DrJVD+0vMh9l/
12dv9ZeUj/en9ttb/SV9y8F8Q/4S52bgc332Vn+J+fT8ab+91V/Stw78HmDI
X+LcBbP/rs/e6i+BT+sjnZXnefIhf0ln5XmefMhf4rOH2XHXZ2/1l3S2FYxa
G/G87pC/pLURz+sO+UtcD6FmcPrS6i85vi2Gj+d1h/wl5eN53SF/iflQMzh9
afWXlA/7U2s/5hvyl7T2Y74hf4nrPfA5fWn1l5iPz5/WRjyvO+QvaW3E87pD
/hLXQ6gZnL60+ks6+8l8qi+rpc1f0tya5z2H/CU+e8g5nb60+ktudnBL2agt
PE835C+ptvA83ZC/xHqCM+f4Wv0l5y0lo3pJ7LcM6ad6Sey3DOkn+0bwVlwe
1qqfjm+L4WO/ZUg/lY/9liH9ZD54Ky4Pa9VP550pH9frq2VYP9UrY74h/WRf
DHwuD2vVT+ctMR/nK636qV4S+y1D+sm+EbwVl4e16qfzJsCn+dhqadNP9SK4
Xh/STz57qM1dHtaqn67221I2agvXQ0P6qdrC9dCQfrKe4Mw5vlb9dNqZfKqV
rCdDfKqVrCdDfKyL0A63Tq18eMeo/cwx/Qf+Rg1/x6VlbnXq/oPjw1vizfYf
lI+/MzQ0tzp1/8Hx4S3qZvsPysffGRqaW526/6B8/BZ8s/0H5uPvuLTMrU7d
f3B8un7L9h+Uj9dvaG516v6D8vFb6c32H5iPv+PSMrc6df+B+fRbBZvtP4CP
3zK0zq1O3X9wfLx+m+k/KB/Wr2Vuder+g/Lp/txM/4H5eH+2zK1O3X9gPv1W
wWb7D+Djdzatc6tT9x/Ap/MgY/oP/A0e/k5Ny9zq1P0Hx4f122z/QfnwHZeW
udWp+w/Kx/tzs/0H5uPv1LTMrU7df2A+PX+b7T/oN5TA1zK3OnX/AXw6izWm
/6Df4OHv1AzNrU7df8A7adWXMf0HrY34OyBDc6tT9x8cH3+LYTP9B+Xj74AM
za1O3X9QPv3WxGb6D1r7Md/Q3OrU/Qfm07f8m+0/aG3E3wEZmluduv8APtWX
Mf0Hza35OxJDc6tT9x/wDlz5xvQfVFv4nf7Q3OrU/QfnLelb4mX7D+olsd8y
pJ9T9x8cn74lXrb/oHzstwzp59T9B+edKd+y/Qf1yphvSD+n7j84b0nfEi/b
f1Avif2WIf2cuv/gvAl9i7ps/0G9CK7Xh/Rz6v6Dq/30rd+y/QfVFq6HhvRz
6v6D0059a7Rs/0G1kvVkiG/q/oPrM6gXv+z9oD0E9tmH8uap7wfHp178sveD
8rHPPpQ3T30/uD6K8i17P2iPhPmG8uap7wfXZ1Avftn7QXsI7LMP5c1T3w/O
p1Yvd9n7QT1o9mmH8uap7wfnA6pXtuz9oNrCPthQ3jz1/eC0U2v1Ze8H1UrW
kyG+qe8Hdw+oVi7LpxrPOji0LlPz5beu+HsteJc45g3fnPrvju80w7fMG745
9d8d327Dt8wbvjn135UPb2bHvOGbU//d8en6LfuGb079d+XDe+cxb/jm1H9n
Pn7TPeYN35z6746P128zb/jm1H9XPt2fm3nDN6f+O/Px9wbGvOGbU/8dfPpN
hTFv+ObUf3d8WL/NvuGbU/9d+Xh/bvYN35z678yn52+zb/jm1H8HH5898G32
Dd+c+u/Jp7VRMo55wzen/rvj2234lnnDN6f+u/Jhf455wzen/jvz8fkb84Zv
Tv138Km+jHnDN6f++z2K/x7UmDd8c+q/O28pGce84ZtT/93x7TZ87LcM6eec
+u/OO1M+rtdb9HNO/XfnLTHfWln+Dd+c+u/OmwDfZt/wzan/7mq/3WXcG745
9d+ddiafauUyb/jm1H93fQb14rGGrffDnPrvjk+9+ORb5n6YU//d9VGUb9n7
YU79d9dnUC9+2fthTv1351Orl7vs/TCn/rvzAdUrW/Z+mFP/3Wmn1urL3g9z
6r+7e0C1clm+OfXfXa9c+8nL1jhzuv8cn/aTl61x5nT/uVkA5Vu2xpnT/ed6
5dpPXrbGmdP953qt2o9ctsaZ0/3nelna71m2xpnT/ee0U/3mZWucOd1/7h5Q
rVyWb073n7urVM+XXYM58f0/EfBXYA==
            "]}, Pattern}]}, {
        VertexStyle -> {
          329 -> RGBColor[0.97, 0.606, 0.081], 7 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 323 -> 
           RGBColor[0.97, 0.606, 0.081], 4 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 144 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 61 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 175 -> 
           RGBColor[0.97, 0.606, 0.081], 222 -> RGBColor[0.97, 0.606, 0.081], 
           320 -> RGBColor[0.97, 0.606, 0.081], 278 -> 
           RGBColor[0.97, 0.606, 0.081], 75 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 97 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 316 -> 
           RGBColor[0.97, 0.606, 0.081], 130 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 44 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 1 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 233 -> 
           RGBColor[0.97, 0.606, 0.081], 146 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 124 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 36 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 83 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 17 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 151 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 33 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 128 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 263 -> 
           RGBColor[0.97, 0.606, 0.081], 180 -> RGBColor[0.97, 0.606, 0.081], 
           254 -> RGBColor[0.97, 0.606, 0.081], 15 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 192 -> 
           RGBColor[0.97, 0.606, 0.081], 295 -> RGBColor[0.97, 0.606, 0.081], 
           20 -> RGBColor[0.34398, 0.49112, 0.89936], 79 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 257 -> 
           RGBColor[0.97, 0.606, 0.081], 78 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 253 -> 
           RGBColor[0.97, 0.606, 0.081], 145 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 309 -> 
           RGBColor[0.97, 0.606, 0.081], 24 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 31 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 236 -> 
           RGBColor[0.97, 0.606, 0.081], 110 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 260 -> 
           RGBColor[0.97, 0.606, 0.081], 19 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 181 -> 
           RGBColor[0.97, 0.606, 0.081], 88 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 324 -> 
           RGBColor[0.97, 0.606, 0.081], 165 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 85 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 280 -> 
           RGBColor[0.97, 0.606, 0.081], 113 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 116 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 18 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 220 -> 
           RGBColor[0.97, 0.606, 0.081], 108 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 131 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 315 -> 
           RGBColor[0.97, 0.606, 0.081], 284 -> RGBColor[0.97, 0.606, 0.081], 
           5 -> RGBColor[0.34398, 0.49112, 0.89936], 167 -> 
           RGBColor[0.97, 0.606, 0.081], 237 -> RGBColor[0.97, 0.606, 0.081], 
           69 -> RGBColor[0.34398, 0.49112, 0.89936], 285 -> 
           RGBColor[0.97, 0.606, 0.081], 46 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 126 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 16 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 23 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 92 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 185 -> 
           RGBColor[0.97, 0.606, 0.081], 141 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 276 -> 
           RGBColor[0.97, 0.606, 0.081], 82 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 50 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 29 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 242 -> 
           RGBColor[0.97, 0.606, 0.081], 227 -> RGBColor[0.97, 0.606, 0.081], 
           133 -> RGBColor[0.34398, 0.49112, 0.89936], 76 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 312 -> 
           RGBColor[0.97, 0.606, 0.081], 184 -> RGBColor[0.97, 0.606, 0.081], 
           248 -> RGBColor[0.97, 0.606, 0.081], 203 -> 
           RGBColor[0.97, 0.606, 0.081], 243 -> RGBColor[0.97, 0.606, 0.081], 
           156 -> RGBColor[0.34398, 0.49112, 0.89936], 297 -> 
           RGBColor[0.97, 0.606, 0.081], 177 -> RGBColor[0.97, 0.606, 0.081], 
           240 -> RGBColor[0.97, 0.606, 0.081], 52 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 182 -> 
           RGBColor[0.97, 0.606, 0.081], 274 -> RGBColor[0.97, 0.606, 0.081], 
           71 -> RGBColor[0.34398, 0.49112, 0.89936], 51 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 3 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 252 -> 
           RGBColor[0.97, 0.606, 0.081], 258 -> RGBColor[0.97, 0.606, 0.081], 
           84 -> RGBColor[0.34398, 0.49112, 0.89936], 293 -> 
           RGBColor[0.97, 0.606, 0.081], 80 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 32 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 259 -> 
           RGBColor[0.97, 0.606, 0.081], 230 -> RGBColor[0.97, 0.606, 0.081], 
           129 -> RGBColor[0.34398, 0.49112, 0.89936], 249 -> 
           RGBColor[0.97, 0.606, 0.081], 314 -> RGBColor[0.97, 0.606, 0.081], 
           179 -> RGBColor[0.97, 0.606, 0.081], 317 -> 
           RGBColor[0.97, 0.606, 0.081], 48 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 42 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 94 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 12 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 201 -> 
           RGBColor[0.97, 0.606, 0.081], 39 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 148 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 62 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 198 -> 
           RGBColor[0.97, 0.606, 0.081], 25 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 191 -> 
           RGBColor[0.97, 0.606, 0.081], 267 -> RGBColor[0.97, 0.606, 0.081], 
           174 -> RGBColor[0.97, 0.606, 0.081], 107 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 95 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 319 -> 
           RGBColor[0.97, 0.606, 0.081], 283 -> RGBColor[0.97, 0.606, 0.081], 
           28 -> RGBColor[0.34398, 0.49112, 0.89936], 217 -> 
           RGBColor[0.97, 0.606, 0.081], 93 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 225 -> 
           RGBColor[0.97, 0.606, 0.081], 77 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 300 -> 
           RGBColor[0.97, 0.606, 0.081], 162 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 214 -> 
           RGBColor[0.97, 0.606, 0.081], 218 -> RGBColor[0.97, 0.606, 0.081], 
           35 -> RGBColor[0.34398, 0.49112, 0.89936], 326 -> 
           RGBColor[0.97, 0.606, 0.081], 56 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 207 -> 
           RGBColor[0.97, 0.606, 0.081], 43 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 306 -> 
           RGBColor[0.97, 0.606, 0.081], 299 -> RGBColor[0.97, 0.606, 0.081], 
           150 -> RGBColor[0.34398, 0.49112, 0.89936], 40 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 176 -> 
           RGBColor[0.97, 0.606, 0.081], 287 -> RGBColor[0.97, 0.606, 0.081], 
           209 -> RGBColor[0.97, 0.606, 0.081], 270 -> 
           RGBColor[0.97, 0.606, 0.081], 183 -> RGBColor[0.97, 0.606, 0.081], 
           132 -> RGBColor[0.34398, 0.49112, 0.89936], 157 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 313 -> 
           RGBColor[0.97, 0.606, 0.081], 304 -> RGBColor[0.97, 0.606, 0.081], 
           159 -> RGBColor[0.34398, 0.49112, 0.89936], 34 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 251 -> 
           RGBColor[0.97, 0.606, 0.081], 288 -> RGBColor[0.97, 0.606, 0.081], 
           135 -> RGBColor[0.34398, 0.49112, 0.89936], 10 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 330 -> 
           RGBColor[0.97, 0.606, 0.081], 264 -> RGBColor[0.97, 0.606, 0.081], 
           125 -> RGBColor[0.34398, 0.49112, 0.89936], 223 -> 
           RGBColor[0.97, 0.606, 0.081], 291 -> RGBColor[0.97, 0.606, 0.081], 
           239 -> RGBColor[0.97, 0.606, 0.081], 171 -> 
           RGBColor[0.97, 0.606, 0.081], 168 -> RGBColor[0.97, 0.606, 0.081], 
           211 -> RGBColor[0.97, 0.606, 0.081], 161 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 305 -> 
           RGBColor[0.97, 0.606, 0.081], 67 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 308 -> 
           RGBColor[0.97, 0.606, 0.081], 310 -> RGBColor[0.97, 0.606, 0.081], 
           38 -> RGBColor[0.34398, 0.49112, 0.89936], 59 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 294 -> 
           RGBColor[0.97, 0.606, 0.081], 102 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 121 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 241 -> 
           RGBColor[0.97, 0.606, 0.081], 226 -> RGBColor[0.97, 0.606, 0.081], 
           311 -> RGBColor[0.97, 0.606, 0.081], 6 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 26 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 296 -> 
           RGBColor[0.97, 0.606, 0.081], 279 -> RGBColor[0.97, 0.606, 0.081], 
           322 -> RGBColor[0.97, 0.606, 0.081], 139 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 55 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 68 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 215 -> 
           RGBColor[0.97, 0.606, 0.081], 321 -> RGBColor[0.97, 0.606, 0.081], 
           307 -> RGBColor[0.97, 0.606, 0.081], 98 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 149 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 155 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 142 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 256 -> 
           RGBColor[0.97, 0.606, 0.081], 112 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 115 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 178 -> 
           RGBColor[0.97, 0.606, 0.081], 64 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 187 -> 
           RGBColor[0.97, 0.606, 0.081], 91 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 200 -> 
           RGBColor[0.97, 0.606, 0.081], 204 -> RGBColor[0.97, 0.606, 0.081], 
           100 -> RGBColor[0.34398, 0.49112, 0.89936], 325 -> 
           RGBColor[0.97, 0.606, 0.081], 138 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 219 -> 
           RGBColor[0.97, 0.606, 0.081], 122 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 57 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 289 -> 
           RGBColor[0.97, 0.606, 0.081], 247 -> RGBColor[0.97, 0.606, 0.081], 
           196 -> RGBColor[0.97, 0.606, 0.081], 282 -> 
           RGBColor[0.97, 0.606, 0.081], 140 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 2 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 114 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 292 -> 
           RGBColor[0.97, 0.606, 0.081], 81 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 232 -> 
           RGBColor[0.97, 0.606, 0.081], 205 -> RGBColor[0.97, 0.606, 0.081], 
           58 -> RGBColor[0.34398, 0.49112, 0.89936], 27 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 21 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 96 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 194 -> 
           RGBColor[0.97, 0.606, 0.081], 213 -> RGBColor[0.97, 0.606, 0.081], 
           164 -> RGBColor[0.34398, 0.49112, 0.89936], 119 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 54 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 169 -> 
           RGBColor[0.97, 0.606, 0.081], 245 -> RGBColor[0.97, 0.606, 0.081], 
           127 -> RGBColor[0.34398, 0.49112, 0.89936], 153 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 73 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 202 -> 
           RGBColor[0.97, 0.606, 0.081], 265 -> RGBColor[0.97, 0.606, 0.081], 
           229 -> RGBColor[0.97, 0.606, 0.081], 53 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 123 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 195 -> 
           RGBColor[0.97, 0.606, 0.081], 281 -> RGBColor[0.97, 0.606, 0.081], 
           193 -> RGBColor[0.97, 0.606, 0.081], 318 -> 
           RGBColor[0.97, 0.606, 0.081], 327 -> RGBColor[0.97, 0.606, 0.081], 
           173 -> RGBColor[0.97, 0.606, 0.081], 250 -> 
           RGBColor[0.97, 0.606, 0.081], 30 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 234 -> 
           RGBColor[0.97, 0.606, 0.081], 134 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 117 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 262 -> 
           RGBColor[0.97, 0.606, 0.081], 235 -> RGBColor[0.97, 0.606, 0.081], 
           172 -> RGBColor[0.97, 0.606, 0.081], 60 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 170 -> 
           RGBColor[0.97, 0.606, 0.081], 104 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 154 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 90 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 212 -> 
           RGBColor[0.97, 0.606, 0.081], 137 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 273 -> 
           RGBColor[0.97, 0.606, 0.081], 13 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 45 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 49 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 228 -> 
           RGBColor[0.97, 0.606, 0.081], 86 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 244 -> 
           RGBColor[0.97, 0.606, 0.081], 11 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 275 -> 
           RGBColor[0.97, 0.606, 0.081], 152 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 290 -> 
           RGBColor[0.97, 0.606, 0.081], 298 -> RGBColor[0.97, 0.606, 0.081], 
           186 -> RGBColor[0.97, 0.606, 0.081], 221 -> 
           RGBColor[0.97, 0.606, 0.081], 14 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 63 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 206 -> 
           RGBColor[0.97, 0.606, 0.081], 224 -> RGBColor[0.97, 0.606, 0.081], 
           22 -> RGBColor[0.34398, 0.49112, 0.89936], 302 -> 
           RGBColor[0.97, 0.606, 0.081], 216 -> RGBColor[0.97, 0.606, 0.081], 
           268 -> RGBColor[0.97, 0.606, 0.081], 65 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 272 -> 
           RGBColor[0.97, 0.606, 0.081], 72 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 208 -> 
           RGBColor[0.97, 0.606, 0.081], 210 -> RGBColor[0.97, 0.606, 0.081], 
           286 -> RGBColor[0.97, 0.606, 0.081], 189 -> 
           RGBColor[0.97, 0.606, 0.081], 89 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 70 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 47 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 103 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 190 -> 
           RGBColor[0.97, 0.606, 0.081], 303 -> RGBColor[0.97, 0.606, 0.081], 
           66 -> RGBColor[0.34398, 0.49112, 0.89936], 197 -> 
           RGBColor[0.97, 0.606, 0.081], 74 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 136 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 99 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 158 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 271 -> 
           RGBColor[0.97, 0.606, 0.081], 109 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 160 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 106 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 301 -> 
           RGBColor[0.97, 0.606, 0.081], 266 -> RGBColor[0.97, 0.606, 0.081], 
           269 -> RGBColor[0.97, 0.606, 0.081], 163 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 166 -> 
           RGBColor[0.97, 0.606, 0.081], 111 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 188 -> 
           RGBColor[0.97, 0.606, 0.081], 120 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 8 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 238 -> 
           RGBColor[0.97, 0.606, 0.081], 246 -> RGBColor[0.97, 0.606, 0.081], 
           87 -> RGBColor[0.34398, 0.49112, 0.89936], 9 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 143 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 101 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 277 -> 
           RGBColor[0.97, 0.606, 0.081], 118 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 37 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 199 -> 
           RGBColor[0.97, 0.606, 0.081], 147 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 41 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 105 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 231 -> 
           RGBColor[0.97, 0.606, 0.081], 261 -> RGBColor[0.97, 0.606, 0.081], 
           255 -> RGBColor[0.97, 0.606, 0.081], 328 -> 
           RGBColor[0.97, 0.606, 0.081]}, VertexCoordinates -> CompressedData["
1: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
lU+at/h/TgQgAA==
          "]}]]}, 
      TagBox[GraphicsGroupBox[GraphicsComplexBox[CompressedData["
1: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
lU+at/h/TgQgAA==
         "], {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
           ArrowBox[CompressedData["
1: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
+Jpv+J4f+JGf+JXfmGw/KUxlLvOYz93cwyLu434e4EEe5hEe5TEe5ymeZtDv
l1D4/PtFv8BbLGctG9jIO2zjXXawmz0c4jBH+IAP+ZhPOcZJTnGOLzjPV3zN
t3zPD/zIz/zKb0y2nzSmM5d5LOBu7mEx93E/D/AQD/MIj/IYT/AUTzPo99dC
4fMvsJS3WME6NvA277Cdd9nJbvZyiPc5wgd8xMd8ynFOcppzfMl5vuIbvuV7
fuAnfuZXfmOK/aQxg7nMZwF3s4jF3Mf9PMhDPMwjPMrjPMFTPM2g3z8RCp9/
gWUsZwXr2cjbbGM777KLPezlMO9zhA/5iI/5lBOc4jRf8CXn+Zpv+Jbv+ZGf
+Jlf+Y2p9pPODOYxnwXcwyIWcx8P8CAP8TCP8BiP8wRP8TSDfv9kKHxvCLzJ
Slaxlk1s5h228R472Md+DnGYo3zAh3zCpxzjM85wji+4wFd8zXd8zw/8yC/8
ym9Mtp9MZjGXeSzkbu7hXu7jfh5gCQ/zCI/yGE/yFE8z6PdPhcL3hsBSVrKa
dWxiC++wnffYyT4OcIj3OcoHfMQnfMpxPuNzzvElF/iKb/iO7/mBn/iFX/mN
KfaTyWzmMp+F3M0i7uU+7udBlvAwj/Aoj/MkT/E0g37/dCh8bwgsYxWrWc9m
trCN7bzHLvZzgMO8z1E+5CM+4VNOcIbP+YIvucDXfMN3fM+P/MQv/MpvTLWf
LGYzj/ks5B4WcS/38QAPsoSHeYTHeJwneYqnGfT7Z0Lh+3rgLVayhg1sYivv
8C7vsZt9HOQQRzjKB3zMJ3zKST7jLOc4zwW+4lu+43t+4Gd+4Vd+Y5r9ZDKH
uSxgIXezmHu5j/t5iCU8zCM8yhM8yVM8zaDfPxsK39cDy1nFGjayma1s413e
Yw/7OchhjnCUD/mYT/iUU5zhLF9wngt8zbd8x/f8yM/8wq/8xnT7yWIO81jA
Qu5hMfdyHw/wEEt4mEd4jCd4kqd4mkG/fy4U/p8lsILVrOFttrCV7bzLe+zl
AAd5nyMc5SM+5hM+5TSfc5YvOc8FvuFbvuN7fuJnfuFXfmOG/WQzh/ksYCGL
WMy93MeDPMQSHuYRHucJnuQpnmbQ76+Hwv+/BP7G3/kHL/MKr/Iar/MGb7KU
ZbzFclawklWsZg0X+Z1L/MFlrjDkuSIYyShGM4axjGM8k5nCVKYxnRnMZBaz
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
            "], 0.02261146496815286]}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[1, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[2, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[3, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[4, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[5, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[6, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[7, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[8, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[9, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[10, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[11, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[12, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[13, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[14, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[15, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[16, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[17, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[18, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[19, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[20, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[21, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[22, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[23, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[24, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[25, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[26, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[27, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[28, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[29, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[30, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[31, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[32, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[33, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[34, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[35, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[36, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[37, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[38, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[39, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[40, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[41, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[42, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[43, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[44, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[45, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[46, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[47, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[48, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[49, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[50, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[51, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[52, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[53, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[54, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[55, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[56, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[57, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[58, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[59, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[60, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[61, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[62, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[63, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[64, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[65, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[66, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[67, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[68, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[69, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[70, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[71, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[72, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[73, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[74, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[75, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[76, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[77, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[78, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[79, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[80, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[81, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[82, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[83, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[84, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[85, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[86, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[87, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[88, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[89, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[90, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[91, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[92, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[93, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[94, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[95, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[96, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[97, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[98, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[99, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[100, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[101, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[102, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[103, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[104, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[105, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[106, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[107, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[108, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[109, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[110, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[111, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[112, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[113, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[114, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[115, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[116, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[117, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[118, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[119, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[120, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[121, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[122, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[123, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[124, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[125, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[126, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[127, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[128, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[129, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[130, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[131, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[132, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[133, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[134, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[135, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[136, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[137, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[138, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[139, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[140, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[141, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[142, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[143, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[144, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[145, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[146, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[147, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[148, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[149, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[150, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[151, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[152, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[153, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[154, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[155, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[156, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[157, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[158, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[159, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[160, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[161, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[162, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[163, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[164, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[165, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[166, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[167, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[168, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[169, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[170, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[171, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[172, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[173, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[174, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[175, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[176, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[177, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[178, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[179, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[180, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[181, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[182, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[183, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[184, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[185, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[186, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[187, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[188, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[189, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[190, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[191, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[192, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[193, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[194, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[195, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[196, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[197, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[198, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[199, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[200, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[201, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[202, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[203, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[204, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[205, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[206, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[207, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[208, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[209, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[210, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[211, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[212, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[213, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[214, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[215, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[216, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[217, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[218, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[219, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[220, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[221, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[222, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[223, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[224, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[225, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[226, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[227, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[228, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[229, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[230, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[231, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[232, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[233, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[234, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[235, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[236, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[237, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[238, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[239, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[240, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[241, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[242, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[243, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[244, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[245, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[246, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[247, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[248, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[249, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[250, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[251, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[252, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[253, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[254, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[255, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[256, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[257, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[258, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[259, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[260, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[261, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[262, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[263, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[264, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[265, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[266, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[267, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[268, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[269, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[270, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[271, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[272, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[273, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[274, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[275, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[276, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[277, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[278, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[279, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[280, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[281, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[282, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[283, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[284, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[285, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[286, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[287, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[288, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[289, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[290, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[291, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[292, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[293, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[294, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[295, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[296, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[297, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[298, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[299, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[300, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[301, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[302, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[303, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[304, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[305, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[306, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[307, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[308, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[309, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[310, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[311, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[312, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[313, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[314, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[315, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[316, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[317, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[318, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[319, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[320, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[321, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[322, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[323, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[324, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[325, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[326, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[327, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[328, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[329, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], 
            DiskBox[330, 0.02261146496815286]}}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    FormatType->TraditionalForm,
    FrameTicks->None,
    ImageCache->GraphicsData["CompressedBitmap", "\<\
eJysvVvMJdl1Hlbu8//nfv77ve/T3XW6p6fnyuFQc+kezpAcqeoMdYk0I5uW
KIKmQpEyFFOikFiOq+TAQWxDIq0ERgA/+MWwHvIWJjBsGIFExA+OEQNBAL8F
BuwYIgEZkCVEYqjprpyqvdda37d2/d1NOw/9//2fS9Xea6/1rW9d9q73v/Ar
X/7SX/zCr/zCF79w7b2vfeE/+/IvfPGXr33ml762fmnwZ7LszzzX/ruWbaz/
32RZ8uNelv2H/P9vdj9PXlj/+Pr63zfX/35z/e+31v/+/vrf/7T+99vw2g/y
/jfjNV/V22R/rft5+3F3+9/W//71yfaFP/zknc2HP/P6+KN3nh09vLg/ebSz
mD16cGfSrF97uH7to8tHW49mO5c/uni4/fD+ctS+/ujdu5NH+9vzh6d7k4/W
rz2K3+8+u324/OP53jPf2dic/u4TRhuGmf3l7ucnHjfaf9aOdmM4/8Pdsxce
Hlz+WBzNsBvNazdGzeX9YfOfl9Pmu7910PzJ3z1sfv+/O2j+6o/OmpeubDT/
6Fd26LXrJ/Pm82+M9bPf/ss73ef6vt9+9tWb283PvDF55KTRzryV3J+8++zw
u2c7F5402zDN7s8sO5LZPnY99haT5mx//ujB7XE70+ZT9+ZNfiNvjo8u0Wj/
1ofz5t1nN9u/B+0L2aCbwI+9PGr+65+cZRfgtU8/N2onpq/97c/Nm+KFYfvV
LHz3tPvcjzw/7AQgwvjyJyfN1eN5n5AeXTnYfPjS1SGqwcNz1ECEEcWQfa37
eSDS+CdRCn/y9u3N9nKP3rk7bq4cDJt37gyfar1unQzb9ZbZ/WoxbT73Q+Pu
r4342s+9OW5+8d1J91f43LD52Tf0te5f/N5m9/YIv6LyfnAbhbbbK7T3Xxx1
Qnvn3o5q0KXD2cO9sxf/8ODSx/7N5nDxbRRKkEb2F7uf+94gWuH83mBz8r3p
1umj4/2dXgH88L1h87/+2m73Wrq2QQfeW38G9eK//fOLplx/7v/+xr5+rr3u
aj38v/HBXD/XvvbOHdaf9rvF8+l333+Jv9tK9MPXcCUOSaz/vN7txt43p7PT
K82tZ/Lmk3cXrRl8753U4FSEQXbZV7qfc9IrxI+zg/mj+7dH7aqsrWrR6c2v
//hsEPUBrCfVh8udunzx/lj14f/4r/a6wf/yD09bQXSv/d7fPugm88LljeYf
f32bXrtytOiuIZ9tF+z59ef6vv/ec8Pmn/3VXRVkq3st8pnARyhwXfiSFn6r
s5p2lo8xYESzb0WBfjXI88vdz+1Wnv9Dq4ZrG/3eg9ubikrPXMub65cu9y5f
O5L1DDMRLi47qE94+7nu62+vHdDbt4ckjPdfHDaXDufNG7dnzQcfHzdv5KPm
aHfW7CzWr+UTfe1kf7uZ711b/95pXr816l5/czlpdrcW689Pm9fzcfzsuDnZ
2Ww+8xzf5+ffHq/vs3jcYqBOCKy0Mv/k7U2Q+awXE9b/f3iyN/vuGhjJ9oOE
sy+livt7G5uTh4frmXrhtoJ7azn2sP+jBPuvdV/59F0bxeO07eLBojnYXpDg
zo4OmsVaoJPti83s6Fazn7+9/veg2b7ysWbr4r1m58or+tr+jbea/VtvNwe3
HqxfX79/Zu8frN/fu/nW+vfbzeL4TnN8sN28sZw2H7w2CYvRLtzuteZ4byvc
/7Vp8+DubnPxcIsW6W+utfydO5sEOb/0GQ8v8wS1v/Hn5p0FRHYjMCKa/vNh
Ab7Y/Rz3avqa9zBSDJq/9J6/8QnBg5n8vHnpumnu9ny6nujCNHct6JOj/Wbe
CrgV4FpI2yLAy680x8+tmmv3v9rkZX2hWRZVtmyWZbX+V8ffVfuq/s7b/xd1
eH/9O1+/npfhb/l9/cEvNsf3Vt2aHcj6rdenXavFyZ1mND9qtg5uNbsnzwVj
iobz8rVRZzhef1oEfHM5hnXZSZCphfkWD3pwos8qwmJkP9djFGtH+NHZfmoU
gDjoo9aEAgZ2ElFm3Fw/GikatIo+B0XvhCKKHBW9XYfrD74ShVrrIuSyGGER
LrR/rG+WR/m3f7XrVmeb67WJ62JfD+9daK+SjeGa8XpF/GB7zyJe+6x7q1vD
58Iaio3Jes5PUhs72Fl0avckcOuow/NDg5bxk8znC2GpfvYx5nP7bPRkvNpq
/ulf2W2eOer3pi0+tXo5WS9Taxrb7ZKsdfj6/a+2YqnWl+wk50Quos6797oV
iu9t2CoGKQ/iypl1dX+tPzqxFQPLCgvOK1mtOYIuWnvbQixPrLOWxQzfXYXP
XX87rOZeXM1W+ebHy/UqRus7BxF/6dPT5qdfG0flnv+gVhbWLPtc93P6RNfT
Qt76bptxufrQbh0cdmoWIGPSvHl72qni1sXn26VqhRDEP4/LFZcGEC3X16MM
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
rrD4BPk23xBUOThmSpXr8dUsnWwoSIqridfZz8FPemexTQ1t19Oh45e3fn99
Y/eNAlk8wjskrif7aq9+P0R4F6ZaFVUriqjlud4KeMy2gDBb6Cw0oAogwNus
HouHzDblwxIzjVXThfwrAch4TXHRwDRZtt3gKTTZBdeNdHeFzYZEgTMZYoU+
JXyWu/MJGBB52Cbqfjv9qjrqMdgfbvMi5LVlsZyqC3xpxfM0k0N77n9WV0V1
Q6JiNQl3pB2N2VeyubACdSfVsYBbL4UA86B1CZ5FZMYQ5uD6m7Nit7Z0BHFx
Lu55IuCrdtGMtGa1JypHO7M7XLYEOefF7GQ7G1GHvNU7AafaPorQ4d1PU2eV
oUPtb1kwV8Bj3YO5H7xyjITSUYjjQm804yMbTJ9BZz1rM+DL7x/zuFzkgLSV
MB3BjEUV8VICE+NF7adsaBM8bDM89X6BTgwUHk8ntlQFTZDquZp+8nfqliSG
/I0kPbgFyQX/hsNWmCvxV0/ZLHn0sIf+BqOtPBiIDMTcF0BSKKLeDFzrWE42
1uFSuMYHW0tpYPqa2XfmnLyqIlrgqdIZo+JHWRuRIE5kg4usnaPEnm4eiVVh
/tLv0ytfF5Rjd1OMDkupyQ4d1y6IqHyv7ZkuRGNmq4Dt6kROdRVl+K2HBEjp
+BUibLv+t+Gq+TfvbXqhrUVyh9L9Dx6lq+a3GWUoivv2To7i7ngU132tYtMC
HHZxYVwcmD1XXvFfoYbBLWMXF8Y9gtYZhpozh5Orco+iBcSiFaLEKCcxgGBZ
Ld4wBi/C6dX8zCyyL8nGFcbcDaXiznW5KkbfYtwsHPY7ZFUJGiRqp1rUmWvF
XDyvntWZW/rUXxUOlLZxKa1Yq+QezM9hHxhPmIO0dPMbC9okj601wEQqY5cm
8MLqRmCDk1Bd8gIqRgmPbGUFOPdS0QbLdM2aIGAQrDA5u0QK0yrM3AoxptS8
QlOd6knVsJKWGhxesXNyv3/uZN5/7ZX5GP345qc3+6+/Nu+//Gj++M7l2a8B
OtKPtRye5Rrb22U/bGbIJLDsokgsllyRmF8jN5GLJYhU5thzF3dfHl8S+i75
O+wO+JZwVKHSb9gmY7eE8jIv5JNXUygE/4xePzOyJOwE/Bcd6DsaXtTGThaB
Hi1hNucXHPZkX3LBc2HrV0PAo09Kc6UEpvsvPr/CX0UpQkwn56WfAbLYhjAV
YQWJU0EptBBJNxRTwOoUCKHYaIsqjBmt0ZzDIVBNWKFbvaHvl2WndYD4oItX
jX301DwoG7xpEBYHEs2iER6auz6kGRkDA5gUMNzkUOzldCj2/sXe93YOn/vF
iChj4+tPLk72xvpau1P1Zz7Y7r/0aKO/eYzG13638CRHCsI0dTpbKJcIau9x
mLlMjrKbspa0R55+g6xGUTScJ8snqrggE+RHmoAk5nWjQIjwceZlVzXve5UJ
EvZYgVBDb3FVkC1lmWXI6lQmpNTDUXTmFeSlPsnz3FwvvNVjBbVu5KzhxFQW
sH9QJzIngIdj+k4Q/SV7ry2GplQWO2R5K/YnwQnVc8JP5Mi4uybzkYWdp9or
vi9sXK6MGP97lA85ik0sZlJq5oxkFEtovQkc3jAT5iI20U95VtK5cKMg10bV
Shz1vU9NUnaLcOtXX9393fX53hsRPk69rfXl5f3+pct5/5WX52O2+auvbo9F
ttsnd0nVmQlEY0ndO9XW22fTvG6HOEYpyxKVmZR1tTXqL9nmZqt8S8GOZZMp
rL3CW6OoXLLsCPSL+m7TFJJFruReZNbJDXk+Pafh62f1MxhnXiakwgOON7x6
ujlFkNOYNWitaL8beyGdbgdJBCrZTz0Rq/ieD88Qtis+5cFuaQwgUA0PzF3S
4GTOqj28fFFyInKTyVngTJ/e5uB7y3vHVpPLrIpUTWOY3cRb6lVe2Zx0XKHF
JjGvfhrdhYgCkC8qD/mDkzabB972uzcfDDHYGbW3/g0Lwgqk7Hp76wcvPLwm
g5Nq9EFxqaK2zo6FgeHsRVFUdyeWPCUa+sRuCz4QELC8aiaxndiAFu6T9+EJ
0lJy6iYW+sJvWDSIIvrmJ9t1BCU2OJwibA3FdJlyDHpRjf3Naj7PwrpmvT78
AHK8VT74Rcg+uPtCGBtvs/JbSkP1ham/svYmrkpxpUSj/SxaGJOtgE1sulvM
7UjNFitaYVd8r/n3HMWWxK4NtMHgiWLOOO8GT43EcwnREs+V1gzue9PlPnSR
IpU5JLIF4W/piHVV4/qUaF66YiXy9+1Ip2E4u9HpqtOdozv9p57fnQqm/rGV
xO4wWlzTmToniV/Zyg0gM7QdC/IxJammZu+jl98jVRMgjzh23oyTYOzz5+n6
LPEtg/hVeYN50fxuWnqu+pLwEZg0j2New1PmYWaEnIn9KpPuZKd8wCBNN0zE
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
1hGQ0slXFzXdc6cpYUTNmIWq+9a0UsCMEImb+0Zj1c42qdHDwgNFmyQxcHQ0
8UKlbwhZqs7gncN3lgOnt3zcU6jDRiafg6n/6fe3WK0/uTje/b319S1mEWnf
Zx+DfBqJ+N31je1PTg/3BCB+4WvjS9KW335mbBjyI0NBxPH9z0MUlmT9xfmj
7avNb609q88xEG9N4XDixIMDF0I+aEumqrvV6HS20XL0CwRGgMelwvmOnjYi
fuOxNit2t/qp4cLn3ZsP+q3Dqx+eGaRqlA8fba3UdXNQ3e+9U20Mqmws4Vtp
t/+FJyj7S5ebK4UfT9dcr+xHE3xhs3/ufK8/ufpUf3b37XTwIWfF7hqjhKEz
oi/UwemD6ywicByyot0WPHAGmSn3oUDJIujWwpzUGmaZOO+MpGkeKKubC8Vt
Z5jGUe6MD2ayN7QysCzR2y9u9ndOp5XnGe37J7dPd393bX1b/IK0u7Nvlyr9
v60+OoDA9Sp99kSVfvHe3f7+vSpv+tYK4bdHhN85zer9/Oc9DSquIWVBBRFZ
R3bJVrMakoHALmYkPew9sD0ZrqJ3iRTAMevybZgxbOz1KMxzlxhftsirZ6wm
vYLbndMXriVtQ/DnKy9vPNlKb0UrHXX3X0zb+lP/f3X30kMGX0rVv77Fg09w
53TDMecrr+6s5nIA9I7by9yqNj7Vwm/y7ZhR27r1njlWClpRcyzbryUFkhtV
PrES6jQciydgmuegenSV6qzuvNWf3fnsanJHY2lLoFKe2/ileqf/9he2cpng
D2VX0zbN/vwPp4TJeN8SP904+HXnDe6ebfSfvj/3vO+QiNs8vBwnvH/7Vdhb
X5iWpH8rUDKNubgCo/G+kOgJr0nNOCfzzjwCMgiRCdTR6ueAjIPB2Du+PxZr
pt5HW/1XVvhSvVj1Fzefm6I6a2QImycYwgll+pfT9vz0sykTO85feXlOjnNS
sOHlULD3PNc/bI8q13ylXNuZHW+PWzUq12odhvU4uP2ab5v9TiiT+kHmKqhx
JU/TPJSoB/L859M+DLmXzb2zfv/0xf7o4uVRN0Yg+OLWCix2++cvhuMC80L8
BhJwXT7Qjpk/4QTOlAVLuzL7mfHfvafqjjmtL61G8t/924fXK+/tMQv+r39l
+6k6NdDeq7P9FThsuiAOtT6He9tAR9e1W1jU++OiJqNwde2eJnm/Vcj7eEPX
xeHKiNxdvf4gv367/+iN4/75y+n1H6aASqdkWYa8GSzLwbUM4htvzkfS9s7D
3Skl+dm0Dz83/nvASjLU53/y8Wc3h2zIJxcne48P99VP+I8+TodLXHk2U9Tp
U5uezCsV51H/P/17R6NATe3Jp+6uD4J2jULx4t0R4S337nqB/rkvbff3Vr+f
ev/UQn8zm3ADCDIO+XO7bta/+GBrqKcYjq4/vnV++r3dw+eGCJ1Qt7TUs391
/PfcJP+vzVKmvDPPbLUDn3zhwXjwp//cg6P+6nw6jDNUwVkYJ6tDVoWEW196
uFEQgzylp6rIII9/7p2tp24TLZ2t3MCHPpC7fqZW80S09Xu538WHj1LJaISR
bIL/7mp5fm31v79Jq/qvpUX9N8Z/jzi/8sd7x89/sgK7UYS/mBf0g1eOxwX9
6NX59eK81v/CRztjk0rAy1wGTOLNcxxue1ktyeS8pySL0UxfN70+Q5WimR3L
Od0+2//k7HB3OIQ7KO2fvKtqnhZm9ovjv2dR6P4LXatXvn95cjA86fFPfHar
/8wLOyNORuEbNlxsZ1Kz5ZtQ/yyPG6Q5eS6+NjQ/D2XFOQ+y9P6Cbf/xdevQ
P3cyf/zmvdEx/u5qDX47J1RMtf4aa2JajdlfHP+9dZ0mDgr8J7uHdwaFHhMu
qWBqr793/+X+3p3nJ7XyjTvrg52KgiXh+aEbHYsJrV5eipuT0/zZD7dGsJt4
7+Ork41P3ri78f2VCAwRwGH6U+ry76SZ//vjv5+2mf9n+ZP/Q571H57cev37
p8+9NYjDJ194aT4s6ghtFyf7Pzjc3X6qiAwrcXflOw4b/6QVKjbvs1s/WFmd
IXT9yd7xPRNHFuxfn9jQNJ3ZfzD++3BqP22Gf/NJezz4ZjSCH+QRfJJnG1fg
urVmkZsSvzTM2a+O/57EPbjuCdf93Z6aHjfrh39ee/b/nv0z/x/Xl17u\
\>"]], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12}, {Null, 
         SparseArray[
         Automatic, {12, 12}, 0, {
          1, {{0, 2, 4, 6, 9, 12, 14, 16, 17, 19, 20, 21, 22}, {{2}, {12}, {
            1}, {3}, {2}, {4}, {3}, {5}, {11}, {4}, {6}, {9}, {5}, {7}, {6}, {
            8}, {7}, {5}, {10}, {9}, {4}, {1}}}, Pattern}]}, {
        VertexStyle -> {
          6 -> RGBColor[0.97, 0.606, 0.081], 1 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 9 -> 
           RGBColor[0.97, 0.606, 0.081], 2 -> RGBColor[0.97, 0.606, 0.081], 8 -> 
           RGBColor[0.97, 0.606, 0.081], 3 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 4 -> 
           RGBColor[0.97, 0.606, 0.081], 11 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 10 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 7 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 12 -> 
           RGBColor[0.97, 0.606, 0.081], 5 -> 
           RGBColor[0.34398, 0.49112, 0.89936]}, 
         VertexCoordinates -> {{0, 0.865410983413526}, {
           0, 1.7308219668270517`}, {0, 2.5962329502405774`}, {
           1.0817637292669073`, 3.4616439336541034`}, {1.2981164751202887`, 
           2.5962329502405774`}, {0.8654109834135258, 1.7308219668270517`}, {
           0.8654109834135258, 0.865410983413526}, {0.8654109834135258, 0}, {
           1.7308219668270517`, 1.7308219668270517`}, {1.7308219668270517`, 
           0.865410983413526}, {2.1635274585338147`, 2.5962329502405774`}, {0,
            0}}}]]}, 
      TagBox[
       GraphicsGroupBox[
        GraphicsComplexBox[{{0., 0.865410983413526}, {0., 
         1.7308219668270517`}, {0., 2.5962329502405774`}, {
         1.0817637292669073`, 3.4616439336541034`}, {1.2981164751202887`, 
         2.5962329502405774`}, {0.8654109834135258, 1.7308219668270517`}, {
         0.8654109834135258, 0.865410983413526}, {0.8654109834135258, 0.}, {
         1.7308219668270517`, 1.7308219668270517`}, {1.7308219668270517`, 
         0.865410983413526}, {2.1635274585338147`, 2.5962329502405774`}, {0., 
         0.}}, {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
           ArrowBox[{{1, 2}, {1, 12}, {2, 3}, {3, 4}, {4, 5}, {4, 11}, {5, 
            6}, {5, 9}, {6, 7}, {7, 8}, {9, 10}}, 0.033461047919891504`]}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[1, 0.033461047919891504]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[2, 0.033461047919891504]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[3, 0.033461047919891504]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[4, 0.033461047919891504]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[5, 0.033461047919891504]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[6, 0.033461047919891504]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[7, 0.033461047919891504]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[8, 0.033461047919891504]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[9, 0.033461047919891504]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[10, 0.033461047919891504]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[11, 0.033461047919891504]}, 
           {RGBColor[0.97, 0.606, 0.081], 
            DiskBox[12, 0.033461047919891504]}}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    FormatType->TraditionalForm,
    FrameTicks->None], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12}, {Null, 
         SparseArray[
         Automatic, {12, 12}, 0, {
          1, {{0, 1, 5, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22}, {{2}, {1}, {
            3}, {11}, {12}, {2}, {4}, {7}, {8}, {9}, {10}, {3}, {5}, {6}, {
            4}, {4}, {3}, {3}, {3}, {3}, {2}, {2}}}, Pattern}]}, {
        VertexStyle -> {
          6 -> RGBColor[0.34398, 0.49112, 0.89936], 1 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 9 -> 
           RGBColor[0.97, 0.606, 0.081], 2 -> RGBColor[0.97, 0.606, 0.081], 8 -> 
           RGBColor[0.97, 0.606, 0.081], 3 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 4 -> 
           RGBColor[0.97, 0.606, 0.081], 11 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 10 -> 
           RGBColor[0.97, 0.606, 0.081], 7 -> RGBColor[0.97, 0.606, 0.081], 
           12 -> RGBColor[0.34398, 0.49112, 0.89936], 5 -> 
           RGBColor[0.34398, 0.49112, 0.89936]}, 
         VertexCoordinates -> {{0, 0}, {0.5125295768676956, 
           0.5125295768676956}, {2.1782507016877064`, 1.0250591537353912`}, {
           1.7938535190369347`, 0.5125295768676956}, {
           1.5375887306030869`, 0}, {2.0501183074707825`, 0}, {
           2.3063830959046303`, 0.5125295768676956}, {2.818912672772326, 
           0.5125295768676956}, {3.3314422496400216`, 0.5125295768676956}, {
           3.843971826507717, 0.5125295768676956}, {0.5125295768676956, 0}, {
           1.0250591537353912`, 0}}}]]}, 
      TagBox[
       GraphicsGroupBox[
        GraphicsComplexBox[{{0., 0.}, {0.5125295768676956, 
         0.5125295768676956}, {2.1782507016877064`, 1.0250591537353912`}, {
         1.7938535190369347`, 0.5125295768676956}, {1.5375887306030869`, 
         0.}, {2.0501183074707825`, 0.}, {2.3063830959046303`, 
         0.5125295768676956}, {2.818912672772326, 0.5125295768676956}, {
         3.3314422496400216`, 0.5125295768676956}, {3.843971826507717, 
         0.5125295768676956}, {0.5125295768676956, 0.}, {1.0250591537353912`, 
         0.}}, {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
           ArrowBox[{{1, 2}, {2, 3}, {2, 11}, {2, 12}, {3, 4}, {3, 7}, {3, 
            8}, {3, 9}, {3, 10}, {4, 5}, {4, 6}}, 0.0360007289239863]}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[1, 0.0360007289239863]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[2, 0.0360007289239863]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[3, 0.0360007289239863]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[4, 0.0360007289239863]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[5, 0.0360007289239863]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[6, 0.0360007289239863]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[7, 0.0360007289239863]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[8, 0.0360007289239863]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[9, 0.0360007289239863]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[10, 0.0360007289239863]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[11, 0.0360007289239863]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[12, 0.0360007289239863]}}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    FormatType->TraditionalForm,
    FrameTicks->None], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 
        19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 
        36, 37, 38, 39, 40}, {Null, 
         SparseArray[
         Automatic, {40, 40}, 0, {
          1, {{0, 2, 4, 6, 8, 11, 13, 15, 18, 21, 23, 25, 28, 32, 36, 40, 44, 
            48, 52, 56, 60, 64, 68, 72, 76, 80, 84, 88, 92, 95, 97, 99, 102, 
            105, 107, 109, 112, 114, 116, 118, 120}, {{8}, {14}, {13}, {15}, {
            14}, {16}, {5}, {15}, {4}, {12}, {18}, {17}, {19}, {18}, {20}, {
            1}, {9}, {19}, {8}, {16}, {22}, {21}, {23}, {22}, {24}, {5}, {
            13}, {23}, {2}, {12}, {20}, {26}, {1}, {3}, {25}, {27}, {2}, {
            4}, {26}, {28}, {3}, {9}, {17}, {27}, {6}, {16}, {24}, {30}, {
            5}, {7}, {29}, {31}, {6}, {8}, {30}, {32}, {7}, {13}, {21}, {
            31}, {10}, {20}, {28}, {34}, {9}, {11}, {33}, {35}, {10}, {12}, {
            34}, {36}, {11}, {17}, {25}, {35}, {14}, {24}, {32}, {38}, {13}, {
            15}, {37}, {39}, {14}, {16}, {38}, {40}, {15}, {21}, {29}, {39}, {
            18}, {28}, {36}, {17}, {19}, {18}, {20}, {19}, {25}, {33}, {22}, {
            32}, {40}, {21}, {23}, {22}, {24}, {23}, {29}, {37}, {26}, {36}, {
            25}, {27}, {26}, {28}, {27}, {33}}}, Pattern}]}, {
        VertexStyle -> {
          5 -> RGBColor[0.34398, 0.49112, 0.89936], 15 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 22 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 9 -> 
           RGBColor[0.97, 0.606, 0.081], 36 -> RGBColor[0.97, 0.606, 0.081], 
           14 -> RGBColor[0.34398, 0.49112, 0.89936], 19 -> 
           RGBColor[0.97, 0.606, 0.081], 6 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 26 -> 
           RGBColor[0.97, 0.606, 0.081], 18 -> RGBColor[0.97, 0.606, 0.081], 
           2 -> RGBColor[0.97, 0.606, 0.081], 38 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 12 -> 
           RGBColor[0.97, 0.606, 0.081], 17 -> RGBColor[0.97, 0.606, 0.081], 
           31 -> RGBColor[0.34398, 0.49112, 0.89936], 34 -> 
           RGBColor[0.97, 0.606, 0.081], 7 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 37 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 39 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 10 -> 
           RGBColor[0.97, 0.606, 0.081], 24 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 30 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 8 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 33 -> 
           RGBColor[0.97, 0.606, 0.081], 11 -> RGBColor[0.97, 0.606, 0.081], 
           13 -> RGBColor[0.34398, 0.49112, 0.89936], 29 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 1 -> 
           RGBColor[0.97, 0.606, 0.081], 3 -> RGBColor[0.97, 0.606, 0.081], 
           21 -> RGBColor[0.34398, 0.49112, 0.89936], 27 -> 
           RGBColor[0.97, 0.606, 0.081], 28 -> RGBColor[0.97, 0.606, 0.081], 
           25 -> RGBColor[0.97, 0.606, 0.081], 4 -> 
           RGBColor[0.97, 0.606, 0.081], 32 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 16 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 40 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 35 -> 
           RGBColor[0.97, 0.606, 0.081], 20 -> RGBColor[0.97, 0.606, 0.081], 
           23 -> RGBColor[0.34398, 0.49112, 0.89936]}, 
         VertexCoordinates -> {{1, 1}, {2, 1}, {3, 1}, {4, 1}, {1, 2}, {2, 
          2}, {3, 2}, {4, 2}, {1, 3}, {2, 3}, {3, 3}, {4, 3}, {1, 4}, {2, 
          4}, {3, 4}, {4, 4}, {1, 5}, {2, 5}, {3, 5}, {4, 5}, {1, 6}, {2, 
          6}, {3, 6}, {4, 6}, {1, 7}, {2, 7}, {3, 7}, {4, 7}, {1, 8}, {2, 
          8}, {3, 8}, {4, 8}, {1, 9}, {2, 9}, {3, 9}, {4, 9}, {1, 10}, {2, 
          10}, {3, 10}, {4, 10}}}]]}, 
      TagBox[GraphicsGroupBox[GraphicsComplexBox[CompressedData["
1:eJx9zjEKgDAQRNHFasspLCwsVCy8hZ7BIwjWXt0jqMgI+YWBMLzik/Tbse5V
REz3ffY951xuLKUT1vLfcRMWzHfYcQXzX3yHHdd9jd5OWLD7Br2dsGD3LXo7
YcHuO/R2woLdD+jthAW7H9HbCevzBV08JvA=
         "], {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
           ArrowBox[{{1, 8}, {1, 14}, {2, 13}, {2, 15}, {3, 14}, {3, 16}, {4, 
            5}, {4, 15}, {5, 12}, {5, 18}, {6, 17}, {6, 19}, {7, 18}, {7, 
            20}, {8, 9}, {8, 19}, {9, 16}, {9, 22}, {10, 21}, {10, 23}, {11, 
            22}, {11, 24}, {12, 13}, {12, 23}, {13, 20}, {13, 26}, {14, 25}, {
            14, 27}, {15, 26}, {15, 28}, {16, 17}, {16, 27}, {17, 24}, {17, 
            30}, {18, 29}, {18, 31}, {19, 30}, {19, 32}, {20, 21}, {20, 31}, {
            21, 28}, {21, 34}, {22, 33}, {22, 35}, {23, 34}, {23, 36}, {24, 
            25}, {24, 35}, {25, 32}, {25, 38}, {26, 37}, {26, 39}, {27, 38}, {
            27, 40}, {28, 29}, {28, 39}, {29, 36}, {32, 33}, {33, 40}, {36, 
            37}}, 0.061894273127753294`]}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[1, 0.061894273127753294]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[2, 0.061894273127753294]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[3, 0.061894273127753294]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[4, 0.061894273127753294]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[5, 0.061894273127753294]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[6, 0.061894273127753294]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[7, 0.061894273127753294]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[8, 0.061894273127753294]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[9, 0.061894273127753294]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[10, 0.061894273127753294]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[11, 0.061894273127753294]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[12, 0.061894273127753294]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[13, 0.061894273127753294]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[14, 0.061894273127753294]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[15, 0.061894273127753294]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[16, 0.061894273127753294]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[17, 0.061894273127753294]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[18, 0.061894273127753294]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[19, 0.061894273127753294]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[20, 0.061894273127753294]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[21, 0.061894273127753294]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[22, 0.061894273127753294]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[23, 0.061894273127753294]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[24, 0.061894273127753294]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[25, 0.061894273127753294]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[26, 0.061894273127753294]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[27, 0.061894273127753294]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[28, 0.061894273127753294]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[29, 0.061894273127753294]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[30, 0.061894273127753294]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[31, 0.061894273127753294]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[32, 0.061894273127753294]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[33, 0.061894273127753294]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[34, 0.061894273127753294]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[35, 0.061894273127753294]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[36, 0.061894273127753294]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[37, 0.061894273127753294]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[38, 0.061894273127753294]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[39, 0.061894273127753294]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[40, 0.061894273127753294]}}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    FormatType->TraditionalForm,
    FrameTicks->None], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12}, {Null, 
         SparseArray[
         Automatic, {12, 12}, 0, {
          1, {{0, 1, 4, 9, 12, 13, 14, 17, 18, 19, 20, 21, 22}, {{2}, {1}, {
            3}, {11}, {2}, {4}, {7}, {10}, {12}, {3}, {5}, {6}, {4}, {4}, {
            3}, {8}, {9}, {7}, {7}, {3}, {2}, {3}}}, Pattern}]}, {
        VertexStyle -> {
          6 -> RGBColor[0.34398, 0.49112, 0.89936], 1 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 9 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 2 -> 
           RGBColor[0.97, 0.606, 0.081], 8 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 3 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 4 -> 
           RGBColor[0.97, 0.606, 0.081], 11 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 10 -> 
           RGBColor[0.97, 0.606, 0.081], 7 -> RGBColor[0.97, 0.606, 0.081], 
           12 -> RGBColor[0.97, 0.606, 0.081], 5 -> 
           RGBColor[0.34398, 0.49112, 0.89936]}, 
         VertexCoordinates -> {{0, 0}, {0.2744858206782723, 
           0.5489716413565446}, {1.921400744747906, 1.0979432827130893`}, {
           1.3724291033913614`, 0.5489716413565446}, {
           1.0979432827130893`, 0}, {1.6469149240696337`, 0}, {
           2.4703723861044504`, 0.5489716413565446}, {
           2.1958865654261785`, 0}, {2.7448582067827227`, 0}, {
           3.019344027460995, 0.5489716413565446}, {0.5489716413565446, 0}, {
           3.5683156688175397`, 0.5489716413565446}}}]]}, 
      TagBox[
       GraphicsGroupBox[
        GraphicsComplexBox[{{0., 0.}, {0.2744858206782723, 
         0.5489716413565446}, {1.921400744747906, 1.0979432827130893`}, {
         1.3724291033913614`, 0.5489716413565446}, {1.0979432827130893`, 
         0.}, {1.6469149240696337`, 0.}, {2.4703723861044504`, 
         0.5489716413565446}, {2.1958865654261785`, 0.}, {2.7448582067827227`,
          0.}, {3.019344027460995, 0.5489716413565446}, {0.5489716413565446, 
         0.}, {3.5683156688175397`, 0.5489716413565446}}, {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
           ArrowBox[{{1, 2}, {2, 3}, {2, 11}, {3, 4}, {3, 7}, {3, 10}, {3, 
            12}, {4, 5}, {4, 6}, {7, 8}, {7, 9}}, 0.03418094512764072]}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[1, 0.03418094512764072]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[2, 0.03418094512764072]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[3, 0.03418094512764072]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[4, 0.03418094512764072]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[5, 0.03418094512764072]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[6, 0.03418094512764072]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[7, 0.03418094512764072]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[8, 0.03418094512764072]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[9, 0.03418094512764072]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[10, 0.03418094512764072]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[11, 0.03418094512764072]}, 
           {RGBColor[0.97, 0.606, 0.081], 
            DiskBox[12, 0.03418094512764072]}}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    FormatType->TraditionalForm,
    FrameTicks->None], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 
        19, 20, 21, 22}, {Null, 
         SparseArray[
         Automatic, {22, 22}, 0, {
          1, {{0, 15, 30, 45, 60, 75, 90, 105, 112, 119, 126, 133, 140, 147, 
            154, 161, 168, 175, 182, 189, 196, 203, 210}, {{8}, {9}, {10}, {
            11}, {12}, {13}, {14}, {15}, {16}, {17}, {18}, {19}, {20}, {21}, {
            22}, {8}, {9}, {10}, {11}, {12}, {13}, {14}, {15}, {16}, {17}, {
            18}, {19}, {20}, {21}, {22}, {8}, {9}, {10}, {11}, {12}, {13}, {
            14}, {15}, {16}, {17}, {18}, {19}, {20}, {21}, {22}, {8}, {9}, {
            10}, {11}, {12}, {13}, {14}, {15}, {16}, {17}, {18}, {19}, {20}, {
            21}, {22}, {8}, {9}, {10}, {11}, {12}, {13}, {14}, {15}, {16}, {
            17}, {18}, {19}, {20}, {21}, {22}, {8}, {9}, {10}, {11}, {12}, {
            13}, {14}, {15}, {16}, {17}, {18}, {19}, {20}, {21}, {22}, {8}, {
            9}, {10}, {11}, {12}, {13}, {14}, {15}, {16}, {17}, {18}, {19}, {
            20}, {21}, {22}, {1}, {2}, {3}, {4}, {5}, {6}, {7}, {1}, {2}, {
            3}, {4}, {5}, {6}, {7}, {1}, {2}, {3}, {4}, {5}, {6}, {7}, {1}, {
            2}, {3}, {4}, {5}, {6}, {7}, {1}, {2}, {3}, {4}, {5}, {6}, {7}, {
            1}, {2}, {3}, {4}, {5}, {6}, {7}, {1}, {2}, {3}, {4}, {5}, {6}, {
            7}, {1}, {2}, {3}, {4}, {5}, {6}, {7}, {1}, {2}, {3}, {4}, {5}, {
            6}, {7}, {1}, {2}, {3}, {4}, {5}, {6}, {7}, {1}, {2}, {3}, {4}, {
            5}, {6}, {7}, {1}, {2}, {3}, {4}, {5}, {6}, {7}, {1}, {2}, {3}, {
            4}, {5}, {6}, {7}, {1}, {2}, {3}, {4}, {5}, {6}, {7}, {1}, {2}, {
            3}, {4}, {5}, {6}, {7}}}, Pattern}]}, {
        VertexStyle -> {
          18 -> RGBColor[0.97, 0.606, 0.081], 6 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 22 -> 
           RGBColor[0.97, 0.606, 0.081], 15 -> RGBColor[0.97, 0.606, 0.081], 
           1 -> RGBColor[0.34398, 0.49112, 0.89936], 20 -> 
           RGBColor[0.97, 0.606, 0.081], 9 -> RGBColor[0.97, 0.606, 0.081], 
           13 -> RGBColor[0.97, 0.606, 0.081], 2 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 8 -> 
           RGBColor[0.97, 0.606, 0.081], 21 -> RGBColor[0.97, 0.606, 0.081], 
           3 -> RGBColor[0.34398, 0.49112, 0.89936], 4 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 11 -> 
           RGBColor[0.97, 0.606, 0.081], 10 -> RGBColor[0.97, 0.606, 0.081], 
           19 -> RGBColor[0.97, 0.606, 0.081], 7 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 16 -> 
           RGBColor[0.97, 0.606, 0.081], 17 -> RGBColor[0.97, 0.606, 0.081], 
           14 -> RGBColor[0.97, 0.606, 0.081], 12 -> 
           RGBColor[0.97, 0.606, 0.081], 5 -> 
           RGBColor[0.34398, 0.49112, 0.89936]}, 
         VertexCoordinates -> CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQMlWy5dzRW+tB/Gd519+PhzyRNo/B37GXAAqLw9
mn44H2o+lP/B/o766XOrxJ7uh/Eh8o/gfLGmLTsTFe7B+RDzbqCpv4QmfwKN
vwPOR3UtXN4eTb89mvlo8jfgfKj70NQ/QvefPQARom91
          "]}]]}, 
      TagBox[GraphicsGroupBox[GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQMlWy5dzRW+tB/Gd519+PhzyRNo/B37GXAAqLw9
mn44H2o+lP/B/o766XOrxJ7uh/Eh8o/gfLGmLTsTFe7B+RDzbqCpv4QmfwKN
vwPOR3UtXN4eTb89mvlo8jfgfKj70NQ/QvefPQARom91
         "], {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
           ArrowBox[{{1, 8}, {1, 9}, {1, 10}, {1, 11}, {1, 12}, {1, 13}, {1, 
            14}, {1, 15}, {1, 16}, {1, 17}, {1, 18}, {1, 19}, {1, 20}, {1, 
            21}, {1, 22}, {2, 8}, {2, 9}, {2, 10}, {2, 11}, {2, 12}, {2, 
            13}, {2, 14}, {2, 15}, {2, 16}, {2, 17}, {2, 18}, {2, 19}, {2, 
            20}, {2, 21}, {2, 22}, {3, 8}, {3, 9}, {3, 10}, {3, 11}, {3, 
            12}, {3, 13}, {3, 14}, {3, 15}, {3, 16}, {3, 17}, {3, 18}, {3, 
            19}, {3, 20}, {3, 21}, {3, 22}, {4, 8}, {4, 9}, {4, 10}, {4, 
            11}, {4, 12}, {4, 13}, {4, 14}, {4, 15}, {4, 16}, {4, 17}, {4, 
            18}, {4, 19}, {4, 20}, {4, 21}, {4, 22}, {5, 8}, {5, 9}, {5, 
            10}, {5, 11}, {5, 12}, {5, 13}, {5, 14}, {5, 15}, {5, 16}, {5, 
            17}, {5, 18}, {5, 19}, {5, 20}, {5, 21}, {5, 22}, {6, 8}, {6, 
            9}, {6, 10}, {6, 11}, {6, 12}, {6, 13}, {6, 14}, {6, 15}, {6, 
            16}, {6, 17}, {6, 18}, {6, 19}, {6, 20}, {6, 21}, {6, 22}, {7, 
            8}, {7, 9}, {7, 10}, {7, 11}, {7, 12}, {7, 13}, {7, 14}, {7, 
            15}, {7, 16}, {7, 17}, {7, 18}, {7, 19}, {7, 20}, {7, 21}, {7, 
            22}}, 0.016826776294539436`]}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[1, 0.016826776294539436]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[2, 0.016826776294539436]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[3, 0.016826776294539436]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[4, 0.016826776294539436]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[5, 0.016826776294539436]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[6, 0.016826776294539436]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[7, 0.016826776294539436]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[8, 0.016826776294539436]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[9, 0.016826776294539436]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[10, 0.016826776294539436]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[11, 0.016826776294539436]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[12, 0.016826776294539436]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[13, 0.016826776294539436]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[14, 0.016826776294539436]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[15, 0.016826776294539436]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[16, 0.016826776294539436]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[17, 0.016826776294539436]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[18, 0.016826776294539436]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[19, 0.016826776294539436]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[20, 0.016826776294539436]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[21, 0.016826776294539436]}, 
           {RGBColor[0.97, 0.606, 0.081], 
            DiskBox[22, 0.016826776294539436]}}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    FormatType->TraditionalForm,
    FrameTicks->None], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 
        19, 20}, {Null, 
         SparseArray[
         Automatic, {20, 20}, 0, {
          1, {{0, 4, 8, 12, 16, 20, 24, 28, 32, 36, 40, 44, 48, 52, 56, 60, 
            64, 68, 72, 76, 80}, {{11}, {15}, {16}, {20}, {11}, {12}, {16}, {
            17}, {12}, {13}, {17}, {18}, {13}, {14}, {18}, {19}, {14}, {15}, {
            19}, {20}, {11}, {15}, {16}, {20}, {11}, {12}, {16}, {17}, {12}, {
            13}, {17}, {18}, {13}, {14}, {18}, {19}, {14}, {15}, {19}, {20}, {
            1}, {2}, {6}, {7}, {2}, {3}, {7}, {8}, {3}, {4}, {8}, {9}, {4}, {
            5}, {9}, {10}, {1}, {5}, {6}, {10}, {1}, {2}, {6}, {7}, {2}, {
            3}, {7}, {8}, {3}, {4}, {8}, {9}, {4}, {5}, {9}, {10}, {1}, {5}, {
            6}, {10}}}, Pattern}]}, {
        VertexStyle -> {
          18 -> RGBColor[0.34398, 0.49112, 0.89936], 6 -> 
           RGBColor[0.97, 0.606, 0.081], 15 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 1 -> 
           RGBColor[0.97, 0.606, 0.081], 20 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 9 -> 
           RGBColor[0.97, 0.606, 0.081], 13 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 2 -> 
           RGBColor[0.97, 0.606, 0.081], 8 -> RGBColor[0.97, 0.606, 0.081], 3 -> 
           RGBColor[0.97, 0.606, 0.081], 4 -> RGBColor[0.97, 0.606, 0.081], 
           11 -> RGBColor[0.34398, 0.49112, 0.89936], 10 -> 
           RGBColor[0.97, 0.606, 0.081], 19 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 7 -> 
           RGBColor[0.97, 0.606, 0.081], 16 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 17 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 14 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 12 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 5 -> 
           RGBColor[0.97, 0.606, 0.081]}, 
         VertexCoordinates -> {{0.9511, 0.309}, {0.5878, 0.809}, {
           0, 1.}, {-0.5878, 0.809}, {-0.9511, 
           0.309}, {-0.9511, -0.309}, {-0.5878, -0.809}, {0, -1.}, {
           0.5878, -0.809}, {0.9511, -0.309}, {0.809, 0.5878}, {0.309, 
           0.9511}, {-0.309, 0.9511}, {-0.809, 
           0.5878}, {-1., 0}, {-0.809, -0.5878}, {-0.309, -0.9511}, {
           0.309, -0.9511}, {0.809, -0.5878}, {1., 0}}}]]}, 
      TagBox[GraphicsGroupBox[GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQAWIQLWuR7pKZ/85ed9Pc98uPXbYvvi70yfH8I3vxm+e+
Bz9+ac+AAj7A5PfD5KH698P0o/H3o6nfj2befjT79qO5B24PTB2aPXB1MD7M
HJh6mD0wG9Hk96Ppx/AHmv37YeEAMw8Aw3Gbhg==
         "], {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
           ArrowBox[{{1, 11}, {1, 15}, {1, 16}, {1, 20}, {2, 11}, {2, 12}, {2,
             16}, {2, 17}, {3, 12}, {3, 13}, {3, 17}, {3, 18}, {4, 13}, {4, 
            14}, {4, 18}, {4, 19}, {5, 14}, {5, 15}, {5, 19}, {5, 20}, {6, 
            11}, {6, 15}, {6, 16}, {6, 20}, {7, 11}, {7, 12}, {7, 16}, {7, 
            17}, {8, 12}, {8, 13}, {8, 17}, {8, 18}, {9, 13}, {9, 14}, {9, 
            18}, {9, 19}, {10, 14}, {10, 15}, {10, 19}, {10, 20}}, 
            0.02261146496815286]}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[1, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[2, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[3, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[4, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[5, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[6, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[7, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[8, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[9, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[10, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[11, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[12, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[13, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[14, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[15, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[16, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[17, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[18, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[19, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[20, 0.02261146496815286]}}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    FormatType->TraditionalForm,
    FrameTicks->None], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9}, {Null, 
         SparseArray[
         Automatic, {9, 9}, 0, {
          1, {{0, 1, 4, 6, 9, 12, 13, 14, 15, 16}, {{2}, {1}, {3}, {9}, {2}, {
            4}, {3}, {5}, {8}, {4}, {6}, {7}, {5}, {5}, {4}, {2}}}, 
           Pattern}]}, {
        VertexStyle -> {
          6 -> RGBColor[0.34398, 0.49112, 0.89936], 1 -> 
           RGBColor[0.97, 0.606, 0.081], 9 -> RGBColor[0.97, 0.606, 0.081], 2 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 8 -> 
           RGBColor[0.97, 0.606, 0.081], 3 -> RGBColor[0.97, 0.606, 0.081], 4 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 7 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 5 -> 
           RGBColor[0.97, 0.606, 0.081]}, 
         VertexCoordinates -> {{5, 0}, {4, 0}, {3, 0}, {2, 0}, {1, 0}, {0, 
          0}, {1, 1}, {2, 1}, {4, 1}}}]]}, 
      TagBox[
       GraphicsGroupBox[
        GraphicsComplexBox[{{5., 0.}, {4., 0.}, {3., 0.}, {2., 0.}, {1., 
         0.}, {0., 0.}, {1., 1.}, {2., 1.}, {4., 1.}}, {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
           ArrowBox[{{1, 2}, {2, 3}, {2, 9}, {3, 4}, {4, 5}, {4, 8}, {5, 6}, {
            5, 7}}, 0.043048128342245986`]}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[1, 0.043048128342245986]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[2, 0.043048128342245986]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[3, 0.043048128342245986]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[4, 0.043048128342245986]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[5, 0.043048128342245986]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[6, 0.043048128342245986]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[7, 0.043048128342245986]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[8, 0.043048128342245986]}, 
           {RGBColor[0.97, 0.606, 0.081], 
            DiskBox[9, 0.043048128342245986]}}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    FormatType->TraditionalForm,
    FrameTicks->None], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 
        18}, {Null, 
         SparseArray[
         Automatic, {18, 18}, 0, {
          1, {{0, 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 
            34, 36}, {{2}, {18}, {1}, {3}, {2}, {4}, {3}, {5}, {4}, {6}, {
            5}, {7}, {6}, {8}, {7}, {9}, {8}, {10}, {9}, {11}, {10}, {12}, {
            11}, {13}, {12}, {14}, {13}, {15}, {14}, {16}, {15}, {17}, {16}, {
            18}, {1}, {17}}}, Pattern}]}, {
        VertexStyle -> {
          18 -> RGBColor[0.97, 0.606, 0.081], 6 -> 
           RGBColor[0.97, 0.606, 0.081], 15 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 1 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 9 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 13 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 2 -> 
           RGBColor[0.97, 0.606, 0.081], 8 -> RGBColor[0.97, 0.606, 0.081], 3 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 4 -> 
           RGBColor[0.97, 0.606, 0.081], 11 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 10 -> 
           RGBColor[0.97, 0.606, 0.081], 7 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 16 -> 
           RGBColor[0.97, 0.606, 0.081], 17 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 14 -> 
           RGBColor[0.97, 0.606, 0.081], 12 -> RGBColor[0.97, 0.606, 0.081], 
           5 -> RGBColor[0.34398, 0.49112, 0.89936]}, VertexCoordinates -> {{
            Rational[1, 2], Rational[-1, 2] Cot[Rational[1, 18] Pi]}, {
           Rational[1, 4] Csc[Rational[1, 18] Pi], Rational[-1, 4] 
            3^Rational[1, 2] Csc[Rational[1, 18] Pi]}, {
           Rational[1, 2] Cos[Rational[2, 9] Pi] Csc[Rational[1, 18] Pi], 
            Rational[-1, 2] Csc[Rational[1, 18] Pi] Sin[Rational[2, 9] Pi]}, {
           Rational[1, 2] Cos[Rational[1, 9] Pi] Csc[Rational[1, 18] Pi], -
            Cos[Rational[1, 18] Pi]}, {
           Rational[1, 2] Csc[Rational[1, 18] Pi], 0}, {
           Rational[1, 2] Cos[Rational[1, 9] Pi] Csc[Rational[1, 18] Pi], 
            Cos[Rational[1, 18] Pi]}, {
           Rational[1, 2] Cos[Rational[2, 9] Pi] Csc[Rational[1, 18] Pi], 
            Rational[1, 2] 3^Rational[1, 2] + Cos[Rational[1, 18] Pi]}, {
           Rational[1, 4] Csc[Rational[1, 18] Pi], Rational[1, 4] 
            3^Rational[1, 2] Csc[Rational[1, 18] Pi]}, {
            Rational[1, 2], Rational[1, 2] Cot[Rational[1, 18] Pi]}, {
            Rational[-1, 2], Rational[1, 2] Cot[Rational[1, 18] Pi]}, {
           Rational[-1, 4] Csc[Rational[1, 18] Pi], Rational[1, 4] 
            3^Rational[1, 2] Csc[Rational[1, 18] Pi]}, {
           Rational[-1, 2] Cos[Rational[2, 9] Pi] Csc[Rational[1, 18] Pi], 
            Rational[1, 2] 3^Rational[1, 2] + Cos[Rational[1, 18] Pi]}, {
           Rational[-1, 2] Cos[Rational[1, 9] Pi] Csc[Rational[1, 18] Pi], 
            Cos[Rational[1, 18] Pi]}, {
           Rational[-1, 2] Csc[Rational[1, 18] Pi], 0}, {
           Rational[-1, 2] Cos[Rational[1, 9] Pi] Csc[Rational[1, 18] Pi], -
            Cos[Rational[1, 18] Pi]}, {
           Rational[-1, 2] Cos[Rational[2, 9] Pi] Csc[Rational[1, 18] Pi], 
            Rational[-1, 2] Csc[Rational[1, 18] Pi] Sin[Rational[2, 9] Pi]}, {
           Rational[-1, 4] Csc[Rational[1, 18] Pi], Rational[-1, 4] 
            3^Rational[1, 2] Csc[Rational[1, 18] Pi]}, {
            Rational[-1, 2], Rational[-1, 2] Cot[Rational[1, 18] Pi]}}}]]}, 
      TagBox[
       GraphicsGroupBox[
        GraphicsComplexBox[{{0.5, -2.8356409098088546`}, {
         1.4396926207859084`, -2.4936207664831858`}, {
         2.2057370639048863`, -1.8508331567966465`}, {
         2.7057370639048868`, -0.984807753012208}, {2.879385241571817, 0.}, {
         2.7057370639048868`, 0.984807753012208}, {2.2057370639048863`, 
         1.8508331567966465`}, {1.4396926207859084`, 2.4936207664831858`}, {
         0.5, 2.8356409098088546`}, {-0.5, 
         2.8356409098088546`}, {-1.4396926207859084`, 
         2.4936207664831858`}, {-2.2057370639048863`, 
         1.8508331567966465`}, {-2.7057370639048868`, 
         0.984807753012208}, {-2.879385241571817, 
         0.}, {-2.7057370639048868`, -0.984807753012208}, \
{-2.2057370639048863`, -1.8508331567966465`}, {-1.4396926207859084`, \
-2.4936207664831858`}, {-0.5, -2.8356409098088546`}}, {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
           ArrowBox[{{1, 2}, {1, 18}, {2, 3}, {3, 4}, {4, 5}, {5, 6}, {6, 
            7}, {7, 8}, {8, 9}, {9, 10}, {10, 11}, {11, 12}, {12, 13}, {13, 
            14}, {14, 15}, {15, 16}, {16, 17}, {17, 18}}, 
            0.04721858317140225]}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[1, 0.04721858317140225]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[2, 0.04721858317140225]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[3, 0.04721858317140225]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[4, 0.04721858317140225]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[5, 0.04721858317140225]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[6, 0.04721858317140225]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[7, 0.04721858317140225]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[8, 0.04721858317140225]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[9, 0.04721858317140225]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[10, 0.04721858317140225]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[11, 0.04721858317140225]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[12, 0.04721858317140225]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[13, 0.04721858317140225]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[14, 0.04721858317140225]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[15, 0.04721858317140225]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[16, 0.04721858317140225]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[17, 0.04721858317140225]}, 
           {RGBColor[0.97, 0.606, 0.081], 
            DiskBox[18, 0.04721858317140225]}}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    FormatType->TraditionalForm,
    FrameTicks->None], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12}, {Null, 
         SparseArray[
         Automatic, {12, 12}, 0, {
          1, {{0, 2, 4, 7, 11, 14, 16, 19, 23, 26, 28, 30, 32}, {{2}, {3}, {
            1}, {4}, {1}, {4}, {7}, {2}, {3}, {5}, {8}, {4}, {6}, {9}, {5}, {
            10}, {3}, {8}, {11}, {4}, {7}, {9}, {12}, {5}, {8}, {10}, {6}, {
            9}, {7}, {12}, {8}, {11}}}, Pattern}]}, {
        VertexStyle -> {
          6 -> RGBColor[0.34398, 0.49112, 0.89936], 1 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 9 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 2 -> 
           RGBColor[0.97, 0.606, 0.081], 8 -> RGBColor[0.97, 0.606, 0.081], 3 -> 
           RGBColor[0.97, 0.606, 0.081], 4 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 11 -> 
           RGBColor[0.97, 0.606, 0.081], 10 -> RGBColor[0.97, 0.606, 0.081], 
           7 -> RGBColor[0.34398, 0.49112, 0.89936], 12 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 5 -> 
           RGBColor[0.97, 0.606, 0.081]}, 
         VertexCoordinates -> {{0, 0}, {0, -1}, {1, 0}, {1, -1}, {1, -2}, {
          1, -3}, {2, 0}, {2, -1}, {2, -2}, {2, -3}, {3, 0}, {3, -1}}}]]}, 
      TagBox[
       GraphicsGroupBox[
        GraphicsComplexBox[{{0., 0.}, {0., -1.}, {1., 0.}, {1., -1.}, {
         1., -2.}, {1., -3.}, {2., 0.}, {2., -1.}, {2., -2.}, {2., -3.}, {3., 
         0.}, {3., -1.}}, {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
           ArrowBox[{{1, 2}, {1, 3}, {2, 4}, {3, 4}, {3, 7}, {4, 5}, {4, 8}, {
            5, 6}, {5, 9}, {6, 10}, {7, 8}, {7, 11}, {8, 9}, {8, 12}, {9, 
            10}, {11, 12}}, 0.030239520958083826`]}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[1, 0.030239520958083826]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[2, 0.030239520958083826]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[3, 0.030239520958083826]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[4, 0.030239520958083826]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[5, 0.030239520958083826]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[6, 0.030239520958083826]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[7, 0.030239520958083826]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[8, 0.030239520958083826]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[9, 0.030239520958083826]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[10, 0.030239520958083826]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[11, 0.030239520958083826]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[12, 0.030239520958083826]}}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    FormatType->TraditionalForm,
    FrameTicks->None], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12}, {Null, 
         SparseArray[
         Automatic, {12, 12}, 0, {
          1, {{0, 1, 4, 6, 9, 14, 16, 17, 18, 19, 20, 21, 22}, {{2}, {1}, {
            3}, {11}, {2}, {4}, {3}, {5}, {10}, {4}, {6}, {7}, {8}, {9}, {
            5}, {12}, {5}, {5}, {5}, {4}, {2}, {6}}}, Pattern}]}, {
        VertexStyle -> {
          6 -> RGBColor[0.97, 0.606, 0.081], 1 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 9 -> 
           RGBColor[0.97, 0.606, 0.081], 2 -> RGBColor[0.97, 0.606, 0.081], 8 -> 
           RGBColor[0.97, 0.606, 0.081], 3 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 4 -> 
           RGBColor[0.97, 0.606, 0.081], 11 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 10 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 7 -> 
           RGBColor[0.97, 0.606, 0.081], 12 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 5 -> 
           RGBColor[0.34398, 0.49112, 0.89936]}, 
         VertexCoordinates -> {{0, 0}, {0.32839478871459266`, 
           0.6567895774291854}, {0.32839478871459266`, 1.3135791548583708`}, {
           1.6419739435729634`, 1.970368732287556}, {2.2987635210021486`, 
           1.3135791548583708`}, {1.3135791548583706`, 0.6567895774291854}, {
           1.970368732287556, 0.6567895774291854}, {2.6271583097167412`, 
           0.6567895774291854}, {3.283947887145927, 0.6567895774291854}, {
           2.9555530984313343`, 1.3135791548583708`}, {
           0.6567895774291853, 0}, {1.3135791548583706`, 0}}}]]}, 
      TagBox[
       GraphicsGroupBox[
        GraphicsComplexBox[{{0., 0.}, {0.32839478871459266`, 
         0.6567895774291854}, {0.32839478871459266`, 1.3135791548583708`}, {
         1.6419739435729634`, 1.970368732287556}, {2.2987635210021486`, 
         1.3135791548583708`}, {1.3135791548583706`, 0.6567895774291854}, {
         1.970368732287556, 0.6567895774291854}, {2.6271583097167412`, 
         0.6567895774291854}, {3.283947887145927, 0.6567895774291854}, {
         2.9555530984313343`, 1.3135791548583708`}, {0.6567895774291853, 
         0.}, {1.3135791548583706`, 0.}}, {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
           ArrowBox[{{1, 2}, {2, 3}, {2, 11}, {3, 4}, {4, 5}, {4, 10}, {5, 
            6}, {5, 7}, {5, 8}, {5, 9}, {6, 12}}, 0.032241748897871195`]}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[1, 0.032241748897871195]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[2, 0.032241748897871195]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[3, 0.032241748897871195]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[4, 0.032241748897871195]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[5, 0.032241748897871195]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[6, 0.032241748897871195]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[7, 0.032241748897871195]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[8, 0.032241748897871195]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[9, 0.032241748897871195]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[10, 0.032241748897871195]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[11, 0.032241748897871195]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[12, 0.032241748897871195]}}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    FormatType->TraditionalForm,
    FrameTicks->None], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}, {}, {
        VertexStyle -> {
          6 -> RGBColor[0.34398, 0.49112, 0.89936], 1 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 9 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 2 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 8 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 3 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 4 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 11 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 10 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 7 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 5 -> 
           RGBColor[0.34398, 0.49112, 0.89936]}, VertexCoordinates -> {{
            Sin[Rational[1, 11] Pi], -Cos[Rational[1, 11] Pi]}, {
            Cos[Rational[5, 22] Pi], -Sin[Rational[5, 22] Pi]}, {
            Cos[Rational[1, 22] Pi], -Sin[Rational[1, 22] Pi]}, {
            Cos[Rational[3, 22] Pi], 
            Sin[Rational[3, 22] Pi]}, {
            Sin[Rational[2, 11] Pi], 
            Cos[Rational[2, 11] Pi]}, {0, 1}, {-Sin[Rational[2, 11] Pi], 
            Cos[Rational[2, 11] Pi]}, {-Cos[Rational[3, 22] Pi], 
            Sin[Rational[3, 22] Pi]}, {-Cos[Rational[1, 22] Pi], -
            Sin[Rational[1, 22] Pi]}, {-Cos[Rational[5, 22] Pi], -
            Sin[Rational[5, 22] Pi]}, {-Sin[Rational[1, 11] Pi], -
            Cos[Rational[1, 11] Pi]}}}]]}, 
      TagBox[
       GraphicsGroupBox[
        GraphicsComplexBox[{{0.28173255684142967`, -0.9594929736144974}, {
         0.7557495743542584, -0.654860733945285}, {
         0.9898214418809327, -0.14231483827328514`}, {0.9096319953545184, 
         0.4154150130018864}, {0.5406408174555976, 0.8412535328311812}, {0., 
         1.}, {-0.5406408174555976, 0.8412535328311812}, {-0.9096319953545184,
          0.4154150130018864}, {-0.9898214418809327, -0.14231483827328514`}, \
{-0.7557495743542584, -0.654860733945285}, {-0.28173255684142967`, \
-0.9594929736144974}}, {{}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[1, 0.02244607451670738]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[2, 0.02244607451670738]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[3, 0.02244607451670738]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[4, 0.02244607451670738]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[5, 0.02244607451670738]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[6, 0.02244607451670738]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[7, 0.02244607451670738]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[8, 0.02244607451670738]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[9, 0.02244607451670738]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[10, 0.02244607451670738]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[11, 0.02244607451670738]}}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    FormatType->TraditionalForm,
    FrameTicks->None], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 
        19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 
        36}, {Null, 
         SparseArray[
         Automatic, {36, 36}, 0, {
          1, {{0, 3, 6, 9, 12, 15, 18, 21, 24, 27, 30, 33, 36, 39, 42, 45, 48,
             51, 54, 57, 60, 63, 66, 69, 72, 75, 78, 81, 84, 87, 90, 93, 96, 
            99, 102, 105, 108}, {{2}, {18}, {20}, {1}, {3}, {19}, {2}, {4}, {
            22}, {3}, {5}, {21}, {4}, {6}, {24}, {5}, {7}, {23}, {6}, {8}, {
            26}, {7}, {9}, {25}, {8}, {10}, {28}, {9}, {11}, {27}, {10}, {
            12}, {30}, {11}, {13}, {29}, {12}, {14}, {32}, {13}, {15}, {31}, {
            14}, {16}, {34}, {15}, {17}, {33}, {16}, {18}, {36}, {1}, {17}, {
            35}, {2}, {20}, {36}, {1}, {19}, {21}, {4}, {20}, {22}, {3}, {
            21}, {23}, {6}, {22}, {24}, {5}, {23}, {25}, {8}, {24}, {26}, {
            7}, {25}, {27}, {10}, {26}, {28}, {9}, {27}, {29}, {12}, {28}, {
            30}, {11}, {29}, {31}, {14}, {30}, {32}, {13}, {31}, {33}, {16}, {
            32}, {34}, {15}, {33}, {35}, {18}, {34}, {36}, {17}, {19}, {35}}},
            Pattern}]}, {
        VertexStyle -> {
          5 -> RGBColor[0.34398, 0.49112, 0.89936], 15 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 22 -> 
           RGBColor[0.97, 0.606, 0.081], 9 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 36 -> 
           RGBColor[0.97, 0.606, 0.081], 14 -> RGBColor[0.97, 0.606, 0.081], 
           19 -> RGBColor[0.34398, 0.49112, 0.89936], 6 -> 
           RGBColor[0.97, 0.606, 0.081], 26 -> RGBColor[0.97, 0.606, 0.081], 
           18 -> RGBColor[0.97, 0.606, 0.081], 2 -> 
           RGBColor[0.97, 0.606, 0.081], 12 -> RGBColor[0.97, 0.606, 0.081], 
           17 -> RGBColor[0.34398, 0.49112, 0.89936], 31 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 34 -> 
           RGBColor[0.97, 0.606, 0.081], 7 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 10 -> 
           RGBColor[0.97, 0.606, 0.081], 24 -> RGBColor[0.97, 0.606, 0.081], 
           30 -> RGBColor[0.97, 0.606, 0.081], 8 -> 
           RGBColor[0.97, 0.606, 0.081], 33 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 11 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 13 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 29 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 1 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 3 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 21 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 27 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 28 -> 
           RGBColor[0.97, 0.606, 0.081], 25 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 4 -> 
           RGBColor[0.97, 0.606, 0.081], 32 -> RGBColor[0.97, 0.606, 0.081], 
           16 -> RGBColor[0.97, 0.606, 0.081], 35 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 20 -> 
           RGBColor[0.97, 0.606, 0.081], 23 -> 
           RGBColor[0.34398, 0.49112, 0.89936]}, 
         VertexCoordinates -> CompressedData["
1:eJxTTMoPSmViYGBQAWIQDQEf7GEskXXuD6tE3tmL3zz3PfjxVfuA3ul5Qs0v
7H/VZe0pmfwEqu6BffOBUwtdt722FwIzjtm3vg7cIdf6HsbfD+ND1e+HqYea
tx9mHtS+/TD7oO7Zj+YemPx+NP370czfj2b/fjT37Udz/340/+1H8z/MHQ4w
96z6eMk3SeAfVP4p1D8/oPq/wNwPNf+3fcbEtzX2pteg9v+H8ffD+DD/wtRD
zdsPMw9q336YfVBnHEBzD0x+P5r+/Wjm70ezfz+a+/ajuX8/mv/2o/l/PwBQ
RRRT
          "]}]]}, 
      TagBox[GraphicsGroupBox[GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGBQAWIQDQEf7GEskXXuD6tE3tmL3zz3PfjxVfuA3ul5Qs0v
7H/VZe0pmfwEqu6BffOBUwtdt722FwIzjtm3vg7cIdf6HsbfD+ND1e+HqYea
tx9mHtS+/TD7oO7Zj+YemPx+NP370czfj2b/fjT37Udz/340/+1H8z/MHQ4w
96z6eMk3SeAfVP4p1D8/oPq/wNwPNf+3fcbEtzX2pteg9v+H8ffD+DD/wtRD
zdsPMw9q336YfVBnHEBzD0x+P5r+/Wjm70ezfz+a+/ajuX8/mv/2o/l/PwBQ
RRRT
         "], {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
           ArrowBox[{{1, 2}, {1, 18}, {1, 20}, {2, 3}, {2, 19}, {3, 4}, {3, 
            22}, {4, 5}, {4, 21}, {5, 6}, {5, 24}, {6, 7}, {6, 23}, {7, 8}, {
            7, 26}, {8, 9}, {8, 25}, {9, 10}, {9, 28}, {10, 11}, {10, 27}, {
            11, 12}, {11, 30}, {12, 13}, {12, 29}, {13, 14}, {13, 32}, {14, 
            15}, {14, 31}, {15, 16}, {15, 34}, {16, 17}, {16, 33}, {17, 18}, {
            17, 36}, {18, 35}, {19, 20}, {19, 36}, {20, 21}, {21, 22}, {22, 
            23}, {23, 24}, {24, 25}, {25, 26}, {26, 27}, {27, 28}, {28, 29}, {
            29, 30}, {30, 31}, {31, 32}, {32, 33}, {33, 34}, {34, 35}, {35, 
            36}}, 0.03700564971751412]}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[1, 0.03700564971751412]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[2, 0.03700564971751412]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[3, 0.03700564971751412]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[4, 0.03700564971751412]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[5, 0.03700564971751412]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[6, 0.03700564971751412]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[7, 0.03700564971751412]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[8, 0.03700564971751412]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[9, 0.03700564971751412]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[10, 0.03700564971751412]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[11, 0.03700564971751412]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[12, 0.03700564971751412]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[13, 0.03700564971751412]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[14, 0.03700564971751412]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[15, 0.03700564971751412]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[16, 0.03700564971751412]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[17, 0.03700564971751412]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[18, 0.03700564971751412]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[19, 0.03700564971751412]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[20, 0.03700564971751412]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[21, 0.03700564971751412]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[22, 0.03700564971751412]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[23, 0.03700564971751412]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[24, 0.03700564971751412]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[25, 0.03700564971751412]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[26, 0.03700564971751412]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[27, 0.03700564971751412]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[28, 0.03700564971751412]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[29, 0.03700564971751412]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[30, 0.03700564971751412]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[31, 0.03700564971751412]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[32, 0.03700564971751412]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[33, 0.03700564971751412]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[34, 0.03700564971751412]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[35, 0.03700564971751412]}, 
           {RGBColor[0.97, 0.606, 0.081], 
            DiskBox[36, 0.03700564971751412]}}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    FormatType->TraditionalForm,
    FrameTicks->None], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10}, {Null, 
         SparseArray[
         Automatic, {10, 10}, 0, {
          1, {{0, 1, 4, 7, 10, 11, 12, 15, 16, 17, 18}, {{2}, {1}, {3}, {
            10}, {2}, {4}, {7}, {3}, {5}, {6}, {4}, {4}, {3}, {8}, {9}, {7}, {
            7}, {2}}}, Pattern}]}, {
        VertexStyle -> {
          6 -> RGBColor[0.97, 0.606, 0.081], 1 -> 
           RGBColor[0.97, 0.606, 0.081], 9 -> RGBColor[0.97, 0.606, 0.081], 2 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 8 -> 
           RGBColor[0.97, 0.606, 0.081], 3 -> RGBColor[0.97, 0.606, 0.081], 4 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 10 -> 
           RGBColor[0.97, 0.606, 0.081], 7 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 5 -> 
           RGBColor[0.97, 0.606, 0.081]}, 
         VertexCoordinates -> {{0, -3}, {0, -2}, {
           Rational[1, 2] 3^Rational[1, 2], 
            Rational[-3, 2]}, {Rational[1, 2] 3^Rational[1, 2], 
            Rational[-1, 2]}, {0, 0}, {3^Rational[1, 2], 0}, {
           3^Rational[1, 2], -2}, {3^Rational[1, 2], -3}, {
           Rational[3, 2] 3^Rational[1, 2], 
            Rational[-3, 2]}, {Rational[-1, 2] 3^Rational[1, 2], 
            Rational[-3, 2]}}}]]}, 
      TagBox[
       GraphicsGroupBox[
        GraphicsComplexBox[{{0., -3.}, {0., -2.}, {
         0.8660254037844386, -1.5}, {0.8660254037844386, -0.5}, {0., 0.}, {
         1.7320508075688772`, 0.}, {1.7320508075688772`, -2.}, {
         1.7320508075688772`, -3.}, {
         2.598076211353316, -1.5}, {-0.8660254037844386, -1.5}}, {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
           ArrowBox[{{1, 2}, {2, 3}, {2, 10}, {3, 4}, {3, 7}, {4, 5}, {4, 
            6}, {7, 8}, {7, 9}}, 0.03347773481857537]}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[1, 0.03347773481857537]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[2, 0.03347773481857537]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[3, 0.03347773481857537]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[4, 0.03347773481857537]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[5, 0.03347773481857537]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[6, 0.03347773481857537]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[7, 0.03347773481857537]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[8, 0.03347773481857537]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[9, 0.03347773481857537]}, 
           {RGBColor[0.97, 0.606, 0.081], 
            DiskBox[10, 0.03347773481857537]}}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    FormatType->TraditionalForm,
    FrameTicks->None], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[CompressedData["
1:eJwl1kO0GAYQBdAf27Ztmw0a22xs204ap7Ft227YxrZtO+n9p4t73nY2b2aS
NGpfuV2QgICAtEEDAgJTBAQjOCEISShCE4awhCM8EYhIJCIThahEIzoxiEks
YhOHuMQjPglISCISk4SkJCM5KUhJKlKTJnBO0pGeDGQkE5nJQlaykZ0c5CQX
uclDXvKRnwIUpBCFKUJRfqMYxSlBSX6nFKUpQ1nKUZ4KVKQSlalCVapRnRrU
pBa1qUNd6lGfBjTkDxrRmCY0pRnNaUFLWtGaNrSlHe3pQEc60ZkudKUb3elB
T3rRmz70pR/9GcBABjGYIQxlGMMZwZ+MZBSjGcNYxjGeCfzFRCYxmSlMZRrT
mcFMZjGbOcxlHvNZwEIWsZglLGUZy1nBSlaxmjWsZR3r2cBGNrGZLWxlG9vZ
wU52sZs97GUf+znAQf7mEIc5wlGOcZx/+JcTnOQUpznDWc5xngtc5BKXucJV
rnGdG9zkFre5w13ucZ8HPOQRj3nCU57xnBe85BWvecNb3vGeD3zkE5/5wle+
8Z0f/OQXgeUPQlCCEZwQhCQUoQlDWMIRnghEJBKRiUJUohGdGMQkFrGJQ1zi
EZ8EJCQRiUlCUpKRnBSkJBWpSUNa0pGeDGQkE5nJQlaykZ0c5CQXuclDXvKR
nwIUpBCFKUJRfqMYxSlBSX6nFKUpQ1nKUZ4KVKQSlalCVapRnRrUpBa1qUNd
6lGfBjTkDxrRmCY0pRnNaUFLWtGaNrQlcHm3pwMd6URnutCVbnSnBz3pRW/6
0Jd+9GcAAxnEYIYwlGEMZwR/MpJRjGYMYxnHeCbwFxOZxGSmMJVpTGcGM5nF
bOYwl3nMZwELWcRilrCUZSxnBStZxWrWsJZ1rGcDG9nEZrawlW1sZwc72cVu
9rCXfeznAAf5m0Mc5ghHOcZx/uFfTnCSU5zmDGc5x3kucJFLXOYKV7nGdW5w
k1vc5g53ucd9HvCQRzzmCU95xnNe8JJXvOYNb3nHez7wkU985gtf+cZ3fvCT
XwQe/iAEJRjBCUFIQhGaMIQlHOGJQEQiEZkoRCUa0YlBTGIRmzjEJR7xSUBC
EpGYJCQlGclJQUpSkZo0Qf//U/4DzBcFzA==
        "], {Null, 
         SparseArray[Automatic, {554, 554}, 0, {1, {CompressedData["
1:eJwl1YOyGAYQBdDkxTYavzQ2Gtu2nca23dho1Ma2bTe2bdtGT5udOT+we+9s
YIO2FdsEDRIkSOqAIP9PMEIShvBEIioxiE1cEhBIEpKTirRkIDNZyUFu8lGQ
IhSnFGWpQGWqUZM61KchTWhOK9rSgc50oyd9+IOBDGE4oxjLeCbxN9OYyRzm
s4ilrGA169jIFrazi73s5xBHOcFpznGRK1znFnd5wGOe8ZI3vOcTX/lBgAWH
IDThiEgUohOLOMQnEb+SjJSkIT2ZyEJ2cpGXAhSmGCUpQ3kqUZUa1KYeDWhM
M1ry38Hb04mu9KA3/RjAYIYxkjH8yUT+YiozmM08FrKE5axiLRvYzDZ2sod/
OMgRjnOKs1zgMte4yR3u84invOA17/jIF74TVF6DE4qwRCAy0YjJL8QjIYlJ
SoqAnzlPR0Z+Ixs5yUN+ClGUEpSmHBWpQnVqUZffaURTWtCadnSkC93pRV/6
M4ihjGA045jAZKYwnVnMZQGLWcZK1rCeTWxlB7vZxwEOc4yTnOE8l7jKDW5z
j4c84TmveMsHPvMt4Gf5gxGSMIQnElGJQWzikoBAkpCcVKQlA5nJSg5yk4+C
FKE4pShLBSpTjZrUoT4NaUJzWtGWDnSmGz3pwx8MZAjDGcVYxjOJv5nGTOYw
n0UsZQWrWcdGtrCdXexlP4c4yglOc46LXOE6t7jLAx7zjJe84T2f+MoPAoLr
P6EJR0SiEJ1YxCE+ifiVZKQkDenJRBayk4u8FKAwxShJGcpTiarUoDb1aEBj
mtGSNrSnE13pQW/6MYDBDGMkY/iTifzFVGYwm3ksZAnLWcVaNrCZbexkD/9w
kCMc5xRnucBlrnGTO9znEU95wWve8ZEvfCdoCP0nFGGJQGSiEZNfiEdCEpOU
FKQmHRn5jWzkJA/5KURRSlCaclSkCtWpRV1+pxFNaUFr2tGRLnSnF33pzyCG
MoLRjGMCk5nCdGYxlwUsZhkrWcN6NrGVHexmHwc4zDFOcobzXOIqN7jNPR7y
hOe84i0f+My3ED8ffzBCEobwRCIqMYhNXBIQSBKSk4q0ZCAzWclBbvJRkCIU
pxRlqUBlqlGTOtSnIU1oTiva0oHOdKMnffgX10QRhQ==
            "], CompressedData["
1:eJxNmXXUV1UWhs/5SQhKgwlII9gtNgrYLRYmIChtYiAGFkop2K2omNjd3a0z
44w9xozdM/Z+1n5mrfnjXed897fP3u/e+733nnu+7sMn7jShUUqZ2qyUGiPz
RQJNSv7dNLCo8+aBls7DvLTQfrFAa9csHmijj1aBttpwvZ02XO+gDWvbGwff
S+ibmB2NSZxO2vQIZ8s30qZnjP0badMrxn6NXNdbG/z18To++moPl6UDneWy
ZGAZuSwVWNZ4K+sXTisaG04rGRub1fSLzSrGw2ZVefSJsV9JPn1jXKEkn+Vj
7F+SD/M19YnN6sZl7RrGZd3a+mfdWsbF9zrG6oJtYL1A10D3wLqB5QLdAgNK
2vQObOj1XoH1te8Z2OB/NQh/XRtZp6Vj7NywTsRpZI2w6d7IOmKzXCPriE23
RsbvpD28OugTLh31SfyltCf+EvqE45L6pCabBIaWrNVGgZ1L1mfjwC7WcjOv
U6uB2lOfTbUh/zHGpkYHyokaHSRX8h8vD2o0Vh7UaJxcd49xn5J57RrjXiXz
2i3GvUvmNSzG/UvmtUeM+5bMa88Y9yuZF36GWS/87GFN8bOnNcV2uBzwN0IO
+BspT2IeYF7wGmUu8BptjgPs8yT1QW4T1Ac5TwwMDmwdODQwJLBN4ODAoMBW
gUMCW2hzRGBLbQ4LbK7N4frZKXCGfnYITNfPjoHT9bN9YJZ+tg3M0M92gZle
WzS4t2nktRYxtmrkuuYxtm6k78VibNdI34vH2LaR8VvG2L6RGlnEOTqq2qCj
hmvRSDNjoaMmxkJHTY21i36wG6offttZP03s3WfxgPytZn//FeMvNfv77xh/
rdnbz3zYDtPm95r9x+aPwDeBn2vG/SrG/9Tk9nWM/63J7fsYf6rJ/9sYf6iZ
43cx/lgzxy+1gd/n2pDDF9pU58Rqqg2xmrmWWOT1bk0e9OPtmjzoxztypR8f
1OREP96ryYN+vF+TX0u1embJ+qDV2SXrg1bnlKwPmp9Xsj5o/qyS9UHzc0vW
Bw19pH909qH+0dk/5YCGPpUnOvtYnujsE3N5pCRv1jxUkjd+Hy7JG7+Pl8yf
NY+WzB+/j5XMH79/C/yjZv/+EnirZo//Gvh7zR4/FXjZ2j0ReNHaPRl4yfo+
G3jB2j0deM6aPhN43jry+2v2j99fscf8/qo9Js6b9o84r9tj4rxhj1/z+hf6
wP5LfWCDFu6VNznfJ29yvkfe1OUBeVO7B+VK7e43B+p7X8n60N97StYHDdxb
sj5o4MGSdaS/95esIxp4oGQd0cDtMX/Eft0R84fs120xf9h+3RXzx+3X3TF/
1H7dGfPH7Nc5MX8BToFzA8/BKXB24Hk4Bc4PvAynwAWBF+EUOC/wEpwCrwV+
kt8rMf5gDq/G+KM5vKkNeb6uDbV4Q5u31FunmjmgyQ4180STHWvmid6WqpkD
mlyiZp5ocsmaeT4Z8+W0eSrm3bR5IubdtXkm5j2M9WzMexrr6Zj3+r9Ybew5
sVrZc2K1Vhdwbm/P4dzWnsO5nbpoFlhMrTQJLK6emgZaqqdFAouqlRpooZ4a
gebq6WeeGUXt8swo6ptnRkkd83tRv1z7vaTGsf2jpMbx08z7AD9welk/cOJe
KcbmfsIHnLjn8AHX5+TY1Rzh2Nk6kEcX60Cuy1orcl3aelKPZawn/aIffe0X
/ehtv+hHH7TOeyGwCVrn3REYiNZ5dwQ21ebTwBBtPglsrs3HgS1qXvsiMKim
7ZeBzWr+/nlgcMzf12b9mH/g9Q1i/p7268X8HfmsE/N35bNuzN+WzwDXfh3Y
27XfBIbp/6vAXq79LrCna78P7K7/bwN71LzHro1xYc378JoYb6x5Hy6I8aaa
9+oNMd5a836+Lsaba97P18d4S817mt/vqHnf8/ttNe97fr+95j1NnLtr3vfE
ubPmfU+cu2ryvbJmbPheXpMffK+oyY+8r64Zm7zn1+RH3lfV5Mez4mJ98qy4
0Lg8Ty4yLs+Ky+TGs+IS+fM8uVT+P7qW335yLb/9oH/Wnxu4QD9nB87TzzmB
8/UzSztqMUM76jVTO+p1utfJ4Qyvk+d01873+ixzn66vG1w709wnGBeeE+UG
z0lyIxfuy1MDZ9W8L08LzK15754SmFfzXjwpcGbNe/TkwOya9+60wBxjnVCz
LsQ6sWZdiHV8zdrxHDjGeDwHphiPZ8XRxuPen2o8ngnHGY9nxbHG+0U/2P2q
H+x+0w92hwaOUD8HBw5TP4cEDlc/R8kTbUyWJ9o40lzu1Ad2N+kDu4X6wA7t
HqRfdDnG2Gj3QGOj3b2sOT3d277Q02H2hZ7yvNrPmvNM28e+8Ezb177w3NvN
XvBsHGoveDbuai+4n8fLh3t+rHy458fJ5yDn4+U51r/HOOf66Jp6muEczc10
jubQ38jAAYFRgV0Cw+W5U2B/c9k5MMJc9tVmhLnu79/7OOf6moENzWWtwEbm
u3ZgY/PdynjoZ2vjoZ8tjXeqNjvU1Ac2O9bUBzbb19TQttqgn+20QT/baIPG
eO5vYc95N/DsRxe8G3j2o4vB2qCJzbRBN4O0mSx34p1sfsSbZn7EQ/Mb6Av9
racvNLq+vtDoADmhuXXkhObWlROaWzWwun1ZObCGvVolsJo9W1Ebrq+kDddX
0GaUcdHuJLmh3QlyQ7sT5YDmxsgBzR0oTzSH1voZDy79jQeX5Y23qjb0eKg2
6GBXbdABumef1dtass/qYy3Zi/W1lj21wVcvbfDVQxt8sS9AP2iQvQP6QYPs
HdAPOu0iL+J2lTvcOssdbq1dj77auB59tTIGGmzneurb3vXUt60xVtcPe8sd
9cP+c3v9sP/cQT8drR1+Olk7/HSwvh3Nub+/97B+HaxLP+NQu+2MQ+22MQ71
RaMLS+4JePfeWHJPwLv3ppJ7At7Pt5bcE/DuvbnknoB37y0l9wS8n/nuYB/A
u5RvE/YBvG/5NmGvwPuW7w72AbyT+TZhH8B7m28T9gq8ty81NnuZy0ryYy9z
ifzYy1whJ/ZBV8qD/dHl8ntfm6vcY2FztXsvbOa7JyPWAvdbxLrW/RaxrnFP
ho/rS+7v8HFDyf0dPq4ruQdc4PwjfWDzoT5Yy17yopLfUexJLy75HcWe9MKS
31FPasP32LPa8D32tDZ8j7GvPankdxS1OLnkdxT1mlbyO4p6nVrye4xanFby
e4wanVLye4zazfE6vTrT6/Rqtmvp51z906t5+qdXZ8mBfnKGdbh8Oec6Qr6c
cx1mTlMDJ1iX4wLHW69jAydaoyPNgT4cZZ70YbJ50qtjzId+TjFP+nm0uV2h
zVR7NcV487U51n4eKZ9rjXWivZostwXmdbo9IK8z7AF5TbdP5D3TXpL3LHtJ
3jPsN+egE+XBWekkeXBWOkGu47wOj/Haw2OsNnAdaR3oyXBrRU9GWCt6Mtr6
0NsDrAm9HWWtZms/zrxHGm+yPsdam1HynqKfMdZvtLypMefonANyLshZO2d/
nB1y1r5JybNDztcHljxf5EydM0HOIDlr50yQM0jO/jnb59yT/w9w/s+5J/8f
4Px/a22IMUQbYgzSBh6D9UGMLfVBjM31AQ/OR/mfCmfxnJ3zPxXO4ruV/J8K
Z/HdS/5PhfN3zsv5Pwrn8pyj8/8VzuJ76Qe7Lq7Frqs+seP/AH8CifQN/g==

            "]}, Pattern}]}, {
        VertexStyle -> {
          183 -> RGBColor[0.97, 0.606, 0.081], 157 -> 
           RGBColor[0.97, 0.606, 0.081], 426 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 367 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 254 -> 
           RGBColor[0.97, 0.606, 0.081], 25 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 395 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 55 -> 
           RGBColor[0.97, 0.606, 0.081], 452 -> RGBColor[0.97, 0.606, 0.081], 
           105 -> RGBColor[0.34398, 0.49112, 0.89936], 90 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 27 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 442 -> 
           RGBColor[0.97, 0.606, 0.081], 15 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 348 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 358 -> 
           RGBColor[0.97, 0.606, 0.081], 209 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 469 -> 
           RGBColor[0.97, 0.606, 0.081], 233 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 539 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 98 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 420 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 328 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 38 -> 
           RGBColor[0.97, 0.606, 0.081], 484 -> RGBColor[0.97, 0.606, 0.081], 
           325 -> RGBColor[0.34398, 0.49112, 0.89936], 102 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 99 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 174 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 472 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 473 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 398 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 71 -> 
           RGBColor[0.97, 0.606, 0.081], 384 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 41 -> 
           RGBColor[0.97, 0.606, 0.081], 536 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 114 -> 
           RGBColor[0.97, 0.606, 0.081], 515 -> RGBColor[0.97, 0.606, 0.081], 
           282 -> RGBColor[0.97, 0.606, 0.081], 553 -> 
           RGBColor[0.97, 0.606, 0.081], 433 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 377 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 260 -> 
           RGBColor[0.97, 0.606, 0.081], 223 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 479 -> 
           RGBColor[0.97, 0.606, 0.081], 385 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 172 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 152 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 292 -> 
           RGBColor[0.97, 0.606, 0.081], 504 -> RGBColor[0.97, 0.606, 0.081], 
           294 -> RGBColor[0.97, 0.606, 0.081], 165 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 75 -> 
           RGBColor[0.97, 0.606, 0.081], 509 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 64 -> 
           RGBColor[0.97, 0.606, 0.081], 312 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 217 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 491 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 192 -> 
           RGBColor[0.97, 0.606, 0.081], 63 -> RGBColor[0.97, 0.606, 0.081], 
           410 -> RGBColor[0.34398, 0.49112, 0.89936], 371 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 85 -> 
           RGBColor[0.97, 0.606, 0.081], 512 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 261 -> 
           RGBColor[0.97, 0.606, 0.081], 160 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 3 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 145 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 445 -> 
           RGBColor[0.97, 0.606, 0.081], 374 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 231 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 147 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 158 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 318 -> 
           RGBColor[0.97, 0.606, 0.081], 159 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 428 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 417 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 503 -> 
           RGBColor[0.97, 0.606, 0.081], 86 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 554 -> 
           RGBColor[0.97, 0.606, 0.081], 181 -> RGBColor[0.97, 0.606, 0.081], 
           342 -> RGBColor[0.97, 0.606, 0.081], 109 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 94 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 61 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 532 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 84 -> 
           RGBColor[0.97, 0.606, 0.081], 245 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 477 -> 
           RGBColor[0.97, 0.606, 0.081], 368 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 76 -> 
           RGBColor[0.97, 0.606, 0.081], 516 -> RGBColor[0.97, 0.606, 0.081], 
           21 -> RGBColor[0.97, 0.606, 0.081], 169 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 281 -> 
           RGBColor[0.97, 0.606, 0.081], 241 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 87 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 310 -> 
           RGBColor[0.97, 0.606, 0.081], 283 -> RGBColor[0.97, 0.606, 0.081], 
           148 -> RGBColor[0.34398, 0.49112, 0.89936], 461 -> 
           RGBColor[0.97, 0.606, 0.081], 284 -> RGBColor[0.97, 0.606, 0.081], 
           459 -> RGBColor[0.97, 0.606, 0.081], 518 -> 
           RGBColor[0.97, 0.606, 0.081], 423 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 95 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 304 -> 
           RGBColor[0.97, 0.606, 0.081], 133 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 179 -> 
           RGBColor[0.97, 0.606, 0.081], 243 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 401 -> 
           RGBColor[0.97, 0.606, 0.081], 441 -> RGBColor[0.97, 0.606, 0.081], 
           72 -> RGBColor[0.97, 0.606, 0.081], 513 -> 
           RGBColor[0.97, 0.606, 0.081], 431 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 525 -> 
           RGBColor[0.97, 0.606, 0.081], 251 -> RGBColor[0.97, 0.606, 0.081], 
           218 -> RGBColor[0.34398, 0.49112, 0.89936], 42 -> 
           RGBColor[0.97, 0.606, 0.081], 498 -> RGBColor[0.97, 0.606, 0.081], 
           390 -> RGBColor[0.97, 0.606, 0.081], 103 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 272 -> 
           RGBColor[0.97, 0.606, 0.081], 66 -> RGBColor[0.97, 0.606, 0.081], 
           315 -> RGBColor[0.34398, 0.49112, 0.89936], 1 -> 
           RGBColor[0.97, 0.606, 0.081], 24 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 54 -> 
           RGBColor[0.97, 0.606, 0.081], 376 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 502 -> 
           RGBColor[0.97, 0.606, 0.081], 329 -> RGBColor[0.97, 0.606, 0.081], 
           255 -> RGBColor[0.97, 0.606, 0.081], 200 -> 
           RGBColor[0.97, 0.606, 0.081], 220 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 458 -> 
           RGBColor[0.97, 0.606, 0.081], 190 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 471 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 387 -> 
           RGBColor[0.97, 0.606, 0.081], 146 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 262 -> 
           RGBColor[0.97, 0.606, 0.081], 295 -> RGBColor[0.97, 0.606, 0.081], 
           382 -> RGBColor[0.97, 0.606, 0.081], 389 -> 
           RGBColor[0.97, 0.606, 0.081], 208 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 320 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 212 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 4 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 7 -> 
           RGBColor[0.97, 0.606, 0.081], 534 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 404 -> 
           RGBColor[0.97, 0.606, 0.081], 354 -> RGBColor[0.97, 0.606, 0.081], 
           287 -> RGBColor[0.97, 0.606, 0.081], 140 -> 
           RGBColor[0.97, 0.606, 0.081], 408 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 205 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 411 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 100 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 520 -> 
           RGBColor[0.97, 0.606, 0.081], 379 -> RGBColor[0.97, 0.606, 0.081], 
           123 -> RGBColor[0.34398, 0.49112, 0.89936], 162 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 526 -> 
           RGBColor[0.97, 0.606, 0.081], 12 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 65 -> 
           RGBColor[0.97, 0.606, 0.081], 522 -> RGBColor[0.97, 0.606, 0.081], 
           228 -> RGBColor[0.34398, 0.49112, 0.89936], 211 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 280 -> 
           RGBColor[0.97, 0.606, 0.081], 232 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 541 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 8 -> 
           RGBColor[0.97, 0.606, 0.081], 127 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 182 -> 
           RGBColor[0.97, 0.606, 0.081], 438 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 519 -> 
           RGBColor[0.97, 0.606, 0.081], 136 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 273 -> 
           RGBColor[0.97, 0.606, 0.081], 57 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 274 -> 
           RGBColor[0.97, 0.606, 0.081], 302 -> RGBColor[0.97, 0.606, 0.081], 
           74 -> RGBColor[0.97, 0.606, 0.081], 464 -> 
           RGBColor[0.97, 0.606, 0.081], 352 -> RGBColor[0.97, 0.606, 0.081], 
           184 -> RGBColor[0.97, 0.606, 0.081], 393 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 330 -> 
           RGBColor[0.97, 0.606, 0.081], 196 -> RGBColor[0.97, 0.606, 0.081], 
           549 -> RGBColor[0.97, 0.606, 0.081], 412 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 296 -> 
           RGBColor[0.97, 0.606, 0.081], 451 -> RGBColor[0.97, 0.606, 0.081], 
           177 -> RGBColor[0.34398, 0.49112, 0.89936], 497 -> 
           RGBColor[0.97, 0.606, 0.081], 457 -> RGBColor[0.97, 0.606, 0.081], 
           345 -> RGBColor[0.34398, 0.49112, 0.89936], 298 -> 
           RGBColor[0.97, 0.606, 0.081], 343 -> RGBColor[0.97, 0.606, 0.081], 
           551 -> RGBColor[0.97, 0.606, 0.081], 344 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 113 -> 
           RGBColor[0.97, 0.606, 0.081], 259 -> RGBColor[0.97, 0.606, 0.081], 
           506 -> RGBColor[0.97, 0.606, 0.081], 289 -> 
           RGBColor[0.97, 0.606, 0.081], 242 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 314 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 219 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 285 -> 
           RGBColor[0.97, 0.606, 0.081], 244 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 37 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 170 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 43 -> 
           RGBColor[0.97, 0.606, 0.081], 276 -> RGBColor[0.97, 0.606, 0.081], 
           246 -> RGBColor[0.34398, 0.49112, 0.89936], 39 -> 
           RGBColor[0.97, 0.606, 0.081], 124 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 375 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 432 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 383 -> 
           RGBColor[0.97, 0.606, 0.081], 466 -> RGBColor[0.97, 0.606, 0.081], 
           130 -> RGBColor[0.34398, 0.49112, 0.89936], 135 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 106 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 291 -> 
           RGBColor[0.97, 0.606, 0.081], 347 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 483 -> 
           RGBColor[0.97, 0.606, 0.081], 307 -> RGBColor[0.97, 0.606, 0.081], 
           424 -> RGBColor[0.34398, 0.49112, 0.89936], 540 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 264 -> 
           RGBColor[0.97, 0.606, 0.081], 449 -> RGBColor[0.97, 0.606, 0.081], 
           351 -> RGBColor[0.97, 0.606, 0.081], 303 -> 
           RGBColor[0.97, 0.606, 0.081], 11 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 58 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 397 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 153 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 225 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 360 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 529 -> 
           RGBColor[0.97, 0.606, 0.081], 51 -> RGBColor[0.97, 0.606, 0.081], 
           194 -> RGBColor[0.97, 0.606, 0.081], 48 -> 
           RGBColor[0.97, 0.606, 0.081], 533 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 265 -> 
           RGBColor[0.97, 0.606, 0.081], 478 -> RGBColor[0.97, 0.606, 0.081], 
           20 -> RGBColor[0.97, 0.606, 0.081], 33 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 168 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 224 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 547 -> 
           RGBColor[0.97, 0.606, 0.081], 388 -> RGBColor[0.97, 0.606, 0.081], 
           391 -> RGBColor[0.97, 0.606, 0.081], 524 -> 
           RGBColor[0.97, 0.606, 0.081], 335 -> RGBColor[0.97, 0.606, 0.081], 
           489 -> RGBColor[0.34398, 0.49112, 0.89936], 115 -> 
           RGBColor[0.97, 0.606, 0.081], 476 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 173 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 271 -> 
           RGBColor[0.97, 0.606, 0.081], 45 -> RGBColor[0.97, 0.606, 0.081], 
           23 -> RGBColor[0.34398, 0.49112, 0.89936], 402 -> 
           RGBColor[0.97, 0.606, 0.081], 22 -> RGBColor[0.97, 0.606, 0.081], 
           341 -> RGBColor[0.97, 0.606, 0.081], 313 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 339 -> 
           RGBColor[0.97, 0.606, 0.081], 195 -> RGBColor[0.97, 0.606, 0.081], 
           2 -> RGBColor[0.34398, 0.49112, 0.89936], 118 -> 
           RGBColor[0.97, 0.606, 0.081], 60 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 373 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 270 -> 
           RGBColor[0.97, 0.606, 0.081], 455 -> RGBColor[0.97, 0.606, 0.081], 
           16 -> RGBColor[0.34398, 0.49112, 0.89936], 139 -> 
           RGBColor[0.97, 0.606, 0.081], 293 -> RGBColor[0.97, 0.606, 0.081], 
           79 -> RGBColor[0.97, 0.606, 0.081], 210 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 487 -> 
           RGBColor[0.97, 0.606, 0.081], 403 -> RGBColor[0.97, 0.606, 0.081], 
           89 -> RGBColor[0.34398, 0.49112, 0.89936], 317 -> 
           RGBColor[0.97, 0.606, 0.081], 36 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 409 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 496 -> 
           RGBColor[0.97, 0.606, 0.081], 120 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 189 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 247 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 418 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 266 -> 
           RGBColor[0.97, 0.606, 0.081], 191 -> RGBColor[0.97, 0.606, 0.081], 
           311 -> RGBColor[0.34398, 0.49112, 0.89936], 355 -> 
           RGBColor[0.97, 0.606, 0.081], 143 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 416 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 226 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 527 -> 
           RGBColor[0.97, 0.606, 0.081], 308 -> RGBColor[0.97, 0.606, 0.081], 
           239 -> RGBColor[0.34398, 0.49112, 0.89936], 443 -> 
           RGBColor[0.97, 0.606, 0.081], 405 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 138 -> 
           RGBColor[0.97, 0.606, 0.081], 334 -> RGBColor[0.97, 0.606, 0.081], 
           131 -> RGBColor[0.34398, 0.49112, 0.89936], 117 -> 
           RGBColor[0.97, 0.606, 0.081], 171 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 396 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 52 -> 
           RGBColor[0.97, 0.606, 0.081], 305 -> RGBColor[0.97, 0.606, 0.081], 
           128 -> RGBColor[0.34398, 0.49112, 0.89936], 495 -> 
           RGBColor[0.97, 0.606, 0.081], 229 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 32 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 31 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 453 -> 
           RGBColor[0.97, 0.606, 0.081], 336 -> RGBColor[0.97, 0.606, 0.081], 
           68 -> RGBColor[0.97, 0.606, 0.081], 73 -> 
           RGBColor[0.97, 0.606, 0.081], 82 -> RGBColor[0.97, 0.606, 0.081], 
           35 -> RGBColor[0.34398, 0.49112, 0.89936], 88 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 50 -> 
           RGBColor[0.97, 0.606, 0.081], 523 -> RGBColor[0.97, 0.606, 0.081], 
           19 -> RGBColor[0.34398, 0.49112, 0.89936], 316 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 406 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 380 -> 
           RGBColor[0.97, 0.606, 0.081], 327 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 493 -> 
           RGBColor[0.97, 0.606, 0.081], 17 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 346 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 421 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 545 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 187 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 116 -> 
           RGBColor[0.97, 0.606, 0.081], 278 -> RGBColor[0.97, 0.606, 0.081], 
           96 -> RGBColor[0.34398, 0.49112, 0.89936], 121 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 485 -> 
           RGBColor[0.97, 0.606, 0.081], 14 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 104 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 444 -> 
           RGBColor[0.97, 0.606, 0.081], 546 -> RGBColor[0.97, 0.606, 0.081], 
           494 -> RGBColor[0.97, 0.606, 0.081], 198 -> 
           RGBColor[0.97, 0.606, 0.081], 5 -> RGBColor[0.97, 0.606, 0.081], 
           216 -> RGBColor[0.34398, 0.49112, 0.89936], 381 -> 
           RGBColor[0.97, 0.606, 0.081], 288 -> RGBColor[0.97, 0.606, 0.081], 
           258 -> RGBColor[0.97, 0.606, 0.081], 166 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 34 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 97 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 132 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 279 -> 
           RGBColor[0.97, 0.606, 0.081], 544 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 93 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 462 -> 
           RGBColor[0.97, 0.606, 0.081], 81 -> RGBColor[0.97, 0.606, 0.081], 
           436 -> RGBColor[0.34398, 0.49112, 0.89936], 137 -> 
           RGBColor[0.97, 0.606, 0.081], 501 -> RGBColor[0.97, 0.606, 0.081], 
           69 -> RGBColor[0.97, 0.606, 0.081], 492 -> 
           RGBColor[0.97, 0.606, 0.081], 9 -> RGBColor[0.97, 0.606, 0.081], 
           161 -> RGBColor[0.34398, 0.49112, 0.89936], 481 -> 
           RGBColor[0.97, 0.606, 0.081], 319 -> RGBColor[0.97, 0.606, 0.081], 
           414 -> RGBColor[0.34398, 0.49112, 0.89936], 150 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 13 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 357 -> 
           RGBColor[0.97, 0.606, 0.081], 510 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 30 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 230 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 349 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 372 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 235 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 149 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 366 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 413 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 203 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 59 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 207 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 475 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 213 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 28 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 324 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 268 -> 
           RGBColor[0.97, 0.606, 0.081], 80 -> RGBColor[0.97, 0.606, 0.081], 
           122 -> RGBColor[0.34398, 0.49112, 0.89936], 435 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 257 -> 
           RGBColor[0.97, 0.606, 0.081], 215 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 332 -> 
           RGBColor[0.97, 0.606, 0.081], 197 -> RGBColor[0.97, 0.606, 0.081], 
           517 -> RGBColor[0.97, 0.606, 0.081], 214 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 407 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 309 -> 
           RGBColor[0.97, 0.606, 0.081], 530 -> RGBColor[0.97, 0.606, 0.081], 
           419 -> RGBColor[0.34398, 0.49112, 0.89936], 552 -> 
           RGBColor[0.97, 0.606, 0.081], 47 -> RGBColor[0.97, 0.606, 0.081], 
           62 -> RGBColor[0.97, 0.606, 0.081], 77 -> 
           RGBColor[0.97, 0.606, 0.081], 163 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 427 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 482 -> 
           RGBColor[0.97, 0.606, 0.081], 490 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 447 -> 
           RGBColor[0.97, 0.606, 0.081], 543 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 463 -> 
           RGBColor[0.97, 0.606, 0.081], 126 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 299 -> 
           RGBColor[0.97, 0.606, 0.081], 392 -> RGBColor[0.97, 0.606, 0.081], 
           237 -> RGBColor[0.34398, 0.49112, 0.89936], 297 -> 
           RGBColor[0.97, 0.606, 0.081], 204 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 175 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 521 -> 
           RGBColor[0.97, 0.606, 0.081], 446 -> RGBColor[0.97, 0.606, 0.081], 
           548 -> RGBColor[0.97, 0.606, 0.081], 448 -> 
           RGBColor[0.97, 0.606, 0.081], 450 -> RGBColor[0.97, 0.606, 0.081], 
           180 -> RGBColor[0.97, 0.606, 0.081], 350 -> 
           RGBColor[0.97, 0.606, 0.081], 186 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 531 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 415 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 514 -> 
           RGBColor[0.97, 0.606, 0.081], 101 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 119 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 238 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 422 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 249 -> 
           RGBColor[0.97, 0.606, 0.081], 480 -> RGBColor[0.97, 0.606, 0.081], 
           267 -> RGBColor[0.97, 0.606, 0.081], 78 -> 
           RGBColor[0.97, 0.606, 0.081], 500 -> RGBColor[0.97, 0.606, 0.081], 
           454 -> RGBColor[0.97, 0.606, 0.081], 301 -> 
           RGBColor[0.97, 0.606, 0.081], 201 -> RGBColor[0.97, 0.606, 0.081], 
           440 -> RGBColor[0.34398, 0.49112, 0.89936], 236 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 253 -> 
           RGBColor[0.97, 0.606, 0.081], 550 -> RGBColor[0.97, 0.606, 0.081], 
           499 -> RGBColor[0.97, 0.606, 0.081], 474 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 356 -> 
           RGBColor[0.97, 0.606, 0.081], 306 -> RGBColor[0.97, 0.606, 0.081], 
           227 -> RGBColor[0.34398, 0.49112, 0.89936], 154 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 40 -> 
           RGBColor[0.97, 0.606, 0.081], 221 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 430 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 362 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 142 -> 
           RGBColor[0.97, 0.606, 0.081], 505 -> RGBColor[0.97, 0.606, 0.081], 
           107 -> RGBColor[0.34398, 0.49112, 0.89936], 156 -> 
           RGBColor[0.97, 0.606, 0.081], 535 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 112 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 437 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 67 -> 
           RGBColor[0.97, 0.606, 0.081], 429 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 363 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 361 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 364 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 300 -> 
           RGBColor[0.97, 0.606, 0.081], 321 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 56 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 141 -> 
           RGBColor[0.97, 0.606, 0.081], 10 -> RGBColor[0.97, 0.606, 0.081], 
           511 -> RGBColor[0.34398, 0.49112, 0.89936], 275 -> 
           RGBColor[0.97, 0.606, 0.081], 337 -> RGBColor[0.97, 0.606, 0.081], 
           206 -> RGBColor[0.34398, 0.49112, 0.89936], 386 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 399 -> 
           RGBColor[0.97, 0.606, 0.081], 359 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 240 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 338 -> 
           RGBColor[0.97, 0.606, 0.081], 164 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 234 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 322 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 286 -> 
           RGBColor[0.97, 0.606, 0.081], 394 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 340 -> 
           RGBColor[0.97, 0.606, 0.081], 53 -> RGBColor[0.97, 0.606, 0.081], 
           425 -> RGBColor[0.34398, 0.49112, 0.89936], 155 -> 
           RGBColor[0.97, 0.606, 0.081], 537 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 470 -> 
           RGBColor[0.97, 0.606, 0.081], 26 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 134 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 18 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 460 -> 
           RGBColor[0.97, 0.606, 0.081], 250 -> RGBColor[0.97, 0.606, 0.081], 
           331 -> RGBColor[0.97, 0.606, 0.081], 542 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 538 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 507 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 29 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 378 -> 
           RGBColor[0.97, 0.606, 0.081], 129 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 269 -> 
           RGBColor[0.97, 0.606, 0.081], 193 -> RGBColor[0.97, 0.606, 0.081], 
           199 -> RGBColor[0.97, 0.606, 0.081], 508 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 486 -> 
           RGBColor[0.97, 0.606, 0.081], 178 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 110 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 222 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 467 -> 
           RGBColor[0.97, 0.606, 0.081], 369 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 151 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 353 -> 
           RGBColor[0.97, 0.606, 0.081], 326 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 365 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 167 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 400 -> 
           RGBColor[0.97, 0.606, 0.081], 176 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 92 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 528 -> 
           RGBColor[0.97, 0.606, 0.081], 188 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 108 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 46 -> 
           RGBColor[0.97, 0.606, 0.081], 434 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 468 -> 
           RGBColor[0.97, 0.606, 0.081], 125 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 277 -> 
           RGBColor[0.97, 0.606, 0.081], 290 -> RGBColor[0.97, 0.606, 0.081], 
           49 -> RGBColor[0.97, 0.606, 0.081], 83 -> 
           RGBColor[0.97, 0.606, 0.081], 111 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 465 -> 
           RGBColor[0.97, 0.606, 0.081], 333 -> RGBColor[0.97, 0.606, 0.081], 
           456 -> RGBColor[0.97, 0.606, 0.081], 439 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 202 -> 
           RGBColor[0.97, 0.606, 0.081], 185 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 252 -> 
           RGBColor[0.97, 0.606, 0.081], 370 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 256 -> 
           RGBColor[0.97, 0.606, 0.081], 488 -> RGBColor[0.97, 0.606, 0.081], 
           263 -> RGBColor[0.97, 0.606, 0.081], 144 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 70 -> 
           RGBColor[0.97, 0.606, 0.081], 44 -> RGBColor[0.97, 0.606, 0.081], 
           248 -> RGBColor[0.97, 0.606, 0.081], 91 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 6 -> 
           RGBColor[0.97, 0.606, 0.081], 323 -> 
           RGBColor[0.34398, 0.49112, 0.89936]}, 
         VertexCoordinates -> CompressedData["
1:eJxdWn3InnUZHWOISMgQkTIrte9EZISIhBz6kKhlZYZIiIhUxAjtQ2zZMiJM
JGSMMAOttbTMYVqiNmzs6Ny3bnu3vdu77d3X+/0+7/Nxz8rMbNFz379zbug8
f7wfz3Pfv/v3u65znetc1/VcctsdX/ra4kWLFn1k+KP+XV6n8cJn3rb4svt+
Cv+/6P9ep/GVr37s5BceeAg3nnv5M7+qujz7yYvqt/ijFRvv/Pnbe2zefvwE
4n9edt8FR/a8UeGRLRf/6TvfWId4Hm+6+tkdd23qsix3kr9/uL6wx+3Lr7r/
47cexx+21X/02Cy75ET+z7KvLsv7pxj7w9/2X3fb0psmMHH3+U99emIB3s85
Y49+65pzHkecj3vfuGHqdw/3+P3OB5ad/eQxvHf8zXtWbDyF4+8768cPfrKL
2B9vXr359Q/d3OW/76l3dIp3nPeTF3etm8BwkeGFC/xo8+ryc/XlM6cY++FL
u9Zd+/zfJzAzcunwSQuy3ykMNzncSBfxee4vz49LhlZe0+9xWWOAcRT7Pi27
VHx5uNvVm5+TvSu/L//8Oc/L4qdJ1Lu9+/wF/qD54zH7lWFP7qu3ueIUmmXu
7PKz9e0X9PnAQ7cPLXMUP/vm3FtPvPYMh4sP/6zSfmiOddH6dv3m9iOT+MSt
tQU6jPtxTfPgSTRmv3YBzWVvLnDnXZvWXnjFhNbdwGZ7YxX+VZtvS48HV9ZP
sv1Oonzehdc9ULvp6mdzP4j15IdHKBxxaTE4G/hvq2D7lv38kb8evrv8qj5x
5S1D0x5Fg7rbj/IfZ0aHO+qn/9kc6/lx/naIgjOjPdQoGrl0Cp9qDNFJfGGw
ql75CN/VHKyP2B8Kbvss/j6Cso/NbNz7VJX2wwcbIB3TOXsoYbLAX9bu3DXB
ZvvnjfOVGqZnenl+2X9la5//PPHaMAIOc+vFDVATH2zC+sYT+G9tjmW9PE/i
If3FdyypLX6cZd894XKM5fp+Ph/GRfHzC3nePB8CLzyr2cAUvt0AscPwJx+r
L3v0RfFc5f3B+yvnP8Jyf5/hX+FtpXkq8aB1x1js1MfXm9cCy3km8/PEn+1N
21u8gMZ9y/9C+Rv2d1n/EH9Rm/2tPr9Xw+T4PL7cEN40m9PsqcRDG1Hsdoxf
bBzcE+7WtHh85xU10/RZ4vIwip87svMUG6/uWGC5bgL1bs+9fEHnnGTz9oMv
c0kJNOH3hOzVk72mUM7dEf91dN0kA//y8zFovzhd33Z/R3w4hfC3eHNN65/i
z47wMaXzj7Lw1IDhH+OPxl85d6U8shXhH8VdX7gbE09UbMJ/ZHPiBT9sDjgt
3pvX87fx3u71G959b4XAY4tThTHCny1vmx+L2efw3eGnqzCDkncc9ztQ7O/8
8hICTxmf9i/t34KzjvLpZPIX5W/hqYcSb/MoeWgaup+6n4EfXTePzzfHmdZ6
C3D+iM8Tryy4qJRvXzFe9P4Uw7/pvzYvKz8g1hO+be8twueW9n3lY+sa6ZI+
zO8lD8/J3jNpD/H/QHrqkOwy0HoHEPZA4Z1p4Wpe9hzILwfNjzQ/Fh7rY31N
u0sPC68HlCcG4uljMN+WON0pXVChV8O020f98/oNh5zPWnwrf8D6okbt2gsr
NnC8cg8Df7ab8sUWBJ7ZwH7tAOX3fuOXvr/Ey0H5c6DPx+H83ITJqooF19uF
y2nxwLzzO63vIn6cb+B8E/HIiGdIP8H6M+JPebND86nwC+P3lkbgVdz9avNq
cWR9XOw+kB/2Uf6g/EHpRVofFx02kJ9GlQ+2s+DQ53jaukj8O4DwJzyMKi8N
EPhh+Nf6ANY74T8GXtvzuR4JvCf+XJ/A9UngkRFf1qctrgovD5R/9jHiTTzS
g/QoIn7zfuG9o/iaYvCN8xOtR+rTr+wMlH9HFK+zwtkc5S/pnVEEHwnn69u6
6f3NA6a13rzy2n7VewPrf1r/l3O9qnqswnuaxDPD4s/5xLvjRTw3L3vOov65
/7rZxLvsNaM8Nae8OaM4n6PiUXlme/KFeHCWzbKrZ60v6XqjcdfiCkVf7E3+
SP5j8Bt+c2F9x4Rw23U+pvOxng89HxEf5luab4u/90kXDTL+5Pfd0pGV7UPb
R/UiXC/KXrC9Iv6F9xk2b98wZz1F6ynhk8a39C+sf1WPSheM6/NZ3TerPD+g
843iG+bv4C/XP3T9I/vT9ld9DNfvwg+NH8WD9N0IpF9p/Rrng/wvfbnXel36
r5/+NL7FV/OtLnT/JM7v/EznZ+k/+WWr62+6/o7z5/nM/7D+Cv+JF3ex6HvX
/124nxN4Q6kv56QTZt0/cJ2g+Nyv+Bm430L3WwJ/4rGdML8GfqQP/mrdab0K
6VUGPhQvY3D9I/0E6zHVX20eVXzC8an6QfFdMfxh/UfrQ/Vj6H6N+E32qzKe
rddg3lA+pfNp5C/hcES6y3l3Bo6/yF/q+/TgfliB5x7xXZV8IbtuF+4q4xHG
Y+Qv4Xw3zCdaX/xQIfKj8aX60fw1IjwMGHyY/kg+SHsLnyPwesF3bZ/BnUvl
Jzg/Bd8h7Jf4c/0G128RX9aLtF6MeEU8P/O3+y9w/0V6DNJj9h/sv2KHgfj+
AEI/MPBufUnXZ8F3GT+Jd+mjQ3C9H+sxPk97qb48COvlguNK1+90PwbuB8X1
/HBDFPP8Z007r0+7vqPrO9WPcH9H/Vm4Pxv4ZeCdYU/3C9u+kPSo6nDHbRuP
4ukJut8rPlT8Dxjx4n453C8P/zL4k8GXqo9nIf2G4O/kI/VlRlTXDhjx2OYn
9+ODfxj5K/kl10fkBwR/I+KFYV+EvxnxoT7NnOqYGYb/EXzLsFfqg+STzAeZ
Txj5nxGv4rFNcP8z+JbB/+5f0/3r4M/U1wj8pN5F6GUGPlN/I/QxY/8IeyPw
nfGM0M95PvWr5+TXWUT9wYhvRj2DuD/jHaHnsz5A8A2i3kDofQQfMOofRH2V
8YSotxD1kPJfJT7anHo59SqjHk+9KH3Vh/u7ocdVp/bh/pP8C8dT1AfmR5gf
dX74/KGP3V8VH0zmfhDrtfWm5k+p57OfIP934XlH6G2GXs3+TPY/EP2H7M8w
9DJC72b/Le1r/nO/Nevj7Pcy+sWI+pvR72XYD9HPcT8X7h8F3lod736/4pmO
Z+tw93/FzzA/h7/zfvf/6P5N+I/Rz2P0/xH9fUa/HdFfyn5d9pPzvAj8Kw8v
wPOG6Hdlfw/Rf874yP4tYr7AsC+i/5X9UcT8wvrM85jsvyLmM4h5iPnP/UnG
vCPnd4h+fPajEfO7xEvO2xj29nwEno9EPz/xjLg++7OeX3leicAjYl6T88Oc
d+e8LudliHlf28cxv8U8DDFfz/kVYl7v+qTFTczH3F9t5/rxfYCcvzHWc78K
rs/i+ww5z255z/VozOPz+wCuF/19j5zH5/PxP3o+TtY=
          "]}]]}, 
      TagBox[GraphicsGroupBox[GraphicsComplexBox[CompressedData["
1:eJxdWn3InnUZHWOISMgQkTIrte9EZISIhBz6kKhlZYZIiIhUxAjtQ2zZMiJM
JGSMMAOttbTMYVqiNmzs6Ny3bnu3vdu77d3X+/0+7/Nxz8rMbNFz379zbug8
f7wfz3Pfv/v3u65znetc1/VcctsdX/ra4kWLFn1k+KP+XV6n8cJn3rb4svt+
Cv+/6P9ep/GVr37s5BceeAg3nnv5M7+qujz7yYvqt/ijFRvv/Pnbe2zefvwE
4n9edt8FR/a8UeGRLRf/6TvfWId4Hm+6+tkdd23qsix3kr9/uL6wx+3Lr7r/
47cexx+21X/02Cy75ET+z7KvLsv7pxj7w9/2X3fb0psmMHH3+U99emIB3s85
Y49+65pzHkecj3vfuGHqdw/3+P3OB5ad/eQxvHf8zXtWbDyF4+8768cPfrKL
2B9vXr359Q/d3OW/76l3dIp3nPeTF3etm8BwkeGFC/xo8+ryc/XlM6cY++FL
u9Zd+/zfJzAzcunwSQuy3ykMNzncSBfxee4vz49LhlZe0+9xWWOAcRT7Pi27
VHx5uNvVm5+TvSu/L//8Oc/L4qdJ1Lu9+/wF/qD54zH7lWFP7qu3ueIUmmXu
7PKz9e0X9PnAQ7cPLXMUP/vm3FtPvPYMh4sP/6zSfmiOddH6dv3m9iOT+MSt
tQU6jPtxTfPgSTRmv3YBzWVvLnDnXZvWXnjFhNbdwGZ7YxX+VZtvS48HV9ZP
sv1Oonzehdc9ULvp6mdzP4j15IdHKBxxaTE4G/hvq2D7lv38kb8evrv8qj5x
5S1D0x5Fg7rbj/IfZ0aHO+qn/9kc6/lx/naIgjOjPdQoGrl0Cp9qDNFJfGGw
ql75CN/VHKyP2B8Kbvss/j6Cso/NbNz7VJX2wwcbIB3TOXsoYbLAX9bu3DXB
ZvvnjfOVGqZnenl+2X9la5//PPHaMAIOc+vFDVATH2zC+sYT+G9tjmW9PE/i
If3FdyypLX6cZd894XKM5fp+Ph/GRfHzC3nePB8CLzyr2cAUvt0AscPwJx+r
L3v0RfFc5f3B+yvnP8Jyf5/hX+FtpXkq8aB1x1js1MfXm9cCy3km8/PEn+1N
21u8gMZ9y/9C+Rv2d1n/EH9Rm/2tPr9Xw+T4PL7cEN40m9PsqcRDG1Hsdoxf
bBzcE+7WtHh85xU10/RZ4vIwip87svMUG6/uWGC5bgL1bs+9fEHnnGTz9oMv
c0kJNOH3hOzVk72mUM7dEf91dN0kA//y8zFovzhd33Z/R3w4hfC3eHNN65/i
z47wMaXzj7Lw1IDhH+OPxl85d6U8shXhH8VdX7gbE09UbMJ/ZHPiBT9sDjgt
3pvX87fx3u71G959b4XAY4tThTHCny1vmx+L2efw3eGnqzCDkncc9ztQ7O/8
8hICTxmf9i/t34KzjvLpZPIX5W/hqYcSb/MoeWgaup+6n4EfXTePzzfHmdZ6
C3D+iM8Tryy4qJRvXzFe9P4Uw7/pvzYvKz8g1hO+be8twueW9n3lY+sa6ZI+
zO8lD8/J3jNpD/H/QHrqkOwy0HoHEPZA4Z1p4Wpe9hzILwfNjzQ/Fh7rY31N
u0sPC68HlCcG4uljMN+WON0pXVChV8O020f98/oNh5zPWnwrf8D6okbt2gsr
NnC8cg8Df7ab8sUWBJ7ZwH7tAOX3fuOXvr/Ey0H5c6DPx+H83ITJqooF19uF
y2nxwLzzO63vIn6cb+B8E/HIiGdIP8H6M+JPebND86nwC+P3lkbgVdz9avNq
cWR9XOw+kB/2Uf6g/EHpRVofFx02kJ9GlQ+2s+DQ53jaukj8O4DwJzyMKi8N
EPhh+Nf6ANY74T8GXtvzuR4JvCf+XJ/A9UngkRFf1qctrgovD5R/9jHiTTzS
g/QoIn7zfuG9o/iaYvCN8xOtR+rTr+wMlH9HFK+zwtkc5S/pnVEEHwnn69u6
6f3NA6a13rzy2n7VewPrf1r/l3O9qnqswnuaxDPD4s/5xLvjRTw3L3vOov65
/7rZxLvsNaM8Nae8OaM4n6PiUXlme/KFeHCWzbKrZ60v6XqjcdfiCkVf7E3+
SP5j8Bt+c2F9x4Rw23U+pvOxng89HxEf5luab4u/90kXDTL+5Pfd0pGV7UPb
R/UiXC/KXrC9Iv6F9xk2b98wZz1F6ynhk8a39C+sf1WPSheM6/NZ3TerPD+g
843iG+bv4C/XP3T9I/vT9ld9DNfvwg+NH8WD9N0IpF9p/Rrng/wvfbnXel36
r5/+NL7FV/OtLnT/JM7v/EznZ+k/+WWr62+6/o7z5/nM/7D+Cv+JF3ex6HvX
/124nxN4Q6kv56QTZt0/cJ2g+Nyv+Bm430L3WwJ/4rGdML8GfqQP/mrdab0K
6VUGPhQvY3D9I/0E6zHVX20eVXzC8an6QfFdMfxh/UfrQ/Vj6H6N+E32qzKe
rddg3lA+pfNp5C/hcES6y3l3Bo6/yF/q+/TgfliB5x7xXZV8IbtuF+4q4xHG
Y+Qv4Xw3zCdaX/xQIfKj8aX60fw1IjwMGHyY/kg+SHsLnyPwesF3bZ/BnUvl
Jzg/Bd8h7Jf4c/0G128RX9aLtF6MeEU8P/O3+y9w/0V6DNJj9h/sv2KHgfj+
AEI/MPBufUnXZ8F3GT+Jd+mjQ3C9H+sxPk97qb48COvlguNK1+90PwbuB8X1
/HBDFPP8Z007r0+7vqPrO9WPcH9H/Vm4Pxv4ZeCdYU/3C9u+kPSo6nDHbRuP
4ukJut8rPlT8Dxjx4n453C8P/zL4k8GXqo9nIf2G4O/kI/VlRlTXDhjx2OYn
9+ODfxj5K/kl10fkBwR/I+KFYV+EvxnxoT7NnOqYGYb/EXzLsFfqg+STzAeZ
Txj5nxGv4rFNcP8z+JbB/+5f0/3r4M/U1wj8pN5F6GUGPlN/I/QxY/8IeyPw
nfGM0M95PvWr5+TXWUT9wYhvRj2DuD/jHaHnsz5A8A2i3kDofQQfMOofRH2V
8YSotxD1kPJfJT7anHo59SqjHk+9KH3Vh/u7ocdVp/bh/pP8C8dT1AfmR5gf
dX74/KGP3V8VH0zmfhDrtfWm5k+p57OfIP934XlH6G2GXs3+TPY/EP2H7M8w
9DJC72b/Le1r/nO/Nevj7Pcy+sWI+pvR72XYD9HPcT8X7h8F3lod736/4pmO
Z+tw93/FzzA/h7/zfvf/6P5N+I/Rz2P0/xH9fUa/HdFfyn5d9pPzvAj8Kw8v
wPOG6Hdlfw/Rf874yP4tYr7AsC+i/5X9UcT8wvrM85jsvyLmM4h5iPnP/UnG
vCPnd4h+fPajEfO7xEvO2xj29nwEno9EPz/xjLg++7OeX3leicAjYl6T88Oc
d+e8LudliHlf28cxv8U8DDFfz/kVYl7v+qTFTczH3F9t5/rxfYCcvzHWc78K
rs/i+ww5z255z/VozOPz+wCuF/19j5zH5/PxP3o+TtY=
         "], {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
           ArrowBox[CompressedData["
1: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
lH33y89YnaKcw/75uU8nKed3QH7u18nKOR6Yn9E6SanfQfkZo5OVuh+cn1E6
Ral/G99vY1xtPJ+2vt/WuNp6Tu3ct51xtfO8DslPf52m1PHQ/AzQ6Uo9D8vP
QJ2qnAOzda8+kGLGRurEFLM2Qh9MMZN364QUM3uPjksxu3fp+Pwca5w4TDn3
44wThyvn3944cajSN9wxtynxctcMUeLlzrlViZe75Q4lXu6cO5V4uXNuV+Lt
4Pod/F1H1+/o7zq5fid/d2p+BumNylx2zs91eoMyn13yc70OVua0a35u0eHK
/J2Wn5t0qDKHp+fnZh2mzGM34+jmesj90d04ursecu/0MI4erofcPz3zc6Ve
r9wrvfJzlQ5S7qMz8nOFXqfcS71T3Mc4VZmXM1Pc2zhNmZezUtzjOF2ZF+7w
i5X+4y6/UOlX7vqLdKJrTHDvce413t9cqzP8zdU60z2uUeLvYx36+H0ff9/X
fPv6+77+vZ/16ef3/Xz/kvxcrqOV+b7U73GMMt+X+T2O0rHuOdGYHnQv8u9v
fgPMe6B5cxYjPcMRnhlzQy8M8ezpZ3qGvqc36HN6gf6mh5gDeo95odeYE3qU
efoDdeoNvQ==
            "], 0.02261146496815286]}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[1, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[2, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[3, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[4, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[5, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[6, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[7, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[8, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[9, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[10, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[11, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[12, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[13, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[14, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[15, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[16, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[17, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[18, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[19, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[20, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[21, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[22, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[23, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[24, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[25, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[26, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[27, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[28, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[29, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[30, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[31, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[32, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[33, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[34, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[35, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[36, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[37, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[38, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[39, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[40, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[41, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[42, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[43, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[44, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[45, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[46, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[47, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[48, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[49, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[50, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[51, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[52, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[53, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[54, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[55, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[56, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[57, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[58, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[59, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[60, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[61, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[62, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[63, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[64, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[65, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[66, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[67, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[68, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[69, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[70, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[71, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[72, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[73, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[74, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[75, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[76, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[77, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[78, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[79, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[80, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[81, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[82, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[83, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[84, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[85, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[86, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[87, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[88, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[89, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[90, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[91, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[92, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[93, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[94, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[95, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[96, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[97, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[98, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[99, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[100, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[101, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[102, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[103, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[104, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[105, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[106, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[107, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[108, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[109, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[110, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[111, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[112, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[113, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[114, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[115, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[116, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[117, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[118, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[119, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[120, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[121, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[122, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[123, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[124, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[125, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[126, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[127, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[128, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[129, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[130, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[131, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[132, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[133, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[134, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[135, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[136, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[137, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[138, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[139, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[140, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[141, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[142, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[143, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[144, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[145, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[146, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[147, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[148, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[149, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[150, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[151, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[152, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[153, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[154, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[155, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[156, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[157, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[158, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[159, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[160, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[161, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[162, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[163, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[164, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[165, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[166, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[167, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[168, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[169, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[170, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[171, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[172, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[173, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[174, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[175, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[176, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[177, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[178, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[179, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[180, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[181, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[182, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[183, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[184, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[185, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[186, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[187, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[188, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[189, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[190, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[191, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[192, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[193, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[194, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[195, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[196, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[197, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[198, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[199, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[200, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[201, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[202, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[203, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[204, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[205, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[206, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[207, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[208, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[209, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[210, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[211, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[212, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[213, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[214, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[215, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[216, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[217, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[218, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[219, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[220, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[221, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[222, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[223, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[224, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[225, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[226, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[227, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[228, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[229, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[230, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[231, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[232, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[233, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[234, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[235, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[236, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[237, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[238, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[239, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[240, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[241, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[242, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[243, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[244, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[245, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[246, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[247, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[248, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[249, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[250, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[251, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[252, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[253, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[254, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[255, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[256, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[257, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[258, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[259, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[260, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[261, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[262, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[263, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[264, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[265, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[266, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[267, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[268, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[269, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[270, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[271, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[272, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[273, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[274, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[275, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[276, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[277, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[278, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[279, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[280, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[281, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[282, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[283, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[284, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[285, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[286, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[287, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[288, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[289, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[290, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[291, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[292, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[293, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[294, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[295, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[296, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[297, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[298, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[299, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[300, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[301, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[302, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[303, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[304, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[305, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[306, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[307, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[308, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[309, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[310, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[311, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[312, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[313, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[314, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[315, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[316, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[317, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[318, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[319, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[320, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[321, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[322, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[323, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[324, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[325, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[326, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[327, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[328, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[329, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[330, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[331, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[332, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[333, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[334, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[335, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[336, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[337, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[338, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[339, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[340, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[341, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[342, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[343, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[344, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[345, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[346, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[347, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[348, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[349, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[350, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[351, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[352, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[353, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[354, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[355, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[356, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[357, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[358, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[359, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[360, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[361, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[362, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[363, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[364, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[365, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[366, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[367, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[368, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[369, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[370, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[371, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[372, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[373, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[374, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[375, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[376, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[377, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[378, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[379, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[380, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[381, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[382, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[383, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[384, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[385, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[386, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[387, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[388, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[389, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[390, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[391, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[392, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[393, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[394, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[395, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[396, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[397, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[398, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[399, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[400, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[401, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[402, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[403, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[404, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[405, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[406, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[407, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[408, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[409, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[410, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[411, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[412, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[413, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[414, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[415, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[416, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[417, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[418, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[419, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[420, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[421, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[422, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[423, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[424, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[425, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[426, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[427, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[428, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[429, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[430, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[431, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[432, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[433, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[434, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[435, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[436, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[437, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[438, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[439, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[440, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[441, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[442, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[443, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[444, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[445, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[446, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[447, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[448, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[449, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[450, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[451, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[452, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[453, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[454, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[455, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[456, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[457, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[458, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[459, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[460, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[461, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[462, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[463, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[464, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[465, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[466, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[467, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[468, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[469, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[470, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[471, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[472, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[473, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[474, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[475, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[476, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[477, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[478, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[479, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[480, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[481, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[482, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[483, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[484, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[485, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[486, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[487, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[488, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[489, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[490, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[491, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[492, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[493, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[494, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[495, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[496, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[497, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[498, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[499, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[500, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[501, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[502, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[503, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[504, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[505, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[506, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[507, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[508, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[509, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[510, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[511, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[512, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[513, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[514, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[515, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[516, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[517, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[518, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[519, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[520, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[521, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[522, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[523, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[524, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[525, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[526, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[527, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[528, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[529, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[530, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[531, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[532, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[533, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[534, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[535, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[536, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[537, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[538, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[539, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[540, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[541, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[542, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[543, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[544, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[545, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[546, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[547, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[548, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[549, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[550, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[551, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[552, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[553, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], 
            DiskBox[554, 0.02261146496815286]}}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    FormatType->TraditionalForm,
    FrameTicks->None,
    ImageCache->GraphicsData["CompressedBitmap", "\<\
eJycvXd4XNXV9j2o9y432XLTOWfkgjHNuNCLNRqZkidAEkqAUEIaSYCEYo1G
NhBK6AkpQCihN2NsDBgb3HDvvci9QcqTQvKGBFvn27+11hnLxLzvdX1/SB6P
Zk7Ze5V73auccVfe9O1rvn/lTdd/68p+Y3985Q+/ff23bux3zg0/dm9lHxWL
HTWEn36xHPc6jMX+69fQWOz/z+v75HfOMPfrAfcz1/0sdz9ZK3i7kJe8Wmlv
z3M/77ifOfY+79lnc6O/v+h+bnY/Jxw6fKxdfucOsz891+UQsSw5yMDocFvc
z6dZWTkHe1YVhKfGC8KRDbmh1z0nDHrkhDXV3cIe/UeG/YddFPYceEpYUlkf
FhXkh7U13cJeA/T9HgNOCcuqB4RVvY4J6waeHPbo1uPziqKjPs3NOWrPl9zC
f122Xm/sdvmd3XVx7HKH73K//p6Vnft5UWnPzopujXLKHv1H66UNODmsru4R
eu6SB3bLCbuXZYW3JIvCWbdUhMlheeG3TikIh3s9wsEn3xD+z082hl9r3Rt+
9ZYt4dDTbg7Lq+rCAcd87b/er/PPDs/85uv6mcqeYd/avLCux6Hl6HrbvQbK
+Q+UFhz1aV72UXu/7Db1/mI3ye/6rrsztcsqcav/KiiuPdi938iwts/xcpru
dqtyqqpuYWlFryPezrCGXuHVpxaG8Z7Z4Xs3VYQPX1IiS3DPRSVhfcMIPp/N
F2LZ8pWeA0/jazF9r7e816cxGR5z1nh97Z0c9u1edsRTdV2h0qr+YXF53WE7
Ul5e83l1SdanRfkiCMtNrtnVR2xFbtYF+ZH8rokWZKH7+UtBcbcD3frKWndy
03U9eoT1NTlhmdsLruasK9+SK/jilfVy73Xve9KhGy2Ut/v6J4fp84vDsUPz
wru+Whz+pLkovGRkgfzbf+j5sVxblP7DLg79E6+2//E7Lxww/OvRe+HAYy4K
Kyp7HDp87X+tWc+Bp7vtGpO5quMSd4ZVPYe6NRkt21la5bazn65T74aTD5ZV
dP8sOyu2rcu6xH6sC/N9+V3VVSGQjk9z8ooPOgkRfTzS1vTvWRHWDZDdDo9v
/pksVJedj4+8Puw75AL5X44t0gB3Y987szC8fHSB6Mujl5aK4Nx9YXHYt+HE
8IIb18Si73PYHm6HD0lOnrzXO2gKh5/dJq/7NIwKa3oN0XXtedgassYNx10u
r5uum5nZxi/bUu6ools8rO4e7ywuKmWxIstymHrpasW+I7+Lo0XbjDrl5x51
sLK8Miyr6hP2qioKTx9UGo4YmBf26i+LlLkLTldZXY9IyOkHjflB2O/or+bY
jR+fvFs08dBi9JIr7euNCtsvKA7PHJQXnhbPC2ffqobnypMLwmO92rBx1Hf5
jhzyKzevlzssd1LESnzxfVWrSfLa69M97Nt/CJ/R05X+1zpjh3jNIbpsddfX
sei7oh/e2WFZTYNIqWpqxo4d6N7/5L8WlvRY3nVRdTVj18nv0sMWtaTgqIPD
++aGlzmROXNwfti3V21YVV4hpveTR2pEtxqOjnQrzwn/cWHvASfIHbOSXF7m
zoaF51z9Tlju1v5Ii3VMQ4/wKreYJw3MDUd5ueEZjblu/3LDfjXZoe+sfnVl
Vdi9/gQn1ec57R8RFpX1DIsK88OaquqwR1/3/uDzwm7u/ZKKPmG1s9jd6keE
peXdw9HuWKMGHXmDum5EWfXA8IzLX+sqE11f2y2Wy4ZW1x3zf/cm3eIH3Gp/
6lb6MJ3XJY5dLb8rv3SlE0fnhU1D1aL/6Rc1Yeq8Yuf4csXa/+vxWlFcP95V
YUfJ5fSsHx429K6RWz37yilySUe67drK8rCktMYt0YmybN37nhhWueVtcJig
nzPAx/fPPXhsv7x/lBTk/Du3sPyv+WW9VmflFf6zoLzX39wPr/9eUNbrL4XV
/T7MKSz7X/fvp/llPVdn5xX9taCs5/9xn1njXv89t6jqQG5BxcEeVWWh3zM/
7FVb7c71xa0aLoamW99RYUX3QZnrRXp6eWcdWZIO2aejT//pYbJ/mGdzr4ee
/tPIuHQ6qfissKT7YTuiWxG7Sn5fxI686n7+5uDFwVOCvC/dDTR/3u2V8v+x
Q9TfsDOrJlaFpw7pdsRVH9i7e3hqkBtWVPUWC1PT+zhZgVrbhR79TkSY/1VS
mLMvO6/4s4KKuo/zSmo25RRWsKJ/zCvttj6/uPbPpT2Hrq72Tv9N7xGXzAua
2971m9t+Hm9q/8hPpt8Pkqmfu//PcO/P8Hi/ue09vzk1y/3c7yXTfHahn2i7
tyHR9nbQnF7Zd8y3Z5f1HPxJQUXvf7gd3ZhfUru9qKrfP4tqBmxz5/1LTn7x
wXy3izg3uV7njZCaXg1nyrX/vyStrNYPm659X41r2WEuInp9hJ066PQL3Zli
u6S7E/vmIVcZYYi/5xdWdvaqLskYJDbhSJt0/rH5mU0y/5fFf2Jnh09dXRaO
HtQt7NmPfThfvGpFeVVYX50T9upW7eBI786S4pJ/5+Vm/S07v/hfBZV1e3OL
qzrc3vxv1cBRb/cZeeWDXnPqw3gi/ZZb32fcus5x//L6lSCResVLpng93f28
6PbhNfcv+/aqez3JfXae2zPef8ZvTn/kuc8HybYn/UTqI/fD955z+zXXa07z
2af8ZOoD9/+35FiJ9BvuPV5/4Cfd55pbeb2g35hrP6wcMGpTcTf/H0XVA/bk
Flfvctf7WV5J7X8KSrodrHVGVPcykr3zRZWqeh4tGnjIqlT9lyuKXh9pA70T
rgx7DDy1s6iw6NOivKNWdHExunOxS+V34RdB4MGqXsPC8tog7NlwenhKYykb
6a6A3fn2f23eFWMKBMSw2ac1Fogv3vNgtfxt/8M14bWnFYSVxQ5EFmX/xdmv
j3MKKpw0D9zlbNH2gtJun1T2HzW9fuRVbsXTb9vqvRwk005L5PVMt9L3e7oz
q4Lm1KPufXZqvduV29wPu7TT/bS6nRgftLTucbtxh9Ome9z39vJ+PJm+2X13
j9vhie4zP/Kbx/P6V+4Ytzht5DP3u7//1GnrVnfel52E8Jm1SEy8OY32rjbp
uTeebJtlr992n3vNXr+LRvcdfe3q8vrjPi2s6rvfSeK23KLK/7ifz3Pzyw5W
OK3Dnf2/XB6vnXb+9866YAlNrwvGirsj5nOu9KCD+X/NzzmqK3jQLY1dojtL
kLfLmdgD0Y5yFo7KmeInXRdeNKLIOVJ29tLDdnLc8HzB7qhxr6rCsLaqIhzl
F4QXnljQOdrP/3ttWa6T4eo/1g4a+0rvkZff5be0LQhUP153/77k6cosd3pw
l9sVdm+dWyV25WWnf9vcv9/zkrIj+53eTJDdScjra90q3+r07mP3/Z/4yfbL
3A7xeqLT5xudbvL6xiCRvtrtNK9vdtJxVUNSXk8IWtp/FG+Wz/DvVYG+f5/b
3a8GTW373OsH3Htuh9O8/qW7livdsTp8tQl3uOtd73543eaud3HQLHb5eff9
Ke7/vP8hEtjnpKsWlPU6+t9Ohz93UUEnOixeFJDj9Li6Tr0okO+ElvsO223b
4Sw+ECs6DLewwWBlSIHLRhUcOL0xb3eviqwHMzsa+9rhoHCn+zlQVFJ72MZy
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
IejusBzV3icZYQQbp06a0avqkqT1FlWpg2dZbAgVd7uBqC5zO+jG09059yJr
bgzpRgqg2MxN5jT+L8vbMcwLAUDtEnFHCKVk2t0P7AgPDjabwGwxwefAccBu
SmvwFPW4JKMtutl0vhPBOdy6BXm+t5VWDy3q1PtfrMIrrJDrFFgs1VZR3Uuh
ZK62UukjpcW3rlcmc8iyrcq4GNw/c8iQPzg2y5UYmxww6HdnW10rv5vT3iXr
gEki2mntosQRRnV/N608cA4CzBwfACBae0lK5x7ek9beCqyBcz5nfYDzWZQf
ZYSzDGgfI381mvV14KU2GQmaKuOfl+SrI6riHNpXXgu+EZfT4MnpcfNvfyMi
3ZKe/VWyMLoxHI4trunska5eGW0nd6+kPzX0B/L4dqpXxrwLnnSPTR+al0et
ulik2y3YjIUlGIvO4azTuOOPajlpiSji/4yMq9S4z82aTpXvOsWHxdzvfBgQ
f8AdB6lXu9R5yojYJl12WUpEEMR0udbXiTj+K8QWw92nj4YOScCJftorc8hF
tF0kkPxD66s9KExbTSaBnQVvu7/5n1bp7jBv//02/PXbHb1SE8f1z+pQQlK/
ZMaV1UvfcmtZOHiupZbpEHaPNbnmOzkOqJLLTH/e7+zVGvF8tTSZdVKmrzY+
pSu8R2PXGCpaLLEmHdNN9wG4br83Xh6e8okaMZDvIk62xY45TWXFl8roMUeE
L7aG3lKUlBKieLYR1KHpef3mbVNJLxEI/CLSsR+Wt836sL484XRznPHFwYI9
ElKfd8nC4qxIz9u9UupdPVreAXCrCIfmaEp2FG83j+JtqHKVjXta9ulXQVPH
vKCsSHzYvztf9rWShl0O7Owa+k6qh+6+cpgpo2LHmZUEzuXn4KhfWS4OHHp6
uk8ie/dntKcBXssdNgoZmluP/S0ezqQJ85bYdJSB0zrVl35Qa/PFCPjm0ksN
XaB8+trnS/kA0jA+c6hIOp/7gdHs14gXpQFdrDolYmSoQBZ0bxJk47778lSv
dV7SAdVbrUzDEwG4njZO6V5KCYaWGEicRyRlkSEM7sM90zKeg/gCikvar0vG
TlO9J2R6l2w2L5GsHN/1O+uZQEERnjWS/6hxQYiu3Z9RxtUiY+nimXak+87f
al7y1NTBF2zNaNnZMudxSh8/62vgTzExmn+1iN9fLGPoo7BuXweWp7RhKPsD
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
mqLX6VnO5nPaj0lne8zDTpefc6qd1lm82TKpjNDZYoEYhIRjCYxEwzxvmVL9
uTom41JHXPS0MXrwqDm2CAZ6+jGti5Qhi+hufr7ISjg3ZhShrDBkgP3i50SX
fbuTk5RfLc4dTaDXNU4/zm303n9xG/1lNF44UlTasN3Qx1xty+bSOoNACQLB
oeTI8/MdD2n7XscGBYUlI4WJ2EfhSHw7O6BbHTpa7YDf8RdDRo+pbpoaVFTW
BY1te4/agW9vVzMnVUROHCvH7bbTXXL09xwvbODh/TvjnzaURd5zWOeP7i4+
TDbt8XDj3t/dJdO9xPOkutI9i60lrWQwHzI1cK3tPO7tasOF/6H9JgUXkkN/
3JABcYenjJkH6vCcAFqlPm4ZxnNS2S7/EsZba5IDAdh32KdB8QNpJb8uT+l3
Iqnk/dnVB9I6M4fv//eO7mzm81xjVz4j2dmeIa73dsusk66Olza8XljZ9nl+
6bh38yLRL5xjMAKvicwmde0TG4uCOuckZKF6WVaTQspjc5POvfSby3GmjKW2
dbacx3Ft074qKt7O3dRNDR0rr0lsPAf9S8oBiLd9UzmwZ1hP2f9cvZlDNBWa
mi28q1wOVnNVIqgrjQ6XFed/6vb1jbxw+L1ofunWaEHprdFECSoenM0J54TJ
+LiO7qF16u5LKAOUuEFDj7LOnI4bDb8/ZuxH3t8upkEmMSylddXKjKpMML1W
rjr8nukZEllJdePOD2nPVb2mfK6j1953L2WYiS+eP8dO7XoNxfTzc8wEXMTH
mqeLCn7OIbK/h6NxRp1/BZNyxoRYwEi7vVvjwcSG6FjhgZjZY68cWdkKZ8Oh
7Pi9q23aNSgsKNqWLMjDoxvIblrouFF77ONO7zoot42p6C2TFsgeQfQhNur3
kCCE28OQBia6g/bdjwzOOLBAbspvXOe4/KCpMhYcNCkupI/22oj1s8ofntoW
/zJZEP6bE9LNeXnhj+KF5e/Ei6t+HonE/rNp+vGkUUA0vpc13X/wtFGRh2e0
7xb2j7I5og7Y235LB6GS2VjS/vQE5P0VMqNW+36xCVusZAHIbR3dB3s6u0Rl
49hRXPW0FSwtKG3Z863KCbM/Kqrr2OAUC4L3Uayo4g0cqkg0MVJalC/Yw2/O
2vPKJE/Le+JyvP9mb7w4q+x22X9Rdn2r6tLs2Fdux94rSuTlqlTdstAJ2/td
a9y/96Kxwm3sOztX27oPrSyC8urxo5o1Il+W1qCh3dRBwabB8mDiuJ0fAEkD
69Oq/ODJsnlEsYPG6mLnDTYOFxeVfBaPhv8rHI4+674en815+aW8fz9WUP5J
Iln/kDut7+SXN/2zuLbjslhh1crGvY4CWVOX9xMbRwhr9Qxj2NJY8OiMtl4g
LAIPBO32f8rHz7jHnQ6028exwornQnl5H+cn695x/78OoWVjIrH8j52GGI4l
SoKGyuJgTke+1olMjEs5656tUQc048FerTGJyPN8BDBsk8RFPXpGvro5pd/o
DKMpqxomExfZVl600x7Z7oRO3v54ZTepoKTua1Xk9M66YMNAue3OXBGjOR3x
ne6WXcvdKX/05u+WCMoqG2kjGnCMSyragrrWWYSFpQlWsrItqJQ4QCoodgig
TkPG8Pg+dff1D7eCz+Xl5b3i/vuO068vuGOKPX01XlyDfnrB2ZX/dju91b1/
yz3PZyUFka+aKyNBWWmJk4yku9cCkRSqcypLi+mrLV0b+X4qL8sr6oIDOuNj
cm1Xn1Mm7yc5aYR3azsif5cz3ywbr0A6a6qqHTSdIYrOeaIjDkSi6N5NRLff
Et2L0KnyWv21Go9zU1rRKAKf69egxfzMp9zbytkS27LJsjUzJ2kslQT315DS
RD9TTjrW70qduwvkSZbXBxNqYnb48oNmp1Un1ER1iXMEm0PaVhMPykuT24nE
ugvKJDMw1ndMnyh9PvS2a7cjjvKeJVg8v3C7yXLfRESpqygeLiwo+DAeCT3l
lvXnuauvyx46XV7LdzoQRWWNQX11lTgPC6cWBPtOTAY1tc3BrMxorMDfgq2+
CUE8NwaZy7GKGH+Bh21IzRV5z/64fCcv0tYiK46sZ+7/54pnqi5OrU5Wq+sd
TMvJKkfk+mltHmF3WiF8R28pKZJwHmvw6Pll2y0osyHmue8+oNNnIWOfVhaH
N+fgrjN0Lc+U19LtJNkd1C/zi6pHKhp2DSpq00FduV4591suPqIoe5DC1vhI
onNTlKe2PTkoErTudmSQrErZcipyzHXF7Cmzh9mL0I7/LyUg7snce79wFhTM
uXTVTnACQZ6/e0L0IO/ZmEx9RBZomsNHrdXRwC2SLNYeLbFPnSrOXax/0cX6
obxW+cW63v1bYY7I+1XF4S9mtsdGuNr4qojblpiwVXNlHN5Bkzopuc6vFzKJ
qDu0XFqdHv1xfCc/xp4tbIG0XHnwJQa58nHivvnbI4dMLnKokMs3tc/MQmZ/
ENndNYvK5H1HfdQZ9/hIaUnRtnhB2fuRaP7L7qHvz1mis3SJFsnrfmMt0Sd5
eRGJ3c1KF4oW3GN8PCguqRIDNvf4e8d0C9E4GJwq5+P9v3wBgyQ7bfhYArCf
c2j2yxkFxilta6gc8ztqq2uCqU47LpyakEGZ46uiI878f+kEhm2n3OLeHVSV
LkNosbxO9R4r64U5ecQLjbMZX7gnGyHnUlzehOmR7EhN87Sg2HlA6O7SqgkB
jL668T6msTOaNnOf3bt5Tunm/n/uXjaUR4Oq0iK3C/k2NyY/KE8WB4XJeuJt
8v3146eONFRXbmuuDL/vjgJ7vW6Mp9THC8m8tNDEHfd8Xc7T+vdcAbUO1vmy
oihvpKiwSOoKWibbUyfd4a1VKzkrnRD+K5ZK7zQuRwvotU+mYLimrOAfDjY+
t8P1b9/h+3e8a73d0GXyGt3xrsN8LBTf8aZv3+7XMf/r3BMQulwvHPCyy///
+1De/wUsBl6b\
\>"]], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12}, {Null, 
         SparseArray[
         Automatic, {12, 12}, 0, {
          1, {{0, 2, 5, 8, 11, 15, 16, 17, 18, 19, 20, 21, 22}, {{2}, {12}, {
            1}, {3}, {11}, {2}, {4}, {10}, {3}, {5}, {9}, {4}, {6}, {7}, {
            8}, {5}, {5}, {5}, {4}, {3}, {2}, {1}}}, Pattern}]}, {
        VertexStyle -> {
          6 -> RGBColor[0.97, 0.606, 0.081], 1 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 9 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 2 -> 
           RGBColor[0.97, 0.606, 0.081], 8 -> RGBColor[0.97, 0.606, 0.081], 3 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 4 -> 
           RGBColor[0.97, 0.606, 0.081], 11 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 10 -> 
           RGBColor[0.97, 0.606, 0.081], 7 -> RGBColor[0.97, 0.606, 0.081], 
           12 -> RGBColor[0.97, 0.606, 0.081], 5 -> 
           RGBColor[0.34398, 0.49112, 0.89936]}, 
         VertexCoordinates -> {{0, 0.7659416862050707}, {0.38297084310253526`,
            1.5318833724101413`}, {1.531883372410141, 2.297825058615212}, {
           1.9148542155126764`, 1.5318833724101413`}, {1.531883372410141, 
           0.7659416862050707}, {0.7659416862050705, 0}, {
           1.531883372410141, 0}, {2.297825058615212, 0}, {2.297825058615212, 
           0.7659416862050707}, {2.680795901717747, 1.5318833724101413`}, {
           0.7659416862050705, 0.7659416862050707}, {0, 0}}}]]}, 
      TagBox[
       GraphicsGroupBox[
        GraphicsComplexBox[{{0., 0.7659416862050707}, {0.38297084310253526`, 
         1.5318833724101413`}, {1.531883372410141, 2.297825058615212}, {
         1.9148542155126764`, 1.5318833724101413`}, {1.531883372410141, 
         0.7659416862050707}, {0.7659416862050705, 0.}, {1.531883372410141, 
         0.}, {2.297825058615212, 0.}, {2.297825058615212, 
         0.7659416862050707}, {2.680795901717747, 1.5318833724101413`}, {
         0.7659416862050705, 0.7659416862050707}, {0., 0.}}, {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
           ArrowBox[{{1, 2}, {1, 12}, {2, 3}, {2, 11}, {3, 4}, {3, 10}, {4, 
            5}, {4, 9}, {5, 6}, {5, 7}, {5, 8}}, 0.027905810438046352`]}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[1, 0.027905810438046352]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[2, 0.027905810438046352]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[3, 0.027905810438046352]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[4, 0.027905810438046352]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[5, 0.027905810438046352]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[6, 0.027905810438046352]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[7, 0.027905810438046352]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[8, 0.027905810438046352]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[9, 0.027905810438046352]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[10, 0.027905810438046352]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[11, 0.027905810438046352]}, 
           {RGBColor[0.97, 0.606, 0.081], 
            DiskBox[12, 0.027905810438046352]}}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    FormatType->TraditionalForm,
    FrameTicks->None], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 
        18}, {Null, 
         SparseArray[
         Automatic, {18, 18}, 0, {
          1, {{0, 4, 8, 12, 16, 20, 24, 28, 32, 36, 40, 44, 48, 52, 56, 60, 
            64, 68, 72}, {{2}, {3}, {7}, {14}, {1}, {4}, {8}, {13}, {1}, {
            4}, {5}, {17}, {2}, {3}, {6}, {18}, {3}, {7}, {10}, {11}, {4}, {
            8}, {9}, {12}, {1}, {5}, {9}, {16}, {2}, {6}, {10}, {15}, {6}, {
            7}, {11}, {15}, {5}, {8}, {12}, {16}, {5}, {9}, {12}, {13}, {6}, {
            10}, {11}, {14}, {2}, {11}, {15}, {18}, {1}, {12}, {16}, {17}, {
            8}, {9}, {13}, {17}, {7}, {10}, {14}, {18}, {3}, {14}, {15}, {
            18}, {4}, {13}, {16}, {17}}}, Pattern}]}, {
        VertexStyle -> {
          18 -> RGBColor[0.34398, 0.49112, 0.89936], 6 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 15 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 1 -> 
           RGBColor[0.97, 0.606, 0.081], 9 -> RGBColor[0.97, 0.606, 0.081], 
           13 -> RGBColor[0.97, 0.606, 0.081], 2 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 8 -> 
           RGBColor[0.97, 0.606, 0.081], 3 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 4 -> 
           RGBColor[0.97, 0.606, 0.081], 11 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 10 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 7 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 16 -> 
           RGBColor[0.97, 0.606, 0.081], 17 -> RGBColor[0.97, 0.606, 0.081], 
           14 -> RGBColor[0.34398, 0.49112, 0.89936], 12 -> 
           RGBColor[0.97, 0.606, 0.081], 5 -> RGBColor[0.97, 0.606, 0.081]}, 
         VertexCoordinates -> {{0.9397, 0.342}, {0.766, 
          0.6428}, {-0.9397, -0.342}, {-0.766, -0.6428}, {-1., 
          0.}, {-0.5, -0.866}, {1., 0.}, {0.5, 0.866}, {0.9397, -0.342}, {
          0.1736, 0.9848}, {-0.9397, 0.342}, {-0.1736, -0.9848}, {-0.766, 
          0.6428}, {0.1736, -0.9848}, {0.766, -0.6428}, {-0.1736, 0.9848}, {
          0.5, -0.866}, {-0.5, 0.866}}}]]}, 
      TagBox[
       GraphicsGroupBox[
        GraphicsComplexBox[{{0.9397, 0.342}, {0.766, 
         0.6428}, {-0.9397, -0.342}, {-0.766, -0.6428}, {-1., 
         0.}, {-0.5, -0.866}, {1., 0.}, {0.5, 0.866}, {0.9397, -0.342}, {
         0.1736, 0.9848}, {-0.9397, 0.342}, {-0.1736, -0.9848}, {-0.766, 
         0.6428}, {0.1736, -0.9848}, {0.766, -0.6428}, {-0.1736, 0.9848}, {
         0.5, -0.866}, {-0.5, 0.866}}, {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
           ArrowBox[{{1, 2}, {1, 3}, {1, 7}, {1, 14}, {2, 4}, {2, 8}, {2, 
            13}, {3, 4}, {3, 5}, {3, 17}, {4, 6}, {4, 18}, {5, 7}, {5, 10}, {
            5, 11}, {6, 8}, {6, 9}, {6, 12}, {7, 9}, {7, 16}, {8, 10}, {8, 
            15}, {9, 11}, {9, 15}, {10, 12}, {10, 16}, {11, 12}, {11, 13}, {
            12, 14}, {13, 15}, {13, 18}, {14, 16}, {14, 17}, {15, 17}, {16, 
            18}, {17, 18}}, 0.02261146496815286]}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[1, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[2, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[3, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[4, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[5, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[6, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[7, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[8, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[9, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[10, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[11, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[12, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[13, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[14, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[15, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[16, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[17, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[18, 0.02261146496815286]}}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    FormatType->TraditionalForm,
    FrameTicks->None], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 
        19}, {Null, 
         SparseArray[
         Automatic, {19, 19}, 0, {
          1, {{0, 17, 34, 36, 38, 40, 42, 44, 46, 48, 50, 52, 54, 56, 58, 60, 
            62, 64, 66, 68}, {{3}, {4}, {5}, {6}, {7}, {8}, {9}, {10}, {11}, {
            12}, {13}, {14}, {15}, {16}, {17}, {18}, {19}, {3}, {4}, {5}, {
            6}, {7}, {8}, {9}, {10}, {11}, {12}, {13}, {14}, {15}, {16}, {
            17}, {18}, {19}, {1}, {2}, {1}, {2}, {1}, {2}, {1}, {2}, {1}, {
            2}, {1}, {2}, {1}, {2}, {1}, {2}, {1}, {2}, {1}, {2}, {1}, {2}, {
            1}, {2}, {1}, {2}, {1}, {2}, {1}, {2}, {1}, {2}, {1}, {2}}}, 
           Pattern}]}, {
        VertexStyle -> {
          18 -> RGBColor[0.97, 0.606, 0.081], 6 -> 
           RGBColor[0.97, 0.606, 0.081], 15 -> RGBColor[0.97, 0.606, 0.081], 
           1 -> RGBColor[0.34398, 0.49112, 0.89936], 9 -> 
           RGBColor[0.97, 0.606, 0.081], 13 -> RGBColor[0.97, 0.606, 0.081], 
           2 -> RGBColor[0.34398, 0.49112, 0.89936], 8 -> 
           RGBColor[0.97, 0.606, 0.081], 3 -> RGBColor[0.97, 0.606, 0.081], 4 -> 
           RGBColor[0.97, 0.606, 0.081], 11 -> RGBColor[0.97, 0.606, 0.081], 
           10 -> RGBColor[0.97, 0.606, 0.081], 19 -> 
           RGBColor[0.97, 0.606, 0.081], 7 -> RGBColor[0.97, 0.606, 0.081], 
           16 -> RGBColor[0.97, 0.606, 0.081], 17 -> 
           RGBColor[0.97, 0.606, 0.081], 14 -> RGBColor[0.97, 0.606, 0.081], 
           12 -> RGBColor[0.97, 0.606, 0.081], 5 -> 
           RGBColor[0.97, 0.606, 0.081]}, VertexCoordinates -> CompressedData["
1:eJxTTMoPSmViYGAQBmIQDQNlB1MyXDYs24/Gt4fwPthD+M/2w/jumhG3rW89
hvMlJnr7GbM8hPOvfKxtCo25sx9V/zU09RfR5I+h8bfB+QwoAC6P5r5j9mjm
o8lfg/Oh7kNT/xDOh/oP3f/2APYSXVA=
          "]}]]}, 
      TagBox[GraphicsGroupBox[GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQBmIQDQNlB1MyXDYs24/Gt4fwPthD+M/2w/jumhG3rW89
hvMlJnr7GbM8hPOvfKxtCo25sx9V/zU09RfR5I+h8bfB+QwoAC6P5r5j9mjm
o8lfg/Oh7kNT/xDOh/oP3f/2APYSXVA=
         "], {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
           ArrowBox[{{1, 3}, {1, 4}, {1, 5}, {1, 6}, {1, 7}, {1, 8}, {1, 9}, {
            1, 10}, {1, 11}, {1, 12}, {1, 13}, {1, 14}, {1, 15}, {1, 16}, {1, 
            17}, {1, 18}, {1, 19}, {2, 3}, {2, 4}, {2, 5}, {2, 6}, {2, 7}, {2,
             8}, {2, 9}, {2, 10}, {2, 11}, {2, 12}, {2, 13}, {2, 14}, {2, 
            15}, {2, 16}, {2, 17}, {2, 18}, {2, 19}}, 0.017707666123233823`]}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[1, 0.017707666123233823]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[2, 0.017707666123233823]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[3, 0.017707666123233823]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[4, 0.017707666123233823]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[5, 0.017707666123233823]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[6, 0.017707666123233823]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[7, 0.017707666123233823]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[8, 0.017707666123233823]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[9, 0.017707666123233823]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[10, 0.017707666123233823]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[11, 0.017707666123233823]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[12, 0.017707666123233823]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[13, 0.017707666123233823]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[14, 0.017707666123233823]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[15, 0.017707666123233823]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[16, 0.017707666123233823]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[17, 0.017707666123233823]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[18, 0.017707666123233823]}, 
           {RGBColor[0.97, 0.606, 0.081], 
            DiskBox[19, 0.017707666123233823]}}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    FormatType->TraditionalForm,
    FrameTicks->None], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9}, {Null, 
         SparseArray[
         Automatic, {9, 9}, 0, {
          1, {{0, 1, 3, 6, 8, 12, 13, 14, 15, 16}, {{2}, {1}, {3}, {2}, {4}, {
            9}, {3}, {5}, {4}, {6}, {7}, {8}, {5}, {5}, {5}, {3}}}, 
           Pattern}]}, {
        VertexStyle -> {
          6 -> RGBColor[0.97, 0.606, 0.081], 1 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 9 -> 
           RGBColor[0.97, 0.606, 0.081], 2 -> RGBColor[0.97, 0.606, 0.081], 8 -> 
           RGBColor[0.97, 0.606, 0.081], 3 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 4 -> 
           RGBColor[0.97, 0.606, 0.081], 7 -> RGBColor[0.97, 0.606, 0.081], 5 -> 
           RGBColor[0.34398, 0.49112, 0.89936]}, 
         VertexCoordinates -> {{2, 0}, {1, 0}, {0, 0}, {0, 1}, {0, 2}, {0, 
          3}, {-1, 2}, {1, 2}, {-1, 0}}}]]}, 
      TagBox[
       GraphicsGroupBox[
        GraphicsComplexBox[{{2., 0.}, {1., 0.}, {0., 0.}, {0., 1.}, {0., 
         2.}, {0., 3.}, {-1., 2.}, {1., 2.}, {-1., 0.}}, {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
           ArrowBox[{{1, 2}, {2, 3}, {3, 4}, {3, 9}, {4, 5}, {5, 6}, {5, 7}, {
            5, 8}}, 0.030239520958083826`]}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[1, 0.030239520958083826]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[2, 0.030239520958083826]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[3, 0.030239520958083826]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[4, 0.030239520958083826]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[5, 0.030239520958083826]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[6, 0.030239520958083826]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[7, 0.030239520958083826]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[8, 0.030239520958083826]}, 
           {RGBColor[0.97, 0.606, 0.081], 
            DiskBox[9, 0.030239520958083826]}}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    FormatType->TraditionalForm,
    FrameTicks->None], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[CompressedData["
1:eJwl1GV7EAQABOCN7u4e3T0YMLobRjeMZsBgxOhuMGhMQulQGiWVNOhQQgml
u8OAdw8f3rtfcBcUHhnWPzAgIGCciOlYxCYOcYlHfBKQkEQkJglJSUZyUpCS
VKQmDWlJR3oykJFMZCYLWclGdnIQRE5ykZs85CUf+SlAQQpRmCIUpRjFKUFJ
SlGaYMpQlhDKUZ4KhFKRSlSmClWpRnVqUJNa1KYOdalHfRrQkEY0pglNCaMZ
zWlBS1rRmja0pR3t6UBHOtGZLoTTlW50pwc96UVv+hBBX/rRn0gGMJAoBjGY
IQwlmmEMZwQjGcVoxjCWcYxnAhOZxGSmMJVpTGcGM5nFB3zIR3zMbOYwl3nM
ZwELWcQnfMpnfM4XfMlilrCUZXzF1yxnBStZxWrWsJZ1rGcD3/AtG9nEZraw
lW1sZwff8T072cVu9rCXffzAj+znAAc5xGGO8BM/8wu/cpRjHOcEJznFac5w
lnP8xu+c5wIXucQf/MllrnCVa/zF31znBje5xW3ucJd73OcBD3nEY57wlGc8
5wUvecVr3vAP//If//OWmPEHEovYxCEu8YhPAhKSiMQkISnJSE4KUpKK1KQh
LelITwYykonMZCEr2chODoLISS5yk4e85CM/BShIIQpThKIUozglKEkpShNM
GcoSQjnKU4FQKlKJylShKtWoTg1qUova1KEu9ahPAxrSiMY0oSlhNKM5LWhJ
K1rThra0oz0d6EgnOtOFcLrSje70oCe96E0fIuhLP2LOO5IBDCSKQQxmCEOJ
ZhjDGcFIRjGaMYwNfP//7wBt2KJ2
        "], {Null, 
         SparseArray[Automatic, {384, 384}, 0, {1, {CompressedData["
1:eJwl02V0FgQUBuCP0d0hMGB0d4wOKUGQLilHhwxGOmqEIp0SUgIi3SWd0l0S
gtKIIiBKKzw73HOe+/s99543JCy8QY8YgUBgWPQyMYlDfBKRlBSkJh0ZyEQI
2clFXgpQmGKUpDTlqEgVqlGT2tSlPo1oSgta0ZZ2dKQL3Qkngr4MYCBDovMy
klGMYTyTmMp0ZjGH+SxkMUtZwWrWsZEtbGMne9jPQY5wnFOc5QKXuMp1bnCb
ezzgIY95yjNe8oa3BLltbOKRkCQkJxVpSU8wWchGTvKQn0IUpQShlKUClalK
DWpRh3o0pAnNaUkbwuhAZ7oR/fBe9KE/kQwmihF8xWjGMZEpfMNMZjOPBXzP
EpazirVsYDNb2cFu9vEThznGSc5wnp+5wjV+4xZ3+Z0/ecTf/MsLXvM/MYIC
gVjEJQGJSUZK0vABGclMVnKQm3wUpAjFKUUZylOJD6nOR3zMJzSgMc34lNZ8
Rns60ZXP6Ulv+vEFgxjKcL7ka8YygclMYwbfMpfvWMQPLGMla1jPJn5kO7vY
ywEOcZQTnOYcF7nML/zKTe5wnz/4iyf8w3Ne8V/Q+/LHJA7xSURSUpCadGQg
EyFkJxd5KUBhilGS0pSjIlWoRk1qU5f6NKIpLWhFW9rRkS50J5wI+jKAgQxh
GCMZxRjGM4mpTGcWc5jPQhazlBWsZh0b2cI2drKH/RzkCMc5xVkucImrXOcG
t7nHAx7ymKc84yVveEtQLP0nHglJQnJSkZb0BJOFbOQkD/kpRFFKEEpZKlCZ
qtSgFnWoR0Oa0JyWtCGMDnSmGz3oRR/6E8lgongHstK6Iw==
            "], CompressedData["
1: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
C/PBm5I35gVVviPHGPNGHGv8H36G4ww=
            "]}, Pattern}]}, {
        VertexStyle -> {
          354 -> RGBColor[0.97, 0.606, 0.081], 329 -> 
           RGBColor[0.97, 0.606, 0.081], 7 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 323 -> 
           RGBColor[0.97, 0.606, 0.081], 4 -> RGBColor[0.97, 0.606, 0.081], 
           144 -> RGBColor[0.34398, 0.49112, 0.89936], 61 -> 
           RGBColor[0.97, 0.606, 0.081], 175 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 222 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 320 -> 
           RGBColor[0.97, 0.606, 0.081], 278 -> RGBColor[0.97, 0.606, 0.081], 
           75 -> RGBColor[0.97, 0.606, 0.081], 97 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 376 -> 
           RGBColor[0.97, 0.606, 0.081], 316 -> RGBColor[0.97, 0.606, 0.081], 
           130 -> RGBColor[0.34398, 0.49112, 0.89936], 44 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 1 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 233 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 146 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 124 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 36 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 83 -> 
           RGBColor[0.97, 0.606, 0.081], 17 -> RGBColor[0.97, 0.606, 0.081], 
           151 -> RGBColor[0.34398, 0.49112, 0.89936], 336 -> 
           RGBColor[0.97, 0.606, 0.081], 33 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 128 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 380 -> 
           RGBColor[0.97, 0.606, 0.081], 263 -> RGBColor[0.97, 0.606, 0.081], 
           180 -> RGBColor[0.34398, 0.49112, 0.89936], 332 -> 
           RGBColor[0.97, 0.606, 0.081], 254 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 15 -> 
           RGBColor[0.97, 0.606, 0.081], 192 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 295 -> 
           RGBColor[0.97, 0.606, 0.081], 20 -> RGBColor[0.97, 0.606, 0.081], 
           79 -> RGBColor[0.97, 0.606, 0.081], 343 -> 
           RGBColor[0.97, 0.606, 0.081], 257 -> RGBColor[0.97, 0.606, 0.081], 
           78 -> RGBColor[0.97, 0.606, 0.081], 253 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 364 -> 
           RGBColor[0.97, 0.606, 0.081], 372 -> RGBColor[0.97, 0.606, 0.081], 
           145 -> RGBColor[0.34398, 0.49112, 0.89936], 309 -> 
           RGBColor[0.97, 0.606, 0.081], 24 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 366 -> 
           RGBColor[0.97, 0.606, 0.081], 346 -> RGBColor[0.97, 0.606, 0.081], 
           31 -> RGBColor[0.34398, 0.49112, 0.89936], 236 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 110 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 260 -> 
           RGBColor[0.97, 0.606, 0.081], 19 -> RGBColor[0.97, 0.606, 0.081], 
           181 -> RGBColor[0.34398, 0.49112, 0.89936], 88 -> 
           RGBColor[0.97, 0.606, 0.081], 324 -> RGBColor[0.97, 0.606, 0.081], 
           165 -> RGBColor[0.34398, 0.49112, 0.89936], 85 -> 
           RGBColor[0.97, 0.606, 0.081], 280 -> RGBColor[0.97, 0.606, 0.081], 
           352 -> RGBColor[0.97, 0.606, 0.081], 113 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 377 -> 
           RGBColor[0.97, 0.606, 0.081], 333 -> RGBColor[0.97, 0.606, 0.081], 
           116 -> RGBColor[0.34398, 0.49112, 0.89936], 18 -> 
           RGBColor[0.97, 0.606, 0.081], 220 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 379 -> 
           RGBColor[0.97, 0.606, 0.081], 108 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 131 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 369 -> 
           RGBColor[0.97, 0.606, 0.081], 315 -> RGBColor[0.97, 0.606, 0.081], 
           284 -> RGBColor[0.97, 0.606, 0.081], 344 -> 
           RGBColor[0.97, 0.606, 0.081], 5 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 167 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 237 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 69 -> 
           RGBColor[0.97, 0.606, 0.081], 285 -> RGBColor[0.97, 0.606, 0.081], 
           46 -> RGBColor[0.34398, 0.49112, 0.89936], 126 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 363 -> 
           RGBColor[0.97, 0.606, 0.081], 16 -> RGBColor[0.97, 0.606, 0.081], 
           23 -> RGBColor[0.34398, 0.49112, 0.89936], 92 -> 
           RGBColor[0.97, 0.606, 0.081], 185 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 141 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 276 -> 
           RGBColor[0.97, 0.606, 0.081], 82 -> RGBColor[0.97, 0.606, 0.081], 
           50 -> RGBColor[0.97, 0.606, 0.081], 29 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 242 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 227 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 133 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 337 -> 
           RGBColor[0.97, 0.606, 0.081], 76 -> RGBColor[0.97, 0.606, 0.081], 
           312 -> RGBColor[0.97, 0.606, 0.081], 184 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 248 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 367 -> 
           RGBColor[0.97, 0.606, 0.081], 335 -> RGBColor[0.97, 0.606, 0.081], 
           203 -> RGBColor[0.34398, 0.49112, 0.89936], 243 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 156 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 297 -> 
           RGBColor[0.97, 0.606, 0.081], 177 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 240 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 52 -> 
           RGBColor[0.97, 0.606, 0.081], 182 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 274 -> 
           RGBColor[0.97, 0.606, 0.081], 71 -> RGBColor[0.97, 0.606, 0.081], 
           51 -> RGBColor[0.97, 0.606, 0.081], 3 -> 
           RGBColor[0.97, 0.606, 0.081], 252 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 258 -> 
           RGBColor[0.97, 0.606, 0.081], 374 -> RGBColor[0.97, 0.606, 0.081], 
           84 -> RGBColor[0.97, 0.606, 0.081], 375 -> 
           RGBColor[0.97, 0.606, 0.081], 293 -> RGBColor[0.97, 0.606, 0.081], 
           80 -> RGBColor[0.97, 0.606, 0.081], 32 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 259 -> 
           RGBColor[0.97, 0.606, 0.081], 230 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 129 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 249 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 314 -> 
           RGBColor[0.97, 0.606, 0.081], 179 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 317 -> 
           RGBColor[0.97, 0.606, 0.081], 48 -> RGBColor[0.97, 0.606, 0.081], 
           42 -> RGBColor[0.34398, 0.49112, 0.89936], 94 -> 
           RGBColor[0.97, 0.606, 0.081], 345 -> RGBColor[0.97, 0.606, 0.081], 
           12 -> RGBColor[0.97, 0.606, 0.081], 201 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 39 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 148 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 62 -> 
           RGBColor[0.97, 0.606, 0.081], 198 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 351 -> 
           RGBColor[0.97, 0.606, 0.081], 365 -> RGBColor[0.97, 0.606, 0.081], 
           25 -> RGBColor[0.34398, 0.49112, 0.89936], 191 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 267 -> 
           RGBColor[0.97, 0.606, 0.081], 357 -> RGBColor[0.97, 0.606, 0.081], 
           371 -> RGBColor[0.97, 0.606, 0.081], 174 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 107 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 95 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 319 -> 
           RGBColor[0.97, 0.606, 0.081], 283 -> RGBColor[0.97, 0.606, 0.081], 
           28 -> RGBColor[0.34398, 0.49112, 0.89936], 217 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 93 -> 
           RGBColor[0.97, 0.606, 0.081], 225 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 77 -> 
           RGBColor[0.97, 0.606, 0.081], 300 -> RGBColor[0.97, 0.606, 0.081], 
           162 -> RGBColor[0.34398, 0.49112, 0.89936], 214 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 334 -> 
           RGBColor[0.97, 0.606, 0.081], 218 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 35 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 383 -> 
           RGBColor[0.97, 0.606, 0.081], 326 -> RGBColor[0.97, 0.606, 0.081], 
           56 -> RGBColor[0.97, 0.606, 0.081], 207 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 43 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 306 -> 
           RGBColor[0.97, 0.606, 0.081], 299 -> RGBColor[0.97, 0.606, 0.081], 
           150 -> RGBColor[0.34398, 0.49112, 0.89936], 40 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 355 -> 
           RGBColor[0.97, 0.606, 0.081], 176 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 287 -> 
           RGBColor[0.97, 0.606, 0.081], 209 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 270 -> 
           RGBColor[0.97, 0.606, 0.081], 183 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 132 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 157 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 340 -> 
           RGBColor[0.97, 0.606, 0.081], 313 -> RGBColor[0.97, 0.606, 0.081], 
           304 -> RGBColor[0.97, 0.606, 0.081], 159 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 384 -> 
           RGBColor[0.97, 0.606, 0.081], 34 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 251 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 288 -> 
           RGBColor[0.97, 0.606, 0.081], 135 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 10 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 350 -> 
           RGBColor[0.97, 0.606, 0.081], 330 -> RGBColor[0.97, 0.606, 0.081], 
           373 -> RGBColor[0.97, 0.606, 0.081], 264 -> 
           RGBColor[0.97, 0.606, 0.081], 125 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 223 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 291 -> 
           RGBColor[0.97, 0.606, 0.081], 239 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 347 -> 
           RGBColor[0.97, 0.606, 0.081], 171 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 168 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 211 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 161 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 305 -> 
           RGBColor[0.97, 0.606, 0.081], 67 -> RGBColor[0.97, 0.606, 0.081], 
           308 -> RGBColor[0.97, 0.606, 0.081], 310 -> 
           RGBColor[0.97, 0.606, 0.081], 38 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 59 -> 
           RGBColor[0.97, 0.606, 0.081], 361 -> RGBColor[0.97, 0.606, 0.081], 
           294 -> RGBColor[0.97, 0.606, 0.081], 102 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 121 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 241 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 226 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 311 -> 
           RGBColor[0.97, 0.606, 0.081], 6 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 26 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 296 -> 
           RGBColor[0.97, 0.606, 0.081], 279 -> RGBColor[0.97, 0.606, 0.081], 
           342 -> RGBColor[0.97, 0.606, 0.081], 322 -> 
           RGBColor[0.97, 0.606, 0.081], 139 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 55 -> 
           RGBColor[0.97, 0.606, 0.081], 341 -> RGBColor[0.97, 0.606, 0.081], 
           68 -> RGBColor[0.97, 0.606, 0.081], 215 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 321 -> 
           RGBColor[0.97, 0.606, 0.081], 307 -> RGBColor[0.97, 0.606, 0.081], 
           98 -> RGBColor[0.34398, 0.49112, 0.89936], 149 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 155 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 339 -> 
           RGBColor[0.97, 0.606, 0.081], 142 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 256 -> 
           RGBColor[0.97, 0.606, 0.081], 112 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 115 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 359 -> 
           RGBColor[0.97, 0.606, 0.081], 178 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 64 -> 
           RGBColor[0.97, 0.606, 0.081], 187 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 91 -> 
           RGBColor[0.97, 0.606, 0.081], 200 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 204 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 100 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 381 -> 
           RGBColor[0.97, 0.606, 0.081], 325 -> RGBColor[0.97, 0.606, 0.081], 
           138 -> RGBColor[0.34398, 0.49112, 0.89936], 219 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 378 -> 
           RGBColor[0.97, 0.606, 0.081], 338 -> RGBColor[0.97, 0.606, 0.081], 
           122 -> RGBColor[0.34398, 0.49112, 0.89936], 57 -> 
           RGBColor[0.97, 0.606, 0.081], 289 -> RGBColor[0.97, 0.606, 0.081], 
           247 -> RGBColor[0.34398, 0.49112, 0.89936], 196 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 282 -> 
           RGBColor[0.97, 0.606, 0.081], 140 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 2 -> 
           RGBColor[0.97, 0.606, 0.081], 114 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 292 -> 
           RGBColor[0.97, 0.606, 0.081], 81 -> RGBColor[0.97, 0.606, 0.081], 
           232 -> RGBColor[0.34398, 0.49112, 0.89936], 205 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 58 -> 
           RGBColor[0.97, 0.606, 0.081], 27 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 21 -> 
           RGBColor[0.97, 0.606, 0.081], 96 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 194 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 213 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 164 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 119 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 54 -> 
           RGBColor[0.97, 0.606, 0.081], 169 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 245 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 127 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 153 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 73 -> 
           RGBColor[0.97, 0.606, 0.081], 368 -> RGBColor[0.97, 0.606, 0.081], 
           362 -> RGBColor[0.97, 0.606, 0.081], 202 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 265 -> 
           RGBColor[0.97, 0.606, 0.081], 229 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 53 -> 
           RGBColor[0.97, 0.606, 0.081], 123 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 195 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 356 -> 
           RGBColor[0.97, 0.606, 0.081], 281 -> RGBColor[0.97, 0.606, 0.081], 
           193 -> RGBColor[0.34398, 0.49112, 0.89936], 318 -> 
           RGBColor[0.97, 0.606, 0.081], 327 -> RGBColor[0.97, 0.606, 0.081], 
           173 -> RGBColor[0.34398, 0.49112, 0.89936], 250 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 353 -> 
           RGBColor[0.97, 0.606, 0.081], 30 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 234 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 134 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 117 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 262 -> 
           RGBColor[0.97, 0.606, 0.081], 349 -> RGBColor[0.97, 0.606, 0.081], 
           235 -> RGBColor[0.34398, 0.49112, 0.89936], 172 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 60 -> 
           RGBColor[0.97, 0.606, 0.081], 170 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 331 -> 
           RGBColor[0.97, 0.606, 0.081], 104 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 154 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 90 -> 
           RGBColor[0.97, 0.606, 0.081], 212 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 137 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 273 -> 
           RGBColor[0.97, 0.606, 0.081], 13 -> RGBColor[0.97, 0.606, 0.081], 
           45 -> RGBColor[0.34398, 0.49112, 0.89936], 49 -> 
           RGBColor[0.97, 0.606, 0.081], 228 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 86 -> 
           RGBColor[0.97, 0.606, 0.081], 244 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 11 -> 
           RGBColor[0.97, 0.606, 0.081], 275 -> RGBColor[0.97, 0.606, 0.081], 
           152 -> RGBColor[0.34398, 0.49112, 0.89936], 290 -> 
           RGBColor[0.97, 0.606, 0.081], 298 -> RGBColor[0.97, 0.606, 0.081], 
           186 -> RGBColor[0.34398, 0.49112, 0.89936], 221 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 14 -> 
           RGBColor[0.97, 0.606, 0.081], 63 -> RGBColor[0.97, 0.606, 0.081], 
           206 -> RGBColor[0.34398, 0.49112, 0.89936], 224 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 22 -> 
           RGBColor[0.97, 0.606, 0.081], 302 -> RGBColor[0.97, 0.606, 0.081], 
           216 -> RGBColor[0.34398, 0.49112, 0.89936], 268 -> 
           RGBColor[0.97, 0.606, 0.081], 65 -> RGBColor[0.97, 0.606, 0.081], 
           272 -> RGBColor[0.97, 0.606, 0.081], 72 -> 
           RGBColor[0.97, 0.606, 0.081], 358 -> RGBColor[0.97, 0.606, 0.081], 
           208 -> RGBColor[0.34398, 0.49112, 0.89936], 210 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 286 -> 
           RGBColor[0.97, 0.606, 0.081], 189 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 89 -> 
           RGBColor[0.97, 0.606, 0.081], 70 -> RGBColor[0.97, 0.606, 0.081], 
           47 -> RGBColor[0.97, 0.606, 0.081], 103 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 190 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 303 -> 
           RGBColor[0.97, 0.606, 0.081], 370 -> RGBColor[0.97, 0.606, 0.081], 
           66 -> RGBColor[0.97, 0.606, 0.081], 197 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 74 -> 
           RGBColor[0.97, 0.606, 0.081], 136 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 99 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 158 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 271 -> 
           RGBColor[0.97, 0.606, 0.081], 109 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 160 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 382 -> 
           RGBColor[0.97, 0.606, 0.081], 106 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 301 -> 
           RGBColor[0.97, 0.606, 0.081], 266 -> RGBColor[0.97, 0.606, 0.081], 
           269 -> RGBColor[0.97, 0.606, 0.081], 163 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 166 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 111 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 188 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 120 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 8 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 238 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 246 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 87 -> 
           RGBColor[0.97, 0.606, 0.081], 9 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 143 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 101 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 277 -> 
           RGBColor[0.97, 0.606, 0.081], 360 -> RGBColor[0.97, 0.606, 0.081], 
           118 -> RGBColor[0.34398, 0.49112, 0.89936], 37 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 348 -> 
           RGBColor[0.97, 0.606, 0.081], 199 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 147 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 41 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 105 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 231 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 261 -> 
           RGBColor[0.97, 0.606, 0.081], 255 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 328 -> 
           RGBColor[0.97, 0.606, 0.081]}, VertexCoordinates -> {{
            Sin[Rational[1, 384] Pi], -Cos[Rational[1, 384] Pi]}, {
            Sin[Rational[1, 128] Pi], -Cos[Rational[1, 128] Pi]}, {
            Sin[Rational[13, 384] Pi], 
            Cos[Rational[13, 384] Pi]}, {-Sin[Rational[1, 384] Pi], -
            Cos[Rational[1, 384] Pi]}, {
            Sin[Rational[5, 384] Pi], -Cos[Rational[5, 384] Pi]}, {
            Sin[Rational[55, 384] Pi], 
            Cos[Rational[55, 384] Pi]}, {
            Sin[Rational[11, 384] Pi], 
            Cos[Rational[11, 384] Pi]}, {
            Sin[Rational[5, 128] Pi], 
            Cos[Rational[5, 128] Pi]}, {-Cos[Rational[49, 384] Pi], -
            Sin[Rational[49, 384] Pi]}, {-Sin[Rational[1, 128] Pi], -
            Cos[Rational[1, 128] Pi]}, {
            Sin[Rational[7, 384] Pi], -Cos[Rational[7, 384] Pi]}, {
            Sin[Rational[53, 384] Pi], 
            Cos[Rational[53, 384] Pi]}, {-Cos[Rational[19, 128] Pi], 
            Sin[Rational[19, 128] Pi]}, {
            Sin[Rational[19, 128] Pi], 
            Cos[Rational[19, 128] Pi]}, {
            Sin[Rational[17, 384] Pi], 
            Cos[Rational[17, 384] Pi]}, {
            Sin[Rational[3, 128] Pi], 
            Cos[Rational[3, 128] Pi]}, {-Sin[Rational[5, 384] Pi], -
            Cos[Rational[5, 384] Pi]}, {-Cos[Rational[47, 384] Pi], -
            Sin[Rational[47, 384] Pi]}, {-Sin[Rational[83, 384] Pi], 
            Cos[Rational[83, 384] Pi]}, {-Sin[Rational[19, 384] Pi], 
            Cos[Rational[19, 384] Pi]}, {
            Sin[Rational[95, 384] Pi], -Cos[Rational[95, 384] Pi]}, {-
            Cos[Rational[17, 128] Pi], -Sin[Rational[17, 128] Pi]}, {-
            Sin[Rational[37, 384] Pi], 
            Cos[Rational[37, 384] Pi]}, {
            Cos[Rational[7, 384] Pi], -Sin[Rational[7, 384] Pi]}, {-
            Cos[Rational[43, 384] Pi], 
            Sin[Rational[43, 384] Pi]}, {-Cos[Rational[55, 384] Pi], 
            Sin[Rational[55, 384] Pi]}, {
            Cos[Rational[37, 384] Pi], 
            Sin[Rational[37, 384] Pi]}, {
            Cos[Rational[19, 128] Pi], 
            Sin[Rational[19, 128] Pi]}, {
            Cos[Rational[79, 384] Pi], -Sin[Rational[79, 384] Pi]}, {
            Cos[Rational[5, 128] Pi], -Sin[Rational[5, 128] Pi]}, {-
            Sin[Rational[7, 128] Pi], 
            Cos[Rational[7, 128] Pi]}, {-Sin[Rational[27, 128] Pi], 
            Cos[Rational[27, 128] Pi]}, {-Sin[Rational[29, 384] Pi], 
            Cos[Rational[29, 384] Pi]}, {
            Cos[Rational[95, 384] Pi], -Sin[Rational[95, 384] Pi]}, {
            Sin[Rational[17, 128] Pi], 
            Cos[Rational[17, 128] Pi]}, {
            Sin[Rational[3, 128] Pi], -Cos[Rational[3, 128] Pi]}, {
            Sin[Rational[59, 384] Pi], 
            Cos[Rational[59, 384] Pi]}, {-Cos[Rational[59, 384] Pi], 
            Sin[Rational[59, 384] Pi]}, {-Sin[Rational[85, 384] Pi], 
            Cos[Rational[85, 384] Pi]}, {-Sin[Rational[17, 384] Pi], 
            Cos[Rational[17, 384] Pi]}, {
            Sin[Rational[31, 128] Pi], -Cos[Rational[31, 128] Pi]}, {-
            Cos[Rational[53, 384] Pi], -Sin[Rational[53, 384] Pi]}, {
            Sin[Rational[7, 384] Pi], 
            Cos[Rational[7, 384] Pi]}, {
            Sin[Rational[19, 384] Pi], 
            Cos[Rational[19, 384] Pi]}, {-Cos[Rational[15, 128] Pi], -
            Sin[Rational[15, 128] Pi]}, {-Sin[Rational[7, 384] Pi], -
            Cos[Rational[7, 384] Pi]}, {
            Cos[Rational[5, 384] Pi], -Sin[Rational[5, 384] Pi]}, {-
            Sin[Rational[35, 384] Pi], 
            Cos[Rational[35, 384] Pi]}, {
            Cos[Rational[37, 384] Pi], -Sin[Rational[37, 384] Pi]}, {-
            Cos[Rational[41, 384] Pi], 
            Sin[Rational[41, 384] Pi]}, {
            Cos[Rational[59, 384] Pi], 
            Sin[Rational[59, 384] Pi]}, {
            Cos[Rational[35, 384] Pi], 
            Sin[Rational[35, 384] Pi]}, {
            Cos[Rational[17, 384] Pi], -Sin[Rational[17, 384] Pi]}, {
            Cos[Rational[77, 384] Pi], -Sin[Rational[77, 384] Pi]}, {
            Cos[Rational[41, 384] Pi], -Sin[Rational[41, 384] Pi]}, {
            Cos[Rational[73, 384] Pi], -Sin[Rational[73, 384] Pi]}, {
            Cos[Rational[1, 384] Pi], -Sin[Rational[1, 384] Pi]}, {-
            Sin[Rational[31, 384] Pi], 
            Cos[Rational[31, 384] Pi]}, {
            Sin[Rational[79, 384] Pi], -Cos[Rational[79, 384] Pi]}, {
            Sin[Rational[19, 384] Pi], -Cos[Rational[19, 384] Pi]}, {
            Cos[Rational[49, 384] Pi], -Sin[Rational[49, 384] Pi]}, {-
            Cos[Rational[23, 128] Pi], 
            Sin[Rational[23, 128] Pi]}, {
            Sin[Rational[17, 128] Pi], -Cos[Rational[17, 128] Pi]}, {-
            Sin[Rational[47, 384] Pi], 
            Cos[Rational[47, 384] Pi]}, {
            Cos[Rational[67, 384] Pi], 
            Sin[Rational[67, 384] Pi]}, {
            Cos[Rational[9, 128] Pi], 
            Sin[Rational[9, 128] Pi]}, {-Sin[Rational[21, 128] Pi], 
            Cos[Rational[21, 128] Pi]}, {
            Sin[Rational[29, 384] Pi], 
            Cos[Rational[29, 384] Pi]}, {
            Sin[Rational[91, 384] Pi], -Cos[Rational[91, 384] Pi]}, {-
            Cos[Rational[55, 384] Pi], -Sin[Rational[55, 384] Pi]}, {-
            Cos[Rational[53, 384] Pi], 
            Sin[Rational[53, 384] Pi]}, {-Cos[Rational[15, 128] Pi], 
            Sin[Rational[15, 128] Pi]}, {
            Cos[Rational[3, 128] Pi], -Sin[Rational[3, 128] Pi]}, {-
            Sin[Rational[13, 128] Pi], 
            Cos[Rational[13, 128] Pi]}, {
            Cos[Rational[55, 384] Pi], 
            Sin[Rational[55, 384] Pi]}, {
            Cos[Rational[13, 128] Pi], 
            Sin[Rational[13, 128] Pi]}, {
            Cos[Rational[13, 384] Pi], -Sin[Rational[13, 384] Pi]}, {
            Cos[Rational[27, 128] Pi], -Sin[Rational[27, 128] Pi]}, {-
            Sin[Rational[23, 384] Pi], 
            Cos[Rational[23, 384] Pi]}, {-Sin[Rational[79, 384] Pi], 
            Cos[Rational[79, 384] Pi]}, {-Sin[Rational[9, 128] Pi], 
            Cos[Rational[9, 128] Pi]}, {
            Cos[Rational[31, 128] Pi], -Sin[Rational[31, 128] Pi]}, {
            Sin[Rational[11, 384] Pi], -Cos[Rational[11, 384] Pi]}, {
            Sin[Rational[49, 384] Pi], 
            Cos[Rational[49, 384] Pi]}, {-Cos[Rational[61, 384] Pi], 
            Sin[Rational[61, 384] Pi]}, {
            Sin[Rational[61, 384] Pi], 
            Cos[Rational[61, 384] Pi]}, {-Sin[Rational[5, 128] Pi], 
            Cos[Rational[5, 128] Pi]}, {-Sin[Rational[29, 128] Pi], 
            Cos[Rational[29, 128] Pi]}, {
            Cos[Rational[25, 128] Pi], 
            Sin[Rational[25, 128] Pi]}, {-Sin[Rational[19, 128] Pi], -
            Cos[Rational[19, 128] Pi]}, {
            Sin[Rational[5, 384] Pi], 
            Cos[Rational[5, 384] Pi]}, {
            Sin[Rational[7, 128] Pi], 
            Cos[Rational[7, 128] Pi]}, {-Cos[Rational[43, 384] Pi], -
            Sin[Rational[43, 384] Pi]}, {-Sin[Rational[3, 128] Pi], -
            Cos[Rational[3, 128] Pi]}, {-Sin[Rational[11, 128] Pi], 
            Cos[Rational[11, 128] Pi]}, {
            Cos[Rational[1, 128] Pi], -Sin[Rational[1, 128] Pi]}, {
            Cos[Rational[25, 128] Pi], -Sin[Rational[25, 128] Pi]}, {
            Cos[Rational[13, 128] Pi], -Sin[Rational[13, 128] Pi]}, {-
            Cos[Rational[47, 384] Pi], 
            Sin[Rational[47, 384] Pi]}, {-Cos[Rational[17, 128] Pi], 
            Sin[Rational[17, 128] Pi]}, {
            Cos[Rational[83, 384] Pi], -Sin[Rational[83, 384] Pi]}, {
            Cos[Rational[11, 384] Pi], -Sin[Rational[11, 384] Pi]}, {
            Cos[Rational[91, 384] Pi], -Sin[Rational[91, 384] Pi]}, {-
            Sin[Rational[25, 384] Pi], 
            Cos[Rational[25, 384] Pi]}, {-Sin[Rational[41, 384] Pi], 
            Cos[Rational[41, 384] Pi]}, {-Sin[Rational[13, 384] Pi], 
            Cos[Rational[13, 384] Pi]}, {-Sin[Rational[55, 384] Pi], -
            Cos[Rational[55, 384] Pi]}, {
            Cos[Rational[73, 384] Pi], 
            Sin[Rational[73, 384] Pi]}, {-Sin[Rational[77, 384] Pi], 
            Cos[Rational[77, 384] Pi]}, {
            Sin[Rational[13, 384] Pi], -Cos[Rational[13, 384] Pi]}, {
            Sin[Rational[21, 128] Pi], 
            Cos[Rational[21, 128] Pi]}, {-Cos[Rational[21, 128] Pi], 
            Sin[Rational[21, 128] Pi]}, {
            Cos[Rational[41, 384] Pi], 
            Sin[Rational[41, 384] Pi]}, {
            Cos[Rational[53, 384] Pi], 
            Sin[Rational[53, 384] Pi]}, {
            Sin[Rational[23, 384] Pi], 
            Cos[Rational[23, 384] Pi]}, {
            Sin[Rational[1, 128] Pi], 
            Cos[Rational[1, 128] Pi]}, {
            Sin[Rational[47, 384] Pi], 
            Cos[Rational[47, 384] Pi]}, {-Sin[Rational[89, 384] Pi], 
            Cos[Rational[89, 384] Pi]}, {
            Cos[Rational[77, 384] Pi], 
            Sin[Rational[77, 384] Pi]}, {-Sin[Rational[59, 384] Pi], -
            Cos[Rational[59, 384] Pi]}, {-Sin[Rational[11, 384] Pi], -
            Cos[Rational[11, 384] Pi]}, {-Cos[Rational[41, 384] Pi], -
            Sin[Rational[41, 384] Pi]}, {
            Sin[Rational[17, 384] Pi], -Cos[Rational[17, 384] Pi]}, {
            Sin[Rational[77, 384] Pi], -Cos[Rational[77, 384] Pi]}, {-
            Cos[Rational[67, 384] Pi], 
            Sin[Rational[67, 384] Pi]}, {
            Cos[Rational[17, 128] Pi], -Sin[Rational[17, 128] Pi]}, {-
            Sin[Rational[15, 128] Pi], 
            Cos[Rational[15, 128] Pi]}, {
            Sin[Rational[53, 384] Pi], -Cos[Rational[53, 384] Pi]}, {
            Cos[Rational[25, 384] Pi], 
            Sin[Rational[25, 384] Pi]}, {
            Cos[Rational[23, 128] Pi], 
            Sin[Rational[23, 128] Pi]}, {
            Sin[Rational[9, 128] Pi], 
            Cos[Rational[9, 128] Pi]}, {-Sin[Rational[61, 384] Pi], 
            Cos[Rational[61, 384] Pi]}, {
            Cos[Rational[15, 128] Pi], 
            Sin[Rational[15, 128] Pi]}, {
            Cos[Rational[49, 384] Pi], 
            Sin[Rational[49, 384] Pi]}, {
            Sin[Rational[35, 384] Pi], 
            Cos[Rational[35, 384] Pi]}, {-Sin[Rational[23, 128] Pi], 
            Cos[Rational[23, 128] Pi]}, {-Cos[Rational[13, 128] Pi], 
            Sin[Rational[13, 128] Pi]}, {
            Cos[Rational[35, 384] Pi], -Sin[Rational[35, 384] Pi]}, {
            Cos[Rational[11, 128] Pi], 
            Sin[Rational[11, 128] Pi]}, {
            Cos[Rational[61, 384] Pi], 
            Sin[Rational[61, 384] Pi]}, {-Cos[Rational[23, 384] Pi], 
            Sin[Rational[23, 384] Pi]}, {
            Cos[Rational[19, 384] Pi], -Sin[Rational[19, 384] Pi]}, {
            Cos[Rational[71, 384] Pi], -Sin[Rational[71, 384] Pi]}, {
            Cos[Rational[43, 384] Pi], -Sin[Rational[43, 384] Pi]}, {
            Sin[Rational[25, 384] Pi], -Cos[Rational[25, 384] Pi]}, {
            Cos[Rational[1, 384] Pi], 
            Sin[Rational[1, 384] Pi]}, {-Cos[Rational[71, 384] Pi], 
            Sin[Rational[71, 384] Pi]}, {
            Cos[Rational[47, 384] Pi], -Sin[Rational[47, 384] Pi]}, {
            Sin[Rational[7, 128] Pi], -Cos[Rational[7, 128] Pi]}, {
            Sin[Rational[27, 128] Pi], -Cos[Rational[27, 128] Pi]}, {
            Sin[Rational[31, 384] Pi], 
            Cos[Rational[31, 384] Pi]}, {-Sin[Rational[65, 384] Pi], 
            Cos[Rational[65, 384] Pi]}, {-Cos[Rational[19, 128] Pi], -
            Sin[Rational[19, 128] Pi]}, {
            Sin[Rational[89, 384] Pi], -Cos[Rational[89, 384] Pi]}, {-
            Sin[Rational[49, 384] Pi], 
            Cos[Rational[49, 384] Pi]}, {
            Sin[Rational[49, 384] Pi], -Cos[Rational[49, 384] Pi]}, {
            Cos[Rational[29, 384] Pi], 
            Sin[Rational[29, 384] Pi]}, {
            Cos[Rational[65, 384] Pi], 
            Sin[Rational[65, 384] Pi]}, {
            Cos[Rational[29, 128] Pi], -Sin[Rational[29, 128] Pi]}, {-
            Sin[Rational[31, 128] Pi], 
            Cos[Rational[31, 128] Pi]}, {
            Sin[Rational[65, 384] Pi], -Cos[Rational[65, 384] Pi]}, {-
            Sin[Rational[21, 128] Pi], -Cos[Rational[21, 128] Pi]}, {
            Sin[Rational[85, 384] Pi], -Cos[Rational[85, 384] Pi]}, {-
            Sin[Rational[5, 128] Pi], -Cos[Rational[5, 128] Pi]}, {-
            Cos[Rational[37, 384] Pi], -Sin[Rational[37, 384] Pi]}, {
            Sin[Rational[13, 128] Pi], 
            Cos[Rational[13, 128] Pi]}, {-Sin[Rational[73, 384] Pi], 
            Cos[Rational[73, 384] Pi]}, {
            Cos[Rational[85, 384] Pi], 
            Sin[Rational[85, 384] Pi]}, {
            Sin[Rational[67, 384] Pi], 
            Cos[Rational[67, 384] Pi]}, {-Cos[Rational[1, 128] Pi], 
            Sin[Rational[1, 128] Pi]}, {-Sin[Rational[3, 128] Pi], 
            Cos[Rational[3, 128] Pi]}, {-Sin[Rational[17, 128] Pi], -
            Cos[Rational[17, 128] Pi]}, {-Cos[Rational[27, 128] Pi], -
            Sin[Rational[27, 128] Pi]}, {-Cos[Rational[11, 384] Pi], 
            Sin[Rational[11, 384] Pi]}, {-Sin[Rational[1, 384] Pi], 
            Cos[Rational[1, 384] Pi]}, {-Cos[Rational[19, 384] Pi], 
            Sin[Rational[19, 384] Pi]}, {-Cos[Rational[89, 384] Pi], -
            Sin[Rational[89, 384] Pi]}, {-Cos[Rational[9, 128] Pi], 
            Sin[Rational[9, 128] Pi]}, {
            Cos[Rational[23, 384] Pi], -Sin[Rational[23, 384] Pi]}, {-
            Cos[Rational[35, 384] Pi], 
            Sin[Rational[35, 384] Pi]}, {
            Cos[Rational[31, 384] Pi], -Sin[Rational[31, 384] Pi]}, {
            Cos[Rational[67, 384] Pi], -Sin[Rational[67, 384] Pi]}, {
            Cos[Rational[5, 384] Pi], 
            Sin[Rational[5, 384] Pi]}, {
            Cos[Rational[89, 384] Pi], 
            Sin[Rational[89, 384] Pi]}, {
            Sin[Rational[71, 384] Pi], 
            Cos[Rational[71, 384] Pi]}, {-Cos[Rational[7, 384] Pi], 
            Sin[Rational[7, 384] Pi]}, {-Sin[Rational[5, 384] Pi], 
            Cos[Rational[5, 384] Pi]}, {
            Sin[Rational[29, 384] Pi], -Cos[Rational[29, 384] Pi]}, {-
            Cos[Rational[85, 384] Pi], -Sin[Rational[85, 384] Pi]}, {
            Sin[Rational[43, 384] Pi], 
            Cos[Rational[43, 384] Pi]}, {-Cos[Rational[3, 128] Pi], -
            Sin[Rational[3, 128] Pi]}, {
            Cos[Rational[27, 128] Pi], 
            Sin[Rational[27, 128] Pi]}, {-Cos[Rational[77, 384] Pi], -
            Sin[Rational[77, 384] Pi]}, {-Cos[Rational[5, 128] Pi], 
            Sin[Rational[5, 128] Pi]}, {-Cos[Rational[31, 128] Pi], -
            Sin[Rational[31, 128] Pi]}, {
            Cos[Rational[55, 384] Pi], -Sin[Rational[55, 384] Pi]}, {
            Sin[Rational[73, 384] Pi], -Cos[Rational[73, 384] Pi]}, {
            Cos[Rational[7, 128] Pi], 
            Sin[Rational[7, 128] Pi]}, {
            Sin[Rational[19, 128] Pi], -Cos[Rational[19, 128] Pi]}, {-
            Sin[Rational[23, 384] Pi], -Cos[Rational[23, 384] Pi]}, {-
            Sin[Rational[19, 128] Pi], 
            Cos[Rational[19, 128] Pi]}, {-Cos[Rational[25, 128] Pi], 
            Sin[Rational[25, 128] Pi]}, {
            Sin[Rational[23, 128] Pi], -Cos[Rational[23, 128] Pi]}, {-
            Sin[Rational[67, 384] Pi], -Cos[Rational[67, 384] Pi]}, {-
            Sin[Rational[71, 384] Pi], -Cos[Rational[71, 384] Pi]}, {-
            Cos[Rational[95, 384] Pi], 
            Sin[Rational[95, 384] Pi]}, {
            Sin[Rational[61, 384] Pi], -Cos[Rational[61, 384] Pi]}, {-
            Cos[Rational[61, 384] Pi], -Sin[Rational[61, 384] Pi]}, {
            Cos[Rational[17, 384] Pi], 
            Sin[Rational[17, 384] Pi]}, {-Sin[Rational[53, 384] Pi], 
            Cos[Rational[53, 384] Pi]}, {
            Sin[Rational[15, 128] Pi], -Cos[Rational[15, 128] Pi]}, {-
            Sin[Rational[19, 384] Pi], -Cos[Rational[19, 384] Pi]}, {-
            Cos[Rational[11, 128] Pi], -Sin[Rational[11, 128] Pi]}, {-
            Cos[Rational[31, 384] Pi], 
            Sin[Rational[31, 384] Pi]}, {
            Cos[Rational[9, 128] Pi], -Sin[Rational[9, 128] Pi]}, {
            Cos[Rational[31, 128] Pi], 
            Sin[Rational[31, 128] Pi]}, {-Cos[Rational[25, 384] Pi], -
            Sin[Rational[25, 384] Pi]}, {-Cos[Rational[79, 384] Pi], 
            Sin[Rational[79, 384] Pi]}, {
            Sin[Rational[25, 128] Pi], 
            Cos[Rational[25, 128] Pi]}, {
            Sin[Rational[95, 384] Pi], 
            Cos[Rational[95, 384] Pi]}, {-Cos[Rational[7, 128] Pi], -
            Sin[Rational[7, 128] Pi]}, {
            Sin[Rational[11, 128] Pi], -Cos[Rational[11, 128] Pi]}, {-
            Cos[Rational[29, 384] Pi], -Sin[Rational[29, 384] Pi]}, {
            Cos[Rational[59, 384] Pi], -Sin[Rational[59, 384] Pi]}, {-
            Cos[Rational[13, 384] Pi], -Sin[Rational[13, 384] Pi]}, {-
            Cos[Rational[23, 128] Pi], -Sin[Rational[23, 128] Pi]}, {-
            Cos[Rational[73, 384] Pi], -Sin[Rational[73, 384] Pi]}, {-
            Sin[Rational[47, 384] Pi], -Cos[Rational[47, 384] Pi]}, {-
            Sin[Rational[9, 128] Pi], -Cos[Rational[9, 128] Pi]}, {-
            Cos[Rational[1, 384] Pi], -Sin[Rational[1, 384] Pi]}, {-
            Cos[Rational[5, 384] Pi], -Sin[Rational[5, 384] Pi]}, {-
            Sin[Rational[13, 128] Pi], -Cos[Rational[13, 128] Pi]}, {-
            Sin[Rational[35, 384] Pi], -Cos[Rational[35, 384] Pi]}, {-
            Sin[Rational[91, 384] Pi], -Cos[Rational[91, 384] Pi]}, {-
            Sin[Rational[95, 384] Pi], -Cos[Rational[95, 384] Pi]}, {-
            Sin[Rational[29, 128] Pi], -Cos[Rational[29, 128] Pi]}, {
            Sin[Rational[83, 384] Pi], 
            Cos[Rational[83, 384] Pi]}, {-Sin[Rational[43, 384] Pi], -
            Cos[Rational[43, 384] Pi]}, {-Sin[Rational[31, 384] Pi], -
            Cos[Rational[31, 384] Pi]}, {
            Cos[Rational[21, 128] Pi], -Sin[Rational[21, 128] Pi]}, {
            Cos[Rational[3, 128] Pi], 
            Sin[Rational[3, 128] Pi]}, {-Sin[Rational[83, 384] Pi], -
            Cos[Rational[83, 384] Pi]}, {
            Sin[Rational[79, 384] Pi], 
            Cos[Rational[79, 384] Pi]}, {-Cos[Rational[83, 384] Pi], 
            Sin[Rational[83, 384] Pi]}, {-Sin[Rational[25, 128] Pi], -
            Cos[Rational[25, 128] Pi]}, {-Cos[Rational[17, 384] Pi], -
            Sin[Rational[17, 384] Pi]}, {-Cos[Rational[91, 384] Pi], 
            Sin[Rational[91, 384] Pi]}, {
            Cos[Rational[13, 384] Pi], 
            Sin[Rational[13, 384] Pi]}, {-Cos[Rational[65, 384] Pi], -
            Sin[Rational[65, 384] Pi]}, {
            Sin[Rational[91, 384] Pi], 
            Cos[Rational[91, 384] Pi]}, {
            Sin[Rational[41, 384] Pi], -Cos[Rational[41, 384] Pi]}, {
            Sin[Rational[37, 384] Pi], -Cos[Rational[37, 384] Pi]}, {
            Sin[Rational[29, 128] Pi], 
            Cos[Rational[29, 128] Pi]}, {-Sin[Rational[79, 384] Pi], -
            Cos[Rational[79, 384] Pi]}, {-Cos[Rational[29, 128] Pi], 
            Sin[Rational[29, 128] Pi]}, {-Cos[Rational[89, 384] Pi], 
            Sin[Rational[89, 384] Pi]}, {-Sin[Rational[27, 128] Pi], -
            Cos[Rational[27, 128] Pi]}, {-Sin[Rational[77, 384] Pi], -
            Cos[Rational[77, 384] Pi]}, {-Cos[Rational[85, 384] Pi], 
            Sin[Rational[85, 384] Pi]}, {
            Sin[Rational[13, 128] Pi], -Cos[Rational[13, 128] Pi]}, {
            Sin[Rational[89, 384] Pi], 
            Cos[Rational[89, 384] Pi]}, {-Cos[Rational[5, 128] Pi], -
            Sin[Rational[5, 128] Pi]}, {
            Cos[Rational[61, 384] Pi], -Sin[Rational[61, 384] Pi]}, {
            Cos[Rational[11, 384] Pi], 
            Sin[Rational[11, 384] Pi]}, {-Cos[Rational[67, 384] Pi], -
            Sin[Rational[67, 384] Pi]}, {-Sin[Rational[11, 128] Pi], -
            Cos[Rational[11, 128] Pi]}, {-Sin[Rational[41, 384] Pi], -
            Cos[Rational[41, 384] Pi]}, {
            Sin[Rational[85, 384] Pi], 
            Cos[Rational[85, 384] Pi]}, {-Sin[Rational[89, 384] Pi], -
            Cos[Rational[89, 384] Pi]}, {-Sin[Rational[29, 384] Pi], -
            Cos[Rational[29, 384] Pi]}, {-Sin[Rational[15, 128] Pi], -
            Cos[Rational[15, 128] Pi]}, {
            Sin[Rational[27, 128] Pi], 
            Cos[Rational[27, 128] Pi]}, {-Sin[Rational[85, 384] Pi], -
            Cos[Rational[85, 384] Pi]}, {
            Sin[Rational[77, 384] Pi], 
            Cos[Rational[77, 384] Pi]}, {-Cos[Rational[77, 384] Pi], 
            Sin[Rational[77, 384] Pi]}, {-Sin[Rational[73, 384] Pi], -
            Cos[Rational[73, 384] Pi]}, {-Cos[Rational[27, 128] Pi], 
            Sin[Rational[27, 128] Pi]}, {-Cos[Rational[19, 384] Pi], -
            Sin[Rational[19, 384] Pi]}, {-Cos[Rational[31, 128] Pi], 
            Sin[Rational[31, 128] Pi]}, {
            Cos[Rational[5, 128] Pi], 
            Sin[Rational[5, 128] Pi]}, {-Cos[Rational[21, 128] Pi], -
            Sin[Rational[21, 128] Pi]}, {
            Sin[Rational[43, 384] Pi], -Cos[Rational[43, 384] Pi]}, {
            Sin[Rational[31, 128] Pi], 
            Cos[Rational[31, 128] Pi]}, {-Cos[Rational[31, 384] Pi], -
            Sin[Rational[31, 384] Pi]}, {
            Sin[Rational[35, 384] Pi], -Cos[Rational[35, 384] Pi]}, {-
            Cos[Rational[71, 384] Pi], -Sin[Rational[71, 384] Pi]}, {
            Cos[Rational[19, 128] Pi], -Sin[Rational[19, 128] Pi]}, {-
            Sin[Rational[31, 128] Pi], -Cos[Rational[31, 128] Pi]}, {-
            Sin[Rational[37, 384] Pi], -Cos[Rational[37, 384] Pi]}, {-
            Cos[Rational[1, 128] Pi], -Sin[Rational[1, 128] Pi]}, {-
            Sin[Rational[25, 384] Pi], -Cos[Rational[25, 384] Pi]}, {
            Sin[Rational[71, 384] Pi], -Cos[Rational[71, 384] Pi]}, {-
            Sin[Rational[23, 128] Pi], -Cos[Rational[23, 128] Pi]}, {
            Sin[Rational[59, 384] Pi], -Cos[Rational[59, 384] Pi]}, {
            Cos[Rational[19, 384] Pi], 
            Sin[Rational[19, 384] Pi]}, {-Sin[Rational[55, 384] Pi], 
            Cos[Rational[55, 384] Pi]}, {-Sin[Rational[7, 128] Pi], -
            Cos[Rational[7, 128] Pi]}, {
            Sin[Rational[73, 384] Pi], 
            Cos[Rational[73, 384] Pi]}, {
            Cos[Rational[91, 384] Pi], 
            Sin[Rational[91, 384] Pi]}, {-Cos[Rational[23, 384] Pi], -
            Sin[Rational[23, 384] Pi]}, {
            Cos[Rational[95, 384] Pi], 
            Sin[Rational[95, 384] Pi]}, {-Cos[Rational[9, 128] Pi], -
            Sin[Rational[9, 128] Pi]}, {
            Sin[Rational[31, 384] Pi], -Cos[Rational[31, 384] Pi]}, {
            Cos[Rational[25, 384] Pi], -Sin[Rational[25, 384] Pi]}, {-
            Cos[Rational[29, 384] Pi], 
            Sin[Rational[29, 384] Pi]}, {
            Cos[Rational[29, 384] Pi], -Sin[Rational[29, 384] Pi]}, {-
            Cos[Rational[11, 128] Pi], 
            Sin[Rational[11, 128] Pi]}, {
            Cos[Rational[7, 384] Pi], 
            Sin[Rational[7, 384] Pi]}, {
            Cos[Rational[65, 384] Pi], -Sin[Rational[65, 384] Pi]}, {-
            Cos[Rational[11, 384] Pi], -Sin[Rational[11, 384] Pi]}, {
            Sin[Rational[41, 384] Pi], 
            Cos[Rational[41, 384] Pi]}, {-Cos[Rational[25, 128] Pi], -
            Sin[Rational[25, 128] Pi]}, {
            Cos[Rational[83, 384] Pi], 
            Sin[Rational[83, 384] Pi]}, {-Cos[Rational[95, 384] Pi], -
            Sin[Rational[95, 384] Pi]}, {-Cos[Rational[13, 384] Pi], 
            Sin[Rational[13, 384] Pi]}, {-Cos[Rational[91, 384] Pi], -
            Sin[Rational[91, 384] Pi]}, {-Cos[Rational[17, 384] Pi], 
            Sin[Rational[17, 384] Pi]}, {-Cos[Rational[7, 384] Pi], -
            Sin[Rational[7, 384] Pi]}, {-Cos[Rational[1, 384] Pi], 
            Sin[Rational[1, 384] Pi]}, {-Cos[Rational[79, 384] Pi], -
            Sin[Rational[79, 384] Pi]}, {-Sin[Rational[49, 384] Pi], -
            Cos[Rational[49, 384] Pi]}, {
            Sin[Rational[67, 384] Pi], -Cos[Rational[67, 384] Pi]}, {-
            Cos[Rational[73, 384] Pi], 
            Sin[Rational[73, 384] Pi]}, {
            Sin[Rational[83, 384] Pi], -Cos[Rational[83, 384] Pi]}, {-
            Sin[Rational[65, 384] Pi], -Cos[Rational[65, 384] Pi]}, {
            Sin[Rational[21, 128] Pi], -Cos[Rational[21, 128] Pi]}, {-
            Sin[Rational[95, 384] Pi], 
            Cos[Rational[95, 384] Pi]}, {
            Sin[Rational[29, 128] Pi], -Cos[Rational[29, 128] Pi]}, {-
            Cos[Rational[59, 384] Pi], -Sin[Rational[59, 384] Pi]}, {
            Sin[Rational[47, 384] Pi], -Cos[Rational[47, 384] Pi]}, {-
            Sin[Rational[17, 128] Pi], 
            Cos[Rational[17, 128] Pi]}, {-Cos[Rational[35, 384] Pi], -
            Sin[Rational[35, 384] Pi]}, {-Sin[Rational[17, 384] Pi], -
            Cos[Rational[17, 384] Pi]}, {-Sin[Rational[71, 384] Pi], 
            Cos[Rational[71, 384] Pi]}, {
            Sin[Rational[37, 384] Pi], 
            Cos[Rational[37, 384] Pi]}, {
            Sin[Rational[23, 128] Pi], 
            Cos[Rational[23, 128] Pi]}, {
            Cos[Rational[29, 128] Pi], 
            Sin[Rational[29, 128] Pi]}, {-Sin[Rational[1, 128] Pi], 
            Cos[Rational[1, 128] Pi]}, {-Cos[Rational[3, 128] Pi], 
            Sin[Rational[3, 128] Pi]}, {-Cos[Rational[29, 128] Pi], -
            Sin[Rational[29, 128] Pi]}, {-Cos[Rational[7, 128] Pi], 
            Sin[Rational[7, 128] Pi]}, {-Sin[Rational[7, 384] Pi], 
            Cos[Rational[7, 384] Pi]}, {-Cos[Rational[5, 384] Pi], 
            Sin[Rational[5, 384] Pi]}, {-Cos[Rational[83, 384] Pi], -
            Sin[Rational[83, 384] Pi]}, {
            Sin[Rational[9, 128] Pi], -Cos[Rational[9, 128] Pi]}, {
            Sin[Rational[25, 128] Pi], -Cos[Rational[25, 128] Pi]}, {
            Cos[Rational[53, 384] Pi], -Sin[Rational[53, 384] Pi]}, {
            Sin[Rational[55, 384] Pi], -Cos[Rational[55, 384] Pi]}, {
            Cos[Rational[23, 384] Pi], 
            Sin[Rational[23, 384] Pi]}, {-Sin[Rational[59, 384] Pi], 
            Cos[Rational[59, 384] Pi]}, {
            Cos[Rational[47, 384] Pi], 
            Sin[Rational[47, 384] Pi]}, {-Sin[Rational[67, 384] Pi], 
            Cos[Rational[67, 384] Pi]}, {
            Sin[Rational[11, 128] Pi], 
            Cos[Rational[11, 128] Pi]}, {
            Cos[Rational[11, 128] Pi], -Sin[Rational[11, 128] Pi]}, {-
            Cos[Rational[37, 384] Pi], 
            Sin[Rational[37, 384] Pi]}, {
            Cos[Rational[15, 128] Pi], -Sin[Rational[15, 128] Pi]}, {
            Cos[Rational[23, 128] Pi], -Sin[Rational[23, 128] Pi]}, {
            Cos[Rational[1, 128] Pi], 
            Sin[Rational[1, 128] Pi]}, {
            Sin[Rational[23, 384] Pi], -Cos[Rational[23, 384] Pi]}, {
            Cos[Rational[21, 128] Pi], 
            Sin[Rational[21, 128] Pi]}, {
            Cos[Rational[31, 384] Pi], 
            Sin[Rational[31, 384] Pi]}, {
            Cos[Rational[7, 128] Pi], -Sin[Rational[7, 128] Pi]}, {-
            Cos[Rational[25, 384] Pi], 
            Sin[Rational[25, 384] Pi]}, {-Sin[Rational[91, 384] Pi], 
            Cos[Rational[91, 384] Pi]}, {
            Sin[Rational[15, 128] Pi], 
            Cos[Rational[15, 128] Pi]}, {-Sin[Rational[61, 384] Pi], -
            Cos[Rational[61, 384] Pi]}, {
            Cos[Rational[79, 384] Pi], 
            Sin[Rational[79, 384] Pi]}, {-Cos[Rational[13, 128] Pi], -
            Sin[Rational[13, 128] Pi]}, {-Sin[Rational[13, 384] Pi], -
            Cos[Rational[13, 384] Pi]}, {-Sin[Rational[11, 384] Pi], 
            Cos[Rational[11, 384] Pi]}, {-Sin[Rational[43, 384] Pi], 
            Cos[Rational[43, 384] Pi]}, {
            Cos[Rational[71, 384] Pi], 
            Sin[Rational[71, 384] Pi]}, {-Sin[Rational[53, 384] Pi], -
            Cos[Rational[53, 384] Pi]}, {
            Cos[Rational[17, 128] Pi], 
            Sin[Rational[17, 128] Pi]}, {
            Cos[Rational[43, 384] Pi], 
            Sin[Rational[43, 384] Pi]}, {
            Sin[Rational[1, 384] Pi], 
            Cos[Rational[1, 384] Pi]}, {
            Sin[Rational[25, 384] Pi], 
            Cos[Rational[25, 384] Pi]}, {
            Sin[Rational[5, 128] Pi], -Cos[Rational[5, 128] Pi]}, {-
            Sin[Rational[25, 128] Pi], 
            Cos[Rational[25, 128] Pi]}, {-Cos[Rational[65, 384] Pi], 
            Sin[Rational[65, 384] Pi]}, {
            Sin[Rational[65, 384] Pi], 
            Cos[Rational[65, 384] Pi]}, {-Cos[Rational[49, 384] Pi], 
            Sin[Rational[49, 384] Pi]}, {
            Cos[Rational[85, 384] Pi], -Sin[Rational[85, 384] Pi]}, {
            Cos[Rational[89, 384] Pi], -Sin[Rational[89, 384] Pi]}}}]]}, 
      TagBox[GraphicsGroupBox[GraphicsComplexBox[CompressedData["
1:eJxdmHtMlmUYxgFlwwNOFMvME2ytNN0sNQ1zt810EXioqbmWy4mSyxQVjzOc
oSZKhSjM1NTwkKLiCVIJ1o0kOlMIMARFFD7Oh+97UxOFMlrbcz1/XH9927v3
8D3PfV/X9bufoHlRHyzw8fLy2uDt5fX/b0rdh08nXdogX6T4FWV2OLo+8tCT
mUG7xT9/09y4Z47eXVO1qdPwLHENcPc7X+SIuV9xf/b4yZ1e+fOwDG9+cuSl
Nkc9/0Se6igplyWLfBt2FrZIwpbprnLvCzLrm4J1t+850iM6ddbUWSo3D1Qt
nZ/rSKzr4LjNq9zqfhDQf2NbGb6v+P6+vIsnRk9Nk5/qZngSHzrq/OWac6z6
jqwYu71/dRe3PA4YFRSW3KJzLr+2e8mVu4Jfc10aYuR45i+XJKMpelvtGUda
XyjYMbjknITEeaflNzpi/r/i/6+cGJxRmOrWxyOP5t7yLtOai4N8nvat0TP5
p2ML6hpkRHF0YWDRr5pe/v2ekH2OBFwOr/RbVifrn0s8Ufh7nYZcm1I06m23
bnMfm7jWua3HtbRncOBNzVkTk7013oN1iFmXPm6fWv1eV48mTFwXc8D/FvbN
7iOeM++x68I6B2fkL82Kb5S7P5a5Dk6qVuyr2We9IvHvBLryNDVsWfv8LY5k
Th88pP10tf4dsSM0OKRRWh+07k7tU6ChHSuyN/ZzsA6sC+sQsy7eP+0zIfNQ
TUaFlC8ILes+uwW/9npVavq45A012vnVYcV5iQ2oh6Ie94YNmHmhZ53s6nDG
+A2vV1NX1Jnrj/0X7P/43Bvne5e7df+k9hGb/Upxv6JfTF1tnUsOny74rnex
BmYv3r/8nIf3V69+/daz5WM86u875c4bASV2XVgPnjPvsX2FdQ3cc3ZuUnmj
9D/ad23bbRfeJ+Z9OuLYiRJnZZPkdikoyf+3Cjqyurq+4NTqyh6FGq5HAh62
eVBX1Flp/Wr0I9CPl0+f2V27NGtw2Isz0gdWCdXP9rXpcwnNC9xePK1ZxIk5
cv9kpWytnX/y0VhHIqat/yy22w35ec/T8sPx93VoctTJnNJm9IugX9J92w65
TtVKfU1FUGpcvVL/cj25XlaHpq/UJ/L5pI97/6G9qt5tiZvnsT4CPeC6uc/6
kvEp29fo88iSR5d3PriqSxd2HRIZ5VidQDdmnYp1mz5EXyr5F3wKviUxlUVS
0bdF92b5r3o/5Z7g11y3OoQuG2urs36rq9Eluzq69RjXILEvT/7h6JAmud+r
Itx3sQu6Vvga+asYPQv0TP6h2Efoc3Xr2XnFAUUaEbqwfkKpB74u8Fn6vtL+
sh8K+ZvAF+GT8Hmzb2r6An2iyaGfD43quKYjoxddl5mO1QV0gjqirugj9BXp
x+oMuqO8UtO/gv41v/Y66dPmCvrV9I+gfygfBfsCPb2e88mXiWG1mlaQFpTm
qhfyA/iIwiexT+gv8h+l/FK8x7xXjX4V+oVPI3/gi0Z3Qvlp62DqIsY/BP4B
H4A+TH8r+hvvhZ7Jj6xPwjfNe+FT0DN0z/5q+9b0sdUVdGbqAp3bXEBO7928
5sqnOU3yVefslI8SqpC3Ar1g3WYf2I/FPK/meVtn+CjpUY3viPEh+LnAzwfN
6B5R/2alJoz+NikrqZn5RU3/iOkfy0W8r+Am+DB8Ge813xH4DHwHvgafw33m
OSW/V5PfYvJbyc/ANZZzUEf4CHIOugUH4L3oW+QQuA86Iz+zfQ0fwj7D76Ej
+Dbxqs1N5Cj2Gbo1fa7oe+geOWL6Exxh64rcpjxl/sD34BPoS/SZ5VxwD/Ep
5y+4CnWyHIk+Rw5gHykfrY/AR1FXcDq4DH1DeazwYVNfy5nQBfE457FS3iEP
FXkIHwLXYF/he9A1dAoOB5dTHivltRK/wR/BLdbXwC3E//Anm7OmH6zuiaeU
+ML6DnIRnAfuwz4gp2nesL4DzodP4n+hT8D5xLPIWcx5zI/QLerM/KjET3Yu
hO4wV6GPie+YxxWcAJ7EHIK6Ej9hPrMcAl8HFxFPW46FzxF/Cs17SvyN79jv
gpvQt8hpzANYBziZeNX6LnKBeNpyCbgAcyB81+yH9XniW7tPuI/8judBJZ5i
fxHyd84rIf9QymvmQyF+YV5V4kPOI+YtpXmW+YfzmedT5iv2R84zzh/OFyX/
FJrPmUfZv5XmYyF/UeIrJV5ROi/g/OfzCaX8ZV5XyislnuPzACUeY54XOp/g
PBGaH5j3lM4rhPKb+Yt5l/1RiKfY3/n8hnmL+UNJv5xvSvOTUH6xPwv5CfsN
8wP7sVC+MF8q8Rj7v5DfKvEsz1vs30J+pXRepDRPKfGeEH8pnScxDwj5JfME
87HQ+SPzk5CfKuWv0PmTUP5xfijNV0p5rzSP8vmqEp/yfMnzihA/CfGC0LzF
fM/zntK8qHS+wPMz5y/zsxA/KvGREB8wn/F8qnQ+yvOm0nkDz+PME0LzJPOi
0vwtNG8KnbcLzZ98Pq7EF8wLPL/xeTrPW0rzh/4Hd+mmUg==
         "], {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
           ArrowBox[CompressedData["
1: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
            "], 0.02261092188364197]}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[1, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[2, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[3, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[4, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[5, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[6, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[7, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[8, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[9, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[10, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[11, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[12, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[13, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[14, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[15, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[16, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[17, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[18, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[19, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[20, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[21, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[22, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[23, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[24, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[25, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[26, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[27, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[28, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[29, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[30, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[31, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[32, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[33, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[34, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[35, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[36, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[37, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[38, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[39, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[40, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[41, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[42, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[43, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[44, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[45, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[46, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[47, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[48, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[49, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[50, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[51, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[52, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[53, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[54, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[55, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[56, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[57, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[58, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[59, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[60, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[61, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[62, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[63, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[64, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[65, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[66, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[67, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[68, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[69, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[70, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[71, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[72, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[73, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[74, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[75, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[76, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[77, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[78, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[79, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[80, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[81, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[82, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[83, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[84, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[85, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[86, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[87, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[88, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[89, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[90, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[91, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[92, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[93, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[94, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[95, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[96, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[97, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[98, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[99, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[100, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[101, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[102, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[103, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[104, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[105, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[106, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[107, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[108, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[109, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[110, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[111, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[112, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[113, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[114, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[115, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[116, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[117, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[118, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[119, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[120, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[121, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[122, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[123, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[124, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[125, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[126, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[127, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[128, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[129, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[130, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[131, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[132, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[133, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[134, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[135, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[136, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[137, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[138, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[139, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[140, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[141, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[142, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[143, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[144, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[145, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[146, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[147, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[148, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[149, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[150, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[151, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[152, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[153, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[154, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[155, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[156, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[157, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[158, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[159, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[160, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[161, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[162, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[163, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[164, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[165, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[166, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[167, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[168, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[169, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[170, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[171, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[172, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[173, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[174, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[175, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[176, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[177, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[178, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[179, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[180, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[181, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[182, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[183, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[184, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[185, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[186, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[187, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[188, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[189, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[190, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[191, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[192, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[193, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[194, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[195, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[196, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[197, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[198, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[199, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[200, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[201, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[202, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[203, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[204, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[205, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[206, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[207, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[208, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[209, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[210, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[211, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[212, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[213, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[214, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[215, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[216, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[217, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[218, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[219, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[220, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[221, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[222, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[223, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[224, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[225, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[226, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[227, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[228, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[229, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[230, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[231, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[232, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[233, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[234, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[235, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[236, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[237, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[238, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[239, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[240, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[241, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[242, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[243, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[244, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[245, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[246, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[247, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[248, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[249, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[250, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[251, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[252, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[253, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[254, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[255, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[256, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[257, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[258, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[259, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[260, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[261, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[262, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[263, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[264, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[265, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[266, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[267, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[268, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[269, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[270, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[271, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[272, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[273, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[274, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[275, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[276, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[277, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[278, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[279, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[280, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[281, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[282, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[283, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[284, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[285, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[286, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[287, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[288, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[289, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[290, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[291, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[292, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[293, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[294, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[295, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[296, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[297, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[298, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[299, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[300, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[301, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[302, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[303, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[304, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[305, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[306, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[307, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[308, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[309, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[310, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[311, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[312, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[313, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[314, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[315, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[316, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[317, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[318, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[319, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[320, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[321, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[322, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[323, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[324, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[325, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[326, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[327, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[328, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[329, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[330, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[331, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[332, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[333, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[334, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[335, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[336, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[337, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[338, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[339, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[340, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[341, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[342, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[343, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[344, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[345, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[346, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[347, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[348, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[349, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[350, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[351, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[352, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[353, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[354, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[355, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[356, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[357, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[358, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[359, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[360, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[361, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[362, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[363, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[364, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[365, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[366, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[367, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[368, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[369, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[370, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[371, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[372, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[373, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[374, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[375, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[376, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[377, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[378, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[379, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[380, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[381, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[382, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[383, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], 
            DiskBox[384, 0.02261092188364197]}}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    FormatType->TraditionalForm,
    FrameTicks->None]}], "}"}]], "Output",
 CellChangeTimes->{
  3.8772849701328273`*^9, {3.877285005696604*^9, 3.8772850488153286`*^9}},
 CellLabel->
  "Out[209]=",ExpressionUUID->"3815054d-73a8-4752-a56a-71d3df128503"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Exercise 49 ", "Section",
 CellChangeTimes->{{3.87728508798776*^9, 3.877285089456597*^9}, {
  3.877285219108795*^9, 
  3.8772852205150056`*^9}},ExpressionUUID->"f1bc55f5-93ab-49f2-b390-\
f07aee86b611"],

Cell["\<\
Draw diagrams of all the cubic graphs with at most 6 vertices:\
\>", "Text",
 CellChangeTimes->{{3.877285222256328*^9, 
  3.8772852380761023`*^9}},ExpressionUUID->"f79feb40-2901-4509-aaf8-\
353661a4db93"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GraphData", "[", "\"\<Cubic\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.877285272792631*^9, 3.8772852775453043`*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"910be229-4d4f-4ff1-a286-5c9a56490152"],

Cell[BoxData[
 TemplateBox[<|"shortenedBoxes" -> TagBox[
     RowBox[{"{", 
       RowBox[{
        "\"10K4\"", ",", "\"10Q3\"", ",", "\"2K3,3\"", ",", "\"2K4\"", ",", 
         "\"2M4\"", ",", "\"2M5\"", ",", "\"2P\"", ",", "\"2Q3\"", ",", 
         "\"2Y3\"", ",", "\"2Y5\"", ",", "\"3K3,3\"", ",", "\"3K4\"", ",", 
         "\"3Q3\"", ",", "\"3Y3\"", ",", "\"4K4\"", ",", "\"4Q3\"", ",", 
         "\"5K4\"", ",", "\"5Q3\"", ",", "\"6K4\"", ",", "\"6Q3\"", ",", 
         "\"7K4\"", ",", 
         TemplateBox[{"2660"}, "OutputSizeLimit`Skeleton"], ",", 
         "\"TwoDodecahedra\"", ",", "\"UtilityGraph\"", ",", 
         "\"WagnerGraph\"", ",", "\"WatkinsSnark\"", ",", 
         RowBox[{"{", 
           RowBox[{"\"WeakSnark\"", ",", 
             RowBox[{"{", 
               RowBox[{"22", ",", "4"}], "}"}]}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"\"WeakSnark\"", ",", 
             RowBox[{"{", 
               RowBox[{"22", ",", "5"}], "}"}]}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"\"WeakSnark\"", ",", 
             RowBox[{"{", 
               RowBox[{"22", ",", "9"}], "}"}]}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"\"WeakSnark\"", ",", 
             RowBox[{"{", 
               RowBox[{"22", ",", "10"}], "}"}]}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"\"WeakSnark\"", ",", 
             RowBox[{"{", 
               RowBox[{"22", ",", "11"}], "}"}]}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"\"WeakSnark\"", ",", 
             RowBox[{"{", 
               RowBox[{"22", ",", "12"}], "}"}]}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"\"WeakSnark\"", ",", 
             RowBox[{"{", 
               RowBox[{"22", ",", "18"}], "}"}]}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"\"WeakSnark\"", ",", 
             RowBox[{"{", 
               RowBox[{"22", ",", "19"}], "}"}]}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"\"WeakSnark\"", ",", 
             RowBox[{"{", 
               RowBox[{"22", ",", "24"}], "}"}]}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"\"WeakSnark\"", ",", 
             RowBox[{"{", 
               RowBox[{"22", ",", "25"}], "}"}]}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"\"WeakSnark\"", ",", 
             RowBox[{"{", 
               RowBox[{"22", ",", "26"}], "}"}]}], "}"}], ",", 
         "\"WindowGraph\"", ",", "\"Y3+2K4\"", ",", "\"Y3+K3,3\"", ",", 
         "\"Y3+K4\"", ",", "\"Y5+K4\"", ",", "\"ZamfirescuGraph36\""}], "}"}],
      Short[#, 5]& ], "line" -> 1, "sessionID" -> 16937363724473571974, 
   "byteCount" -> 589512, "size" -> 5, "stored" -> True, 
   "expr" -> {
    "10K4", "10Q3", "2K3,3", "2K4", "2M4", "2M5", "2P", "2Q3", "2Y3", "2Y5", 
     "3K3,3", "3K4", "3Q3", "3Y3", "4K4", "4Q3", "5K4", "5Q3", "6K4", "6Q3", 
     "7K4", "7Q3", "8K4", "8Q3", "9K4", "9Q3", "AntiboxGraph", "AntilogGraph",
      "ArayaWienerGraph70", "ArayaWienerGraph88", "Balaban10Cage", 
     "Balaban11Cage", "BarnetteBosakLederbergGraph", "BigdrumGraph", 
     "BiggsSmithGraph", {"BlanusaSnark", {1, 1}}, {"BlanusaSnark", {1, 2}}, {
     "BlanusaSnark", {2, 1}}, {"BlanusaSnark", {2, 2}}, {
     "BlanusaSnark", {3, 1}}, {"BlanusaSnark", {3, 2}}, {
     "BlanusaSnark", {4, 1}}, {"BlanusaSnark", {4, 2}}, "BoxGraph", {
     "Cage", {3, 13}}, {"Cage", {3, 14}}, {"Cage", {3, 9}, 1}, {
     "Cage", {3, 9}, 2}, {"Cage", {3, 9}, 3}, {"Cage", {3, 9}, 4}, {
     "Cage", {3, 9}, 5}, {"Cage", {3, 9}, 6}, {"Cage", {3, 9}, 7}, {
     "Cage", {3, 9}, 8}, {"Cage", {3, 9}, 9}, {"Cage", {3, 9}, 10}, {
     "Cage", {3, 9}, 11}, {"Cage", {3, 9}, 12}, {"Cage", {3, 9}, 13}, {
     "Cage", {3, 9}, 14}, {"Cage", {3, 9}, 15}, {"Cage", {3, 9}, 16}, {
     "Cage", {3, 9}, 17}, {"Cage", {3, 9}, 18}, "CelminsSwartSnark1", 
     "CelminsSwartSnark2", "ConcertinaGraph", "CoxeterGraph", {
     "CrossedPrism", 8}, {"CrossedPrism", 10}, {"CrossedPrism", 12}, {
     "CrossedPrism", 14}, {"CrossedPrism", 16}, {"CrossedPrism", 18}, {
     "CrossedPrism", 20}, {"CrossedPrism", 22}, {"CrossedPrism", 24}, 
     "CrossingNumberGraph10A", "CrossingNumberGraph10B", 
     "CrossingNumberGraph12A", "CrossingNumberGraph2B", 
     "CrossingNumberGraph3A", "CrossingNumberGraph3B", 
     "CrossingNumberGraph3D", "CrossingNumberGraph3E", 
     "CrossingNumberGraph3F", "CrossingNumberGraph3H", 
     "CrossingNumberGraph5B", "CrossingNumberGraph6B", 
     "CrossingNumberGraph6C", "CrossingNumberGraph7A", 
     "CrossingNumberGraph7B", "CrossingNumberGraph7C", 
     "CrossingNumberGraph7D", "CrossingNumberGraph8C", 
     "CrossingNumberGraph9A", {"CubeConnectedCycle", 4}, {
     "CubeConnectedCycle", 5}, {"CubeConnectedCycle", 6}, {
     "CubeConnectedCycle", 7}, {"CubeConnectedCycle", 8}, "CubeplexGraph", {
     "Cubic", {8, 3}}, {"Cubic", {10, 1}}, {"Cubic", {10, 2}}, {
     "Cubic", {10, 3}}, {"Cubic", {10, 4}}, {"Cubic", {10, 5}}, {
     "Cubic", {10, 8}}, {"Cubic", {10, 9}}, {"Cubic", {10, 10}}, {
     "Cubic", {10, 11}}, {"Cubic", {10, 13}}, {"Cubic", {10, 16}}, {
     "Cubic", {10, 18}}, {"Cubic", {12, 1}}, {"Cubic", {12, 2}}, {
     "Cubic", {12, 3}}, {"Cubic", {12, 4}}, {"Cubic", {12, 5}}, {
     "Cubic", {12, 6}}, {"Cubic", {12, 7}}, {"Cubic", {12, 8}}, {
     "Cubic", {12, 9}}, {"Cubic", {12, 10}}, {"Cubic", {12, 11}}, {
     "Cubic", {12, 12}}, {"Cubic", {12, 13}}, {"Cubic", {12, 14}}, {
     "Cubic", {12, 15}}, {"Cubic", {12, 16}}, {"Cubic", {12, 17}}, {
     "Cubic", {12, 18}}, {"Cubic", {12, 19}}, {"Cubic", {12, 20}}, {
     "Cubic", {12, 21}}, {"Cubic", {12, 22}}, {"Cubic", {12, 23}}, {
     "Cubic", {12, 24}}, {"Cubic", {12, 25}}, {"Cubic", {12, 26}}, {
     "Cubic", {12, 27}}, {"Cubic", {12, 28}}, {"Cubic", {12, 31}}, {
     "Cubic", {12, 33}}, {"Cubic", {12, 34}}, {"Cubic", {12, 35}}, {
     "Cubic", {12, 36}}, {"Cubic", {12, 37}}, {"Cubic", {12, 38}}, {
     "Cubic", {12, 40}}, {"Cubic", {12, 41}}, {"Cubic", {12, 42}}, {
     "Cubic", {12, 43}}, {"Cubic", {12, 45}}, {"Cubic", {12, 46}}, {
     "Cubic", {12, 47}}, {"Cubic", {12, 48}}, {"Cubic", {12, 49}}, {
     "Cubic", {12, 50}}, {"Cubic", {12, 51}}, {"Cubic", {12, 52}}, {
     "Cubic", {12, 53}}, {"Cubic", {12, 54}}, {"Cubic", {12, 55}}, {
     "Cubic", {12, 56}}, {"Cubic", {12, 57}}, {"Cubic", {12, 58}}, {
     "Cubic", {12, 60}}, {"Cubic", {12, 61}}, {"Cubic", {12, 62}}, {
     "Cubic", {12, 64}}, {"Cubic", {12, 65}}, {"Cubic", {12, 66}}, {
     "Cubic", {12, 67}}, {"Cubic", {12, 69}}, {"Cubic", {12, 70}}, {
     "Cubic", {12, 73}}, {"Cubic", {12, 74}}, {"Cubic", {12, 75}}, {
     "Cubic", {12, 76}}, {"Cubic", {12, 77}}, {"Cubic", {12, 78}}, {
     "Cubic", {12, 79}}, {"Cubic", {12, 82}}, {"Cubic", {12, 91}}, {
     "Cubic", {12, 93}}, {"Cubic", {12, 94}}, {"Cubic", {14, 1}}, {
     "Cubic", {14, 2}}, {"Cubic", {14, 3}}, {"Cubic", {14, 4}}, {
     "Cubic", {14, 5}}, {"Cubic", {14, 6}}, {"Cubic", {14, 7}}, {
     "Cubic", {14, 8}}, {"Cubic", {14, 9}}, {"Cubic", {14, 10}}, {
     "Cubic", {14, 11}}, {"Cubic", {14, 12}}, {"Cubic", {14, 13}}, {
     "Cubic", {14, 14}}, {"Cubic", {14, 15}}, {"Cubic", {14, 16}}, {
     "Cubic", {14, 17}}, {"Cubic", {14, 18}}, {"Cubic", {14, 19}}, {
     "Cubic", {14, 20}}, {"Cubic", {14, 21}}, {"Cubic", {14, 22}}, {
     "Cubic", {14, 23}}, {"Cubic", {14, 24}}, {"Cubic", {14, 25}}, {
     "Cubic", {14, 26}}, {"Cubic", {14, 27}}, {"Cubic", {14, 28}}, {
     "Cubic", {14, 29}}, {"Cubic", {14, 30}}, {"Cubic", {14, 31}}, {
     "Cubic", {14, 32}}, {"Cubic", {14, 33}}, {"Cubic", {14, 34}}, {
     "Cubic", {14, 35}}, {"Cubic", {14, 36}}, {"Cubic", {14, 37}}, {
     "Cubic", {14, 38}}, {"Cubic", {14, 39}}, {"Cubic", {14, 40}}, {
     "Cubic", {14, 41}}, {"Cubic", {14, 42}}, {"Cubic", {14, 43}}, {
     "Cubic", {14, 44}}, {"Cubic", {14, 45}}, {"Cubic", {14, 46}}, {
     "Cubic", {14, 47}}, {"Cubic", {14, 48}}, {"Cubic", {14, 49}}, {
     "Cubic", {14, 50}}, {"Cubic", {14, 51}}, {"Cubic", {14, 52}}, {
     "Cubic", {14, 53}}, {"Cubic", {14, 54}}, {"Cubic", {14, 55}}, {
     "Cubic", {14, 56}}, {"Cubic", {14, 57}}, {"Cubic", {14, 58}}, {
     "Cubic", {14, 59}}, {"Cubic", {14, 60}}, {"Cubic", {14, 61}}, {
     "Cubic", {14, 62}}, {"Cubic", {14, 63}}, {"Cubic", {14, 64}}, {
     "Cubic", {14, 65}}, {"Cubic", {14, 66}}, {"Cubic", {14, 67}}, {
     "Cubic", {14, 68}}, {"Cubic", {14, 69}}, {"Cubic", {14, 70}}, {
     "Cubic", {14, 71}}, {"Cubic", {14, 72}}, {"Cubic", {14, 73}}, {
     "Cubic", {14, 74}}, {"Cubic", {14, 75}}, {"Cubic", {14, 76}}, {
     "Cubic", {14, 77}}, {"Cubic", {14, 78}}, {"Cubic", {14, 79}}, {
     "Cubic", {14, 80}}, {"Cubic", {14, 81}}, {"Cubic", {14, 82}}, {
     "Cubic", {14, 83}}, {"Cubic", {14, 84}}, {"Cubic", {14, 85}}, {
     "Cubic", {14, 86}}, {"Cubic", {14, 87}}, {"Cubic", {14, 88}}, {
     "Cubic", {14, 89}}, {"Cubic", {14, 90}}, {"Cubic", {14, 91}}, {
     "Cubic", {14, 92}}, {"Cubic", {14, 93}}, {"Cubic", {14, 94}}, {
     "Cubic", {14, 95}}, {"Cubic", {14, 96}}, {"Cubic", {14, 97}}, {
     "Cubic", {14, 98}}, {"Cubic", {14, 99}}, {"Cubic", {14, 100}}, {
     "Cubic", {14, 101}}, {"Cubic", {14, 102}}, {"Cubic", {14, 103}}, {
     "Cubic", {14, 104}}, {"Cubic", {14, 105}}, {"Cubic", {14, 106}}, {
     "Cubic", {14, 107}}, {"Cubic", {14, 108}}, {"Cubic", {14, 109}}, {
     "Cubic", {14, 110}}, {"Cubic", {14, 111}}, {"Cubic", {14, 112}}, {
     "Cubic", {14, 113}}, {"Cubic", {14, 114}}, {"Cubic", {14, 115}}, {
     "Cubic", {14, 116}}, {"Cubic", {14, 117}}, {"Cubic", {14, 118}}, {
     "Cubic", {14, 119}}, {"Cubic", {14, 120}}, {"Cubic", {14, 121}}, {
     "Cubic", {14, 122}}, {"Cubic", {14, 123}}, {"Cubic", {14, 124}}, {
     "Cubic", {14, 125}}, {"Cubic", {14, 126}}, {"Cubic", {14, 127}}, {
     "Cubic", {14, 128}}, {"Cubic", {14, 129}}, {"Cubic", {14, 130}}, {
     "Cubic", {14, 131}}, {"Cubic", {14, 132}}, {"Cubic", {14, 133}}, {
     "Cubic", {14, 134}}, {"Cubic", {14, 135}}, {"Cubic", {14, 136}}, {
     "Cubic", {14, 137}}, {"Cubic", {14, 138}}, {"Cubic", {14, 139}}, {
     "Cubic", {14, 140}}, {"Cubic", {14, 141}}, {"Cubic", {14, 142}}, {
     "Cubic", {14, 143}}, {"Cubic", {14, 144}}, {"Cubic", {14, 145}}, {
     "Cubic", {14, 146}}, {"Cubic", {14, 147}}, {"Cubic", {14, 148}}, {
     "Cubic", {14, 149}}, {"Cubic", {14, 150}}, {"Cubic", {14, 151}}, {
     "Cubic", {14, 152}}, {"Cubic", {14, 153}}, {"Cubic", {14, 154}}, {
     "Cubic", {14, 155}}, {"Cubic", {14, 156}}, {"Cubic", {14, 157}}, {
     "Cubic", {14, 158}}, {"Cubic", {14, 159}}, {"Cubic", {14, 160}}, {
     "Cubic", {14, 161}}, {"Cubic", {14, 162}}, {"Cubic", {14, 164}}, {
     "Cubic", {14, 166}}, {"Cubic", {14, 169}}, {"Cubic", {14, 170}}, {
     "Cubic", {14, 171}}, {"Cubic", {14, 172}}, {"Cubic", {14, 173}}, {
     "Cubic", {14, 174}}, {"Cubic", {14, 175}}, {"Cubic", {14, 176}}, {
     "Cubic", {14, 177}}, {"Cubic", {14, 179}}, {"Cubic", {14, 180}}, {
     "Cubic", {14, 182}}, {"Cubic", {14, 183}}, {"Cubic", {14, 186}}, {
     "Cubic", {14, 187}}, {"Cubic", {14, 188}}, {"Cubic", {14, 189}}, {
     "Cubic", {14, 190}}, {"Cubic", {14, 191}}, {"Cubic", {14, 192}}, {
     "Cubic", {14, 193}}, {"Cubic", {14, 194}}, {"Cubic", {14, 195}}, {
     "Cubic", {14, 196}}, {"Cubic", {14, 197}}, {"Cubic", {14, 198}}, {
     "Cubic", {14, 199}}, {"Cubic", {14, 200}}, {"Cubic", {14, 201}}, {
     "Cubic", {14, 202}}, {"Cubic", {14, 203}}, {"Cubic", {14, 204}}, {
     "Cubic", {14, 205}}, {"Cubic", {14, 206}}, {"Cubic", {14, 208}}, {
     "Cubic", {14, 209}}, {"Cubic", {14, 210}}, {"Cubic", {14, 211}}, {
     "Cubic", {14, 212}}, {"Cubic", {14, 214}}, {"Cubic", {14, 215}}, {
     "Cubic", {14, 216}}, {"Cubic", {14, 217}}, {"Cubic", {14, 218}}, {
     "Cubic", {14, 219}}, {"Cubic", {14, 220}}, {"Cubic", {14, 221}}, {
     "Cubic", {14, 222}}, {"Cubic", {14, 223}}, {"Cubic", {14, 224}}, {
     "Cubic", {14, 225}}, {"Cubic", {14, 226}}, {"Cubic", {14, 227}}, {
     "Cubic", {14, 228}}, {"Cubic", {14, 229}}, {"Cubic", {14, 230}}, {
     "Cubic", {14, 231}}, {"Cubic", {14, 232}}, {"Cubic", {14, 233}}, {
     "Cubic", {14, 234}}, {"Cubic", {14, 236}}, {"Cubic", {14, 237}}, {
     "Cubic", {14, 238}}, {"Cubic", {14, 239}}, {"Cubic", {14, 240}}, {
     "Cubic", {14, 241}}, {"Cubic", {14, 242}}, {"Cubic", {14, 243}}, {
     "Cubic", {14, 244}}, {"Cubic", {14, 245}}, {"Cubic", {14, 246}}, {
     "Cubic", {14, 247}}, {"Cubic", {14, 248}}, {"Cubic", {14, 249}}, {
     "Cubic", {14, 250}}, {"Cubic", {14, 251}}, {"Cubic", {14, 252}}, {
     "Cubic", {14, 253}}, {"Cubic", {14, 254}}, {"Cubic", {14, 255}}, {
     "Cubic", {14, 256}}, {"Cubic", {14, 257}}, {"Cubic", {14, 258}}, {
     "Cubic", {14, 259}}, {"Cubic", {14, 260}}, {"Cubic", {14, 261}}, {
     "Cubic", {14, 262}}, {"Cubic", {14, 263}}, {"Cubic", {14, 264}}, {
     "Cubic", {14, 265}}, {"Cubic", {14, 266}}, {"Cubic", {14, 267}}, {
     "Cubic", {14, 268}}, {"Cubic", {14, 269}}, {"Cubic", {14, 270}}, {
     "Cubic", {14, 271}}, {"Cubic", {14, 272}}, {"Cubic", {14, 273}}, {
     "Cubic", {14, 274}}, {"Cubic", {14, 275}}, {"Cubic", {14, 276}}, {
     "Cubic", {14, 277}}, {"Cubic", {14, 278}}, {"Cubic", {14, 279}}, {
     "Cubic", {14, 280}}, {"Cubic", {14, 281}}, {"Cubic", {14, 282}}, {
     "Cubic", {14, 283}}, {"Cubic", {14, 284}}, {"Cubic", {14, 285}}, {
     "Cubic", {14, 286}}, {"Cubic", {14, 287}}, {"Cubic", {14, 288}}, {
     "Cubic", {14, 289}}, {"Cubic", {14, 290}}, {"Cubic", {14, 291}}, {
     "Cubic", {14, 292}}, {"Cubic", {14, 294}}, {"Cubic", {14, 295}}, {
     "Cubic", {14, 296}}, {"Cubic", {14, 297}}, {"Cubic", {14, 298}}, {
     "Cubic", {14, 299}}, {"Cubic", {14, 300}}, {"Cubic", {14, 301}}, {
     "Cubic", {14, 302}}, {"Cubic", {14, 303}}, {"Cubic", {14, 304}}, {
     "Cubic", {14, 305}}, {"Cubic", {14, 306}}, {"Cubic", {14, 307}}, {
     "Cubic", {14, 308}}, {"Cubic", {14, 309}}, {"Cubic", {14, 310}}, {
     "Cubic", {14, 311}}, {"Cubic", {14, 312}}, {"Cubic", {14, 313}}, {
     "Cubic", {14, 314}}, {"Cubic", {14, 315}}, {"Cubic", {14, 316}}, {
     "Cubic", {14, 317}}, {"Cubic", {14, 318}}, {"Cubic", {14, 319}}, {
     "Cubic", {14, 320}}, {"Cubic", {14, 321}}, {"Cubic", {14, 322}}, {
     "Cubic", {14, 323}}, {"Cubic", {14, 324}}, {"Cubic", {14, 325}}, {
     "Cubic", {14, 326}}, {"Cubic", {14, 327}}, {"Cubic", {14, 328}}, {
     "Cubic", {14, 329}}, {"Cubic", {14, 330}}, {"Cubic", {14, 331}}, {
     "Cubic", {14, 332}}, {"Cubic", {14, 333}}, {"Cubic", {14, 334}}, {
     "Cubic", {14, 335}}, {"Cubic", {14, 336}}, {"Cubic", {14, 337}}, {
     "Cubic", {14, 338}}, {"Cubic", {14, 339}}, {"Cubic", {14, 340}}, {
     "Cubic", {14, 341}}, {"Cubic", {14, 342}}, {"Cubic", {14, 343}}, {
     "Cubic", {14, 344}}, {"Cubic", {14, 345}}, {"Cubic", {14, 346}}, {
     "Cubic", {14, 347}}, {"Cubic", {14, 348}}, {"Cubic", {14, 349}}, {
     "Cubic", {14, 350}}, {"Cubic", {14, 351}}, {"Cubic", {14, 352}}, {
     "Cubic", {14, 353}}, {"Cubic", {14, 354}}, {"Cubic", {14, 355}}, {
     "Cubic", {14, 356}}, {"Cubic", {14, 357}}, {"Cubic", {14, 358}}, {
     "Cubic", {14, 359}}, {"Cubic", {14, 360}}, {"Cubic", {14, 361}}, {
     "Cubic", {14, 362}}, {"Cubic", {14, 363}}, {"Cubic", {14, 364}}, {
     "Cubic", {14, 365}}, {"Cubic", {14, 366}}, {"Cubic", {14, 367}}, {
     "Cubic", {14, 368}}, {"Cubic", {14, 369}}, {"Cubic", {14, 370}}, {
     "Cubic", {14, 371}}, {"Cubic", {14, 372}}, {"Cubic", {14, 373}}, {
     "Cubic", {14, 374}}, {"Cubic", {14, 375}}, {"Cubic", {14, 376}}, {
     "Cubic", {14, 377}}, {"Cubic", {14, 378}}, {"Cubic", {14, 379}}, {
     "Cubic", {14, 380}}, {"Cubic", {14, 381}}, {"Cubic", {14, 382}}, {
     "Cubic", {14, 383}}, {"Cubic", {14, 384}}, {"Cubic", {14, 385}}, {
     "Cubic", {14, 386}}, {"Cubic", {14, 387}}, {"Cubic", {14, 388}}, {
     "Cubic", {14, 389}}, {"Cubic", {14, 390}}, {"Cubic", {14, 391}}, {
     "Cubic", {14, 392}}, {"Cubic", {14, 393}}, {"Cubic", {14, 394}}, {
     "Cubic", {14, 395}}, {"Cubic", {14, 396}}, {"Cubic", {14, 397}}, {
     "Cubic", {14, 398}}, {"Cubic", {14, 399}}, {"Cubic", {14, 400}}, {
     "Cubic", {14, 401}}, {"Cubic", {14, 402}}, {"Cubic", {14, 403}}, {
     "Cubic", {14, 404}}, {"Cubic", {14, 405}}, {"Cubic", {14, 406}}, {
     "Cubic", {14, 407}}, {"Cubic", {14, 408}}, {"Cubic", {14, 409}}, {
     "Cubic", {14, 410}}, {"Cubic", {14, 413}}, {"Cubic", {14, 414}}, {
     "Cubic", {14, 415}}, {"Cubic", {14, 416}}, {"Cubic", {14, 417}}, {
     "Cubic", {14, 418}}, {"Cubic", {14, 419}}, {"Cubic", {14, 420}}, {
     "Cubic", {14, 423}}, {"Cubic", {14, 424}}, {"Cubic", {14, 425}}, {
     "Cubic", {14, 427}}, {"Cubic", {14, 428}}, {"Cubic", {14, 430}}, {
     "Cubic", {14, 431}}, {"Cubic", {14, 432}}, {"Cubic", {14, 433}}, {
     "Cubic", {14, 434}}, {"Cubic", {14, 435}}, {"Cubic", {14, 437}}, {
     "Cubic", {14, 439}}, {"Cubic", {14, 440}}, {"Cubic", {14, 441}}, {
     "Cubic", {14, 442}}, {"Cubic", {14, 443}}, {"Cubic", {14, 444}}, {
     "Cubic", {14, 445}}, {"Cubic", {14, 446}}, {"Cubic", {14, 447}}, {
     "Cubic", {14, 448}}, {"Cubic", {14, 449}}, {"Cubic", {14, 450}}, {
     "Cubic", {14, 451}}, {"Cubic", {14, 452}}, {"Cubic", {14, 453}}, {
     "Cubic", {14, 454}}, {"Cubic", {14, 455}}, {"Cubic", {14, 456}}, {
     "Cubic", {14, 457}}, {"Cubic", {14, 458}}, {"Cubic", {14, 459}}, {
     "Cubic", {14, 460}}, {"Cubic", {14, 461}}, {"Cubic", {14, 462}}, {
     "Cubic", {14, 463}}, {"Cubic", {14, 464}}, {"Cubic", {14, 466}}, {
     "Cubic", {14, 467}}, {"Cubic", {14, 468}}, {"Cubic", {14, 469}}, {
     "Cubic", {14, 470}}, {"Cubic", {14, 471}}, {"Cubic", {14, 472}}, {
     "Cubic", {14, 473}}, {"Cubic", {14, 474}}, {"Cubic", {14, 475}}, {
     "Cubic", {14, 476}}, {"Cubic", {14, 479}}, {"Cubic", {14, 480}}, {
     "Cubic", {14, 481}}, {"Cubic", {14, 482}}, {"Cubic", {14, 483}}, {
     "Cubic", {14, 484}}, {"Cubic", {14, 485}}, {"Cubic", {14, 486}}, {
     "Cubic", {14, 487}}, {"Cubic", {14, 488}}, {"Cubic", {14, 489}}, {
     "Cubic", {14, 490}}, {"Cubic", {14, 491}}, {"Cubic", {14, 492}}, {
     "Cubic", {14, 494}}, {"Cubic", {14, 495}}, {"Cubic", {14, 496}}, {
     "Cubic", {14, 497}}, {"Cubic", {14, 498}}, {"Cubic", {14, 499}}, {
     "Cubic", {14, 500}}, {"Cubic", {14, 501}}, {"Cubic", {14, 503}}, {
     "Cubic", {14, 505}}, {"Cubic", {14, 517}}, {"Cubic", {14, 518}}, {
     "Cubic", {14, 521}}, {"Cubic", {14, 522}}, {"Cubic", {14, 523}}, {
     "Cubic", {14, 524}}, {"Cubic", {14, 525}}, {"Cubic", {14, 526}}, {
     "Cubic", {14, 527}}, {"Cubic", {14, 528}}, {"Cubic", {14, 529}}, {
     "Cubic", {14, 530}}, {"Cubic", {14, 531}}, {"Cubic", {14, 532}}, {
     "Cubic", {14, 533}}, {"Cubic", {14, 534}}, {"Cubic", {14, 535}}, {
     "Cubic", {14, 536}}, {"Cubic", {14, 537}}, {"Cubic", {14, 538}}, {
     "Cubic", {14, 539}}, {"Cubic", {14, 540}}, {"Cubic", {16, 1}}, {
     "Cubic", {16, 2}}, {"Cubic", {16, 3}}, {"Cubic", {16, 4}}, {
     "Cubic", {16, 5}}, {"Cubic", {16, 6}}, {"Cubic", {16, 7}}, {
     "Cubic", {16, 8}}, {"Cubic", {16, 9}}, {"Cubic", {16, 10}}, {
     "Cubic", {16, 11}}, {"Cubic", {16, 12}}, {"Cubic", {16, 13}}, {
     "Cubic", {16, 14}}, {"Cubic", {16, 15}}, {"Cubic", {16, 16}}, {
     "Cubic", {16, 17}}, {"Cubic", {16, 18}}, {"Cubic", {18, 1}}, {
     "Cubic", {18, 2}}, {"Cubic", {18, 3}}, {"Cubic", {18, 4}}, {
     "Cubic", {18, 5}}, {"Cubic", {18, 6}}, {"Cubic", {18, 7}}, {
     "Cubic", {18, 8}}, {"Cubic", {18, 9}}, {"Cubic", {18, 10}}, {
     "Cubic", {18, 11}}, {"Cubic", {18, 12}}, {"Cubic", {18, 13}}, {
     "Cubic", {18, 14}}, {"Cubic", {18, 15}}, {"Cubic", {18, 16}}, {
     "Cubic", {18, 17}}, {"Cubic", {18, 18}}, {"Cubic", {18, 19}}, {
     "Cubic", {20, 1}}, {"Cubic", {20, 2}}, {"Cubic", {20, 3}}, {
     "Cubic", {22, 1}}, {"Cubic", {22, 2}}, {"Cubic", {24, 1}}, {
     "Cubic", {24, 2}}, {"Cubic", {24, 3}}, {"Cubic", {24, 4}}, {
     "Cubic", {26, 1}}, {"Cubic", {26, 2}}, {"Cubic", {26, 3}}, {
     "Cubic", {28, 1}}, {"Cubic", {28, 2}}, {"Cubic", {28, 3}}, {
     "Cubic", {28, 4}}, {"Cubic", {28, 5}}, {"Cubic", {30, 1}}, {
     "Cubic", {32, 1}}, {"Cubic", {32, 2}}, {"Cubic", {32, 3}}, {
     "Cubic", {32, 4}}, {"Cubic", {32, 5}}, {"Cubic", {34, 1}}, {
     "Cubic", {36, 1}}, {"Cubic", {36, 2}}, {"Cubic", {38, 2}}, {
     "Cubic", {42, 2}}, {"Cubic", {42, 3}}, {"Cubic", {42, 4}}, {
     "Cubic", {48, 1}}, {"Cubic", {48, 2}}, {"Cubic", {48, 3}}, {
     "Cubic", {50, 1}}, {"Cubic", {54, 1}}, {"Cubic", {54, 2}}, {
     "Cubic", {56, 1}}, {"Cubic", {56, 2}}, {"Cubic", {56, 3}}, {
     "Cubic", {56, 4}}, {"Cubic", {60, 1}}, {"Cubic", {64, 1}}, {
     "Cubic", {64, 2}}, {"Cubic", {78, 1}}, {"Cubic", {90, 1}}, 
     "CubicalGraph", {"CubicHypohamiltonian", {24, 1}}, {
     "CubicHypohamiltonian", {26, 7}}, {"CubicHypohamiltonian", {26, 17}}, {
     "CubicHypohamiltonian", {26, 40}}, {"CubicHypohamiltonian", {26, 43}}, {
     "CubicHypohamiltonian", {26, 72}}, {"CubicNonhamiltonian", {42, 3}}, {
     "CubicNonhamiltonian", {46, 2}}, {"CubicNonhamiltonian", {46, 3}}, {
     "CubicNonhamiltonian", {46, 4}}, {"CubicNonhamiltonian", {50, 1}}, {
     "CubicNonhamiltonian", {50, 2}}, {"CubicNonhamiltonian", {50, 3}}, {
     "CubicNonhamiltonian", {52, 1}}, {"CubicNonhamiltonian", {52, 2}}, {
     "CubicNonhamiltonian", {52, 3}}, {"CubicNonhamiltonian", {52, 4}}, {
     "CubicNonhamiltonian", {52, 5}}, {"CubicNonhamiltonian", {52, 6}}, {
     "CubicPolyhedral", 4}, {"CubicPolyhedral", 5}, {"CubicPolyhedral", 6}, {
     "CubicPolyhedral", 7}, {"CubicPolyhedral", 9}, {"CubicPolyhedral", 10}, {
     "CubicPolyhedral", 11}, {"CubicPolyhedral", 13}, {
     "CubicPolyhedral", 14}, {"CubicPolyhedral", 15}, {
     "CubicPolyhedral", 16}, {"CubicPolyhedral", 17}, {
     "CubicPolyhedral", 18}, {"CubicPolyhedral", 19}, {
     "CubicPolyhedral", 20}, {"CubicPolyhedral", 22}, {
     "CubicPolyhedral", 23}, {"CubicPolyhedral", 24}, {
     "CubicPolyhedral", 25}, {"CubicPolyhedral", 26}, {
     "CubicPolyhedral", 27}, {"CubicPolyhedral", 28}, {
     "CubicPolyhedral", 29}, {"CubicPolyhedral", 30}, {
     "CubicPolyhedral", 31}, {"CubicPolyhedral", 32}, {
     "CubicPolyhedral", 33}, {"CubicPolyhedral", 34}, {
     "CubicPolyhedral", 35}, {"CubicPolyhedral", 36}, {
     "CubicPolyhedral", 37}, {"CubicPolyhedral", 38}, {
     "CubicPolyhedral", 39}, {"CubicPolyhedral", 40}, {
     "CubicPolyhedral", 41}, {"CubicPolyhedral", 42}, {
     "CubicPolyhedral", 43}, {"CubicPolyhedral", 44}, {
     "CubicPolyhedral", 45}, {"CubicPolyhedral", 46}, {
     "CubicPolyhedral", 47}, {"CubicPolyhedral", 48}, {
     "CubicPolyhedral", 49}, {"CubicPolyhedral", 50}, {
     "CubicPolyhedral", 51}, {"CubicPolyhedral", 52}, {
     "CubicPolyhedral", 53}, {"CubicPolyhedral", 54}, {
     "CubicTransitive", 20}, {"CubicTransitive", 23}, {
     "CubicTransitive", 25}, {"CubicTransitive", 28}, {
     "CubicTransitive", 32}, {"CubicTransitive", 35}, {
     "CubicTransitive", 36}, {"CubicTransitive", 37}, {
     "CubicTransitive", 38}, {"CubicTransitive", 41}, {
     "CubicTransitive", 47}, {"CubicTransitive", 51}, {
     "CubicTransitive", 52}, {"CubicTransitive", 57}, {
     "CubicTransitive", 58}, {"CubicTransitive", 59}, {
     "CubicTransitive", 60}, {"CubicTransitive", 62}, {
     "CubicTransitive", 67}, {"CubicTransitive", 68}, {
     "CubicTransitive", 69}, {"CubicTransitive", 72}, {
     "CubicTransitive", 73}, {"CubicTransitive", 77}, {"CubicTransitive", 78},
      "DesarguesGraph", {"Dice", 1}, {"Dice", 2}, {"Dice", 3}, {"Dice", 4}, 
     "DodecahedralGraph", "DoubleStarSnark", "DrapeGraph", "DrumGraph", 
     "DuererGraph", "DyckGraph", "EdgeExcisedCoxeterGraph", 
     "EllinghamHortonGraph54", "EllinghamHortonGraph78", "ExtrapexGraph", 
     "FaulknerYoungerGraph42", "FaulknerYoungerGraph44", "FirstapexGraph", 
     "FiveDodecahedra", {"Flower", 5}, {"Flower", 7}, {"Flower", 8}, {
     "Flower", 9}, {"Flower", 10}, {"Flower", 11}, {"Flower", 12}, {
     "Flower", 13}, {"Flower", 14}, {"Flower", 15}, {"Flower", 16}, {
     "Flower", 17}, {"Flower", 18}, {"Flower", 19}, {"Flower", 20}, 
     "Foster026A", "Foster038A", "Foster040A", "Foster042A", "Foster050A", 
     "Foster054A", "Foster056A", "Foster056B", "Foster056C", "Foster060A", 
     "Foster062A", "Foster064A", "Foster072A", "Foster074A", "Foster078A", 
     "Foster080A", "Foster084A", "Foster086A", "Foster090A", "Foster096A", 
     "Foster096B", "Foster098A", "Foster098B", "Foster104A", "Foster108A", 
     "Foster110A", "Foster112A", "Foster112B", "Foster112C", "Foster114A", 
     "Foster120A", "Foster120B", "Foster122A", "Foster126A", "Foster128A", 
     "Foster128B", "Foster134A", "Foster144A", "Foster144B", "Foster146A", 
     "Foster150A", "Foster152A", "Foster158A", "Foster162A", "Foster162B", 
     "Foster162C", "Foster168A", "Foster168B", "Foster168C", "Foster168D", 
     "Foster168E", "Foster168F", "Foster182A", "Foster182B", "Foster182C", 
     "Foster182D", "Foster186A", "Foster192A", "Foster192B", "Foster192C", 
     "Foster194A", "Foster200A", "Foster204A", "Foster206A", "Foster208A", 
     "Foster216A", "Foster216B", "Foster216C", "Foster218A", "Foster220A", 
     "Foster220B", "Foster220C", "Foster222A", "Foster224A", "Foster224B", 
     "Foster224C", "Foster234A", "Foster234B", "Foster240A", "Foster240B", 
     "Foster240C", "Foster242A", "Foster248A", "Foster250A", "Foster254A", 
     "Foster256A", "Foster256B", "Foster256C", "Foster256D", "Foster258A", 
     "Foster266A", "Foster266B", "Foster278A", "Foster288A", "Foster288B", 
     "Foster294A", "Foster294B", "Foster296A", "Foster302A", "Foster304A", 
     "Foster312A", "Foster312B", "Foster314A", "Foster326A", "Foster336A", 
     "Foster336B", "Foster336C", "Foster336D", "Foster336E", "Foster336F", 
     "Foster338A", "Foster338B", "Foster342A", "Foster344A", "Foster350A", 
     "Foster360A", "Foster360B", "Foster362A", "Foster364A", "Foster364B", 
     "Foster364C", "Foster364D", "Foster364E", "Foster364F", "Foster364G", 
     "Foster366A", "Foster378A", "Foster378B", "Foster384A", "Foster384B", 
     "Foster384C", "Foster384D", "Foster386A", "Foster392A", "Foster392B", 
     "Foster398A", "Foster400A", "Foster400B", "Foster402A", "Foster408A", 
     "Foster408B", "Foster416A", "Foster422A", "Foster432A", "Foster432B", 
     "Foster432C", "Foster432D", "Foster432E", "Foster434A", "Foster434B", 
     "Foster438A", "Foster440A", "Foster440B", "Foster440C", "Foster446A", 
     "Foster448A", "Foster448B", "Foster448C", "Foster450A", "Foster456A", 
     "Foster456B", "Foster458A", "Foster468A", "Foster474A", "Foster480A", 
     "Foster480B", "Foster480C", "Foster480D", "Foster482A", "Foster486A", 
     "Foster486B", "Foster486C", "Foster486D", "Foster488A", "Foster494A", 
     "Foster494B", "Foster496A", "Foster500A", "Foster504A", "Foster504B", 
     "Foster504C", "Foster504D", "Foster504E", "Foster506A", "Foster506B", 
     "Foster512A", "Foster512B", "Foster512C", "Foster512D", "Foster512E", 
     "Foster512F", "Foster512G", "Foster518A", "Foster518B", "Foster536A", 
     "Foster542A", "Foster546A", "Foster546B", "Foster554A", "Foster558A", 
     "Foster566A", "Foster570A", "Foster570B", "Foster576A", "Foster576B", 
     "Foster576C", "Foster576D", "Foster578A", "Foster582A", "Foster584A", 
     "Foster592A", "Foster600A", "Foster600B", "Foster602A", "Foster602B", 
     "Foster608A", "Foster614A", "Foster618A", "Foster620A", "Foster624A", 
     "Foster624B", "Foster626A", "Foster632A", "Foster640A", "Foster648A", 
     "Foster648B", "Foster648C", "Foster648D", "Foster648E", "Foster648F", 
     "Foster650A", "Foster654A", "Foster660A", "Foster662A", "Foster666A", 
     "Foster672A", "Foster672B", "Foster672C", "Foster672D", "Foster672E", 
     "Foster672F", "Foster672G", "Foster674A", "Foster680A", "Foster680B", 
     "Foster686A", "Foster686B", "Foster686C", "Foster688A", "Foster698A", 
     "Foster702A", "Foster702B", "Foster720A", "Foster720B", "Foster720C", 
     "Foster720D", "Foster720E", "Foster720F", "Foster722A", "Foster722B", 
     "Foster726A", "Foster728A", "Foster728B", "Foster728C", "Foster728D", 
     "Foster728E", "Foster728F", "Foster728G", "Foster734A", "Foster744A", 
     "Foster744B", "Foster746A", "Foster750A", "Foster758A", "Foster762A", 
     "Foster768A", "Foster768B", "Foster768C", "Foster768D", "Foster768E", 
     "Foster768F", "Foster768G", "Foster774A", "Foster776A", "Foster784A", 
     "Foster784B", "Foster794A", "Foster798A", "Foster798B", "Foster800A", 
     "Foster806A", "Foster806B", "Foster816A", "Foster816B", "Foster816C", 
     "Foster816D", "Foster816E", "Foster816F", "Foster816G", "Foster816H", 
     "Foster816I", "Foster818A", "Foster824A", "Foster832A", "Foster834A", 
     "Foster840A", "Foster840B", "Foster842A", "Foster854A", "Foster854B", 
     "Foster864A", "Foster864B", "Foster864C", "Foster864D", "Foster866A", 
     "Foster872A", "Foster878A", "Foster880A", "Foster880B", "Foster880C", 
     "Foster882A", "Foster882B", "Foster888A", "Foster888B", "Foster896A", 
     "Foster896B", "Foster896C", "Foster896D", "Foster896E", "Foster906A", 
     "Foster912A", "Foster912B", "Foster914A", "Foster926A", "Foster936A", 
     "Foster936B", "Foster936C", "Foster938A", "Foster938B", "Foster942A", 
     "Foster950A", "Foster960A", "Foster960B", "Foster960C", "Foster962A", 
     "Foster962B", "Foster968A", "Foster974A", "Foster976A", "Foster978A", 
     "Foster992A", "Foster998A", "FourDodecahedra", "FourthapexGraph", 
     "FranklinGraph", "FruchtGraph", {"Fullerene", {26, 1}}, {
     "Fullerene", {28, 1}}, {"Fullerene", {28, 2}}, {"Fullerene", {30, 1}}, {
     "Fullerene", {30, 2}}, {"Fullerene", {30, 3}}, {"Fullerene", {32, 1}}, {
     "Fullerene", {32, 2}}, {"Fullerene", {32, 3}}, {"Fullerene", {32, 4}}, {
     "Fullerene", {32, 5}}, {"Fullerene", {32, 6}}, {"Fullerene", {34, 1}}, {
     "Fullerene", {34, 2}}, {"Fullerene", {34, 3}}, {"Fullerene", {34, 4}}, {
     "Fullerene", {34, 5}}, {"Fullerene", {34, 6}}, {"Fullerene", {36, 1}}, {
     "Fullerene", {36, 2}}, {"Fullerene", {36, 3}}, {"Fullerene", {36, 4}}, {
     "Fullerene", {36, 5}}, {"Fullerene", {36, 6}}, {"Fullerene", {36, 7}}, {
     "Fullerene", {36, 8}}, {"Fullerene", {36, 9}}, {"Fullerene", {36, 10}}, {
     "Fullerene", {36, 11}}, {"Fullerene", {36, 12}}, {
     "Fullerene", {36, 13}}, {"Fullerene", {36, 14}}, {
     "Fullerene", {36, 15}}, {"Fullerene", {38, 1}}, {"Fullerene", {38, 2}}, {
     "Fullerene", {38, 3}}, {"Fullerene", {38, 4}}, {"Fullerene", {38, 5}}, {
     "Fullerene", {38, 6}}, {"Fullerene", {38, 7}}, {"Fullerene", {38, 8}}, {
     "Fullerene", {38, 9}}, {"Fullerene", {38, 10}}, {
     "Fullerene", {38, 11}}, {"Fullerene", {38, 12}}, {
     "Fullerene", {38, 13}}, {"Fullerene", {38, 14}}, {
     "Fullerene", {38, 15}}, {"Fullerene", {38, 16}}, {
     "Fullerene", {38, 17}}, {"Fullerene", {40, 1}}, {"Fullerene", {40, 2}}, {
     "Fullerene", {40, 3}}, {"Fullerene", {40, 4}}, {"Fullerene", {40, 5}}, {
     "Fullerene", {40, 6}}, {"Fullerene", {40, 7}}, {"Fullerene", {40, 8}}, {
     "Fullerene", {40, 9}}, {"Fullerene", {40, 10}}, {
     "Fullerene", {40, 11}}, {"Fullerene", {40, 12}}, {
     "Fullerene", {40, 13}}, {"Fullerene", {40, 14}}, {
     "Fullerene", {40, 15}}, {"Fullerene", {40, 16}}, {
     "Fullerene", {40, 17}}, {"Fullerene", {40, 18}}, {
     "Fullerene", {40, 19}}, {"Fullerene", {40, 20}}, {
     "Fullerene", {40, 21}}, {"Fullerene", {40, 22}}, {
     "Fullerene", {40, 23}}, {"Fullerene", {40, 24}}, {
     "Fullerene", {40, 25}}, {"Fullerene", {40, 26}}, {
     "Fullerene", {40, 27}}, {"Fullerene", {40, 28}}, {
     "Fullerene", {40, 29}}, {"Fullerene", {40, 30}}, {
     "Fullerene", {40, 31}}, {"Fullerene", {40, 32}}, {
     "Fullerene", {40, 33}}, {"Fullerene", {40, 34}}, {
     "Fullerene", {40, 35}}, {"Fullerene", {40, 36}}, {
     "Fullerene", {40, 37}}, {"Fullerene", {40, 38}}, {
     "Fullerene", {40, 39}}, {"Fullerene", {40, 40}}, {
     "Fullerene", {42, 1}}, {"Fullerene", {42, 2}}, {"Fullerene", {42, 3}}, {
     "Fullerene", {42, 4}}, {"Fullerene", {42, 5}}, {"Fullerene", {42, 6}}, {
     "Fullerene", {42, 7}}, {"Fullerene", {42, 8}}, {"Fullerene", {42, 9}}, {
     "Fullerene", {42, 10}}, {"Fullerene", {42, 11}}, {
     "Fullerene", {42, 12}}, {"Fullerene", {42, 13}}, {
     "Fullerene", {42, 14}}, {"Fullerene", {42, 15}}, {
     "Fullerene", {42, 16}}, {"Fullerene", {42, 17}}, {
     "Fullerene", {42, 18}}, {"Fullerene", {42, 19}}, {
     "Fullerene", {42, 20}}, {"Fullerene", {42, 21}}, {
     "Fullerene", {42, 22}}, {"Fullerene", {42, 23}}, {
     "Fullerene", {42, 24}}, {"Fullerene", {42, 25}}, {
     "Fullerene", {42, 26}}, {"Fullerene", {42, 27}}, {
     "Fullerene", {42, 28}}, {"Fullerene", {42, 29}}, {
     "Fullerene", {42, 30}}, {"Fullerene", {42, 31}}, {
     "Fullerene", {42, 32}}, {"Fullerene", {42, 33}}, {
     "Fullerene", {42, 34}}, {"Fullerene", {42, 35}}, {
     "Fullerene", {42, 36}}, {"Fullerene", {42, 37}}, {
     "Fullerene", {42, 38}}, {"Fullerene", {42, 39}}, {
     "Fullerene", {42, 40}}, {"Fullerene", {42, 41}}, {
     "Fullerene", {42, 42}}, {"Fullerene", {42, 43}}, {
     "Fullerene", {42, 44}}, {"Fullerene", {42, 45}}, {
     "Fullerene", {44, 1}}, {"Fullerene", {44, 2}}, {"Fullerene", {44, 3}}, {
     "Fullerene", {44, 4}}, {"Fullerene", {44, 5}}, {"Fullerene", {44, 6}}, {
     "Fullerene", {44, 7}}, {"Fullerene", {44, 8}}, {"Fullerene", {44, 9}}, {
     "Fullerene", {44, 10}}, {"Fullerene", {44, 11}}, {
     "Fullerene", {44, 12}}, {"Fullerene", {44, 13}}, {
     "Fullerene", {44, 14}}, {"Fullerene", {44, 15}}, {
     "Fullerene", {44, 16}}, {"Fullerene", {44, 17}}, {
     "Fullerene", {44, 18}}, {"Fullerene", {44, 19}}, {
     "Fullerene", {44, 20}}, {"Fullerene", {44, 21}}, {
     "Fullerene", {44, 22}}, {"Fullerene", {44, 23}}, {
     "Fullerene", {44, 24}}, {"Fullerene", {44, 25}}, {
     "Fullerene", {44, 26}}, {"Fullerene", {44, 27}}, {
     "Fullerene", {44, 28}}, {"Fullerene", {44, 29}}, {
     "Fullerene", {44, 30}}, {"Fullerene", {44, 31}}, {
     "Fullerene", {44, 32}}, {"Fullerene", {44, 33}}, {
     "Fullerene", {44, 34}}, {"Fullerene", {44, 35}}, {
     "Fullerene", {44, 36}}, {"Fullerene", {44, 37}}, {
     "Fullerene", {44, 38}}, {"Fullerene", {44, 39}}, {
     "Fullerene", {44, 40}}, {"Fullerene", {44, 41}}, {
     "Fullerene", {44, 42}}, {"Fullerene", {44, 43}}, {
     "Fullerene", {44, 44}}, {"Fullerene", {44, 45}}, {
     "Fullerene", {44, 46}}, {"Fullerene", {44, 47}}, {
     "Fullerene", {44, 48}}, {"Fullerene", {44, 49}}, {
     "Fullerene", {44, 50}}, {"Fullerene", {44, 51}}, {
     "Fullerene", {44, 52}}, {"Fullerene", {44, 53}}, {
     "Fullerene", {44, 54}}, {"Fullerene", {44, 55}}, {
     "Fullerene", {44, 56}}, {"Fullerene", {44, 57}}, {
     "Fullerene", {44, 58}}, {"Fullerene", {44, 59}}, {
     "Fullerene", {44, 60}}, {"Fullerene", {44, 61}}, {
     "Fullerene", {44, 62}}, {"Fullerene", {44, 63}}, {
     "Fullerene", {44, 64}}, {"Fullerene", {44, 65}}, {
     "Fullerene", {44, 66}}, {"Fullerene", {44, 67}}, {
     "Fullerene", {44, 68}}, {"Fullerene", {44, 69}}, {
     "Fullerene", {44, 70}}, {"Fullerene", {44, 71}}, {
     "Fullerene", {44, 72}}, {"Fullerene", {44, 73}}, {
     "Fullerene", {44, 74}}, {"Fullerene", {44, 75}}, {
     "Fullerene", {44, 76}}, {"Fullerene", {44, 77}}, {
     "Fullerene", {44, 78}}, {"Fullerene", {44, 79}}, {
     "Fullerene", {44, 80}}, {"Fullerene", {44, 81}}, {
     "Fullerene", {44, 82}}, {"Fullerene", {44, 83}}, {
     "Fullerene", {44, 84}}, {"Fullerene", {44, 85}}, {
     "Fullerene", {44, 86}}, {"Fullerene", {44, 87}}, {
     "Fullerene", {44, 88}}, {"Fullerene", {44, 89}}, {
     "Fullerene", {46, 1}}, {"Fullerene", {46, 2}}, {"Fullerene", {46, 3}}, {
     "Fullerene", {46, 4}}, {"Fullerene", {46, 5}}, {"Fullerene", {46, 6}}, {
     "Fullerene", {46, 7}}, {"Fullerene", {46, 8}}, {"Fullerene", {46, 9}}, {
     "Fullerene", {46, 10}}, {"Fullerene", {46, 11}}, {
     "Fullerene", {46, 12}}, {"Fullerene", {46, 13}}, {
     "Fullerene", {46, 14}}, {"Fullerene", {46, 15}}, {
     "Fullerene", {46, 16}}, {"Fullerene", {46, 17}}, {
     "Fullerene", {46, 18}}, {"Fullerene", {46, 19}}, {
     "Fullerene", {46, 20}}, {"Fullerene", {46, 21}}, {
     "Fullerene", {46, 22}}, {"Fullerene", {46, 23}}, {
     "Fullerene", {46, 24}}, {"Fullerene", {46, 25}}, {
     "Fullerene", {46, 26}}, {"Fullerene", {46, 27}}, {
     "Fullerene", {46, 28}}, {"Fullerene", {46, 29}}, {
     "Fullerene", {46, 30}}, {"Fullerene", {46, 31}}, {
     "Fullerene", {46, 32}}, {"Fullerene", {46, 33}}, {
     "Fullerene", {46, 34}}, {"Fullerene", {46, 35}}, {
     "Fullerene", {46, 36}}, {"Fullerene", {46, 37}}, {
     "Fullerene", {46, 38}}, {"Fullerene", {46, 39}}, {
     "Fullerene", {46, 40}}, {"Fullerene", {46, 41}}, {
     "Fullerene", {46, 42}}, {"Fullerene", {46, 43}}, {
     "Fullerene", {46, 44}}, {"Fullerene", {46, 45}}, {
     "Fullerene", {46, 46}}, {"Fullerene", {46, 47}}, {
     "Fullerene", {46, 48}}, {"Fullerene", {46, 49}}, {
     "Fullerene", {46, 50}}, {"Fullerene", {46, 51}}, {
     "Fullerene", {46, 52}}, {"Fullerene", {46, 53}}, {
     "Fullerene", {46, 54}}, {"Fullerene", {46, 55}}, {
     "Fullerene", {46, 56}}, {"Fullerene", {46, 57}}, {
     "Fullerene", {46, 58}}, {"Fullerene", {46, 59}}, {
     "Fullerene", {46, 60}}, {"Fullerene", {46, 61}}, {
     "Fullerene", {46, 62}}, {"Fullerene", {46, 63}}, {
     "Fullerene", {46, 64}}, {"Fullerene", {46, 65}}, {
     "Fullerene", {46, 66}}, {"Fullerene", {46, 67}}, {
     "Fullerene", {46, 68}}, {"Fullerene", {46, 69}}, {
     "Fullerene", {46, 70}}, {"Fullerene", {46, 71}}, {
     "Fullerene", {46, 72}}, {"Fullerene", {46, 73}}, {
     "Fullerene", {46, 74}}, {"Fullerene", {46, 75}}, {
     "Fullerene", {46, 76}}, {"Fullerene", {46, 77}}, {
     "Fullerene", {46, 78}}, {"Fullerene", {46, 79}}, {
     "Fullerene", {46, 80}}, {"Fullerene", {46, 81}}, {
     "Fullerene", {46, 82}}, {"Fullerene", {46, 83}}, {
     "Fullerene", {46, 84}}, {"Fullerene", {46, 85}}, {
     "Fullerene", {46, 86}}, {"Fullerene", {46, 87}}, {
     "Fullerene", {46, 88}}, {"Fullerene", {46, 89}}, {
     "Fullerene", {46, 90}}, {"Fullerene", {46, 91}}, {
     "Fullerene", {46, 92}}, {"Fullerene", {46, 93}}, {
     "Fullerene", {46, 94}}, {"Fullerene", {46, 95}}, {
     "Fullerene", {46, 96}}, {"Fullerene", {46, 97}}, {
     "Fullerene", {46, 98}}, {"Fullerene", {46, 99}}, {
     "Fullerene", {46, 100}}, {"Fullerene", {46, 101}}, {
     "Fullerene", {46, 102}}, {"Fullerene", {46, 103}}, {
     "Fullerene", {46, 104}}, {"Fullerene", {46, 105}}, {
     "Fullerene", {46, 106}}, {"Fullerene", {46, 107}}, {
     "Fullerene", {46, 108}}, {"Fullerene", {46, 109}}, {
     "Fullerene", {46, 110}}, {"Fullerene", {46, 111}}, {
     "Fullerene", {46, 112}}, {"Fullerene", {46, 113}}, {
     "Fullerene", {46, 114}}, {"Fullerene", {46, 115}}, {
     "Fullerene", {46, 116}}, {"Fullerene", {48, 1}}, {
     "Fullerene", {48, 2}}, {"Fullerene", {48, 3}}, {"Fullerene", {48, 4}}, {
     "Fullerene", {48, 5}}, {"Fullerene", {48, 6}}, {"Fullerene", {48, 7}}, {
     "Fullerene", {48, 8}}, {"Fullerene", {48, 9}}, {"Fullerene", {48, 10}}, {
     "Fullerene", {48, 11}}, {"Fullerene", {48, 12}}, {
     "Fullerene", {48, 13}}, {"Fullerene", {48, 14}}, {
     "Fullerene", {48, 15}}, {"Fullerene", {48, 16}}, {
     "Fullerene", {48, 17}}, {"Fullerene", {48, 18}}, {
     "Fullerene", {48, 19}}, {"Fullerene", {48, 20}}, {
     "Fullerene", {48, 21}}, {"Fullerene", {48, 22}}, {
     "Fullerene", {48, 23}}, {"Fullerene", {48, 24}}, {
     "Fullerene", {48, 25}}, {"Fullerene", {48, 26}}, {
     "Fullerene", {48, 27}}, {"Fullerene", {48, 28}}, {
     "Fullerene", {48, 29}}, {"Fullerene", {48, 30}}, {
     "Fullerene", {48, 31}}, {"Fullerene", {48, 32}}, {
     "Fullerene", {48, 33}}, {"Fullerene", {48, 34}}, {
     "Fullerene", {48, 35}}, {"Fullerene", {48, 36}}, {
     "Fullerene", {48, 37}}, {"Fullerene", {48, 38}}, {
     "Fullerene", {48, 39}}, {"Fullerene", {48, 40}}, {
     "Fullerene", {48, 41}}, {"Fullerene", {48, 42}}, {
     "Fullerene", {48, 43}}, {"Fullerene", {48, 44}}, {
     "Fullerene", {48, 45}}, {"Fullerene", {48, 46}}, {
     "Fullerene", {48, 47}}, {"Fullerene", {48, 48}}, {
     "Fullerene", {48, 49}}, {"Fullerene", {48, 50}}, {
     "Fullerene", {48, 51}}, {"Fullerene", {48, 52}}, {
     "Fullerene", {48, 53}}, {"Fullerene", {48, 54}}, {
     "Fullerene", {48, 55}}, {"Fullerene", {48, 56}}, {
     "Fullerene", {48, 57}}, {"Fullerene", {48, 58}}, {
     "Fullerene", {48, 59}}, {"Fullerene", {48, 60}}, {
     "Fullerene", {48, 61}}, {"Fullerene", {48, 62}}, {
     "Fullerene", {48, 63}}, {"Fullerene", {48, 64}}, {
     "Fullerene", {48, 65}}, {"Fullerene", {48, 66}}, {
     "Fullerene", {48, 67}}, {"Fullerene", {48, 68}}, {
     "Fullerene", {48, 69}}, {"Fullerene", {48, 70}}, {
     "Fullerene", {48, 71}}, {"Fullerene", {48, 72}}, {
     "Fullerene", {48, 73}}, {"Fullerene", {48, 74}}, {
     "Fullerene", {48, 75}}, {"Fullerene", {48, 76}}, {
     "Fullerene", {48, 77}}, {"Fullerene", {48, 78}}, {
     "Fullerene", {48, 79}}, {"Fullerene", {48, 80}}, {
     "Fullerene", {48, 81}}, {"Fullerene", {48, 82}}, {
     "Fullerene", {48, 83}}, {"Fullerene", {48, 84}}, {
     "Fullerene", {48, 85}}, {"Fullerene", {48, 86}}, {
     "Fullerene", {48, 87}}, {"Fullerene", {48, 88}}, {
     "Fullerene", {48, 89}}, {"Fullerene", {48, 90}}, {
     "Fullerene", {48, 91}}, {"Fullerene", {48, 92}}, {
     "Fullerene", {48, 93}}, {"Fullerene", {48, 94}}, {
     "Fullerene", {48, 95}}, {"Fullerene", {48, 96}}, {
     "Fullerene", {48, 97}}, {"Fullerene", {48, 98}}, {
     "Fullerene", {48, 99}}, {"Fullerene", {48, 100}}, {
     "Fullerene", {48, 101}}, {"Fullerene", {48, 102}}, {
     "Fullerene", {48, 103}}, {"Fullerene", {48, 104}}, {
     "Fullerene", {48, 105}}, {"Fullerene", {48, 106}}, {
     "Fullerene", {48, 107}}, {"Fullerene", {48, 108}}, {
     "Fullerene", {48, 109}}, {"Fullerene", {48, 110}}, {
     "Fullerene", {48, 111}}, {"Fullerene", {48, 112}}, {
     "Fullerene", {48, 113}}, {"Fullerene", {48, 114}}, {
     "Fullerene", {48, 115}}, {"Fullerene", {48, 116}}, {
     "Fullerene", {48, 117}}, {"Fullerene", {48, 118}}, {
     "Fullerene", {48, 119}}, {"Fullerene", {48, 120}}, {
     "Fullerene", {48, 121}}, {"Fullerene", {48, 122}}, {
     "Fullerene", {48, 123}}, {"Fullerene", {48, 124}}, {
     "Fullerene", {48, 125}}, {"Fullerene", {48, 126}}, {
     "Fullerene", {48, 127}}, {"Fullerene", {48, 128}}, {
     "Fullerene", {48, 129}}, {"Fullerene", {48, 130}}, {
     "Fullerene", {48, 131}}, {"Fullerene", {48, 132}}, {
     "Fullerene", {48, 133}}, {"Fullerene", {48, 134}}, {
     "Fullerene", {48, 135}}, {"Fullerene", {48, 136}}, {
     "Fullerene", {48, 137}}, {"Fullerene", {48, 138}}, {
     "Fullerene", {48, 139}}, {"Fullerene", {48, 140}}, {
     "Fullerene", {48, 141}}, {"Fullerene", {48, 142}}, {
     "Fullerene", {48, 143}}, {"Fullerene", {48, 144}}, {
     "Fullerene", {48, 145}}, {"Fullerene", {48, 146}}, {
     "Fullerene", {48, 147}}, {"Fullerene", {48, 148}}, {
     "Fullerene", {48, 149}}, {"Fullerene", {48, 150}}, {
     "Fullerene", {48, 151}}, {"Fullerene", {48, 152}}, {
     "Fullerene", {48, 153}}, {"Fullerene", {48, 154}}, {
     "Fullerene", {48, 155}}, {"Fullerene", {48, 156}}, {
     "Fullerene", {48, 157}}, {"Fullerene", {48, 158}}, {
     "Fullerene", {48, 159}}, {"Fullerene", {48, 160}}, {
     "Fullerene", {48, 161}}, {"Fullerene", {48, 162}}, {
     "Fullerene", {48, 163}}, {"Fullerene", {48, 164}}, {
     "Fullerene", {48, 165}}, {"Fullerene", {48, 166}}, {
     "Fullerene", {48, 167}}, {"Fullerene", {48, 168}}, {
     "Fullerene", {48, 169}}, {"Fullerene", {48, 170}}, {
     "Fullerene", {48, 171}}, {"Fullerene", {48, 172}}, {
     "Fullerene", {48, 173}}, {"Fullerene", {48, 174}}, {
     "Fullerene", {48, 175}}, {"Fullerene", {48, 176}}, {
     "Fullerene", {48, 177}}, {"Fullerene", {48, 178}}, {
     "Fullerene", {48, 179}}, {"Fullerene", {48, 180}}, {
     "Fullerene", {48, 181}}, {"Fullerene", {48, 182}}, {
     "Fullerene", {48, 183}}, {"Fullerene", {48, 184}}, {
     "Fullerene", {48, 185}}, {"Fullerene", {48, 186}}, {
     "Fullerene", {48, 187}}, {"Fullerene", {48, 188}}, {
     "Fullerene", {48, 189}}, {"Fullerene", {48, 190}}, {
     "Fullerene", {48, 191}}, {"Fullerene", {48, 192}}, {
     "Fullerene", {48, 193}}, {"Fullerene", {48, 194}}, {
     "Fullerene", {48, 195}}, {"Fullerene", {48, 196}}, {
     "Fullerene", {48, 197}}, {"Fullerene", {48, 198}}, {
     "Fullerene", {48, 199}}, {"Fullerene", {50, 1}}, {
     "Fullerene", {50, 2}}, {"Fullerene", {50, 3}}, {"Fullerene", {50, 4}}, {
     "Fullerene", {50, 5}}, {"Fullerene", {50, 6}}, {"Fullerene", {50, 7}}, {
     "Fullerene", {50, 8}}, {"Fullerene", {50, 9}}, {"Fullerene", {50, 10}}, {
     "Fullerene", {50, 11}}, {"Fullerene", {50, 12}}, {
     "Fullerene", {50, 13}}, {"Fullerene", {50, 14}}, {
     "Fullerene", {50, 15}}, {"Fullerene", {50, 16}}, {
     "Fullerene", {50, 17}}, {"Fullerene", {50, 18}}, {
     "Fullerene", {50, 19}}, {"Fullerene", {50, 20}}, {
     "Fullerene", {50, 21}}, {"Fullerene", {50, 22}}, {
     "Fullerene", {50, 23}}, {"Fullerene", {50, 24}}, {
     "Fullerene", {50, 25}}, {"Fullerene", {50, 26}}, {
     "Fullerene", {50, 27}}, {"Fullerene", {50, 28}}, {
     "Fullerene", {50, 29}}, {"Fullerene", {50, 30}}, {
     "Fullerene", {50, 31}}, {"Fullerene", {50, 32}}, {
     "Fullerene", {50, 33}}, {"Fullerene", {50, 34}}, {
     "Fullerene", {50, 35}}, {"Fullerene", {50, 36}}, {
     "Fullerene", {50, 37}}, {"Fullerene", {50, 38}}, {
     "Fullerene", {50, 39}}, {"Fullerene", {50, 40}}, {
     "Fullerene", {50, 41}}, {"Fullerene", {50, 42}}, {
     "Fullerene", {50, 43}}, {"Fullerene", {50, 44}}, {
     "Fullerene", {50, 45}}, {"Fullerene", {50, 46}}, {
     "Fullerene", {50, 47}}, {"Fullerene", {50, 48}}, {
     "Fullerene", {50, 49}}, {"Fullerene", {50, 50}}, {
     "Fullerene", {50, 51}}, {"Fullerene", {50, 52}}, {
     "Fullerene", {50, 53}}, {"Fullerene", {50, 54}}, {
     "Fullerene", {50, 55}}, {"Fullerene", {50, 56}}, {
     "Fullerene", {50, 57}}, {"Fullerene", {50, 58}}, {
     "Fullerene", {50, 59}}, {"Fullerene", {50, 60}}, {
     "Fullerene", {50, 61}}, {"Fullerene", {50, 62}}, {
     "Fullerene", {50, 63}}, {"Fullerene", {50, 64}}, {
     "Fullerene", {50, 65}}, {"Fullerene", {50, 66}}, {
     "Fullerene", {50, 67}}, {"Fullerene", {50, 68}}, {
     "Fullerene", {50, 69}}, {"Fullerene", {50, 70}}, {
     "Fullerene", {50, 71}}, {"Fullerene", {50, 72}}, {
     "Fullerene", {50, 73}}, {"Fullerene", {50, 74}}, {
     "Fullerene", {50, 75}}, {"Fullerene", {50, 76}}, {
     "Fullerene", {50, 77}}, {"Fullerene", {50, 78}}, {
     "Fullerene", {50, 79}}, {"Fullerene", {50, 80}}, {
     "Fullerene", {50, 81}}, {"Fullerene", {50, 82}}, {
     "Fullerene", {50, 83}}, {"Fullerene", {50, 84}}, {
     "Fullerene", {50, 85}}, {"Fullerene", {50, 86}}, {
     "Fullerene", {50, 87}}, {"Fullerene", {50, 88}}, {
     "Fullerene", {50, 89}}, {"Fullerene", {50, 90}}, {
     "Fullerene", {50, 91}}, {"Fullerene", {50, 92}}, {
     "Fullerene", {50, 93}}, {"Fullerene", {50, 94}}, {
     "Fullerene", {50, 95}}, {"Fullerene", {50, 96}}, {
     "Fullerene", {50, 97}}, {"Fullerene", {50, 98}}, {
     "Fullerene", {50, 99}}, {"Fullerene", {50, 100}}, {
     "Fullerene", {50, 101}}, {"Fullerene", {50, 102}}, {
     "Fullerene", {50, 103}}, {"Fullerene", {50, 104}}, {
     "Fullerene", {50, 105}}, {"Fullerene", {50, 106}}, {
     "Fullerene", {50, 107}}, {"Fullerene", {50, 108}}, {
     "Fullerene", {50, 109}}, {"Fullerene", {50, 110}}, {
     "Fullerene", {50, 111}}, {"Fullerene", {50, 112}}, {
     "Fullerene", {50, 113}}, {"Fullerene", {50, 114}}, {
     "Fullerene", {50, 115}}, {"Fullerene", {50, 116}}, {
     "Fullerene", {50, 117}}, {"Fullerene", {50, 118}}, {
     "Fullerene", {50, 119}}, {"Fullerene", {50, 120}}, {
     "Fullerene", {50, 121}}, {"Fullerene", {50, 122}}, {
     "Fullerene", {50, 123}}, {"Fullerene", {50, 124}}, {
     "Fullerene", {50, 125}}, {"Fullerene", {50, 126}}, {
     "Fullerene", {50, 127}}, {"Fullerene", {50, 128}}, {
     "Fullerene", {50, 129}}, {"Fullerene", {50, 130}}, {
     "Fullerene", {50, 131}}, {"Fullerene", {50, 132}}, {
     "Fullerene", {50, 133}}, {"Fullerene", {50, 134}}, {
     "Fullerene", {50, 135}}, {"Fullerene", {50, 136}}, {
     "Fullerene", {50, 137}}, {"Fullerene", {50, 138}}, {
     "Fullerene", {50, 139}}, {"Fullerene", {50, 140}}, {
     "Fullerene", {50, 141}}, {"Fullerene", {50, 142}}, {
     "Fullerene", {50, 143}}, {"Fullerene", {50, 144}}, {
     "Fullerene", {50, 145}}, {"Fullerene", {50, 146}}, {
     "Fullerene", {50, 147}}, {"Fullerene", {50, 148}}, {
     "Fullerene", {50, 149}}, {"Fullerene", {50, 150}}, {
     "Fullerene", {50, 151}}, {"Fullerene", {50, 152}}, {
     "Fullerene", {50, 153}}, {"Fullerene", {50, 154}}, {
     "Fullerene", {50, 155}}, {"Fullerene", {50, 156}}, {
     "Fullerene", {50, 157}}, {"Fullerene", {50, 158}}, {
     "Fullerene", {50, 159}}, {"Fullerene", {50, 160}}, {
     "Fullerene", {50, 161}}, {"Fullerene", {50, 162}}, {
     "Fullerene", {50, 163}}, {"Fullerene", {50, 164}}, {
     "Fullerene", {50, 165}}, {"Fullerene", {50, 166}}, {
     "Fullerene", {50, 167}}, {"Fullerene", {50, 168}}, {
     "Fullerene", {50, 169}}, {"Fullerene", {50, 170}}, {
     "Fullerene", {50, 171}}, {"Fullerene", {50, 172}}, {
     "Fullerene", {50, 173}}, {"Fullerene", {50, 174}}, {
     "Fullerene", {50, 175}}, {"Fullerene", {50, 176}}, {
     "Fullerene", {50, 177}}, {"Fullerene", {50, 178}}, {
     "Fullerene", {50, 179}}, {"Fullerene", {50, 180}}, {
     "Fullerene", {50, 181}}, {"Fullerene", {50, 182}}, {
     "Fullerene", {50, 183}}, {"Fullerene", {50, 184}}, {
     "Fullerene", {50, 185}}, {"Fullerene", {50, 186}}, {
     "Fullerene", {50, 187}}, {"Fullerene", {50, 188}}, {
     "Fullerene", {50, 189}}, {"Fullerene", {50, 190}}, {
     "Fullerene", {50, 191}}, {"Fullerene", {50, 192}}, {
     "Fullerene", {50, 193}}, {"Fullerene", {50, 194}}, {
     "Fullerene", {50, 195}}, {"Fullerene", {50, 196}}, {
     "Fullerene", {50, 197}}, {"Fullerene", {50, 198}}, {
     "Fullerene", {50, 199}}, {"Fullerene", {50, 200}}, {
     "Fullerene", {50, 201}}, {"Fullerene", {50, 202}}, {
     "Fullerene", {50, 203}}, {"Fullerene", {50, 204}}, {
     "Fullerene", {50, 205}}, {"Fullerene", {50, 206}}, {
     "Fullerene", {50, 207}}, {"Fullerene", {50, 208}}, {
     "Fullerene", {50, 209}}, {"Fullerene", {50, 210}}, {
     "Fullerene", {50, 211}}, {"Fullerene", {50, 212}}, {
     "Fullerene", {50, 213}}, {"Fullerene", {50, 214}}, {
     "Fullerene", {50, 215}}, {"Fullerene", {50, 216}}, {
     "Fullerene", {50, 217}}, {"Fullerene", {50, 218}}, {
     "Fullerene", {50, 219}}, {"Fullerene", {50, 220}}, {
     "Fullerene", {50, 221}}, {"Fullerene", {50, 222}}, {
     "Fullerene", {50, 223}}, {"Fullerene", {50, 224}}, {
     "Fullerene", {50, 225}}, {"Fullerene", {50, 226}}, {
     "Fullerene", {50, 227}}, {"Fullerene", {50, 228}}, {
     "Fullerene", {50, 229}}, {"Fullerene", {50, 230}}, {
     "Fullerene", {50, 231}}, {"Fullerene", {50, 232}}, {
     "Fullerene", {50, 233}}, {"Fullerene", {50, 234}}, {
     "Fullerene", {50, 235}}, {"Fullerene", {50, 236}}, {
     "Fullerene", {50, 237}}, {"Fullerene", {50, 238}}, {
     "Fullerene", {50, 239}}, {"Fullerene", {50, 240}}, {
     "Fullerene", {50, 241}}, {"Fullerene", {50, 242}}, {
     "Fullerene", {50, 243}}, {"Fullerene", {50, 244}}, {
     "Fullerene", {50, 245}}, {"Fullerene", {50, 246}}, {
     "Fullerene", {50, 247}}, {"Fullerene", {50, 248}}, {
     "Fullerene", {50, 249}}, {"Fullerene", {50, 250}}, {
     "Fullerene", {50, 251}}, {"Fullerene", {50, 252}}, {
     "Fullerene", {50, 253}}, {"Fullerene", {50, 254}}, {
     "Fullerene", {50, 255}}, {"Fullerene", {50, 256}}, {
     "Fullerene", {50, 257}}, {"Fullerene", {50, 258}}, {
     "Fullerene", {50, 259}}, {"Fullerene", {50, 260}}, {
     "Fullerene", {50, 261}}, {"Fullerene", {50, 262}}, {
     "Fullerene", {50, 263}}, {"Fullerene", {50, 264}}, {
     "Fullerene", {50, 265}}, {"Fullerene", {50, 266}}, {
     "Fullerene", {50, 267}}, {"Fullerene", {50, 268}}, {
     "Fullerene", {50, 269}}, {"Fullerene", {50, 270}}, {
     "Fullerene", {50, 271}}, {"Fullerene", {60, 1}}, {
     "Fullerene", {70, 4085}}, {"Fullerene", {80, 6877}}, {
     "GeneralizedPetersen", {7, 2}}, {"GeneralizedPetersen", {8, 2}}, {
     "GeneralizedPetersen", {9, 2}}, {"GeneralizedPetersen", {9, 3}}, {
     "GeneralizedPetersen", {10, 4}}, {"GeneralizedPetersen", {11, 2}}, {
     "GeneralizedPetersen", {11, 3}}, {"GeneralizedPetersen", {12, 2}}, {
     "GeneralizedPetersen", {12, 3}}, {"GeneralizedPetersen", {12, 4}}, {
     "GeneralizedPetersen", {13, 2}}, {"GeneralizedPetersen", {13, 3}}, {
     "GeneralizedPetersen", {13, 5}}, {"GeneralizedPetersen", {14, 2}}, {
     "GeneralizedPetersen", {14, 3}}, {"GeneralizedPetersen", {14, 4}}, {
     "GeneralizedPetersen", {14, 6}}, {"GeneralizedPetersen", {15, 2}}, {
     "GeneralizedPetersen", {15, 3}}, {"GeneralizedPetersen", {15, 4}}, {
     "GeneralizedPetersen", {15, 5}}, {"GeneralizedPetersen", {15, 6}}, {
     "GeneralizedPetersen", {16, 2}}, {"GeneralizedPetersen", {16, 3}}, {
     "GeneralizedPetersen", {16, 4}}, {"GeneralizedPetersen", {16, 6}}, {
     "GeneralizedPetersen", {16, 7}}, {"GeneralizedPetersen", {17, 2}}, {
     "GeneralizedPetersen", {17, 3}}, {"GeneralizedPetersen", {17, 4}}, {
     "GeneralizedPetersen", {17, 5}}, {"GeneralizedPetersen", {18, 2}}, {
     "GeneralizedPetersen", {18, 3}}, {"GeneralizedPetersen", {18, 4}}, {
     "GeneralizedPetersen", {18, 5}}, {"GeneralizedPetersen", {18, 6}}, {
     "GeneralizedPetersen", {18, 8}}, {"GeneralizedPetersen", {19, 2}}, {
     "GeneralizedPetersen", {19, 3}}, {"GeneralizedPetersen", {19, 4}}, {
     "GeneralizedPetersen", {19, 7}}, {"GeneralizedPetersen", {20, 2}}, {
     "GeneralizedPetersen", {20, 3}}, {"GeneralizedPetersen", {20, 4}}, {
     "GeneralizedPetersen", {20, 5}}, {"GeneralizedPetersen", {20, 6}}, {
     "GeneralizedPetersen", {20, 8}}, {"GeneralizedPetersen", {20, 9}}, {
     "GeneralizedPetersen", {22, 4}}, {"GeneralizedPetersen", {23, 5}}, {
     "GeneralizedPetersen", {24, 5}}, {"GeneralizedPetersen", {24, 11}}, {
     "GeneralizedPetersen", {25, 9}}, {"GeneralizedPetersen", {27, 2}}, {
     "GeneralizedPetersen", {27, 9}}, {"GeneralizedPetersen", {29, 8}}, {
     "GeneralizedPetersen", {30, 11}}, {"GeneralizedPetersen", {31, 11}}, 
     "GeorgesGraph", {"Goldberg", 3}, {"Goldberg", 4}, {"Goldberg", 5}, {
     "Goldberg", 6}, {"Goldberg", 7}, {"Goldberg", 8}, {"Goldberg", 9}, {
     "Goldberg", 10}, {"Goldberg", 11}, {"Goldberg", 12}, {"Goldberg", 13}, {
     "Goldberg", 14}, {"Goldberg", 15}, {"Goldberg", 16}, {"Goldberg", 17}, {
     "Goldberg", 18}, {"Goldberg", 19}, {"Goldberg", 20}, "GrayGraph", 
     "GreatRhombicosidodecahedralGraph", "GreatRhombicuboctahedralGraph", 
     "GrinbergGraph42", "GrinbergGraph44", "GrinbergGraph46", 
     "GruenbaumGraph124", {"Haar", 536870930}, {"Halin", {10, 5}}, {
     "Halin", {10, 12}}, {"Halin", {10, 13}}, {"Halin", {12, 3}}, {
     "Halin", {12, 40}}, {"Halin", {12, 41}}, {"Halin", {14, 4}}, {
     "Halin", {14, 13}}, {"Halin", {14, 23}}, {"Halin", {14, 136}}, {
     "Halin", {14, 160}}, {"Halin", {14, 180}}, {"Halin", {14, 181}}, {
     "Halin", {14, 233}}, {"Halin", {14, 240}}, {"Halin", {14, 242}}, {
     "Halin", {14, 243}}, {"Halin", {14, 248}}, "HarriesGraph", 
     "HarriesWongGraph", "HeawoodGraph", {"HoneycombToroidal", {1, 36, 5}}, {
     "HoneycombToroidal", {1, 36, 7}}, {"HoneycombToroidal", {1, 36, 9}}, {
     "HoneycombToroidal", {1, 36, 11}}, {"HoneycombToroidal", {1, 38, 5}}, {
     "HoneycombToroidal", {1, 38, 7}}, {"HoneycombToroidal", {1, 40, 5}}, {
     "HoneycombToroidal", {1, 40, 7}}, {"HoneycombToroidal", {1, 40, 9}}, {
     "HoneycombToroidal", {1, 40, 11}}, {"HoneycombToroidal", {1, 40, 17}}, {
     "HoneycombToroidal", {1, 42, 5}}, {"HoneycombToroidal", {1, 42, 7}}, {
     "HoneycombToroidal", {1, 42, 13}}, {"HoneycombToroidal", {1, 42, 15}}, {
     "HoneycombToroidal", {1, 42, 17}}, {"HoneycombToroidal", {1, 44, 5}}, {
     "HoneycombToroidal", {1, 44, 7}}, {"HoneycombToroidal", {1, 44, 9}}, {
     "HoneycombToroidal", {1, 44, 11}}, {"HoneycombToroidal", {1, 46, 5}}, {
     "HoneycombToroidal", {1, 46, 7}}, {"HoneycombToroidal", {1, 46, 9}}, {
     "HoneycombToroidal", {1, 48, 5}}, {"HoneycombToroidal", {1, 48, 7}}, {
     "HoneycombToroidal", {1, 48, 9}}, {"HoneycombToroidal", {1, 48, 11}}, {
     "HoneycombToroidal", {1, 48, 13}}, {"HoneycombToroidal", {1, 48, 15}}, {
     "HoneycombToroidal", {1, 48, 17}}, {"HoneycombToroidal", {1, 48, 19}}, {
     "HoneycombToroidal", {1, 50, 5}}, {"HoneycombToroidal", {1, 50, 7}}, {
     "HoneycombToroidal", {1, 50, 9}}, {"HoneycombToroidal", {1, 50, 19}}, 
     "HortonGraph92", "HortonGraph96", {"IGraph", {12, 2, 3}}, {
     "IGraph", {12, 3, 4}}, {"IGraph", {15, 3, 5}}, {"IGraph", {18, 2, 3}}, {
     "IGraph", {20, 2, 5}}, {"IGraph", {20, 4, 5}}, {
     "Incidence", {{9, 3}, 1}}, {"Incidence", {{10, 3}, 3}}, {
     "Incidence", {{10, 3}, 5}}, {"Incidence", {{10, 3}, 7}}, {
     "Incidence", {{10, 3}, 8}}, {"Incidence", {{10, 3}, 9}}, {
     "IofinovaIvanov", 110}, "JabulaniSkeleton", "JawsGraph", "K3,3+2K4", 
     "K3,3+K4", "LeviGraph", "LjubljanaGraph", "LogGraph", "LoupekinesSnark1",
      "LoupekinesSnark2", "M3+K3,3", "M3+K4", "M3+Y3", "M5+K4", 
     "MarkstroemGraph", "McGeeGraph", {"MinimalRegularMatchstick", 3}, 
     "MoebiusKantorGraph", {"MoebiusLadder", 5}, {"MoebiusLadder", 6}, {
     "MoebiusLadder", 7}, {"MoebiusLadder", 8}, {"MoebiusLadder", 9}, {
     "MoebiusLadder", 10}, {"MoebiusLadder", 11}, {"MoebiusLadder", 12}, {
     "MoebiusLadder", 13}, {"MoebiusLadder", 14}, {"MoebiusLadder", 15}, {
     "MoebiusLadder", 16}, {"MoebiusLadder", 17}, {"MoebiusLadder", 18}, {
     "MoebiusLadder", 19}, {"MoebiusLadder", 20}, {"MoebiusLadder", 21}, {
     "MoebiusLadder", 22}, {"MoebiusLadder", 23}, {"MoebiusLadder", 24}, {
     "MoebiusLadder", 25}, "NauruGraph", "PappusGraph", 
     "PentagonalWedgeGraph", "PetersenGraph", "P+K4", {"Prism", 3}, {
     "Prism", 5}, {"Prism", 6}, {"Prism", 7}, {"Prism", 8}, {"Prism", 9}, {
     "Prism", 10}, {"Prism", 11}, {"Prism", 12}, {"Prism", 13}, {
     "Prism", 14}, {"Prism", 15}, {"Prism", 16}, {"Prism", 17}, {
     "Prism", 18}, {"Prism", 19}, {"Prism", 20}, {"Prism", 21}, {
     "Prism", 22}, {"Prism", 23}, {"Prism", 24}, {"Prism", 25}, "Q3+K3,3", 
     "Q3+K4", "Q3+Y3", "RefutedCrossingNumberGraph8D", 
     "RefutedCrossingNumberGraph8E", {
     "RegularNonplanarDiameter", {3, 3, 18}}, {
     "RegularNonplanarDiameter", {3, 3, 20}}, {
     "RegularNonplanarDiameter", {3, 4, 38}}, {
     "RegularNonplanarDiameter", {3, 5, 70}}, {
     "RegularNonplanarDiameter", {3, 6, 132}}, {
     "RegularNonplanarDiameter", {3, 7, 196}}, {
     "RegularNonplanarDiameter", {3, 8, 336}}, {
     "RegularNonplanarDiameter", {3, 9, 600}}, {
     "RegularNonplanarDiameter", {3, 3, 16, 1}}, {
     "RegularNonplanarDiameter", {3, 3, 16, 2}}, {
     "RegularNonplanarDiameter", {3, 3, 16, 3}}, {
     "RegularNonplanarDiameter", {3, 3, 16, 4}}, {
     "RegularNonplanarDiameter", {3, 3, 16, 5}}, {
     "RegularNonplanarDiameter", {3, 3, 16, 6}}, {
     "RegularNonplanarDiameter", {3, 3, 16, 7}}, {
     "RegularNonplanarDiameter", {3, 3, 16, 8}}, {
     "RegularNonplanarDiameter", {3, 3, 16, 9}}, {
     "RegularNonplanarDiameter", {3, 3, 16, 10}}, {
     "RegularNonplanarDiameter", {3, 3, 16, 11}}, {
     "RegularNonplanarDiameter", {3, 3, 16, 12}}, {
     "RegularNonplanarDiameter", {3, 3, 16, 13}}, {
     "RegularNonplanarDiameter", {3, 3, 16, 14}}, "RobertsonDiamondGraph", 
     "RollingGyroelongatedSquareDipyramidGraph", "RollingSnubDisphenoidGraph",
      "RollingTriangularDipyramidGraph", 
     "RollingTriaugmentedTriangularPrismGraph", "RubyGraph", "SailboatGraph", 
     "SecondapexGraph", "SixDodecahedra", {"Snark", {20, 1}}, {
     "Snark", {20, 2}}, {"Snark", {20, 3}}, {"Snark", {20, 4}}, {
     "Snark", {20, 5}}, {"Snark", {22, 1}}, {"Snark", {22, 2}}, {
     "Snark", {22, 3}}, {"Snark", {22, 4}}, {"Snark", {22, 5}}, {
     "Snark", {22, 6}}, {"Snark", {22, 7}}, {"Snark", {22, 8}}, {
     "Snark", {22, 9}}, {"Snark", {22, 10}}, {"Snark", {22, 11}}, {
     "Snark", {22, 12}}, {"Snark", {22, 13}}, {"Snark", {22, 14}}, {
     "Snark", {22, 15}}, {"Snark", {22, 16}}, {"Snark", {22, 17}}, {
     "Snark", {22, 18}}, {"Snark", {24, 1}}, {"Snark", {24, 2}}, {
     "Snark", {24, 3}}, {"Snark", {24, 4}}, {"Snark", {24, 5}}, {
     "Snark", {24, 6}}, {"Snark", {24, 7}}, {"Snark", {24, 8}}, {
     "Snark", {24, 9}}, {"Snark", {24, 10}}, {"Snark", {24, 11}}, {
     "Snark", {24, 12}}, {"Snark", {24, 13}}, {"Snark", {24, 14}}, {
     "Snark", {24, 15}}, {"Snark", {24, 16}}, {"Snark", {24, 17}}, {
     "Snark", {24, 18}}, {"Snark", {24, 19}}, {"Snark", {24, 20}}, {
     "Snark", {24, 21}}, {"Snark", {24, 22}}, {"Snark", {24, 23}}, {
     "Snark", {24, 24}}, {"Snark", {24, 25}}, {"Snark", {24, 26}}, {
     "Snark", {24, 27}}, {"Snark", {24, 28}}, {"Snark", {24, 29}}, {
     "Snark", {24, 30}}, {"Snark", {24, 31}}, {"Snark", {24, 32}}, {
     "Snark", {24, 33}}, {"Snark", {24, 34}}, {"Snark", {24, 35}}, {
     "Snark", {24, 36}}, {"Snark", {24, 37}}, {"Snark", {24, 38}}, {
     "Snark", {26, 1}}, {"Snark", {26, 2}}, {"Snark", {26, 3}}, {
     "Snark", {26, 4}}, {"Snark", {26, 5}}, {"Snark", {26, 6}}, {
     "Snark", {26, 7}}, {"Snark", {26, 8}}, {"Snark", {26, 9}}, {
     "Snark", {26, 10}}, {"Snark", {26, 12}}, {"Snark", {26, 13}}, {
     "Snark", {26, 14}}, {"Snark", {26, 15}}, {"Snark", {26, 16}}, {
     "Snark", {26, 17}}, {"Snark", {26, 18}}, {"Snark", {26, 19}}, {
     "Snark", {26, 20}}, {"Snark", {26, 22}}, {"Snark", {26, 23}}, {
     "Snark", {26, 24}}, {"Snark", {26, 25}}, {"Snark", {26, 26}}, {
     "Snark", {26, 27}}, {"Snark", {26, 28}}, {"Snark", {26, 29}}, {
     "Snark", {26, 30}}, {"Snark", {26, 32}}, {"Snark", {26, 33}}, {
     "Snark", {26, 34}}, {"Snark", {26, 35}}, {"Snark", {26, 36}}, {
     "Snark", {26, 37}}, {"Snark", {26, 38}}, {"Snark", {26, 39}}, {
     "Snark", {26, 40}}, {"Snark", {26, 41}}, {"Snark", {26, 42}}, {
     "Snark", {26, 43}}, {"Snark", {26, 44}}, {"Snark", {26, 45}}, {
     "Snark", {26, 46}}, {"Snark", {26, 47}}, {"Snark", {26, 48}}, {
     "Snark", {26, 49}}, {"Snark", {26, 50}}, {"Snark", {26, 51}}, {
     "Snark", {26, 52}}, {"Snark", {26, 53}}, {"Snark", {26, 54}}, {
     "Snark", {26, 55}}, {"Snark", {26, 56}}, {"Snark", {26, 57}}, {
     "Snark", {26, 58}}, {"Snark", {26, 59}}, {"Snark", {26, 60}}, {
     "Snark", {26, 61}}, {"Snark", {26, 62}}, {"Snark", {26, 63}}, {
     "Snark", {26, 64}}, {"Snark", {26, 65}}, {"Snark", {26, 66}}, {
     "Snark", {26, 67}}, {"Snark", {26, 68}}, {"Snark", {26, 69}}, {
     "Snark", {26, 70}}, {"Snark", {26, 71}}, {"Snark", {26, 72}}, {
     "Snark", {26, 73}}, {"Snark", {26, 74}}, {"Snark", {26, 75}}, {
     "Snark", {26, 76}}, {"Snark", {26, 77}}, {"Snark", {26, 78}}, {
     "Snark", {26, 79}}, {"Snark", {26, 80}}, {"Snark", {26, 81}}, {
     "Snark", {26, 82}}, {"Snark", {26, 83}}, {"Snark", {26, 84}}, {
     "Snark", {26, 85}}, {"Snark", {26, 86}}, {"Snark", {26, 87}}, {
     "Snark", {26, 88}}, {"Snark", {26, 89}}, {"Snark", {26, 90}}, {
     "Snark", {26, 91}}, {"Snark", {26, 92}}, {"Snark", {26, 93}}, {
     "Snark", {26, 94}}, {"Snark", {26, 95}}, {"Snark", {26, 96}}, {
     "Snark", {26, 97}}, {"Snark", {26, 98}}, {"Snark", {26, 99}}, {
     "Snark", {26, 100}}, {"Snark", {26, 101}}, {"Snark", {26, 102}}, {
     "Snark", {26, 103}}, {"Snark", {26, 104}}, {"Snark", {26, 105}}, {
     "Snark", {26, 106}}, {"Snark", {26, 107}}, {"Snark", {26, 108}}, {
     "Snark", {26, 109}}, {"Snark", {26, 110}}, {"Snark", {26, 111}}, {
     "Snark", {26, 112}}, {"Snark", {26, 113}}, {"Snark", {26, 114}}, {
     "Snark", {26, 115}}, {"Snark", {26, 116}}, {"Snark", {26, 117}}, {
     "Snark", {26, 118}}, {"Snark", {26, 119}}, {"Snark", {26, 120}}, {
     "Snark", {26, 121}}, {"Snark", {26, 122}}, {"Snark", {26, 123}}, {
     "Snark", {26, 124}}, {"Snark", {26, 125}}, {"Snark", {26, 126}}, {
     "Snark", {26, 127}}, {"Snark", {26, 128}}, {"Snark", {26, 129}}, {
     "Snark", {26, 130}}, {"Snark", {26, 131}}, {"Snark", {26, 132}}, {
     "Snark", {26, 133}}, {"Snark", {26, 134}}, {"Snark", {26, 135}}, {
     "Snark", {26, 136}}, {"Snark", {26, 137}}, {"Snark", {26, 138}}, {
     "Snark", {26, 139}}, {"Snark", {26, 140}}, {"Snark", {26, 141}}, {
     "Snark", {26, 142}}, {"Snark", {26, 143}}, {"Snark", {26, 144}}, {
     "Snark", {26, 145}}, {"Snark", {26, 146}}, {"Snark", {26, 147}}, {
     "Snark", {26, 148}}, {"Snark", {26, 149}}, {"Snark", {26, 150}}, {
     "Snark", {26, 151}}, {"Snark", {26, 152}}, {"Snark", {26, 153}}, {
     "Snark", {26, 154}}, {"Snark", {26, 155}}, {"Snark", {26, 156}}, {
     "Snark", {26, 157}}, {"Snark", {26, 158}}, {"Snark", {26, 159}}, {
     "Snark", {26, 160}}, {"Snark", {26, 161}}, {"Snark", {26, 162}}, {
     "Snark", {26, 163}}, {"Snark", {26, 164}}, {"Snark", {26, 165}}, {
     "Snark", {26, 166}}, {"Snark", {26, 167}}, {"Snark", {26, 168}}, {
     "Snark", {26, 169}}, {"Snark", {26, 170}}, {"Snark", {26, 171}}, {
     "Snark", {26, 172}}, {"Snark", {26, 173}}, {"Snark", {26, 174}}, {
     "Snark", {26, 175}}, {"Snark", {26, 176}}, {"Snark", {26, 177}}, {
     "Snark", {26, 178}}, {"Snark", {26, 179}}, {"Snark", {26, 180}}, {
     "Snark", {26, 181}}, {"Snark", {26, 182}}, {"Snark", {26, 184}}, {
     "Snark", {26, 185}}, {"Snark", {26, 186}}, {"Snark", {26, 187}}, {
     "Snark", {26, 188}}, {"Snark", {26, 189}}, {"Snark", {26, 190}}, {
     "Snark", {26, 191}}, {"Snark", {26, 192}}, {"Snark", {26, 193}}, {
     "Snark", {26, 194}}, {"Snark", {26, 195}}, {"Snark", {26, 196}}, {
     "Snark", {26, 197}}, {"Snark", {26, 198}}, {"Snark", {26, 199}}, {
     "Snark", {26, 200}}, {"Snark", {26, 201}}, {"Snark", {26, 202}}, {
     "Snark", {26, 203}}, {"Snark", {26, 204}}, {"Snark", {26, 205}}, {
     "Snark", {26, 206}}, {"Snark", {26, 207}}, {"Snark", {26, 208}}, {
     "Snark", {26, 209}}, {"Snark", {26, 210}}, {"Snark", {26, 211}}, {
     "Snark", {26, 212}}, {"Snark", {26, 213}}, {"Snark", {26, 214}}, {
     "Snark", {26, 215}}, {"Snark", {26, 216}}, {"Snark", {26, 217}}, {
     "Snark", {26, 218}}, {"Snark", {26, 219}}, {"Snark", {26, 220}}, {
     "Snark", {26, 221}}, {"Snark", {26, 222}}, {"Snark", {26, 223}}, {
     "Snark", {26, 224}}, {"Snark", {26, 225}}, {"Snark", {26, 226}}, {
     "Snark", {26, 227}}, {"Snark", {26, 228}}, {"Snark", {26, 229}}, {
     "Snark", {26, 230}}, {"Snark", {26, 231}}, {"Snark", {26, 232}}, {
     "Snark", {26, 233}}, {"Snark", {26, 234}}, {"Snark", {26, 235}}, {
     "Snark", {26, 236}}, {"Snark", {26, 237}}, {"Snark", {26, 238}}, {
     "Snark", {26, 239}}, {"Snark", {26, 240}}, {"Snark", {26, 241}}, {
     "Snark", {26, 242}}, {"Snark", {26, 243}}, {"Snark", {26, 244}}, {
     "Snark", {26, 245}}, {"Snark", {26, 246}}, {"Snark", {26, 247}}, {
     "Snark", {26, 248}}, {"Snark", {26, 249}}, {"Snark", {26, 250}}, {
     "Snark", {26, 251}}, {"Snark", {26, 252}}, {"Snark", {26, 253}}, {
     "Snark", {26, 254}}, {"Snark", {26, 255}}, {"Snark", {26, 256}}, {
     "Snark", {26, 257}}, {"Snark", {26, 258}}, {"Snark", {26, 259}}, {
     "Snark", {26, 260}}, {"Snark", {26, 261}}, {"Snark", {26, 262}}, {
     "Snark", {26, 263}}, {"Snark", {26, 264}}, {"Snark", {26, 265}}, {
     "Snark", {26, 266}}, {"Snark", {26, 267}}, {"Snark", {26, 268}}, {
     "Snark", {26, 269}}, {"Snark", {26, 270}}, {"Snark", {26, 271}}, {
     "Snark", {26, 272}}, {"Snark", {26, 273}}, {"Snark", {26, 274}}, {
     "Snark", {26, 275}}, {"Snark", {26, 276}}, {"Snark", {26, 277}}, {
     "Snark", {26, 278}}, {"Snark", {26, 279}}, {"Snark", {26, 280}}, 
     "StarfishGraph", "SuperboxGraph", "SzekeresSnark", "TetrahedralGraph", 
     "ThirdapexGraph", "ThomassenGraph94", "ThreeDodecahedra", "TietzeGraph", 
     "TriangleReplacedCoxeterGraph", "TriangleReplacedPetersenGraph", 
     "TriplexGraph", "TruncatedCubicalGraph", "TruncatedDodecahedralGraph", 
     "TruncatedIcosahedralGraph", "TruncatedOctahedralGraph", 
     "TruncatedPrismGraph", "TruncatedTetrahedralGraph", "Tutte12Cage", 
     "TutteGraph", "TwinplexGraph", "TwoDodecahedra", "UtilityGraph", 
     "WagnerGraph", "WatkinsSnark", {"WeakSnark", {22, 4}}, {
     "WeakSnark", {22, 5}}, {"WeakSnark", {22, 9}}, {"WeakSnark", {22, 10}}, {
     "WeakSnark", {22, 11}}, {"WeakSnark", {22, 12}}, {
     "WeakSnark", {22, 18}}, {"WeakSnark", {22, 19}}, {
     "WeakSnark", {22, 24}}, {"WeakSnark", {22, 25}}, {"WeakSnark", {22, 26}},
      "WindowGraph", "Y3+2K4", "Y3+K3,3", "Y3+K4", "Y5+K4", 
     "ZamfirescuGraph36"}, "wrap" -> OutputSizeLimit`Defer, "version" -> 1|>,
  "OutputSizeLimitTemplate"]], "Output",
 CellChangeTimes->{3.8772852779358644`*^9, 3.8772868374919558`*^9},
 CellLabel->"Out[1]=",ExpressionUUID->"a1dc6434-a3c9-4742-b456-af4bb8bb6c52"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Select", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"VertexCount", "[", 
      RowBox[{"GraphData", "[", "#", "]"}], "]"}], "<=", "6"}], "&"}], "]"}], 
  "[", 
  RowBox[{"GraphData", "[", "\"\<Cubic\>\"", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8772852843998213`*^9, 3.877285293392198*^9}, {
  3.8772868424346695`*^9, 3.877286845167392*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"303caaf0-74dc-4399-8303-227a670faebb"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\<\"Prism\"\>", ",", "3"}], "}"}], 
   ",", "\<\"TetrahedralGraph\"\>", ",", "\<\"UtilityGraph\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.8772852951265345`*^9, 3.8772869462242684`*^9},
 CellLabel->"Out[2]=",ExpressionUUID->"5e32a026-ee15-46c8-9582-a7107b9902c3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GraphData", "/@", 
  RowBox[{
   RowBox[{"Select", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"VertexCount", "[", 
       RowBox[{"GraphData", "[", "#", "]"}], "]"}], "<=", "6"}], "&"}], "]"}],
    "[", 
   RowBox[{"GraphData", "[", "\"\<Cubic\>\"", "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.877286991360939*^9, 3.8772869947975903`*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"5c825c4e-9563-4e37-b7c1-33c8bf5349d0"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4, 5, 6}, {Null, 
         SparseArray[
         Automatic, {6, 6}, 0, {
          1, {{0, 3, 6, 9, 12, 15, 18}, {{2}, {3}, {4}, {1}, {3}, {5}, {1}, {
            2}, {6}, {1}, {5}, {6}, {2}, {4}, {6}, {3}, {4}, {5}}}, 
           Pattern}]}, {
        VertexCoordinates -> {{Rational[1, 2] 3^Rational[1, 2], 
            Rational[-1, 2]}, {0, 1}, {Rational[-1, 2] 3^Rational[1, 2], 
            Rational[-1, 2]}, {3^Rational[1, 2], -1}, {0, 
           2}, {-3^Rational[1, 2], -1}}}]]}, 
      TagBox[
       GraphicsGroupBox[
        GraphicsComplexBox[{{0.8660254037844386, -0.5}, {0., 
         1.}, {-0.8660254037844386, -0.5}, {1.7320508075688772`, -1.}, {0., 
         2.}, {-1.7320508075688772`, -1.}}, {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
           ArrowBox[{{1, 2}, {1, 3}, {1, 4}, {2, 3}, {2, 5}, {3, 6}, {4, 5}, {
            4, 6}, {5, 6}}, 0.03347773481857537]}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           DiskBox[1, 0.03347773481857537], DiskBox[2, 0.03347773481857537], 
           DiskBox[3, 0.03347773481857537], DiskBox[4, 0.03347773481857537], 
           DiskBox[5, 0.03347773481857537], 
           DiskBox[6, 0.03347773481857537]}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    FormatType->TraditionalForm,
    FrameTicks->None], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4}, {Null, 
         SparseArray[
         Automatic, {4, 4}, 0, {
          1, {{0, 3, 6, 9, 12}, {{2}, {3}, {4}, {1}, {3}, {4}, {1}, {2}, {
            4}, {1}, {2}, {3}}}, Pattern}]}, {
        VertexCoordinates -> {{Rational[-1, 2] 3^Rational[1, 2], 
            Rational[-1, 2]}, {Rational[1, 2] 3^Rational[1, 2], 
            Rational[-1, 2]}, {0, 1}, {0, 0}}}]]}, 
      TagBox[
       GraphicsGroupBox[
        GraphicsComplexBox[{{-0.8660254037844386, -0.5}, {
         0.8660254037844386, -0.5}, {0., 1.}, {0., 0.}}, {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
           ArrowBox[{{1, 2}, {1, 3}, {1, 4}, {2, 3}, {2, 4}, {3, 4}}, 
            0.020399597244776385`]}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           DiskBox[1, 0.020399597244776385], DiskBox[2, 0.020399597244776385],
            DiskBox[3, 0.020399597244776385], 
           DiskBox[4, 0.020399597244776385]}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    FormatType->TraditionalForm,
    FrameTicks->None], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4, 5, 6}, {Null, 
         SparseArray[
         Automatic, {6, 6}, 0, {
          1, {{0, 3, 6, 9, 12, 15, 18}, {{4}, {5}, {6}, {4}, {5}, {6}, {4}, {
            5}, {6}, {1}, {2}, {3}, {1}, {2}, {3}, {1}, {2}, {3}}}, 
           Pattern}]}, {
        VertexCoordinates -> {{1, -1}, {1, 0}, {1, 1}, {2, -1}, {2, 0}, {2, 
          1}}}]]}, 
      TagBox[
       GraphicsGroupBox[
        GraphicsComplexBox[{{1., -1.}, {1., 0.}, {1., 1.}, {2., -1.}, {2., 
         0.}, {2., 1.}}, {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
           ArrowBox[{{1, 4}, {1, 5}, {1, 6}, {2, 4}, {2, 5}, {2, 6}, {3, 4}, {
            3, 5}, {3, 6}}, 0.02261146496815286]}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           DiskBox[1, 0.02261146496815286], DiskBox[2, 0.02261146496815286], 
           DiskBox[3, 0.02261146496815286], DiskBox[4, 0.02261146496815286], 
           DiskBox[5, 0.02261146496815286], 
           DiskBox[6, 0.02261146496815286]}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    FormatType->TraditionalForm,
    FrameTicks->None]}], "}"}]], "Output",
 CellChangeTimes->{3.8772870248126245`*^9},
 CellLabel->"Out[3]=",ExpressionUUID->"f0507648-818c-49d1-901b-4e1df90d970e"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Exercise 50", "Section",
 CellChangeTimes->{{3.877286930441459*^9, 
  3.877286933817113*^9}},ExpressionUUID->"354a2f1d-a401-4d09-8e85-\
ef0248855455"],

Cell["\<\
Find all bipartite graphs that can be 3-colored in exactly 24 ways.\
\>", "Text",
 CellChangeTimes->{{3.8772870090006113`*^9, 
  3.877287051609749*^9}},ExpressionUUID->"1cf32807-d185-4d5d-97d2-\
aad3d730ca39"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GraphData", "[", "\"\<Bipartite\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.8772870959770913`*^9, 3.877287100508224*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"28369a05-1173-4d48-bd5a-fc8aac88a770"],

Cell[BoxData[
 TemplateBox[<|"shortenedBoxes" -> TagBox[
     RowBox[{"{", 
       RowBox[{
         RowBox[{"{", 
           RowBox[{"6", ",", "13"}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"6", ",", "24"}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"6", ",", "32"}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"6", ",", "99"}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"7", ",", "15"}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"7", ",", "17"}], "}"}], ",", 
         TemplateBox[{"3108"}, "OutputSizeLimit`Skeleton"], ",", 
         RowBox[{"{", 
           RowBox[{"\"ZeroTwoBipartite\"", ",", 
             RowBox[{"{", 
               RowBox[{"7", ",", "35"}], "}"}]}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"\"ZeroTwoBipartite\"", ",", 
             RowBox[{"{", 
               RowBox[{"7", ",", "36"}], "}"}]}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"\"ZeroTwoBipartite\"", ",", 
             RowBox[{"{", 
               RowBox[{"7", ",", "37"}], "}"}]}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"\"ZeroTwoBipartite\"", ",", 
             RowBox[{"{", 
               RowBox[{"7", ",", "38"}], "}"}]}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"\"ZeroTwoBipartite\"", ",", 
             RowBox[{"{", 
               RowBox[{"7", ",", "39"}], "}"}]}], "}"}]}], "}"}], 
     Short[#, 5]& ], "line" -> 4, "sessionID" -> 16937363724473571974, 
   "byteCount" -> 648648, "size" -> 5, "stored" -> False, "expr" -> 
   Missing["NotStored"], "wrap" -> OutputSizeLimit`Defer, "version" -> 1|>,
  "OutputSizeLimitTemplate"]], "Output",
 CellChangeTimes->{3.8772871009144735`*^9},
 CellLabel->"Out[4]=",ExpressionUUID->"b83e6fcd-e56e-4aff-8eb1-f43bfa9e7aee"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"First", "[", 
  RowBox[{"GraphData", "[", "\"\<Bipartite\>\"", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8772870959770913`*^9, 3.8772871110989327`*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"4b200441-4b13-41f0-9b23-e60214709564"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"6", ",", "13"}], "}"}]], "Output",
 CellChangeTimes->{3.8772871114739246`*^9},
 CellLabel->"Out[5]=",ExpressionUUID->"0065c3ef-2fd3-4ded-add8-cd69efb19562"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GraphData", "[", 
  RowBox[{"First", "[", 
   RowBox[{"GraphData", "[", "\"\<Bipartite\>\"", "]"}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.877287111927047*^9, 3.877287113458417*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"cd24b0c8-15ae-48b8-958b-7cfeedd15082"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{1, 2, 3, 4, 5, 6}, {Null, 
       SparseArray[
       Automatic, {6, 6}, 0, {
        1, {{0, 2, 3, 4, 4, 5, 8}, {{5}, {6}, {6}, {6}, {1}, {1}, {2}, {3}}}, 
         Pattern}]}, {VertexCoordinates -> {{1, 1}, {0, 0}, {0, 2}, {0, 
          Rational[-1, 5]}, {1, 0}, {0, 1}}}]]}, 
    TagBox[
     GraphicsGroupBox[
      GraphicsComplexBox[{{1., 1.}, {0., 0.}, {0., 2.}, {0., -0.2}, {1., 
       0.}, {0., 1.}}, {
        {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
         ArrowBox[{{1, 5}, {1, 6}, {2, 6}, {3, 6}}, 0.024213836477987416`]}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         DiskBox[1, 0.024213836477987416], DiskBox[2, 0.024213836477987416], 
         DiskBox[3, 0.024213836477987416], DiskBox[4, 0.024213836477987416], 
         DiskBox[5, 0.024213836477987416], 
         DiskBox[6, 0.024213836477987416]}}]],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None]], "Output",
 CellChangeTimes->{3.8772871138333282`*^9},
 CellLabel->"Out[6]=",ExpressionUUID->"ff7b27a7-d05e-4911-85c0-3547ff41078d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GraphData", "[", 
  RowBox[{
   RowBox[{"First", "[", 
    RowBox[{"GraphData", "[", "\"\<Bipartite\>\"", "]"}], "]"}], ",", 
   "\"\<ChromaticInvariant\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.877287111927047*^9, 3.877287136855236*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"7ed3cc3a-b6ad-464b-ab48-4187a203de9a"],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.8772871371364956`*^9},
 CellLabel->"Out[7]=",ExpressionUUID->"3eaa9459-ee9d-4549-9a22-718657a52747"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GraphData", "[", 
  RowBox[{
   RowBox[{"First", "[", 
    RowBox[{"GraphData", "[", "\"\<Bipartite\>\"", "]"}], "]"}], ",", 
   "\"\<ChromaticNumber\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.877287111927047*^9, 3.8772871411052427`*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"fb1bae3e-609c-4119-9216-a064b3252ff4"],

Cell[BoxData["2"], "Output",
 CellChangeTimes->{3.877287141402116*^9},
 CellLabel->"Out[8]=",ExpressionUUID->"5c21ff97-9c94-4e87-b7eb-8144dd3ed1b7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GraphData", "[", 
  RowBox[{
   RowBox[{"First", "[", 
    RowBox[{"GraphData", "[", "\"\<Bipartite\>\"", "]"}], "]"}], ",", 
   "\"\<ChromaticPolynomial\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.877287111927047*^9, 3.8772871456616316`*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"4044093e-b462-489d-9f2a-cde03454ec09"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "#1"}], ")"}], "4"], " ", 
   SuperscriptBox["#1", "2"]}], "&"}]], "Output",
 CellChangeTimes->{3.877287145964235*^9},
 CellLabel->"Out[9]=",ExpressionUUID->"4c5e4e53-fe93-4a56-9181-841a00e1e1b6"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"GraphData", "[", 
  RowBox[{
   RowBox[{"First", "[", 
    RowBox[{"GraphData", "[", "\"\<Bipartite\>\"", "]"}], "]"}], ",", 
   "\"\<Chromatic\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.877287111927047*^9, 
  3.8772871512092266`*^9}},ExpressionUUID->"beaaf159-1c42-40b5-8db1-\
64f9943bccc6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GraphData", "[", "\"\<ChromaticallyUnique\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.877287185403364*^9, 3.8772871900599136`*^9}},
 CellLabel->"In[10]:=",ExpressionUUID->"71f244f9-856d-4517-8928-325ead1d19cf"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"5", ",", "31"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "66"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "73"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "80"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "82"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "97"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "103"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "109"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "114"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "124"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "138"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "148"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "149"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "129"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "142"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "151"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "161"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "169"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "173"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "179"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "181"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "210"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "222"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "254"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "261"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "266"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "275"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "288"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "290"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "302"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "304"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "316"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "326"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "328"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "335"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "337"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "339"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "344"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "404"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "477"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "478"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "503"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "524"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "574"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "580"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "582"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "584"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "585"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "586"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "622"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "624"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "645"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "647"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "674"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "695"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "696"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "701"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "708"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "726"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "730"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "733"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "748"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "755"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "763"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "766"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "771"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "786"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "789"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "816"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "832"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "839"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "840"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "848"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "849"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "850"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "858"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "865"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "868"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "885"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "886"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "888"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "896"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "900"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "901"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "905"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "906"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "910"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "937"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "945"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "957"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "961"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "962"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "963"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "964"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "979"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "1000"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "1003"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "1007"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "1008"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "1013"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "1018"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "1027"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "1029"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "1033"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "1034"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "1035"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "1039"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "1040"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "579"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "611"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "628"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "2989"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "3914"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "3921"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "5516"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "5519"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "6777"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "8186"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "8953"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "9760"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "9880"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "10354"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "11242"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "11481"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "11486"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "11504"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "11566"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "11585"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "11690"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "12265"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "12333"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", "71752"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", "111589"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", "115869"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", "122423"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", "172352"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", "176255"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", "179236"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", "179238"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", "181483"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", "181502"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Antiprism\"\>", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Antiprism\"\>", ",", "5"}], "}"}], 
   ",", "\<\"BannerGraph\"\>", ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Bar\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "3"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"BiggestLittlePolygon\"\>", ",", "6"}], "}"}], 
   ",", "\<\"C3+2K1\"\>", ",", "\<\"C3+3K1\"\>", ",", "\<\"C3+4K1\"\>", 
   ",", "\<\"C3+5K1\"\>", ",", "\<\"C3+K1\"\>", ",", "\<\"C4+2K1\"\>", 
   ",", "\<\"C4+3K1\"\>", ",", "\<\"C4+K1\"\>", ",", "\<\"C5+2K1\"\>", 
   ",", "\<\"C5+3K1\"\>", ",", "\<\"C5+K1\"\>", ",", "\<\"C6+K1\"\>", 
   ",", "\<\"C7+K1\"\>", ",", "\<\"C8+K1\"\>", ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Circulant\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"7", ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "2"}], "}"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Circulant\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"8", ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "2", ",", "4"}], "}"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Circulant\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"9", ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "2"}], "}"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Circulant\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"9", ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "3"}], "}"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Circulant\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"9", ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "2", ",", "3"}], "}"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Circulant\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "4"}], "}"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Circulant\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "2", ",", "3"}], "}"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Circulant\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "2", ",", "4"}], "}"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Circulant\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "2", ",", "5"}], "}"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Circulant\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "4", ",", "5"}], "}"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Circulant\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "2", ",", "3", ",", "5"}], "}"}]}], "}"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Circulant\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "2", ",", "4", ",", "5"}], "}"}]}], "}"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CocktailParty\"\>", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CocktailParty\"\>", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CocktailParty\"\>", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CocktailParty\"\>", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CocktailParty\"\>", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CocktailParty\"\>", ",", "10"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CocktailParty\"\>", ",", "11"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CocktailParty\"\>", ",", "12"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CocktailParty\"\>", ",", "13"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CocktailParty\"\>", ",", "14"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CocktailParty\"\>", ",", "15"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CocktailParty\"\>", ",", "16"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CocktailParty\"\>", ",", "17"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CocktailParty\"\>", ",", "18"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CocktailParty\"\>", ",", "19"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CocktailParty\"\>", ",", "20"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Complete\"\>", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Complete\"\>", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Complete\"\>", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Complete\"\>", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Complete\"\>", ",", "10"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Complete\"\>", ",", "11"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Complete\"\>", ",", "12"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Complete\"\>", ",", "13"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Complete\"\>", ",", "14"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Complete\"\>", ",", "15"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Complete\"\>", ",", "16"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Complete\"\>", ",", "17"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Complete\"\>", ",", "18"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Complete\"\>", ",", "19"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Complete\"\>", ",", "20"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Complete\"\>", ",", "21"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Complete\"\>", ",", "22"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Complete\"\>", ",", "23"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Complete\"\>", ",", "24"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Complete\"\>", ",", "25"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Complete\"\>", ",", "26"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Complete\"\>", ",", "27"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Complete\"\>", ",", "28"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Complete\"\>", ",", "29"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Complete\"\>", ",", "30"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CompleteBipartite\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "3"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CompleteBipartite\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "4"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CompleteBipartite\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "5"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CompleteBipartite\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "6"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CompleteBipartite\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "7"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CompleteBipartite\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "8"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CompleteBipartite\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "4"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CompleteBipartite\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "5"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CompleteBipartite\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "6"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CompleteBipartite\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "7"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CompleteBipartite\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "4"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CompleteBipartite\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "5"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CompleteBipartite\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "6"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CompleteBipartite\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"5", ",", "5"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CompleteBipartite\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"5", ",", "6"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CompleteBipartite\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"6", ",", "6"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CompleteBipartite\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"6", ",", "7"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CompleteBipartite\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"7", ",", "7"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CompleteBipartite\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"7", ",", "8"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CompleteBipartite\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"8", ",", "8"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CompleteBipartite\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"8", ",", "9"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CompleteBipartite\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"9", ",", "9"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CompleteBipartite\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"9", ",", "10"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CompleteBipartite\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "10"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CompleteBipartite\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"11", ",", "11"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CompleteBipartite\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"12", ",", "12"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CompleteBipartite\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"13", ",", "13"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CompleteBipartite\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"14", ",", "14"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CompleteBipartite\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"15", ",", "15"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CompleteBipartite\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"16", ",", "16"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CompleteBipartite\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"17", ",", "17"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CompleteBipartite\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"18", ",", "18"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CompleteBipartite\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"19", ",", "19"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CompleteBipartite\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"20", ",", "20"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CompleteKPartite\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "2", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CompleteKPartite\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "2", ",", "2", ",", "3"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CompleteKPartite\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "2", ",", "3", ",", "3"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CompleteKPartite\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "3", ",", "3", ",", "3"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CompleteKPartite\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "4", ",", "4", ",", "4"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CompleteKPartite\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "1", ",", "1", ",", "2"}], "}"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CompleteKPartite\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "1", ",", "2", ",", "2"}], "}"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CompleteKPartite\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "2", ",", "2", ",", "2"}], "}"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CompleteKPartite\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "2", ",", "2", ",", "2"}], "}"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CompleteKPartite\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "3", ",", "3", ",", "3", ",", "3"}], "}"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CompleteKPartite\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "2"}], 
      "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CompleteKPartite\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "1", ",", "1", ",", "2", ",", "2"}], 
      "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CompleteKPartite\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "1", ",", "2", ",", "2", ",", "2"}], 
      "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CompleteKPartite\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "2", ",", "2", ",", "2", ",", "2"}], 
      "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CompleteKPartite\"\>", ",", 
     RowBox[{"{", 
      RowBox[{
      "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "2"}], 
      "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CompleteKPartite\"\>", ",", 
     RowBox[{"{", 
      RowBox[{
      "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "2", ",", "2"}], 
      "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CompleteKPartite\"\>", ",", 
     RowBox[{"{", 
      RowBox[{
      "1", ",", "1", ",", "1", ",", "1", ",", "2", ",", "2", ",", "2"}], 
      "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CompleteKPartite\"\>", ",", 
     RowBox[{"{", 
      RowBox[{
      "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
       "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CompleteKPartite\"\>", ",", 
     RowBox[{"{", 
      RowBox[{
      "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "2", ",", 
       "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CompleteKPartite\"\>", ",", 
     RowBox[{"{", 
      RowBox[{
      "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
       "1", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CompleteTripartite\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "2", ",", "3"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CompleteTripartite\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "2", ",", "4"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CompleteTripartite\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "2", ",", "5"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CompleteTripartite\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "2", ",", "6"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CompleteTripartite\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "3", ",", "3"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CompleteTripartite\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "3", ",", "4"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CompleteTripartite\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "3", ",", "5"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CompleteTripartite\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "4", ",", "4"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CompleteTripartite\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "3", ",", "3"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CompleteTripartite\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "3", ",", "4"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CompleteTripartite\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "4", ",", "4"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CompleteTripartite\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "4", ",", "4"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CompleteTripartite\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "4", ",", "5"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CompleteTripartite\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "5", ",", "5"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CompleteTripartite\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"5", ",", "5", ",", "5"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CompleteTripartite\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"6", ",", "6", ",", "6"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Cone\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"5", ",", "3"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Cone\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"5", ",", "4"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Cone\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"5", ",", "5"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Cone\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"6", ",", "3"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Cone\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"6", ",", "4"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Cone\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"7", ",", "3"}], "}"}]}], "}"}], 
   ",", "\<\"CrossingNumberGraph2B\"\>", ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Crown\"\>", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Cubic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"8", ",", "3"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Cubic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "8"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Cubic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "9"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Cubic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "10"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Cubic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "11"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Cubic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "13"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Cubic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "16"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Cubic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "18"}], "}"}]}], "}"}], ",", "\<\"CubicalGraph\"\>", 
   ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Cycle\"\>", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Cycle\"\>", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Cycle\"\>", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Cycle\"\>", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Cycle\"\>", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Cycle\"\>", ",", "10"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Cycle\"\>", ",", "11"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Cycle\"\>", ",", "12"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Cycle\"\>", ",", "13"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Cycle\"\>", ",", "14"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Cycle\"\>", ",", "15"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Cycle\"\>", ",", "16"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Cycle\"\>", ",", "17"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Cycle\"\>", ",", "18"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Cycle\"\>", ",", "19"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Cycle\"\>", ",", "20"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Cycle\"\>", ",", "21"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Cycle\"\>", ",", "22"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Cycle\"\>", ",", "23"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Cycle\"\>", ",", "24"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Cycle\"\>", ",", "25"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Cycle\"\>", ",", "26"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Cycle\"\>", ",", "27"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Cycle\"\>", ",", "28"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Cycle\"\>", ",", "29"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Cycle\"\>", ",", "30"}], "}"}], ",", "\<\"DiamondGraph\"\>", 
   ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Dipyramid\"\>", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Dipyramid\"\>", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Dipyramid\"\>", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Dipyramid\"\>", ",", "8"}], "}"}], 
   ",", "\<\"DominoGraph\"\>", ",", 
   RowBox[{"{", 
    RowBox[{"\<\"DoubleToroidal\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"8", ",", "6"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"DoubleToroidal\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"8", ",", "9"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"DoubleToroidal\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"8", ",", "10"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"DoubleToroidal\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"8", ",", "11"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"EdgeTransitive\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"9", ",", "14"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Empty\"\>", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Empty\"\>", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Empty\"\>", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Empty\"\>", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Empty\"\>", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Empty\"\>", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Empty\"\>", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Empty\"\>", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Empty\"\>", ",", "10"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Empty\"\>", ",", "11"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Empty\"\>", ",", "12"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Empty\"\>", ",", "13"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Empty\"\>", ",", "14"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Empty\"\>", ",", "15"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Empty\"\>", ",", "16"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Empty\"\>", ",", "17"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Empty\"\>", ",", "18"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Empty\"\>", ",", "19"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Empty\"\>", ",", "20"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Empty\"\>", ",", "21"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Empty\"\>", ",", "22"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Empty\"\>", ",", "23"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Empty\"\>", ",", "24"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Empty\"\>", ",", "25"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Empty\"\>", ",", "26"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Empty\"\>", ",", "27"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Empty\"\>", ",", "28"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Empty\"\>", ",", "29"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Empty\"\>", ",", "30"}], "}"}], ",", "\<\"FritschGraph\"\>", 
   ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Gear\"\>", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Grid\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "3"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Halin\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "5"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Halin\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "12"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"HamiltonLaceable\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"6", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"HamiltonLaceable\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"8", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"HamiltonLaceable\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"8", ",", "3"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"HamiltonLaceable\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"8", ",", "4"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"HamiltonLaceable\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"8", ",", "5"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"HamiltonLaceable\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"8", ",", "7"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"HamiltonLaceable\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"8", ",", "8"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"HamiltonLaceable\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"8", ",", "9"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"HamiltonLaceable\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"8", ",", "10"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Harary\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "7"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Harary\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "9"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Harary\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"5", ",", "9"}], "}"}]}], "}"}], 
   ",", "\<\"HemicubicalGraph\"\>", ",", 
   RowBox[{"{", 
    RowBox[{"\<\"HexagonalGrid\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "2"}], "}"}]}], "}"}], 
   ",", "\<\"HouseGraph\"\>", ",", "\<\"HouseXGraph\"\>", ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Jahangir\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "3"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"JohnsonSkeleton\"\>", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"JohnsonSkeleton\"\>", ",", "10"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"JohnsonSkeleton\"\>", ",", "17"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"JohnsonSkeleton\"\>", ",", "62"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"JohnsonSkeleton\"\>", ",", "63"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"JohnsonSkeleton\"\>", ",", "84"}], "}"}], 
   ",", "\<\"K2,2,3+K1\"\>", ",", "\<\"K2,3+2K1\"\>", ",", "\<\"K2,3+K1\"\>", 
   ",", "\<\"K2,4+K1\"\>", ",", "\<\"K3,3+K1\"\>", ",", "\<\"K4+2K1\"\>", 
   ",", "\<\"K4+3K1\"\>", ",", "\<\"K4,4-e\"\>", ",", "\<\"K4,5-4K2\"\>", 
   ",", "\<\"K4-e+2K1\"\>", ",", "\<\"K4-e+3K1\"\>", ",", "\<\"K4-e+K1\"\>", 
   ",", "\<\"K4+K1\"\>", ",", "\<\"K5+2K1\"\>", ",", "\<\"K5+3K1\"\>", 
   ",", "\<\"K5+K1\"\>", ",", "\<\"K6+K1\"\>", ",", "\<\"K7+K1\"\>", 
   ",", "\<\"K8+K1\"\>", ",", "\<\"K9+K1\"\>", ",", 
   RowBox[{"{", 
    RowBox[{"\<\"KCyclic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"11", ",", "235"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"KCyclic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"11", ",", "239"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"KCyclic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"11", ",", "269"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"KCyclic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"11", ",", "275"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"KCyclic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"11", ",", "309"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"KCyclic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"11", ",", "310"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"KCyclic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"11", ",", "311"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"KCyclic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"11", ",", "333"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"KCyclic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"11", ",", "336"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"KleinBottleTriangulation\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"9", ",", "1"}], "}"}]}], "}"}], ",", "\<\"LemkeGraph\"\>", ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Lollipop\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Lollipop\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"5", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Lollipop\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"6", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Lollipop\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"7", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Matchstick\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"7", ",", "26"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Matchstick\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"7", ",", "55"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Matchstick\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"8", ",", "23"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Matchstick\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"8", ",", "75"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Matchstick\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"8", ",", "92"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Matchstick\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"8", ",", "165"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Matchstick\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"8", ",", "172"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Matchstick\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"9", ",", "87"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Matchstick\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"9", ",", "273"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Matchstick\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"9", ",", "287"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Matchstick\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"9", ",", "322"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Matchstick\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"9", ",", "437"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Matchstick\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"9", ",", "522"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Matchstick\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"9", ",", "543"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Matchstick\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"9", ",", "568"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Matchstick\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "53"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Matchstick\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "1507"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"MoebiusLadder\"\>", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"MongolianTent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "3"}], "}"}]}], "}"}], ",", "\<\"NechushtanGraph\"\>",
    ",", "\<\"OctahedralGraph\"\>", ",", "\<\"P2+2K1\"\>", 
   ",", "\<\"P2+3K1\"\>", ",", "\<\"P2+4K1\"\>", ",", "\<\"P2+5K1\"\>", 
   ",", "\<\"P2+K1\"\>", ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Pan\"\>", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Pan\"\>", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Pan\"\>", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Pan\"\>", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Pan\"\>", ",", "9"}], "}"}], ",", "\<\"PaschGraph\"\>", ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Path\"\>", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Path\"\>", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"PathComplement\"\>", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"PathComplement\"\>", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"PathComplement\"\>", ",", "10"}], "}"}], 
   ",", "\<\"PawGraph\"\>", ",", "\<\"PentagonalWedgeGraph\"\>", 
   ",", "\<\"PentatopeGraph\"\>", ",", "\<\"PetersenGraph\"\>", ",", 
   RowBox[{"{", 
    RowBox[{"\<\"PlanarNonbipartiteOddShortestPathCount\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"8", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"PlanarNonbipartiteOddShortestPathCount\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"9", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"PlanarNonbipartiteOddShortestPathCount\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"PlanarNonbipartiteOddShortestPathCount\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "3"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Prism\"\>", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Prism\"\>", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ProjectivePlanarForbidden\"\>", ",", "11"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ProjectivePlanarForbidden\"\>", ",", "12"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ProjectivePlanarForbidden\"\>", ",", "13"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ProjectivePlanarForbidden\"\>", ",", "15"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ProjectivePlanarForbidden\"\>", ",", "16"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ProjectivePlanarForbidden\"\>", ",", "17"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ProjectivePlanarForbidden\"\>", ",", "19"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ProjectivePlanarForbidden\"\>", ",", "20"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ProjectivePlanarForbidden\"\>", ",", "21"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ProjectivePlanarForbidden\"\>", ",", "28"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ProjectivePlanarForbidden\"\>", ",", "29"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ProjectivePlanarForbidden\"\>", ",", "31"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ProjectivePlanarForbidden\"\>", ",", "33"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ProjectivePlanarForbidden\"\>", ",", "34"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Quartic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"8", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Quartic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"8", ",", "4"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Quartic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"8", ",", "5"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Quartic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"9", ",", "5"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Quartic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"9", ",", "7"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Quartic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"9", ",", "8"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Quartic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"9", ",", "9"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Quartic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"9", ",", "10"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Quartic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"9", ",", "12"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Quartic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"9", ",", "13"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Quartic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"9", ",", "15"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Quartic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "6"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Quartic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "8"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Quartic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "9"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Quartic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "10"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Quartic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "11"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Quartic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "16"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Quartic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "20"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Quartic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "21"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Quartic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "24"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Quartic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "25"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Quartic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "26"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Quartic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "30"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Quartic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "31"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Quartic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "32"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Quartic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "33"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Quartic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "34"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Quartic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "35"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Quartic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "37"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Quartic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "38"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Quartic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "39"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Quartic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "40"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Quartic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "41"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Quartic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "42"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Quartic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "45"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Quartic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "46"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Quartic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "47"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Quartic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "49"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Quartic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "50"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Quartic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "51"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Quartic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "52"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Quartic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "53"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Quartic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "54"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Quartic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "55"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Quartic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "56"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Quartic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "57"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"QuasiCubic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"9", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"QuasiCubic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"9", ",", "4"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"QuasiCubic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"9", ",", "5"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"QuasiCubic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"9", ",", "6"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"QuasiCubic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"9", ",", "12"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"QuasiCubic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"9", ",", "14"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"QuasiCubic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"9", ",", "19"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"QuasiCubic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"9", ",", "22"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"QuasiCubic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"9", ",", "23"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"QuasiCubic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"9", ",", "24"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"QuasiCubic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"9", ",", "27"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"QuasiQuintic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"9", ",", "5"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"QuasiQuintic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"9", ",", "6"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"QuasiQuintic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"9", ",", "7"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"QuasiQuintic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"9", ",", "12"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"QuasiQuintic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"9", ",", "17"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"QuasiQuintic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"9", ",", "18"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"QuasiQuintic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"9", ",", "19"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Queen\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "3"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Quintic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "4"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Quintic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "5"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Quintic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "8"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Quintic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "12"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Quintic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "14"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Quintic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "15"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Quintic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "16"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Quintic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "17"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Quintic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "19"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Quintic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "20"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Quintic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "21"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Quintic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "25"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Quintic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "26"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Quintic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "28"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Quintic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "29"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Quintic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "30"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Quintic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "32"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Quintic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "33"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Quintic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "34"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Quintic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "35"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Quintic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "36"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Quintic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "37"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Quintic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "38"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Quintic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "39"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Quintic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "41"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Quintic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "42"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Quintic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "43"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Quintic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "44"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Quintic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "45"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Quintic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "46"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Quintic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "47"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Quintic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "48"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Quintic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "49"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Quintic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "51"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Quintic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "52"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Quintic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "53"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Quintic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "54"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Quintic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "55"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Quintic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "56"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Quintic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "57"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Quintic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "58"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Rook\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "5"}], "}"}]}], "}"}], ",", "\<\"RoyleGraph1\"\>", 
   ",", "\<\"RoyleGraph2\"\>", ",", 
   RowBox[{"{", 
    RowBox[{"\<\"SelfComplementary\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"9", ",", "14"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"SelfDual\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"7", ",", "6"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"SelfDual\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"9", ",", "34"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"SelfDual\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"9", ",", "41"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"SelfDual\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"9", ",", "48"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Septic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "4"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Sextic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Sextic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "3"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Sextic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "4"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Sextic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "6"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Sextic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "9"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Sextic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "10"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Sextic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "11"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Sextic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "12"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Sextic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "13"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Sextic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "14"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Sextic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "15"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Sextic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "16"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Sextic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "17"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Sextic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "21"}], "}"}]}], "}"}], 
   ",", "\<\"SingletonGraph\"\>", ",", "\<\"SixteenCellGraph\"\>", 
   ",", "\<\"SoiferGraph\"\>", ",", "\<\"SquareGraph\"\>", 
   ",", "\<\"TetrahedralGraph\"\>", ",", "\<\"ThetaZeroGraph\"\>", ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Trapezohedron\"\>", ",", "4"}], "}"}], 
   ",", "\<\"TriangleGraph\"\>", ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Triangular\"\>", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"TriangularHoneycombQueen\"\>", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"UnitDistanceForbidden\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"6", ",", "9", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"UnitDistanceForbidden\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"7", ",", "10", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"UnitDistanceForbidden\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"7", ",", "11", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"UnitDistanceForbidden\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"8", ",", "12", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"UnitDistanceForbidden\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"8", ",", "13", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"UnitDistanceForbidden\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"8", ",", "13", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"UnitDistanceForbidden\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"8", ",", "13", ",", "8"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"UnitDistanceForbidden\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"9", ",", "13", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"UnitDistanceForbidden\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"9", ",", "13", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"UnitDistanceForbidden\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"9", ",", "14", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"UnitDistanceForbidden\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"9", ",", "14", ",", "6"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"UnitDistanceForbidden\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"9", ",", "14", ",", "18"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"UnitDistanceForbidden\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"9", ",", "14", ",", "19"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"UnitDistanceForbidden\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"9", ",", "15", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"UnitDistanceForbidden\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"9", ",", "15", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"UnitDistanceForbidden\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"9", ",", "15", ",", "7"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"UnitDistanceForbidden\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"9", ",", "15", ",", "10"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"UnitDistanceForbidden\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"9", ",", "15", ",", "17"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"UnitDistanceForbidden\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"9", ",", "15", ",", "20"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"UnitDistanceForbidden\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"9", ",", "15", ",", "33"}], "}"}]}], "}"}], 
   ",", "\<\"UtilityGraph\"\>", ",", "\<\"W5+2K1\"\>", ",", "\<\"W5+K1\"\>", 
   ",", "\<\"WagnerGraph\"\>", ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Wheel\"\>", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Wheel\"\>", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Wheel\"\>", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Wheel\"\>", ",", "10"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"WheelComplement\"\>", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"WheelComplement\"\>", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"WheelComplement\"\>", ",", "10"}], "}"}], 
   ",", "\<\"Y3+K1\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.8772871907317266`*^9},
 CellLabel->"Out[10]=",ExpressionUUID->"9a109a45-6d6a-4bec-89d7-ab3b49b4190b"]
}, Open  ]],

Cell["\<\
I wasn\[CloseCurlyQuote]t sure which GraphData property corresponded to the \
number of valid colorings for a graph, so I tried to find a pattern in some \
of the properties related to coloring, but couldn\[CloseCurlyQuote]t find a \
pattern.\
\>", "Text",
 CellChangeTimes->{{3.877288312148196*^9, 
  3.8772883459039683`*^9}},ExpressionUUID->"e9844d4c-856b-4fc0-aa21-\
8d315d9932d1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"First", "[", 
  RowBox[{"GraphData", "[", "\"\<ChromaticallyUnique\>\"", "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8772871949195232`*^9, 3.8772871964195576`*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"1028a19d-f42c-46e1-a73d-3de3f44f8e9b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"5", ",", "31"}], "}"}]], "Output",
 CellChangeTimes->{3.877287196716403*^9},
 CellLabel->"Out[11]=",ExpressionUUID->"c1a979e2-f71f-48e0-be8c-9bf98c709169"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GraphData", "[", 
  RowBox[{
   RowBox[{"First", "[", 
    RowBox[{"GraphData", "[", "\"\<ChromaticallyUnique\>\"", "]"}], "]"}], 
   ",", "\"\<ChromaticPolynomial\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.8772871989039607`*^9, 3.8772872024663935`*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"ca829a6a-42f7-4144-b847-917228996db5"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "2"}], "+", "#1"}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", "#1"}], ")"}], " ", "#1", " ", 
   RowBox[{"(", 
    RowBox[{"5", "-", 
     RowBox[{"4", " ", "#1"}], "+", 
     SuperscriptBox["#1", "2"]}], ")"}]}], "&"}]], "Output",
 CellChangeTimes->{3.8772872027789326`*^9},
 CellLabel->"Out[12]=",ExpressionUUID->"a279f7a6-d507-4638-97df-e6a367e9bf7e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GraphData", "[", 
  RowBox[{
   RowBox[{"First", "[", 
    RowBox[{"GraphData", "[", "\"\<ChromaticallyUnique\>\"", "]"}], "]"}], 
   ",", "\"\<QChromaticPolynomial\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.8772871989039607`*^9, 3.877287212625157*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"aef146b1-3cea-496e-9993-64b5f9a80a31"],

Cell[BoxData[
 RowBox[{
  RowBox[{"2", "+", 
   FractionBox["2", "#1"], "+", "#1"}], "&"}]], "Output",
 CellChangeTimes->{3.877287212812808*^9},
 CellLabel->"Out[13]=",ExpressionUUID->"f6b3c50e-bf5b-4994-8922-947228ec27c0"]
}, Open  ]],

Cell["I looked at the answer and one of them is the path graph 4.", "Text",
 CellChangeTimes->{{3.8772883514819603`*^9, 
  3.877288365305835*^9}},ExpressionUUID->"ec61c2df-38b8-4bb3-b3db-\
aca3c5b0b3a2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GraphData", "[", 
  RowBox[{"{", 
   RowBox[{"\"\<Path\>\"", ",", " ", "4"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.87728816134031*^9, 3.877288167105934*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"0428e6a9-6ca0-415a-9f1a-52234171135e"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{1, 2, 3, 4}, {Null, 
       SparseArray[
       Automatic, {4, 4}, 0, {
        1, {{0, 1, 3, 5, 6}, {{2}, {1}, {3}, {2}, {4}, {3}}}, Pattern}]}, {
      VertexCoordinates -> {{1, 0}, {2, 0}, {3, 0}, {4, 0}}}]]}, 
    TagBox[
     GraphicsGroupBox[
      GraphicsComplexBox[{{1., 0.}, {2., 0.}, {3., 0.}, {4., 0.}}, {
        {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
         ArrowBox[{{1, 2}, {2, 3}, {3, 4}}, 0.030239520958083826`]}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         DiskBox[1, 0.030239520958083826], DiskBox[2, 0.030239520958083826], 
         DiskBox[3, 0.030239520958083826], 
         DiskBox[4, 0.030239520958083826]}}]],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None]], "Output",
 CellChangeTimes->{3.8772881677777653`*^9},
 CellLabel->"Out[14]=",ExpressionUUID->"53514229-7c2f-4ed4-a534-92414e8c9b9d"]
}, Open  ]],

Cell["\<\
I also tried to find a relationship between one of the color properties and \
24, but couldn\[CloseCurlyQuote]t. As far as I know, GraphData does not \
include data on how many valid colorings there are of a graph. Please comment \
if you know the name of this property and if GraphData can compute it or if \
you can take the output of GraphData for a property and compute it.\
\>", "Text",
 CellChangeTimes->{{3.8772883672432804`*^9, 
  3.8772884459541287`*^9}},ExpressionUUID->"2136cab5-779a-471d-b761-\
c8830496c1f4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GraphData", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\"\<Path\>\"", ",", " ", "4"}], "}"}], ",", 
   "\"\<ChromaticInvariant\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.87728816134031*^9, 3.877288172762144*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"7df10eea-6922-4d76-9882-a81b18921fb3"],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.877288172949644*^9},
 CellLabel->"Out[15]=",ExpressionUUID->"4820c5b4-7adf-4a33-adb1-6e626d91a283"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GraphData", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\"\<Path\>\"", ",", " ", "4"}], "}"}], ",", 
   "\"\<ChromaticNumber\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.87728816134031*^9, 3.877288176871516*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"f28405fc-cf3f-4f36-b02a-ba8d28f8bf1b"],

Cell[BoxData["2"], "Output",
 CellChangeTimes->{3.877288177059086*^9},
 CellLabel->"Out[16]=",ExpressionUUID->"ea7b832a-4746-4bb5-8b26-1b242f5cb256"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"GraphData", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\"\<Path\>\"", ",", " ", "4"}], "}"}], ",", 
    "\"\<ChromaticPolynomial\>\""}], "]"}], "[", "x", "]"}]], "Input",
 CellChangeTimes->{{3.87728816134031*^9, 3.877288187180893*^9}},
 CellLabel->"In[18]:=",ExpressionUUID->"9cce0704-70b3-41bc-83d9-683692b4b73e"],

Cell[BoxData[
 RowBox[{
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", "x"}], ")"}], "3"], " ", "x"}]], "Output",
 CellChangeTimes->{{3.877288183059017*^9, 3.8772881874934034`*^9}},
 CellLabel->"Out[18]=",ExpressionUUID->"a1af7349-8a77-43de-8395-06b6302b7a33"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GraphData", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\"\<Path\>\"", ",", " ", "4"}], "}"}], ",", 
   "\"\<EdgeChromaticNumber\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.87728816134031*^9, 3.8772881977668657`*^9}},
 CellLabel->"In[20]:=",ExpressionUUID->"c64c4620-96c8-426d-9386-6d7dbe4e2552"],

Cell[BoxData["2"], "Output",
 CellChangeTimes->{{3.8772881947794943`*^9, 3.877288198079426*^9}},
 CellLabel->"Out[20]=",ExpressionUUID->"622789cf-fb89-48b9-b89e-0196d13760e7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GraphData", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\"\<Path\>\"", ",", " ", "4"}], "}"}], ",", 
   "\"\<FractionalChromaticNumber\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.87728816134031*^9, 3.877288202735591*^9}},
 CellLabel->"In[21]:=",ExpressionUUID->"30ee2c3a-0972-413c-bc7e-f75e9f86033e"],

Cell[BoxData["2"], "Output",
 CellChangeTimes->{3.8772882030012207`*^9},
 CellLabel->"Out[21]=",ExpressionUUID->"80c12f11-d2f2-40aa-8a84-0f0763b2af16"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GraphData", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\"\<Path\>\"", ",", " ", "4"}], "}"}], ",", 
   "\"\<FractionalEdgeChromaticNumber\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.87728816134031*^9, 3.87728820725696*^9}},
 CellLabel->"In[22]:=",ExpressionUUID->"29eaa051-1bfe-40a5-8d8c-d23d3d96b832"],

Cell[BoxData["2"], "Output",
 CellChangeTimes->{3.877288207569412*^9},
 CellLabel->"Out[22]=",ExpressionUUID->"6fb5acb4-e4d4-4c51-b577-33ba1b0a2be7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GraphData", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\"\<Path\>\"", ",", " ", "4"}], "}"}], ",", 
   "\"\<MinimumVertexColoring\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.87728816134031*^9, 3.8772882162877417`*^9}},
 CellLabel->"In[23]:=",ExpressionUUID->"de81d85f-5b4d-4677-9680-e191995ec50b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "2", ",", "1", ",", "2"}], "}"}]], "Output",
 CellChangeTimes->{3.8772882165846195`*^9},
 CellLabel->"Out[23]=",ExpressionUUID->"f556dd74-5ddb-4109-b04e-d0502250d626"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GraphData", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\"\<Path\>\"", ",", " ", "4"}], "}"}], ",", 
   "\"\<MinimumEdgeColoring\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.87728816134031*^9, 3.877288221574132*^9}},
 CellLabel->"In[24]:=",ExpressionUUID->"d51ff694-92bb-426f-9ad3-d8530ab5d748"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "2", ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{3.8772882218820915`*^9},
 CellLabel->"Out[24]=",ExpressionUUID->"ac3e4e8f-f7bd-44ce-8b82-f31b45978744"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GraphData", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\"\<Path\>\"", ",", " ", "4"}], "}"}], ",", 
   "\"\<MinimumWeightFractionalColoring\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.87728816134031*^9, 3.877288228490492*^9}},
 CellLabel->"In[25]:=",ExpressionUUID->"95d90286-82e6-4840-9e6e-829695f899a3"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "3"}], "}"}], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"2", ",", "4"}], "}"}], ",", "1"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.877288228787354*^9},
 CellLabel->"Out[25]=",ExpressionUUID->"f082d83a-e90c-4aff-807d-06999669c2fb"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Exercise 55", "Section",
 CellChangeTimes->{{3.877288452482757*^9, 3.877288454389039*^9}, {
  3.8772885135984454`*^9, 
  3.877288513832828*^9}},ExpressionUUID->"67a58b19-40ae-417d-968b-\
b901f68d626f"],

Cell[TextData[{
 "How many edges are there in the complete k-partite graph ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["K", 
    RowBox[{
     SubscriptBox["n", "1"], ",", 
     SubscriptBox["n", "2"], ",", "\[Ellipsis]", ",", 
     SubscriptBox["n", "k"]}]], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "16f25d47-154e-4bda-8b14-c7c1911b2c8a"],
 "?"
}], "Text",
 CellChangeTimes->{{3.8772885150514965`*^9, 
  3.8772885569690256`*^9}},ExpressionUUID->"c0fdfbc3-1860-4f21-a211-\
587ed6684195"],

Cell["I\[CloseCurlyQuote]m going to use FindSequenceFunction to find a \
pattern.", "Text",
 CellChangeTimes->{{3.877288559765806*^9, 
  3.877288575762557*^9}},ExpressionUUID->"7c4811d2-7337-49a0-8bb1-\
b2cb12f71f7b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"EdgeCount", "[", 
    RowBox[{"CompleteGraph", "[", 
     RowBox[{"ConstantArray", "[", 
      RowBox[{"2", ",", "i"}], "]"}], "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "9"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.877288581059351*^9, 3.877288596278166*^9}, 
   3.8772887119395623`*^9},
 CellLabel->"In[30]:=",ExpressionUUID->"1349628f-66ca-41d6-adea-7383af8535ff"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "4", ",", "12", ",", "24", ",", "40", ",", "60", ",", "84", ",", 
   "112", ",", "144"}], "}"}]], "Output",
 CellChangeTimes->{3.87728859677808*^9, 3.8772887122404737`*^9},
 CellLabel->"Out[30]=",ExpressionUUID->"9df0e0d9-971a-49ce-8005-bd2b7638e772"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindSequenceFunction", "[", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"EdgeCount", "[", 
     RowBox[{"CompleteGraph", "[", 
      RowBox[{"ConstantArray", "[", 
       RowBox[{"2", ",", "i"}], "]"}], "]"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "9"}], "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8772885661375585`*^9, 3.877288567637642*^9}, {
   3.8772886007744756`*^9, 3.87728860125887*^9}, 3.877288720389967*^9},
 CellLabel->"In[31]:=",ExpressionUUID->"43e3f69c-3d4f-4d18-9009-732f78e7e74e"],

Cell[BoxData[
 InterpretationBox[
  TemplateBox[<|"head" -> "DifferenceRoot", "big" -> GridBox[{{
        RowBox[{
          RowBox[{
            RowBox[{"8", " ", "\[FormalN]"}], "+", 
            RowBox[{
              RowBox[{"(", 
                RowBox[{"1", "-", "\[FormalN]"}], ")"}], " ", 
              RowBox[{"\[FormalY]", "[", "\[FormalN]", "]"}]}], "+", 
            RowBox[{
              RowBox[{"(", 
                RowBox[{
                  RowBox[{"-", "3"}], "+", "\[FormalN]"}], ")"}], " ", 
              RowBox[{"\[FormalY]", "[", 
                RowBox[{"1", "+", "\[FormalN]"}], "]"}]}]}], "\[Equal]", 
          "0"}]}, {
        RowBox[{
          RowBox[{"\[FormalY]", "[", "1", "]"}], "\[Equal]", "1"}]}, {
        RowBox[{
          RowBox[{"\[FormalY]", "[", "2", "]"}], "\[Equal]", "4"}]}, {
        RowBox[{
          RowBox[{"\[FormalY]", "[", "3", "]"}], "\[Equal]", "12"}]}, {
        RowBox[{
          RowBox[{"\[FormalY]", "[", "4", "]"}], "\[Equal]", "24"}]}}, 
      BaseStyle -> {"HolonomicInnerGrid"}], "small" -> 
    RowBox[{"\[FormalY]", "[", 
       RowBox[{"1", "+", "\[FormalN]"}], "]"}], "branchcuts" -> "None"|>,
   "HolonomicDisplay"],
  DifferenceRoot[
   Function[{\[FormalY], \[FormalN]}, {
    8 \[FormalN] + (
        1 - \[FormalN]) \[FormalY][\[FormalN]] + (-3 + \[FormalN]) \[FormalY][
        1 + \[FormalN]] == 0, \[FormalY][1] == 1, \[FormalY][2] == 
     4, \[FormalY][3] == 12, \[FormalY][4] == 24}]]]], "Output",
 CellChangeTimes->{3.8772886020244493`*^9, 3.877288721671193*^9},
 CellLabel->"Out[31]=",ExpressionUUID->"795543b1-7254-4797-89c1-eca9d40247c7"]
}, Open  ]],

Cell["I have a holonomic difference root object.", "Text",
 CellChangeTimes->{{3.8772887894345064`*^9, 
  3.877288796805657*^9}},ExpressionUUID->"1ffa4959-f0ab-432c-822d-\
9743351b8210"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"FindSequenceFunction", "[", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"EdgeCount", "[", 
      RowBox[{"CompleteGraph", "[", 
       RowBox[{"ConstantArray", "[", 
        RowBox[{"2", ",", "i"}], "]"}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "9"}], "}"}]}], "]"}], "]"}], "[", "100", 
  "]"}]], "Input",
 CellChangeTimes->{{3.8772885661375585`*^9, 3.877288567637642*^9}, {
   3.8772886007744756`*^9, 3.87728860125887*^9}, 3.877288720389967*^9, {
   3.8772888291784525`*^9, 3.877288830444113*^9}},
 CellLabel->"In[33]:=",ExpressionUUID->"9034293d-9f6e-42f7-9b66-92562bbdb4da"],

Cell[BoxData["19800"], "Output",
 CellChangeTimes->{3.8772888308815117`*^9},
 CellLabel->"Out[33]=",ExpressionUUID->"ac858c79-3c38-4045-9fd5-73f76ff00b25"]
}, Open  ]],

Cell["I have a different result for 3.", "Text",
 CellChangeTimes->{{3.8772888592991858`*^9, 
  3.87728886549059*^9}},ExpressionUUID->"64881d5b-4592-41b3-80f3-\
4f374c4456d4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindSequenceFunction", "[", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"EdgeCount", "[", 
     RowBox[{"CompleteGraph", "[", 
      RowBox[{"ConstantArray", "[", 
       RowBox[{"3", ",", "i"}], "]"}], "]"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "10"}], "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8772885661375585`*^9, 3.877288567637642*^9}, {
   3.8772886007744756`*^9, 3.87728860125887*^9}, 3.877288720389967*^9, {
   3.8772888291784525`*^9, 3.8772888540845284`*^9}},
 CellLabel->"In[35]:=",ExpressionUUID->"6de05800-1782-4f20-b5aa-04eb6febc276"],

Cell[BoxData[
 InterpretationBox[
  TemplateBox[<|"head" -> "DifferenceRoot", "big" -> GridBox[{{
        RowBox[{
          RowBox[{
            RowBox[{"18", " ", "\[FormalN]"}], "+", 
            RowBox[{
              RowBox[{"(", 
                RowBox[{"1", "-", "\[FormalN]"}], ")"}], " ", 
              RowBox[{"\[FormalY]", "[", "\[FormalN]", "]"}]}], "+", 
            RowBox[{
              RowBox[{"(", 
                RowBox[{
                  RowBox[{"-", "3"}], "+", "\[FormalN]"}], ")"}], " ", 
              RowBox[{"\[FormalY]", "[", 
                RowBox[{"1", "+", "\[FormalN]"}], "]"}]}]}], "\[Equal]", 
          "0"}]}, {
        RowBox[{
          RowBox[{"\[FormalY]", "[", "1", "]"}], "\[Equal]", "3"}]}, {
        RowBox[{
          RowBox[{"\[FormalY]", "[", "2", "]"}], "\[Equal]", "9"}]}, {
        RowBox[{
          RowBox[{"\[FormalY]", "[", "3", "]"}], "\[Equal]", "27"}]}, {
        RowBox[{
          RowBox[{"\[FormalY]", "[", "4", "]"}], "\[Equal]", "54"}]}}, 
      BaseStyle -> {"HolonomicInnerGrid"}], "small" -> 
    RowBox[{"\[FormalY]", "[", 
       RowBox[{"1", "+", "\[FormalN]"}], "]"}], "branchcuts" -> "None"|>,
   "HolonomicDisplay"],
  DifferenceRoot[
   Function[{\[FormalY], \[FormalN]}, {
    18 \[FormalN] + (
        1 - \[FormalN]) \[FormalY][\[FormalN]] + (-3 + \[FormalN]) \[FormalY][
        1 + \[FormalN]] == 0, \[FormalY][1] == 3, \[FormalY][2] == 
     9, \[FormalY][3] == 27, \[FormalY][4] == 54}]]]], "Output",
 CellChangeTimes->{{3.877288844573238*^9, 3.877288854490757*^9}},
 CellLabel->"Out[35]=",ExpressionUUID->"811959e2-429c-4278-b033-1c2c59bc54a1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindSequenceFunction", "[", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"EdgeCount", "[", 
     RowBox[{"CompleteGraph", "[", 
      RowBox[{"ConstantArray", "[", 
       RowBox[{"4", ",", "i"}], "]"}], "]"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "10"}], "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8772885661375585`*^9, 3.877288567637642*^9}, {
   3.8772886007744756`*^9, 3.87728860125887*^9}, 3.877288720389967*^9, {
   3.8772888291784525`*^9, 3.877288877204395*^9}},
 CellLabel->"In[36]:=",ExpressionUUID->"e670d664-7c5b-408e-a6f7-aa8ea3ab9ea1"],

Cell[BoxData[
 InterpretationBox[
  TemplateBox[<|"head" -> "DifferenceRoot", "big" -> GridBox[{{
        RowBox[{
          RowBox[{
            RowBox[{"32", " ", "\[FormalN]"}], "+", 
            RowBox[{
              RowBox[{"(", 
                RowBox[{"1", "-", "\[FormalN]"}], ")"}], " ", 
              RowBox[{"\[FormalY]", "[", "\[FormalN]", "]"}]}], "+", 
            RowBox[{
              RowBox[{"(", 
                RowBox[{
                  RowBox[{"-", "3"}], "+", "\[FormalN]"}], ")"}], " ", 
              RowBox[{"\[FormalY]", "[", 
                RowBox[{"1", "+", "\[FormalN]"}], "]"}]}]}], "\[Equal]", 
          "0"}]}, {
        RowBox[{
          RowBox[{"\[FormalY]", "[", "1", "]"}], "\[Equal]", "6"}]}, {
        RowBox[{
          RowBox[{"\[FormalY]", "[", "2", "]"}], "\[Equal]", "16"}]}, {
        RowBox[{
          RowBox[{"\[FormalY]", "[", "3", "]"}], "\[Equal]", "48"}]}, {
        RowBox[{
          RowBox[{"\[FormalY]", "[", "4", "]"}], "\[Equal]", "96"}]}}, 
      BaseStyle -> {"HolonomicInnerGrid"}], "small" -> 
    RowBox[{"\[FormalY]", "[", 
       RowBox[{"1", "+", "\[FormalN]"}], "]"}], "branchcuts" -> "None"|>,
   "HolonomicDisplay"],
  DifferenceRoot[
   Function[{\[FormalY], \[FormalN]}, {
    32 \[FormalN] + (
        1 - \[FormalN]) \[FormalY][\[FormalN]] + (-3 + \[FormalN]) \[FormalY][
        1 + \[FormalN]] == 0, \[FormalY][1] == 6, \[FormalY][2] == 
     16, \[FormalY][3] == 48, \[FormalY][4] == 96}]]]], "Output",
 CellChangeTimes->{3.877288877813737*^9},
 CellLabel->"Out[36]=",ExpressionUUID->"ef6df065-5190-476b-bb77-4e7d02cd433b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindSequenceFunction", "[", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"EdgeCount", "[", 
     RowBox[{"CompleteGraph", "[", 
      RowBox[{"ConstantArray", "[", 
       RowBox[{"5", ",", "i"}], "]"}], "]"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "10"}], "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8772885661375585`*^9, 3.877288567637642*^9}, {
   3.8772886007744756`*^9, 3.87728860125887*^9}, 3.877288720389967*^9, {
   3.8772888291784525`*^9, 3.877288877204395*^9}, {3.8772889084455976`*^9, 
   3.8772889109334755`*^9}},
 CellLabel->"In[38]:=",ExpressionUUID->"095587c7-bb08-4a78-bf90-f3541a17f686"],

Cell[BoxData[
 InterpretationBox[
  TemplateBox[<|"head" -> "DifferenceRoot", "big" -> GridBox[{{
        RowBox[{
          RowBox[{
            RowBox[{"50", " ", "\[FormalN]"}], "+", 
            RowBox[{
              RowBox[{"(", 
                RowBox[{"1", "-", "\[FormalN]"}], ")"}], " ", 
              RowBox[{"\[FormalY]", "[", "\[FormalN]", "]"}]}], "+", 
            RowBox[{
              RowBox[{"(", 
                RowBox[{
                  RowBox[{"-", "3"}], "+", "\[FormalN]"}], ")"}], " ", 
              RowBox[{"\[FormalY]", "[", 
                RowBox[{"1", "+", "\[FormalN]"}], "]"}]}]}], "\[Equal]", 
          "0"}]}, {
        RowBox[{
          RowBox[{"\[FormalY]", "[", "1", "]"}], "\[Equal]", "10"}]}, {
        RowBox[{
          RowBox[{"\[FormalY]", "[", "2", "]"}], "\[Equal]", "25"}]}, {
        RowBox[{
          RowBox[{"\[FormalY]", "[", "3", "]"}], "\[Equal]", "75"}]}, {
        RowBox[{
          RowBox[{"\[FormalY]", "[", "4", "]"}], "\[Equal]", "150"}]}}, 
      BaseStyle -> {"HolonomicInnerGrid"}], "small" -> 
    RowBox[{"\[FormalY]", "[", 
       RowBox[{"1", "+", "\[FormalN]"}], "]"}], "branchcuts" -> "None"|>,
   "HolonomicDisplay"],
  DifferenceRoot[
   Function[{\[FormalY], \[FormalN]}, {
    50 \[FormalN] + (
        1 - \[FormalN]) \[FormalY][\[FormalN]] + (-3 + \[FormalN]) \[FormalY][
        1 + \[FormalN]] == 0, \[FormalY][1] == 10, \[FormalY][2] == 
     25, \[FormalY][3] == 75, \[FormalY][4] == 150}]]]], "Output",
 CellChangeTimes->{3.877288911542782*^9},
 CellLabel->"Out[38]=",ExpressionUUID->"14a51cfd-cf6a-43e0-a4ec-023e7e0ee75d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindSequenceFunction", "[", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"EdgeCount", "[", 
     RowBox[{"CompleteGraph", "[", 
      RowBox[{"ConstantArray", "[", 
       RowBox[{"6", ",", "i"}], "]"}], "]"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "10"}], "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8772885661375585`*^9, 3.877288567637642*^9}, {
   3.8772886007744756`*^9, 3.87728860125887*^9}, 3.877288720389967*^9, {
   3.8772888291784525`*^9, 3.877288877204395*^9}, {3.8772889084455976`*^9, 
   3.8772889250313964`*^9}},
 CellLabel->"In[40]:=",ExpressionUUID->"beca19e1-2c37-401e-a274-d463a331a39c"],

Cell[BoxData[
 InterpretationBox[
  TemplateBox[<|"head" -> "DifferenceRoot", "big" -> GridBox[{{
        RowBox[{
          RowBox[{
            RowBox[{"72", " ", "\[FormalN]"}], "+", 
            RowBox[{
              RowBox[{"(", 
                RowBox[{"1", "-", "\[FormalN]"}], ")"}], " ", 
              RowBox[{"\[FormalY]", "[", "\[FormalN]", "]"}]}], "+", 
            RowBox[{
              RowBox[{"(", 
                RowBox[{
                  RowBox[{"-", "3"}], "+", "\[FormalN]"}], ")"}], " ", 
              RowBox[{"\[FormalY]", "[", 
                RowBox[{"1", "+", "\[FormalN]"}], "]"}]}]}], "\[Equal]", 
          "0"}]}, {
        RowBox[{
          RowBox[{"\[FormalY]", "[", "1", "]"}], "\[Equal]", "15"}]}, {
        RowBox[{
          RowBox[{"\[FormalY]", "[", "2", "]"}], "\[Equal]", "36"}]}, {
        RowBox[{
          RowBox[{"\[FormalY]", "[", "3", "]"}], "\[Equal]", "108"}]}, {
        RowBox[{
          RowBox[{"\[FormalY]", "[", "4", "]"}], "\[Equal]", "216"}]}}, 
      BaseStyle -> {"HolonomicInnerGrid"}], "small" -> 
    RowBox[{"\[FormalY]", "[", 
       RowBox[{"1", "+", "\[FormalN]"}], "]"}], "branchcuts" -> "None"|>,
   "HolonomicDisplay"],
  DifferenceRoot[
   Function[{\[FormalY], \[FormalN]}, {
    72 \[FormalN] + (
        1 - \[FormalN]) \[FormalY][\[FormalN]] + (-3 + \[FormalN]) \[FormalY][
        1 + \[FormalN]] == 0, \[FormalY][1] == 15, \[FormalY][2] == 
     36, \[FormalY][3] == 108, \[FormalY][4] == 216}]]]], "Output",
 CellChangeTimes->{3.8772889255782175`*^9},
 CellLabel->"Out[40]=",ExpressionUUID->"72bb6f36-5f0f-4612-b0e8-2cfd34268160"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindSequenceFunction", "[", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"EdgeCount", "[", 
     RowBox[{"CompleteGraph", "[", 
      RowBox[{"ConstantArray", "[", 
       RowBox[{"7", ",", "i"}], "]"}], "]"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "10"}], "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8772885661375585`*^9, 3.877288567637642*^9}, {
   3.8772886007744756`*^9, 3.87728860125887*^9}, 3.877288720389967*^9, {
   3.8772888291784525`*^9, 3.877288877204395*^9}, {3.8772889084455976`*^9, 
   3.8772889250313964`*^9}, {3.8772889725211897`*^9, 3.877288976161723*^9}},
 CellLabel->"In[44]:=",ExpressionUUID->"49c6b5f2-a6c4-4216-9a1c-1814931707ec"],

Cell[BoxData[
 InterpretationBox[
  TemplateBox[<|"head" -> "DifferenceRoot", "big" -> GridBox[{{
        RowBox[{
          RowBox[{
            RowBox[{"98", " ", "\[FormalN]"}], "+", 
            RowBox[{
              RowBox[{"(", 
                RowBox[{"1", "-", "\[FormalN]"}], ")"}], " ", 
              RowBox[{"\[FormalY]", "[", "\[FormalN]", "]"}]}], "+", 
            RowBox[{
              RowBox[{"(", 
                RowBox[{
                  RowBox[{"-", "3"}], "+", "\[FormalN]"}], ")"}], " ", 
              RowBox[{"\[FormalY]", "[", 
                RowBox[{"1", "+", "\[FormalN]"}], "]"}]}]}], "\[Equal]", 
          "0"}]}, {
        RowBox[{
          RowBox[{"\[FormalY]", "[", "1", "]"}], "\[Equal]", "21"}]}, {
        RowBox[{
          RowBox[{"\[FormalY]", "[", "2", "]"}], "\[Equal]", "49"}]}, {
        RowBox[{
          RowBox[{"\[FormalY]", "[", "3", "]"}], "\[Equal]", "147"}]}, {
        RowBox[{
          RowBox[{"\[FormalY]", "[", "4", "]"}], "\[Equal]", "294"}]}}, 
      BaseStyle -> {"HolonomicInnerGrid"}], "small" -> 
    RowBox[{"\[FormalY]", "[", 
       RowBox[{"1", "+", "\[FormalN]"}], "]"}], "branchcuts" -> "None"|>,
   "HolonomicDisplay"],
  DifferenceRoot[
   Function[{\[FormalY], \[FormalN]}, {
    98 \[FormalN] + (
        1 - \[FormalN]) \[FormalY][\[FormalN]] + (-3 + \[FormalN]) \[FormalY][
        1 + \[FormalN]] == 0, \[FormalY][1] == 21, \[FormalY][2] == 
     49, \[FormalY][3] == 147, \[FormalY][4] == 294}]]]], "Output",
 CellChangeTimes->{3.877288976536738*^9},
 CellLabel->"Out[44]=",ExpressionUUID->"b5167aca-e27c-491e-b167-32ac80e556ce"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindSequenceFunction", "[", 
  RowBox[{"{", 
   RowBox[{"24", ",", "54", ",", "96", ",", "150", ",", "216", ",", "294"}], 
   "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.877288887088734*^9, 3.8772889306955395`*^9}, {
  3.8772889818083735`*^9, 3.8772889826678915`*^9}},
 CellLabel->"In[45]:=",ExpressionUUID->"2b0eee8b-83b7-4560-ac32-e48e0d4318d0"],

Cell[BoxData[
 RowBox[{
  RowBox[{"6", " ", 
   RowBox[{"(", 
    RowBox[{"1", "+", 
     RowBox[{"2", " ", "#1"}], "+", 
     SuperscriptBox["#1", "2"]}], ")"}]}], "&"}]], "Output",
 CellChangeTimes->{{3.8772889043603506`*^9, 3.8772889310080433`*^9}, 
   3.8772889830427403`*^9},
 CellLabel->"Out[45]=",ExpressionUUID->"6b881edc-99ef-4d2e-9231-0efa1f71cb1b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"FindSequenceFunction", "[", 
   RowBox[{"{", 
    RowBox[{"24", ",", "54", ",", "96", ",", "150", ",", "216", ",", "294"}], 
    "}"}], "]"}], "[", "x", "]"}]], "Input",
 CellChangeTimes->{{3.877288887088734*^9, 3.8772889861086545`*^9}},
 CellLabel->"In[46]:=",ExpressionUUID->"27a11994-fc15-44cf-b29b-6b5ee2287007"],

Cell[BoxData[
 RowBox[{"6", " ", 
  RowBox[{"(", 
   RowBox[{"1", "+", 
    RowBox[{"2", " ", "x"}], "+", 
    SuperscriptBox["x", "2"]}], ")"}]}]], "Output",
 CellChangeTimes->{{3.877288956881958*^9, 3.8772889867180166`*^9}},
 CellLabel->"Out[46]=",ExpressionUUID->"d5f28e7b-4674-4975-80ff-1b7164950720"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{"FindSequenceFunction", "[", 
    RowBox[{"{", 
     RowBox[{"24", ",", "54", ",", "96", ",", "150", ",", "216", ",", "294"}],
      "}"}], "]"}], "[", "x", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8772889604772196`*^9, 3.8772889903679852`*^9}},
 CellLabel->"In[47]:=",ExpressionUUID->"237ec3cf-5b9d-43af-90a7-c1c1dde06516"],

Cell[BoxData[
 RowBox[{"6", " ", 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{"1", "+", "x"}], ")"}], "2"]}]], "Output",
 CellChangeTimes->{{3.877288962211607*^9, 3.8772889908678823`*^9}},
 CellLabel->"Out[47]=",ExpressionUUID->"665fa158-f585-4c59-844e-61016d1abb8d"]
}, Open  ]],

Cell[TextData[{
 "It seems like the edge count\[CloseCurlyQuote]s holonomic fourth term is \
given by ",
 Cell[BoxData[
  FormBox[
   RowBox[{"6", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", "x"}], ")"}], "2"]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "b99d1ab7-103c-40d2-ab00-8d25e557da63"],
 "."
}], "Text",
 CellChangeTimes->{{3.8772889363200407`*^9, 
  3.877288970489071*^9}},ExpressionUUID->"5e808a11-199e-4021-9917-\
8ac06cb22318"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"InputForm", "[", 
  InterpretationBox[
   TemplateBox[<|"head" -> "DifferenceRoot", "big" -> GridBox[{{
         RowBox[{
           RowBox[{
             RowBox[{"98", " ", "\[FormalN]"}], "+", 
             RowBox[{
               RowBox[{"(", 
                 RowBox[{"1", "-", "\[FormalN]"}], ")"}], " ", 
               RowBox[{"\[FormalY]", "[", "\[FormalN]", "]"}]}], "+", 
             RowBox[{
               RowBox[{"(", 
                 RowBox[{
                   RowBox[{"-", "3"}], "+", "\[FormalN]"}], ")"}], " ", 
               RowBox[{"\[FormalY]", "[", 
                 RowBox[{"1", "+", "\[FormalN]"}], "]"}]}]}], "\[Equal]", 
           "0"}]}, {
         RowBox[{
           RowBox[{"\[FormalY]", "[", "1", "]"}], "\[Equal]", "21"}]}, {
         RowBox[{
           RowBox[{"\[FormalY]", "[", "2", "]"}], "\[Equal]", "49"}]}, {
         RowBox[{
           RowBox[{"\[FormalY]", "[", "3", "]"}], "\[Equal]", "147"}]}, {
         RowBox[{
           RowBox[{"\[FormalY]", "[", "4", "]"}], "\[Equal]", "294"}]}}, 
       BaseStyle -> {"HolonomicInnerGrid"}], "small" -> 
     RowBox[{"\[FormalY]", "[", 
        RowBox[{"1", "+", "\[FormalN]"}], "]"}], "branchcuts" -> "None"|>,
    "HolonomicDisplay"],
   DifferenceRoot[
    Function[{\[FormalY], \[FormalN]}, {
     98 \[FormalN] + (
         1 - \[FormalN]) \[FormalY][\[FormalN]] + (-3 + \[FormalN]) \
\[FormalY][1 + \[FormalN]] == 0, \[FormalY][1] == 21, \[FormalY][2] == 
      49, \[FormalY][3] == 147, \[FormalY][4] == 294}]]], "]"}]], "Input",
 CellChangeTimes->{{3.877288999878664*^9, 3.8772890137541804`*^9}},
 CellLabel->"In[49]:=",ExpressionUUID->"578d6c60-2d17-45fa-aba7-f4ad2c586950"],

Cell["\<\
DifferenceRoot[Function[{\[FormalY], \[FormalN]}, {98*\[FormalN] + (1 - \
\[FormalN])*\[FormalY][\[FormalN]] + (-3 + \[FormalN])*\[FormalY][1 + \
\[FormalN]] == 0, \[FormalY][1] == 21, \[FormalY][2] == 49, \[FormalY][3] == \
147, 
   \[FormalY][4] == 294}]]\
\>", "Output",
 CellChangeTimes->{{3.8772890073401704`*^9, 3.877289014024495*^9}},
 CellLabel->
  "Out[49]//InputForm=",ExpressionUUID->"dec131f5-7278-4fd4-977f-\
d5f8dc0786c6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"First", "[", 
  RowBox[{"InputForm", "[", 
   InterpretationBox[
    TemplateBox[<|"head" -> "DifferenceRoot", "big" -> GridBox[{{
          RowBox[{
            RowBox[{
              RowBox[{"98", " ", "\[FormalN]"}], "+", 
              RowBox[{
                RowBox[{"(", 
                  RowBox[{"1", "-", "\[FormalN]"}], ")"}], " ", 
                RowBox[{"\[FormalY]", "[", "\[FormalN]", "]"}]}], "+", 
              RowBox[{
                RowBox[{"(", 
                  RowBox[{
                    RowBox[{"-", "3"}], "+", "\[FormalN]"}], ")"}], " ", 
                RowBox[{"\[FormalY]", "[", 
                  RowBox[{"1", "+", "\[FormalN]"}], "]"}]}]}], "\[Equal]", 
            "0"}]}, {
          RowBox[{
            RowBox[{"\[FormalY]", "[", "1", "]"}], "\[Equal]", "21"}]}, {
          RowBox[{
            RowBox[{"\[FormalY]", "[", "2", "]"}], "\[Equal]", "49"}]}, {
          RowBox[{
            RowBox[{"\[FormalY]", "[", "3", "]"}], "\[Equal]", "147"}]}, {
          RowBox[{
            RowBox[{"\[FormalY]", "[", "4", "]"}], "\[Equal]", "294"}]}}, 
        BaseStyle -> {"HolonomicInnerGrid"}], "small" -> 
      RowBox[{"\[FormalY]", "[", 
         RowBox[{"1", "+", "\[FormalN]"}], "]"}], "branchcuts" -> "None"|>,
     "HolonomicDisplay"],
    DifferenceRoot[
     Function[{\[FormalY], \[FormalN]}, {
      98 \[FormalN] + (
          1 - \[FormalN]) \[FormalY][\[FormalN]] + (-3 + \[FormalN]) \
\[FormalY][1 + \[FormalN]] == 0, \[FormalY][1] == 21, \[FormalY][2] == 
       49, \[FormalY][3] == 147, \[FormalY][4] == 294}]]], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.87728902000884*^9, 3.8772890209580803`*^9}},
 CellLabel->"In[50]:=",ExpressionUUID->"c404acc8-c121-451b-9dc3-65da08c8e0d8"],

Cell[BoxData[
 InterpretationBox[
  TemplateBox[<|"head" -> "DifferenceRoot", "big" -> GridBox[{{
        RowBox[{
          RowBox[{
            RowBox[{"98", " ", "\[FormalN]"}], "+", 
            RowBox[{
              RowBox[{"(", 
                RowBox[{"1", "-", "\[FormalN]"}], ")"}], " ", 
              RowBox[{"\[FormalY]", "[", "\[FormalN]", "]"}]}], "+", 
            RowBox[{
              RowBox[{"(", 
                RowBox[{
                  RowBox[{"-", "3"}], "+", "\[FormalN]"}], ")"}], " ", 
              RowBox[{"\[FormalY]", "[", 
                RowBox[{"1", "+", "\[FormalN]"}], "]"}]}]}], "\[Equal]", 
          "0"}]}, {
        RowBox[{
          RowBox[{"\[FormalY]", "[", "1", "]"}], "\[Equal]", "21"}]}, {
        RowBox[{
          RowBox[{"\[FormalY]", "[", "2", "]"}], "\[Equal]", "49"}]}, {
        RowBox[{
          RowBox[{"\[FormalY]", "[", "3", "]"}], "\[Equal]", "147"}]}, {
        RowBox[{
          RowBox[{"\[FormalY]", "[", "4", "]"}], "\[Equal]", "294"}]}}, 
      BaseStyle -> {"HolonomicInnerGrid"}], "small" -> 
    RowBox[{"\[FormalY]", "[", 
       RowBox[{"1", "+", "\[FormalN]"}], "]"}], "branchcuts" -> "None"|>,
   "HolonomicDisplay"],
  DifferenceRoot[
   Function[{\[FormalY], \[FormalN]}, {
    98 \[FormalN] + (
        1 - \[FormalN]) \[FormalY][\[FormalN]] + (-3 + \[FormalN]) \[FormalY][
        1 + \[FormalN]] == 0, \[FormalY][1] == 21, \[FormalY][2] == 
     49, \[FormalY][3] == 147, \[FormalY][4] == 294}]]]], "Output",
 CellChangeTimes->{3.8772890215205774`*^9},
 CellLabel->"Out[50]=",ExpressionUUID->"c8302f3a-9426-49fc-a17d-faf383cad76d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"First", "[", 
  RowBox[{"First", "[", 
   RowBox[{"InputForm", "[", 
    InterpretationBox[
     TemplateBox[<|"head" -> "DifferenceRoot", "big" -> GridBox[{{
           RowBox[{
             RowBox[{
               RowBox[{"98", " ", "\[FormalN]"}], "+", 
               RowBox[{
                 RowBox[{"(", 
                   RowBox[{"1", "-", "\[FormalN]"}], ")"}], " ", 
                 RowBox[{"\[FormalY]", "[", "\[FormalN]", "]"}]}], "+", 
               RowBox[{
                 RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "3"}], "+", "\[FormalN]"}], ")"}], " ", 
                 RowBox[{"\[FormalY]", "[", 
                   RowBox[{"1", "+", "\[FormalN]"}], "]"}]}]}], "\[Equal]", 
             "0"}]}, {
           RowBox[{
             RowBox[{"\[FormalY]", "[", "1", "]"}], "\[Equal]", "21"}]}, {
           RowBox[{
             RowBox[{"\[FormalY]", "[", "2", "]"}], "\[Equal]", "49"}]}, {
           RowBox[{
             RowBox[{"\[FormalY]", "[", "3", "]"}], "\[Equal]", "147"}]}, {
           RowBox[{
             RowBox[{"\[FormalY]", "[", "4", "]"}], "\[Equal]", "294"}]}}, 
         BaseStyle -> {"HolonomicInnerGrid"}], "small" -> 
       RowBox[{"\[FormalY]", "[", 
          RowBox[{"1", "+", "\[FormalN]"}], "]"}], "branchcuts" -> "None"|>,
      "HolonomicDisplay"],
     DifferenceRoot[
      Function[{\[FormalY], \[FormalN]}, {
       98 \[FormalN] + (
           1 - \[FormalN]) \[FormalY][\[FormalN]] + (-3 + \[FormalN]) \
\[FormalY][1 + \[FormalN]] == 0, \[FormalY][1] == 21, \[FormalY][2] == 
        49, \[FormalY][3] == 147, \[FormalY][4] == 294}]]], "]"}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.877289025004978*^9, 3.8772890259378853`*^9}},
 CellLabel->"In[51]:=",ExpressionUUID->"32f70458-727e-4a75-b18c-75a6c6ed812f"],

Cell[BoxData[
 RowBox[{"Function", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\[FormalY]", ",", "\[FormalN]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"98", " ", "\[FormalN]"}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", "\[FormalN]"}], ")"}], " ", 
        RowBox[{"\[FormalY]", "[", "\[FormalN]", "]"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "3"}], "+", "\[FormalN]"}], ")"}], " ", 
        RowBox[{"\[FormalY]", "[", 
         RowBox[{"1", "+", "\[FormalN]"}], "]"}]}]}], "\[Equal]", "0"}], ",", 
     RowBox[{
      RowBox[{"\[FormalY]", "[", "1", "]"}], "\[Equal]", "21"}], ",", 
     RowBox[{
      RowBox[{"\[FormalY]", "[", "2", "]"}], "\[Equal]", "49"}], ",", 
     RowBox[{
      RowBox[{"\[FormalY]", "[", "3", "]"}], "\[Equal]", "147"}], ",", 
     RowBox[{
      RowBox[{"\[FormalY]", "[", "4", "]"}], "\[Equal]", "294"}]}], "}"}]}], 
  "]"}]], "Output",
 CellChangeTimes->{3.877289026187874*^9},
 CellLabel->"Out[51]=",ExpressionUUID->"ae3f1645-fb4d-4b96-936f-195fcf892611"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Last", "[", 
  RowBox[{"First", "[", 
   RowBox[{"First", "[", 
    RowBox[{"InputForm", "[", 
     InterpretationBox[
      TemplateBox[<|"head" -> "DifferenceRoot", "big" -> GridBox[{{
            RowBox[{
              RowBox[{
                RowBox[{"98", " ", "\[FormalN]"}], "+", 
                RowBox[{
                  RowBox[{"(", 
                    RowBox[{"1", "-", "\[FormalN]"}], ")"}], " ", 
                  RowBox[{"\[FormalY]", "[", "\[FormalN]", "]"}]}], "+", 
                RowBox[{
                  RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "3"}], "+", "\[FormalN]"}], ")"}], " ", 
                  RowBox[{"\[FormalY]", "[", 
                    RowBox[{"1", "+", "\[FormalN]"}], "]"}]}]}], "\[Equal]", 
              "0"}]}, {
            RowBox[{
              RowBox[{"\[FormalY]", "[", "1", "]"}], "\[Equal]", "21"}]}, {
            RowBox[{
              RowBox[{"\[FormalY]", "[", "2", "]"}], "\[Equal]", "49"}]}, {
            RowBox[{
              RowBox[{"\[FormalY]", "[", "3", "]"}], "\[Equal]", "147"}]}, {
            RowBox[{
              RowBox[{"\[FormalY]", "[", "4", "]"}], "\[Equal]", "294"}]}}, 
          BaseStyle -> {"HolonomicInnerGrid"}], "small" -> 
        RowBox[{"\[FormalY]", "[", 
           RowBox[{"1", "+", "\[FormalN]"}], "]"}], "branchcuts" -> "None"|>,
       "HolonomicDisplay"],
      DifferenceRoot[
       Function[{\[FormalY], \[FormalN]}, {
        98 \[FormalN] + (
            1 - \[FormalN]) \[FormalY][\[FormalN]] + (-3 + \[FormalN]) \
\[FormalY][1 + \[FormalN]] == 0, \[FormalY][1] == 21, \[FormalY][2] == 
         49, \[FormalY][3] == 147, \[FormalY][4] == 294}]]], "]"}], "]"}], 
   "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8772890381664977`*^9, 3.8772890412205954`*^9}},
 CellLabel->"In[52]:=",ExpressionUUID->"3acaef4d-5ffb-4e6f-b4f2-9363fc3c5f8f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"98", " ", "\[FormalN]"}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", "\[FormalN]"}], ")"}], " ", 
      RowBox[{"\[FormalY]", "[", "\[FormalN]", "]"}]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "3"}], "+", "\[FormalN]"}], ")"}], " ", 
      RowBox[{"\[FormalY]", "[", 
       RowBox[{"1", "+", "\[FormalN]"}], "]"}]}]}], "\[Equal]", "0"}], ",", 
   RowBox[{
    RowBox[{"\[FormalY]", "[", "1", "]"}], "\[Equal]", "21"}], ",", 
   RowBox[{
    RowBox[{"\[FormalY]", "[", "2", "]"}], "\[Equal]", "49"}], ",", 
   RowBox[{
    RowBox[{"\[FormalY]", "[", "3", "]"}], "\[Equal]", "147"}], ",", 
   RowBox[{
    RowBox[{"\[FormalY]", "[", "4", "]"}], "\[Equal]", "294"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.8772890414705915`*^9},
 CellLabel->"Out[52]=",ExpressionUUID->"eeeb552d-cccf-48ab-937d-9141a2cc8b73"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Rest", "[", 
  RowBox[{"Last", "[", 
   RowBox[{"First", "[", 
    RowBox[{"First", "[", 
     RowBox[{"InputForm", "[", 
      InterpretationBox[
       TemplateBox[<|"head" -> "DifferenceRoot", "big" -> GridBox[{{
             RowBox[{
               RowBox[{
                 RowBox[{"98", " ", "\[FormalN]"}], "+", 
                 RowBox[{
                   RowBox[{"(", 
                    RowBox[{"1", "-", "\[FormalN]"}], ")"}], " ", 
                   RowBox[{"\[FormalY]", "[", "\[FormalN]", "]"}]}], "+", 
                 RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "3"}], "+", "\[FormalN]"}], ")"}], " ", 
                   RowBox[{"\[FormalY]", "[", 
                    RowBox[{"1", "+", "\[FormalN]"}], "]"}]}]}], "\[Equal]", 
               "0"}]}, {
             RowBox[{
               RowBox[{"\[FormalY]", "[", "1", "]"}], "\[Equal]", "21"}]}, {
             RowBox[{
               RowBox[{"\[FormalY]", "[", "2", "]"}], "\[Equal]", "49"}]}, {
             RowBox[{
               RowBox[{"\[FormalY]", "[", "3", "]"}], "\[Equal]", "147"}]}, {
             RowBox[{
               RowBox[{"\[FormalY]", "[", "4", "]"}], "\[Equal]", "294"}]}}, 
           BaseStyle -> {"HolonomicInnerGrid"}], "small" -> 
         RowBox[{"\[FormalY]", "[", 
            RowBox[{"1", "+", "\[FormalN]"}], "]"}], "branchcuts" -> "None"|>,
        "HolonomicDisplay"],
       DifferenceRoot[
        Function[{\[FormalY], \[FormalN]}, {
         98 \[FormalN] + (
             1 - \[FormalN]) \[FormalY][\[FormalN]] + (-3 + \[FormalN]) \
\[FormalY][1 + \[FormalN]] == 0, \[FormalY][1] == 21, \[FormalY][2] == 
          49, \[FormalY][3] == 147, \[FormalY][4] == 294}]]], "]"}], "]"}], 
    "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8772890447518325`*^9, 3.8772890455507994`*^9}},
 CellLabel->"In[53]:=",ExpressionUUID->"e492ccf9-3661-49ac-92d6-c7f6ddd9bb40"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"\[FormalY]", "[", "1", "]"}], "\[Equal]", "21"}], ",", 
   RowBox[{
    RowBox[{"\[FormalY]", "[", "2", "]"}], "\[Equal]", "49"}], ",", 
   RowBox[{
    RowBox[{"\[FormalY]", "[", "3", "]"}], "\[Equal]", "147"}], ",", 
   RowBox[{
    RowBox[{"\[FormalY]", "[", "4", "]"}], "\[Equal]", "294"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.8772890458164415`*^9},
 CellLabel->"Out[53]=",ExpressionUUID->"8e8211aa-2068-451e-a818-aea76dd84bb8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Last", "/@", 
  RowBox[{"Rest", "[", 
   RowBox[{"Last", "[", 
    RowBox[{"First", "[", 
     RowBox[{"First", "[", 
      RowBox[{"InputForm", "[", 
       InterpretationBox[
        TemplateBox[<|"head" -> "DifferenceRoot", "big" -> GridBox[{{
              RowBox[{
                RowBox[{
                  RowBox[{"98", " ", "\[FormalN]"}], "+", 
                  RowBox[{
                    RowBox[{"(", 
                    RowBox[{"1", "-", "\[FormalN]"}], ")"}], " ", 
                    RowBox[{"\[FormalY]", "[", "\[FormalN]", "]"}]}], "+", 
                  RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "3"}], "+", "\[FormalN]"}], ")"}], " ", 
                    RowBox[{"\[FormalY]", "[", 
                    RowBox[{"1", "+", "\[FormalN]"}], "]"}]}]}], "\[Equal]", 
                "0"}]}, {
              RowBox[{
                RowBox[{"\[FormalY]", "[", "1", "]"}], "\[Equal]", "21"}]}, {
              RowBox[{
                RowBox[{"\[FormalY]", "[", "2", "]"}], "\[Equal]", "49"}]}, {
              RowBox[{
                RowBox[{"\[FormalY]", "[", "3", "]"}], "\[Equal]", "147"}]}, {
              RowBox[{
                RowBox[{"\[FormalY]", "[", "4", "]"}], "\[Equal]", "294"}]}}, 
            BaseStyle -> {"HolonomicInnerGrid"}], "small" -> 
          RowBox[{"\[FormalY]", "[", 
             RowBox[{"1", "+", "\[FormalN]"}], "]"}], "branchcuts" -> "None"|>,
         "HolonomicDisplay"],
        DifferenceRoot[
         Function[{\[FormalY], \[FormalN]}, {
          98 \[FormalN] + (
              1 - \[FormalN]) \[FormalY][\[FormalN]] + (-3 + \[FormalN]) \
\[FormalY][1 + \[FormalN]] == 0, \[FormalY][1] == 21, \[FormalY][2] == 
           49, \[FormalY][3] == 147, \[FormalY][4] == 294}]]], "]"}], "]"}], 
     "]"}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8772890731775513`*^9, 3.8772890760924006`*^9}},
 CellLabel->"In[54]:=",ExpressionUUID->"ae3655b1-ee90-470a-a27f-feffd9d2f5a2"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"21", ",", "49", ",", "147", ",", "294"}], "}"}]], "Output",
 CellChangeTimes->{3.8772890763425117`*^9},
 CellLabel->"Out[54]=",ExpressionUUID->"248c558c-9308-4d4c-af67-52311751dc1d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"Last", "/@", 
    RowBox[{"Rest", "[", 
     RowBox[{"Last", "[", 
      RowBox[{"First", "[", 
       RowBox[{"First", "[", 
        RowBox[{"InputForm", "[", 
         RowBox[{"FindSequenceFunction", "[", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"EdgeCount", "[", 
             RowBox[{"CompleteGraph", "[", 
              RowBox[{"ConstantArray", "[", 
               RowBox[{"e", ",", "i"}], "]"}], "]"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "10"}], "}"}]}], "]"}], "]"}], "]"}], "]"}], 
       "]"}], "]"}], "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"e", ",", "2", ",", "7"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8772890731775513`*^9, 3.8772891107343464`*^9}},
 CellLabel->"In[55]:=",ExpressionUUID->"df843fcb-e0d2-45e5-84ba-23fd071fc2b6"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "4", ",", "12", ",", "24"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "9", ",", "27", ",", "54"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "16", ",", "48", ",", "96"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "25", ",", "75", ",", "150"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"15", ",", "36", ",", "108", ",", "216"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"21", ",", "49", ",", "147", ",", "294"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.877289112343671*^9},
 CellLabel->"Out[55]=",ExpressionUUID->"eca5992c-ec7e-4dd4-a3ff-0870a51a21f7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Transpose", "[", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"Last", "/@", 
     RowBox[{"Rest", "[", 
      RowBox[{"Last", "[", 
       RowBox[{"First", "[", 
        RowBox[{"First", "[", 
         RowBox[{"InputForm", "[", 
          RowBox[{"FindSequenceFunction", "[", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"EdgeCount", "[", 
              RowBox[{"CompleteGraph", "[", 
               RowBox[{"ConstantArray", "[", 
                RowBox[{"e", ",", "i"}], "]"}], "]"}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "10"}], "}"}]}], "]"}], "]"}], "]"}], "]"}], 
        "]"}], "]"}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"e", ",", "2", ",", "7"}], "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.877289125460405*^9, 3.87728912777845*^9}},
 CellLabel->"In[57]:=",ExpressionUUID->"6cedfb15-cda9-43cf-a239-18868df4fdba"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "3", ",", "6", ",", "10", ",", "15", ",", "21"}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "9", ",", "16", ",", "25", ",", "36", ",", "49"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"12", ",", "27", ",", "48", ",", "75", ",", "108", ",", "147"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"24", ",", "54", ",", "96", ",", "150", ",", "216", ",", "294"}], 
    "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.8772891286377306`*^9},
 CellLabel->"Out[57]=",ExpressionUUID->"35097751-9197-45e2-957b-98607a3c59ce"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindSequenceFunction", "/@", 
  RowBox[{"Transpose", "[", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Last", "/@", 
      RowBox[{"Rest", "[", 
       RowBox[{"Last", "[", 
        RowBox[{"First", "[", 
         RowBox[{"First", "[", 
          RowBox[{"InputForm", "[", 
           RowBox[{"FindSequenceFunction", "[", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"EdgeCount", "[", 
               RowBox[{"CompleteGraph", "[", 
                RowBox[{"ConstantArray", "[", 
                 RowBox[{"e", ",", "i"}], "]"}], "]"}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", "10"}], "}"}]}], "]"}], "]"}], "]"}], "]"}], 
         "]"}], "]"}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"e", ",", "2", ",", "7"}], "}"}]}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8772891314502697`*^9, 3.877289141499793*^9}, {
  3.8772892668277793`*^9, 3.877289293964425*^9}},
 CellLabel->"In[68]:=",ExpressionUUID->"99b98f0d-d9a7-43ba-bc74-159994098ead"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{
     FractionBox["1", "2"], " ", "#1", " ", 
     RowBox[{"(", 
      RowBox[{"1", "+", "#1"}], ")"}]}], "&"}], ",", 
   RowBox[{
    RowBox[{"1", "+", 
     RowBox[{"2", " ", "#1"}], "+", 
     SuperscriptBox["#1", "2"]}], "&"}], ",", 
   RowBox[{
    RowBox[{"3", " ", 
     RowBox[{"(", 
      RowBox[{"1", "+", 
       RowBox[{"2", " ", "#1"}], "+", 
       SuperscriptBox["#1", "2"]}], ")"}]}], "&"}], ",", 
   RowBox[{
    RowBox[{"6", " ", 
     RowBox[{"(", 
      RowBox[{"1", "+", 
       RowBox[{"2", " ", "#1"}], "+", 
       SuperscriptBox["#1", "2"]}], ")"}]}], "&"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.8772891345592604`*^9, 3.8772891516277914`*^9}, 
   3.8772893167877293`*^9},
 CellLabel->"Out[68]=",ExpressionUUID->"ffe37911-1ca9-404b-8b8a-d3876e7d6311"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Last", "[", 
  RowBox[{"First", "[", 
   RowBox[{"First", "[", 
    RowBox[{"InputForm", "[", 
     InterpretationBox[
      TemplateBox[<|"head" -> "DifferenceRoot", "big" -> GridBox[{{
            RowBox[{
              RowBox[{
                RowBox[{"98", " ", "\[FormalN]"}], "+", 
                RowBox[{
                  RowBox[{"(", 
                    RowBox[{"1", "-", "\[FormalN]"}], ")"}], " ", 
                  RowBox[{"\[FormalY]", "[", "\[FormalN]", "]"}]}], "+", 
                RowBox[{
                  RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "3"}], "+", "\[FormalN]"}], ")"}], " ", 
                  RowBox[{"\[FormalY]", "[", 
                    RowBox[{"1", "+", "\[FormalN]"}], "]"}]}]}], "\[Equal]", 
              "0"}]}, {
            RowBox[{
              RowBox[{"\[FormalY]", "[", "1", "]"}], "\[Equal]", "21"}]}, {
            RowBox[{
              RowBox[{"\[FormalY]", "[", "2", "]"}], "\[Equal]", "49"}]}, {
            RowBox[{
              RowBox[{"\[FormalY]", "[", "3", "]"}], "\[Equal]", "147"}]}, {
            RowBox[{
              RowBox[{"\[FormalY]", "[", "4", "]"}], "\[Equal]", "294"}]}}, 
          BaseStyle -> {"HolonomicInnerGrid"}], "small" -> 
        RowBox[{"\[FormalY]", "[", 
           RowBox[{"1", "+", "\[FormalN]"}], "]"}], "branchcuts" -> "None"|>,
       "HolonomicDisplay"],
      DifferenceRoot[
       Function[{\[FormalY], \[FormalN]}, {
        98 \[FormalN] + (
            1 - \[FormalN]) \[FormalY][\[FormalN]] + (-3 + \[FormalN]) \
\[FormalY][1 + \[FormalN]] == 0, \[FormalY][1] == 21, \[FormalY][2] == 
         49, \[FormalY][3] == 147, \[FormalY][4] == 294}]]], "]"}], "]"}], 
   "]"}], "]"}]], "Input",
 CellLabel->"In[61]:=",ExpressionUUID->"8d39bc1a-1598-43ea-a82d-0292cc31d3b1"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"98", " ", "\[FormalN]"}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", "\[FormalN]"}], ")"}], " ", 
      RowBox[{"\[FormalY]", "[", "\[FormalN]", "]"}]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "3"}], "+", "\[FormalN]"}], ")"}], " ", 
      RowBox[{"\[FormalY]", "[", 
       RowBox[{"1", "+", "\[FormalN]"}], "]"}]}]}], "\[Equal]", "0"}], ",", 
   RowBox[{
    RowBox[{"\[FormalY]", "[", "1", "]"}], "\[Equal]", "21"}], ",", 
   RowBox[{
    RowBox[{"\[FormalY]", "[", "2", "]"}], "\[Equal]", "49"}], ",", 
   RowBox[{
    RowBox[{"\[FormalY]", "[", "3", "]"}], "\[Equal]", "147"}], ",", 
   RowBox[{
    RowBox[{"\[FormalY]", "[", "4", "]"}], "\[Equal]", "294"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.877289235002612*^9},
 CellLabel->"Out[61]=",ExpressionUUID->"2a887b7b-48ea-4709-a066-6e870cf92dd5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"First", "[", 
  RowBox[{"Last", "[", 
   RowBox[{"First", "[", 
    RowBox[{"First", "[", 
     RowBox[{"InputForm", "[", 
      InterpretationBox[
       TemplateBox[<|"head" -> "DifferenceRoot", "big" -> GridBox[{{
             RowBox[{
               RowBox[{
                 RowBox[{"98", " ", "\[FormalN]"}], "+", 
                 RowBox[{
                   RowBox[{"(", 
                    RowBox[{"1", "-", "\[FormalN]"}], ")"}], " ", 
                   RowBox[{"\[FormalY]", "[", "\[FormalN]", "]"}]}], "+", 
                 RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "3"}], "+", "\[FormalN]"}], ")"}], " ", 
                   RowBox[{"\[FormalY]", "[", 
                    RowBox[{"1", "+", "\[FormalN]"}], "]"}]}]}], "\[Equal]", 
               "0"}]}, {
             RowBox[{
               RowBox[{"\[FormalY]", "[", "1", "]"}], "\[Equal]", "21"}]}, {
             RowBox[{
               RowBox[{"\[FormalY]", "[", "2", "]"}], "\[Equal]", "49"}]}, {
             RowBox[{
               RowBox[{"\[FormalY]", "[", "3", "]"}], "\[Equal]", "147"}]}, {
             RowBox[{
               RowBox[{"\[FormalY]", "[", "4", "]"}], "\[Equal]", "294"}]}}, 
           BaseStyle -> {"HolonomicInnerGrid"}], "small" -> 
         RowBox[{"\[FormalY]", "[", 
            RowBox[{"1", "+", "\[FormalN]"}], "]"}], "branchcuts" -> "None"|>,
        "HolonomicDisplay"],
       DifferenceRoot[
        Function[{\[FormalY], \[FormalN]}, {
         98 \[FormalN] + (
             1 - \[FormalN]) \[FormalY][\[FormalN]] + (-3 + \[FormalN]) \
\[FormalY][1 + \[FormalN]] == 0, \[FormalY][1] == 21, \[FormalY][2] == 
          49, \[FormalY][3] == 147, \[FormalY][4] == 294}]]], "]"}], "]"}], 
    "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.877289237565128*^9, 3.877289238893273*^9}},
 CellLabel->"In[62]:=",ExpressionUUID->"90c8a528-96f9-4d3e-b442-a8698a961341"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"98", " ", "\[FormalN]"}], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "-", "\[FormalN]"}], ")"}], " ", 
    RowBox[{"\[FormalY]", "[", "\[FormalN]", "]"}]}], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "3"}], "+", "\[FormalN]"}], ")"}], " ", 
    RowBox[{"\[FormalY]", "[", 
     RowBox[{"1", "+", "\[FormalN]"}], "]"}]}]}], "\[Equal]", "0"}]], "Output",
 CellChangeTimes->{3.8772892392057495`*^9},
 CellLabel->"Out[62]=",ExpressionUUID->"4c87465e-5c47-4590-86f9-bbf9603c671c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"First", "[", 
  RowBox[{"First", "[", 
   RowBox[{"Last", "[", 
    RowBox[{"First", "[", 
     RowBox[{"First", "[", 
      RowBox[{"InputForm", "[", 
       InterpretationBox[
        TemplateBox[<|"head" -> "DifferenceRoot", "big" -> GridBox[{{
              RowBox[{
                RowBox[{
                  RowBox[{"98", " ", "\[FormalN]"}], "+", 
                  RowBox[{
                    RowBox[{"(", 
                    RowBox[{"1", "-", "\[FormalN]"}], ")"}], " ", 
                    RowBox[{"\[FormalY]", "[", "\[FormalN]", "]"}]}], "+", 
                  RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "3"}], "+", "\[FormalN]"}], ")"}], " ", 
                    RowBox[{"\[FormalY]", "[", 
                    RowBox[{"1", "+", "\[FormalN]"}], "]"}]}]}], "\[Equal]", 
                "0"}]}, {
              RowBox[{
                RowBox[{"\[FormalY]", "[", "1", "]"}], "\[Equal]", "21"}]}, {
              RowBox[{
                RowBox[{"\[FormalY]", "[", "2", "]"}], "\[Equal]", "49"}]}, {
              RowBox[{
                RowBox[{"\[FormalY]", "[", "3", "]"}], "\[Equal]", "147"}]}, {
              RowBox[{
                RowBox[{"\[FormalY]", "[", "4", "]"}], "\[Equal]", "294"}]}}, 
            BaseStyle -> {"HolonomicInnerGrid"}], "small" -> 
          RowBox[{"\[FormalY]", "[", 
             RowBox[{"1", "+", "\[FormalN]"}], "]"}], "branchcuts" -> "None"|>,
         "HolonomicDisplay"],
        DifferenceRoot[
         Function[{\[FormalY], \[FormalN]}, {
          98 \[FormalN] + (
              1 - \[FormalN]) \[FormalY][\[FormalN]] + (-3 + \[FormalN]) \
\[FormalY][1 + \[FormalN]] == 0, \[FormalY][1] == 21, \[FormalY][2] == 
           49, \[FormalY][3] == 147, \[FormalY][4] == 294}]]], "]"}], "]"}], 
     "]"}], "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.877289242143276*^9, 3.877289243169925*^9}},
 CellLabel->"In[63]:=",ExpressionUUID->"e2d57575-295e-4d70-95a9-f19c6320910d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"98", " ", "\[FormalN]"}], "+", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"1", "-", "\[FormalN]"}], ")"}], " ", 
   RowBox[{"\[FormalY]", "[", "\[FormalN]", "]"}]}], "+", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "3"}], "+", "\[FormalN]"}], ")"}], " ", 
   RowBox[{"\[FormalY]", "[", 
    RowBox[{"1", "+", "\[FormalN]"}], "]"}]}]}]], "Output",
 CellChangeTimes->{3.8772892434199004`*^9},
 CellLabel->"Out[63]=",ExpressionUUID->"ed273602-9d70-451b-9ca2-d00d605efe89"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"First", "[", 
  RowBox[{"First", "[", 
   RowBox[{"First", "[", 
    RowBox[{"Last", "[", 
     RowBox[{"First", "[", 
      RowBox[{"First", "[", 
       RowBox[{"InputForm", "[", 
        InterpretationBox[
         TemplateBox[<|"head" -> "DifferenceRoot", "big" -> GridBox[{{
               RowBox[{
                 RowBox[{
                   RowBox[{"98", " ", "\[FormalN]"}], "+", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{"1", "-", "\[FormalN]"}], ")"}], " ", 
                    RowBox[{"\[FormalY]", "[", "\[FormalN]", "]"}]}], "+", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "3"}], "+", "\[FormalN]"}], ")"}], " ", 
                    RowBox[{"\[FormalY]", "[", 
                    RowBox[{"1", "+", "\[FormalN]"}], "]"}]}]}], "\[Equal]", 
                 "0"}]}, {
               RowBox[{
                 RowBox[{"\[FormalY]", "[", "1", "]"}], "\[Equal]", "21"}]}, {
               RowBox[{
                 RowBox[{"\[FormalY]", "[", "2", "]"}], "\[Equal]", "49"}]}, {
               RowBox[{
                 RowBox[{"\[FormalY]", "[", "3", "]"}], "\[Equal]", "147"}]}, {
               RowBox[{
                 RowBox[{"\[FormalY]", "[", "4", "]"}], "\[Equal]", "294"}]}},
              BaseStyle -> {"HolonomicInnerGrid"}], "small" -> 
           RowBox[{"\[FormalY]", "[", 
              RowBox[{"1", "+", "\[FormalN]"}], "]"}], "branchcuts" -> "None"|>,
          "HolonomicDisplay"],
         DifferenceRoot[
          
          Function[{\[FormalY], \[FormalN]}, {
           98 \[FormalN] + (
               1 - \[FormalN]) \[FormalY][\[FormalN]] + (-3 + \[FormalN]) \
\[FormalY][1 + \[FormalN]] == 0, \[FormalY][1] == 21, \[FormalY][2] == 
            49, \[FormalY][3] == 147, \[FormalY][4] == 294}]]], "]"}], "]"}], 
      "]"}], "]"}], "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.877289247591793*^9, 3.877289248463244*^9}},
 CellLabel->"In[64]:=",ExpressionUUID->"6af6fba6-b764-41ce-acc8-b072c7a241d8"],

Cell[BoxData[
 RowBox[{"98", " ", "\[FormalN]"}]], "Output",
 CellChangeTimes->{3.8772892487132263`*^9},
 CellLabel->"Out[64]=",ExpressionUUID->"a5521c15-6707-4002-a7df-c15016e0815f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"First", "[", 
  RowBox[{"First", "[", 
   RowBox[{"First", "[", 
    RowBox[{"First", "[", 
     RowBox[{"Last", "[", 
      RowBox[{"First", "[", 
       RowBox[{"First", "[", 
        RowBox[{"InputForm", "[", 
         InterpretationBox[
          TemplateBox[<|"head" -> "DifferenceRoot", "big" -> GridBox[{{
                RowBox[{
                  RowBox[{
                    RowBox[{"98", " ", "\[FormalN]"}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"1", "-", "\[FormalN]"}], ")"}], " ", 
                    RowBox[{"\[FormalY]", "[", "\[FormalN]", "]"}]}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "3"}], "+", "\[FormalN]"}], ")"}], " ", 
                    RowBox[{"\[FormalY]", "[", 
                    RowBox[{"1", "+", "\[FormalN]"}], "]"}]}]}], "\[Equal]", 
                  "0"}]}, {
                RowBox[{
                  RowBox[{"\[FormalY]", "[", "1", "]"}], "\[Equal]", "21"}]}, {
                RowBox[{
                  RowBox[{"\[FormalY]", "[", "2", "]"}], "\[Equal]", "49"}]}, {
                RowBox[{
                  RowBox[{"\[FormalY]", "[", "3", "]"}], "\[Equal]", 
                  "147"}]}, {
                RowBox[{
                  RowBox[{"\[FormalY]", "[", "4", "]"}], "\[Equal]", 
                  "294"}]}}, BaseStyle -> {"HolonomicInnerGrid"}], "small" -> 
            RowBox[{"\[FormalY]", "[", 
               RowBox[{"1", "+", "\[FormalN]"}], "]"}], "branchcuts" -> 
            "None"|>,
           "HolonomicDisplay"],
          DifferenceRoot[
           
           Function[{\[FormalY], \[FormalN]}, {
            98 \[FormalN] + (
                1 - \[FormalN]) \[FormalY][\[FormalN]] + (-3 + \[FormalN]) \
\[FormalY][1 + \[FormalN]] == 0, \[FormalY][1] == 21, \[FormalY][2] == 
             49, \[FormalY][3] == 147, \[FormalY][4] == 294}]]], "]"}], "]"}],
        "]"}], "]"}], "]"}], "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.877289252791397*^9, 3.8772892536829967`*^9}},
 CellLabel->"In[65]:=",ExpressionUUID->"2f794451-773f-47c5-a825-ef70f5fe3ab2"],

Cell[BoxData["98"], "Output",
 CellChangeTimes->{3.8772892539644303`*^9},
 CellLabel->"Out[65]=",ExpressionUUID->"66d8db49-659e-40ec-8c6e-632b3a425210"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"First", "[", 
    RowBox[{"First", "[", 
     RowBox[{"First", "[", 
      RowBox[{"First", "[", 
       RowBox[{"Last", "[", 
        RowBox[{"First", "[", 
         RowBox[{"First", "[", 
          RowBox[{"InputForm", "[", 
           RowBox[{"FindSequenceFunction", "[", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"EdgeCount", "[", 
               RowBox[{"CompleteGraph", "[", 
                RowBox[{"ConstantArray", "[", 
                 RowBox[{"e", ",", "i"}], "]"}], "]"}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", "10"}], "}"}]}], "]"}], "]"}], "]"}], "]"}], 
         "]"}], "]"}], "]"}], "]"}], "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"e", ",", "2", ",", "7"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8772892575022774`*^9, 3.8772892587834797`*^9}, {
  3.8772893334026146`*^9, 3.8772893455112543`*^9}},
 CellLabel->"In[69]:=",ExpressionUUID->"68fa68d6-80e6-487c-a7c4-d36172b1e715"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"8", ",", "18", ",", "32", ",", "50", ",", "72", ",", "98"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.8772893464017935`*^9},
 CellLabel->"Out[69]=",ExpressionUUID->"4d781340-761e-42a7-b503-e492b6b15a2c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindSequenceFunction", "[", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"First", "[", 
     RowBox[{"First", "[", 
      RowBox[{"First", "[", 
       RowBox[{"First", "[", 
        RowBox[{"Last", "[", 
         RowBox[{"First", "[", 
          RowBox[{"First", "[", 
           RowBox[{"InputForm", "[", 
            RowBox[{"FindSequenceFunction", "[", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"EdgeCount", "[", 
                RowBox[{"CompleteGraph", "[", 
                 RowBox[{"ConstantArray", "[", 
                  RowBox[{"e", ",", "i"}], "]"}], "]"}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", "10"}], "}"}]}], "]"}], "]"}], "]"}], "]"}],
           "]"}], "]"}], "]"}], "]"}], "]"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"e", ",", "2", ",", "7"}], "}"}]}], "]"}], "]"}]], "Input",
 CellLabel->"In[73]:=",ExpressionUUID->"fdbeb15b-a175-46c9-9883-8f8242976b8a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"2", " ", 
   RowBox[{"(", 
    RowBox[{"1", "+", 
     RowBox[{"2", " ", "#1"}], "+", 
     SuperscriptBox["#1", "2"]}], ")"}]}], "&"}]], "Output",
 CellChangeTimes->{3.8772895559695606`*^9},
 CellLabel->"Out[73]=",ExpressionUUID->"6306fb82-d768-42cd-83eb-c14b1de36357"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"FindSequenceFunction", "[", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"First", "[", 
      RowBox[{"First", "[", 
       RowBox[{"First", "[", 
        RowBox[{"First", "[", 
         RowBox[{"Last", "[", 
          RowBox[{"First", "[", 
           RowBox[{"First", "[", 
            RowBox[{"InputForm", "[", 
             RowBox[{"FindSequenceFunction", "[", 
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{"EdgeCount", "[", 
                 RowBox[{"CompleteGraph", "[", 
                  RowBox[{"ConstantArray", "[", 
                   RowBox[{"e", ",", "i"}], "]"}], "]"}], "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{"i", ",", "10"}], "}"}]}], "]"}], "]"}], "]"}], 
            "]"}], "]"}], "]"}], "]"}], "]"}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"e", ",", "2", ",", "7"}], "}"}]}], "]"}], "]"}], "[", "x", 
  "]"}]], "Input",
 CellChangeTimes->{{3.877289369104591*^9, 3.8772893749169693`*^9}, {
   3.8772897742602825`*^9, 3.8772897744380665`*^9}, 3.877289823200054*^9},
 CellLabel->"In[83]:=",ExpressionUUID->"54034afd-3035-487b-97ad-04e2b001a61c"],

Cell[BoxData[
 RowBox[{"2", " ", 
  RowBox[{"(", 
   RowBox[{"1", "+", 
    RowBox[{"2", " ", "x"}], "+", 
    SuperscriptBox["x", "2"]}], ")"}]}]], "Output",
 CellChangeTimes->{{3.877289371370248*^9, 3.8772893758387594`*^9}, 
   3.8772897757417655`*^9, 3.877289824137539*^9},
 CellLabel->"Out[83]=",ExpressionUUID->"b19306fc-7a38-4a91-a6c5-ca0060b12515"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{"2", " ", 
   RowBox[{"(", 
    RowBox[{"1", "+", 
     RowBox[{"2", " ", "x"}], "+", 
     SuperscriptBox["x", "2"]}], ")"}]}], "]"}]], "Input",
 NumberMarks->False,
 CellLabel->"In[72]:=",ExpressionUUID->"1659805b-c40d-4328-b4e7-21e7c959b2cb"],

Cell[BoxData[
 RowBox[{"2", " ", 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{"1", "+", "x"}], ")"}], "2"]}]], "Output",
 CellChangeTimes->{3.8772893865171604`*^9},
 CellLabel->"Out[72]=",ExpressionUUID->"388702a0-c21e-4d93-a3c1-1bb34bc736bc"]
}, Open  ]],

Cell[TextData[{
 "I now have an expression to compute the holonomic difference root. I have ",
 Cell[BoxData[
  FormBox[
   RowBox[{"2", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", "x"}], ")"}], "2"]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "47a6f462-029c-4561-a28f-368dec3b6ddb"],
 " for the term that in this case is 98\[FormalN]. I have the ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{
      FractionBox["1", "2"], " ", "#1", " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", "#1"}], ")"}]}], "&"}], ",", 
    RowBox[{
     RowBox[{"1", "+", 
      RowBox[{"2", " ", "#1"}], "+", 
      SuperscriptBox["#1", "2"]}], "&"}], ",", 
    RowBox[{
     RowBox[{"3", " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{"2", " ", "#1"}], "+", 
        SuperscriptBox["#1", "2"]}], ")"}]}], "&"}], ",", 
    RowBox[{
     RowBox[{"6", " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{"2", " ", "#1"}], "+", 
        SuperscriptBox["#1", "2"]}], ")"}]}], "&"}]}], "}"}]], "Output",
  CellChangeTimes->{{3.8772891345592604`*^9, 3.8772891516277914`*^9}, 
    3.8772893167877293`*^9},ExpressionUUID->
  "7fcd4577-0ec3-42cb-9150-f0c862712533"],
 " for y[1], y[2], y[3], and y[4]."
}], "Text",
 CellChangeTimes->{{3.87728939409392*^9, 3.877289433588519*^9}, {
  3.877289463691934*^9, 
  3.8772895122839093`*^9}},ExpressionUUID->"890979e1-f072-4a7f-bdbd-\
58da38819f0c"],

Cell[BoxData[
 RowBox[{"Function", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\[FormalY]", ",", "\[FormalN]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"98", " ", "\[FormalN]"}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", "\[FormalN]"}], ")"}], " ", 
        RowBox[{"\[FormalY]", "[", "\[FormalN]", "]"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "3"}], "+", "\[FormalN]"}], ")"}], " ", 
        RowBox[{"\[FormalY]", "[", 
         RowBox[{"1", "+", "\[FormalN]"}], "]"}]}]}], "\[Equal]", "0"}], ",", 
     RowBox[{
      RowBox[{"\[FormalY]", "[", "1", "]"}], "\[Equal]", "21"}], ",", 
     RowBox[{
      RowBox[{"\[FormalY]", "[", "2", "]"}], "\[Equal]", "49"}], ",", 
     RowBox[{
      RowBox[{"\[FormalY]", "[", "3", "]"}], "\[Equal]", "147"}], ",", 
     RowBox[{
      RowBox[{"\[FormalY]", "[", "4", "]"}], "\[Equal]", "294"}]}], "}"}]}], 
  "]"}]], "Input",ExpressionUUID->"c412be7f-c730-4f04-8fe1-e09a8ba2328d"],

Cell["\<\
I will test my hypothesis by constructing a difference root. I first thought \
I got this wrong but I realized I started from 2 so I need to do 11-1=10.\
\>", "Text",
 CellChangeTimes->{{3.8772895143776894`*^9, 3.8772895270926447`*^9}, {
  3.8772898023043613`*^9, 
  3.8772898354259205`*^9}},ExpressionUUID->"051024ee-94ea-4803-ad4e-\
d5e2ffe8a705"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"2", " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", 
      RowBox[{"2", " ", "#1"}], "+", 
      SuperscriptBox["#1", "2"]}], ")"}]}], "&"}], "[", "10", "]"}]], "Input",
 CellChangeTimes->{{3.8772895628289547`*^9, 3.8772895642226076`*^9}, {
  3.877289791335599*^9, 3.8772897934293547`*^9}},
 CellLabel->"In[82]:=",ExpressionUUID->"0f425208-6338-4e8c-900a-1865b57a5855"],

Cell[BoxData["242"], "Output",
 CellChangeTimes->{3.8772895646570683`*^9, 3.877289793726181*^9},
 CellLabel->"Out[82]=",ExpressionUUID->"7cbeabae-b1be-4d60-bd72-ccf6b5f8f2a8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"1", "/", "2"}], " ", "#1", " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", "#1"}], ")"}]}], "&"}], "[", "10", "]"}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"1", "+", 
      RowBox[{"2", " ", "#1"}], "+", 
      RowBox[{"#1", "^", "2"}]}], "&"}], "[", "10", "]"}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"3", " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{"2", " ", "#1"}], "+", 
        RowBox[{"#1", "^", "2"}]}], ")"}]}], "&"}], "[", "10", "]"}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"6", " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{"2", " ", "#1"}], "+", 
        RowBox[{"#1", "^", "2"}]}], ")"}]}], "&"}], "[", "10", "]"}]}], 
  "}"}]], "Input",
 CellChangeTimes->{{3.877289615921084*^9, 3.8772896363866005`*^9}, {
  3.8772898392228174`*^9, 3.877289843238332*^9}},
 CellLabel->"In[84]:=",ExpressionUUID->"38e021cb-655e-4370-8d20-6a56e0ce44e6"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"55", ",", "121", ",", "363", ",", "726"}], "}"}]], "Output",
 CellChangeTimes->{{3.877289618155444*^9, 3.877289636777235*^9}, 
   3.8772898444883275`*^9},
 CellLabel->"Out[84]=",ExpressionUUID->"221c43aa-99ef-4f55-abf5-ab9952b0809d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DifferenceRoot", "[", 
  RowBox[{"Function", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\[FormalY]", ",", "\[FormalN]"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"242", "\[FormalN]"}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "-", "\[FormalN]"}], ")"}], 
         RowBox[{"\[FormalY]", "[", "\[FormalN]", "]"}]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "3"}], "+", "\[FormalN]"}], ")"}], 
         RowBox[{"\[FormalY]", "[", 
          RowBox[{"1", "+", "\[FormalN]"}], "]"}]}]}], "==", "0"}], ",", 
      RowBox[{
       RowBox[{"\[FormalY]", "[", "1", "]"}], "==", "55"}], ",", 
      RowBox[{
       RowBox[{"\[FormalY]", "[", "2", "]"}], "==", "121"}], ",", 
      RowBox[{
       RowBox[{"\[FormalY]", "[", "3", "]"}], "==", "363"}], ",", 
      RowBox[{
       RowBox[{"\[FormalY]", "[", "4", "]"}], "==", "726"}]}], "}"}]}], "]"}],
   "]"}]], "Input",
 CellChangeTimes->{{3.8772895280457125`*^9, 3.8772896091086597`*^9}, {
  3.8772896419334774`*^9, 3.8772896941912346`*^9}, {3.8772898502540545`*^9, 
  3.8772898627767887`*^9}},
 CellLabel->"In[85]:=",ExpressionUUID->"f6645bfa-4437-47ab-a392-9298d0f52158"],

Cell[BoxData[
 InterpretationBox[
  TemplateBox[<|"head" -> "DifferenceRoot", "big" -> GridBox[{{
        RowBox[{
          RowBox[{
            RowBox[{"242", " ", "\[FormalN]"}], "+", 
            RowBox[{
              RowBox[{"(", 
                RowBox[{"1", "-", "\[FormalN]"}], ")"}], " ", 
              RowBox[{"\[FormalY]", "[", "\[FormalN]", "]"}]}], "+", 
            RowBox[{
              RowBox[{"(", 
                RowBox[{
                  RowBox[{"-", "3"}], "+", "\[FormalN]"}], ")"}], " ", 
              RowBox[{"\[FormalY]", "[", 
                RowBox[{"1", "+", "\[FormalN]"}], "]"}]}]}], "\[Equal]", 
          "0"}]}, {
        RowBox[{
          RowBox[{"\[FormalY]", "[", "1", "]"}], "\[Equal]", "55"}]}, {
        RowBox[{
          RowBox[{"\[FormalY]", "[", "2", "]"}], "\[Equal]", "121"}]}, {
        RowBox[{
          RowBox[{"\[FormalY]", "[", "3", "]"}], "\[Equal]", "363"}]}, {
        RowBox[{
          RowBox[{"\[FormalY]", "[", "4", "]"}], "\[Equal]", "726"}]}}, 
      BaseStyle -> {"HolonomicInnerGrid"}], "small" -> 
    RowBox[{"\[FormalY]", "[", 
       RowBox[{"1", "+", "\[FormalN]"}], "]"}], "branchcuts" -> "None"|>,
   "HolonomicDisplay"],
  DifferenceRoot[
   Function[{\[FormalY], \[FormalN]}, {
    242 \[FormalN] + (
        1 - \[FormalN]) \[FormalY][\[FormalN]] + (-3 + \[FormalN]) \[FormalY][
        1 + \[FormalN]] == 0, \[FormalY][1] == 55, \[FormalY][2] == 
     121, \[FormalY][3] == 363, \[FormalY][4] == 726}]]]], "Output",
 CellChangeTimes->{{3.877289667646687*^9, 3.8772896945192733`*^9}, 
   3.8772898631361465`*^9},
 CellLabel->"Out[85]=",ExpressionUUID->"07304862-7fea-4bfb-b2e7-f2659d4a5c32"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindSequenceFunction", "[", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"EdgeCount", "[", 
     RowBox[{"CompleteGraph", "[", 
      RowBox[{"ConstantArray", "[", 
       RowBox[{"11", ",", "i"}], "]"}], "]"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "10"}], "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.877289716249482*^9, 3.877289716372292*^9}},
 CellLabel->"In[80]:=",ExpressionUUID->"2141e7bc-9d0e-4599-981c-9bdad3e139fe"],

Cell[BoxData[
 InterpretationBox[
  TemplateBox[<|"head" -> "DifferenceRoot", "big" -> GridBox[{{
        RowBox[{
          RowBox[{
            RowBox[{"242", " ", "\[FormalN]"}], "+", 
            RowBox[{
              RowBox[{"(", 
                RowBox[{"1", "-", "\[FormalN]"}], ")"}], " ", 
              RowBox[{"\[FormalY]", "[", "\[FormalN]", "]"}]}], "+", 
            RowBox[{
              RowBox[{"(", 
                RowBox[{
                  RowBox[{"-", "3"}], "+", "\[FormalN]"}], ")"}], " ", 
              RowBox[{"\[FormalY]", "[", 
                RowBox[{"1", "+", "\[FormalN]"}], "]"}]}]}], "\[Equal]", 
          "0"}]}, {
        RowBox[{
          RowBox[{"\[FormalY]", "[", "1", "]"}], "\[Equal]", "55"}]}, {
        RowBox[{
          RowBox[{"\[FormalY]", "[", "2", "]"}], "\[Equal]", "121"}]}, {
        RowBox[{
          RowBox[{"\[FormalY]", "[", "3", "]"}], "\[Equal]", "363"}]}, {
        RowBox[{
          RowBox[{"\[FormalY]", "[", "4", "]"}], "\[Equal]", "726"}]}}, 
      BaseStyle -> {"HolonomicInnerGrid"}], "small" -> 
    RowBox[{"\[FormalY]", "[", 
       RowBox[{"1", "+", "\[FormalN]"}], "]"}], "branchcuts" -> "None"|>,
   "HolonomicDisplay"],
  DifferenceRoot[
   Function[{\[FormalY], \[FormalN]}, {
    242 \[FormalN] + (
        1 - \[FormalN]) \[FormalY][\[FormalN]] + (-3 + \[FormalN]) \[FormalY][
        1 + \[FormalN]] == 0, \[FormalY][1] == 55, \[FormalY][2] == 
     121, \[FormalY][3] == 363, \[FormalY][4] == 726}]]]], "Output",
 CellChangeTimes->{3.877289716856697*^9},
 CellLabel->"Out[80]=",ExpressionUUID->"fccd8364-c904-40d0-9ecc-5a2743b120de"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"DifferenceRoot", "[", 
   RowBox[{"Function", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[FormalY]", ",", "\[FormalN]"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"242", "\[FormalN]"}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "-", "\[FormalN]"}], ")"}], 
          RowBox[{"\[FormalY]", "[", "\[FormalN]", "]"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "3"}], "+", "\[FormalN]"}], ")"}], 
          RowBox[{"\[FormalY]", "[", 
           RowBox[{"1", "+", "\[FormalN]"}], "]"}]}]}], "==", "0"}], ",", 
       RowBox[{
        RowBox[{"\[FormalY]", "[", "1", "]"}], "==", "55"}], ",", 
       RowBox[{
        RowBox[{"\[FormalY]", "[", "2", "]"}], "==", "121"}], ",", 
       RowBox[{
        RowBox[{"\[FormalY]", "[", "3", "]"}], "==", "363"}], ",", 
       RowBox[{
        RowBox[{"\[FormalY]", "[", "4", "]"}], "==", "726"}]}], "}"}]}], 
    "]"}], "]"}], "==", 
  RowBox[{"FindSequenceFunction", "[", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"EdgeCount", "[", 
      RowBox[{"CompleteGraph", "[", 
       RowBox[{"ConstantArray", "[", 
        RowBox[{"11", ",", "i"}], "]"}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "10"}], "}"}]}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8772898700209074`*^9, 3.8772898710365086`*^9}},
 CellLabel->"In[86]:=",ExpressionUUID->"6d420f23-ac99-4e5f-a6b3-8c2d6767fa4b"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.8772898715209026`*^9},
 CellLabel->"Out[86]=",ExpressionUUID->"27184d93-c198-4dc6-8ba2-9cedc6ebd2fd"]
}, Open  ]],

Cell["\<\
I can now construct a function to find the number of edges in a complete \
kpartite graph.\
\>", "Text",
 CellChangeTimes->{{3.8772898749860387`*^9, 
  3.8772898878499384`*^9}},ExpressionUUID->"2e18bc08-127f-4232-b257-\
e1610a064b7d"],

Cell["I will symbolically find what happens when I subtract 1", "Text",
 CellChangeTimes->{{3.8772899808878508`*^9, 
  3.8772899905299387`*^9}},ExpressionUUID->"cbd000dd-4736-4d86-b186-\
f022896786ed"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"2", " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", 
      RowBox[{"2", " ", "#1"}], "+", 
      SuperscriptBox["#1", "2"]}], ")"}]}], "&"}], "[", 
  RowBox[{"x", "-", "1"}], "]"}]], "Input",
 CellChangeTimes->{{3.877289992514316*^9, 3.877289998626972*^9}},
 CellLabel->"In[90]:=",ExpressionUUID->"7c44c7d9-3345-4b3a-afb0-65dbdffeb24c"],

Cell[BoxData[
 RowBox[{"2", " ", 
  RowBox[{"(", 
   RowBox[{"1", "+", 
    RowBox[{"2", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "x"}], ")"}]}], "+", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "x"}], ")"}], "2"]}], ")"}]}]], "Output",
 CellChangeTimes->{{3.8772899939986277`*^9, 3.8772899990799766`*^9}},
 CellLabel->"Out[90]=",ExpressionUUID->"4f61518c-f850-40c1-b8f0-cd4a952e05a5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"2", " ", 
     RowBox[{"(", 
      RowBox[{"1", "+", 
       RowBox[{"2", " ", "#1"}], "+", 
       SuperscriptBox["#1", "2"]}], ")"}]}], "&"}], "[", 
   RowBox[{"x", "-", "1"}], "]"}], "//", "Simplify"}]], "Input",
 CellChangeTimes->{{3.877289992514316*^9, 3.8772900009568634`*^9}},
 CellLabel->"In[91]:=",ExpressionUUID->"daffd5bf-0a9e-47ec-a19e-bee749048ec1"],

Cell[BoxData[
 RowBox[{"2", " ", 
  SuperscriptBox["x", "2"]}]], "Output",
 CellChangeTimes->{3.877290001175618*^9},
 CellLabel->"Out[91]=",ExpressionUUID->"3944c680-64e8-4803-bb60-f078d73c070a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      FractionBox["1", "2"], " ", "#1", " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", "#1"}], ")"}]}], "&"}], "[", 
    RowBox[{"x", "-", "1"}], "]"}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"1", "+", 
      RowBox[{"2", " ", "#1"}], "+", 
      SuperscriptBox["#1", "2"]}], "&"}], "[", 
    RowBox[{"x", "-", "1"}], "]"}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"3", " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{"2", " ", "#1"}], "+", 
        SuperscriptBox["#1", "2"]}], ")"}]}], "&"}], "[", 
    RowBox[{"x", "-", "1"}], "]"}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"6", " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{"2", " ", "#1"}], "+", 
        SuperscriptBox["#1", "2"]}], ")"}]}], "&"}], "[", 
    RowBox[{"x", "-", "1"}], "]"}]}], "}"}]], "Input",
 CellChangeTimes->{{3.877290023211506*^9, 3.877290033580882*^9}},
 CellLabel->"In[92]:=",ExpressionUUID->"21e79cf1-def2-425a-9d9c-8d331dcc3da4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    FractionBox["1", "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "x"}], ")"}], " ", "x"}], ",", 
   RowBox[{"1", "+", 
    RowBox[{"2", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "x"}], ")"}]}], "+", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "x"}], ")"}], "2"]}], ",", 
   RowBox[{"3", " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", 
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "x"}], ")"}]}], "+", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "x"}], ")"}], "2"]}], ")"}]}], ",", 
   RowBox[{"6", " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", 
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "x"}], ")"}]}], "+", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "x"}], ")"}], "2"]}], ")"}]}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.877290033971406*^9},
 CellLabel->"Out[92]=",ExpressionUUID->"44c87d0d-948c-437c-af67-33fdb11d2be9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"FullSimplify", "/@", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        FractionBox["1", "2"], " ", "#1", " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", "#1"}], ")"}]}], "&"}], "[", 
      RowBox[{"x", "-", "1"}], "]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"1", "+", 
        RowBox[{"2", " ", "#1"}], "+", 
        SuperscriptBox["#1", "2"]}], "&"}], "[", 
      RowBox[{"x", "-", "1"}], "]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"3", " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"2", " ", "#1"}], "+", 
          SuperscriptBox["#1", "2"]}], ")"}]}], "&"}], "[", 
      RowBox[{"x", "-", "1"}], "]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"6", " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"2", " ", "#1"}], "+", 
          SuperscriptBox["#1", "2"]}], ")"}]}], "&"}], "[", 
      RowBox[{"x", "-", "1"}], "]"}]}], "}"}]}], "//", 
  "TraditionalForm"}]], "Input",
 CellChangeTimes->{{3.877290023211506*^9, 3.877290051815135*^9}},
 CellLabel->"In[95]:=",ExpressionUUID->"983e1826-7573-4280-bab1-9d88cf1c7206"],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     FractionBox["1", "2"], " ", 
     RowBox[{"(", 
      RowBox[{"x", "-", "1"}], ")"}], " ", "x"}], ",", 
    SuperscriptBox["x", "2"], ",", 
    RowBox[{"3", " ", 
     SuperscriptBox["x", "2"]}], ",", 
    RowBox[{"6", " ", 
     SuperscriptBox["x", "2"]}]}], "}"}], TraditionalForm]], "Output",
 CellChangeTimes->{{3.87729004189849*^9, 3.8772900520963893`*^9}},
 CellLabel->
  "Out[95]//TraditionalForm=",ExpressionUUID->"11fb042a-ac01-44b3-bba2-\
20773039dae6"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{"KPartiteEdgeFunctionBuilder", "//", 
  "ClearAll"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"KPartiteEdgeFunctionBuilder", "[", "k_", "]"}], ":=", 
  RowBox[{"DifferenceRoot", "[", 
   RowBox[{"Function", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[FormalY]", ",", "\[FormalN]"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"2", 
          SuperscriptBox["k", "2"], "\[FormalN]"}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "-", "\[FormalN]"}], ")"}], 
          RowBox[{"\[FormalY]", "[", "\[FormalN]", "]"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "3"}], "+", "\[FormalN]"}], ")"}], 
          RowBox[{"\[FormalY]", "[", 
           RowBox[{"1", "+", "\[FormalN]"}], "]"}]}]}], "==", "0"}], ",", 
       RowBox[{
        RowBox[{"\[FormalY]", "[", "1", "]"}], "==", 
        RowBox[{
         FractionBox["1", "2"], 
         RowBox[{"(", 
          RowBox[{"k", "-", "1"}], ")"}], "k"}]}], ",", 
       RowBox[{
        RowBox[{"\[FormalY]", "[", "2", "]"}], "==", 
        SuperscriptBox["k", "2"]}], ",", 
       RowBox[{
        RowBox[{"\[FormalY]", "[", "3", "]"}], "==", 
        RowBox[{"3", 
         SuperscriptBox["k", "2"]}]}], ",", 
       RowBox[{
        RowBox[{"\[FormalY]", "[", "4", "]"}], "==", 
        RowBox[{"6", 
         SuperscriptBox["k", "2"]}]}]}], "}"}]}], "]"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.8772899076667986`*^9, 3.8772899678097816`*^9}, {
  3.8772900673932695`*^9, 3.8772901006236997`*^9}},
 CellLabel->"In[96]:=",ExpressionUUID->"6977914b-3425-4870-ab85-f3c04878e61c"],

Cell["I will now input a test of 17:", "Text",
 CellChangeTimes->{{3.877290103936181*^9, 
  3.8772901109043937`*^9}},ExpressionUUID->"fa2fba8e-6611-4257-bc00-\
2b3c077448e2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"KPartiteEdgeFunctionBuilder", "[", "17", "]"}]], "Input",
 CellChangeTimes->{{3.8772901122168837`*^9, 3.877290114932171*^9}},
 CellLabel->"In[98]:=",ExpressionUUID->"93d096fa-7d93-4f5d-91bb-7300a7e1cd81"],

Cell[BoxData[
 InterpretationBox[
  TemplateBox[<|"head" -> "DifferenceRoot", "big" -> GridBox[{{
        RowBox[{
          RowBox[{
            RowBox[{"578", " ", "\[FormalN]"}], "+", 
            RowBox[{
              RowBox[{"(", 
                RowBox[{"1", "-", "\[FormalN]"}], ")"}], " ", 
              RowBox[{"\[FormalY]", "[", "\[FormalN]", "]"}]}], "+", 
            RowBox[{
              RowBox[{"(", 
                RowBox[{
                  RowBox[{"-", "3"}], "+", "\[FormalN]"}], ")"}], " ", 
              RowBox[{"\[FormalY]", "[", 
                RowBox[{"1", "+", "\[FormalN]"}], "]"}]}]}], "\[Equal]", 
          "0"}]}, {
        RowBox[{
          RowBox[{"\[FormalY]", "[", "1", "]"}], "\[Equal]", "136"}]}, {
        RowBox[{
          RowBox[{"\[FormalY]", "[", "2", "]"}], "\[Equal]", "289"}]}, {
        RowBox[{
          RowBox[{"\[FormalY]", "[", "3", "]"}], "\[Equal]", "867"}]}, {
        RowBox[{
          RowBox[{"\[FormalY]", "[", "4", "]"}], "\[Equal]", "1734"}]}}, 
      BaseStyle -> {"HolonomicInnerGrid"}], "small" -> 
    RowBox[{"\[FormalY]", "[", 
       RowBox[{"1", "+", "\[FormalN]"}], "]"}], "branchcuts" -> "None"|>,
   "HolonomicDisplay"],
  DifferenceRoot[
   Function[{\[FormalY], \[FormalN]}, {
    578 \[FormalN] + (
        1 - \[FormalN]) \[FormalY][\[FormalN]] + (-3 + \[FormalN]) \[FormalY][
        1 + \[FormalN]] == 0, \[FormalY][1] == 136, \[FormalY][2] == 
     289, \[FormalY][3] == 867, \[FormalY][4] == 1734}]]]], "Output",
 CellChangeTimes->{3.877290115260186*^9},
 CellLabel->"Out[98]=",ExpressionUUID->"8f563507-b2d7-46b4-814b-6564563550d6"]
}, Open  ]],

Cell["I will compute the answer manually:", "Text",
 CellChangeTimes->{{3.8772901336814823`*^9, 
  3.8772901388658624`*^9}},ExpressionUUID->"737c74d3-4c43-47e6-afac-\
1bc086643129"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindSequenceFunction", "[", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"EdgeCount", "[", 
     RowBox[{"CompleteGraph", "[", 
      RowBox[{"ConstantArray", "[", 
       RowBox[{"17", ",", "i"}], "]"}], "]"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "10"}], "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{3.877290141394916*^9},
 CellLabel->"In[99]:=",ExpressionUUID->"d36b4710-5d26-45aa-886f-19530be6d143"],

Cell[BoxData[
 InterpretationBox[
  TemplateBox[<|"head" -> "DifferenceRoot", "big" -> GridBox[{{
        RowBox[{
          RowBox[{
            RowBox[{"578", " ", "\[FormalN]"}], "+", 
            RowBox[{
              RowBox[{"(", 
                RowBox[{"1", "-", "\[FormalN]"}], ")"}], " ", 
              RowBox[{"\[FormalY]", "[", "\[FormalN]", "]"}]}], "+", 
            RowBox[{
              RowBox[{"(", 
                RowBox[{
                  RowBox[{"-", "3"}], "+", "\[FormalN]"}], ")"}], " ", 
              RowBox[{"\[FormalY]", "[", 
                RowBox[{"1", "+", "\[FormalN]"}], "]"}]}]}], "\[Equal]", 
          "0"}]}, {
        RowBox[{
          RowBox[{"\[FormalY]", "[", "1", "]"}], "\[Equal]", "136"}]}, {
        RowBox[{
          RowBox[{"\[FormalY]", "[", "2", "]"}], "\[Equal]", "289"}]}, {
        RowBox[{
          RowBox[{"\[FormalY]", "[", "3", "]"}], "\[Equal]", "867"}]}, {
        RowBox[{
          RowBox[{"\[FormalY]", "[", "4", "]"}], "\[Equal]", "1734"}]}}, 
      BaseStyle -> {"HolonomicInnerGrid"}], "small" -> 
    RowBox[{"\[FormalY]", "[", 
       RowBox[{"1", "+", "\[FormalN]"}], "]"}], "branchcuts" -> "None"|>,
   "HolonomicDisplay"],
  DifferenceRoot[
   Function[{\[FormalY], \[FormalN]}, {
    578 \[FormalN] + (
        1 - \[FormalN]) \[FormalY][\[FormalN]] + (-3 + \[FormalN]) \[FormalY][
        1 + \[FormalN]] == 0, \[FormalY][1] == 136, \[FormalY][2] == 
     289, \[FormalY][3] == 867, \[FormalY][4] == 1734}]]]], "Output",
 CellChangeTimes->{3.8772901418948655`*^9},
 CellLabel->"Out[99]=",ExpressionUUID->"f60e8b43-e458-40dd-8a20-9153334b7bba"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"KPartiteEdgeFunctionBuilder", "[", "17", "]"}], "==", 
  RowBox[{"FindSequenceFunction", "[", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"EdgeCount", "[", 
      RowBox[{"CompleteGraph", "[", 
       RowBox[{"ConstantArray", "[", 
        RowBox[{"17", ",", "i"}], "]"}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "10"}], "}"}]}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.877290149144849*^9, 3.8772901521376715`*^9}},
 CellLabel->
  "In[100]:=",ExpressionUUID->"c28ab46b-fcba-4543-a35d-663695d9c30f"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.877290152762029*^9},
 CellLabel->
  "Out[100]=",ExpressionUUID->"15ac9481-059a-47ec-8a62-22a25055fb81"]
}, Open  ]],

Cell[TextData[{
 "I now have an answer to how many edges are in ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["K", 
    RowBox[{
     SubscriptBox["n", "1"], ",", "\[Ellipsis]", ",", 
     SubscriptBox["n", "k"]}]], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "a929779d-7df0-48ff-9abc-2ef34b0983e6"],
 "."
}], "Text",
 CellChangeTimes->{{3.877290201760735*^9, 
  3.877290234096726*^9}},ExpressionUUID->"0aec37f0-a3cc-4729-8089-\
8bc8b8702efc"],

Cell[BoxData[{
 RowBox[{"EdgesInCompleteKPartiteGraph", "//", 
  "ClearAll"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"EdgesInCompleteKPartiteGraph", "[", 
   RowBox[{"k_", ",", "n_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"DifferenceRoot", "[", 
    RowBox[{"Function", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\[FormalY]", ",", "\[FormalN]"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"2", 
           SuperscriptBox["k", "2"], "\[FormalN]"}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "-", "\[FormalN]"}], ")"}], 
           RowBox[{"\[FormalY]", "[", "\[FormalN]", "]"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "3"}], "+", "\[FormalN]"}], ")"}], 
           RowBox[{"\[FormalY]", "[", 
            RowBox[{"1", "+", "\[FormalN]"}], "]"}]}]}], "==", "0"}], ",", 
        RowBox[{
         RowBox[{"\[FormalY]", "[", "1", "]"}], "==", 
         RowBox[{
          FractionBox["1", "2"], 
          RowBox[{"(", 
           RowBox[{"k", "-", "1"}], ")"}], "k"}]}], ",", 
        RowBox[{
         RowBox[{"\[FormalY]", "[", "2", "]"}], "==", 
         SuperscriptBox["k", "2"]}], ",", 
        RowBox[{
         RowBox[{"\[FormalY]", "[", "3", "]"}], "==", 
         RowBox[{"3", 
          SuperscriptBox["k", "2"]}]}], ",", 
        RowBox[{
         RowBox[{"\[FormalY]", "[", "4", "]"}], "==", 
         RowBox[{"6", 
          SuperscriptBox["k", "2"]}]}]}], "}"}]}], "]"}], "]"}], "[", "n", 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.877290251654064*^9, 3.877290274347697*^9}},
 CellLabel->
  "In[102]:=",ExpressionUUID->"8101aa2a-7f98-42e5-b9b5-cd2ae5e0c253"],

Cell[TextData[{
 "I can now quickly find how many edges are the graph ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["K", 
    RowBox[{
     SubscriptBox["19", "1"], ",", "\[Ellipsis]", ",", 
     SubscriptBox["19", "7"]}]], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "38b20450-c514-4521-a00a-c1ddcbcfd69a"],
 "."
}], "Text",
 CellChangeTimes->{{3.877290276550845*^9, 
  3.8772903084253445`*^9}},ExpressionUUID->"01e4b662-ea90-44d0-b429-\
0a885d5a2444"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EdgesInCompleteKPartiteGraph", "[", 
  RowBox[{"7", ",", "19"}], "]"}]], "Input",
 CellChangeTimes->{{3.877290313369034*^9, 3.8772903173542275`*^9}},
 CellLabel->
  "In[104]:=",ExpressionUUID->"8f803f6f-6121-4879-8d93-5d965f9d5a2f"],

Cell[BoxData["8379"], "Output",
 CellChangeTimes->{3.877290317729141*^9},
 CellLabel->
  "Out[104]=",ExpressionUUID->"0c23b221-61b5-4f2b-9bec-1c548c3d413a"]
}, Open  ]],

Cell["I can check the answer", "Text",
 CellChangeTimes->{{3.8772903239948015`*^9, 
  3.87729032682303*^9}},ExpressionUUID->"b9d527b0-c86b-44c4-9dcc-\
93abff7bc51c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"KPartiteEdgeFunctionBuilder", "[", "7", "]"}], "[", "19", 
  "]"}]], "Input",
 CellChangeTimes->{{3.877290328791643*^9, 3.877290332510395*^9}},
 CellLabel->
  "In[105]:=",ExpressionUUID->"941e20c6-9427-45dd-9d32-31e6d323cde8"],

Cell[BoxData["8379"], "Output",
 CellChangeTimes->{3.8772903328073063`*^9},
 CellLabel->
  "Out[105]=",ExpressionUUID->"78c03926-3972-497e-b378-929cc604c966"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"FindSequenceFunction", "[", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"EdgeCount", "[", 
      RowBox[{"CompleteGraph", "[", 
       RowBox[{"ConstantArray", "[", 
        RowBox[{"7", ",", "i"}], "]"}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "10"}], "}"}]}], "]"}], "]"}], "[", "19", 
  "]"}]], "Input",
 CellChangeTimes->{{3.8772903562609773`*^9, 3.877290356651667*^9}},
 CellLabel->
  "In[106]:=",ExpressionUUID->"7d016c03-0020-41c6-9ff6-d6e7e68a32cb"],

Cell[BoxData["8379"], "Output",
 CellChangeTimes->{3.8772903570891275`*^9},
 CellLabel->
  "Out[106]=",ExpressionUUID->"e8586b9a-7a03-4aa5-96f2-537c186f52c0"]
}, Open  ]],

Cell["I am now going to look at the solution.", "Text",
 CellChangeTimes->{{3.877291174335413*^9, 
  3.877291180440056*^9}},ExpressionUUID->"ac80fab1-150a-4880-94f1-\
f85672d0b53f"],

Cell["Donald Knuth has this answer:", "Text",
 CellChangeTimes->{{3.8772912235483913`*^9, 
  3.8772912277546964`*^9}},ExpressionUUID->"a9737c95-db1a-441c-9e12-\
68c18c57c352"],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"(", GridBox[{
       {"N"},
       {"2"}
      }], ")"}], "-", 
    RowBox[{"(", GridBox[{
       {
        SubscriptBox["n", "1"]},
       {"2"}
      }], ")"}], "-", "\[Ellipsis]", "-", 
    RowBox[{"(", GridBox[{
       {
        SubscriptBox["n", "k"]},
       {"2"}
      }], ")"}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "046d085b-b5a0-4933-9e5d-38fee6184791"],
 ", or ",
 Cell[BoxData[
  FormBox[
   FractionBox[
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["N", "2"], "-", 
      SubsuperscriptBox["n", "1", "2"], "-", "\[Ellipsis]", "-", 
      SubsuperscriptBox["n", "k", "2"]}], ")"}], "2"], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "a1905ef6-e253-460d-98b6-ec0d8d57539a"],
 " where ",
 Cell[BoxData[
  FormBox[
   RowBox[{"N", "=", 
    RowBox[{
     SubscriptBox["n", "1"], "+", "\[Ellipsis]", "+", 
     SubscriptBox["n", "k"]}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "661999db-c173-4ee0-b0c1-7c5a8346fca6"],
 "."
}], "Text",
 CellChangeTimes->{{3.87729123072334*^9, 
  3.877291326497408*^9}},ExpressionUUID->"778b5eac-b972-419c-914e-\
a4e0038c3106"],

Cell["\<\
I\[CloseCurlyQuote]m interested in there\[CloseCurlyQuote]s a way to \
transform my complicated holonomic differential root object into this simpler \
form. Maybe in future versions of Mathematica this can be done with some \
simplifications similar to how Mathematica has been able to find more closed \
form solutions for integrals over time. Please comment if you have any ideas \
on how to find the simpler result from the answers to the exercises. I would \
like to mention this is difficult because the term is multivariable.\
\>", "Text",
 CellChangeTimes->{{3.8772913293099403`*^9, 
  3.877291465628317*^9}},ExpressionUUID->"0e7c0785-dd94-4b26-bad4-\
d8cb0636fa26"],

Cell[TextData[{
 "I would like to mention that technically not even my complicated function \
is correct because the solution Knuth gives holds for when ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["n", "1"], "\[NotEqual]", 
    SubscriptBox["n", "2"]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "f371ffbf-e476-4453-a53b-62339c647e76"],
 ", for example, but in my case all ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["n", "i"], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "46d13740-c294-405d-9637-ba33ebd4bf5a"],
 " have to be the same where I used ConstantArray."
}], "Text",
 CellChangeTimes->{{3.8772919530793295`*^9, 
  3.8772920062452507`*^9}},ExpressionUUID->"8a044780-93d2-4903-b3c5-\
9aed69ba0fc0"]
}, Closed]],

Cell[CellGroupData[{

Cell["Note", "Section",
 CellChangeTimes->{{3.877291855120203*^9, 
  3.8772918555732346`*^9}},ExpressionUUID->"7a87d8a7-cdb7-408f-abe0-\
643ca3585807"],

Cell["\<\
A lot of the exercises are hard and involve proofs and higher mathematical \
thinking as can be seen in my difficulty with the previous problem with \
holonomic difference root objects and bipartite graphs, so \
I\[CloseCurlyQuote]m going to skip to the exercises I can use Mathematica on.\
\>", "Text",
 CellChangeTimes->{{3.877291856838888*^9, 
  3.877291936818104*^9}},ExpressionUUID->"63a55643-8e16-4428-a404-\
6274316d209c"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Exercise 83", "Section",
 CellChangeTimes->{{3.8772920204327793`*^9, 
  3.8772920239170694`*^9}},ExpressionUUID->"df451ef9-e7d5-4b97-9de5-\
8af05ed10031"],

Cell[TextData[{
 "Draw the graph ",
 Cell[BoxData[
  FormBox[
   OverscriptBox[
    RowBox[{"L", "(", 
     SubscriptBox["K", "5"], ")"}], "_"], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "fdd5a383-49a7-41ca-891c-adbc886f4144"],
 "."
}], "Text",
 CellChangeTimes->{{3.877292025354557*^9, 
  3.877292087428286*^9}},ExpressionUUID->"04c4bdd2-0e07-43a8-9636-\
fe2ea98a8409"],

Cell["\<\
This is the graph complement of the line graph of the complete graph of 5.\
\>", "Text",
 CellChangeTimes->{{3.8772920888371544`*^9, 
  3.877292102662325*^9}},ExpressionUUID->"857d67a4-1006-4bfd-b7af-\
09df5a256abe"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GraphComplement", "[", 
  RowBox[{"LineGraph", "[", 
   RowBox[{"CompleteGraph", "[", "5", "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.877292125819579*^9, 3.877292132740756*^9}},
 CellLabel->
  "In[108]:=",ExpressionUUID->"1636022f-83f2-420a-8c18-58adf08e7fcc"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10}, {Null, 
       SparseArray[
       Automatic, {10, 10}, 0, {
        1, {{0, 3, 6, 9, 12, 15, 18, 21, 24, 27, 30}, {{8}, {9}, {10}, {6}, {
          7}, {10}, {5}, {7}, {9}, {5}, {6}, {8}, {3}, {4}, {10}, {2}, {4}, {
          9}, {2}, {3}, {8}, {1}, {4}, {7}, {1}, {3}, {6}, {1}, {2}, {5}}}, 
         Pattern}]}, {
      GraphLayout -> {"Dimension" -> 2}, 
       VertexCoordinates -> {{0.6651986555796293, 1.084954554578071}, {
        1.1652157322407402`, 0.5810385593588143}, {0.29866480449689004`, 
        1.6550097519097782`}, {1.5938024920891598`, 1.6980228350627398`}, {
        0.88892971828063, 0.}, {0., 0.9452612628552298}, {1.3662153589328758`,
         1.0937246966565126`}, {0.42609909579358646`, 0.4849179720137492}, {
        1.7878201732396761`, 0.628217691539293}, {0.9213455695821686, 
        1.6874270158797413`}}}]]}, 
    TagBox[
     GraphicsGroupBox[
      GraphicsComplexBox[{{0.6651986555796293, 1.084954554578071}, {
       1.1652157322407402`, 0.5810385593588143}, {0.29866480449689004`, 
       1.6550097519097782`}, {1.5938024920891598`, 1.6980228350627398`}, {
       0.88892971828063, 0.}, {0., 0.9452612628552298}, {1.3662153589328758`, 
       1.0937246966565126`}, {0.42609909579358646`, 0.4849179720137492}, {
       1.7878201732396761`, 0.628217691539293}, {0.9213455695821686, 
       1.6874270158797413`}}, {
        {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
         ArrowBox[{{1, 8}, {1, 9}, {1, 10}, {2, 6}, {2, 7}, {2, 10}, {3, 5}, {
          3, 7}, {3, 9}, {4, 5}, {4, 6}, {4, 8}, {5, 10}, {6, 9}, {7, 8}}, 
          0.020866269260043424`]}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         DiskBox[1, 0.020866269260043424], DiskBox[2, 0.020866269260043424], 
         DiskBox[3, 0.020866269260043424], DiskBox[4, 0.020866269260043424], 
         DiskBox[5, 0.020866269260043424], DiskBox[6, 0.020866269260043424], 
         DiskBox[7, 0.020866269260043424], DiskBox[8, 0.020866269260043424], 
         DiskBox[9, 0.020866269260043424], 
         DiskBox[10, 0.020866269260043424]}}]],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None]], "Output",
 CellChangeTimes->{3.8772921334124727`*^9},
 CellLabel->
  "Out[108]=",ExpressionUUID->"4839fc3e-5f72-43e1-b723-1ecb87b6fdf2"]
}, Open  ]],

Cell["Transform the graph into a simpler form:", "Text",
 CellChangeTimes->{{3.8772921453436112`*^9, 
  3.8772921510854883`*^9}},ExpressionUUID->"23f9a789-bc9b-49bf-a6f3-\
365ff71df1ac"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CanonicalGraph", "[", 
  RowBox[{"GraphComplement", "[", 
   RowBox[{"LineGraph", "[", 
    RowBox[{"CompleteGraph", "[", "5", "]"}], "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.877292137631225*^9, 3.8772921399055495`*^9}},
 CellLabel->
  "In[109]:=",ExpressionUUID->"38cae460-1922-4633-85bb-e92293a27acd"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10}, {Null, 
       SparseArray[
       Automatic, {10, 10}, 0, {
        1, {{0, 3, 6, 9, 12, 15, 18, 21, 24, 27, 30}, {{3}, {4}, {7}, {3}, {
          5}, {8}, {1}, {2}, {9}, {1}, {6}, {8}, {2}, {6}, {7}, {4}, {5}, {
          9}, {1}, {5}, {10}, {2}, {4}, {10}, {3}, {6}, {10}, {7}, {8}, {9}}},
          Pattern}]}]]}, 
    TagBox[
     GraphicsGroupBox[
      GraphicsComplexBox[{{0.989678183496899, 0.12761098118491943`}, {
       1.607835648836621, 0.}, {1.9798127481692367`, 0.6421765987520861}, {
       0.9896915982880578, 0.7846622490662637}, {0.37058067409743234`, 
       0.0006957653093645488}, {0.4202329871997392, 1.1136727825266268`}, {0.,
        0.6433811837209915}, {1.558466636044518, 1.1133970619850806`}, {
       1.361075128185234, 1.7139544788728847`}, {0.6189236337794615, 
       1.7133227721917983`}}, {
        {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
         ArrowBox[{{1, 3}, {1, 4}, {1, 7}, {2, 3}, {2, 5}, {2, 8}, {3, 9}, {4,
           6}, {4, 8}, {5, 6}, {5, 7}, {6, 9}, {7, 10}, {8, 10}, {9, 10}}, 
          0.022447456349023148`]}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         DiskBox[1, 0.022447456349023148], DiskBox[2, 0.022447456349023148], 
         DiskBox[3, 0.022447456349023148], DiskBox[4, 0.022447456349023148], 
         DiskBox[5, 0.022447456349023148], DiskBox[6, 0.022447456349023148], 
         DiskBox[7, 0.022447456349023148], DiskBox[8, 0.022447456349023148], 
         DiskBox[9, 0.022447456349023148], 
         DiskBox[10, 0.022447456349023148]}}]],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None]], "Output",
 CellChangeTimes->{3.8772921403742657`*^9},
 CellLabel->
  "Out[109]=",ExpressionUUID->"a02fafb6-1616-44b0-9b61-b10401f5f41f"]
}, Open  ]],

Cell["I think this is isomorphic to the Petersen graph.", "Text",
 CellChangeTimes->{{3.877292188231244*^9, 
  3.8772921957313175`*^9}},ExpressionUUID->"adabd828-5d1e-4c51-b004-\
5a861872cf39"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"IsomorphicGraphQ", "[", 
  RowBox[{
   RowBox[{"CanonicalGraph", "[", 
    RowBox[{"GraphComplement", "[", 
     RowBox[{"LineGraph", "[", 
      RowBox[{"CompleteGraph", "[", "5", "]"}], "]"}], "]"}], "]"}], ",", 
   RowBox[{"PetersenGraph", "[", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8772921796383495`*^9, 3.8772921848161144`*^9}},
 CellLabel->
  "In[110]:=",ExpressionUUID->"1c037a8b-e36f-4b99-b08e-6afd69ee809a"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.87729218509035*^9},
 CellLabel->
  "Out[110]=",ExpressionUUID->"34a5c2d0-a12e-4a08-a0f7-aa3e690ca44f"]
}, Open  ]],

Cell[TextData[{
 "I learned  ",
 Cell[BoxData[
  FormBox[
   OverscriptBox[
    RowBox[{"L", "(", 
     SubscriptBox["K", "5"], ")"}], "_"], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "eff89820-b7ec-4720-93e8-57094d8fc81c"],
 " equals the Petersen graph."
}], "Text",
 CellChangeTimes->{{3.8772921995593586`*^9, 
  3.8772922175124226`*^9}},ExpressionUUID->"89ed7285-7597-4038-a6c3-\
0d798465e151"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Exercise 84", "Section",
 CellChangeTimes->{{3.8772922258523073`*^9, 
  3.8772922277949095`*^9}},ExpressionUUID->"9b42627c-9014-4c84-a31f-\
2e537cd4d2da"],

Cell[TextData[{
 "Is ",
 Cell[BoxData[
  FormBox[
   RowBox[{"L", "(", 
    SubscriptBox["K", 
     RowBox[{"3", ",", "3"}]], ")"}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "5ea92ec6-673f-477b-b2d8-d26328c49046"],
 " self-complementary?"
}], "Text",
 CellChangeTimes->{{3.8772922295917296`*^9, 
  3.8772922417230988`*^9}},ExpressionUUID->"e6b938bb-c17e-4861-bb6d-\
5330253ba6fa"],

Cell["Find all known self-complementary graphs:", "Text",
 CellChangeTimes->{{3.877292259827817*^9, 
  3.8772922669649086`*^9}},ExpressionUUID->"8463d93f-95c4-4007-aff0-\
d1c47bb44b8b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AssociationMap", "[", 
  RowBox[{"GraphData", ",", 
   RowBox[{"GraphData", "[", "\"\<SelfComplementary\>\"", "]"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8772922428012023`*^9, 3.8772922794283967`*^9}},
 CellLabel->
  "In[112]:=",ExpressionUUID->"db1c366f-2b19-488a-a1d2-4740ebf39774"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"BullGraph\"\>", "\[Rule]", 
    GraphicsBox[
     NamespaceBox["NetworkGraphics",
      DynamicModuleBox[{Typeset`graph = HoldComplete[
        Graph[{1, 2, 3, 4, 5}, {Null, 
          SparseArray[
          Automatic, {5, 5}, 0, {
           1, {{0, 2, 3, 4, 7, 10}, {{4}, {5}, {4}, {5}, {1}, {2}, {5}, {1}, {
             3}, {4}}}, Pattern}]}, {
         VertexCoordinates -> {{0, 0}, {-2, 4}, {2, 4}, {-1, 2}, {1, 2}}}]]}, 
       TagBox[
        GraphicsGroupBox[
         GraphicsComplexBox[{{0., 0.}, {-2., 4.}, {2., 4.}, {-1., 2.}, {1., 
          2.}}, {
           {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
            ArrowBox[{{1, 4}, {1, 5}, {2, 4}, {3, 5}, {4, 5}}, 
             0.03700564971751412]}, 
           {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
            DiskBox[1, 0.03700564971751412], DiskBox[2, 0.03700564971751412], 
            DiskBox[3, 0.03700564971751412], DiskBox[4, 0.03700564971751412], 
            DiskBox[5, 0.03700564971751412]}}]],
        MouseAppearanceTag["NetworkGraphics"]],
       AllowKernelInitialization->False]],
     DefaultBaseStyle->{
      "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
     FormatType->TraditionalForm,
     FrameTicks->None]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"Circulant\"\>", ",", 
      RowBox[{"{", 
       RowBox[{"13", ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "2", ",", "4"}], "}"}]}], "}"}]}], "}"}], 
    "\[Rule]", 
    GraphicsBox[
     NamespaceBox["NetworkGraphics",
      DynamicModuleBox[{Typeset`graph = HoldComplete[
        Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13}, {Null, 
          SparseArray[
          Automatic, {13, 13}, 0, {
           1, {{0, 6, 12, 18, 24, 30, 36, 42, 48, 54, 60, 66, 72, 78}, {{2}, {
             3}, {5}, {10}, {12}, {13}, {1}, {3}, {4}, {6}, {11}, {13}, {1}, {
             2}, {4}, {5}, {7}, {12}, {2}, {3}, {5}, {6}, {8}, {13}, {1}, {
             3}, {4}, {6}, {7}, {9}, {2}, {4}, {5}, {7}, {8}, {10}, {3}, {
             5}, {6}, {8}, {9}, {11}, {4}, {6}, {7}, {9}, {10}, {12}, {5}, {
             7}, {8}, {10}, {11}, {13}, {1}, {6}, {8}, {9}, {11}, {12}, {2}, {
             7}, {9}, {10}, {12}, {13}, {1}, {3}, {8}, {10}, {11}, {13}, {
             1}, {2}, {4}, {9}, {11}, {12}}}, Pattern}]}, {
         VertexCoordinates -> {{0.885456, 0.464723}, {0.568065, 0.822984}, {
            0.120537, 0.992709}, {-0.354605, 0.935016}, {-0.748511, 
            0.663123}, {-0.970942, 
            0.239316}, {-0.970942, -0.239316}, {-0.748511, -0.663123}, \
{-0.354605, -0.935016}, {0.120537, -0.992709}, {0.568065, -0.822984}, {
            0.885456, -0.464723}, {1., 0}}}]]}, 
       TagBox[
        GraphicsGroupBox[
         GraphicsComplexBox[{{0.885456, 0.464723}, {0.568065, 0.822984}, {
          0.120537, 0.992709}, {-0.354605, 0.935016}, {-0.748511, 
          0.663123}, {-0.970942, 
          0.239316}, {-0.970942, -0.239316}, {-0.748511, -0.663123}, \
{-0.354605, -0.935016}, {0.120537, -0.992709}, {0.568065, -0.822984}, {
          0.885456, -0.464723}, {1., 0.}}, {
           {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
            ArrowBox[{{1, 2}, {1, 3}, {1, 5}, {1, 10}, {1, 12}, {1, 13}, {2, 
             3}, {2, 4}, {2, 6}, {2, 11}, {2, 13}, {3, 4}, {3, 5}, {3, 7}, {3,
              12}, {4, 5}, {4, 6}, {4, 8}, {4, 13}, {5, 6}, {5, 7}, {5, 9}, {
             6, 7}, {6, 8}, {6, 10}, {7, 8}, {7, 9}, {7, 11}, {8, 9}, {8, 
             10}, {8, 12}, {9, 10}, {9, 11}, {9, 13}, {10, 11}, {10, 12}, {11,
              12}, {11, 13}, {12, 13}}, 0.022493037801096516`]}, 
           {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
            DiskBox[1, 0.022493037801096516], 
            DiskBox[2, 0.022493037801096516], 
            DiskBox[3, 0.022493037801096516], 
            DiskBox[4, 0.022493037801096516], 
            DiskBox[5, 0.022493037801096516], 
            DiskBox[6, 0.022493037801096516], 
            DiskBox[7, 0.022493037801096516], 
            DiskBox[8, 0.022493037801096516], 
            DiskBox[9, 0.022493037801096516], 
            DiskBox[10, 0.022493037801096516], 
            DiskBox[11, 0.022493037801096516], 
            DiskBox[12, 0.022493037801096516], 
            DiskBox[13, 0.022493037801096516]}}]],
        MouseAppearanceTag["NetworkGraphics"]],
       AllowKernelInitialization->False]],
     DefaultBaseStyle->{
      "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
     FormatType->TraditionalForm,
     FrameTicks->None]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"Circulant\"\>", ",", 
      RowBox[{"{", 
       RowBox[{"17", ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "2", ",", "3", ",", "6"}], "}"}]}], "}"}]}], "}"}],
     "\[Rule]", 
    GraphicsBox[
     NamespaceBox["NetworkGraphics",
      DynamicModuleBox[{Typeset`graph = HoldComplete[
        Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17}, {
         Null, 
          SparseArray[
          Automatic, {17, 17}, 0, {
           1, {{0, 8, 16, 24, 32, 40, 48, 56, 64, 72, 80, 88, 96, 104, 112, 
             120, 128, 136}, {{2}, {3}, {4}, {7}, {12}, {15}, {16}, {17}, {
             1}, {3}, {4}, {5}, {8}, {13}, {16}, {17}, {1}, {2}, {4}, {5}, {
             6}, {9}, {14}, {17}, {1}, {2}, {3}, {5}, {6}, {7}, {10}, {15}, {
             2}, {3}, {4}, {6}, {7}, {8}, {11}, {16}, {3}, {4}, {5}, {7}, {
             8}, {9}, {12}, {17}, {1}, {4}, {5}, {6}, {8}, {9}, {10}, {13}, {
             2}, {5}, {6}, {7}, {9}, {10}, {11}, {14}, {3}, {6}, {7}, {8}, {
             10}, {11}, {12}, {15}, {4}, {7}, {8}, {9}, {11}, {12}, {13}, {
             16}, {5}, {8}, {9}, {10}, {12}, {13}, {14}, {17}, {1}, {6}, {
             9}, {10}, {11}, {13}, {14}, {15}, {2}, {7}, {10}, {11}, {12}, {
             14}, {15}, {16}, {3}, {8}, {11}, {12}, {13}, {15}, {16}, {17}, {
             1}, {4}, {9}, {12}, {13}, {14}, {16}, {17}, {1}, {2}, {5}, {
             10}, {13}, {14}, {15}, {17}, {1}, {2}, {3}, {6}, {11}, {14}, {
             15}, {16}}}, Pattern}]}, {
         VertexCoordinates -> {{0.932472, 0.361242}, {0.739009, 0.673696}, {
            0.445738, 0.895163}, {0.0922684, 0.995734}, {-0.273663, 
            0.961826}, {-0.602635, 0.798017}, {-0.850217, 
            0.526432}, {-0.982973, 
            0.18375}, {-0.982973, -0.18375}, {-0.850217, -0.526432}, \
{-0.602635, -0.798017}, {-0.273663, -0.961826}, {0.0922684, -0.995734}, {
            0.445738, -0.895163}, {0.739009, -0.673696}, {
            0.932472, -0.361242}, {1., 0}}}]]}, 
       TagBox[
        GraphicsGroupBox[
         GraphicsComplexBox[{{0.932472, 0.361242}, {0.739009, 0.673696}, {
          0.445738, 0.895163}, {0.0922684, 0.995734}, {-0.273663, 
          0.961826}, {-0.602635, 0.798017}, {-0.850217, 0.526432}, {-0.982973,
           0.18375}, {-0.982973, -0.18375}, {-0.850217, -0.526432}, \
{-0.602635, -0.798017}, {-0.273663, -0.961826}, {0.0922684, -0.995734}, {
          0.445738, -0.895163}, {0.739009, -0.673696}, {
          0.932472, -0.361242}, {1., 0.}}, {
           {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
            ArrowBox[{{1, 2}, {1, 3}, {1, 4}, {1, 7}, {1, 12}, {1, 15}, {1, 
             16}, {1, 17}, {2, 3}, {2, 4}, {2, 5}, {2, 8}, {2, 13}, {2, 16}, {
             2, 17}, {3, 4}, {3, 5}, {3, 6}, {3, 9}, {3, 14}, {3, 17}, {4, 
             5}, {4, 6}, {4, 7}, {4, 10}, {4, 15}, {5, 6}, {5, 7}, {5, 8}, {5,
              11}, {5, 16}, {6, 7}, {6, 8}, {6, 9}, {6, 12}, {6, 17}, {7, 
             8}, {7, 9}, {7, 10}, {7, 13}, {8, 9}, {8, 10}, {8, 11}, {8, 
             14}, {9, 10}, {9, 11}, {9, 12}, {9, 15}, {10, 11}, {10, 12}, {10,
              13}, {10, 16}, {11, 12}, {11, 13}, {11, 14}, {11, 17}, {12, 
             13}, {12, 14}, {12, 15}, {13, 14}, {13, 15}, {13, 16}, {14, 
             15}, {14, 16}, {14, 17}, {15, 16}, {15, 17}, {16, 17}}, 
             0.022542199365922916`]}, 
           {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
            DiskBox[1, 0.022542199365922916], 
            DiskBox[2, 0.022542199365922916], 
            DiskBox[3, 0.022542199365922916], 
            DiskBox[4, 0.022542199365922916], 
            DiskBox[5, 0.022542199365922916], 
            DiskBox[6, 0.022542199365922916], 
            DiskBox[7, 0.022542199365922916], 
            DiskBox[8, 0.022542199365922916], 
            DiskBox[9, 0.022542199365922916], 
            DiskBox[10, 0.022542199365922916], 
            DiskBox[11, 0.022542199365922916], 
            DiskBox[12, 0.022542199365922916], 
            DiskBox[13, 0.022542199365922916], 
            DiskBox[14, 0.022542199365922916], 
            DiskBox[15, 0.022542199365922916], 
            DiskBox[16, 0.022542199365922916], 
            DiskBox[17, 0.022542199365922916]}}]],
        MouseAppearanceTag["NetworkGraphics"]],
       AllowKernelInitialization->False]],
     DefaultBaseStyle->{
      "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
     FormatType->TraditionalForm,
     FrameTicks->None]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"Circulant\"\>", ",", 
      RowBox[{"{", 
       RowBox[{"17", ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "2", ",", "3", ",", "7"}], "}"}]}], "}"}]}], "}"}],
     "\[Rule]", 
    GraphicsBox[
     NamespaceBox["NetworkGraphics",
      DynamicModuleBox[{Typeset`graph = HoldComplete[
        Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17}, {
         Null, 
          SparseArray[
          Automatic, {17, 17}, 0, {
           1, {{0, 8, 16, 24, 32, 40, 48, 56, 64, 72, 80, 88, 96, 104, 112, 
             120, 128, 136}, {{2}, {3}, {4}, {8}, {11}, {15}, {16}, {17}, {
             1}, {3}, {4}, {5}, {9}, {12}, {16}, {17}, {1}, {2}, {4}, {5}, {
             6}, {10}, {13}, {17}, {1}, {2}, {3}, {5}, {6}, {7}, {11}, {14}, {
             2}, {3}, {4}, {6}, {7}, {8}, {12}, {15}, {3}, {4}, {5}, {7}, {
             8}, {9}, {13}, {16}, {4}, {5}, {6}, {8}, {9}, {10}, {14}, {17}, {
             1}, {5}, {6}, {7}, {9}, {10}, {11}, {15}, {2}, {6}, {7}, {8}, {
             10}, {11}, {12}, {16}, {3}, {7}, {8}, {9}, {11}, {12}, {13}, {
             17}, {1}, {4}, {8}, {9}, {10}, {12}, {13}, {14}, {2}, {5}, {9}, {
             10}, {11}, {13}, {14}, {15}, {3}, {6}, {10}, {11}, {12}, {14}, {
             15}, {16}, {4}, {7}, {11}, {12}, {13}, {15}, {16}, {17}, {1}, {
             5}, {8}, {12}, {13}, {14}, {16}, {17}, {1}, {2}, {6}, {9}, {
             13}, {14}, {15}, {17}, {1}, {2}, {3}, {7}, {10}, {14}, {15}, {
             16}}}, Pattern}]}, {
         VertexCoordinates -> {{0.932472, 0.361242}, {0.739009, 0.673696}, {
            0.445738, 0.895163}, {0.0922684, 0.995734}, {-0.273663, 
            0.961826}, {-0.602635, 0.798017}, {-0.850217, 
            0.526432}, {-0.982973, 
            0.18375}, {-0.982973, -0.18375}, {-0.850217, -0.526432}, \
{-0.602635, -0.798017}, {-0.273663, -0.961826}, {0.0922684, -0.995734}, {
            0.445738, -0.895163}, {0.739009, -0.673696}, {
            0.932472, -0.361242}, {1., 0}}}]]}, 
       TagBox[
        GraphicsGroupBox[
         GraphicsComplexBox[{{0.932472, 0.361242}, {0.739009, 0.673696}, {
          0.445738, 0.895163}, {0.0922684, 0.995734}, {-0.273663, 
          0.961826}, {-0.602635, 0.798017}, {-0.850217, 0.526432}, {-0.982973,
           0.18375}, {-0.982973, -0.18375}, {-0.850217, -0.526432}, \
{-0.602635, -0.798017}, {-0.273663, -0.961826}, {0.0922684, -0.995734}, {
          0.445738, -0.895163}, {0.739009, -0.673696}, {
          0.932472, -0.361242}, {1., 0.}}, {
           {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
            ArrowBox[{{1, 2}, {1, 3}, {1, 4}, {1, 8}, {1, 11}, {1, 15}, {1, 
             16}, {1, 17}, {2, 3}, {2, 4}, {2, 5}, {2, 9}, {2, 12}, {2, 16}, {
             2, 17}, {3, 4}, {3, 5}, {3, 6}, {3, 10}, {3, 13}, {3, 17}, {4, 
             5}, {4, 6}, {4, 7}, {4, 11}, {4, 14}, {5, 6}, {5, 7}, {5, 8}, {5,
              12}, {5, 15}, {6, 7}, {6, 8}, {6, 9}, {6, 13}, {6, 16}, {7, 
             8}, {7, 9}, {7, 10}, {7, 14}, {7, 17}, {8, 9}, {8, 10}, {8, 
             11}, {8, 15}, {9, 10}, {9, 11}, {9, 12}, {9, 16}, {10, 11}, {10, 
             12}, {10, 13}, {10, 17}, {11, 12}, {11, 13}, {11, 14}, {12, 
             13}, {12, 14}, {12, 15}, {13, 14}, {13, 15}, {13, 16}, {14, 
             15}, {14, 16}, {14, 17}, {15, 16}, {15, 17}, {16, 17}}, 
             0.022542199365922916`]}, 
           {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
            DiskBox[1, 0.022542199365922916], 
            DiskBox[2, 0.022542199365922916], 
            DiskBox[3, 0.022542199365922916], 
            DiskBox[4, 0.022542199365922916], 
            DiskBox[5, 0.022542199365922916], 
            DiskBox[6, 0.022542199365922916], 
            DiskBox[7, 0.022542199365922916], 
            DiskBox[8, 0.022542199365922916], 
            DiskBox[9, 0.022542199365922916], 
            DiskBox[10, 0.022542199365922916], 
            DiskBox[11, 0.022542199365922916], 
            DiskBox[12, 0.022542199365922916], 
            DiskBox[13, 0.022542199365922916], 
            DiskBox[14, 0.022542199365922916], 
            DiskBox[15, 0.022542199365922916], 
            DiskBox[16, 0.022542199365922916], 
            DiskBox[17, 0.022542199365922916]}}]],
        MouseAppearanceTag["NetworkGraphics"]],
       AllowKernelInitialization->False]],
     DefaultBaseStyle->{
      "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
     FormatType->TraditionalForm,
     FrameTicks->None]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"Circulant\"\>", ",", 
      RowBox[{"{", 
       RowBox[{"17", ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "3", ",", "4", ",", "5"}], "}"}]}], "}"}]}], "}"}],
     "\[Rule]", 
    GraphicsBox[
     NamespaceBox["NetworkGraphics",
      DynamicModuleBox[{Typeset`graph = HoldComplete[
        Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17}, {
         Null, 
          SparseArray[
          Automatic, {17, 17}, 0, {
           1, {{0, 8, 16, 24, 32, 40, 48, 56, 64, 72, 80, 88, 96, 104, 112, 
             120, 128, 136}, {{2}, {4}, {5}, {6}, {13}, {14}, {15}, {17}, {
             1}, {3}, {5}, {6}, {7}, {14}, {15}, {16}, {2}, {4}, {6}, {7}, {
             8}, {15}, {16}, {17}, {1}, {3}, {5}, {7}, {8}, {9}, {16}, {17}, {
             1}, {2}, {4}, {6}, {8}, {9}, {10}, {17}, {1}, {2}, {3}, {5}, {
             7}, {9}, {10}, {11}, {2}, {3}, {4}, {6}, {8}, {10}, {11}, {12}, {
             3}, {4}, {5}, {7}, {9}, {11}, {12}, {13}, {4}, {5}, {6}, {8}, {
             10}, {12}, {13}, {14}, {5}, {6}, {7}, {9}, {11}, {13}, {14}, {
             15}, {6}, {7}, {8}, {10}, {12}, {14}, {15}, {16}, {7}, {8}, {
             9}, {11}, {13}, {15}, {16}, {17}, {1}, {8}, {9}, {10}, {12}, {
             14}, {16}, {17}, {1}, {2}, {9}, {10}, {11}, {13}, {15}, {17}, {
             1}, {2}, {3}, {10}, {11}, {12}, {14}, {16}, {2}, {3}, {4}, {
             11}, {12}, {13}, {15}, {17}, {1}, {3}, {4}, {5}, {12}, {13}, {
             14}, {16}}}, Pattern}]}, {
         VertexCoordinates -> {{0.932472, 0.361242}, {0.739009, 0.673696}, {
            0.445738, 0.895163}, {0.0922684, 0.995734}, {-0.273663, 
            0.961826}, {-0.602635, 0.798017}, {-0.850217, 
            0.526432}, {-0.982973, 
            0.18375}, {-0.982973, -0.18375}, {-0.850217, -0.526432}, \
{-0.602635, -0.798017}, {-0.273663, -0.961826}, {0.0922684, -0.995734}, {
            0.445738, -0.895163}, {0.739009, -0.673696}, {
            0.932472, -0.361242}, {1., 0}}}]]}, 
       TagBox[
        GraphicsGroupBox[
         GraphicsComplexBox[{{0.932472, 0.361242}, {0.739009, 0.673696}, {
          0.445738, 0.895163}, {0.0922684, 0.995734}, {-0.273663, 
          0.961826}, {-0.602635, 0.798017}, {-0.850217, 0.526432}, {-0.982973,
           0.18375}, {-0.982973, -0.18375}, {-0.850217, -0.526432}, \
{-0.602635, -0.798017}, {-0.273663, -0.961826}, {0.0922684, -0.995734}, {
          0.445738, -0.895163}, {0.739009, -0.673696}, {
          0.932472, -0.361242}, {1., 0.}}, {
           {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
            ArrowBox[{{1, 2}, {1, 4}, {1, 5}, {1, 6}, {1, 13}, {1, 14}, {1, 
             15}, {1, 17}, {2, 3}, {2, 5}, {2, 6}, {2, 7}, {2, 14}, {2, 15}, {
             2, 16}, {3, 4}, {3, 6}, {3, 7}, {3, 8}, {3, 15}, {3, 16}, {3, 
             17}, {4, 5}, {4, 7}, {4, 8}, {4, 9}, {4, 16}, {4, 17}, {5, 6}, {
             5, 8}, {5, 9}, {5, 10}, {5, 17}, {6, 7}, {6, 9}, {6, 10}, {6, 
             11}, {7, 8}, {7, 10}, {7, 11}, {7, 12}, {8, 9}, {8, 11}, {8, 
             12}, {8, 13}, {9, 10}, {9, 12}, {9, 13}, {9, 14}, {10, 11}, {10, 
             13}, {10, 14}, {10, 15}, {11, 12}, {11, 14}, {11, 15}, {11, 
             16}, {12, 13}, {12, 15}, {12, 16}, {12, 17}, {13, 14}, {13, 
             16}, {13, 17}, {14, 15}, {14, 17}, {15, 16}, {16, 17}}, 
             0.022542199365922916`]}, 
           {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
            DiskBox[1, 0.022542199365922916], 
            DiskBox[2, 0.022542199365922916], 
            DiskBox[3, 0.022542199365922916], 
            DiskBox[4, 0.022542199365922916], 
            DiskBox[5, 0.022542199365922916], 
            DiskBox[6, 0.022542199365922916], 
            DiskBox[7, 0.022542199365922916], 
            DiskBox[8, 0.022542199365922916], 
            DiskBox[9, 0.022542199365922916], 
            DiskBox[10, 0.022542199365922916], 
            DiskBox[11, 0.022542199365922916], 
            DiskBox[12, 0.022542199365922916], 
            DiskBox[13, 0.022542199365922916], 
            DiskBox[14, 0.022542199365922916], 
            DiskBox[15, 0.022542199365922916], 
            DiskBox[16, 0.022542199365922916], 
            DiskBox[17, 0.022542199365922916]}}]],
        MouseAppearanceTag["NetworkGraphics"]],
       AllowKernelInitialization->False]],
     DefaultBaseStyle->{
      "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
     FormatType->TraditionalForm,
     FrameTicks->None]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"Cycle\"\>", ",", "5"}], "}"}], "\[Rule]", 
    GraphicsBox[
     NamespaceBox["NetworkGraphics",
      DynamicModuleBox[{Typeset`graph = HoldComplete[
        Graph[{1, 2, 3, 4, 5}, {Null, 
          SparseArray[
          Automatic, {5, 5}, 0, {
           1, {{0, 2, 4, 6, 8, 10}, {{2}, {5}, {1}, {3}, {2}, {4}, {3}, {5}, {
             1}, {4}}}, Pattern}]}, {VertexCoordinates -> {{
             Rational[1, 2], 
             Rational[-1, 2] (1 + 2 5^Rational[-1, 2])^Rational[1, 2]}, {
            Rational[1, 4] (1 + 5^Rational[1, 2]), 
             Rational[1, 2] (Rational[1, 10] (5 - 5^Rational[1, 2]))^
              Rational[1, 2]}, {
            0, (Rational[1, 10] (5 + 5^Rational[1, 2]))^Rational[1, 2]}, {
            Rational[1, 4] (-1 - 5^Rational[1, 2]), 
             Rational[1, 2] (Rational[1, 10] (5 - 5^Rational[1, 2]))^
              Rational[1, 2]}, {
             Rational[-1, 2], 
             Rational[-1, 2] (1 + 2 5^Rational[-1, 2])^Rational[1, 2]}}}]]}, 
       TagBox[
        GraphicsGroupBox[
         GraphicsComplexBox[{{0.5, -0.6881909602355868}, {0.8090169943749475, 
          0.2628655560595668}, {0., 0.85065080835204}, {-0.8090169943749475, 
          0.2628655560595668}, {-0.5, -0.6881909602355868}}, {
           {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
            ArrowBox[{{1, 2}, {1, 5}, {2, 3}, {3, 4}, {4, 5}}, 
             0.019434941751084317`]}, 
           {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
            DiskBox[1, 0.019434941751084317], 
            DiskBox[2, 0.019434941751084317], 
            DiskBox[3, 0.019434941751084317], 
            DiskBox[4, 0.019434941751084317], 
            DiskBox[5, 0.019434941751084317]}}]],
        MouseAppearanceTag["NetworkGraphics"]],
       AllowKernelInitialization->False]],
     DefaultBaseStyle->{
      "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
     FormatType->TraditionalForm,
     FrameTicks->None]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"GeneralizedQuadrangle\"\>", ",", 
      RowBox[{"{", 
       RowBox[{"2", ",", "1"}], "}"}]}], "}"}], "\[Rule]", 
    GraphicsBox[
     NamespaceBox["NetworkGraphics",
      DynamicModuleBox[{Typeset`graph = HoldComplete[
        Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9}, {Null, 
          SparseArray[
          Automatic, {9, 9}, 0, {
           1, {{0, 4, 8, 12, 16, 20, 24, 28, 32, 36}, {{2}, {3}, {4}, {7}, {
             1}, {5}, {7}, {8}, {1}, {4}, {8}, {9}, {1}, {3}, {5}, {6}, {2}, {
             4}, {6}, {8}, {4}, {5}, {7}, {9}, {1}, {2}, {6}, {9}, {2}, {3}, {
             5}, {9}, {3}, {6}, {7}, {8}}}, Pattern}]}, {
         VertexCoordinates -> {{
            Rational[-1, 2] Rational[3, 7]^Rational[1, 2], Rational[1, 2] 
             7^Rational[-1, 2]}, {0, (-2) 7^Rational[-1, 2]}, {
            0, 3 7^Rational[-1, 2]}, {
            Rational[3, 7]^Rational[1, 2], 7^Rational[-1, 2]}, {
            Rational[3, 2] Rational[3, 7]^Rational[1, 2], Rational[-3, 2] 
             7^Rational[-1, 2]}, {0, -7^Rational[-1, 2]}, {
            Rational[-3, 2] Rational[3, 7]^Rational[1, 2], Rational[-3, 2] 
             7^Rational[-1, 2]}, {
            Rational[1, 2] Rational[3, 7]^Rational[1, 2], Rational[1, 2] 
             7^Rational[-1, 2]}, {-Rational[3, 7]^Rational[1, 2], 7^
             Rational[-1, 2]}}}]]}, 
       TagBox[
        GraphicsGroupBox[
         GraphicsComplexBox[{{-0.32732683535398854`, 0.1889822365046136}, {
          0., -0.7559289460184544}, {0., 1.1338934190276815`}, {
          0.6546536707079771, 0.3779644730092272}, {
          0.9819805060619656, -0.5669467095138407}, {
          0., -0.3779644730092272}, {-0.9819805060619656, \
-0.5669467095138407}, {0.32732683535398854`, 
          0.1889822365046136}, {-0.6546536707079771, 0.3779644730092272}}, {
           {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
            ArrowBox[{{1, 2}, {1, 3}, {1, 4}, {1, 7}, {2, 5}, {2, 7}, {2, 
             8}, {3, 4}, {3, 8}, {3, 9}, {4, 5}, {4, 6}, {5, 6}, {5, 8}, {6, 
             7}, {6, 9}, {7, 9}, {8, 9}}, 0.022318374742378577`]}, 
           {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
            DiskBox[1, 0.022318374742378577], 
            DiskBox[2, 0.022318374742378577], 
            DiskBox[3, 0.022318374742378577], 
            DiskBox[4, 0.022318374742378577], 
            DiskBox[5, 0.022318374742378577], 
            DiskBox[6, 0.022318374742378577], 
            DiskBox[7, 0.022318374742378577], 
            DiskBox[8, 0.022318374742378577], 
            DiskBox[9, 0.022318374742378577]}}]],
        MouseAppearanceTag["NetworkGraphics"]],
       AllowKernelInitialization->False]],
     DefaultBaseStyle->{
      "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
     FormatType->TraditionalForm,
     FrameTicks->None]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"JohnsonSkeleton\"\>", ",", "26"}], "}"}], "\[Rule]", 
    GraphicsBox[
     NamespaceBox["NetworkGraphics",
      DynamicModuleBox[{Typeset`graph = HoldComplete[
        Graph[{1, 2, 3, 4, 5, 6, 7, 8}, {Null, 
          SparseArray[
          Automatic, {8, 8}, 0, {
           1, {{0, 3, 6, 10, 14, 17, 20, 24, 28}, {{4}, {5}, {8}, {4}, {6}, {
             7}, {5}, {6}, {7}, {8}, {1}, {2}, {7}, {8}, {1}, {3}, {7}, {2}, {
             3}, {8}, {2}, {3}, {4}, {5}, {1}, {3}, {4}, {6}}}, Pattern}]}, {
         VertexCoordinates -> {{0.7071067811865472, -0.7071067811865477}, {0.,
            0.5499655487020798}, {-0.2828377203612027, 0.07856374202938428}, {
           0.7071067811865475, 
           0.7071067811865475}, {-0.7071067811865476, -0.7071067811865474}, {
           0., 0.23569466319457744`}, {-0.7071067811865474, 
           0.7071067811865476}, {0.2828523696090099, 
           0.07856030492295936}}}]]}, 
       TagBox[
        GraphicsGroupBox[
         GraphicsComplexBox[{{0.7071067811865472, -0.7071067811865477}, {0., 
          0.5499655487020798}, {-0.2828377203612027, 0.07856374202938428}, {
          0.7071067811865475, 
          0.7071067811865475}, {-0.7071067811865476, -0.7071067811865474}, {
          0., 0.23569466319457744`}, {-0.7071067811865474, 
          0.7071067811865476}, {0.2828523696090099, 0.07856030492295936}}, {
           {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
            ArrowBox[{{1, 4}, {1, 5}, {1, 8}, {2, 4}, {2, 6}, {2, 7}, {3, 
             5}, {3, 6}, {3, 7}, {3, 8}, {4, 7}, {4, 8}, {5, 7}, {6, 8}}, 
             0.017674226532102905`]}, 
           {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
            DiskBox[1, 0.017674226532102905], 
            DiskBox[2, 0.017674226532102905], 
            DiskBox[3, 0.017674226532102905], 
            DiskBox[4, 0.017674226532102905], 
            DiskBox[5, 0.017674226532102905], 
            DiskBox[6, 0.017674226532102905], 
            DiskBox[7, 0.017674226532102905], 
            DiskBox[8, 0.017674226532102905]}}]],
        MouseAppearanceTag["NetworkGraphics"]],
       AllowKernelInitialization->False]],
     DefaultBaseStyle->{
      "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
     FormatType->TraditionalForm,
     FrameTicks->None]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"Paley\"\>", ",", "13"}], "}"}], "\[Rule]", 
    GraphicsBox[
     NamespaceBox["NetworkGraphics",
      DynamicModuleBox[{Typeset`graph = HoldComplete[
        Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13}, {Null, 
          SparseArray[
          Automatic, {13, 13}, 0, {
           1, {{0, 6, 12, 18, 24, 30, 36, 42, 48, 54, 60, 66, 72, 78}, {{2}, {
             4}, {5}, {10}, {11}, {13}, {1}, {3}, {5}, {6}, {11}, {12}, {2}, {
             4}, {6}, {7}, {12}, {13}, {1}, {3}, {5}, {7}, {8}, {13}, {1}, {
             2}, {4}, {6}, {8}, {9}, {2}, {3}, {5}, {7}, {9}, {10}, {3}, {
             4}, {6}, {8}, {10}, {11}, {4}, {5}, {7}, {9}, {11}, {12}, {5}, {
             6}, {8}, {10}, {12}, {13}, {1}, {6}, {7}, {9}, {11}, {13}, {1}, {
             2}, {7}, {8}, {10}, {12}, {2}, {3}, {8}, {9}, {11}, {13}, {1}, {
             3}, {4}, {9}, {10}, {12}}}, Pattern}]}, {
         VertexCoordinates -> {{0.885456, 0.464723}, {0.568065, 0.822984}, {
            0.120537, 0.992709}, {-0.354605, 0.935016}, {-0.748511, 
            0.663123}, {-0.970942, 
            0.239316}, {-0.970942, -0.239316}, {-0.748511, -0.663123}, \
{-0.354605, -0.935016}, {0.120537, -0.992709}, {0.568065, -0.822984}, {
            0.885456, -0.464723}, {1., 0}}}]]}, 
       TagBox[
        GraphicsGroupBox[
         GraphicsComplexBox[{{0.885456, 0.464723}, {0.568065, 0.822984}, {
          0.120537, 0.992709}, {-0.354605, 0.935016}, {-0.748511, 
          0.663123}, {-0.970942, 
          0.239316}, {-0.970942, -0.239316}, {-0.748511, -0.663123}, \
{-0.354605, -0.935016}, {0.120537, -0.992709}, {0.568065, -0.822984}, {
          0.885456, -0.464723}, {1., 0.}}, {
           {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
            ArrowBox[{{1, 2}, {1, 4}, {1, 5}, {1, 10}, {1, 11}, {1, 13}, {2, 
             3}, {2, 5}, {2, 6}, {2, 11}, {2, 12}, {3, 4}, {3, 6}, {3, 7}, {3,
              12}, {3, 13}, {4, 5}, {4, 7}, {4, 8}, {4, 13}, {5, 6}, {5, 8}, {
             5, 9}, {6, 7}, {6, 9}, {6, 10}, {7, 8}, {7, 10}, {7, 11}, {8, 
             9}, {8, 11}, {8, 12}, {9, 10}, {9, 12}, {9, 13}, {10, 11}, {10, 
             13}, {11, 12}, {12, 13}}, 0.022493037801096516`]}, 
           {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
            DiskBox[1, 0.022493037801096516], 
            DiskBox[2, 0.022493037801096516], 
            DiskBox[3, 0.022493037801096516], 
            DiskBox[4, 0.022493037801096516], 
            DiskBox[5, 0.022493037801096516], 
            DiskBox[6, 0.022493037801096516], 
            DiskBox[7, 0.022493037801096516], 
            DiskBox[8, 0.022493037801096516], 
            DiskBox[9, 0.022493037801096516], 
            DiskBox[10, 0.022493037801096516], 
            DiskBox[11, 0.022493037801096516], 
            DiskBox[12, 0.022493037801096516], 
            DiskBox[13, 0.022493037801096516]}}]],
        MouseAppearanceTag["NetworkGraphics"]],
       AllowKernelInitialization->False]],
     DefaultBaseStyle->{
      "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
     FormatType->TraditionalForm,
     FrameTicks->None]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"Paley\"\>", ",", "17"}], "}"}], "\[Rule]", 
    GraphicsBox[
     NamespaceBox["NetworkGraphics",
      DynamicModuleBox[{Typeset`graph = HoldComplete[
        Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17}, {
         Null, 
          SparseArray[
          Automatic, {17, 17}, 0, {
           1, {{0, 8, 16, 24, 32, 40, 48, 56, 64, 72, 80, 88, 96, 104, 112, 
             120, 128, 136}, {{2}, {3}, {5}, {9}, {10}, {14}, {16}, {17}, {
             1}, {3}, {4}, {6}, {10}, {11}, {15}, {17}, {1}, {2}, {4}, {5}, {
             7}, {11}, {12}, {16}, {2}, {3}, {5}, {6}, {8}, {12}, {13}, {
             17}, {1}, {3}, {4}, {6}, {7}, {9}, {13}, {14}, {2}, {4}, {5}, {
             7}, {8}, {10}, {14}, {15}, {3}, {5}, {6}, {8}, {9}, {11}, {15}, {
             16}, {4}, {6}, {7}, {9}, {10}, {12}, {16}, {17}, {1}, {5}, {7}, {
             8}, {10}, {11}, {13}, {17}, {1}, {2}, {6}, {8}, {9}, {11}, {
             12}, {14}, {2}, {3}, {7}, {9}, {10}, {12}, {13}, {15}, {3}, {
             4}, {8}, {10}, {11}, {13}, {14}, {16}, {4}, {5}, {9}, {11}, {
             12}, {14}, {15}, {17}, {1}, {5}, {6}, {10}, {12}, {13}, {15}, {
             16}, {2}, {6}, {7}, {11}, {13}, {14}, {16}, {17}, {1}, {3}, {
             7}, {8}, {12}, {14}, {15}, {17}, {1}, {2}, {4}, {8}, {9}, {13}, {
             15}, {16}}}, Pattern}]}, {
         VertexCoordinates -> {{0.932472, 0.361242}, {0.739009, 0.673696}, {
            0.445738, 0.895163}, {0.0922684, 0.995734}, {-0.273663, 
            0.961826}, {-0.602635, 0.798017}, {-0.850217, 
            0.526432}, {-0.982973, 
            0.18375}, {-0.982973, -0.18375}, {-0.850217, -0.526432}, \
{-0.602635, -0.798017}, {-0.273663, -0.961826}, {0.0922684, -0.995734}, {
            0.445738, -0.895163}, {0.739009, -0.673696}, {
            0.932472, -0.361242}, {1., 0}}}]]}, 
       TagBox[
        GraphicsGroupBox[
         GraphicsComplexBox[{{0.932472, 0.361242}, {0.739009, 0.673696}, {
          0.445738, 0.895163}, {0.0922684, 0.995734}, {-0.273663, 
          0.961826}, {-0.602635, 0.798017}, {-0.850217, 0.526432}, {-0.982973,
           0.18375}, {-0.982973, -0.18375}, {-0.850217, -0.526432}, \
{-0.602635, -0.798017}, {-0.273663, -0.961826}, {0.0922684, -0.995734}, {
          0.445738, -0.895163}, {0.739009, -0.673696}, {
          0.932472, -0.361242}, {1., 0.}}, {
           {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
            ArrowBox[{{1, 2}, {1, 3}, {1, 5}, {1, 9}, {1, 10}, {1, 14}, {1, 
             16}, {1, 17}, {2, 3}, {2, 4}, {2, 6}, {2, 10}, {2, 11}, {2, 
             15}, {2, 17}, {3, 4}, {3, 5}, {3, 7}, {3, 11}, {3, 12}, {3, 
             16}, {4, 5}, {4, 6}, {4, 8}, {4, 12}, {4, 13}, {4, 17}, {5, 6}, {
             5, 7}, {5, 9}, {5, 13}, {5, 14}, {6, 7}, {6, 8}, {6, 10}, {6, 
             14}, {6, 15}, {7, 8}, {7, 9}, {7, 11}, {7, 15}, {7, 16}, {8, 
             9}, {8, 10}, {8, 12}, {8, 16}, {8, 17}, {9, 10}, {9, 11}, {9, 
             13}, {9, 17}, {10, 11}, {10, 12}, {10, 14}, {11, 12}, {11, 13}, {
             11, 15}, {12, 13}, {12, 14}, {12, 16}, {13, 14}, {13, 15}, {13, 
             17}, {14, 15}, {14, 16}, {15, 16}, {15, 17}, {16, 17}}, 
             0.022542199365922916`]}, 
           {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
            DiskBox[1, 0.022542199365922916], 
            DiskBox[2, 0.022542199365922916], 
            DiskBox[3, 0.022542199365922916], 
            DiskBox[4, 0.022542199365922916], 
            DiskBox[5, 0.022542199365922916], 
            DiskBox[6, 0.022542199365922916], 
            DiskBox[7, 0.022542199365922916], 
            DiskBox[8, 0.022542199365922916], 
            DiskBox[9, 0.022542199365922916], 
            DiskBox[10, 0.022542199365922916], 
            DiskBox[11, 0.022542199365922916], 
            DiskBox[12, 0.022542199365922916], 
            DiskBox[13, 0.022542199365922916], 
            DiskBox[14, 0.022542199365922916], 
            DiskBox[15, 0.022542199365922916], 
            DiskBox[16, 0.022542199365922916], 
            DiskBox[17, 0.022542199365922916]}}]],
        MouseAppearanceTag["NetworkGraphics"]],
       AllowKernelInitialization->False]],
     DefaultBaseStyle->{
      "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
     FormatType->TraditionalForm,
     FrameTicks->None]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"Paley\"\>", ",", "25"}], "}"}], "\[Rule]", 
    GraphicsBox[
     NamespaceBox["NetworkGraphics",
      DynamicModuleBox[{Typeset`graph = HoldComplete[
        Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 
         19, 20, 21, 22, 23, 24, 25}, {Null, 
          SparseArray[
          Automatic, {25, 25}, 0, {
           1, {{0, 12, 24, 36, 48, 60, 72, 84, 96, 108, 120, 132, 144, 156, 
             168, 180, 192, 204, 216, 228, 240, 252, 264, 276, 288, 300}, {{
             2}, {3}, {4}, {5}, {6}, {7}, {8}, {9}, {10}, {11}, {12}, {13}, {
             1}, {3}, {4}, {5}, {6}, {7}, {14}, {15}, {16}, {17}, {18}, {
             19}, {1}, {2}, {4}, {5}, {8}, {9}, {14}, {15}, {20}, {21}, {
             22}, {23}, {1}, {2}, {3}, {5}, {10}, {11}, {16}, {17}, {20}, {
             21}, {24}, {25}, {1}, {2}, {3}, {4}, {12}, {13}, {18}, {19}, {
             22}, {23}, {24}, {25}, {1}, {2}, {8}, {9}, {10}, {12}, {14}, {
             16}, {17}, {18}, {22}, {24}, {1}, {2}, {8}, {9}, {11}, {13}, {
             15}, {16}, {17}, {19}, {23}, {25}, {1}, {3}, {6}, {7}, {10}, {
             12}, {15}, {16}, {20}, {22}, {23}, {25}, {1}, {3}, {6}, {7}, {
             11}, {13}, {14}, {17}, {21}, {22}, {23}, {24}, {1}, {4}, {6}, {
             8}, {12}, {13}, {14}, {17}, {19}, {20}, {21}, {25}, {1}, {4}, {
             7}, {9}, {12}, {13}, {15}, {16}, {18}, {20}, {21}, {24}, {1}, {
             5}, {6}, {8}, {10}, {11}, {15}, {18}, {19}, {21}, {23}, {24}, {
             1}, {5}, {7}, {9}, {10}, {11}, {14}, {18}, {19}, {20}, {22}, {
             25}, {2}, {3}, {6}, {9}, {10}, {13}, {16}, {18}, {19}, {20}, {
             21}, {23}, {2}, {3}, {7}, {8}, {11}, {12}, {17}, {18}, {19}, {
             20}, {21}, {22}, {2}, {4}, {6}, {7}, {8}, {11}, {14}, {18}, {
             20}, {23}, {24}, {25}, {2}, {4}, {6}, {7}, {9}, {10}, {15}, {
             19}, {21}, {22}, {24}, {25}, {2}, {5}, {6}, {11}, {12}, {13}, {
             14}, {15}, {16}, {21}, {22}, {25}, {2}, {5}, {7}, {10}, {12}, {
             13}, {14}, {15}, {17}, {20}, {23}, {24}, {3}, {4}, {8}, {10}, {
             11}, {13}, {14}, {15}, {16}, {19}, {22}, {24}, {3}, {4}, {9}, {
             10}, {11}, {12}, {14}, {15}, {17}, {18}, {23}, {25}, {3}, {5}, {
             6}, {8}, {9}, {13}, {15}, {17}, {18}, {20}, {24}, {25}, {3}, {
             5}, {7}, {8}, {9}, {12}, {14}, {16}, {19}, {21}, {24}, {25}, {
             4}, {5}, {6}, {9}, {11}, {12}, {16}, {17}, {19}, {20}, {22}, {
             23}, {4}, {5}, {7}, {8}, {10}, {13}, {16}, {17}, {18}, {21}, {
             22}, {23}}}, Pattern}]}, {VertexCoordinates -> CompressedData["
1:eJxTTMoPSmViYGCQBGIQ3Xou+43Q1fP2Wkf7ji38984+4tnaXXxX79lLGXj8
2sL1xt7H4osYf/47eyNZK9v3xy7br0s1kjn//Kn9sfabp7cFP7ePkE5W38Py
2n4al9aqOtWH9q1qnapP897bb1ctOij55/h+qPx+mDwDCvhgv+fMhsBr79/b
F937f5xTeIN9MBtfxkuuA/v779/+kr7//X6zSSwPuVa82L/svSnL8dQn+6Hq
98PU9x/6qhHTf93+bqLwzJ0H3u6H6reH6Ye6fz+a+/fD3D/DdOOB8C9v7Gdt
FZnwzf72fih/P4wPNX8/zHy5LqZapfOP9s/kmzuv/PHL/VD/7of5FypvD5eH
hO9+WPhC/WMP8w80vPfDwhsAPr/VUg==
           "]}]]}, 
       TagBox[GraphicsGroupBox[GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGCQBGIQ3Xou+43Q1fP2Wkf7ji38984+4tnaXXxX79lLGXj8
2sL1xt7H4osYf/47eyNZK9v3xy7br0s1kjn//Kn9sfabp7cFP7ePkE5W38Py
2n4al9aqOtWH9q1qnapP897bb1ctOij55/h+qPx+mDwDCvhgv+fMhsBr79/b
F937f5xTeIN9MBtfxkuuA/v779/+kr7//X6zSSwPuVa82L/svSnL8dQn+6Hq
98PU9x/6qhHTf93+bqLwzJ0H3u6H6reH6Ye6fz+a+/fD3D/DdOOB8C9v7Gdt
FZnwzf72fih/P4wPNX8/zHy5LqZapfOP9s/kmzuv/PHL/VD/7of5FypvD5eH
hO9+WPhC/WMP8w80vPfDwhsAPr/VUg==
          "], {
           {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
            ArrowBox[{{1, 2}, {1, 3}, {1, 4}, {1, 5}, {1, 6}, {1, 7}, {1, 
             8}, {1, 9}, {1, 10}, {1, 11}, {1, 12}, {1, 13}, {2, 3}, {2, 4}, {
             2, 5}, {2, 6}, {2, 7}, {2, 14}, {2, 15}, {2, 16}, {2, 17}, {2, 
             18}, {2, 19}, {3, 4}, {3, 5}, {3, 8}, {3, 9}, {3, 14}, {3, 15}, {
             3, 20}, {3, 21}, {3, 22}, {3, 23}, {4, 5}, {4, 10}, {4, 11}, {4, 
             16}, {4, 17}, {4, 20}, {4, 21}, {4, 24}, {4, 25}, {5, 12}, {5, 
             13}, {5, 18}, {5, 19}, {5, 22}, {5, 23}, {5, 24}, {5, 25}, {6, 
             8}, {6, 9}, {6, 10}, {6, 12}, {6, 14}, {6, 16}, {6, 17}, {6, 
             18}, {6, 22}, {6, 24}, {7, 8}, {7, 9}, {7, 11}, {7, 13}, {7, 
             15}, {7, 16}, {7, 17}, {7, 19}, {7, 23}, {7, 25}, {8, 10}, {8, 
             12}, {8, 15}, {8, 16}, {8, 20}, {8, 22}, {8, 23}, {8, 25}, {9, 
             11}, {9, 13}, {9, 14}, {9, 17}, {9, 21}, {9, 22}, {9, 23}, {9, 
             24}, {10, 12}, {10, 13}, {10, 14}, {10, 17}, {10, 19}, {10, 
             20}, {10, 21}, {10, 25}, {11, 12}, {11, 13}, {11, 15}, {11, 
             16}, {11, 18}, {11, 20}, {11, 21}, {11, 24}, {12, 15}, {12, 
             18}, {12, 19}, {12, 21}, {12, 23}, {12, 24}, {13, 14}, {13, 
             18}, {13, 19}, {13, 20}, {13, 22}, {13, 25}, {14, 16}, {14, 
             18}, {14, 19}, {14, 20}, {14, 21}, {14, 23}, {15, 17}, {15, 
             18}, {15, 19}, {15, 20}, {15, 21}, {15, 22}, {16, 18}, {16, 
             20}, {16, 23}, {16, 24}, {16, 25}, {17, 19}, {17, 21}, {17, 
             22}, {17, 24}, {17, 25}, {18, 21}, {18, 22}, {18, 25}, {19, 
             20}, {19, 23}, {19, 24}, {20, 22}, {20, 24}, {21, 23}, {21, 
             25}, {22, 24}, {22, 25}, {23, 24}, {23, 25}}, 
             0.02257943939285631]}, 
           {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
            DiskBox[1, 0.02257943939285631], DiskBox[2, 0.02257943939285631], 
            DiskBox[3, 0.02257943939285631], DiskBox[4, 0.02257943939285631], 
            DiskBox[5, 0.02257943939285631], DiskBox[6, 0.02257943939285631], 
            DiskBox[7, 0.02257943939285631], DiskBox[8, 0.02257943939285631], 
            DiskBox[9, 0.02257943939285631], DiskBox[10, 0.02257943939285631],
             DiskBox[11, 0.02257943939285631], 
            DiskBox[12, 0.02257943939285631], 
            DiskBox[13, 0.02257943939285631], 
            DiskBox[14, 0.02257943939285631], 
            DiskBox[15, 0.02257943939285631], 
            DiskBox[16, 0.02257943939285631], 
            DiskBox[17, 0.02257943939285631], 
            DiskBox[18, 0.02257943939285631], 
            DiskBox[19, 0.02257943939285631], 
            DiskBox[20, 0.02257943939285631], 
            DiskBox[21, 0.02257943939285631], 
            DiskBox[22, 0.02257943939285631], 
            DiskBox[23, 0.02257943939285631], 
            DiskBox[24, 0.02257943939285631], 
            DiskBox[25, 0.02257943939285631]}}]],
        MouseAppearanceTag["NetworkGraphics"]],
       AllowKernelInitialization->False]],
     DefaultBaseStyle->{
      "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
     FormatType->TraditionalForm,
     FrameTicks->None]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"Paley\"\>", ",", "29"}], "}"}], "\[Rule]", 
    GraphicsBox[
     NamespaceBox["NetworkGraphics",
      DynamicModuleBox[{Typeset`graph = HoldComplete[
        Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 
         19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29}, {Null, 
          SparseArray[
          Automatic, {29, 29}, 0, {
           1, {{0, 14, 28, 42, 56, 70, 84, 98, 112, 126, 140, 154, 168, 182, 
             196, 210, 224, 238, 252, 266, 280, 294, 308, 322, 336, 350, 364, 
             378, 392, 406}, CompressedData["
1:eJwdz8d1w0AMRVFqcuTkRI4WbkklqAF343oN8Bxs7grv/3x/P19yHMff6zjg
DsKFVOZMbcx1vV8UpG3IHXQTBjAulgHYlAOsT3UC3i8mQO7MbaEIlyAfSr9Q
VCjQGeu4UUxqUEhtbgBXBhBzX/CPcaEtKJVxEYA0DpDrvCmWWQ8obW2GYe4E
1A6dHMt8ALVxE4FlZwT0uanEsJAAAz4whWExg+ZFuMauVADrpsJgVq64fTNp
Mas0nA4flMOs2nE7EdpjVhvPdirNiV19PtuZsgHDxnq2c+0ihs3r2S6MT1i2
btwu7Zmx7No4XblQMAz+4XbtY8Wy/Q8URRoL
             "]}, Pattern}]}, {
         VertexCoordinates -> {{0.976621, 0.21497}, {0.907575, 0.419889}, {
            0.796093, 0.605174}, {0.647386, 0.762162}, {0.468408, 0.883512}, {
            0.267528, 0.96355}, {0.0541389, 0.998533}, {-0.161782, 
            0.986827}, {-0.370138, 0.928977}, {-0.561187, 
            0.827689}, {-0.725995, 0.687699}, {-0.856857, 
            0.515554}, {-0.947653, 0.319302}, {-0.994138, 
            0.108119}, {-0.994138, -0.108119}, {-0.947653, -0.319302}, \
{-0.856857, -0.515554}, {-0.725995, -0.687699}, {-0.561187, -0.827689}, \
{-0.370138, -0.928977}, {-0.161782, -0.986827}, {0.0541389, -0.998533}, {
            0.267528, -0.96355}, {0.468408, -0.883512}, {
            0.647386, -0.762162}, {0.796093, -0.605174}, {
            0.907575, -0.419889}, {0.976621, -0.21497}, {1., 0}}}]]}, 
       TagBox[GraphicsGroupBox[GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGCQBWIQbXT807oqh/f2dxrO8yu3nLbfEvl15y2ut/aa5/fI
lN2/Zd+Z9IltRuVL+4tlPnenxj62n5FjcyNp+xP7BAWOCQuTX9jbXvbuSf11
1175i/HXXa5v7CVebTikK3/RXviT4/m0q+/sBRkfcUrsWG2/3jG+6vfn9/Zr
c7uOu249sv/iy0pzsSnv7Y0LHLzDN1zf/7jP/Kfurrf2seJ1BXZfH+539fRY
klvzyn7a84N3I62f71+71z90IeMz+yAN7vj47Nf7N/pqSWXXP7B/OTMuSSf4
3f4KjsfLC/Ov2Lvs31b36/z7/dnNwhfXr92Nzt+Ppn4/mnn70ezbj+ae/Wju
3Y/mn/1o/t2PFh770cJrP1p47kcL7/1o8bEfLb72M4DBB3sGKAAAIBv1qg==

          "], {
           {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
            ArrowBox[CompressedData["
1:eJwVxUd1HTAQAMCvVe+r3g+hZAgmEKAhZecwb/58//36hs/n8+/X/wkQTgSR
RBFDAkmkkUEmWWSTBxQESFCgwUKEDB0mLNhwKKOSKqqpoY4iLXTQRTc99DLO
FNPMMMs8S6yyyTY77LLHBdfccMsdDzzzxhc//PInpDDCCie8iKKILra44kkl
rXTSyyBRVjnkkU9p5ZRXQUWVVFNTXW2010FHjTrrrpd+xppgokGTTDHDbOts
tGiTzbbaaY/zDl1y2RXX3HLXB5989sVX3/32L8SQQwk1tDDCiRhLrLHFHme8
mLBiw44DF76UU0s9jTTTziX3PPLMK59SyyizrLLLra3Ouuqup77W22q7nXb7
6Luffvsbc5xxx5tr3vnWXm+fc+/7ARjrGkA=
             "], 0.02258765427883147]}, 
           {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
            DiskBox[1, 0.02258765427883147], DiskBox[2, 0.02258765427883147], 
            DiskBox[3, 0.02258765427883147], DiskBox[4, 0.02258765427883147], 
            DiskBox[5, 0.02258765427883147], DiskBox[6, 0.02258765427883147], 
            DiskBox[7, 0.02258765427883147], DiskBox[8, 0.02258765427883147], 
            DiskBox[9, 0.02258765427883147], DiskBox[10, 0.02258765427883147],
             DiskBox[11, 0.02258765427883147], 
            DiskBox[12, 0.02258765427883147], 
            DiskBox[13, 0.02258765427883147], 
            DiskBox[14, 0.02258765427883147], 
            DiskBox[15, 0.02258765427883147], 
            DiskBox[16, 0.02258765427883147], 
            DiskBox[17, 0.02258765427883147], 
            DiskBox[18, 0.02258765427883147], 
            DiskBox[19, 0.02258765427883147], 
            DiskBox[20, 0.02258765427883147], 
            DiskBox[21, 0.02258765427883147], 
            DiskBox[22, 0.02258765427883147], 
            DiskBox[23, 0.02258765427883147], 
            DiskBox[24, 0.02258765427883147], 
            DiskBox[25, 0.02258765427883147], 
            DiskBox[26, 0.02258765427883147], 
            DiskBox[27, 0.02258765427883147], 
            DiskBox[28, 0.02258765427883147], 
            DiskBox[29, 0.02258765427883147]}}]],
        MouseAppearanceTag["NetworkGraphics"]],
       AllowKernelInitialization->False]],
     DefaultBaseStyle->{
      "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
     FormatType->TraditionalForm,
     FrameTicks->None]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"Paley\"\>", ",", "37"}], "}"}], "\[Rule]", 
    GraphicsBox[
     NamespaceBox["NetworkGraphics",
      DynamicModuleBox[{Typeset`graph = HoldComplete[
        Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 
         19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 
         36, 37}, {Null, 
          SparseArray[
          Automatic, {37, 37}, 0, {
           1, {{0, 18, 36, 54, 72, 90, 108, 126, 144, 162, 180, 198, 216, 234,
              252, 270, 288, 306, 324, 342, 360, 378, 396, 414, 432, 450, 468,
              486, 504, 522, 540, 558, 576, 594, 612, 630, 648, 
             666}, CompressedData["
1:eJwdkueNxSAYBJ8xToBzBgecGroSXgPXz1V7u/5jpNFIK42/4/v78xWfz+cP
nwCvkFGqtMnrwbpl3c/rCcIozkCKZgTZ/HULGScKoGwngP246SSpBqm6GcSf
TwApzQxI3VuQ4xJwMpUDNIMDOO8QitIFQDsuANiScLQpQbppBblFBMfkFUA/
bwDYiuHkRQ0y2J1EyARSUTYgo/MkYZRCKqsWZFoOEhlnkKq6A5nXEyBKFJy6
6QHsdgHEqYbStAOA22+AJDNQ2m4EWPwTgKQqh9P1ExMdAiDTBZx+mFnoDAGU
KaEMo2WhSwLovIIyTo6B7gjAFDWUaV7Y5wlidi8bOLNdGUgkzF61cKzbGChM
mb3uoLhlZx+ZsXrTQ1lW//aJFKu3A5x1O94+sWb2boS07efbJzHs3k+Qdn+9
fdKc3YcZkj9u9skKdh8tnAP/lIFUye6Tg3NegoF0xewzrgVjIfuYmtUtjoVb
koHyhtUdroVbEQsVLbMvuBZsxSxUdsy+ejqhTJio6tl9w7X8A5ZyM7Q=
             "]}, Pattern}]}, {
         VertexCoordinates -> {{0.985616, 0.169001}, {0.942877, 0.33314}, {
            0.873014, 0.487695}, {0.778036, 0.62822}, {0.660675, 0.750672}, {
            0.524307, 0.851529}, {0.372856, 0.927889}, {0.210679, 0.977555}, {
            0.0424412, 0.999099}, {-0.127018, 0.9919}, {-0.292823, 
            0.956167}, {-0.450204, 0.892926}, {-0.594633, 
            0.803997}, {-0.721956, 0.691939}, {-0.82851, 
            0.559975}, {-0.911228, 0.411901}, {-0.967733, 
            0.251978}, {-0.996397, 
            0.0848059}, {-0.996397, -0.0848059}, {-0.967733, -0.251978}, \
{-0.911228, -0.411901}, {-0.82851, -0.559975}, {-0.721956, -0.691939}, \
{-0.594633, -0.803997}, {-0.450204, -0.892926}, {-0.292823, -0.956167}, \
{-0.127018, -0.9919}, {0.0424412, -0.999099}, {0.210679, -0.977555}, {
            0.372856, -0.927889}, {0.524307, -0.851529}, {
            0.660675, -0.750672}, {0.778036, -0.62822}, {
            0.873014, -0.487695}, {0.942877, -0.33314}, {
            0.985616, -0.169001}, {1., 0}}}]]}, 
       TagBox[GraphicsGroupBox[GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGBQBWIQbed0doJW13v7U4/+KV9eeNR+2cUnSTw67+z/BNnn
awVdtZ+SHse3+/1r+xu8t8VSze7b13U9PrD66Qt7Lr2wKwlST+xFZU8+tVd5
ar9pt4NnI+sLe1tup0r54w/s2fgv79tp/9pevLk98/6d6/Y2eqtcXTa+tVeT
qepu/37KXisoMUfR4739tA7GmFu7ltp/e+1XPu/He3veXAYzBacD+8sezBFc
uve9vbSA4ro5ey/ttyoL6Hw9450990XFApULd/anf/jefXPSG/uCV8wnrdkf
71+5YNGr8F0v7c9cUalwlnq+P7jsl2OsyjN7YzHfdPXmV/s3V3/aEPD6ob1p
Utr84xpv9/9W5mGeFnPLfkWgh9Hq7+/2Z78PDs1QuGD/YbHUt+pH7/dbMjE9
v7Z1Kzp/P5r6/Wjm7Uezbz+ae/ajuXc/mn/2o/l3P1p47EcLr/1o4bkfLbz3
o8XHfrT42o8Wn/vR4ns/WnrYj5Ze9jOAwQd7BigAAIRbL8U=
          "], {
           {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
            ArrowBox[CompressedData["
1:eJwVxckVpSgAAMDPIouILCICAgJiOH2ZEDqByf82b+pS/e+///yFv9/vD/j9
/h9AgMECGFiBABuQwAAPErhBBgU8YIAXfBDBBRLIoYAblHCHFl7whhkWWGGD
L5wII4IoWtGGJNqRQgcKKKOCKnpQRxN9eMEUMyywxDtWWGOHIy644gc3PPC3
kIUtfNmWfVGLXsxyLmmpy7O0pS8voYSTlUiiiCaGWOLJTR7SSCeDTMroSgXd
qaaGWnrQi2baaKeDvvRjnAm2McUMs+xgjgVWWGeDvWzylW9ccs0tP7jjJ4+8
8sFfPvm3ilWu+2rWY3Xrufo1rc/6rnP9xCZ2oYQVTpzCi0vcookpvk1uatPb
sZ2b364tbHnr2yd3qaWRTnp5ySCjLHLsaje73c/92sMe97TX/VVaWXUor4KK
KqlbPWpqow/t9KWjTvrWWTf9GWucOU0wydwmm2K6PexpvY32ttkWW+043OGP
60hHPspRj+d43ekuF9ztiqvucc3N05/hjGc+6/mc7ezn5y8fffLFP7757scV
rnTdV73a1a9xvSGGO+TwhB5GeMOMKeZYYosjvnHGL92ppJp6etNM353vej/3
uOf95ZKf3PKbv1JLK73M+tReR/2e9oznbb29bfbRZ//GO753zu8/eCEzZw==

             "], 0.02259684200696155]}, 
           {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
            DiskBox[1, 0.02259684200696155], DiskBox[2, 0.02259684200696155], 
            DiskBox[3, 0.02259684200696155], DiskBox[4, 0.02259684200696155], 
            DiskBox[5, 0.02259684200696155], DiskBox[6, 0.02259684200696155], 
            DiskBox[7, 0.02259684200696155], DiskBox[8, 0.02259684200696155], 
            DiskBox[9, 0.02259684200696155], DiskBox[10, 0.02259684200696155],
             DiskBox[11, 0.02259684200696155], 
            DiskBox[12, 0.02259684200696155], 
            DiskBox[13, 0.02259684200696155], 
            DiskBox[14, 0.02259684200696155], 
            DiskBox[15, 0.02259684200696155], 
            DiskBox[16, 0.02259684200696155], 
            DiskBox[17, 0.02259684200696155], 
            DiskBox[18, 0.02259684200696155], 
            DiskBox[19, 0.02259684200696155], 
            DiskBox[20, 0.02259684200696155], 
            DiskBox[21, 0.02259684200696155], 
            DiskBox[22, 0.02259684200696155], 
            DiskBox[23, 0.02259684200696155], 
            DiskBox[24, 0.02259684200696155], 
            DiskBox[25, 0.02259684200696155], 
            DiskBox[26, 0.02259684200696155], 
            DiskBox[27, 0.02259684200696155], 
            DiskBox[28, 0.02259684200696155], 
            DiskBox[29, 0.02259684200696155], 
            DiskBox[30, 0.02259684200696155], 
            DiskBox[31, 0.02259684200696155], 
            DiskBox[32, 0.02259684200696155], 
            DiskBox[33, 0.02259684200696155], 
            DiskBox[34, 0.02259684200696155], 
            DiskBox[35, 0.02259684200696155], 
            DiskBox[36, 0.02259684200696155], 
            DiskBox[37, 0.02259684200696155]}}]],
        MouseAppearanceTag["NetworkGraphics"]],
       AllowKernelInitialization->False]],
     DefaultBaseStyle->{
      "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
     FormatType->TraditionalForm,
     FrameTicks->None]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"Paley\"\>", ",", "41"}], "}"}], "\[Rule]", 
    GraphicsBox[
     NamespaceBox["NetworkGraphics",
      DynamicModuleBox[{Typeset`graph = HoldComplete[
        Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 
         19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 
         36, 37, 38, 39, 40, 41}, {Null, 
          SparseArray[
          Automatic, {41, 41}, 0, {
           1, {{0, 20, 40, 60, 80, 100, 120, 140, 160, 180, 200, 220, 240, 
             260, 280, 300, 320, 340, 360, 380, 400, 420, 440, 460, 480, 500, 
             520, 540, 560, 580, 600, 620, 640, 660, 680, 700, 720, 740, 760, 
             780, 800, 820}, CompressedData["
1:eJwt0keO4zAURVFZOWcmBVKZqnmvpJdQG+j9z/o/ySMDhq8fcPjX339/f13H
cf54jvOhT9cLwiTNmo5xOSzrdl73z8fzwyjN8rbnQo3rtl/25+P6QRRnedEx
IYdp2w97o42TvCh7LtU478f5bZO0KCsm1DDp47y+bZqVVU0j42zOy75tlld1
QxuTXi57v2le1E1LE7NZLf3fmxZl03a0oZeNvnPftqzarqcNs+70nffGVd31
jDaW7XA9/23rpmecNtb99PzgTZuWcUEb23H5IEDZdlxImthPG0AAZdcLqWjh
uO4QACh7JtVAAye5RBBAyrgaRlq4bjcGAFIuhnGiBfqdlwAArZDjNNPE7fop
AJBKNc36eOyDDAJo1TBrcz72YQ4BtMOozXLBPioAgHaczLLaxz4uAYB2muk5
b9AnFQCQzppeExthnNYQQKsNvaYL+6yBAFKz0Gt6oM9bCCBdVnpMH/JFBwGU
OBgbAL7sAYAS93KHgK8YAFDiXMgK8jUHANLnXtwY9I2AANrnXrwE9q2EAGLc
i5/CvlMAQIt7CTLQ9wMAkD73EuawZyMA9see7iUqYM8nCKDFucQl7MUMgO/d
02tWsJcaAt+7p+esYa8MCOz9H/EZRSU=
             "]}, Pattern}]}, {
         VertexCoordinates -> {{0.98828, 0.152649}, {0.953396, 0.301721}, {
            0.896166, 0.44372}, {0.817929, 0.575319}, {0.720522, 0.693433}, {
            0.606225, 0.795293}, {0.47772, 0.878512}, {0.338017, 0.94114}, {
            0.190391, 0.981708}, {0.0383027, 0.999266}, {-0.114683, 
            0.993402}, {-0.264982, 0.964253}, {-0.409069, 
            0.912504}, {-0.543568, 0.839365}, {-0.665326, 
            0.746553}, {-0.771489, 0.636242}, {-0.85957, 
            0.511019}, {-0.927502, 0.373817}, {-0.973695, 
            0.227854}, {-0.997066, 
            0.0765493}, {-0.997066, -0.0765493}, {-0.973695, -0.227854}, \
{-0.927502, -0.373817}, {-0.85957, -0.511019}, {-0.771489, -0.636242}, \
{-0.665326, -0.746553}, {-0.543568, -0.839365}, {-0.409069, -0.912504}, \
{-0.264982, -0.964253}, {-0.114683, -0.993402}, {0.0383027, -0.999266}, {
            0.190391, -0.981708}, {0.338017, -0.94114}, {
            0.47772, -0.878512}, {0.606225, -0.795293}, {
            0.720522, -0.693433}, {0.817929, -0.575319}, {
            0.896166, -0.44372}, {0.953396, -0.301721}, {
            0.98828, -0.152649}, {1., 0}}}]]}, 
       TagBox[GraphicsGroupBox[GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGDQBGIQ/cTvZcLf+e/tyw2S5jN0HbYXTmEJsWh6Z/+N5+GM
VP/L9hYGOwNT1r6xFzJUnfQi9Y69a5peQaXOK/u9fRYpzJmP7DN7HdVb+J7b
c32WS59l8Mxeb8KCH4Zpj+0rZpv7cRW/tF/qqfni26R79r+mLzE6KvPGvqRW
nk9o0VX7yMVyiy7KvrN3/GxZvjvuhL2YuPtTtaz39rV5m8Iz5yy2P6N2YMOf
n+/tNW0yyu5G793/+O+Ov59Ovrc/fJVRoPzrhf1tNk3Smrff2V9bY7xPX+/W
/j7m9dOsjd/a29x7sv1FysP9lWy8f4XvvLK33ZZ6INLr6f4zid9lDz9+bv9S
g30z54YX+5e9O6UnEfPEPujt5Y8zGl/vv+43pcUl6oH9Hf35ayTWvd1/WTRH
ed6b6/Zur1dkNWm83/9ikeLjQK2z9nHN+758e/5+P6ssh8qeGZvR+fvR1O9H
M28/mn370dyzH829+9H8sx/Nv/vRwmM/WnjtRwvP/WjhvR8tPvajxdd+tPjc
jxbf+9HSw3609LIfLT3tR0tv+xnA4IM9AxQAAHzvVm0=
          "], {
           {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
            ArrowBox[CompressedData["
1:eJwVxdkVrSYAAMDLpiAiAoKIqCyu7bwSXgPpJ9XmZH4m//3nz1/4+/3+Bb/f
/wMIECCgAQx0gAMFDLDAAQ8CSCCDAi5wgxd8EEEMG9jCDnLYQw0n6OAMF7jC
DAus8IYP/BBGBLWIIo56JJBBFs3Io4AiKqiiEz3oxQQ3mGKGeyzwgCfssMcL
XvGGKz7xhV/8kYa0hJGOCDIQSSyZyUICiWQnJ7nITb6mbWjTNbwZGtmMjWt8
E5q12ZqjuZq7eVraspa3fSvbsVXt3C7t2sZ2b1N7t0/7UkY72lNBR6qopp4G
GulGD5rpQ1/6sY5xJtjAFNPMsIWtbGM7S6ywl30d7/pu6GSnO9NNXehit3dH
l7vafbzngks+csMnbvnKN37wxAs/e9EP/dirfupt7/rY733qc1/7SwxCCiW0
sMKJWWziEFkUcYp7kMM46MEMbpgHP+xDGspQh2t45CiVNHKSs/RykYfMsspT
3vId1ajHabSjH5cxjGks4zle4zN+SiujrHJqUUGtKquqLnWrVxs9aadnHfSq
oy761Ld+9GcmY81svFlNNJup5jKPeSc7uclPyxSnbdqnc7qnd/qss7NdbLCb
3e1hL/vYz83Ou+BWt7vDJXe7d/bzMq9znI85zXl+5s8vPvjoN5989sW/S1jW
ZVv2JS9lqcsX1hDDHo5QQg3nGtdtPda01vVcr7jFPaaY4xmveG/7dmx5K9u1
3duzH3vay173e3/290hHPupxHs/xHl/KqaQzXelNXy655ivf+Su1nOUuTz3r
VZ/6ntd5n+/5Xff1XN/93O/zPt/7/QfZhEWK
             "], 0.022599552620588992`]}, 
           {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
            DiskBox[1, 0.022599552620588992], 
            DiskBox[2, 0.022599552620588992], 
            DiskBox[3, 0.022599552620588992], 
            DiskBox[4, 0.022599552620588992], 
            DiskBox[5, 0.022599552620588992], 
            DiskBox[6, 0.022599552620588992], 
            DiskBox[7, 0.022599552620588992], 
            DiskBox[8, 0.022599552620588992], 
            DiskBox[9, 0.022599552620588992], 
            DiskBox[10, 0.022599552620588992], 
            DiskBox[11, 0.022599552620588992], 
            DiskBox[12, 0.022599552620588992], 
            DiskBox[13, 0.022599552620588992], 
            DiskBox[14, 0.022599552620588992], 
            DiskBox[15, 0.022599552620588992], 
            DiskBox[16, 0.022599552620588992], 
            DiskBox[17, 0.022599552620588992], 
            DiskBox[18, 0.022599552620588992], 
            DiskBox[19, 0.022599552620588992], 
            DiskBox[20, 0.022599552620588992], 
            DiskBox[21, 0.022599552620588992], 
            DiskBox[22, 0.022599552620588992], 
            DiskBox[23, 0.022599552620588992], 
            DiskBox[24, 0.022599552620588992], 
            DiskBox[25, 0.022599552620588992], 
            DiskBox[26, 0.022599552620588992], 
            DiskBox[27, 0.022599552620588992], 
            DiskBox[28, 0.022599552620588992], 
            DiskBox[29, 0.022599552620588992], 
            DiskBox[30, 0.022599552620588992], 
            DiskBox[31, 0.022599552620588992], 
            DiskBox[32, 0.022599552620588992], 
            DiskBox[33, 0.022599552620588992], 
            DiskBox[34, 0.022599552620588992], 
            DiskBox[35, 0.022599552620588992], 
            DiskBox[36, 0.022599552620588992], 
            DiskBox[37, 0.022599552620588992], 
            DiskBox[38, 0.022599552620588992], 
            DiskBox[39, 0.022599552620588992], 
            DiskBox[40, 0.022599552620588992], 
            DiskBox[41, 0.022599552620588992]}}]],
        MouseAppearanceTag["NetworkGraphics"]],
       AllowKernelInitialization->False]],
     DefaultBaseStyle->{
      "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
     FormatType->TraditionalForm,
     FrameTicks->None]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"Paley\"\>", ",", "49"}], "}"}], "\[Rule]", 
    GraphicsBox[
     NamespaceBox["NetworkGraphics",
      DynamicModuleBox[{Typeset`graph = HoldComplete[
        Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 
         19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 
         36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49}, {Null, 
          SparseArray[
          Automatic, {49, 49}, 0, {
           1, {{0, 24, 48, 72, 96, 120, 144, 168, 192, 216, 240, 264, 288, 
             312, 336, 360, 384, 408, 432, 456, 480, 504, 528, 552, 576, 600, 
             624, 648, 672, 696, 720, 744, 768, 792, 816, 840, 864, 888, 912, 
             936, 960, 984, 1008, 1032, 1056, 1080, 1104, 1128, 1152, 
             1176}, CompressedData["
1:eJwtklcWqlgQRZWcg0jOICKSZCpvCG8CPZ0ebp+q21/+sOoe997933/+/JVu
t9u/yu12x6+kaIbleMHjmWRF1XTD6/35bsfvLpuW7Xh++IjiLC+qenjPn+9+
SqqmG6YXxmlWtV0/vKb3d9vP667ajusFYfSM06Ksmvb1Wb7beckKPrfsIErz
oumH8YUz24HvZd31/ADXkzSv6qbr3991Oy5Z1ehh9xHnZdWNOI87xw/fq6Yf
hA+cz/Kyabth/Gz78ZNkVTfoaf+ZlnUzTDRz3X53SdVtjH/ifFHWvPR7nD9J
UXXToqfDJK/b7jXTzv24S4puulif4HxVt7x0+12Kppu2Qy9HWdn2w3uhmSfu
y4pm2j7mZ7jftD1PPSTNMG3Xo5fjou7H12elmdddUTXDdsOUYYLcyEOxXzEs
2/UDejqt2hE8d74PzpbrRznTBLmJh2K/ZjkuvNDLedNP4HnSfWB2/DAuGSbA
zTyUZuoGiYye9HbZjTOAXneN9IZRWjNLYFt4p0w7TYtMxgm9XQ/TwjxlgwRH
cS60g9tKPKkHnCKTaUaPt695ZZ6qRYLjtBTaAW4HT8oBh0hkXtDj/XvZ/+ep
O2Q4zWvhHeROSRMdBiSy5OTGz3oKnqZHgvOyFdbBDfsNEeKDRNac3PTd0Q/v
DEhwWffCOrihN0uE+CSPLSc3byf2qLz0QYLrdhTeL9TmiA4T8thzcAt4ApzO
S59kuO0n4V1GbZ7oMCOPIwe30v8FOZOnJqS4H+edeSK3QHRYkMiJi9uJJ9DZ
PDUjx+O0nMQTtT1EhRWJnDm4U/AEO5fHFmR5mtdLM9HaU1TYkMaFc+P9lC7S
4rEVSZ6XHdptxJaIDDvyuHJvwjvQhby1IcfLSr2plovYMhHiQB538BHegS7i
rR0ZXnfuTXd8xFaIEl8k8vz9B+xadR4=
             "]}, Pattern}]}, {VertexCoordinates -> CompressedData["
1:eJxVkm9IU1EYxm9jVmqRi6DoWwwJrASjgSD04iLrw0oYQW5xZ85uGhFNahiU
fWjlh4xqUH4IB0VNsrSG2PqD3NdqgkSliazNGHadc3q9u8fIJv1bGZz3QwcO
h8M5532f5/ecTe6TdskgCELZ0vy37rl6enmVawBCueE6uZ+BqIilkxUjMNA7
em/dgg7ShmZfY48O7mxvps8yCpfy7zriO1W0Xb5WPbR/Eg/X5M4dCqUxts1Q
3+JLoaO6R35RMgZtdmvogUtHXg+pHn8P9F6T689oDRNo2L3VHVPmQLV251bu
moa6+68Lnv6apv5I/aX1qx49NyfRMmz6XhqcBc9mk1JrjOFUg/njvq4MFM3Y
xg+Ic5C0PFa72z+Dv+W69DLyCZRweL5/TMO1LHgzfTSEpwJVzhLGSD+Qfl4f
qP4RaAvuladw0OMVIuIMLtb8GMnzKpDflNICH1QU7U8SxloNnEVvfpbfSuCF
ZRfXFI8ztLOujuyNZ9QPqJ+5rHL1hDUDLp+8kE3Hodj4UE01D0E8z3dcb2QY
WPzT9Mo4C4lKzXbnaxJ4Pkj58PtI9zlvJN5cH5I+p9TZl2tn4Ggtjw6eiBAf
JD5cL5BezhOIJ/cP5P/9lfM7OrYz+LIl6vGffYsHVceScwatnf4K07HblB9S
fvwc6ZzzQuLFeSDx4P8B6D/w/JDy436Q/HBeSLx+fyso1FfokAkXvvNujCLf
I+2F/8Y8cD9Ifv4C5mW0Sw==
           "]}]]}, 
       TagBox[GraphicsGroupBox[GraphicsComplexBox[CompressedData["
1:eJxVkm9IU1EYxm9jVmqRi6DoWwwJrASjgSD04iLrw0oYQW5xZ85uGhFNahiU
fWjlh4xqUH4IB0VNsrSG2PqD3NdqgkSliazNGHadc3q9u8fIJv1bGZz3QwcO
h8M5532f5/ecTe6TdskgCELZ0vy37rl6enmVawBCueE6uZ+BqIilkxUjMNA7
em/dgg7ShmZfY48O7mxvps8yCpfy7zriO1W0Xb5WPbR/Eg/X5M4dCqUxts1Q
3+JLoaO6R35RMgZtdmvogUtHXg+pHn8P9F6T689oDRNo2L3VHVPmQLV251bu
moa6+68Lnv6apv5I/aX1qx49NyfRMmz6XhqcBc9mk1JrjOFUg/njvq4MFM3Y
xg+Ic5C0PFa72z+Dv+W69DLyCZRweL5/TMO1LHgzfTSEpwJVzhLGSD+Qfl4f
qP4RaAvuladw0OMVIuIMLtb8GMnzKpDflNICH1QU7U8SxloNnEVvfpbfSuCF
ZRfXFI8ztLOujuyNZ9QPqJ+5rHL1hDUDLp+8kE3Hodj4UE01D0E8z3dcb2QY
WPzT9Mo4C4lKzXbnaxJ4Pkj58PtI9zlvJN5cH5I+p9TZl2tn4Ggtjw6eiBAf
JD5cL5BezhOIJ/cP5P/9lfM7OrYz+LIl6vGffYsHVceScwatnf4K07HblB9S
fvwc6ZzzQuLFeSDx4P8B6D/w/JDy436Q/HBeSLx+fyso1FfokAkXvvNujCLf
I+2F/8Y8cD9Ifv4C5mW0Sw==
          "], {
           {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
            ArrowBox[CompressedData["
1:eJwVxcmBoCgAAMAWRfEEUVHEA7wQLzSPeU0IncDm/9vdT5X6/efvL/j5+fnz
H//vAMdzfAc5kZM4mUMc6pQOcxqndTpncKQzOYuzObtzOJfzOC9wQQgiEIME
ZACDHFBQgAo0gIMWdKAHE9iABjs4wA2sC13fDVzkhm7m5m7l1m7jdu7oSle5
k7u4q7u5h3u5t2vdz4Ne7CVe6mUe8XKv8Eqv8mqv9YTXeYM3eou3e8Y7vMuz
3gcDiGAIIxhDAgtYQw5bOEAFJzjDBW5Qwx1e8IEWfn7gp37mY5/41C/8ymd+
7XO/83t/8KWv/M0//NO//Mf/gjCIgjhIgjSgQRXwQARdIIM5WII12II9MMER
PMEbfChEGBGUI4pKVKEaNYgjgQY0IokmNKMdXehGD3rDOEzCNMxCHJZhHYqw
D4dwCtdwC3W4h0d4hlf4RnGURzQqojJiUR3xqI1E1EcyUtEULdEaHdET2eiN
0ziLcUziPGYxj/t4jGW8xDreYxMf8RXf8ZOkSZGUSZWwpEl4IpIu6ZMxmZI5
WZIt0cmVvMmX4pSkeUrTIm1SkY6pSqd0S016pGd6pU9q0zfDWZWxrM6arM1E
1mdDNmYqW7I127I9M9mDc0xxgUtc4Rb3WOEZL3jHJ77wjR/84o/kpCYN4aQl
HenJSCRRZCYb0WQnBznJmxd5mVc5y+u8y8d8ztd8y4/8zp/c5i8tKKctFbSj
Ax2pohOd6Up3auhBL3oXVcGKumgKXgyFKtZCF3txFbZ4i6+sSlF2ZV8OpSxV
OZdLuZa6PMqzvMqntFVdNRWv2kpUsporXZnqqJ7qYzXr2cBGJtnEZrayjWlm
2MVu9rCXfTWv21rUXd3XU73Wpj7rq34b3oyNbFQzNUuzNrrZG9OczdPY5uWC
d7znAx/5wjU/+c2fVrSqndq5Xdqt1a1pj/Zs7/ZtP9GLQYxCCiU2YcQtrHi7
vpu7pVu7rds7053d1d2d7cde9qqf+rnf+7O3/TeMwzpsgx724RjO4R6ewQ7f
qMZpnMdlXMdjvMdPKqnlLo085CVvaeUrPzWrRa1qU1pdyk7zZKZjOqdreiY7
ffM6b7Oe99nMz/wt63Iu13Ivz/Iu36rXfTXrsZ7ru+nt3p7Nbq82+tCnvvS9
m93u7/6Z01zmNo+xx3l8530+pz3f87vu297v/T3Wfu/3L8fBdNE=
             "], 0.022603123312787604`]}, 
           {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
            DiskBox[1, 0.022603123312787604], 
            DiskBox[2, 0.022603123312787604], 
            DiskBox[3, 0.022603123312787604], 
            DiskBox[4, 0.022603123312787604], 
            DiskBox[5, 0.022603123312787604], 
            DiskBox[6, 0.022603123312787604], 
            DiskBox[7, 0.022603123312787604], 
            DiskBox[8, 0.022603123312787604], 
            DiskBox[9, 0.022603123312787604], 
            DiskBox[10, 0.022603123312787604], 
            DiskBox[11, 0.022603123312787604], 
            DiskBox[12, 0.022603123312787604], 
            DiskBox[13, 0.022603123312787604], 
            DiskBox[14, 0.022603123312787604], 
            DiskBox[15, 0.022603123312787604], 
            DiskBox[16, 0.022603123312787604], 
            DiskBox[17, 0.022603123312787604], 
            DiskBox[18, 0.022603123312787604], 
            DiskBox[19, 0.022603123312787604], 
            DiskBox[20, 0.022603123312787604], 
            DiskBox[21, 0.022603123312787604], 
            DiskBox[22, 0.022603123312787604], 
            DiskBox[23, 0.022603123312787604], 
            DiskBox[24, 0.022603123312787604], 
            DiskBox[25, 0.022603123312787604], 
            DiskBox[26, 0.022603123312787604], 
            DiskBox[27, 0.022603123312787604], 
            DiskBox[28, 0.022603123312787604], 
            DiskBox[29, 0.022603123312787604], 
            DiskBox[30, 0.022603123312787604], 
            DiskBox[31, 0.022603123312787604], 
            DiskBox[32, 0.022603123312787604], 
            DiskBox[33, 0.022603123312787604], 
            DiskBox[34, 0.022603123312787604], 
            DiskBox[35, 0.022603123312787604], 
            DiskBox[36, 0.022603123312787604], 
            DiskBox[37, 0.022603123312787604], 
            DiskBox[38, 0.022603123312787604], 
            DiskBox[39, 0.022603123312787604], 
            DiskBox[40, 0.022603123312787604], 
            DiskBox[41, 0.022603123312787604], 
            DiskBox[42, 0.022603123312787604], 
            DiskBox[43, 0.022603123312787604], 
            DiskBox[44, 0.022603123312787604], 
            DiskBox[45, 0.022603123312787604], 
            DiskBox[46, 0.022603123312787604], 
            DiskBox[47, 0.022603123312787604], 
            DiskBox[48, 0.022603123312787604], 
            DiskBox[49, 0.022603123312787604]}}]],
        MouseAppearanceTag["NetworkGraphics"]],
       AllowKernelInitialization->False]],
     DefaultBaseStyle->{
      "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
     FormatType->TraditionalForm,
     FrameTicks->None]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"Paley\"\>", ",", "53"}], "}"}], "\[Rule]", 
    GraphicsBox[
     NamespaceBox["NetworkGraphics",
      DynamicModuleBox[{Typeset`graph = HoldComplete[
        Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 
         19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 
         36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 
         53}, {Null, 
          SparseArray[
          Automatic, {53, 53}, 0, {
           1, {{0, 26, 52, 78, 104, 130, 156, 182, 208, 234, 260, 286, 312, 
             338, 364, 390, 416, 442, 468, 494, 520, 546, 572, 598, 624, 650, 
             676, 702, 728, 754, 780, 806, 832, 858, 884, 910, 936, 962, 988, 
             1014, 1040, 1066, 1092, 1118, 1144, 1170, 1196, 1222, 1248, 1274,
              1300, 1326, 1352, 1378}, CompressedData["
1:eJw1lFmSokAURS2ZVSYFRAUVlHlQ0d5IL6E20Pv/63uT9Ks+KuLk8XHiZr//
/v4uF4vFr7ZY/ODvUjPM1XrjeP72cEzPRVk1XT88ntOfH0U3rfXGdv3t7ng6
X8qqbvthfL7eS9WwVhvb8ba74JRcrlXddMP4eE0fRQPMdlx/F4RJes3qpu1H
wN5/flQdMMf1tkEYpecsb9oOz7zeHxgA5nr+Loz250t+a7ser0wfYQAa1IJo
H1+utzvVXqRRATSohfv4cM3uBdUm0KgAGtSi+HDM8qKk2ps0KoAGt/3heMpv
ZUW3D2l0AA1u8fGU3O5VTTf8R9HoABzkDqckvRd1Q7klaFQADW7HhKdrWuGm
qLyp7YIGt1PK07Ud3VSNJ3U8wOCWnHm6rhdums6buj5ocEsvvF0/CDedXwgK
oMHtfOXthlG4GfxCcAAObpeMxxsfdDP5haAAGtyuOW/3eFLN4heCAmBQy248
3fNFNXZAA7Cglt95utdEM2ZAAbBgdit4uelNMWbA98GC2L3k4d4fejEDvg8W
vIqKd8PvoRgzoABgECtrHg6/h2bsgAagwaxqeLilIgsNaAAazOqWh1NUGWhI
A8Bkv3hH1WShERUAk/3iHU2Xie6pAJoMeKnohiw0pgFoMmBFNUxZ6IEGgMl+
Vc20ZKBHGoAl+9V0ayX7PFEALJmvbqzWss+E74Ml6zXM9UbmmfJ9sL71mtbG
lnmeKQDYt15rZTsyzwsN2n741rtaO67s80qFbhhlveuN68k8Myr04+Nb78b2
fNlnTgfOwVyv7XAmRJ43KnANZL2Oy5kQed6p8HhN33pdjzsh8iyoIPZgrtfz
ORSiz5IO3IO5Xn/LnRB9VlQQezDnu91xKESgNR3EHsz97gIOhSi0oQP3YO43
CLkTotCWCmIP5oDDiEMhEu2owDmYA4723AlRaE8FrsHc7z7mTIhAB2HAOZj7
jQ+cCVEobvr5Dw0wk2c=
             "]}, Pattern}]}, {
         VertexCoordinates -> {{0.992981, 0.118273}, {0.972023, 0.234886}, {
            0.93742, 0.348202}, {0.889657, 0.456629}, {0.829406, 0.558647}, {
            0.757511, 0.652822}, {0.674983, 0.737833}, {0.582979, 0.812487}, {
            0.482792, 0.875735}, {0.375828, 0.92669}, {0.263587, 0.964636}, {
            0.147647, 0.98904}, {0.0296333, 0.999561}, {-0.0887959, 
            0.99605}, {-0.205979, 0.978556}, {-0.32027, 0.947326}, {-0.430065,
             0.902798}, {-0.533823, 0.845596}, {-0.630088, 
            0.776524}, {-0.717507, 0.696551}, {-0.794854, 0.6068}, {-0.861044,
             0.508531}, {-0.915146, 0.403123}, {-0.956401, 
            0.292057}, {-0.984231, 0.17689}, {-0.998244, 
            0.0592406}, {-0.998244, -0.0592406}, {-0.984231, -0.17689}, \
{-0.956401, -0.292057}, {-0.915146, -0.403123}, {-0.861044, -0.508531}, \
{-0.794854, -0.6068}, {-0.717507, -0.696551}, {-0.630088, -0.776524}, \
{-0.533823, -0.845596}, {-0.430065, -0.902798}, {-0.32027, -0.947326}, \
{-0.205979, -0.978556}, {-0.0887959, -0.99605}, {0.0296333, -0.999561}, {
            0.147647, -0.98904}, {0.263587, -0.964636}, {
            0.375828, -0.92669}, {0.482792, -0.875735}, {
            0.582979, -0.812487}, {0.674983, -0.737833}, {
            0.757511, -0.652822}, {0.829406, -0.558647}, {
            0.889657, -0.456629}, {0.93742, -0.348202}, {
            0.972023, -0.234886}, {0.992981, -0.118273}, {1., 0}}}]]}, 
       TagBox[GraphicsGroupBox[GraphicsComplexBox[CompressedData["
1:eJxdk2tIk2EUx9eWEULoSzSrF5MoiX3IkrCLICcao9F1uUFbEESkrkkss8AP
+S7oYkZCsRUoW1Fpg5qGZEMyPWEhmU3N2tTMObd387btTac2ZLQu9OkcODw8
8HCec/7/39l42lhYJBaJRHl/8u9ZaWEyrnQJUBpLPtu0vwPQyS31rRfAHNxs
6UjvhWCrOl+bjMCiszZ1VukBSerCPFMRhuqoblC/ZxR6ip6Uc7emoU1xymH0
jcPuqtJXVQWTcNl0dXE6wEPGmZ65S7VByGFtMbV1AnK36M3v7H4Yqmt8wyen
oPNIsyE95IWDrg36lBVhYGP5/jurhuD1z/PdZfYIhBtkYqu3H24bmGOHvFHI
zNrauzbUCSVzrp27ngpw01S5Llf7AJade64rSQjQ7r72S93mxMzuINSPCcB6
NNLrJz+iFGUOjUqA8vl4+2HTVxztt9g4VRSYsWrdthsjeMJmfdQaCMNd5Uh8
9ZpxTLAtx7PSZmBJvuNok4zHHJ75rhyehHvuiwWfF0KY4ntYmH0gBBUrA/Yy
4xTu6yt2TxgCINfWZDtqZvAL89blV/hgr/Sx3KeM4IWE6uz7T8MgMbMKT10U
l2v5wbTmAch7eV88wAkYb+C8mvoukLQ0FttmBTR/2/7ig6aJ3pG8R1IPyX9I
+kHSL5J5kMyLRA8keiHRE4neSPxA4hcSP5H4jYQHJLwg4QkJb0h4RMIrEp6R
8I5kH5DsC4r+xQ8Q/Y/f8yzTiQ==
          "], {
           {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
            ArrowBox[CompressedData["
1:eJwVxdeBoCgAANARVMyKATOImLOojWwJ08DWdh3e3c97/Pfvn1/w8/Pzz3/8
vwIUTUGKoViKrTiKpwQKVkIlVwqlVqjSK4MyKrOyKpuyK6dyKVL5AAQ6MIAJ
bOAAF/gAgxBEoAAloICBAYxgAgvYwA4OcIEbPFCFCJrQgg50oQcDGMIIxrCE
FWSwgSOc4AxXuMMDnvCGEr6qphqqpdqqq3qqr2I1UmM1USu1VhuVq5M6q4u6
qYd6qpcq1Uf9NF0zNVtzNE/ztUALtVhLNKLVGtW41mqztmirtmundmm39miv
jnRLd3RX9/VAx3qkJzrRU53qTG91oS/6qm/6oV/6rUv91T9kIBu5yEMBwihE
MSIoRRliqEECdWhFG9rRiW4k0YM+wzQcwzN8AxuhERmJkRqZkRuNwY3O6I3N
2I3DuAxpPMZrWqZr+mZghmZkxiYxMzM3C5Obrdmbg7mbh3mat/mYr/lZtuVZ
gYWtyIqtxEqt3Cqs0motYQ3WaB3WaV2WtF7rsx3bt7Ed2rGd2MTO7MIu7coW
dmeP9mSf9mXf9mN/jusETuhETuIQJ3Vyp3Qqp3Y6p3cmZ3Yu53ak87qei93I
jV3ipm7mFm7l1i51e3dwZ3dxb1e6j/t5vhd6sZd4qZd5uVd6tUc95g3e6C3e
6knv8V4/8CM/8Ymf+blf+JVPfeY3/uhP/upv/uO//hfgIA5IkAZ5UARlUAcs
aAIeTMEcbMEevMGHQ5zgFGe4wCWuMMUN5rjFM17wjg/8hVFIwizMwzKswjpk
IQ/bUIRLuIZHeEZxlEZ5VERVVEc0aqI2ElEXrdEWndEVJ3EWF3EZ1zGNWcxj
EXdxH2/xHl/xnZAkT8qkSmjCkiZpky7pkyHZkyO5E0lSUpCK1ISRhnAiSE8G
MpKDnESSJ83SMq1TmjYpT9u0S4d0TKf0TK/0Sd8sz6qMZizjWZuJrM/GbMrm
7Mru7M2+vMjrnOVN3uYi7/Ihn/I5X/I7l/lXlAUtmoIXouiKvhiLuViKtZDF
U1YlK3nZll3Zl0M5lUu5llv5lG9VV03VVqLqq6Eaq7laq63aq7f6alrzWtRd
PdRjPdVLvdV7fdQfZbSlHe3pSCc605Xu9KAna5hgPRvYxGa2sI0d7GRXw5uu
GZqxmZulWZu9OZuruXnLez7yiS985Rs/+MVvLlvRDu3Uzu3abu3enu3dyvYR
nRjFLBaxiV0c4hJSPOLt+m7qlm7t9u7ozu7unu7tvn7o537tt/7oz/7qZf/2
3zAOy7AN+3AO13APz/CN07iO+3iM13iPcnynedqmYzqne5LTM33zMu/zOV+z
nJ/5XdblWK7lXp7lXb51W8/1XuX6rt+2b9cmt2f79mO/92d/j/OQx3t853U+
53fd13vL+5PP877fv/YWk7Q=
             "], 0.022604340548471435`]}, 
           {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
            DiskBox[1, 0.022604340548471435], 
            DiskBox[2, 0.022604340548471435], 
            DiskBox[3, 0.022604340548471435], 
            DiskBox[4, 0.022604340548471435], 
            DiskBox[5, 0.022604340548471435], 
            DiskBox[6, 0.022604340548471435], 
            DiskBox[7, 0.022604340548471435], 
            DiskBox[8, 0.022604340548471435], 
            DiskBox[9, 0.022604340548471435], 
            DiskBox[10, 0.022604340548471435], 
            DiskBox[11, 0.022604340548471435], 
            DiskBox[12, 0.022604340548471435], 
            DiskBox[13, 0.022604340548471435], 
            DiskBox[14, 0.022604340548471435], 
            DiskBox[15, 0.022604340548471435], 
            DiskBox[16, 0.022604340548471435], 
            DiskBox[17, 0.022604340548471435], 
            DiskBox[18, 0.022604340548471435], 
            DiskBox[19, 0.022604340548471435], 
            DiskBox[20, 0.022604340548471435], 
            DiskBox[21, 0.022604340548471435], 
            DiskBox[22, 0.022604340548471435], 
            DiskBox[23, 0.022604340548471435], 
            DiskBox[24, 0.022604340548471435], 
            DiskBox[25, 0.022604340548471435], 
            DiskBox[26, 0.022604340548471435], 
            DiskBox[27, 0.022604340548471435], 
            DiskBox[28, 0.022604340548471435], 
            DiskBox[29, 0.022604340548471435], 
            DiskBox[30, 0.022604340548471435], 
            DiskBox[31, 0.022604340548471435], 
            DiskBox[32, 0.022604340548471435], 
            DiskBox[33, 0.022604340548471435], 
            DiskBox[34, 0.022604340548471435], 
            DiskBox[35, 0.022604340548471435], 
            DiskBox[36, 0.022604340548471435], 
            DiskBox[37, 0.022604340548471435], 
            DiskBox[38, 0.022604340548471435], 
            DiskBox[39, 0.022604340548471435], 
            DiskBox[40, 0.022604340548471435], 
            DiskBox[41, 0.022604340548471435], 
            DiskBox[42, 0.022604340548471435], 
            DiskBox[43, 0.022604340548471435], 
            DiskBox[44, 0.022604340548471435], 
            DiskBox[45, 0.022604340548471435], 
            DiskBox[46, 0.022604340548471435], 
            DiskBox[47, 0.022604340548471435], 
            DiskBox[48, 0.022604340548471435], 
            DiskBox[49, 0.022604340548471435], 
            DiskBox[50, 0.022604340548471435], 
            DiskBox[51, 0.022604340548471435], 
            DiskBox[52, 0.022604340548471435], 
            DiskBox[53, 0.022604340548471435]}}]],
        MouseAppearanceTag["NetworkGraphics"]],
       AllowKernelInitialization->False]],
     DefaultBaseStyle->{
      "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
     FormatType->TraditionalForm,
     FrameTicks->None]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"Paley\"\>", ",", "61"}], "}"}], "\[Rule]", 
    GraphicsBox[
     NamespaceBox["NetworkGraphics",
      DynamicModuleBox[{Typeset`graph = HoldComplete[
        Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 
         19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 
         36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 
         53, 54, 55, 56, 57, 58, 59, 60, 61}, {Null, 
          SparseArray[
          Automatic, {61, 61}, 0, {
           1, {{0, 30, 60, 90, 120, 150, 180, 210, 240, 270, 300, 330, 360, 
             390, 420, 450, 480, 510, 540, 570, 600, 630, 660, 690, 720, 750, 
             780, 810, 840, 870, 900, 930, 960, 990, 1020, 1050, 1080, 1110, 
             1140, 1170, 1200, 1230, 1260, 1290, 1320, 1350, 1380, 1410, 1440,
              1470, 1500, 1530, 1560, 1590, 1620, 1650, 1680, 1710, 1740, 
             1770, 1800, 1830}, CompressedData["
1:eJw1lUeSIlsQBGk0pSi0FoUotNZiLvGPMBeY++++R5OsehFWZnjG8+jo77//
/iYTiUScSyR++JtMZ7KOHxTDUrXWaHfH0/lytd3tD8fL4/n685PKZHOu0nKt
3uz0JvFitVZ6uj5f72Q6m8t7Civ1Rqvbn86W643C8+311re5fMFXWm00271B
PF9ttkovd1I+zhecQGmt2er0h7PFertTen2Q8nHBcYtK6612dxDNl5vdXunt
mUzxreN6ocJGu9Mbjhar7f6g8P5KpfnU9fySwman24/Gy/UOIMLHG9y84/lB
WWGr2xuMJqvNHh7C558fcAsu56gobff6w/F0vT0ARPpKgut4XKOqsNMfRJN4
szvCQ/hOQev6XKOmsDsYjqaz7f4EzlPXSEPrBVyjrrQ3jMbxfHc4g6M0mYHW
L3KNhtJ+NJrMFvvjBR6lqSy4Qcg1mkoHI/V0OF0BUprOwVsscY6W0uFYPR3P
NxGRZvIAh2Xu0VYaTVTU6XKHiDBbgLdU4R4dhaOpejpfHxAR5hx4y1XO0VU4
jlXT5fYUEWneBbhS4x49pZOZarreXyIiLXgAV+scpK90OldPt8cbIELHh7fW
4B4DhfFCPd35zQCRugG89Sb3GCqdLVXU48WLVegVwW20OEekcL5ST883D1ah
H0LbbHONkcLFWj3xq3ixSoMSuK0O1xgrXW5U1DvJg1VYLIPb7nKNiUJ8oCd+
FQ9WaVgBt9PjHFOl+EBPyTTv9eMRtN0+14gV4gM1pTK8149G0PYGHGOmEB1o
KZ3lvX40ArY/5BhzhdhASZkc7/VjEbCDiFssFCIDJWXzPNePRMAOR9xiqRAZ
KClX4Ll+HII1GnMLs/u3o7zDe/1IBOxowi3MbnVUcIPQJIJ1POUWZvdvR45X
LJlFwE5ibmF2qyPXD8smEbDTGbcwudWRF5QqJhGwMZuzNrd/O/KL5apZBO2M
zdmY3OooCCs1kwjaOZuzNbl/OyqWqnWTCNwFm7P72q2SwnKtYRKBu2Rz9ma3
SipV6k1zCNwVk3Mwu1VSudpomULQrpmc49dutVSpNdvmELgbNuf0tVs1Veut
jkkE75bROX/tVk+aX5MI3h2jc/narZ40vyYRwHtW5/q1W0Vpf80igA/Mzs3s
Vk+aX5MI3iOrcze71ZPW1ySC98ToPL52qyitr1kE8JnReZrc6knraxLBe2Fz
Xia3etL6mkTgXpmct7mtmrS+5hC0t4euYXKrJq2vSQTtXZuTNLvVk+bXLIL2
oc1Jmd0qSvtrGoH7ZHPSZrd60vyaRuDqP106Y3arJ82veQTu+39Qzt9x
             "]}, Pattern}]}, {
         VertexCoordinates -> {{0.9947, 0.102821}, {0.978856, 0.204552}, {
            0.952635, 0.304115}, {0.916317, 0.400454}, {0.870285, 0.492548}, {
            0.815028, 0.579421}, {0.751132, 0.660152}, {0.679273, 0.733885}, {
            0.600214, 0.799839}, {0.514793, 0.857315}, {0.423914, 0.905702}, {
            0.328542, 0.944489}, {0.229688, 0.973264}, {0.128398, 0.991723}, {
            0.0257479, 0.999668}, {-0.0771755, 0.997018}, {-0.179281, 
            0.983798}, {-0.279486, 0.96015}, {-0.376728, 
            0.926324}, {-0.469977, 0.882679}, {-0.558244, 
            0.829677}, {-0.640593, 0.76788}, {-0.716152, 0.697944}, {-0.78412,
             0.620609}, {-0.843776, 0.536696}, {-0.894487, 
            0.447094}, {-0.935717, 0.352752}, {-0.967028, 
            0.254671}, {-0.988088, 0.153891}, {-0.998674, 
            0.0514788}, {-0.998674, -0.0514788}, {-0.988088, -0.153891}, \
{-0.967028, -0.254671}, {-0.935717, -0.352752}, {-0.894487, -0.447094}, \
{-0.843776, -0.536696}, {-0.78412, -0.620609}, {-0.716152, -0.697944}, \
{-0.640593, -0.76788}, {-0.558244, -0.829677}, {-0.469977, -0.882679}, \
{-0.376728, -0.926324}, {-0.279486, -0.96015}, {-0.179281, -0.983798}, \
{-0.0771755, -0.997018}, {0.0257479, -0.999668}, {0.128398, -0.991723}, {
            0.229688, -0.973264}, {0.328542, -0.944489}, {
            0.423914, -0.905702}, {0.514793, -0.857315}, {
            0.600214, -0.799839}, {0.679273, -0.733885}, {
            0.751132, -0.660152}, {0.815028, -0.579421}, {
            0.870285, -0.492548}, {0.916317, -0.400454}, {
            0.952635, -0.304115}, {0.978856, -0.204552}, {
            0.9947, -0.102821}, {1., 0}}}]]}, 
       TagBox[GraphicsGroupBox[GraphicsComplexBox[CompressedData["
1:eJxdk3tI01EUx6eQcxgJObYSYVqjTEszS3ugxwQVljUcidE7SzNLBiOGJiaM
LEhTUqNtMSUSF/5R4GphTk9uoE1SJstwqFvmNqd7/GYivdRe+Ne5cLlcuJx7
zvf7+cYVSyUloSwWK+Pv/nemqBK2PPrIwNnGothbkrdgMEvHzBIGNl1PqDcm
DUPVh6ySleoAiHJHjW1yK+SqK9mVEj9kn75s4Ty1QfylTv8Fmxc23vRHeOoc
8PBil+o1dwFidTqP5v4XaDrp+JHD8UC7LJ/3TeCCJHNIr9rgWq87B2mZLatL
+2chn1+8nKecB76+NDG56jOE2rzTAqkXsrNbk8viJkFS22dU/PIBb19R2HjY
ONgsI2tZhwLQekKoLC8dgdXvx+p/ChkoeyytOSV9B30xckeKgYHUo6aC5+fU
oJBN9uetMnCk4kH44IAOozEoap5joEnrYr/4Ooj9E9WLOdUMqHfcgK2zYxgh
jL/d0BOAkFTHgDhmAtN/vzws6/DD2lj6tWiuHYX6XrYn0weBDaV126Zn0G7W
DukbFiC+Js5pqHViAdcTVdXsgfSZ86o3C240RY5qGwvdsCS/Y1Xw5zF43HqV
PTUL4uGOu2ksLw49WeFpds/AZrE89Vm7DxUHI3fu1UyBZnnX0JVFPxaK3YKa
lk8QLhC9ci4G0F4YqbyXb4HxjO6e8jYG33OicnXdJjjQnbhn+zKDnHmHs+JM
F70jeY+kHpL/kPSDpF8k8yCZF4keSPRCoicSvZH4gcQvJH4i8RsJD0h4QcIT
Et6Q8IiEVyQ8I+EdSR6Q5AVJnpDkDUkekeQVWf9XEFjr6w8LRgf6
          "], {
           {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
            ArrowBox[CompressedData["
1:eJwVxcUR5EYAAMCVRszMNGJmhiQcwiVwwThhl/vT8M/ff/6gv9/vX/D7/T+C
IhiCIwTCIDwiICIiITKiITpiIg7iIQmSISVSIw3SIwMyIhMyIxtyITfyIB8K
UBwlUBJlUQEVUQmVUQXVUQO1UBf10RTN0Qpt0BYd0BGd0Bld0B290Qd9AQYI
QAIKcEAEEpCBAlRgABPYwAMByEABatCCDoxgAjNYwAoO8IAXfBiOkRiF0RiP
SZiMKZiKaZiJWZiD+ViI5ViJNViH9diEzdiCrdiGndiLfTiBUziNM7iAy7iC
q7iG67iF27iLB3iEF3iFt3iPD/iML/iKb/iOX/hHkARNMARLiIRCqIRG6IRB
2IRDeERIQKIkaqIjBmIkFmIlNmInDuImKZIhWZIjJVIlNVInDdIkHdIlfTIi
Y7IiG7InR3IiV3Ijd/IgT/KhaIqlOIqnZEqjdMqgTMqiXMqjAgpSCVVTLTVQ
EzVTG7VTB3VSF/XSDM3RPC3QCq3TBm3SFm3THu3TIR3TKd3QHT3SM73QO33Q
J33RN/0xLMMzAiMyKmMwJmMxNuMwPhMwEZMwGdMyPTMxC7MyB3MyF3MzD8ux
AiuyEquxJmuxNuuwLhuwIQvZlM3Zjh3YmV3ZjT3Zi73Zh305nhM5iZM5nbM4
m3M4l/O4kIu4mMu4guu5kVu4jdu5i7u5h3u5jxd4iZd5hTd4m3d4l/d4n494
yCd8zpf8wE/8yu/8wd/8w7/8J4iCLCiCKpiCI7iCJ/hCIEAhFlKhECphFGZh
Ew7hFB7hFT5REhVRFTXREl3RE30xEEMxFhMxE0uxFidxEXfxFC/xFT9JllRJ
k3TJljzJlwIplCIpkVIplyqpkWZplQ7pkm7pkxVZk3XZkB3ZlwM5lCMZyqmc
yYVcy628yJt8yrf8KKqiK4ZiKq4SKKESKVCJlUzJlVJplE5ZlV25lEd5VU01
VFO1VE8N1UiFaqwmaq4WaqW2aq9u6qHe6qt+mq6ZmqXZmq9FGtRiLdFSrdBK
rdY6bdB27dQe7dMN3dJt3dEDHeqxnuipnumlXumN3uujfuiX/hqmYRuO4Rqh
ERuJkRqZkRuVURutMRiTcRq38ZmW6Ziu6ZmRmZipmZm5WZi12ZidOZqzeZmP
ZVuu5Vm+Ba3UyqzcKqzSaqzW6q3JWqzbem3H9mzfDuzYzuzcLuzSruzW7uzB
nu3VfuzPcR3fCZzQSZzcKZzSqZza6ZzeGZ3F2ZzX9dzADd3ITd3CLd3Krd3G
7d3BndzV3d3P873QizzoZV7pVV7tNV7rDd7ozd7mHX7gRz70Yz/3K7/2G7/1
O3/0J3/xd/8MwgAGcZAERVAHTdAGXdAHUzAHa3AEVxiFcZiEaViGTdiGXdiH
QziHS7iFZ3hHMEqiNMqiKmqjLuqjIRqjJVqjPbqiB8YwhRnMYQ072MMBjnCC
K9zgAW/4xkmcxXlcxE3cx0M8xlM8x1u8x2f8xF+SJnlSJGXSJkMyJlMyJ0uy
J0dyJW+apUVaplXapWM6pXO6pGt6pGd6p1+WZ2VWZXXWZ1M2Z0u2Zlt2Zlf2
5EVe5XXe5EM+50u+5lu+51d+529RFnXRFG0xFkuxFluxF0dxF0/xlVXZlG3Z
lVO5llu5l0d5lk/5VnXVVl3VV3O1VXt1VGd1VW/11U3d1X091Eu910d91ld9
11/TNn0zNGOzNkdzNldzN0/btUM7tlO7tWd7tXf7tG/Xd2M3dXO3d1d3d0/3
dl8/9FM/90t/9Hf/9G//DeMwD8uwDufwDO/wjdO4jOu4jdf4jt80T+u0Tft0
T9+8zNu8z8f8LOuyL8dyLu+6rcd6rtf6bft2btd278d+7ff+HOdxH8/xntf5
nO/5Xff1Xt/93N/zvt9/ws/f2w==
             "], 0.02260607709778298]}, 
           {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
            DiskBox[1, 0.02260607709778298], DiskBox[2, 0.02260607709778298], 
            DiskBox[3, 0.02260607709778298], DiskBox[4, 0.02260607709778298], 
            DiskBox[5, 0.02260607709778298], DiskBox[6, 0.02260607709778298], 
            DiskBox[7, 0.02260607709778298], DiskBox[8, 0.02260607709778298], 
            DiskBox[9, 0.02260607709778298], DiskBox[10, 0.02260607709778298],
             DiskBox[11, 0.02260607709778298], 
            DiskBox[12, 0.02260607709778298], 
            DiskBox[13, 0.02260607709778298], 
            DiskBox[14, 0.02260607709778298], 
            DiskBox[15, 0.02260607709778298], 
            DiskBox[16, 0.02260607709778298], 
            DiskBox[17, 0.02260607709778298], 
            DiskBox[18, 0.02260607709778298], 
            DiskBox[19, 0.02260607709778298], 
            DiskBox[20, 0.02260607709778298], 
            DiskBox[21, 0.02260607709778298], 
            DiskBox[22, 0.02260607709778298], 
            DiskBox[23, 0.02260607709778298], 
            DiskBox[24, 0.02260607709778298], 
            DiskBox[25, 0.02260607709778298], 
            DiskBox[26, 0.02260607709778298], 
            DiskBox[27, 0.02260607709778298], 
            DiskBox[28, 0.02260607709778298], 
            DiskBox[29, 0.02260607709778298], 
            DiskBox[30, 0.02260607709778298], 
            DiskBox[31, 0.02260607709778298], 
            DiskBox[32, 0.02260607709778298], 
            DiskBox[33, 0.02260607709778298], 
            DiskBox[34, 0.02260607709778298], 
            DiskBox[35, 0.02260607709778298], 
            DiskBox[36, 0.02260607709778298], 
            DiskBox[37, 0.02260607709778298], 
            DiskBox[38, 0.02260607709778298], 
            DiskBox[39, 0.02260607709778298], 
            DiskBox[40, 0.02260607709778298], 
            DiskBox[41, 0.02260607709778298], 
            DiskBox[42, 0.02260607709778298], 
            DiskBox[43, 0.02260607709778298], 
            DiskBox[44, 0.02260607709778298], 
            DiskBox[45, 0.02260607709778298], 
            DiskBox[46, 0.02260607709778298], 
            DiskBox[47, 0.02260607709778298], 
            DiskBox[48, 0.02260607709778298], 
            DiskBox[49, 0.02260607709778298], 
            DiskBox[50, 0.02260607709778298], 
            DiskBox[51, 0.02260607709778298], 
            DiskBox[52, 0.02260607709778298], 
            DiskBox[53, 0.02260607709778298], 
            DiskBox[54, 0.02260607709778298], 
            DiskBox[55, 0.02260607709778298], 
            DiskBox[56, 0.02260607709778298], 
            DiskBox[57, 0.02260607709778298], 
            DiskBox[58, 0.02260607709778298], 
            DiskBox[59, 0.02260607709778298], 
            DiskBox[60, 0.02260607709778298], 
            DiskBox[61, 0.02260607709778298]}}]],
        MouseAppearanceTag["NetworkGraphics"]],
       AllowKernelInitialization->False]],
     DefaultBaseStyle->{
      "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
     FormatType->TraditionalForm,
     FrameTicks->None]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"Paley\"\>", ",", "73"}], "}"}], "\[Rule]", 
    GraphicsBox[
     NamespaceBox["NetworkGraphics",
      DynamicModuleBox[{Typeset`graph = HoldComplete[
        Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 
         19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 
         36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 
         53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 
         70, 71, 72, 73}, {Null, 
          SparseArray[
          Automatic, {73, 73}, 0, {
           1, {{0, 36, 72, 108, 144, 180, 216, 252, 288, 324, 360, 396, 432, 
             468, 504, 540, 576, 612, 648, 684, 720, 756, 792, 828, 864, 900, 
             936, 972, 1008, 1044, 1080, 1116, 1152, 1188, 1224, 1260, 1296, 
             1332, 1368, 1404, 1440, 1476, 1512, 1548, 1584, 1620, 1656, 1692,
              1728, 1764, 1800, 1836, 1872, 1908, 1944, 1980, 2016, 2052, 
             2088, 2124, 2160, 2196, 2232, 2268, 2304, 2340, 2376, 2412, 2448,
              2484, 2520, 2556, 2592, 2628}, CompressedData["
1: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
             "]}, Pattern}]}, {
         VertexCoordinates -> {{0.996298, 0.0859648}, {0.98522, 0.171293}, {
            0.869589, 0.493776}, {-0.618671, 
            0.78565}, {-0.150055, -0.988678}, {-0.890028, -0.455907}, {
            0.436651, -0.899631}, {0.941317, 0.337523}, {0.192452, 
            0.981306}, {0.966848, 0.255353}, {0.584298, 
            0.811539}, {-0.317191, -0.948362}, {-0.925925, 0.377708}, {
            0.651899, 0.758306}, {-0.683919, -0.729558}, {0.823923, 
            0.566702}, {-0.890028, 0.455907}, {0.908818, 
            0.417194}, {-0.234491, 0.972118}, {-0.744104, 0.668064}, {
            0.651899, -0.758306}, {-0.0645084, 0.997917}, {0.0215161, 
            0.999769}, {0.436651, 0.899631}, {0.512371, -0.858764}, {0.714673,
             0.699458}, {-0.925925, -0.377708}, {
            0.0215161, -0.999769}, {-0.234491, -0.972118}, {-0.999074, \
-0.0430222}, {-0.991677, 0.128748}, {-0.548843, 
            0.835925}, {-0.548843, -0.835925}, {0.107381, 0.994218}, {
            0.772157, 0.635432}, {-0.999074, 0.0430222}, {-0.847541, 
            0.53073}, {1., 0}, {
            0.941317, -0.337523}, {-0.474951, -0.880012}, {-0.317191, 
            0.948362}, {-0.954967, 0.296713}, {0.276097, 0.96113}, {
            0.98522, -0.171293}, {0.357698, -0.933837}, {
            0.996298, -0.0859648}, {0.714673, -0.699458}, {-0.474951, 
            0.880012}, {-0.847541, -0.53073}, {
            0.772157, -0.635432}, {-0.798779, 0.601624}, {
            0.908818, -0.417194}, {-0.798779, -0.601624}, {
            0.966848, -0.255353}, {-0.0645084, -0.997917}, {-0.618671, \
-0.78565}, {0.512371, 0.858764}, {0.107381, -0.994218}, {
            0.192452, -0.981306}, {0.584298, -0.811539}, {0.357698, 
            0.933837}, {0.823923, -0.566702}, {-0.976938, 
            0.213521}, {-0.150055, 0.988678}, {-0.397543, 
            0.917584}, {-0.991677, -0.128748}, {-0.954967, -0.296713}, \
{-0.397543, -0.917584}, {-0.683919, 0.729558}, {0.276097, -0.96113}, {
            0.869589, -0.493776}, {-0.976938, -0.213521}, {-0.744104, \
-0.668064}}}]]}, 
       TagBox[GraphicsGroupBox[GraphicsComplexBox[CompressedData["
1:eJxdVHss1XEUvxeRRMqVIS7psYrWXfMoq6ORLXrsmkZ5RA1TKGuI6zVhqZWi
RElxt2vKSpRVlsNEnnmHyONyPe+9PwrdGEXrr/Pdvvvu7PvdOZ9zPp/P1/T8
ZRc/JRaLdWxlr57bQexWOMTA/iuPVerZpaD9akpPmrwS8xM7ZNJqcK2KPVXY
PgU2e4dFqo8GoDbyD3dn4zD2OSpf09g2AeXzjWksyyo8XH9Dw07IoKJGm7VF
IEV748rb9y2+4242T13vRy+sUYT8rKmT4qaAox0OXDkUhRVsXMjqhIxzqhcc
8mrBp2FPV68/AxpxydaXpuWgPrBo+MatBTxrzd7dKxZDXqmm0EQxAUGRkqje
4x0oye62X3SXY3UqL8IiV4ZG7D5zb/NuiA0tcPLoG4GulIaZdQ7jIHlir/9c
LEF9k1aVm+5j+CEh+FO61yQ4xqTZBm0VA8EL3MT4aHVdGXhkJoWfLPkGNoEG
nCblL7jP2dbyoSED4GrAK2kew3D+bMVnHwmthy8P8D2fXi/CX5PDuYycgQd3
z6jx12aAAFvvGC4zQOYBM/6a/W5+g/A+eEC4HDWFna+dJrL6R+FIjlf5nO8o
kP6Q5EOCD8t1U9QvKhj0VmJHs9VEmG/nH9BaxmD11dL4lqgKaAuZ5XHvDuEI
x6hOgpM0xlkrK1uXmDLwWaWlhQE7TmNmwttxKM45GxN2egRIfqjKfnZCizuF
zTwTwcfFQWD9W9P/TxaL8I3Fc+uHMv368WCTkkxrlxQJn5DrbDO7OVWONjrt
Se5LbRCX6FuR9qIVDG6JStIr5VSfuEFrfkfyyFfIDukxXR6SIdEznSetT/Ej
6RfNAq0XMlMnMEKY+jvebpjqg94j0S/VAxL/IOEfyPyR+AOJH2j/QPSNHmpq
Ah17Bpcs2Ip81wbqV+Acmua5h/Zgm2jSuMdTBkQvSPhA8h6JvyhfSP4PigeJ
n/AvXu1pdg==
          "], {
           {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
            ArrowBox[CompressedData["
1:eJwVxUe2gggCAMAPioIgOWdQkCygBCUoknQ7R+gLzP13/bo2Zf3z///9A/79
/dnQ399/AyCwBXYADBwADMABEqABFuABEZABFdABE7CBM+ACHhAAEZAAKZAD
d6AEauAJtEAPvIEPMAEL8AU34BaEwQOIghiIgzTIgBwogBqogyZogSfQBS9g
BMZgAmbgDXyCDdiBPfgC3+AHHMEJnMEV/G52m/0G3hw2+IbcUBt6w22EjbSR
N8pG3Wgbc3PaOBt342+CTbiJNukm29w2xabcVJt689g8N93ms1m30Ha3PWyx
7XGLb8ktu+W2wlbaGltza29PW2frbf1tsr1u0+1tW2zbbbd9bd/bYfvZTtt5
u2zX7Q+CIQQ6QBhEQjTEQCwkQBKkQCqkQTpkQDbkQBfIg0IogmIogXLoBhVQ
BdXQA3pCDdRCL2iCfrv9Dt5hO3xH7MgdveN3wk7aKTtrZ+/OO2d32QW7cJfu
sl2+K3bVrt+9dsPusxt3027Zrbvv7rc/7NE9tsf39J7dc3t+L+2VvbbX98be
3Fv78/6y9/fBPt4n++s+3d/3xb7aP/bPfbNv992+3w/7BUbgA4zDJEzBNMzC
IizBCqzBJ/gMu/AF9uEIjuEcvsF3uIIf8Bse4BGe4Ble4C/8QzDkiOAIibAI
jwiIiCiIhhiIiViIjZwQF/GREImQK5IiGZIjJVIhD6RBWqRDeuSFvJER+R7Q
A3YgD/SBObAH/iAflIN2MA7OwT14B/8QHpLD9XA/FIfy8Dg0h89hPMyH5bAe
viiOEiiJ0iiPiqiEyqiGGqiF2ugJPaMO6qEhGqMJmqE5ekPvaI0+0Abt0B59
oW90QD/ojB0xHKMxFuMwHhMxFdMwA7OwC+ZhARZiMZZiGVZiFVZjDdZhEzZj
K/bFfkfySB3pI3sUj/JROapH42gdT8fz0Tm6x8sxOMbH6zE93o73Y3Esj89j
c+yOr+P7OBw/x/E4HVecwEmcxXlcwEVcxnXcwC38hPt4gEd4jF/xHL/hNf7A
n3iHv/AFX/EfQRMMwRI8IRMqoRE6YREnwiFc4kJ4hE9ExJXIiJwoiJKoiJpo
iY54EQPxIUZiImZiIX4kRdIkT4qkRMqkSpqkRZ5IhwzJiEzIK5mRd7Ign2RD
tuSLHMgv+aNYiqN4SqRUSqcMyqROlENdKI/yqYAKqYTKqBt1pyqqph7Uk+qp
FzVQIzVRM7VQK/WlGZqlRVqmFVqlddqmT7RDX+iYTuiUzugbXdIV3dId3dMD
PTI8IzAiIzM6YzIWYzMOc2F8JmBCJmJiJmVuTMGUzIN5Mg3TMm9mYEZmZhZm
Zb7Mj+VYnpVZldVYnTXZM+uwF9Znr2zK5uyNLdiafbA9+2Lf7MjOnMhJnMyp
nMnZ3Ik7cxfO50Iu4mIu4a5czhVcxdVcw7Vcx/Xchxu5mVu5L/fjBV7kVV7n
Dd7kbd7lL7zPh3zG5/ydL/iKf/IN/+YH/sPP/CrIgiKogi7YwllwBFfwhVCI
hUS4CqmQCXehEh7CU+iEXngJb2ESZmEVfqIkyqIumqIl2uJZ9ERfDMVYvIl3
sRQr8SG2Yid+xFGcxFX8SaqkSbpkSmfJlS6SJ4VSLF2lVMqkXLpJpfSQGqmV
XtJbGqSPtEir9JMVWZVN2ZZP8ll25UAO5Vi+yoVcyrX8kBu5l1/yJM/yIv8U
XTEUU7EVV/EUXwmUWLkqmZIrN+WuFEqtNEqn9MqgfJRRmZSv8lM1VVdt9aw6
qqt6aqTG6lXN1Eqt1afaqJ36Vgd1UVf1q5mapdnaWfO0QAu1SLtqmXbT7lqh
lVqlPbVOe2lvbdQmbdYW3dBN/ay7+kX39EBP9Kue6Tf9oT/1Vu/0l/7RR/2r
/wzbOBlnwzUCIzJiIzEy42YURmlURm08jNZ4GYPxMWZjMVbja1qmbbqmZ/pm
YEZmambmzSzMxmzN3nyZgzmZs3W2HMu1PCuyEutqpdbNKqzKqq2H9bQaq7cG
a7Qma7W+1s8+2WfbswM7tCM7sXP7Zhd2ZXd2b7/twR7txV5P7uly8k7BKTml
p+yUn4pTdXqcnqfm1J660/s0nubTcvqdnbN7Ds7ROT4n5/R8Pxfn6vw4v87v
8+c8nufz9/xzPMd3AidyUid3bs7dqZyH0zit0zm983I+zuyszte9uJ4buYl7
dVM3d0u3ch9u4w7ux53c2V0vwSW8RJfkkl/ul+JSXh6X5tJd+svr8r4Ml+my
Xn6e7wVe4qVe5uXe3au9h9d4nTd6k7d4q/fzIz/2Ez/1737pV37tN37nv/y3
P/gff/QX/xeEQRSkQR7cgntQBs+gCbrgFczBEnyDX5iE1zAN87AM6/ARPsMu
fIVD+AnHcArn8BvFURLl0T0qojKqozbqolc0RGv0jdM4i/P4HtfxM27iNn7F
QzzGUzzHS7wm1yRN7kmZVEmdPJM+eSVDMia/a369Xe/X8vq8ttfu2l+H63id
r8t1vX6vvzRL87RM6/SRPtM2fadDOqZzds+KrMzqrM367JW9szGbszX7Zr/8
lt/zOn/mTd7mff7Jx3zO11t5q2717Xnrb+/bcPvc5tt6+92Le3l/3tt7d+/v
7/t0n+/r/VfUxaN4Fm3xLj7FWEzFWvzKqqzLtuzLV/kuP+VSruWvelZN1VZ9
9ammaq6W6lc/6mfd1+96qD/1VH/r36N9dI/+8X5Mj+WxPr7P5tk+38/Pc3xO
z6Xpm1fzbj7N0nybX9u1fftpp3Zul/bbvbuh+3RT9+1f/buf+qVf++/r8xpf
02t5D+/Pe3l/379hGuZhGb6f8TN9vuMyruN3mqdl/s6/ZV2+39+/3rB9tQ==

             "], 0.02260771622706348]}, 
           {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
            DiskBox[1, 0.02260771622706348], DiskBox[2, 0.02260771622706348], 
            DiskBox[3, 0.02260771622706348], DiskBox[4, 0.02260771622706348], 
            DiskBox[5, 0.02260771622706348], DiskBox[6, 0.02260771622706348], 
            DiskBox[7, 0.02260771622706348], DiskBox[8, 0.02260771622706348], 
            DiskBox[9, 0.02260771622706348], DiskBox[10, 0.02260771622706348],
             DiskBox[11, 0.02260771622706348], 
            DiskBox[12, 0.02260771622706348], 
            DiskBox[13, 0.02260771622706348], 
            DiskBox[14, 0.02260771622706348], 
            DiskBox[15, 0.02260771622706348], 
            DiskBox[16, 0.02260771622706348], 
            DiskBox[17, 0.02260771622706348], 
            DiskBox[18, 0.02260771622706348], 
            DiskBox[19, 0.02260771622706348], 
            DiskBox[20, 0.02260771622706348], 
            DiskBox[21, 0.02260771622706348], 
            DiskBox[22, 0.02260771622706348], 
            DiskBox[23, 0.02260771622706348], 
            DiskBox[24, 0.02260771622706348], 
            DiskBox[25, 0.02260771622706348], 
            DiskBox[26, 0.02260771622706348], 
            DiskBox[27, 0.02260771622706348], 
            DiskBox[28, 0.02260771622706348], 
            DiskBox[29, 0.02260771622706348], 
            DiskBox[30, 0.02260771622706348], 
            DiskBox[31, 0.02260771622706348], 
            DiskBox[32, 0.02260771622706348], 
            DiskBox[33, 0.02260771622706348], 
            DiskBox[34, 0.02260771622706348], 
            DiskBox[35, 0.02260771622706348], 
            DiskBox[36, 0.02260771622706348], 
            DiskBox[37, 0.02260771622706348], 
            DiskBox[38, 0.02260771622706348], 
            DiskBox[39, 0.02260771622706348], 
            DiskBox[40, 0.02260771622706348], 
            DiskBox[41, 0.02260771622706348], 
            DiskBox[42, 0.02260771622706348], 
            DiskBox[43, 0.02260771622706348], 
            DiskBox[44, 0.02260771622706348], 
            DiskBox[45, 0.02260771622706348], 
            DiskBox[46, 0.02260771622706348], 
            DiskBox[47, 0.02260771622706348], 
            DiskBox[48, 0.02260771622706348], 
            DiskBox[49, 0.02260771622706348], 
            DiskBox[50, 0.02260771622706348], 
            DiskBox[51, 0.02260771622706348], 
            DiskBox[52, 0.02260771622706348], 
            DiskBox[53, 0.02260771622706348], 
            DiskBox[54, 0.02260771622706348], 
            DiskBox[55, 0.02260771622706348], 
            DiskBox[56, 0.02260771622706348], 
            DiskBox[57, 0.02260771622706348], 
            DiskBox[58, 0.02260771622706348], 
            DiskBox[59, 0.02260771622706348], 
            DiskBox[60, 0.02260771622706348], 
            DiskBox[61, 0.02260771622706348], 
            DiskBox[62, 0.02260771622706348], 
            DiskBox[63, 0.02260771622706348], 
            DiskBox[64, 0.02260771622706348], 
            DiskBox[65, 0.02260771622706348], 
            DiskBox[66, 0.02260771622706348], 
            DiskBox[67, 0.02260771622706348], 
            DiskBox[68, 0.02260771622706348], 
            DiskBox[69, 0.02260771622706348], 
            DiskBox[70, 0.02260771622706348], 
            DiskBox[71, 0.02260771622706348], 
            DiskBox[72, 0.02260771622706348], 
            DiskBox[73, 0.02260771622706348]}}]],
        MouseAppearanceTag["NetworkGraphics"]],
       AllowKernelInitialization->False]],
     DefaultBaseStyle->{
      "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
     FormatType->TraditionalForm,
     FrameTicks->None]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"Paley\"\>", ",", "81"}], "}"}], "\[Rule]", 
    GraphicsBox[
     NamespaceBox["NetworkGraphics",
      DynamicModuleBox[{Typeset`graph = HoldComplete[
        Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 
         19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 
         36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 
         53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 
         70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81}, {Null, 
          SparseArray[Automatic, {81, 81}, 0, {1, {CompressedData["
1:eJwlzSFswgAURdE/Nlg3EMhK5iYnJycnG1QlQVUBsrISWYmsrERWIiuRyEpk
JXIn2UuOe8n92O7Xu6eIWMf/PskoaegZSZ1+KKjpGEgmEV/kVLRcebB6jvjl
wIkLd5YvEd9sOHLmRkz1yShp6BlJZ/oU1HQMJK/65FS0XHmwSvQ5cOLCneWb
PhuOnLkR7/pklDT0jKRzfQpqOgaShT45FS1/d9kqzg==
             "], CompressedData["
1:eJwtltdaglsSRAVJkiUHkSyKSI5GwCxgOI9wXmBeax5zVvWeKy7or/9dtVdX
7/q///nnX+/R0dF/o0dHHn69vkAoHI0nU5lcoXR2Xmu0Li67vf5wPJ0vb+8f
19uXt4+v/fev59gfDEeisUTyNJ2ltFKrN1udy6tubzCczla3d/cPjy8fXzuv
P3gSTqSzNKtUa82LTq8/GE+mi+Vqvdk+v7y9f3wdvn9+/zzURWPxxGkqnc1T
XG002xdX3etefzSeL9Ttaf32tT94j33Bk0j0NJvndNV6o3151R+OprM5n6Tf
69vH59de/aiK63CZbL5Iab3V7lxe9276w8l0uVK3zfZj//1DP3/gJBKLp/NF
5EpE93o4nswXSz5KPw6423//eahJ6nC5fLFMIUquujf9wXA8m9/ePZmYr+/f
P7ULhiL4ki2WsU8qejfj6Wy5uuWrtON8B/zzHlOU0vEKxXKFSpRcY95ojDn3
DxsTs//1qt1JOIYx+XKF65CM/mA6X2Axn6Udx/uhn89PUUbnK5WxuiEhN7g3
meLN49Ozafn2+tQuEk3gTLFS5XqlYziaL1d4zFdpx/H+PL5AkJqcTsfN1SlE
xwD3ZnOcWW9eTcov/gXULxYXB+VqHV6kYzxZ3t7hMp/dH+x8gdAJJQWdjotr
UoeOEfYtljizfX43KcgIhNQukRQIlXoT/qRjOru9f8Bmvmu8+ELhCBUlnY5r
a1OGDCPrFmNeXj9Nic4XDIXV7zQlFKrNNkBLyXxx//iEzXyYfoFwNMb/Zzoc
t9ahCBHG1T2+vL3vTIfxgoNR9UtnBEO93WFCJGW5elxv8JlPe7yhaDzB3+c6
HbfGZEiEYfWILR+fxr3hgn9xdcvmhEKzc8XAScrt3Xr7jM98Gl584XjylIKa
zse1MRsSYVyt8eVrRz+jBfuS6pYviIT21TXzKyn3D9uXV2zmyx4TEk2m0pQ0
dECujemQCANriy/7w5/BgnkpdSuWRELn+oY4kJLHJwYYm3UfDvx4KpOlpqXz
cW2Mh1QYWC/YonkzWDAvo37lM6FwdTMgX6RkvWGAMZo8MCXJTC5PxYVOx6Ux
HFJhWL1hi82bwYJ7ObWrnIuF68GIvJKQ7TPza/wdO/BTuUKRkksdj0tjOqTD
uFIUad6MFewrqB2hhTc3own5JyEvr8yv+PM77DOFUpmKro7HpTEdUmFUKYiU
V6ETYwUDS+pHaGHOYDIjUCXl7X2v+wgEHfY5kpKCnk7HrTEdUmFQkUNKq3DE
WMG+M3UjsjBnNFuQzxLy8flt9xE6cdQXCEoq+joe18Z4SIVR9c35FFfRmNGC
f+fqR2ZhzmSxIvAl5WuHf/5AOOKgL5GTFAx1PG6N+ZAIw+qX+VVcxROGC/7V
1I7Mwp3Z6o4FIiniGV+iMUf9GTlJwVjH49aYD6kwrphepVXy1GDBvYa6EVmY
s7h7YB9JieMZZ+IJx/05QUnJVOfj2pgPqYArZldZlUobK7hnS4vAwpvVwxPr
TUL+zzPGJE8d+DWCkpq5zsetMR5SoftlehVWmazBgnu2tkgszLl72rAvpcRj
QY4xqbTjvkFOUrLU8bg2xkMyuF+mV1GVyxsqmGdri7zCm4fNM+tXOjzGlWIo
k3Xct8hJarR5GV9c/pAOrpfxVVIVisYK7tneIq6w5un5lXV+sPkwshREubwD
/4KcpEi7l/nFZ4D2cr1Mr6KqVDZU3M7XnhEKm9d3ngc/mg/jSkFUKDrsL0lJ
arR7mV98hmdkhCNMr7LqrGKouKWvRSMUnt8/98ZzIGhcKYlKZcd9l5ikRsuX
8cVm8YyMaIzxVVqdVw0Wt/a1aYTC6+dO+xchBpaC6KzisO+Rk5Ro9zK/O82H
6YgnmF6FVa1utLi9r1UjFN53B+1fhBhZCqLzqsO+T1BSot3L/IoXn+lInjK+
CqtG02Bxa1+7Rih8HuDFJx0GloKoVnfcD8lJSrR8mV94CZiMVJrhVVa12gaL
2/paNSJh9yNeAtJhZCmHGk0H/picpEbLl/mFl5DJyGQZXkXVRcdgcWtfm0Yg
HOjHeEiHkaUgarUd91NykhptX+b32M9zUjJyeaa3YW9Eg8WtfS0akaD5xeiw
lBhaCqKLjiN/Tk5SpP37x6szaioKRaa3ZW9EY8Wtfe0ZgWDzi9FRKTG0FESX
V478JUFJlfbvMc/OuKkolRneC3skGipu72vRCASbD70845JiaCmKutcO/VuC
krLfPz/PzqRpOKswvJf2SDRS3NrXmtm5eRNZenkmJcbYUhj1bhz79yQlhd4g
786UaTivMrxdeyMaKW7ra88cbN4Elh6eKWkxtBRF/YEj/5GkpO7Yd8KzM2MS
anWGt2dvREPFLX3tmR+bN5Glh2dGYowtZdFw5MhfE5X08wciPDtzpqDRZHj7
9kg0VNzS39k+P9ZeiOiFz4BIjLGlLBpPHPlbkvJPFMR4dxZMQqvN7A7tkWio
uK2vPfM/IeIJZA==
             "]}, Pattern}]}, {VertexCoordinates -> CompressedData["
1:eJxVlGtQjGEUxzdDiSlpRoTG7DRG5ZKmotGMY8iaYcIm9xIll5IyroMvSakw
rGQiJCozzeQaFqsjWW3Ell1dNu3osrW1++6ba+uS65zzwTPzzjvPPM+c539+
53+ONDY5In6QRCKR//n+/hvDbjzMbrgN7Wa/1uhuEQSfV/IF1VUgfbkq6MIF
EZ4n19dEWIygcLYHnxpsxclFP4oMV22omLva/m3Na1SdOTli/10LSv6td4iu
5wMvl4tokinuZERU4pPsZWXpzSKW7I7fcFajhIrI6vR1hisQOOD+vuGriCm5
k9z2ZOtwzKvg2rp9NtjiFLWyNvMdOM3zWqGMt0C9Vm/xSDWhg/1qZNatbkw6
YUyZcP8tBg8vDy3KswLpR9Yf8PqoYaC0B/WxfdOFcR1w637CRe8PIqYmtqom
qcswI6RBnRTUBL093n1HCgTon7083TFWAJ8NJULM6mYoC487MHVLF+jnBT1I
a+qCT2rjUX+DgKWy644+Lo1I8YDjkR5gPdM3LVoxX/kI5AWdrvkaESk+cnyK
BxyP9CDrCf/qFnncaMWq9wcd9fktGJHXH6I7/BKzfBVh/t4i8wDmQbyBeQ95
vM/RZcAGMc5FT68JWvix47spJ7cN3RMyIuWqXrzR6eeBvvUwRRadKOpsuNcw
duSxNBF+DTkk8Zz1DCT/rT7mCczzVNeJrUnnOiAgD+d2LexB+WabtO2AAdcV
jjhzUyrgLOmuuonjzWh+K+zfOszEPJF5TnvRGG9fYoXZ2oIZpbpW3iPvKV/g
fLPOmT/KZSJGrZpp9PJ8gcrQxHvRZjPU+joEOI/uxMIva0Pl7hY8ParqjYNb
G/yzZ8cb0H4xu/SPtCHlD5w/+RvZ33Qf+T75EdiPE6M03kpFJ4ak9pRvTzOD
/bt6W02pBpr8KttTNolI9Uaud2b6Gp0qrhclKdbmnZ7tzAeYD8UDjkf1Bq43
9Qtwv3hUVDQUy7phTuZGzc3PJuYLzNdzZdT43Px22OUSGHRxaC/3D3L/UP8i
9y/xAuZF+SDnQ/qB9ZNfkP0SjmGq3T9FXK9e7LW0JQdCLhVPbpLZoC2/ROuq
1APNB+D5QOfI56QXWS/VF7i+NB+Q5wO9B/we+RXZr+R3ZL+TP5H9SfyQ+dG8
Ap5X5CdkP/0Gus7Gcg==
           "]}]]}, 
       TagBox[GraphicsGroupBox[GraphicsComplexBox[CompressedData["
1:eJxVlGtQjGEUxzdDiSlpRoTG7DRG5ZKmotGMY8iaYcIm9xIll5IyroMvSakw
rGQiJCozzeQaFqsjWW3Ell1dNu3osrW1++6ba+uS65zzwTPzzjvPPM+c539+
53+ONDY5In6QRCKR//n+/hvDbjzMbrgN7Wa/1uhuEQSfV/IF1VUgfbkq6MIF
EZ4n19dEWIygcLYHnxpsxclFP4oMV22omLva/m3Na1SdOTli/10LSv6td4iu
5wMvl4tokinuZERU4pPsZWXpzSKW7I7fcFajhIrI6vR1hisQOOD+vuGriCm5
k9z2ZOtwzKvg2rp9NtjiFLWyNvMdOM3zWqGMt0C9Vm/xSDWhg/1qZNatbkw6
YUyZcP8tBg8vDy3KswLpR9Yf8PqoYaC0B/WxfdOFcR1w637CRe8PIqYmtqom
qcswI6RBnRTUBL093n1HCgTon7083TFWAJ8NJULM6mYoC487MHVLF+jnBT1I
a+qCT2rjUX+DgKWy644+Lo1I8YDjkR5gPdM3LVoxX/kI5AWdrvkaESk+cnyK
BxyP9CDrCf/qFnncaMWq9wcd9fktGJHXH6I7/BKzfBVh/t4i8wDmQbyBeQ95
vM/RZcAGMc5FT68JWvix47spJ7cN3RMyIuWqXrzR6eeBvvUwRRadKOpsuNcw
duSxNBF+DTkk8Zz1DCT/rT7mCczzVNeJrUnnOiAgD+d2LexB+WabtO2AAdcV
jjhzUyrgLOmuuonjzWh+K+zfOszEPJF5TnvRGG9fYoXZ2oIZpbpW3iPvKV/g
fLPOmT/KZSJGrZpp9PJ8gcrQxHvRZjPU+joEOI/uxMIva0Pl7hY8ParqjYNb
G/yzZ8cb0H4xu/SPtCHlD5w/+RvZ33Qf+T75EdiPE6M03kpFJ4ak9pRvTzOD
/bt6W02pBpr8KttTNolI9Uaud2b6Gp0qrhclKdbmnZ7tzAeYD8UDjkf1Bq43
9Qtwv3hUVDQUy7phTuZGzc3PJuYLzNdzZdT43Px22OUSGHRxaC/3D3L/UP8i
9y/xAuZF+SDnQ/qB9ZNfkP0SjmGq3T9FXK9e7LW0JQdCLhVPbpLZoC2/ROuq
1APNB+D5QOfI56QXWS/VF7i+NB+Q5wO9B/we+RXZr+R3ZL+TP5H9SfyQ+dG8
Ap5X5CdkP/0Gus7Gcg==
          "], {
           {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
            ArrowBox[CompressedData["
1:eJwVxdnWQowCANAvoTKVlJQkUyhTNCENxojSv84T/C9w3v/urLNvtvDvf//5
F/j7+/sP/Pf3/ztAB+zAnX4H6WAdojPqjDuTDt1hOovOsrPqrDtiR+5sOlpn
2zE6VsfpuJ1D59S5dILOtXPrPDpxJ+3knVen6tSdT6cFugAE9AAEQAEMwIEh
MAJIgAKmAA0wwALggDUgABIgAyqgATqwBQzABhzgABwBHwiAELgCEXADUuAF
VMC7C3V73UEX6Q67VHfaZbqL7rLLdfnuuit1N121a3Strt11u1730D13L12/
++g+u3E36abdvFt0X92q23Q/3W+37f5ACOyBAxADcZAAhyAJjkEKnIIzkAEX
4BLkQRGUQAXcgDq4BXegAVrgHnTBE3gGQ/AKRuANvIMPMAcrsAYbqAcNIBTC
IBKaQjNoAS2hFcRDAiRCCqRBOmRBDrSHDtAROkE+FEAhFEMJlEIZlEMvqIQq
qIa+UAv94B48gFGYgIfwCCZhCp7AU3gGz+EFvIRXsADLsAKrsAbvYAM2YQt2
YA8+wBfYhyP4Bt/hB/yEY/gF1/AH/vYGPbSH94ge1Zv15r1lb9Vb94Se1JN7
am/b2/WcntvzeqfeuXfphb1rL+qlvayX94req1f13r269+n9+oM+2sf7oz7Z
H/ep/rRP92f9eZ/tL/ur/rov9Td9ta/3t32zb/XtvtN3+8f+qR/0w/69/+g/
+3E/6af9qv/pt/3fAB3gg+FgNJgO5gN2sBqsB+JAGiiDzUAfGANz4A4Og+Pg
MvAHwSAa3Ab3QT4oBq9BOagG9aAZfAYtgiI4MkTGCIVMkCkyQxhkjrAIh6yQ
NSIiCqIhOrJDDMRGHGSPuMgBOSMX5IpEyBOJkQRJkQzJkRppURwdoiQ6Rmco
i3LoGhVRGVVQFdXQHWqhNnpAT+gZDdAQvaJ39IE+0RdaohX6Rmv0g37RFsOx
IUZiE2yK0dgMm2MLjMU4jMfWmIjJmIptsR1mYha2x1zMww7YCfOxALthdyzB
UizDcqzAXtgHH+IkTuETfI5zOI+LuIxvcBXX8S1u4g6+x0/4BffxKx7hN/yJ
x3iCV/gbr/EG/+At/iOGBElQBE3MCIaYEyyxJDiCJwRCJGRiQ+iEQZiETTiE
RxyII3EiLkRIXIkH8SQyIicK4kWUREW0Q3JIDadDesgO+aEwlIeboTbUh7uh
MbSH7tAbXobBMBzehvfhY5gM02E2rIfN8DP8DtsROaJG0xEzmo8WI3bEjVYj
fiSMpJE82oy00W5kjezRfuSOjqPT6Dy6jIJRNLqN4lEyKkavUTmqRu9RTVLk
lJyRDMmRAimRG1Ijt+SONEmL3JMH8kgG5JWMyAf5JGMyI3OyID/kl2zJ35ga
T8ez8WLMjpdjbsyP12NhLI2V8Wasjbdjc+yM92NvfBifx5exPw7G1/F9/Bin
42xcjqvxe1yPm/GHmlIzak4tKJ6SKIXSqC1lUCZlUw7lUSfqTF2pG3WnYiqh
UqqgXlRJtdRvMp3MJvPJcsJNVhN+IkzEiTRRJupEm2wnxsSeuBNvcpycJv4k
mIST6+Q2eU7iST4pJu9JPWkmn8l30k5n0/mUnS6nwlSZqtPt1JhaU3u6n7rT
4/Qy9ae36WP6nKbTbJpPy2k1fdMzek6z9Irm6TUt0BIt0wqt0jq9pQ3aovf0
gT7SZ/pCh/SVjugb/aATOqVfdEk39If+0i39m81n7IybrWbSTJ3pM2NmzZzZ
fubNDrPzLJiFs8csniWzfFbMXrP3rJ41zJxhGY5ZMwIjMhKjMBtGZXRmxxiM
xTiMx5yYM+MzARMxN+bOPJiYyZicqZg382Va5jdn59ycn6/nylyf7+bW3Jm7
c29+nJ/m/vw6j+bxPJ1n89e8nFfzZv6ZfxfsglvwC3EhLeSFslAX2kJf7Bbm
wlo4C3dxXFwW/iJcXBf3xWPxXMSLdFEsXot60Sx+LMfyrMCKrMruWJN1WJc9
sEf2zF7YkL2xdzZlc7ZgK/bN1uyXbdnfklvyS2EpL5XlZqku9eV2uVuaS3vp
LN3lYXleBstwGS1vy+cyXibLdJkvy2W1/Cy/HM8JnMTJnM6ZnM253IE7cWfO
5wIu4h7ck8u5F1dyNddwH+634lfCSlptVupKW+mr3cpYmSt7tV+5q8PqtPJX
11W0uq8eq2SVrrJVvnqt3qt61a5+vMBLvMJv+B1v83v+wJ/4C+/zIX/l73zM
J/yLr/g3/+G/fLsW1tJaWWtrfb1d79bm2lrb6/3aWx/Wp/VlHa5v6/v6uY7X
2TpfF+vXulo3648gCYqgCppgCnvBE07CRQiEUIiEm/AUUiETKqEWGqEVfqIk
KqIqbsWdaIimaIuOuBc98SiexIsYiJH4EJ9iIqZiIb7EUqzEWvyKraRIqqRL
W8mWPOkoXaRAukqRdJceUiLlUiHV0kf6yoqsyrpsyKZsyba8l13Zk4/yWb7I
gXyV73IsJ3Im53IpV/JbruWP/FNURVd2iqHslaNyVgLlqtyUu/JUYiVTXkqp
fJRW+W3Ujb7ZbayNvXE2+423OWyOm/PG3wSb6+a2eW7STbYpNq/Ne1Nvms1n
06q6ulNN1VI99az66lW9qQ/1qSZqqhZqpb7VVtO1nWZqjrbXXM3TjtpJO2u+
FmpX7aY9tETLtUIrtUprtI/21Vp9p5u6rTv6Uff1UL/pDz3WEz3Tc73Ua73Z
7rbm1t66W2972B635+1l62/DbbS9bR/beJttX9ty+97W2++23f525s7e7Xfu
7rwLd9HusYt36S7bFbvX7r377L6GadjG3jgYR+NknA3fCIzQiIy78TBiIzUK
ozLeRmN8jJ9pm3vTMw+mb0bm3YzN1MzNwizNymzM1vxZtrW3POtkna2L5Vuh
dbUi6249rdhKrdwqrdpqrK/V2nvbs4/2yQ7tu/20Uzu3X3Zpv+3a/jp7x3OO
zsXxncAJnci5OXfn6SRO6uTOy3k7H+fr/Pbe/rg/7y/7aP/cJ/t8/9pX+/e+
2X/2P9dzj+7ZDdzQvbqRe3cf7tNN3MzN3ZdbuY3buj/v6J093wu8u5d4mffy
Kq/2Gu/rtYfj4XzwD9dDdLgd7ofnIT4kh+xQHF6H6lAfvsfz0T+Gx+vxecyO
xbE61sfP8Xv8nc4n/xSebqf76XF6npJTespOxak8Vaf69Dn9zv45PEfn2zk5
F+fyXJ8/5/b8u/iX8BJdHpfnJb4kl+ySX4pLeXlf6svn0vqhH/l3/+Fnfum/
/Y/fBmEQBfcgDpIgDbKgCF5BGbyDJvgEbRiF9/AZxmERvsMmbK/R9X59XtNr
ds2vxbW8Vtf3tbl+r210j55REqVRGTXR93a/PW/JLb8Vt9etvL1v9a25fW+/
+/Oe3LN7fn/fv/ff4/lIHtnj9Sgf1eP9aB6fx/fxeybP7Fk8X8/m+YuTOIuL
uIrfcR038Tdu41+SJUVSJlXyTbO0SMu0Tpv0k37TX1ZkZfbO6uyXF3mZv/NP
/s3b/FeUxbtois+rfL1fzat9/cp32ZTfsq3eVVN93837+/7VTf2tf823+X2+
n9/31/7+BzS5CQs=
             "], 0.022608414061381338`]}, 
           {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
            DiskBox[1, 0.022608414061381338], 
            DiskBox[2, 0.022608414061381338], 
            DiskBox[3, 0.022608414061381338], 
            DiskBox[4, 0.022608414061381338], 
            DiskBox[5, 0.022608414061381338], 
            DiskBox[6, 0.022608414061381338], 
            DiskBox[7, 0.022608414061381338], 
            DiskBox[8, 0.022608414061381338], 
            DiskBox[9, 0.022608414061381338], 
            DiskBox[10, 0.022608414061381338], 
            DiskBox[11, 0.022608414061381338], 
            DiskBox[12, 0.022608414061381338], 
            DiskBox[13, 0.022608414061381338], 
            DiskBox[14, 0.022608414061381338], 
            DiskBox[15, 0.022608414061381338], 
            DiskBox[16, 0.022608414061381338], 
            DiskBox[17, 0.022608414061381338], 
            DiskBox[18, 0.022608414061381338], 
            DiskBox[19, 0.022608414061381338], 
            DiskBox[20, 0.022608414061381338], 
            DiskBox[21, 0.022608414061381338], 
            DiskBox[22, 0.022608414061381338], 
            DiskBox[23, 0.022608414061381338], 
            DiskBox[24, 0.022608414061381338], 
            DiskBox[25, 0.022608414061381338], 
            DiskBox[26, 0.022608414061381338], 
            DiskBox[27, 0.022608414061381338], 
            DiskBox[28, 0.022608414061381338], 
            DiskBox[29, 0.022608414061381338], 
            DiskBox[30, 0.022608414061381338], 
            DiskBox[31, 0.022608414061381338], 
            DiskBox[32, 0.022608414061381338], 
            DiskBox[33, 0.022608414061381338], 
            DiskBox[34, 0.022608414061381338], 
            DiskBox[35, 0.022608414061381338], 
            DiskBox[36, 0.022608414061381338], 
            DiskBox[37, 0.022608414061381338], 
            DiskBox[38, 0.022608414061381338], 
            DiskBox[39, 0.022608414061381338], 
            DiskBox[40, 0.022608414061381338], 
            DiskBox[41, 0.022608414061381338], 
            DiskBox[42, 0.022608414061381338], 
            DiskBox[43, 0.022608414061381338], 
            DiskBox[44, 0.022608414061381338], 
            DiskBox[45, 0.022608414061381338], 
            DiskBox[46, 0.022608414061381338], 
            DiskBox[47, 0.022608414061381338], 
            DiskBox[48, 0.022608414061381338], 
            DiskBox[49, 0.022608414061381338], 
            DiskBox[50, 0.022608414061381338], 
            DiskBox[51, 0.022608414061381338], 
            DiskBox[52, 0.022608414061381338], 
            DiskBox[53, 0.022608414061381338], 
            DiskBox[54, 0.022608414061381338], 
            DiskBox[55, 0.022608414061381338], 
            DiskBox[56, 0.022608414061381338], 
            DiskBox[57, 0.022608414061381338], 
            DiskBox[58, 0.022608414061381338], 
            DiskBox[59, 0.022608414061381338], 
            DiskBox[60, 0.022608414061381338], 
            DiskBox[61, 0.022608414061381338], 
            DiskBox[62, 0.022608414061381338], 
            DiskBox[63, 0.022608414061381338], 
            DiskBox[64, 0.022608414061381338], 
            DiskBox[65, 0.022608414061381338], 
            DiskBox[66, 0.022608414061381338], 
            DiskBox[67, 0.022608414061381338], 
            DiskBox[68, 0.022608414061381338], 
            DiskBox[69, 0.022608414061381338], 
            DiskBox[70, 0.022608414061381338], 
            DiskBox[71, 0.022608414061381338], 
            DiskBox[72, 0.022608414061381338], 
            DiskBox[73, 0.022608414061381338], 
            DiskBox[74, 0.022608414061381338], 
            DiskBox[75, 0.022608414061381338], 
            DiskBox[76, 0.022608414061381338], 
            DiskBox[77, 0.022608414061381338], 
            DiskBox[78, 0.022608414061381338], 
            DiskBox[79, 0.022608414061381338], 
            DiskBox[80, 0.022608414061381338], 
            DiskBox[81, 0.022608414061381338]}}]],
        MouseAppearanceTag["NetworkGraphics"]],
       AllowKernelInitialization->False]],
     DefaultBaseStyle->{
      "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
     FormatType->TraditionalForm,
     FrameTicks->None,
     ImageCache->GraphicsData["CompressedBitmap", "\<\
eJycvQmQJOl1Hlac7rnve2avmd2dyuw9ZnexII7FXiAJYKcqe0HaNEzStGVD
vBYgKckwaVEipiob9BUOUcGQIhS2TF/BI2hZ4TBtyZZ42KQdJIMXeICkaQIE
ASz2vubuqyrL+f73vve+P7une+WN2O7p7qqszP9/x/e+d/zPf/JHXvi+H/7k
j3zqez55/rnPfPJvvfCp7/kPzn/sb36m/dXcN/R63/Cw/H++N9/+e9brbfhy
sdf7//Pvv5++7ny0/fKj7f8/Zd/fJ7/dtcXf9H29n9jiJTvT33Z/b/vlt4+f
OPXOQ4+9f/L0R55/5+J7n/jdE6fOfkb+Ov8uXrNzi8/Qz+997l1cZi69Zu9F
e83sW7/ze2b/+J/8+uxn/tnvzX76n/7fs2//t1+Q16bL7vhXeO3cu/hsvb/e
j23xJLoSh7b7yB8+2X/2e4vF8Y8tDC//8tH7PrC28MgH5HVz8sLeHnnp8sX3
Pvn28f43vVUO67eLS6Nbpx4aTBce/WC87JC8TG7wXx6847EfKYdL/84Dw/p7
Tyw89ycnzty11cPObfEAf0ef8W+nrwe3XI50pU984twDwx//yb3Hz9984OL7
5RN7ene75VNXH3nvU5OTCx+ZlcPxrGj/P3b/07MnPjzo7Uyv2TV75iMfnx29
94Ozsqr17xfS33faJezPTVGNm/bPzamHq9kDugb2MQewCL926O7Hv2thOLqv
X/3Y9/d27Ljdbevu9f7GFmug63Nwq038/ZOn7vjlO9//3deLwdJqf1g3x+5/
ih4Md/6B9sHr9uHGs9MPL85k9/7Rz/9KD7ss13zo8Sdnpx74WFqA9LqL/jqs
Y7zsOV2n9v/jF3gdD8THVXVz7plPNafPX9xKAua3eHpdmd4Pp68HtpOAXQ9+
Yvyf7D58x/IDj7y/I8HNxW98pjm58FF9tnYdaA0gwfxs7SanZzv/4R+anbzn
4dniv/HvykvT/f8Xv/B/pOc5ff6R2fmnXtgha9W+feuXXpSXJrGSO9huZdMN
dsXroDzISquK/8OBU/26rJYe7VeflWfecl107Xo/pEu4lRx96dQd57929xOf
XCmHo5nJkO7pe3hP00Pcu926PP2Cy4fo29nH/vX0enno9rLpyeTnM488r6+x
68r327/24/Hadn/ufXb7BZeVzPX8oDxLI3ouStze28o9T/3Ayql7HtrSJP8Q
r+Lcp9ovby9cfG/XxIiUzU4+8NH0KLTH9pqzmZYVpo1yi2du98gXn3eJxXdZ
All+keDj7aPJ59z77A/i7z2Rx3qHrHrvlL6wfYHoqHw/Ly8cpg9tSjVkW+7P
6XbNdW82UZmO1RCzmqyLC66+bA5m8UdpJb9nW5s317+v+uxvHTjzYBObdzqM
dPtp57cTgCSEY7HY02I4aiC4vnLt93uf+XS6a9HhHbK2vRO2K+P00EX339XY
BKemnRnbv+n7UAW6fY8aiNN2Kdq8C9i8T/vL09/fpVzLRx3LbO++abs8f7Tv
dPm32we58ODzY1nHzZb4e3UT/vr2nvW/7g9Gb+oC1ps4juMuAidFpE2Lb6vB
Fz9uT9re/WLtK2LfbQP2ZwtbkPhD+7Hg8uok7q359evg78NxvG6Ybwq9Rt9+
yv+sHzmO2xz6nm9pmPQ15lu61v0AW3cRw7XWTb956qFLL52848Jmq67a0ftk
+rolaHzt1N1Fc8+T39eDlG3nhs49HW6ohEJcZGn8wVgrCL++1tZ6H/09TFgu
+Gkh1Ajt8/WMtR3Pcqs2hs1KW8GqdBvVKjfudFMOoar0VDCQz3x6Ll3+RIIl
21qOp9R9nX/mU7Nt4Mtf561KnuGdhYfZMyTzN0ueYeGjPX3IMq3D7ay+G12s
0TBkq+ssYcDzxcDfQw1YNdjzsEMtcg/Svqw3739QY1bPJRGYi213sZjPNqaA
au0004k/jUXzVVrJUx0J3Ta529qGjM0jdVzNvKz11YuPf+jv7pifP3Th0li3
pfddW3gbjczmJHT4zUNnHiBzelS9zfmAPVjFTGkeJqXpGh81au3XwyG6ZJj4
d9lO+q6lRTGpmcP7Glv19usBupYpXmhWa2pq91S262pjL/AtZrcOxAZnl9le
NpJsT/mxWNGrjZp4/pkfzATV0Jmu+H5Z8dUj596/2t7t/1wO6gce+rbP3c6J
2a72vnPr6OBHJAArBiO5ZLMBwzzZAd5sSupsbTd+j0XwBxqG5uUaxwgiQS8S
eF/kzIRBK0tzlhssKHmooso3oKBNdfUzmRGVzGU1fY5IV/uK3YFccC+xWfb+
wzAGOQJiOXP0o/exETgc7ISS6TOmbeTxxsmHLv3+sVN3bBrM6Fb3viN9Pb6V
X7x6+p4HZuee/L50+9tFca1PhEWylQgrmfRXHCvWNZ6P9SoMV26xO24sWyfX
dbOg+1kWOgqZX9v3Qo3ALkZE9n8SBvV5u3PZ9P3F8xkMks13iMsCtag3mZal
dxcJbcfgUXCyLSw3wTr/9LYO9jt4zzcLvY6Hg21DL2zN7Z3r8x2bFlu6QUWG
cIxjYE0Vf3piNgvFYo5Y6LrYleQmx+Ysw3zUtpviKs7njpvAUu5J08+Jigqb
7aLV0Oc3jHndzXTUNu3yIoAYbpTwgeGz4x1vMPZ3395jP28IwuDxBmYjjxDz
Df8Hc7sONE88OzD/rlQNU3UQpQ0xcRvZQZQLB/vD2h7MXfoQOKSoeN/J3Jqr
3d/EvoaZLioNLAvTFJIVXUQz6+YW5gwUhUj4tubwutKt7cQk8rv1vsSy2KY9
udMf0tv0SfRlc4TCFUkkaMb+Ih62/Xo87HtHqCFImwUOIYD6mpwanJN9+6uD
Zy+eXXjuP+r9m7rN35q+7t/Uwbf/yUt/oV9dnmx0IXPsQtyE+oIyLum4IyyD
ysPBAMRZvDnOpNbErDE33vPAEfZB/97GyUuTkA/sSN3EDrFep+s1BCMa28Ed
jZmhLrIQEyUvgKdmjwPI5uJ3kFFBw2YEJFB7pUkZ5qJx42TAPQ/CIKOB/4sh
lvFAhji68QukZ0NsvI9JpEl/UP9icWn0sX1nF7rS8G0qEB9X3387tPf3dh46
vSwEZvkuGMJzKcwbM2W2n93njBQ3M/gUKaXgJVbDDXaDDVZcQ8ZWVpuFBip6
2jdF/x/hYyETovSNGwLmTuLj5PWTYpCgVEOBtgnNwaYbKG4SSefQz+3fvPoH
FZLGLIvYq0x92L0wioW9OpB53GKRRIYW2zdg0fbl6Dab+YjTYq27kZTDpvhR
jU3v+fT12Fb4cXrm/MUm4Ud7iC3wxA6gLI78cokxHTnku55Z1MWxba9vbZOj
ylpB6IFcrbJAc2zem1HJWDf9yCyMTJLF19o/r5fVKGcRyK2331sjVv/ewmL9
RitIikt2k1xkeKQxI5DSIBZyNh7+kHHqxpB8p2l9juLHpvtWgEvYsdDSQMcm
VGajztDlzbTSvmzHuCvz88hWwPTjLEybAdP5LjC1G0v0k8fEDwsr/+nAdLmP
YuMbjiBfEHa5jUcxR6aFyVI3QixY9izyxPoFIrCY4O5AjnnAKpf974rB5RfL
wQhecbMAY7193//T2vWb4ZX9iTQHUSlJQarRC+4oPKkhXwvIAF4y4sQs1W66
T9KPytxnEpK9mQcuQ3yc7SqDCpOPPcL+VSG2rZVYpjwb82m3iZtnQ64+8viH
frS3QYb+4/bL2hMfvkRYd6dxUB9kFNADkAWoseVXPZ3jDe45amdV96fkMJSw
TuWr3cErfs2qBvWk+CY3I7kfUb+lOg4MLgK31r5mYoYPzoH12iBVcjf+pK7D
6e9zft3e/LQYjFiNFOQeblj0XWsSCSNiP5rl6lHzNtvq7QvZt60v6Hr0pOEJ
wiOysQtDOZ87XdiGuSREYpBCBOZmz37sW39t77FzF+8bfNZEpfex9HXf7WCz
cJ+/I8mh22SZT6aEHUuD6dUcglReNJMsXeeduc0liBAKmy2KPfFFMmGmeBy2
eqzpCm9KOTZ/OGogahlIGG40Th6O8d8YQxNGxX2Y/WuceVHbSQZAN2gXHF7X
+3D8kT9o2PCcLoS1OtTAFTtN6GodGVqXTNdP05n9WbjDRhEv35iJ3s+gW4jR
f3Chunz0YvVjm8qTylrvo+nrqdsh7587cHKhtfGjbYHauacjf0mpVCdeKKbP
zLq9YMorZCvR4zfn+AhwYD/7HRc3BvrkGuEjGvIbjrhjeckago1r33syPCAJ
dmEIjfc4iwe7aA4eSeniHkX7DXEXmRh2KY7AP0HpIMocG6WTjA7H/2oBdq+X
w1ETSz1mjTGu+A5CVwxU4sG3LRNJmD3dzvXTDw//4viZc5vhdpW83kfS15Nb
wfbrQvve08J2uZOtCKlwXWG/lADNcDf7EwMeDxBgYIfReU9sb7MJ07/Zd1d1
ty5gXjKw3zUnADFjcnQwLfMuRia8c2bJhgkfm28tMzPDdIbbR2DuJlOiLgAL
02TCJbfQGKsRrkTu72ywEGwwqzFfgaw2AIpbcSfjsifMjWwPChkE6FblRc/7
6p5/dlta2qTRvm0G/+cY/pvw7N60+qMIZGrpB98w+92uzCQSgaOX3dOUZBay
fVxMq5elbSsGIgc6AGVMxoCjC78sSos6Wf0suopoLDezcXkCnHaXQHRmxdJD
B9E+RgzbAI3In30tInUGIU+0HjgtyC2AWx16nskwmNF9Yc1YCv13/h2QiBlh
Ej4llDbGIBvrE4Q8JXptY3FpHjfkwidxw+oTzz5HoPFg5K4Xxxtvb5NtLpwX
XiDAgcUNzc9dJpBehIUUKGxcPQ9a2RIyMiMf4htb2y4mUiugwi66NAE6kx57
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
g2wsXotNtudOeEZk70o0j9lRQirbKyYgTREnkoCqcEqOwkEKMY222/tu5v0a
YjELs1kt+z4M/E217PGxtiOLvjOo8mN8XtChPJSW4UXWsfMmMGEqDVVLo+og
ZuQ4oht6peGE2jgM3Z1u7HM9CFc5XmKXaYmRFDO8nY5oAJi2Y0TsXkCOw6A4
KQqDymGQGVI0UtBno9/NifU1JSgS0NWXcw5ybNUAqJc5Q0El4/PUj7kG+S5w
wJCzN0sus1YISMF0lpPnzKqbdHQVHXADUlYkankgFsYB4SQlL3VQflOEp0Q2
kkO+m1am7nxc9+SBiB4Z21U+cLjTswoQZZUVlCZwW0+2wUW2k2dzIk3FcODX
UiO9Py2tqerE3W3lZo1wi51OZKeZFQxvI6SZptPn0vEWmeU1s7YX7gzhjpvI
oLsgNrtA2hlNi8eqXVl5H70KIlshLmbfrJY9tyCb1LLvitnAvOXDWtfiW7ri
2DjFlptsB7r69zSyikEVqLNEp1qocr0/XLLk7kjTHpc+y1Yh1CnM+ltJrYIj
lntYjnR+RteJG/mdfmU5Bv39ShrdqP++4cz80F2H/P6dogrrVEZq18S5z+5M
nuUV6y1dtaJkF28LqdhFyHPJcIC3N/BmGjxoRyGllPIQqzYrnWQL9OKs9Mku
nRM9c2uPv+EgnAz8FlFbgHTbtO/kD4GZjWkdCgfHLts2eKGh+0keRS4snZAB
vYQhaL0toL73Mzf6tyQuGBuCQNDKV9JyS4C00kbPUmerCYCDb7RautzXgNuB
rvsL9nGVHEKSZsFqjGWJZbkfbE9Dy6ylbroUOFAyLBq2NAbFepjoMW466kwK
WjXK0TF35k93m2W6jNHjnFPyceKlj79z+y1kgQDrq7okCvgjcBjDIHqu1zcx
NtLq3DebK7wvsyKblLjvyuYKk8jpM78vC7WyEGuI0RgOW2QpX+7TPKwsEndS
K1lzBDVfT4cZDsZW9e5DFSkAGrsFY80ulBSDk8YYLXXYmgyeWifkujPBAy8z
bJ+t+BrVYaPfN0oV9J6nGy3aOJ4//o3Ki3Yfl9LYlz6o2Sg0iMJMw0ilHtCC
k90QcqgyX5wlDVkc3fImDtMykk7LY9E5UBxWDMek5OQMdEmnWt/nWCCMN3mv
9jbfcnzguUyKcUlbAqJ9EIkMUMtTq7cDxyZhTeKm6LN0GzF3E/eERgcNAtMA
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
Q2SrJjmGtyqsqApMj6CwooChurDisUAI76C78TGqjhMidh29sT8ZOZ/LHOyq
qV5izNy/b/GmxKrCL3IgBPMZqDm0ExiSro40wsgEck1uDlp/ToC57EVPh+Me
4XNtJW2PZvHg47F79IwJJLuGDqEKTFVkM/XGSGvBGOomb+h8moL8rfbdr9d5
p0Q3UdaKAnlBul7SHgfmEO9Qau0Vbc1sXnEBj/Pewj5w+YoMA5xr945yAA4K
uy7y8m33PbZx3ertVpB3aJItoT40lf7YKHxeeZ5nsjSfHhddplTT4efUdRQu
BDUW+grZkzoPunVWLiZqcWTOjrm5BVCqlnVOUXjmL5fOQQo2gY8HLjORiEEg
+2cqZgEZy0HgGQuP+TZJh7kQqirAeAoxcO4o1DgCXUc9EDsEJebnXU9etvE6
PJrXzlCmTld/z/VG5ycirg3qdVG9bpxYXeVLJNDtQKhpJcPxZ6Evf9+n4EL0
zffuqfE6KaBI/LLNc/e+veCpe8p8ieAb9j5lNDGOR6zSZa/FnGHXnvpmBwBY
0FRAm8rIrNQNrKcFzA9UL5sUYbXInJ0gKJ0mOjirJUPmykSlRMIjEg0ZR79e
ZwGOo7im1vw16MPX7HbfJDv+iZFAkIam4IS3xaRlbIsKoILu8YaNgWx1bKQC
cCEhr5qgw/jJ2L7NFDyuNWsOXZcab4WzcPe98UNNdqG8441cImLFOX0Bejlr
21+hqG8Y0rf9PHbiwnu+v6DnN/3FMhA8nAowC83803Koijh9m6giNxnWG18e
bzN56mnpDHbNBve4iORgx2lsGQVoYC6cIoenEec8laa5TnGTOjaOIMCzIE5p
I/ClHEXo7lqleDXjnR1CybtorV2kFRdel57Vhv0eLDoLjpNtl8G8I9CDJcDh
GZShjCyHp5LMioANaVvRM3TYxgJsdHUWYWRamA04O4AUnpKAtYzCAl/v+gGy
m6hjBJbiCMhALSm6OHffI4tLb24eiHwhzYk+dXUUwCVUadButBshBQnq8eh2
9iErvY02ZsCFpOGFftvCEuOZAGK9VoVschnCUmtoRoW11p8PZ1QozT1phfd8
Ul3gjXgF4j4Zy8VZjh0zYQ5aXOe3UyRqTm7PsQp/B2HmmEzbifTLV8BFNr50
Q2rbX1IuYGM7a+tCKwqcsUyYGql2R2q+qnOa0ean1Hs5TJTPPJ207tuG7xZ1
R1M7N/DY0sbVpjocvSd/599DLau8/h/n8SzO5WT+cO+iYVbeU/TKui3josbQ
Nx/3DKo/6O3S3mA0hiVZxTYavhAReky3oEELR9myWQAB69hiahuNpDhwWJim
3lxom9oGkyZcwvmQl3Cc1gPNILpysDfXmkq9w31jdR9BeCeTA0WEK6kmw10B
zgbnezApUB8ZBzipQWsn11/83mrHzzjELLkizWxJko9QmY4C9xDc3KIcrSKH
bKiUncw5geHDrjvcnevfvpdQMVq16jkeTQJYk8YZZghh5+t2ZlLRh1ER4lgG
MFBdHH7Ggne0sXg0feo3DTSdp665m53iEfXftCRBXOhNqA6DAzZXfCbTC256
vZ3r7BYIiVUI5EgXWDgnaU5ZmVSviEgaWoWYxxsSQZpcc7m3xYo8ID1KR/Xv
gkJ6t2H9amqMdFXxUzXRhBtgHo8Ck1W+vUV+TtxM1cKblxOdL8okdiUhNsIT
OPCRUTN7KI9/5Fvvf+ff+fTa2O7whu++/FhhiP7C/d/5I1gvYY9+No/X//es
rYpC9Tee7W6JDe72EhSGbig1t1tpzCJXdIM1Ervs5iJ0mLvTliA1W5pMXFcM
oQX6wDyJQpG1k6NQszI7E9ebkhAhyRBlpqgOWp+JrreWtR2gj6tHdZDeCl0B
89ol613AsDg7J226WT+76+9HdLaTMk7EmBIBbKbOxaHHHEVIAzGP6fjvlMD2
ZmNJJ31Q41ybuhEYZ1Km+FWUF4MvP0P8DKx11Nk6jpqMnxIv/ey9b++QhVgF
2PTSNIWH2RtH9Ab3tqwkOJjk+GkdBQ6B+qrAgaPLN1Kig3u97LN1CX2X1biA
WsVCQzCFxv18GRXpRmXuT54a8kEa6D9UM4QC0dsarnxIbrdVYrzy37gk8emA
1Al7cS7XVAXYIvMa6Zqgtih2h7ic9YKJhhSkvjkz3UsWhgG7kgZT7KCnSJ+F
wgIFWp5J6SW08PUlkjD580kHcmBZb5QdLIJz+/OErwzHlEhS7Rc1npLsCpc8
YJyjojxLa1Mq1mh8xuuulZGZebpoLB4smvb5S85OQy9TZ8qgaTpMqXZY0bRQ
Obr7dxWNWazVZEM8QUGJn2Ot6IIUDQ/i9IVX4kLrmo/IS/q5apDE0hr3SVMj
qYrXVrZiJHEJ75fqDS5hna0xavgskJqkNTTQwItcSaGH1lydzknbVEefTKlE
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
+1u2gNa0deV0xwsU1y7f1WLXZqO+L6pGQUOvLt0lhZ4Lm4GqIv+n/R6FBIMT
olr2dr1w2l3Kg0aAzPgWqLDj5epsYsgzJcF1TEgId5Xu3+0nHCRpPHbb+b5c
aJKsCWIS+fiZtUnbuzplntav97/7vt5ded48qWd7ZfCBrKlQQln+23yl/d/6
nz/bP/jP9yjkSbv09TxuX84+8K8oiQ9npTnlaeXnzTXARUsFIUHYrLHyYUKz
ZRiD9MLbNZ3NK3ywG2zUTmqwbAcYKMrnVKiYAeQTCOCom3pbiMRgA1dFYHZ8
h+QTR4a7HQM0wqeCoAgLv/cE7PfTclzILRvYJQO6Gc1FCTfXGgMxlsMsqeW/
S7fIb63P/D75rWeo3bXDvgpbEWCqwc/EfXpvuNbM2Yor3lg5tu1ESM3U1JdF
kugx1+mxCE5R8tMhQzXAf+DUQMPLyrIAWoRWVVL/2PDbS7ggZOOW7q2ssuB5
MnIFQIAEqqPvfzdgcxTmwfO17PsBvP2zGCHuw35cgFI9xEj4iy0zyU+X0EeD
6paD28qZtBgWJFznyqo4GisnXjB+VZTFy/rv5f5yrRc0H7/wI8/Yv+lSHJNb
39hDCAVeBzttK0dMIrDXHTVTWcmbMZyM9QMexnHax9gCbyUQc6tsb+3Wx8iW
77HjThrlic/1jV+RazAJSOAiQ5dLIDhWmeE3TH6IRYSl0OW3wpUAKTPKSJlY
dgd3vKlxhi+LPtD5y185ebVqabJf8uphT161sWOxC9ruZIpcN8dtU/PaMavc
Z5bje3PhrG1L7tFdL66Vtpu3f9fKN76G/VsyV6zccxp7Ua4xbf0z/h191p1R
s75dLY9+Vl/hQOGG4vL2azv52rPDtvDUwmbQd3QVbYZDdybOoisNzHAkLpkL
6+LeZbi0U2PctJKiBBjsRWvvaer4UZKypIDlWeu/gwbteo1YTF3r0c2k1Xr6
9WnJ6+q/Wib7CDXxhWSNBnLJB5tvjN4tHsPsj/v/3nF5uv6Wtel8rf/exTf9
xfk9+Tvnn++//4HLk/nrR+/5UfEoxAGUUuH3j4T2EMqiEfpCrqsNXfvvaju3
mGNvxu44+M/O9p5et0U/Xvt9a9M/j6JvWef5ZN63d4ZlKjKq4HlWmsgmarvm
WmWq97XNxzIGkc7LeNgoffBipYRoYU3F7au3dya6uyYsIZL6uBREJFGfOqGh
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
ts1gMrwAZMqbhqsJo9QNN+crQ/GvVhsUCPcwlBKbGOGXEyfd3Bu34c1TnUhY
liiq3n38RsqZvlGzIzgvaWi1Pj4vGU/dOGErPPLTr943CV/4suOzkvD3li6v
7Fz92JcVGBC+xtGLtGuQswNQvBIxI58dEhp66+EsWpHlaIm1LVEogxdj+FIq
TUcCDzigLeNZ1iAzyD0gZPLZPQh9z+3QrSquhHb0vfC6F3JX6U8NYsNvoZQm
bJR4ejMCT4aslmY1cu4BmzCDPk9fmvzu1cnf36hyofjgz+suSJLS6dasKDwX
6+7fUfVFt2xkmPZnqjCGw4Zu0GlX3iDWOL81wIEtYJl3iGJPwPXu1CCXoZpa
4RGeyVOFTYyYJrmRq4wyHj1Rlg32nfn0VJ4KmvI5iB6Tke2V+KJF48y5eAl0
ypc9zgCCFSUiT+yVQP+ZzoED33iPI4+rmOAbDZFzjgMDRmjkwkNoPM1fKBc6
AsgbVaygJrPohuzdBcNbCCXXj0nXFLZoNVfgbdj5rh2iW6mSrA7R/lNUcSf/
sgxmr8AkB8FnwNQQ0zAxE4lCUjGYTNZVWlehC1+nbY/cF1QYKDNGZFYVIkQs
ARssb6+r3UH3nquMJ1+QZh+gN8O51GQiPyt8Aqv5tt1spZGnGFydVveBpCG0
tAhmI6r7hP+1hqvGWaCGY8xgpiLb4qxil9KgHHXuXw6TCYxfgo+AaeoNfH1Y
j9aIBIkCpK5EjLDu50z4w8VLK23lyZnw95ie2Y/FvTLhKQn36tIzr7RJTHYx
7loKApQex9UXyBEx2uHyrQNm+aoPCn6qj15h7TA5JCAv32rdN9EHoo0ZncMl
9ht0yhYNCkJ/jLlnUiYS8unykCs8mc+BDNvXnoMnghHwKhGKeRKPDS83Fogi
5DU5Jv50UT9JsSywqoiZrxRfQ4J61+xL8Ro9oDa2sYzl+ghfFfuGqgEVqoOw
NIQ1bdhOJWXpnN92QRjHJmcrsV33pS0qAnYmC+o0x57ThmW7cqlo+q61joz/
C0+u5iDMi3p5RSwhhEW43VJLDzumkPrQh+8td5tbB4+d2qVLrlDPWX4tMf3f
OHPu/Cym37frOEkX9Qu7H1njSyjI0fishtIRzsDC+QR1wTlUW+To5DGQWFpj
wxskCtiMwTwsQL4E9tFPPTyBDcK8LNYsO+0CfkAEWcKAs4bA+pwgSfJL5DiY
HMhBb4je3kiaJwdpiaHNikN76fzTo6SBMTi/jiTOVUvg9ePORjMwjLOTKSmN
A01C7pAwEgNToUNX6KvKqD87zSFBgW52arBzqWa86mH2XQNYjhmX2+pr2j5F
/k62me66VRrUjqvarEaNPjex+G4sijSH6OfVven7Pz138fqnFs486QrjP/an
7+d2GFAdk3hdUGqfS6TL0inmuhfRyDFfChu37RGSYmqRN9jYa7AtPmFXTieD
LCq/7eoR0GNoTW8Enw2I65TO2bJDd2yqey1z3MIeD5lM0FOwESaI4833z1u/
2jxc7mIGLLfco5WLkNZxS5RSu68T380DK2toOKeuCoO0HZCoCX4f79UdgLxO
hZBN53nBBR6A9qNbQBBbRD7SROegIE19/H4lHAr/zBb96D8URVuPwDrMgLgk
tbUeZObt2pBoZyzP6szDfNjuPoFzk+djhL6HZ93NucMzLe3Tg1dqzBTyfU7I
9zhQJsI4ybwHtRtKBJxkq64gpEUDEP9+3yeSqJnEKVMOPkI5fHX9rGpjOVKV
YRc5oYBdvsijipQhDwhDlnWnslQUpuy7DA9Sn54HRYviB4axsV3QkY2frkZs
Ozb4yEagXAVFyNj3AnikEHMFSIfn0NotU6XGm7UVQb1Zden5RipjgjpFzq3z
e6Iy9yfLkjrS14lkYbbGxKJzYe/IQ52OhkbfIr/53eXe2l1nSsZxTX7vtH6P
ah8AW3vqwae7apLdlIkVpgHsfTF8bzIBerfi7+lKjHg5Istduu86lIK9mKwq
8oXqIKrdbzDxrUJTZg4mPhd1T7a6da8BmeiPFRIkj9c5BScqFlEUittMx2q4
gaPofYRcpfEGY03VPbdWj/IQ0S4tVnClqJDpEyxF+tcBf+VDRk1q04wuww+C
MgVkNfZ4GmoNPRQWQoR+IkdnKfx+WPeLoyv4GvDXNNDWR8p2zOXkJ3Kj+NAK
bhf8DEgyYZHr46leT4xrA12Y7IAZjwhXIpo3tMnxI33eWvuREFmlATKu1ouO
06KUBI/iEh4b1YLsMJLhNvI1ZpgOO3goj3YMO+wo9BQdUol5p8Q8BdtKOIeS
h/2Y8MKxzGTCc3SUztXiU6zCAtW9OBhG0CDWZpVSBITOxlY6J87AziYuZxVR
rlbGQ5MFXe57FdKRR4H4m50ygmUQ7zq7hEm3I1zrNB74WXd+Depf4QW+U1lz
E79eFG9UoQjihyQKc50yMWPvohvJzXzoUz9PuN0MQwtEQh4LIuZM5CDV+qWq
XpusYNeuZ+nPTOIATCJ4KOTHUGqJpk4YcgGzA5HBoZI8eBULA+74rl3Co439
9L91YH/QKTRpQdMo0KNktHgHPEZ6xC0rj0SZ0By0cbNiIHxsXJixQh/EB9lu
ly3YQlBVTEUeLz/7mNS2K9D78n+PTaO2v3bq9OIfLdafKKsA+GpHYKl3YF7b
OefAm9paQ0MTLTmrxWvtRAh02Drg+4VjCucFcv/HKN+iT9uV9TNuVatMV+be
oyTA+ZzfLnMlJpiG3N6uVtfechgvnoCK0OqnYAjgj2bBb8WSQfc4UeqHKCpH
8nWv7NdyBbk3+fnOsrsDsUHb7jbuhp0QhsiejeiyDmp9pNGuS5+yXKwgCFBE
K+YfQ0kh6pqJoetc2zfwyqFjIwihe7AgPYplIziabN8zvgWc1UlnEVi+QR9m
AW0IZWjCB4wZdrm2gmQLiVM/lt75wvs+/+bipWoaT23K0nl//u+1aTR1mrv3
28uv2FNmJtzm85Wnr+6iLgOwiUeVVUCYXKAr0aHyKA4a94PrNQitLiex+0du
AGT5kCgNK1mYLkyWDW6ueUpoQyaZBll6r0j0RO59G0BQEHagctR2zAthbVmh
bE3nkfiC1hoquQAsnl70QdGQHSH9ozz4JlphwOlDQR6Btqst5rlvIUEuTLKH
OpMuT1+Rm/wZ1seDsp8TXmditlgA77/bTq0tubWyjixdyPnYB9hn3aJKa24K
piNPjVgbx1eXsh56ETO/GJwqIBOsLmlkF49TQVBNrPMVSPJVO5bUJDnf71+t
9H9xGslsStL5cP7vE//p7LtfGp2/8my79nxy188IFUa5BrHJlk0JSka5GMy9
hMRh/js5+alclfvLdrq28iGOsdmTJ2wT1TFUVWlv2RRmCYh6JVIYFrhRsJxF
wKao57BL6bSfkbdlOcrJzUcPqmhGcuptAM4I2SPurkdanQO55OLC/6wsxmf1
PILAustiCm+3zzTf/Ypnb+Y5WI/8+FIaidqGHzzwnO8BXz8Y8QniCnPU92F8
0qziwpce7gcwxFL7CBe/VeE4OpaKLoX/ta9OFYHftjPni4JH8XVNWwlIi9Gk
StWL0FvcnGO8q+VabrWF+N7iyid/7cbqMA9d/ZDJ/e3836VZXRRjGegYfkAJ
tn4In/qLyc9cS8GYX1wKb4U2hqNbaCxqRcGtiHfIXDdi6n5wb4Wpc1/fdM75
6FwjVSumEwYOswZjP1aA1Y3qr51RyuFrMq8ulf7YZ1KS7p7fK0n6OzlfHSyp
hDsgvtYAudZrI3TeSbONre9jcxKvb9UYGow21+sjk/U8jSaBru+aDnghjYwy
9UgEfgLObxxChngf3V0D6Ouu6TLqy11wD+Tu4EseeA025WNhX2yR364jzgNL
MVZ59xi3sGGh9oTs4IQE/KiO2k/LisycinhbBX5aUuSoJkVgSGjQhVQ0Q7JY
KGsZ9jSFbiioLRhf2nYkpvrpGAbLLqzFmXkUbgGbtB0+xKevg7NdmM15b5o4
pLNSnZOxiQGpvmtdYAgwAZhbczcraZvvezi+I7ApXzr5urcnUpnGkK9n7B2j
9yFhSHk+sPtgqFpkD2ojtyb3ueMzl+QAEtBBputveBk1PEDSaxsBdTRaEZ1A
Nr4MZ1/CaNm52IbeJM3pzO8l+TXDwKJWzW3+xnL3DrNTVQz53/IZCKClhekV
n91npgmU/aFCblxZdsiZHg7w3wtx2udQyFLep6Q0TjClEV8oQquQDp5PEfBx
XD7WjwV9Rr0YGXdvNVX22UV8dhQEIAkh265VoENxjjbJdiPvvChEjSKpn19f
6Wd4DR0ZR6B4Z0NMYrkfNMwYBrvGffXX80Y9ZhC/7aYTr5yatJJ+ealavs99
j4sfKTlkMD/jhZwyq4MwSqm3u+wVi6mCma3J56T27wCnv1VHhQfmUhi/2r0D
5Qtms2RjwhzZ8235BFIEpZy5UsXaIKgOSMZnxIGL+Rl+UHlgXAsUDg4ynkH/
zO2LEQhu2lAOwVrzyT/5qL6pRf4FppmWmzjoRf52aKLLFQtoFd/UcZi5cJOB
wZZKaU+vLXPP3NprsUTARzfPvswJcv73qk+xMQWpY/pX35E4WCCEnBIFBNqX
HLs1WyKRS+8sHhRjo+J+RqdYF4pNK0nSfs+iclKdqIROMe6fVQn+6NjpKEV5
u7ITKpJku7SuOUI+k4zCfQuG86SvB/YdQ7W0DnoY6T/MTaT5JF8/dGoS+GaE
N+d9yIgMKy9BICGl/jZ5nOT8RvmYWBTZZ5zFwYPpNb/pX0OvF8bbw/qFEY6w
pIV0RxmUx6Fi8xnUIgnH8iGKWMVRa6YP6dSwGWcLFmb+9KwEw6vnLt7YuvLR
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
xT+fccm/sEt20n9uPv6fO+/6v374v14=\
\>"]]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"Paley\"\>", ",", "89"}], "}"}], "\[Rule]", 
    GraphicsBox[
     NamespaceBox["NetworkGraphics",
      DynamicModuleBox[{Typeset`graph = HoldComplete[
        Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 
         19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 
         36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 
         53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 
         70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 
         87, 88, 89}, {Null, 
          SparseArray[Automatic, {89, 89}, 0, {1, {CompressedData["
1:eJwlzxFQwwEYxuGvWu1frRoEg2DdBUEQBEEQBIOg2wW7brDrgkFXgyAIgkEw
CAbBIAiCYBAMgkEwCIIgGASDYDAYBEHPXe/dY6/8Vo/Pi2cTEXEU/9ugRJ02
fRKHLSo06DAgOxmxQ5UmXYbkpiL2qNGix5h8KmKfSx5455f16YhDrnnik9RM
xCZlbnjmi0w6YpsTbnnhm+UkYpdT7nhlxMpsRIEL7nnjh7W5iAOueOSDmNdP
iTpt+iQZ/VRo0GFAdkE/VZp0GZJb1E+NFj3G5Jf08weDji/v
             "], CompressedData["
1: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
             "]}, Pattern}]}, {
         VertexCoordinates -> {{0.997509, 0.070539}, {0.990049, 0.140726}, {
            0.960392, 0.278652}, {0.760979, 0.648777}, {-0.394879, 
            0.918733}, {0.880356, -0.474313}, {-0.0529235, -0.998599}, {
            0.295558, 
            0.955325}, {-0.863069, -0.505086}, {-0.123232, -0.992378}, {
            0.489776, 0.871848}, {-0.994398, 0.105699}, {-0.896547, 
            0.442948}, {-0.0529235, 0.998599}, {0.0176485, -0.999844}, {
            0.0881325, 0.996109}, {-0.394879, -0.918733}, {0.977656, 
            0.210213}, {0.880356, 0.474313}, {0.227434, 
            0.973793}, {-0.737608, -0.675229}, {
            0.489776, -0.871848}, {-0.984465, 0.175579}, {-0.783401, 
            0.621517}, {0.550055, 0.835128}, {-0.94996, 0.312372}, {-0.458702,
             0.88859}, {0.960392, -0.278652}, {
            0.550055, -0.835128}, {-0.999377, -0.0352915}, {-0.999377, 
            0.0352915}, {-0.969628, 0.244585}, {-0.635246, 0.77231}, {
            0.938344, 0.345703}, {0.607594, 0.794248}, {-0.863069, 
            0.505086}, {0.158177, 0.987411}, {-0.579185, -0.815196}, {
            0.911621, -0.411032}, {0.158177, -0.987411}, {-0.329089, 
            0.944299}, {0.760979, -0.648777}, {-0.635246, -0.77231}, {
            0.804847, -0.593482}, {-0.458702, -0.88859}, {1., 0}, {
            0.990049, -0.140726}, {
            0.844706, -0.535231}, {-0.261659, -0.96516}, {0.804847, 
            0.593482}, {-0.192926, 0.981213}, {
            0.427056, -0.904225}, {-0.925559, 0.378603}, {-0.261659, 
            0.96516}, {
            0.607594, -0.794248}, {-0.969628, -0.244585}, {-0.825291, \
-0.564708}, {0.0881325, -0.996109}, {-0.123232, 0.992378}, {
            0.227434, -0.973793}, {-0.520239, 0.85402}, {
            0.997509, -0.070539}, {0.938344, -0.345703}, {
            0.36221, -0.932097}, {-0.825291, 0.564708}, {0.36221, 
            0.932097}, {-0.94996, -0.312372}, {-0.688141, -0.725577}, {
            0.662106, -0.74941}, {-0.896547, -0.442948}, {-0.329089, \
-0.944299}, {0.911621, 0.411032}, {0.427056, 
            0.904225}, {-0.994398, -0.105699}, {-0.984465, -0.175579}, \
{-0.925559, -0.378603}, {-0.520239, -0.85402}, {0.977656, -0.210213}, {
            0.713319, -0.700839}, {-0.783401, -0.621517}, {
            0.295558, -0.955325}, {-0.688141, 0.725577}, {0.844706, 
            0.535231}, {0.0176485, 0.999844}, {-0.192926, -0.981213}, {
            0.662106, 0.74941}, {-0.737608, 0.675229}, {0.713319, 
            0.700839}, {-0.579185, 0.815196}}}]]}, 
       TagBox[GraphicsGroupBox[GraphicsComplexBox[CompressedData["
1:eJxdVHlQzFEcX5EuirCtI9WUWEmuIWS++k01mUw51igbJlHOchW5xjkTmt3K
jE3IyBWRagzryFcJW8lRYjfXHrX37q9mQrWyjvHX9828efPmvfd93+/n+Pqt
SV+yzoHD4ST8mX9XqVb0S2Ji4Ue5l6vcvRKcOaJ5e8tY0ExXQFz/GjipMnKy
H1ohraZqWnrLW1gQ9PhiR4Ie+Hdu2l7UtIHMX5pXGanAtikFyKRYoK6hMF4Z
ZIZ4Qa0hQPgFX81IstXxSjEnpFVzrIvFAaIBozYbmyDtUr9HjvlWGOcbqGKK
TNgozPC+wVei2KtJ5ZeDaC7WHxJXs5ibKknfH/8VOCXq58FaE6y8Glg9uonF
izGhXVyPhzAk88SyI+VmNDpl5DEJn4D8B4NDY+q2e+ZDAOMvl/5ise3HzD6F
+C4IXaNtPkqW5o/+F5aHfYtmIe89byejr6f1QGmjvVQ0phFsQoeOOD4L006V
eO0r1GFnp4si62w7zRftr5MePzrIov/ltNTVWc9huEnQUzTUgGfczxft0mhg
n+vBzkGFKvCaaF+x6r4RFEzuEc8UKzIGNz9dXzO0DBxfvFr4GefcrogRpJsp
H0jeY8nPTVntvSyGLboW9mBoMd2Dfdz1hVOdWNQ2uJWLY1/DpKiVm9ilbSj/
5pb59K4eeh4MshsGWqGXkWXZfd5D/Wdd9/ptGrg0x1u2Z6OB8gXSxD55ANRC
ZRW360sBC/yyibaybDUeEPeaRnCNOHbkH8SCLCDpl8pPiG1Fch8jY8bGNXi0
YPc1wfHKWVaqLyT5YdBww4HYagNM3V3wvbFPjQQf5PwbHcD5P4ie0XxUonzn
ZILLz0Y+PeerwjUelmRHfIM8ly2zJWorjQ8OE6JOv6yQobdP8CteCgt7lMnl
asFH8A5NjdjAmpGRbNUHF1nQV1o/zHmuHEg8ih8S/HH+p5ZS2XojBkT0HOZ6
qqk+qR+o/vDr4mTm5RUlxk6IeOInMAHxMxI+8VaIZ+v2yR/AdW0mt6rZQv8H
ck71iJ2TwqPmO2oxY8W9cMssHU7P9jB3h7SDZMdf5nVI/Ej5pXqgeFJ/U/9Q
vGn91L8oqhi26nCzFqyJPEPkFi0S/9F+ROsDohfaT6g+KB60PwDJh/oFfgOi
Bf3S
          "], {
           {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
            ArrowBox[CompressedData["
1:eJwVxdnagYoCANC/SAkhVFQajCVFIrOUQokU4na/wHmr85z72+tmCf/8L/4H
/Pv7+z/89/ffAAhkgRyAAChQBDCgAuBAHSAACmgBDNAGeEAEukAfGAIyoAAq
MAF0wAAWwBJYA1tgD1iADZwAD7gAPnAD7kAExMAL+ABfMANmwRwIgwiYB0sg
BuJgDayDDZAASZAFOZAHO2APHIBDUAJHoAKqoAZOQAPcgFvwCDqgB15AHwzA
ELyDT/AFfsAU/GZymUKmmCllKplqBs80M60MnWEybIbLiJlOppcZZEYZNaNn
Zhkjs8iYmWVmlVlnNpl95pCxMseMk3EzXuaS8TNhJso8M0nmlflkoWwui2Tz
WTRbyJazlWw928gSWTJLZZtZLitkxWwvO8hKWTk7yo6zanaSnWb17CK7y+6z
TtbNXrJ+9pYNs49slE2yn+w3+4MQqARhUBnCoRpUh2iIgVioDXGQAHWhHjSA
JGgMTSADmkMLaAmtoDW0gbbQDrKgI2RDDuRCZ+gC+dANekAxlEBv6AN9c3AO
yaG5Qq6YK+WqOTxH5MgclWvmWjk6J+Q6uW5ukJNyo5ySG+e03CSn52Y5I7fM
HXJWzs2dc37ulrvnHrlnLs69c18YhctwBa7CdbgBEzALt2EO5mEB7sB9eABL
8AjWYB1ewCa8hNfwBt7CO3gPH2AbduAT7MJn+Ar78A2+w0/4Bb/hFP4ieQRF
ikgJwZAyUkPqCIU0kRZCIwzCIh2kh/QRCRkhY0RFNGSK6IiBzJEFskaOiI2c
kStyQ+5IhDyRBHkhab6Yr+bxfC1P5Mk8lefyfF7Ii/lOvpcf5qX8KD/OT/NG
fplf5df5bX6X3+cPeSt/zJ/ybt7Ln/PXfJC/5e/5KJ/kP/k0/0MLaBHF0DJa
QatoAyXQFkqjDMqibZRDe+gAHaIjdIxq6ASdojPUQBeoiS7RLeqgJ/SKBugd
jdAYTdA3+kF/BaxQK9QLjQJVaBZaBaEgFjqFbqFXGBTkwqgwLmiFWWFRWBc2
hW1hXzgUrMKxYBecglc4Fy6FayEohIV7ISrEhXfhW/gVS0WsWClWi3ixViSL
VJEpssV2kSvyRaE4KEpFuTguasVpUS/OivPiorgsrorr4r7oFr1iUAyLUTEu
vorvYlr8liqlRokokaVWiS4xpU6pW+qV+qVBSSoppXFJK01L89KytC3tSvuS
VTqW7JJTOpXc0qV0LfmloBSWHqWoFJdepRQrYxUMx2pYHWtgTayFtTEO4zEB
E7EOJmEjTME0bIrNMAObYya2xNbYBttiFnbGLliIPbAYe2EfLMV+ZbxMlqly
s8yU2XK73Cv3y4PysCyVR2W1rJWn5VnZLK/L+/KhbJXtslM+ld2yVz6X/XJQ
vpXD8qP8LMflV/lT/lWqFbxSrzQqRIWs0BWmwleEiljpVLqVXmVUGVfUyrQy
q8wri4pZWVXWlW1lV9lX7Mq14lcelWflVflUvpVftV5tVltVutquclW+OqgO
q1JVro6q4+qkOq3OqvPqqrqtWtVj1a6eqm7Vq56rl+q1equG1Xv1UX1Wk+qr
+ql+8RpexwmcxCm8ibN4GxfxDt7Fe3gfH+BjXMMn+Ayf4ya+xFf4Bt/ie/yA
W/gJD/Ab/sQT/IN/a0SNrjE1tsbXhJpYk2pybVRTauOaVtNrs9q8ZtY2tX3N
rjm1U82rnWuX2rXm14LavfaoRbVnLam9a5/at96oE3Wq3qy36nSdq/P1br1X
79cH9WFdqmv1aV2vz+tmfVVf1zf1XX1ft+rHul336mH9Xk/q7/q3QTXYRrvB
NcRGp9FtjBpKY9xQG1pj2jAa84bZWDV2DatxargNr3FpXBt+I2jcGmEjajwb
cSNpvBtp40uQBEW0CJpgCJYQCJHoEwNiSEiETIyIKTEjDMIkVsSG2BI74kBY
hE04xIm4EA8iIt5ESrZIjuRJgeySPbJPjkmV1MgJOSVn5II0yRW5IQ+kTXrk
mbyQPhmQNzIk7+SDjMmEfJFvMiV/VJNqUQzFUm2KozpUlxpSEiVTI0qhxtSM
mlMLakVtqB21pw7UkbKpE+VSHuVTTyqmUurXZJpCU2x2mv3moDlsas1Jc9rU
m7PmvLlsrpqb5q55bJ6al+a16TdvzbB5bz6aUfPZfDXfzU8zbf5adItptVtc
i28JrV6r35Jbo5bSGrfUltaat8zWsrVp7VqHltU6tpzWqeW1zq1L69ZKWq/W
j27THbpL9+ghLdEyPaV1ekYb9Jw26TW9oXf0gXZoj/bpgL7Rd/pBR/STjumE
/tAp/aV/DMu0GZ4RGJHpMANmyCjMmFEZjZkwU8ZkVsya2TEH5sjYjMO4jMdc
mCvjM3fmzXxYnu2xfXbAyuyIVdgZa7BzdsGa7Irdsjv2wB5Zl72wNzZk72zE
PtmYTdgX+2a/7K/Ntfm22O60u+1eW2rLbbWttSftaVtvz9qr9qa9bR/ax7bT
PrXd9rl9afvtoH1rR+20/eVEbsANOYlTuDGncnNuwZnckltxG27PHbgj53Bn
zufu3IOLuJhLuBf35j5cygu8yHf5Ht/nB/yIV/gJP+V1fsYb/Jzf8Dt+zx95
h3d5jz/zV97nb3zI3/mY/wldQRJkYSSogiZMBFNYCithLWyEnWAJR8ERXOEq
3IRIeAqx8BLewkdIha/wEztiV+yLA3EoSuJYVEVdnImGOBcXoinuxINoiY7o
imfxIl7FQLyJd/EhRuKr0++MOkpn3Jl0ph29s+qsO5vOtrPrHDp2x+m4nXMn
6Nw7cSfpvDqfTtr5dn7dXrffHXalrtwddbXupGt0591F1+wuu6vuoXvs2l23
e+5eu3436IbdezfqPrtx99Mb9sY9taf19N6sZ/Q2vW1v19v3Dr1j79Rze+fe
tRf2ot6r9+59et/erz/oD/tyf9RX+uP+tK/3F32zv+yv+uv+pn/sO/1T/9y/
9oP+rR/2H/2oH/eT/qv/HcgDbTAZTAfGYD5YDHaD/eAwsAbHgTPwBufBdRAM
HoN48Bmkg+9QGspDZTgeqkNtOBsaw+VwNVwPN8PtcDd0hu7QG16HwTAc3oeP
4XMYD1/D9/AjKdJU0qWZtJBMaSkdJEs6SrbkSK50ka5SIIXSU3pJX+knj2RF
VmVNnshTeS4v5LW8kbfyTt7LB9mVz/JFDuRQfsiR/JQT+SV/5FT+jtTRbGSM
5qPlaDVaj44je+SMTiN3dB75o2AUjh6jZPRRxoqqTJSpoiszxVSWylbZKXvl
oFjKUTkrV8VXQuWhPJVYSZS38lG+ym88Gc/Hi7E5Xo834+3YGZ/G7tgbn8fX
8W0cjh/j5/g9/qqaOlF1daYa6lxdqWt1rx5USz2qtuqoVzVQb+pDfaqJ+lLf
aqp+NV0ztaW20rbaTttrruZpZ+2iXbVAu2sP7aklWjqZTvSJMZlPFhNzspls
J9bkOLEnzuQ0cSfBJJzcJ89JMnlPPpN08psa09V0Pd1M99PD1Jqep5fpdepP
g2k4jabPaTJ9T3/6TDf0hW7qS32l7/S9buuOftJd3dPPeqg/9EhP9Lee6l/9
N1vMNrPtbDezZseZPbvO/Fkwu83C2WMWz5LZe5Yac2NhLI2VsTY2xsGwjJPh
Gp5xNi7G1XgYTyM23kZq/ObL+W6+nx/m9tyZn+bB/DYP5/f5Y/6cv+bveTr/
LczFcrFebBbbxW5xXNgLb3FeXBbXhb8IFs9Fsngt0sXPXJsH0zKP5sl0Tc8M
zbv5MCPzaSbmx0zN33K1XC+3y91yvzwsneVpeVlel/4yWN6W4TJZvpef5W+1
XR1X9spZeavz6rJ6rKLVcxWvktV79V391pv1dr1fH9bW+rh2197aXwfr2zpc
39eP9Xudrr+b/cbZnDbu5rK5bvzNcxNvks1r896k2912v7W2x629dbbn7WV7
24bb+/axjbbPbbr97aydu/N2552/C3a3XbJ77d67zy7d/faHvbW3987+tHf3
172/v+8f+2j/3Mf7ZP872Ifz4XK4Hm6H8HA/vA+fQ3r4Hn7W0bKtk+VannW2
AutmRdbTiq3Eelnv4+l4PfrH4Hg/Po7RMT1+jz/bsU+2Z5/ti321Q/tux3Zi
v+y3/bFTx3MC5+aETuQ8ndj5ndyTd7qcrif/FJwep+j0Or1Pn1N6+p5+7sUN
3bv7cGM3cV/e2bt4vhd4Ny/0nl7sfbzU+3q/s39+nKPz8/w6v8+fy/XiX26X
8HK/PC7J5XX5Xn7X2/V5ja/J9XNNr18/8G/+3X/4kf/03/4nuAdJ8ArewTf4
3cLb/Rbdnrf4ltzS2zeMwnf4CdP74x7d43tyf93f998jfqSP7+MXPaM4ekXv
6BOlz9fzFyfxK/7EafyNf8nn9X59Xt/X7/39pJ/v9/cvRr2y0g==
             "], 0.02260893337498171]}, 
           {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
            DiskBox[1, 0.02260893337498171], DiskBox[2, 0.02260893337498171], 
            DiskBox[3, 0.02260893337498171], DiskBox[4, 0.02260893337498171], 
            DiskBox[5, 0.02260893337498171], DiskBox[6, 0.02260893337498171], 
            DiskBox[7, 0.02260893337498171], DiskBox[8, 0.02260893337498171], 
            DiskBox[9, 0.02260893337498171], DiskBox[10, 0.02260893337498171],
             DiskBox[11, 0.02260893337498171], 
            DiskBox[12, 0.02260893337498171], 
            DiskBox[13, 0.02260893337498171], 
            DiskBox[14, 0.02260893337498171], 
            DiskBox[15, 0.02260893337498171], 
            DiskBox[16, 0.02260893337498171], 
            DiskBox[17, 0.02260893337498171], 
            DiskBox[18, 0.02260893337498171], 
            DiskBox[19, 0.02260893337498171], 
            DiskBox[20, 0.02260893337498171], 
            DiskBox[21, 0.02260893337498171], 
            DiskBox[22, 0.02260893337498171], 
            DiskBox[23, 0.02260893337498171], 
            DiskBox[24, 0.02260893337498171], 
            DiskBox[25, 0.02260893337498171], 
            DiskBox[26, 0.02260893337498171], 
            DiskBox[27, 0.02260893337498171], 
            DiskBox[28, 0.02260893337498171], 
            DiskBox[29, 0.02260893337498171], 
            DiskBox[30, 0.02260893337498171], 
            DiskBox[31, 0.02260893337498171], 
            DiskBox[32, 0.02260893337498171], 
            DiskBox[33, 0.02260893337498171], 
            DiskBox[34, 0.02260893337498171], 
            DiskBox[35, 0.02260893337498171], 
            DiskBox[36, 0.02260893337498171], 
            DiskBox[37, 0.02260893337498171], 
            DiskBox[38, 0.02260893337498171], 
            DiskBox[39, 0.02260893337498171], 
            DiskBox[40, 0.02260893337498171], 
            DiskBox[41, 0.02260893337498171], 
            DiskBox[42, 0.02260893337498171], 
            DiskBox[43, 0.02260893337498171], 
            DiskBox[44, 0.02260893337498171], 
            DiskBox[45, 0.02260893337498171], 
            DiskBox[46, 0.02260893337498171], 
            DiskBox[47, 0.02260893337498171], 
            DiskBox[48, 0.02260893337498171], 
            DiskBox[49, 0.02260893337498171], 
            DiskBox[50, 0.02260893337498171], 
            DiskBox[51, 0.02260893337498171], 
            DiskBox[52, 0.02260893337498171], 
            DiskBox[53, 0.02260893337498171], 
            DiskBox[54, 0.02260893337498171], 
            DiskBox[55, 0.02260893337498171], 
            DiskBox[56, 0.02260893337498171], 
            DiskBox[57, 0.02260893337498171], 
            DiskBox[58, 0.02260893337498171], 
            DiskBox[59, 0.02260893337498171], 
            DiskBox[60, 0.02260893337498171], 
            DiskBox[61, 0.02260893337498171], 
            DiskBox[62, 0.02260893337498171], 
            DiskBox[63, 0.02260893337498171], 
            DiskBox[64, 0.02260893337498171], 
            DiskBox[65, 0.02260893337498171], 
            DiskBox[66, 0.02260893337498171], 
            DiskBox[67, 0.02260893337498171], 
            DiskBox[68, 0.02260893337498171], 
            DiskBox[69, 0.02260893337498171], 
            DiskBox[70, 0.02260893337498171], 
            DiskBox[71, 0.02260893337498171], 
            DiskBox[72, 0.02260893337498171], 
            DiskBox[73, 0.02260893337498171], 
            DiskBox[74, 0.02260893337498171], 
            DiskBox[75, 0.02260893337498171], 
            DiskBox[76, 0.02260893337498171], 
            DiskBox[77, 0.02260893337498171], 
            DiskBox[78, 0.02260893337498171], 
            DiskBox[79, 0.02260893337498171], 
            DiskBox[80, 0.02260893337498171], 
            DiskBox[81, 0.02260893337498171], 
            DiskBox[82, 0.02260893337498171], 
            DiskBox[83, 0.02260893337498171], 
            DiskBox[84, 0.02260893337498171], 
            DiskBox[85, 0.02260893337498171], 
            DiskBox[86, 0.02260893337498171], 
            DiskBox[87, 0.02260893337498171], 
            DiskBox[88, 0.02260893337498171], 
            DiskBox[89, 0.02260893337498171]}}]],
        MouseAppearanceTag["NetworkGraphics"]],
       AllowKernelInitialization->False]],
     DefaultBaseStyle->{
      "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
     FormatType->TraditionalForm,
     FrameTicks->None,
     ImageCache->GraphicsData["CompressedBitmap", "\<\
eJykvQmQHFl6HlaL7kaj0biBxjGDAXpmUC97dgaY5Ry7OzdJ7YHKrBnKlCkx
TClImktxOEPJjBUVVFiLymxKDtqiHEHLNi1RDodCpmRRIVmmTcoUqcNLannt
Lsnlcg/ufe/szOC+Gt1VWc73/uv7s6q7IQkR6Oquysp8x398//le/MGfePmH
/9IP/sSP/tAPLr/3/T/44y//6A/9leX3/Ffvb96aeUun85ZH4v/lzmzz+7jT
mfhxttP5j/n9b6efc482P/5q8/9n+fXJ9O4Wn/0P9PWf2uKS2fTZ/PuaH797
+MjRyw+/7e3D59714uWzjz/14SNHT7w/fjpzF9fMbvGMn6ZhrN7FbXakaw6f
5WvG3/W9PzT++X/6wfH//ssfGf+v/+w3x3/mz78cr32S7ti5q+t2/CcO/wI9
669tcQmt0N7thvP9hx545w+F89W/PLD85O2Hzr09XtOZiVd15uN1t88+9szV
I+E7bjbXrC+9Na8fevSdcM1euubxZy4e7n7HV0NefWH56b94+ejJ7D95+h+g
Kf5k+rlny0ubf4vn3v0zP72w/+TNlbNPxsfS6HbGJ2+cffzZeil7V531q/Hh
M8+Nn/r23lz6eG78/LteGh9cfsc4FOX40IPpo84cfzV9dv87x1lejY89Uox5
4jDveOfh0sq7bjbzfuPUsz9yaemu5j19v36CJvKXt93SPVtt6eeO3rP89VPv
/IFhHPXhB2GyMqF3NBMqmwn1xyvNhH7uH/9r2ex4p4cfe2Z89KH38pz1ko4s
p13znvFmT1h+Z1rOo+0lW4xjvNGQyh8fuP+pH+jm5V+Z3XVw0z39K7Qcf+nu
tn/X6RfK/3HPkTN3VoiCgYDHZ594vl566N2bzOleN6c48Ptf+LHx0qlHxv3/
/PvjdWl1/+4/+bdptY8tnxsvP/dyc121/XXP0nVbreNSXMfmmY4sF4Us69PP
/Whzq7Nb0tTMFgTzCq3Oj21PN59YOnHfr9/75PdtZM2ID+Fozjm6uf/bt1+c
OKG4kMff9t3p2jj55naJGuLfx8+9lO4VHxV58sSm1704Dnzd8t0812/w5Fq/
d5KP98QFuNkQ5T9YPPzge1bOlzOd7/merajtR2lJf3iLVScun4lXXlo5+3hb
otZnn3iuXlp5NxHH2TZx7POM2KxjXKvN1+ilNO/mXjvihY30inQZbxtpKi7H
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\
\>"]]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"Paley\"\>", ",", "97"}], "}"}], "\[Rule]", 
    GraphicsBox[
     NamespaceBox["NetworkGraphics",
      DynamicModuleBox[{Typeset`graph = HoldComplete[
        Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 
         19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 
         36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 
         53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 
         70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 
         87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97}, {Null, 
          SparseArray[Automatic, {97, 97}, 0, {1, {CompressedData["
1:eJwly1tRRiEAhVG83xVNgA2MYATHBMwfQIlABCKcCEQgAhGIQATXjHtmve3v
/fT7/XMWQjiF/32QaQw2yeGLSmcRz0P4pHAwCRd6Mo3BJl3qqXQW8UpP4WAS
rvVkGoNNutFT6SzirZ7CwSTc6ck0Bpt0r6fSWcQHPYWDSXjUk2kMNulJT6Wz
iM96CgeT8KIn0xhsUtRT6Sziq57CwSS86fkD2bwylA==
             "], CompressedData["
1:eJwtmFsjqtEWhhc6SZIQklOSpFI6yilJziRJkrD/wP7/d/t9xrev1k1zrDmf
+T5zjM/2f/7b/c/kv3//8uF//yb076TL4/MHgqHwYmQlGtvYiieSqXQmlz8q
VWr10/NGs9W+vX987nR7/cFwNP6dmHK5Z0PhldW12PrG5nZiN5k6yOQOj4qV
au3k9Oy8cdm+fXx6ee2+9d4/v75/J72+af9MYHZO/8NSZHllbXsnkUof5ApH
5Ur9pHHVulb9h8eX14+Bfv7zOzHp9njnwovRNZXf2t5J7qXS2Vy+UCrXjutn
5xeN5tXt/fPLq8r3P7Rg0mXlg3PzOsHyymp0fWc3mc5k88VStXZ61rxu32j/
T8+vb59D/fxvwqUNzS9GYuuqHt/ZTe2nM4d5tl8/Ob1oXDZb1/ePndc3VR98
6vdTLo+VD80viNBqdC22ubuX4sTlynH9/KJ1c3snPi+dt/evEfWnPNrQQmRF
cOI7id29tPAUjti+6Fw2r1rtm8fn7tu7yg+/VN/t8Vn58MKSbgCq23v7aU4M
UOG8E57nzmv3/eN7TH23TxtaWokKjujv7WeEp1hi/6JjPO+eO733D5Uffau+
1+e38otLy7phqO7sH2Q4MkCF80F4Orqvj8+fX+p7/drQcjQmOqK/f5ATn3KF
/QuP8XzodPsfnyo//pnU76f9AasfWV5VhOC6e5DNcWaQCuiT+HR1YZ9ffxP6
eUD7WY1tCI7oH2TzwlOtsX3RMZxP3R5pGGs/ipt3eiYQtPKkboNrS+xlD/Oc
GaQC+iI+Pd3Y1/fE5JR+H9R+1ja2REf4s0pnSYdl/8JjPF96feLw+6e0Tc/M
BkNWndBtcWvJ/cPCEUeGqHgS574u7PtH9V1urQhpQ+tbceER/0PFs6LDcgLx
MaCv/QF5UNpmCL9VJ3RxLi11UCiWODJAhZM0D3Rf3K9LW9KSsHa0GU+Ij/gX
0KuOXa1rATKeb4Oh8jCltM0SfitP6BJcWjpblF86MUTFkzgPdV/cr0d70pJF
bWk7kRQeXUARvU6xq32DjvB8H47E3428hN/KE7okt5Y5LMsvHRigwkmcR2P8
JXHalNZEtKedZEp4dAFlBDvHr9s7fITox2g86fYiL+G38oQuxaXlClX5pQPD
UzSJ81j5JA8YryUr2tJuKi06wl/FrwZ63T+gI0Q/x7+6Lu809pJ+q0/s0lxa
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
5hlODE/RtL9XMD28YDD5/x8iNH1J
             "]}, Pattern}]}, {
         VertexCoordinates -> {{0.997903, 0.0647298}, {0.99162, 0.129188}, {
            0.925421, 0.37894}, {-0.113114, 0.993582}, {-0.30285, 
            0.953038}, {-0.957817, 0.287378}, {0.145229, 0.989398}, {0.834828,
             0.550511}, {-0.884295, 0.466928}, {0.898952, 
            0.438048}, {-0.423433, 
            0.905927}, {-0.937207, -0.348774}, {-0.0485622, -0.99882}, \
{-0.481186, -0.876619}, {-0.363905, 
            0.931436}, {-0.999476, -0.0323819}, {-0.995283, 
            0.0970099}, {-0.735146, 0.677908}, {
            0.665915, -0.746027}, {-0.240525, 0.970643}, {-0.816564, 
            0.577255}, {0.981178, -0.193105}, {0.333552, -0.942732}, {
            0.99162, -0.129188}, {0.616228, -0.787567}, {0.0808804, 
            0.996724}, {0.616228, 
            0.787567}, {-0.423433, -0.905927}, {-0.641408, 0.7672}, {
            0.0808804, -0.996724}, {0.145229, -0.989398}, {
            0.452547, -0.891741}, {0.868712, 0.495318}, {-0.689724, 
            0.724073}, {0.393876, -0.919164}, {0.981178, 0.193105}, {0.756713,
             0.653747}, {-0.986917, -0.161231}, {-0.852217, -0.523189}, {
            0.797443, -0.603395}, {-0.937207, 0.348774}, {0.452547, 
            0.891741}, {0.50932, -0.860577}, {0.665915, 
            0.746027}, {-0.689724, -0.724073}, {0.797443, 
            0.603395}, {-0.986917, 0.161231}, {-0.481186, 
            0.876619}, {-0.777486, -0.628901}, {1., 0}, {
            0.966621, -0.256211}, {
            0.0161931, -0.999869}, {-0.177191, -0.984176}, {-0.912665, \
-0.408708}, {0.27183, -0.962345}, {
            0.898952, -0.438048}, {-0.816564, -0.577255}, {
            0.948009, -0.318243}, {-0.30285, -0.953038}, {-0.974411, 
            0.224776}, {-0.177191, 0.984176}, {-0.590402, 
            0.807109}, {-0.240525, -0.970643}, {-0.995283, -0.0970099}, \
{-0.974411, -0.224776}, {-0.641408, -0.7672}, {0.563957, 
            0.825804}, {-0.113114, -0.993582}, {-0.735146, -0.677908}, {
            0.948009, 0.318243}, {0.208968, 0.977923}, {0.966621, 0.256211}, {
            0.50932, 0.860577}, {0.208968, -0.977923}, {
            0.712809, -0.701358}, {-0.53692, 
            0.843633}, {-0.53692, -0.843633}, {-0.0485622, 0.99882}, {
            0.0161931, 0.999869}, {0.333552, 0.942732}, {
            0.925421, -0.37894}, {-0.590402, -0.807109}, {0.27183, 
            0.962345}, {0.997903, -0.0647298}, {
            0.834828, -0.550511}, {-0.999476, 0.0323819}, {-0.912665, 
            0.408708}, {0.712809, 0.701358}, {-0.884295, -0.466928}, {
            0.563957, -0.825804}, {0.393876, 0.919164}, {
            0.756713, -0.653747}, {-0.777486, 0.628901}, {
            0.868712, -0.495318}, {-0.957817, -0.287378}, {-0.363905, \
-0.931436}, {-0.852217, 0.523189}}}]]}, 
       TagBox[GraphicsGroupBox[GraphicsComplexBox[CompressedData["
1:eJxdVHtMk1cUL9YEUTZnjXOObEpKt6FYMifoxrKDCiYrRLTgolJccOucrsJY
gAAB9ojFNRQtrNY4rXFIJmpkgCjgI6c6RAsqUqAgpVJo6fPr95HFsoEU98j+
Oje5ubm5r3N/r8h9uVL5PB6Pl/1P/3dsq25ONrEcKPRLzZE1jaBz3bbuvsHB
G5rDZQkqA/D4m74L1/vhRabxaFXiEIg2tc1bGLiJNn1piaKbg8qg/E9Hdh9u
DU9Qf/wtCw8bd5hzf2XxumGi6YvPTcAKW9+y6u7AesmJOdEFDvJWtsd5rnlh
zlT7kVE/Bs3KVaGiVAZT1fIZ0bgVWo4tm43vYEAWoiyZWTACD+f/3l6xwoJp
oc1n9gQZmP7F9OPJoB+PlzLi7VIzft1RFyay1qPYJZXtnOIw57Y0y9D9FE2X
QiRbXmKwN79w3UbJIKaLup5KH/khP7tu+dXnHB4PTG2Wac/i8yL3jcwnHC75
zL6obqANylYVu7ZXuJBJiX9T0TQBmm1Z0zFpEyCwWPn5oy5MOpA7qTQ+wmim
1v39Yg74nn19kkgvtpZsKxktGocQQ9P+HjkH+sEh0cXW+xg7ayv17hqAu5rT
qSOrWST4YkeU7L6wzQ5vL6u6iu95sDLGPvlTSwsEFY7r0RMckHWKBx6tZpYc
rHCgp/U3vkvtBnIeCf6YZny/6cjUCAiXTn4VpWLwUHVLRNkDH6xtvJckuTIK
GqX7lY0CJw5nWIWn1rhAV3ypYUvcE1grDJzpOuBH8j/IqM8Rz8W74XxBRH+5
zwGP2y0Bk5ZDx3R4/YZzHRgVztfJkn3oX6y1TN2yYUHNZfH5wx4wfvhHKD/N
joRPIPWBN9OZvzvVBvcE5s4hlQ8JH7Reej+tB4g+4FykfcfqMTeqyg8Fn610
IO+/Ngm8/5vt5f7oYywLxaFFpjvyx5gSaKhktBrIes2T7J/jkDkrGHy3oRPT
Nzde3FvOoUXp/KBqvR+vJO0/mfzOMH6pm19/Qd4LC/g9t450s0j0jUQ/qAo7
+Nern7CQrk2xL9/bj8RfOPZzwsynYg7jygoNBXcfAHkfTnTG3qxxjGPEgCfR
3OcBoleqd3of1RPmxPnU3KJxMAVP/zCr8FL/I/ELrR/E6me1hdgFlnW2GFEK
BwRPyi/dj4kKT29GjxPCNqzYWZHnxMuxguFvxGN4Ku/12oUvvEDmNA+A8AXE
jzTfkOBH+QOSl0jyDEm+ANEDkP/Q/KN4I/Ef9RsS/QLxM5I8pnlI/Ql/A4ZP
YYk=
          "], {
           {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
            ArrowBox[CompressedData["
1:eJwVxdnagQgAANBfhJBEkqUN2ZI9IluyZYuEEmFeYN7/br45N4f951/jH+Dv
74+A/v7+3wN4fB6/J+gJeSKeqCfmiXswD+4hPBlPzkN5GE/eU/SUPBVPzVP3
NDwtT8fT8/Q9kmfkGXumnrln4Vl61p6tZ+c5eE6es8fwmJ67x/I8PS+P6/kC
XsAHgAAMxIA4QABpIAvkABKgABpggSLAASWgAvBAHWgATaADdIE+MAAkQAbG
wASYAnNAAdbAFjgAR0AHLoABXAETuAE24ABv4OsNeINeyBvyhr0RL+xFvDFv
3It5k17cm/IS3qyX9Ra8RW/FW/Py3oa37e14RW/fO/LK3rlX9S69K+/au/Xu
vHvvwat7L96H1/LaXsf79n68Xx/o8/sCPsQX92G+jC/rI32Uj/YxPtZX8JV8
ZV/FV/MJvoav5Wv7ej7RJ/mGvpFv4pv6Zr65b+FTfVvfznfy6b6L7+ozfTff
3ffwOb637wNCYAgMgxEQBqMgAqJgHMRAHEyBBJgGMyAJFkAOLIE1sA4KYAvs
gj1wAErgGJyAC3AFrsENuAV34AE8gifwAl5BG3yCDvgGP+DPH/AH/ZAf9WN+
3J/zk37az/hZf95f8HP+ir/qr/nr/qa/5e/4u/6+f+Af+WX/2D/zz/2Kf+Ff
+lf+nf/gP/sv/qv/5r/7H37Lb/vf/o//FwgHIgE4EA0ggVgADSQCWAAPEIF0
IBPIBnIBOsAFyoFKoB5oBJqBTkAM9APDwCgwDcwCy8AmsA1ogV3gEDgF9MA5
cA3cAk7gFXgHPoFfEAqGguFgIogHiSAVpINsMB8sBItBLlgO1oJ8sB5sBNvB
TrAXFINScBgcByfBaVAJLoJqcBlcBzfBQ/AUNILX4C34CFpBO/gMOsFP8AfB
UBRCoBiEQnEoASUhHCKgDJSFchAJURALlaEqVIMaUAtqQz1oAEmQDI2hOaRA
a0iDdtAeOkAn6AxdIAO6QQ/oDbnQB/qFwqFICA4lQ0QoE2JCbKgQKoa4UClU
DlVD9ZAQaoRaoW6oF+qHBqFRSA5NQ7PQPKSGlqFVaB3ahrTQKXQOmaFb6BGy
Q8+QE3qF3qFfGAnHwmg4Hk6EsXAynAoT4Uw4FybDVJgOM+FCuBrmw/VwK9wJ
d8P98DA8Ck/C0/AirIa34X34ED6GT+Fz2Ahfw2b4EbbDn/A3/IvAkWgEiaQi
mUguko8UIlykFClHKpFqhI80Is1IK9KJiJF+RIoMI+PIJDKPKJFFZBVZRzaR
bWQX2UfOESNyjzwidsSJvCLviBv5wCgchxMwBidhHE7BaTgD52AKpmEGZuE8
zME8LMANuAP3YBGWYBkewzN4Di/hFbyDj/AJ1uEzbMAmfIPvsA078C+KRGNR
NJqO5qJUtBjlouVoJVqN1qJ8VIi2ou1oJ9qLDqJSdBSVo9PoLLqIqtFldBPd
RrXoLnqIHqNG1IxaUTvqRN9RN/qJfqM/JIFgSBLBkRRCIGkki+QQCmEQFskj
BaSIlBEBaSItpIf0kQEyQibIFFGQBbJGNsgB0ZEzckEMxETuyAOxEAd5x9BY
PJaIZWNUjImVYuVYNVaL8bF6TIg1Y51YN9aL9WPD2Cg2jk1i85gSW8ZWsXVM
i+1i+9ghdorpMTN2jz1jTuwd+8S+sR+aRHE0hRJoGs2gWZREKZRB82gBLaIc
WkKraBNtox20j0roEB2jM3SOqugS3aIaekIvqIFeURO9oxZqo0/0jX7iiTgW
T8bJOBPPxyvxapyP1+NCvBFvxtvxXlyM9+NSXI6P49P4LL6Iq/F1fBPfxvfx
Q/wYP8XP8Uv8Hrfir/g7/on/EqkEkUgnMolsIpcgE3SCSeQTxQSXKCXKiUqC
T7QT3UQvISVGCTkxTSiJRWKVWCd2iX3inLgmzMQtcU9YiWfCSbwSn8QPS2I4
lsJoLI8VsRrGYwLWwJpYC2tjXayPDTAJG2ETbIrNMQVbYitsi2nYDjtiJ0zH
zpiBXTELe2Iu9sF+yXQyk8wmc0kySSXpJJvMJ4vJUrKcrCSryVpSSHaTYrKf
HCXHyUlynlSTy+QmuU0eksekkbwl78lH0ko+k6/kO+kmf3gKJ/A0zuJFvITX
cQFv4i28jXfwLi7iEj7ER/gYn+FzfIGr+Brf4Dt8jx9wHT/jF9zATfyGP/EX
/sV/qWwqlyJTVIpOMSk2VUgVU6VUJVVN1VJ8qp5qpsTUICWlxqlpapZapFap
dUpL7VKnlJ4yU4+UlbJTz9Qr5aY+qS+RJjJEligQJaJCNIgm0SY6RJfoESIx
IEaETIyJKaEQC2JJrIgtoREH4kiciAthEFfCJO7Eg3gRbppMU2k6zaTZdD5d
SHPpUrqSrqX5dD0tpBvpdnqQHqZH6Wl6nlbSy/QmvU3v04f0OX1J39N2+pl2
0q+0m/6mf5lsJpchM1ymkqllWpl2ppvpZcRMPzPIDDPjzCQzzcwzamaZWWc2
mV1mnzll9Mw5c82YmVvmnrEydsbNfLN0lsmy2Xy2kC1muWw5W8nWsvWskG1k
m9lWtpsdZuXsODvPLrJqdp3VsrvsMXvKGtlr1so62Vf2nXWz3xyZo3J0rpyr
5eq5Tq6bE3P93CAn5YY5OTfNzXLz3CK3yq1z25yWO+SOuXPukjNyt9w998hZ
uWfOyX1JlsyTBbJIcmSJLJNVskbWyQbZJFtkm+yQIimTE3JKLsgluSK35J48
kDp5Jk3yRj7JN+mSH/JL0RRDsVSVqlMNqkeJ1ICSqCE1omRqQs0phVpQS2pD
bakdtadOlE4Z1JUyqQdlUTb1pF7Umy7QRZqjS3SZrtBVmqfrdINu0W26Q3fp
Hj2gJ/SMntNLek1v6B19pE/0hTboO/2gX/SH/tI/hmXyTIHhmQbTYvrMgBky
I0ZmxsyEmTELRmWWzJrRmB1zYI7MmbkwJnNj7ozNPBmHeTEu82E5tsSW2Qpb
ZWsszwpsg22xHbbL9liR7bNDdsYq7IJds1tWYw+szp7ZK2uyFmuzLvvLF/LF
PJcX8q18Jy/lh3k5P85P8tP8LK/kl/lVfp3f5vf5Q/6U1/NG/pq/5x95K+/k
X/l33s1/879CuVApVAu1Al+oF4RCs9AqdAq9gljoFwYFqSAXlIJaWBa2hV1h
XzgVLgWjcCvcC8+CU/gWuWKpWC42i51irzgqysVJcVqcFedFpagW18VNcVvc
FY/FU/FcvBTN4q1oFe3is/guusVP8ctVuRrHc3VO4Bpck2tzHa7H9bkBJ3FD
bsRNOJVbcWtuxx24I3fmrpzJPTiLe3HvUrlUKVVL7VKv1C+NS5PSrDQvKaVF
SS2tStuSVtqVDiW9dC4ZpWvpXnqUniWn9Cp9St/Sr8yX62Wh3Cg3y61yu9wt
98r9slQelkdluTwuz8qr8qa8LR/Kp7JeNsq38r1sl59lt/ypVCu1Cl/pVvoV
qTKtzCpKZVFRK8vKqrKp7Cr7yqFyqlwqRsWs3CpWxa68Ku+KW/lVhWqj2qy2
qu1qp9qtitV+VaqOqnJ1XJ1Up1Wluqlq1V31VD1XL1Wz+qhaVaf6qn6rvxpf
q9eEmliTaqPavKbU1Nqytqqta5uaVjvUjrVT7Vy71szavfaoPWtOza19al++
ybf4Nt/hu3yPF/kBL/EjfsxP+Ck/4+e8ymv8nj/wZ97gr/ydt/kn/+bdulBv
1Jv1QX1UH9cXdbW+qq/rm/q2rtX39VNdr5/rRv1Wv9etul1/1d/1b/0ntIWO
0BV6gij0hYEwFEbCWJgKM2EuKMJCWAl74SicBEMwhZtgCY7wEj7Ct9FstBrt
xrAxbkwby8aqsWlsG1pj19g3jo1z49IwGmbj0bAaz4bTcBufZrfZa4rNfnPQ
lJrDptwcN6fNeVNpLppqc9ncNI9NvXlums1789F8Nt9Nt/lrtVudVrclt6at
eWvd2rS01q61bx1ax5beMlrXltm6t+zWs/VqvVvf1q8ttvvtQVtqD9ujttye
tKfteXvRVtvL9qq9bmttvX1pG+1722rb7Vf70/52up1eR+xMOvPOorPtaJ19
59A5dk4dvXPpmJ1b596xOk7n1XE7n+6gK3WH3VFX7o67k+6sO+8uusvuqrvu
brrb7r576V67ZtfqPrtO1+3+emKv3xv0Zr1Fb9nb9fa9Y+/U03vn3qV37d17
j57Ve/bePbf37f3EoTgSZXEsTsSpOBMVcSEuxbW4EbeiJu7Eo3gVb+JdfIov
8S1++4O+1B/2lf6yv+4f+se+3j/3L32jf+3f+lbf7j/7r/6n/x3Ig/FgMpgO
ZoP5QBmog+VgPdgOtMFusB8cBvrgNngMrMFr4A4+0lAaSbKkSmtpK50kXbpI
hnSVTOkmPaSn5EgvyZV+w8lwOpwN50NluBiqw9VwPdwOd8P98DA8Dk/Dy/Ax
tIfPoTv8Dn8jeTQeTUar0Xa0G51Hl9F1ZI5uo/voMbJHr9F75I6+8kyey4q8
kFV5Ka/kjbyVd/JBPsonWZfP8lW2ZUd+yd/xZDwdz8ab8W58GBvj6/g2vo8f
Y2tsj52xO/6MvxNlspiok+VkNVlPNhNtspscJqeJPjlPLhNjcps4k/fEnc6m
86ky1aaH6WlqTm/Tx9Sa2tPn1Jm+p9/pb6bOlrPVbD3bzLYzbbafHWan2Xl2
mRmz68ycPWbv2Wf2nSvzxVyd7+en+Xl+nz/m9vw5d+av+Xv+UVbKWtkoW0VT
dspeOSon5awYylUxlZtyV2zlo/wW6mK5WC2Oi/PCWFgLe+EsXov3wl18Fj91
o25VTd2pe/WgHlVdPauGaqo39a4+VEt11N9ytVwvN0t9aSzN5XPpLN9Ld/lZ
fpe/lbbarfarw+q4Oq301WVlrMzVffVYWSt79Vy915v1dq2tL2tzfV+/1u/1
Z/1d/zb7zWFz3Jw2+ua8uWyuG3Nz31gbe/PcOJvX5rPVtrvtfnvd3rfW1t1+
tj/tqJ00XTtrF83QrtpNu2uW9tQc7aW9NVf77fa7w+64u+2s3XP33f32+v68
v+yN/XVv7m/7x97aP/ev/Xvv7j/77+F4OB30w+PwPLyOl6NxvB7N4+14Pz6O
9vF5fB3d4+f4Pf5O+ul8upzs0+vk6lfd1G/6XX/olm7rjv7SXf2r/86Xs3G+
np2ze/5ebpf75XGxLvbleXEu74t7+RpXwzRuxtv4Xh9X62pfn1fn+rq+r5/r
17yZd/Nhfm727Xlzbq/b++bePrff/XG37vb993Aer8f74T4+j+/jZ9nW03Ls
t+3aH/tr/57O8/V8Ox/n6/xe75f7+rx/7sf9ur/v7z+05H0p
             "], 0.022609339085786023`]}, 
           {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
            DiskBox[1, 0.022609339085786023], 
            DiskBox[2, 0.022609339085786023], 
            DiskBox[3, 0.022609339085786023], 
            DiskBox[4, 0.022609339085786023], 
            DiskBox[5, 0.022609339085786023], 
            DiskBox[6, 0.022609339085786023], 
            DiskBox[7, 0.022609339085786023], 
            DiskBox[8, 0.022609339085786023], 
            DiskBox[9, 0.022609339085786023], 
            DiskBox[10, 0.022609339085786023], 
            DiskBox[11, 0.022609339085786023], 
            DiskBox[12, 0.022609339085786023], 
            DiskBox[13, 0.022609339085786023], 
            DiskBox[14, 0.022609339085786023], 
            DiskBox[15, 0.022609339085786023], 
            DiskBox[16, 0.022609339085786023], 
            DiskBox[17, 0.022609339085786023], 
            DiskBox[18, 0.022609339085786023], 
            DiskBox[19, 0.022609339085786023], 
            DiskBox[20, 0.022609339085786023], 
            DiskBox[21, 0.022609339085786023], 
            DiskBox[22, 0.022609339085786023], 
            DiskBox[23, 0.022609339085786023], 
            DiskBox[24, 0.022609339085786023], 
            DiskBox[25, 0.022609339085786023], 
            DiskBox[26, 0.022609339085786023], 
            DiskBox[27, 0.022609339085786023], 
            DiskBox[28, 0.022609339085786023], 
            DiskBox[29, 0.022609339085786023], 
            DiskBox[30, 0.022609339085786023], 
            DiskBox[31, 0.022609339085786023], 
            DiskBox[32, 0.022609339085786023], 
            DiskBox[33, 0.022609339085786023], 
            DiskBox[34, 0.022609339085786023], 
            DiskBox[35, 0.022609339085786023], 
            DiskBox[36, 0.022609339085786023], 
            DiskBox[37, 0.022609339085786023], 
            DiskBox[38, 0.022609339085786023], 
            DiskBox[39, 0.022609339085786023], 
            DiskBox[40, 0.022609339085786023], 
            DiskBox[41, 0.022609339085786023], 
            DiskBox[42, 0.022609339085786023], 
            DiskBox[43, 0.022609339085786023], 
            DiskBox[44, 0.022609339085786023], 
            DiskBox[45, 0.022609339085786023], 
            DiskBox[46, 0.022609339085786023], 
            DiskBox[47, 0.022609339085786023], 
            DiskBox[48, 0.022609339085786023], 
            DiskBox[49, 0.022609339085786023], 
            DiskBox[50, 0.022609339085786023], 
            DiskBox[51, 0.022609339085786023], 
            DiskBox[52, 0.022609339085786023], 
            DiskBox[53, 0.022609339085786023], 
            DiskBox[54, 0.022609339085786023], 
            DiskBox[55, 0.022609339085786023], 
            DiskBox[56, 0.022609339085786023], 
            DiskBox[57, 0.022609339085786023], 
            DiskBox[58, 0.022609339085786023], 
            DiskBox[59, 0.022609339085786023], 
            DiskBox[60, 0.022609339085786023], 
            DiskBox[61, 0.022609339085786023], 
            DiskBox[62, 0.022609339085786023], 
            DiskBox[63, 0.022609339085786023], 
            DiskBox[64, 0.022609339085786023], 
            DiskBox[65, 0.022609339085786023], 
            DiskBox[66, 0.022609339085786023], 
            DiskBox[67, 0.022609339085786023], 
            DiskBox[68, 0.022609339085786023], 
            DiskBox[69, 0.022609339085786023], 
            DiskBox[70, 0.022609339085786023], 
            DiskBox[71, 0.022609339085786023], 
            DiskBox[72, 0.022609339085786023], 
            DiskBox[73, 0.022609339085786023], 
            DiskBox[74, 0.022609339085786023], 
            DiskBox[75, 0.022609339085786023], 
            DiskBox[76, 0.022609339085786023], 
            DiskBox[77, 0.022609339085786023], 
            DiskBox[78, 0.022609339085786023], 
            DiskBox[79, 0.022609339085786023], 
            DiskBox[80, 0.022609339085786023], 
            DiskBox[81, 0.022609339085786023], 
            DiskBox[82, 0.022609339085786023], 
            DiskBox[83, 0.022609339085786023], 
            DiskBox[84, 0.022609339085786023], 
            DiskBox[85, 0.022609339085786023], 
            DiskBox[86, 0.022609339085786023], 
            DiskBox[87, 0.022609339085786023], 
            DiskBox[88, 0.022609339085786023], 
            DiskBox[89, 0.022609339085786023], 
            DiskBox[90, 0.022609339085786023], 
            DiskBox[91, 0.022609339085786023], 
            DiskBox[92, 0.022609339085786023], 
            DiskBox[93, 0.022609339085786023], 
            DiskBox[94, 0.022609339085786023], 
            DiskBox[95, 0.022609339085786023], 
            DiskBox[96, 0.022609339085786023], 
            DiskBox[97, 0.022609339085786023]}}]],
        MouseAppearanceTag["NetworkGraphics"]],
       AllowKernelInitialization->False]],
     DefaultBaseStyle->{
      "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
     FormatType->TraditionalForm,
     FrameTicks->None,
     ImageCache->GraphicsData["CompressedBitmap", "\<\
eJykvXuQHdl5H3aJOxhgBu8BBo/dxQLYxZzGPrBL7pLcJbkP6kHuTvfdlWVZ
kstSWZJFRSTXjhXKcuzYmG7Ij0rZcqw87TiJk5RSSuS4ynacUlIpxy7FkeNQ
Siy5bKmUSkW2ZEqmSGof3MXiMdM3fc75Hr/f6TszkP0HMMDcvt2nz/m+3/f7
Huc7r33fH/nsD/yh7/sjn/v+77v8yhe+74c++7nv/+HLn/7DXxh+Nf3AZPKB
J+Ofy5Ol4d/zyWT01/XJ5F/l3z+W/j749PDXjwx/flx+fiT9do/P/v389T+1
xyXT9Nmhzwx//Z+nz5x984kPfnT7xW9+7c3rz37s586cvfCF39k1i5/x7+Zh
/Dv7DuPRPR8h8xE/n3/L7/3++V/5az8z/4n/8efn//lf//vzb/vuz8brPvI7
vO5f+ZXa/P0/nv4+86877N+/9ujzP7N25eN3rz31XPx8Gi+YHIqX3L3+4Re/
tHb1pe1qs+vPPtn0jz39fLxkkq85E6+5d/3ZF7bXr33T7Uuf+DfunH34yd0e
86lDaxeXH//2dq/h7vXSfzS/zb+1xyUH0mdH93vh2bFz1/7nk5eeu3ftqY/6
Cx9Ml1z/8Ev9+rVvnp+++uL8Y5/cHH6bP3vpm1+fn7ry/Lyq210+e25+7slm
vmCC5J6f6i+9+Ln+3OXr/zpi8SP5kh9Kfx/Zb+U/N/z57WvXn4URpbfcuf7s
i/ktH138lueenM2vDW/yn/zk35moOMQRP/HMJ+ZnH3tlHppufu56ec1BumZt
lxk8d72cpaM6pkGMvvmdSy/+4NtnL17ba5YO7CEDfyi/+h/OM7SXKPxf62cf
+IkHnvmO9089+vFd1rN8wwv0hlde/oPz9UHgZ7/ne+I16d5/+b/7u+lZcZ0v
v/DZJC9XPrnXdU/NL7342QXPwtn89GKZu7xI5o7E93trkIQ/duDA0r4w8wdd
UiaTlYUzuliQll20H/sUDj9//ASN/vJ+MzXMQNW08wsf/N3punir4W3Tm8X/
n3vqtfR5GP5Ug+ztdt35p15Psnl5zxm/Pr80rMxe8rs+mvEjKr+3H/7EvvI5
eSNP22fzrO62AN300LFfOv7gB+ExD8nCPr+P0FxPQrPXlJ2PU1a36Zo4ZfF+
cZWiysefV15+Yx7q9kC84EC8cnh2uua6XHM9XvN5v0e917PytO+tEE+lZR5J
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
xOXbIM5oTWv3enS/I543qt+7snsZR8SNp0eQsv9JNMFaqVdqUvXcQbMaxXjb
ecHAdHtR4Wrmu512ulc7ECNlsZjFrAB1BAvigIdYhjKl1oA5APiCZwBXRMMS
/EhzxSLyGmsNr7Rq9coDz7AmOFDpsorB8JVHYtjgrmBD3E4SWzNvb7zaGo0Y
/vzbV1+zKX9XcEGqKDqNbUZBV58m+SJStaFhknllRj/7xjIkbfGSOcQ1rRoo
EmhbWjmnUZH4VY2cDG7IzbsiFVoXJt/PoVdZh7gp7qsb2X+M9/qilMLvaGSn
cmjVmjIw6Kp3tpfMaSpU8iP3I0Zs10oo9SFEdbTjY3dCxQQ4houN8xXkHkp1
7XSc2rSqaZGjmnVAmDP1yK97DExiZ0NSA+WBFEe1QKXNzsKZXWsb6V274Hz2
wIElTbms7lrKccpKOfz2nb+FDdNWyJwrjRMFC/3yIRmBZwTIqa900CaRp0Gv
eQHRB4EQVRYc1kodvgzniG2drNzXKNIdJp/ynYO0EiJ4XvhOVXte28bVYu7o
NFZ9P0MJVUdKqqNSZUTifn3Ck+y03RoU6BcrI/Vr/ywWZOZQZKc5GY3WSoVF
epnbQbtxNs64FWci2iWsWFGMEBsrLr7PUc5lxKsSCUsdzCybmbZFpD4DD96z
coe6e3fDwTZtZ5EhbufIqcHg/zL87lf0uDYJgQg1SYUj8XtfTTjC9l1jBv1i
OTGqpF2UGVPMVLglc6uEKVByvFHCCuce/u/2Ai2cN8JV/TCDSB6TCmAoWnAh
97K4KthU4zfubHVzS1Ot0Lv7FFGowMMwcm1sqZeqPR6VmOjLn//OMPtTjCML
qjyOwfk5nyYkB+7IRMxgbi0rqMc1/BqASCCZ2sICSGQ3rzTedNq/AkaBeKTh
iZGAcuX0HhM9ZwRiHTtSsKCPh/AcOjij4bkQ+itqbDzUfFZGN6+0hvyHiEPZ
eP13txN9yPb3dpW3lOUCzWZLx/AfXW1u/HbYtO/flRBEjoLMbt4N+m4JgoyK
7IhmCNS0Sj30d3OLmpiVS8/ccU0yOqRwN6+sIar8u5F7S8hWsanKEZq5OPSa
EUpcpkr17Bb2/efB8KX9l8Pv/kXeTJN26cZikSgy285tCDPAlLHWFyLsm2rA
0Lusja5XGbH0B+6IUNx1k6C/041SsNFGr/HABcqsRhjd/1ZAOkbijHxIzaGa
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
WjqrseH1JF5ImdwWSMiS5B1MnOzu21KJSn5U6ZOZSc6JqZgb2VZ/qspJqfez
YqRy+lsbm5JbMW/gUKxkc//bKURvUga9KAyIo8icJHGB3IW6c1i0UzCJziUZ
TyGmNc1POU+47bbd3eOQ51TPqjL3za4vgIjzhVJWf8mlzD62OdECQzjXequH
9VIPSfeHRD82moHUaqDajKfzbnkykdwKpDIHM8jBqylVkbmABjbIGQxOyGPw
BQVTbv0MeeeHzqHWQPSay5N758cfpxADeqGU+oO4lNzala5QWF8Ze03BMTKR
80v3UeN3EOtuDmqN3/baoy8kV+zKS5/3Z3TyDI5fEHZ6FMDKjqBgwN+dThh0
qujqb8EGPyEYDQ2Alu4Np2PRKgsz2t5wL1Br1H/u8J4mTYVdqcp+uAxM7ts7
oZZHP4TDvjv81NNg4/EcOwGVsyjNrfAISCvLt5nvUaEB5xVh2O0cm2l5rVSW
S4Yrvxp3gSAMQ86Rn3YBPIlxSNXFu8PJK4JGBZNCA5dHPrFTbXA4DuPyUzoJ
HtTYjjiqUnOeOkUsRXT/n4b5//GBK7w5/Hua2pKvyE4Rm1b3cfyNJGp/1ukO
OBdGh8D0oi2DYKCLmL+9VftoyQvwWl8vzQWvjg9ngUfyGmmtpK6H6ozlOIG1
T9S48DzbSD1MCBxMNHmfXnoENEe0wK8/dfmjyRF7WAv8mlKyPRAA3GqSCxlW
RfERsgEs3Ijmdz5FFhHljIgpMpCCXjvaXxlRcZH1yLV3QKbvgY1HT5wm0SJw
gPPFsqIpVCyTqbkg7oOPpcq8/W6wrpzx2Mcbf2f4/d8e/v11aSIJ2y1bHJvl
wQEMzQXBOXGJZlJq8K1NmOzYahVFqwrooIGEM2h/bFnkFdzRyi30wegxV1RU
cNQpsC7QI44QWTei4Z1FsF+GlnamXWQVh4Lfq3LFQRJS5Q4ypnSEbYiVUaki
UIV72Sk1TINx2Cl09tTw7ArMFDN7iP1ne6anDhLrh2udU1l4LsqBNo3XOPrJ
ubIWUwea9EU0hUhlnufjtFYlN6WECq+H+3CtdtmbLKr1W9q11i8lpbzW75WJ
ZsT1fZHKmjO52iOIk2OJaq1Jo1X6iIHZLWIl1d3av9OnlGMt6IxWdhCbMxwo
QePRq0e9UZj31m5jjKXAXfbiO/gO0IqZdnBORa4KNHFLcuw483Upxomfx1a/
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
rJgv3PlYMApNsDHir6TPYhsUK2wp1mhT983UO2bXN0LmEOX/sHrvl9vuzQQg
Jed9MmHLuw0aABQ9OpOK9FZ694AAOazhLHonirW3eb8Ws8XDZP9tDXBC/msf
SvYnavuUNiCmsT3UQufqMj1Cw5AtoO9u2ZfUls0Azxo7xdSeIe2lfut+Oby2
nInlbcCw0qgtCrigNmx9BNvkQHHxM2TKDJW2MCVrPltZ2dmJfAjX5oIVV/gb
inpmsdVOYCaEdenDMPmUPUouLcuY3y5cgr7UnodA7sOXzlA+DVYwpK7+vnpI
TZ2lgs6hpu5nNs5sPbt07w0+OXuS9mHHhiUN77OkzjxywdGGiuKZ3TwXVJlt
G7MaRIA7ry0Xv0SYIklEZ6De9GjqFAnjsnafWu9/Trlsve1MPERSNQBbZ7y9
xwTYsn/Ljn5LXlCpLO2H39/5/Jv/uOm+CDUrxzY9Cy9T+PyA+EPUEXmXcEBE
PaGtR7YvkpWo+BQ5f7K+Ezm4iGGyDIRPatf1c7GVxJaeERQUPR3BlDYGV8qs
Mzc5Vw53AONIkPMbq3n84x1Yr7ybo5AY37sOQRETpXIbRCt/91ztQ4D/CWsw
QL0dt2hDvCsKCNGnnqA1SGOnKaFa1CoX2b8cj+/fq4N8lLGhbYECDqXGiQLC
uai3HEnoxVflG6BDuFFqy3BIPZ3RlRJxOcf1dAtug3f9tc+SlFC3e2WDtkjo
KETrVR5zFp6LWqUyX3zG9cRt8K8Y4N4mccBtmkJASV0g4iEe4MP7dVxFUCXc
jEtETtVdBfRRWRv/xsrEthCu9sx7gKM3iRerPCUgS0r0u20JVpquZcV610WQ
nLCspWNsPhLmxoEKFB8pBRfQBwX132UyPhkT1dBggScKZeKDKQxHW5uKtbp1
xQZJwKcd7bDn10jRbT+p0747/idt/6UvW6cXYy45DFNO1+v2iO/LqVqVqRiM
DrS94K/iIgRrTgJo1p9c8H4ozaskNFX5hBBYMDXDMzKaAlLRRUwZNNn3SiAX
9f1Cq7GOXtTR9Ew/6+zhSI2fj3OGrThG545XQFcdhsaQAdGZcclz0wvcgIBa
rAR5EXOrGgsz0aHDSuLFjHhOHCwh3JzVI7yybEswj3asDtUKw69Rf4A0QSFw
vzYJTT/I7cUlx/CZyN4rxV5l05EfS5YmIrWJ+ZPNF/7K450yV2apy8Hf9qAW
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\
\>"]]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"Paley\"\>", ",", "101"}], "}"}], "\[Rule]", 
    GraphicsBox[
     NamespaceBox["NetworkGraphics",
      DynamicModuleBox[{Typeset`graph = HoldComplete[
        Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 
         19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 
         36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 
         53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 
         70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 
         87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101}, {Null, 
          SparseArray[Automatic, {101, 101}, 0, {1, {CompressedData["
1:eJwlyj0oBAAAQOHnHM7hnJ8MMiBJkiQZZJBBBhkuSZJ06TLolAwyyCBJkiTJ
IIMMMsggSZIkySCDDDLIIIMkSZK88urbXll8JJZMARL8V69BrehC36px6Nei
TvWhygD0aE5HelVpKsQ0rX09qzgIHZrUrh5VmAZtGte27hVJhxaNalO3CmVA
k4a1rmsFQtCghFZ1qR/VZsKAlnSmT1WFoVfzOtabyrOgSzM60ItKsqFTU9rT
k4pyoF0T2tGDohFo1Zi2dKdwLjQrqQ3dKBiFRg1pTVf6VV0exLWsc32pOh/6
tKATvauiALo1q0P9AeQpOOM=
             "], CompressedData["
1:eJw1mNdaotESREfGNI45oCIiIiIiIiIi46hjDphzTqjX5/3O051VtT1X3ri/
3bW7a/3VjNf/c1GP/Pjx4799P3408DfS2Nza1t7Z3dsfHYrFE8lUOpPN5QvF
UrlSXV5ZW9/c3t2vHZ2cXVzd3D08vbzVPxt+tvxu7+7pHRgcGo6NxBNjyfHM
1PTMLGcWKkvVP8ubWzv7tUPOXN/c3T8+vX5EmppbfrX97uzq7h8YTEykJzP8
e7G0WFlZXfu3vrG5s7df44bLq+u7x5fX9/rHV0PTr47O3r7+Qd0wmkiOpyay
nJmjrEVu+LuyvbNXOzrm0O3dw+Pzy/vXz8aW1l+/2zsoLDo4nJzMTGX5/1J5
qeortrb3DmpHqLi+uX14fnv/+PySDlUUHdYVY8kUheU4M4/0Ja5YXdvdOzg6
OeXQ/cPT8+vbR+RnUzM6Ojq7KG1oeCQ1lZ3OcaBc+bPsO3Z2D9DNU93e3T+9
futQQUMjumE8hfSpPCcWeN0/Vr9/cHhyds6RxydJR0dTSys6urp7KC02Mpqe
zs3kOVGp/l3xFXv7hwinHfcPjy/v3zpUT2xUV0ykkT5d4MQiHfxr9bXDYz3v
zd3zi6RLBw1BR09vH8XFR8cyM/nZAkeqy6trvuOgdoxyev749Pz20RCRENUT
H9MVkxmUzxQ5sMSUrFr80fGpnvfu4fUN5ZJBP5DR1z9AbYmx8exsYa7IieWV
f+u+4fDoFOWM1fPLax0djRKichLjumIqi/LZEif+MIn/LP7k9Fyv+/D0Xv/8
+umx6uhExUB0kNqS4xO5ueJ8iRMraxubvuL45BzljO7r2/tng1uIEhWUnNAd
0zmUz5U58pdx37D4s/NLPe/TC2/V5LHq6kYGA09tqYnJ/HxpocyBtfWtbV9x
enaJcuzB8DZE3EKUqKDUpK6YySN9vsKRVSy1ZfUXl9d63Ze3r8YWDxWWimrg
qSw9OVVYKC9W+P/1zZ1d33B+cY1wHOjZbXQHEaKC0lO6AgdSV5Uz/7DtjtVf
Xd/qed/qkZ/NvzxVmGpIE09p2La4iGU5sLm9t+87Lq9uEY7Nmd1mdxAdKgjP
6qEweXlxmRMbkGHP4m9u7/W6deaqsan1t6cKV8U089SGcUvCAke2dw9qvuP6
BjC8wJJIS6s7iA7Vg2f1ULi8srTCgS3oc2D1kESv+8njNre0dXissFVcM09x
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
AJ6NB+yCt4XyclgmtKQeOZHd3HuuPj7/BwL68LI=
             "]}, Pattern}]}, {
         VertexCoordinates -> {{0.998066, 0.0621696}, {0.99227, 0.124099}, {
            0.982635, 0.185548}, {0.952013, 0.306057}, {0.847315, 0.531091}, {
            0.490994, 0.871163}, {-0.463664, 
            0.886011}, {-0.62001, -0.784594}, {-0.170244, 
            0.985402}, {-0.961071, -0.276302}, {0.878693, 0.477387}, {
            0.595309, 0.803497}, {-0.231176, 
            0.972912}, {-0.919353, -0.393434}, {0.734059, 0.679086}, {
            0.139515, 0.99022}, {-0.942034, 0.335517}, {
            0.734059, -0.679086}, {0.0155518, -0.999879}, {-0.999516, 
            0.0310999}, {0.99227, -0.124099}, {0.952013, -0.306057}, {
            0.774857, -0.632136}, {
            0.139515, -0.99022}, {-0.976389, -0.216018}, {0.931144, 
            0.364652}, {0.774857, 0.632136}, {0.261322, 0.965252}, {-0.830388,
             0.557186}, {0.320826, -0.947138}, {-0.830388, -0.557186}, {
            0.435884, 0.900003}, {-0.570032, 
            0.821622}, {-0.407684, -0.913123}, {-0.62001, 
            0.784594}, {-0.291215, -0.956658}, {-0.794142, 0.607733}, {
            0.200807, -0.979631}, {-0.942034, -0.335517}, {0.812658, 
            0.582741}, {0.379088, 0.92536}, {-0.667588, 
            0.744531}, {-0.170244, -0.985402}, {-0.919353, 0.393434}, {
            0.64411, -0.764933}, {-0.231176, -0.972912}, {-0.863422, 
            0.504483}, {
            0.435884, -0.900003}, {-0.667588, -0.744531}, {-0.0466404, 
            0.998912}, {-0.999516, -0.0310999}, {1., 0}, {
            0.998066, -0.0621696}, {0.982635, -0.185548}, {
            0.906673, -0.421835}, {
            0.595309, -0.803497}, {-0.350126, -0.936702}, {-0.712584, 
            0.701587}, {-0.0466404, -0.998912}, {-0.98793, 0.154898}, {
            0.931144, -0.364652}, {
            0.69042, -0.723409}, {-0.108652, -0.99408}, {-0.961071, 
            0.276302}, {0.812658, -0.582741}, {
            0.261322, -0.965252}, {-0.893115, -0.449828}, {0.64411, 
            0.764933}, {-0.108652, 0.99408}, {-0.98793, -0.154898}, {0.969199,
             0.246279}, {0.906673, 0.421835}, {0.69042, 0.723409}, {0.0155518,
             0.999879}, {-0.995649, 0.0931793}, {0.969199, -0.246279}, {
            0.847315, -0.531091}, {
            0.379088, -0.92536}, {-0.754823, -0.655929}, {0.200807, 
            0.979631}, {-0.893115, 0.449828}, {
            0.544204, -0.838953}, {-0.463664, -0.886011}, {-0.51785, 
            0.855472}, {-0.51785, -0.855472}, {-0.407684, 
            0.913123}, {-0.712584, -0.701587}, {0.0776838, 
            0.996978}, {-0.976389, 0.216018}, {0.878693, -0.477387}, {
            0.490994, -0.871163}, {-0.570032, -0.821622}, {-0.291215, 
            0.956658}, {-0.863422, -0.504483}, {0.544204, 
            0.838953}, {-0.350126, 0.936702}, {-0.794142, -0.607733}, {
            0.320826, 0.947138}, {-0.754823, 0.655929}, {
            0.0776838, -0.996978}, {-0.995649, -0.0931793}}}]]}, 
       TagBox[GraphicsGroupBox[GraphicsComplexBox[CompressedData["
1:eJxdVH1MU1cUL5LNz+g0YZUhaPkcDEkEwqBCD0HCNmDqlEhhbjJDGVUJyKAE
qE5ZRIwgWAoOLFa2ACFD2OicQucOZBZEYHQrGx8yaG0Lhbbv6QYyROfc5l/n
Ji8vN+/de875ffEOZ+4TreBwOKLnz7/voCdNLq8/YKHmA0XdN8NtkNA85nit
iwXVobzOP28jZC4o5n84zkJarDVzdVcvhN46v2iUMLC3PMM5q1oHX28bFAa7
WkEvKi5r/1sPCxvcnbOPTYHP2T38i3orfPy2k+arlt+R16q4FZRsg05/75Ct
I0ZcL07Qp7rMoqT0jYALdzW4882MHnEJCxPvRP/F7WbQmpVTxbT+jOv937oT
6WYDaYx7cFHZJJyQdOVq1hkBTNsT4btZ2H1oaMT/0iDeTPpeuNmdhcXE8uUD
R+244fKdgZcCxpBR3Y0Xn5iBi1Kvik1qM1RXeTdcvdcNYWsLxw1tLNxec0Pq
6cVgHK8ibkv+r0D+x4ge713KsXKIrL8iWPGMRYczBY9XPWHR1vrFQuOokuKF
BB90zomyXO23gGVJF5PLNyGpj9Uys6dcwKIgt2VfQWM/HlYXnmL67VDysDYx
98AIkPPw2VHG8mmHFqK7S32FRgZWXp8aPyebwz9gSZ03bID/cRwGv4qxpPnd
DJLvaE4JcSg234ONzWKubsAGTmXXURVxH/fLckM7Y+dAc6Gn/iR3HM+H9Ha8
G2pHwhcca4+JiP7yFxytY8IfKhgM8x0oVIhn0SPtUX5pthGS02eC137bB1Wd
qVs8klgk+OLqxtqkOIc5WMfn5Wgb7kNsdeXex1GjIB/bVlmqsMP2vLQiw0Ez
BkiWWwJ1M0D0gYTfF+dMcDYwQZNQYEGiBzytkvv71Fsx/Eh8SYenHsj8SOrh
QRDyIg1NmKzMjn91kQXCN3L+Ww+A82IR/yDxC1a+J9qc52gH8839fOGzcST6
xb6WSYMk/Td05TnmS5bsuMs0vyAdnMaU8nPytE+mgfSDA5e4KVvrWKxRutS2
634EohdM9Xilzcqdhskweb2f9wwGujVsuqJVo2t20MSpIRaJv4DwgURfuMNL
ZhHJbSj4Kfij5b4JJHgDuR9If2h0WaO85siC7ozw6cbiISB4AOkXiN/g5PHm
2PcnWNy50k9QM34DyH1I8geJnjDr8/SKIh8LStlM7YdPTUj0CWQ+UMf0n3Y7
YoCpHeGPVKNzSPILm/J7ffmy53VqhrUvp1iB7JH4BwifGKXLMDkZVVB2+bV0
wQwLxP9A8g5JniLxKxI/AtE7knmA6A2If5HkBxD8gPSPhB/8B6MwZjs=
          "], {
           {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
            ArrowBox[CompressedData["
1:eJwVxVfbgQoAAOCvjJSVUHYKGdlbmUmJrGwRwvX5xee/nOe8Ny9l/qOZ4N/f
37/w39//AyBgBeyAA0AAF+ABUAADAgAOhIAIEAMSQBKggTTAADmgABSBMlAF
6kATaANdgAP6wBAYAwIgAhIwBxaACqyBLaABB+AEXIAbcAcM4AWYwBe0gBDo
BF0gCvpADAyCBBgCw2AEjIIxMAGSYBKkQAbMgnmQBUtgGayCdbABtsEO2AV7
IAcK4BScgXNwAS5BFVyDW/AInsALeAV18A4+wY/FZrFbIAtsQSxOi8fitaCW
gCVoISwJS8qStmQsjCVvYS0lS9VSt7QsbUvfMrAMLSPL2DKxCJaZRbbMLQvL
2rK1aJa95WA5Wi4W3WJYnpa3xbR8LD+rzQpb3VaPFbP6rQErYQ1bI9aoNWaN
WxPWpJWy0taUNWfNW1lryVqxVq11a9PasnatPStn5a19q2idWWXrwqpaV9a1
dWvVrGfrxXqz6taH1bC+rT8bZHPYYJvT5rK5bajNZ8NsuI2whW1JW8bG2LK2
nI21lWwVW93WtHVsXdvQNrKNbRObYJvaRJtsU2wLm2rb2jTbwXa0nWxn2832
sL1sb9vH9rX97JDdaffaUXvAHrTj9rA9ao/Z4/aEnbQn7bQ9ZU/bM/aCnbWX
7BV7zV63N+1te8fO2Xl73z6wD+2SXbYrdtW+tm/sW7tmP9iv9pv9bn/Yn/aX
/QPBEAI5ITfkgbwQBvmhABSCwlAUoqEslIPyUAEqQRWoBjWhNtSDOGgMTSAB
mkIiNIMkSIGWkAqtIQ06QCfoDF2gK3SHnpAJfaCfA3a4HT4H5sAdhCPkiDri
joSDdCQdlIN2pB0ZB+PIOoqOkqPiqDkajqaj7eg6eo6+Y+AYOkaOsWPuUBxL
x9qxdewcmuPgODl0x91hOJ6Ot8N0/GAn7ILdsBdGYR8cgIMwDkfgKByH03Ae
LsAsXIQrcA1uwG24C/NwHxbgKSzCM1iCZXgOL+EVvIa38AE+wRf4Ct9gHTbg
N/yFf4gT8SJ+JICEkDASQeIIiSQRCqGRFJJGGCSL5JA8UkYqSA1pIC2kjXQR
DuGRITJCxsgEEZAFskRWyBbRkD1yQE7IBXkgBvJC3sgH+TrdTo/T6/Q5Maff
iTsJZ8gZc8adpJNxss6is+QsO2vOhrPl7Do558A5dIrOmVNyys65U3EunCvn
xrl1as6T8+K8OXXn3flwvpwfl9vlcwVduCviirpiLtJFuWhXypV2ZVyMK+fK
uwou1lV11VwNV8vVcXVdnKvvGrjGrolLcE1dokt1rVwbl+Y6uI6uk+viurme
rpfLdH1cP7fXjbp9br874A66Q+6wO+JOuEk35c65S+6yu+Kuuhvulrvj5tx9
98g9dktu2T13K+6Fe+lW3Rv3zq25D+6L++a+ux9uw/10m+6fx+vxewhPyBPz
xD0JD+VJedKejIfxZD05T8HDeoqekqfuaXhano6n5+E8fc/QM/IInqlH9Mw8
kmft2Xh2noPn5Dl7Lp6b5+55e0zP1/Pz+ryY1+8NenEv4Y14o96YN+mlvClv
wVvxVr01b93b8na8PW/fO/ROvIJ37lW8C+/Sq3pX3rV35917D96T9+a9ew3v
0/vyvr1f1IcG0TAaQRMoiSbRFJpBGTSL5tA8WkCLaAktoxW0ibbQDtpDebSP
DtExOkFFdIZKqIzO0S26Q/foCb2gV/SG3lED/aBfn98X8AV9hC/kC/tivrgv
4aN9KV/GV/TVfHVfw9f0dXw9H+8b+sa+qU/0LXxLn+pb+da+jW/r2/uOvpPv
4rv7DN/L9/aZvg/mxwgsisWwJEZhNJbBslgOy2MFjMWKWBmrYFWshrWxDtbD
eGyADbExJmBTTMJkbI4p2ALTsD12xC7YDdOxO2ZgL+znD/pxP+EP+yP+qD/h
J/1Jf9qf8Wf9ZX/D3/S3/G1/z8/7B/6xX/DP/JJf9a/8a//Gv/Xv/Jr/6D/7
L/6b3/C//Kb/4//6f4FgIByIBxIBOpAKpAPZQD5QCLCBYqAUKAeqgVqgHmgE
uoFegA8MAqPAOCAExMAsMA8ogUVgGVADh8AxcA7cAvfAI2AEXgEzSARDwXAw
GowF48FkkArSQSaYDeaD1WAr2A52gt0gHxwER0EhKAbl4Dy4Dm6C2+AuqAX3
wUPwHLwGb8F78BU0g9/gDyfwKE7iSTyNZ3AGz+MsXsRLeBmv4FW8jjfwJt7C
OZzHB/gIn+ACLuISLuMLfImr+Apf4yf8jF/xO27gT/yFm/iXCBMRIkrEiQRB
EjSRItJEjsgTLFEnOkSX6BEcMSBGxIQQCYlQiAWxJXaERuyJA3EkTsSV0Ik7
YRAm8Q2FQ/EQFaJDTCgbyoXYUClUDlVC1VAtVA81Q61QO9QJ9UOD0Cg0CU1D
YkgKzUNKSA2tQuvQJrQNXULXkB4yQq/QO2SGvuFoOBaOh8lwMkyF0+FMmAkX
wmy4FG6Ge2EuzIf74VF4Ep6GpfA8vAyrYS28Dx/Cx/ApfA5fwnr4ETbCr/A3
Eo2QkVQkHclF8pFCpBSpRKqRWqQeaUSakXakE+lGepFhZBSZRKaRWUSKzCOL
yDKyjmwi28guokVuET3yiLwiZuQT+Ubj0USUjFJROpqKMtFsNBctRkvRSrQd
5aP96CA6jE6i0+gsOo8uoqvoOnqIHqOn6Dl6iV6jt+gj+oy+omYsHqNimRgT
K8TYWDFWidVi9Vgj1oy1Yu1YN9aLcTE+No5NYtPYLCbH5rFFTI2tYtvYLqbF
9rFD7B57xJ4xM/aN/eJkPBmn4ql4Op6J5+L5eCFejlfitXg3PogP46P4OD6N
z+JyfBFX45v4Nn6Kn+OX+DV+i+vxe/wZf8fN+DdBJlKJbCKXKCZKiXKilmgk
molWop3oJLoJLsEn+olBQkhME7OEnFASi4SaWCc2CS2xTxwSx8QpYSSeiXfi
S1IkTabIDMmQWbJAsmSRrJI1skFy5IgckxNSIGekTCqkSq7JHamRF/JK3kid
vJMP0iDf5If8JqlkJplPFpLlZCVZTTaSrWQ72Ul2k70kl+wnB8lhcpQUk7Ok
nFSSy6SaXCe3yV3ykDwmT8lz8pJ8Jd/JD5Wi0lSGylI5Kk8VqRJVpupUg2pR
fWpCCdSUEimZUqgltaa21J46UDdKp+7UgzKoJ/WiPtSPTtFZmqWLdJWu0XW6
RXfoLt2jOZqn+/SQHtFjekJLtEwr9JJe0Wt6S2v0nj7RZ/pCX+kbbdIf+pfK
pJhUNpVPFVJsqpyqpKqpZqqV6qSGqWlKTM1SUkpJLVOr1DalpY6pU+qeeqSM
1DP1Sr1TZuqXzqTz6VK6nK6nG+lmupPupbk0n+6nB+lhepyepIX0ND1PK+ll
epXepLdpLX1IH9OX9DV9S+vpe/qb/mWymVwmn2EzxUwpU83UMvVMO9PJ9DLj
zCwjZeTMPLPMrDKbjJY5ZM6ZS8bIPDOvzDtjZj6ZL5NlWKbCVJkm02LaTI/h
mT4zYIbMiBkzAjNlRGbGLJgls2I2zI7RmANzYs7MjdGZO/NgjGw+W8iy2VK2
nK1k69lGtpntZntZPitk5ew8q2QX2VV2k91lD9lT9pq9ZV/Zd9bMfrLf7C+X
z5VytVw91851ct0cnxvkhrlRbpyb5IScmJvlpJycU3Or3Ca3y+1zh9wpd8ld
c/fcI2fknrlXns0X86V8JV/N1/LNfCvfznN5Pj/Ii3klv8gv82p+k9/l9/lT
/pLX8/e8mf/kv/lfgS1UCo1Cs9At9ApcYVAYFcaFSUEoTAtiQSrIhXlBKawL
m8KusC8cC6fCpXAr6AWj8Cy8Cu+CyZbYMltha2ydbbBttsN22T47YEesxC5Z
lV2xa3bH7tkje2Fv7IM12C/7K5aKtWKr2C5yRb7YL46Kk6JQnBbF4qwoFedF
pbgoLovb4q64Lx6L5+KleCvei4/iq/gumsVP8VuqlKqlWqlRapZapW6pV+JK
w9KoNCnNS6vSurQpbUv70rF0Lt1K99Kz9CpXyo1yp9wt98uD8rA8KU/LYnlW
lspyeV5elJdltbwqa+V9+Vg+l6/lW/leNsrPsln+lL/lX6VWqVcalValXelU
uApf6VfGlUllWllUNpVtZVfRKsfKuXKt3CtG5V0xq7Vqq9qrctVhdVQdV6fV
WVWqytV5Vakuqmp1VV1XN9VD9Vg9V69VvXqvGtVX9V39Vn+1Rq1Za9U6tW6t
V+vXBrVhTahNa7OaWtvVtNq+dqida9eaXjNqr9qn9q036p06X+/Xx/VJXajP
6nJ9Xlfqi/qyrtbX9U19W9/VT/Vz/VrX64+6UX/Vzfqn0Wq0G51Gr8E1+Maw
MWqMG2Jj1pAb68a+cWgcG6fGtaE3Ho1Xw2z8mq1mrzloDptCc9oUm3JTaS6a
y6baXDXXzW1z19Sa++aleW3qzUfz2Xw1zea3+Wt1Wt1Wr8W3+q1Ba9yatISW
1JJbSmvbOrZOrXPr0tJbj9azZba+7U6bb4/a47bYnrWlttJettX2qr1ub9rb
ttbetw/tY/vW1tuP9rP9bpvtb6fX4Tp8Z9AZdkYdoTPtiJ15R+ksO1rn3Ll0
rp1b59F5dt6db7fXHXQnXaErdeXuvLvsrrrr7qa77e66WvfQPXZP3XP33n10
n91399P99vhevzfojXrj3qQn9mY9qbfoLXur3qF37d16eu/ee/bevQ/HcyNu
yoncnFO4BbfiNtyW23Eat+cO3Ik7cxfuyhnck3tzH+7HD/ghP+InvMBPeYmX
+Tmv8it+w594nb/zD97g3/yH//UH/Ul/1pf6i/6yr/Y3/V1f6+/7h/6xf+pf
+tf+ra/3X/13/9P/DUaD8WAymA7EwWwwHyiDxWA92Ax2g8vgMTAGz8Fr8Bn8
hqPhdCgP50N1uBquh7vhfngYHoen4Xl4Gd6G+vA+fAzN4Wf4G01Gwmg6mo2k
kTxajJYjdbQd7Ub70W30HL1G75E5+o0n49lYGS/G6/FmvB3vx8fxaXweX8bX
8W18Hz/Gxvg5/o5/k+lEnMwm8mQ+USbqZDVZT7TJfnKc3CfviTn5TL7CVJCF
paAKW2EnaMJROAsX4SrcBF24C4bwFF7CezqbSlN5qkwX0+V0Pd1Mt9PD9Dg9
T43pZ/qd/sSZqIgrcS1q4l48iGfxKt5EXbyLD9EQX+JbNMXPTJ7NZ8psOVNn
q9l2tptps9PsPLvOXrOfJEtLaSNtpYN0lE7SVdKlu/SQDOkpvSRT+khf6Scr
8kJeyit5LW9kTd7LB/kiX2VdNufKfDXfzbX5aX6eX+b6/DE35s/5a/6em/Pv
/KcsFVVZKRtlq+yUg3JUTspN0ZWH8l0sF5vFfnFYXBbXxW3xWDwXr8V7YS4+
i+9ytVwvN8vdUlvul6fleXlZ3peP5VNdqTv1qJ7Um6qrd/WpvlVT/ahf9bfa
rLar3Wq/OqyOq8vqurqtjNVz9V5v1vv1eX1Z39ePtbF+rz/r7/q32W20zX5z
3Jw2581to2/um9fmvflsd9vj9rq9bY3tc/vafra/3X532B13591ld93dd4+d
sTN3n91P22tnTdfu2kt7a6b22x/3p/15f93f9vre2D/3r/13/zscD9fD42Ac
zMPn8D2ej5fj9agf78fH8XV8H83T+aSfnqfX6Xv6na/n21k/P87G+Xk2z5/z
93K9PC7vi3nVr/fr4/q8vq7v6/f6u+m35+1z++oP3dCf+ls39c/9cX/ff4/n
4/V4Pz6P7+NnPI3P8/00n5/n7/V+/d6f9/f9Mz+f3/f3Hw8Q8Mw=
             "], 0.022609501369384166`]}, 
           {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
            DiskBox[1, 0.022609501369384166], 
            DiskBox[2, 0.022609501369384166], 
            DiskBox[3, 0.022609501369384166], 
            DiskBox[4, 0.022609501369384166], 
            DiskBox[5, 0.022609501369384166], 
            DiskBox[6, 0.022609501369384166], 
            DiskBox[7, 0.022609501369384166], 
            DiskBox[8, 0.022609501369384166], 
            DiskBox[9, 0.022609501369384166], 
            DiskBox[10, 0.022609501369384166], 
            DiskBox[11, 0.022609501369384166], 
            DiskBox[12, 0.022609501369384166], 
            DiskBox[13, 0.022609501369384166], 
            DiskBox[14, 0.022609501369384166], 
            DiskBox[15, 0.022609501369384166], 
            DiskBox[16, 0.022609501369384166], 
            DiskBox[17, 0.022609501369384166], 
            DiskBox[18, 0.022609501369384166], 
            DiskBox[19, 0.022609501369384166], 
            DiskBox[20, 0.022609501369384166], 
            DiskBox[21, 0.022609501369384166], 
            DiskBox[22, 0.022609501369384166], 
            DiskBox[23, 0.022609501369384166], 
            DiskBox[24, 0.022609501369384166], 
            DiskBox[25, 0.022609501369384166], 
            DiskBox[26, 0.022609501369384166], 
            DiskBox[27, 0.022609501369384166], 
            DiskBox[28, 0.022609501369384166], 
            DiskBox[29, 0.022609501369384166], 
            DiskBox[30, 0.022609501369384166], 
            DiskBox[31, 0.022609501369384166], 
            DiskBox[32, 0.022609501369384166], 
            DiskBox[33, 0.022609501369384166], 
            DiskBox[34, 0.022609501369384166], 
            DiskBox[35, 0.022609501369384166], 
            DiskBox[36, 0.022609501369384166], 
            DiskBox[37, 0.022609501369384166], 
            DiskBox[38, 0.022609501369384166], 
            DiskBox[39, 0.022609501369384166], 
            DiskBox[40, 0.022609501369384166], 
            DiskBox[41, 0.022609501369384166], 
            DiskBox[42, 0.022609501369384166], 
            DiskBox[43, 0.022609501369384166], 
            DiskBox[44, 0.022609501369384166], 
            DiskBox[45, 0.022609501369384166], 
            DiskBox[46, 0.022609501369384166], 
            DiskBox[47, 0.022609501369384166], 
            DiskBox[48, 0.022609501369384166], 
            DiskBox[49, 0.022609501369384166], 
            DiskBox[50, 0.022609501369384166], 
            DiskBox[51, 0.022609501369384166], 
            DiskBox[52, 0.022609501369384166], 
            DiskBox[53, 0.022609501369384166], 
            DiskBox[54, 0.022609501369384166], 
            DiskBox[55, 0.022609501369384166], 
            DiskBox[56, 0.022609501369384166], 
            DiskBox[57, 0.022609501369384166], 
            DiskBox[58, 0.022609501369384166], 
            DiskBox[59, 0.022609501369384166], 
            DiskBox[60, 0.022609501369384166], 
            DiskBox[61, 0.022609501369384166], 
            DiskBox[62, 0.022609501369384166], 
            DiskBox[63, 0.022609501369384166], 
            DiskBox[64, 0.022609501369384166], 
            DiskBox[65, 0.022609501369384166], 
            DiskBox[66, 0.022609501369384166], 
            DiskBox[67, 0.022609501369384166], 
            DiskBox[68, 0.022609501369384166], 
            DiskBox[69, 0.022609501369384166], 
            DiskBox[70, 0.022609501369384166], 
            DiskBox[71, 0.022609501369384166], 
            DiskBox[72, 0.022609501369384166], 
            DiskBox[73, 0.022609501369384166], 
            DiskBox[74, 0.022609501369384166], 
            DiskBox[75, 0.022609501369384166], 
            DiskBox[76, 0.022609501369384166], 
            DiskBox[77, 0.022609501369384166], 
            DiskBox[78, 0.022609501369384166], 
            DiskBox[79, 0.022609501369384166], 
            DiskBox[80, 0.022609501369384166], 
            DiskBox[81, 0.022609501369384166], 
            DiskBox[82, 0.022609501369384166], 
            DiskBox[83, 0.022609501369384166], 
            DiskBox[84, 0.022609501369384166], 
            DiskBox[85, 0.022609501369384166], 
            DiskBox[86, 0.022609501369384166], 
            DiskBox[87, 0.022609501369384166], 
            DiskBox[88, 0.022609501369384166], 
            DiskBox[89, 0.022609501369384166], 
            DiskBox[90, 0.022609501369384166], 
            DiskBox[91, 0.022609501369384166], 
            DiskBox[92, 0.022609501369384166], 
            DiskBox[93, 0.022609501369384166], 
            DiskBox[94, 0.022609501369384166], 
            DiskBox[95, 0.022609501369384166], 
            DiskBox[96, 0.022609501369384166], 
            DiskBox[97, 0.022609501369384166], 
            DiskBox[98, 0.022609501369384166], 
            DiskBox[99, 0.022609501369384166], 
            DiskBox[100, 0.022609501369384166], 
            DiskBox[101, 0.022609501369384166]}}]],
        MouseAppearanceTag["NetworkGraphics"]],
       AllowKernelInitialization->False]],
     DefaultBaseStyle->{
      "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
     FormatType->TraditionalForm,
     FrameTicks->None,
     ImageCache->GraphicsData["CompressedBitmap", "\<\
eJykvWmMZtl5HvZN7VtXV1dVV+/T3Zyuc3uWnhnOPsPZJJND1r3fULZsOVIs
O2a0eEhGUUDLUWJhvns7CxD/CCAgcGDI/pEgQBDZyY8EQWAggQEjUAR5kRUQ
iiNKsShSHJJDDmfpvavqfrnnvNvznvtVVTv50V1V33LvPee87/M+73Le8/aX
fuWdX/ilL/3Kl3/uS5c+/7Uv/XvvfPnn/vqlt375a91L0w8NBg89Ef9dGsx0
v48Hg95/1waD/y+//+fp/9mnuv/+Rvfv1/nn8/HV6UPemznkvb9Fl/5Pjrz0
8Z/v/vudjc2tDx9/+oW91z779ofXnn35n25unfkaXWFw6PtT6SPzh37msCE0
dI9fO/IxHzvqMa/x++Of+OmfG//G3//H4//mf/5n47/33//v4z//s+/Ez/3M
Ee8//wDXeP4BpqSmj/zN9P/m/9+n/qvHL774P6xeeObWo9deiO9Pxw8MZuNH
bjz5zCt3lk9ut48+9VJ8a0DvzcX3Prn2zMu/ubJVfH/z0c/vXX3qRfvqSnw7
PsV/ODU189rC5uWjxjt1yNL8Kg3ir6f/1yd+5AHG+MVjW4/9/ePnP33v6lP5
GPevPftae/Lq58Ybj7w2fvnNne7V+N70+PXPfnG8cPwcvDaTXjtx6aXx+pX0
2Vm+TPfyvbWHX2i3Hi/HfqqWZS7+xoOI+r9Pn6GVWzrso1/u/n346LXnssHs
Xnv21b2TxZ8Zb1zBwczqg5+6Nhxf7Z7wv/xv/7eBfC/O1+PPfGZ87PRj2Xtz
+t7JRz+P382/utW97W95ou1ueXft4ed/dOnVX/zhyQvhKIGfuLS/TO995RAB
IeFZOkwCvr55+sK9Y+eezJZsfOLypAm55EZ1+Y1/Z3zy4SfGw7/wb8XPpMv+
nf/uH6XbnLr05Pjccz996PsXX3vniGtcG1969Z3+5GZz/0QlkkVvL4lg/fr8
6ukvd4p2kKT8uzSFX07/Lx8FFr/UXekjlqsBCNb42nOvj1dOP5rN1adhrt4a
X3rz8Lm62I2zqOrx6ad/Mn0uXqtbkjSw+Pfpa18cFyW/f3HC+0++nd4vqmZ8
5oBrnIrX6N6/fMSzxDn3Gr+UZGL17LX9uCaHSOsv0VS9QzN6FPT8L+ef/Znd
9Uc+A3c6S3c699SRsxXKQ0YaZ6ObzVDVOuJTTwyTHkZpuvzGV6fjG4P58aU3
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
BbgMERRt8J3Ha+R21YCBpeNnA2ALFQVgN7vACch6Uhxlr5fuSxnJYW9JdH+0
u0fSdOWJh64f79ajmWHj52ITYkaN6ZaJ0DVEP8TbjGDOYd8U+Cg9CUa1nhtj
3DoVDGTanUv07brBtDINGjVySJAb4WuGfT2T1j2B/BrT9BxJyUsIpdJ9b3N8
8dmX6BqXwWRTYdup3MxpEERQV+EkJBSKGWSva3yZ+klNBIvRSDGVBqH6aK36
ZgoU+UrcX0nSv+01oQPJhbuO+8uVJwKCeu/usbiL8Xg3D15l6CAkdT/Y6WmX
GpppRXfROpb3WT+o6OfxpfP8h3Hm0LUvqqFWr989hHkv5ptuEL63h4QesH+c
nWOcYVMkTdJjimgCjR4eVzrHrfXFx/AssqEOIOHdRDqeyZzwbi6Xyd3QMXyN
kbUvw5/t7BjOkSd5/iVGU44eiB19IsJpMoC4+5FqwtdxUsrlo9DBn0g4PF6n
a5sRVPxMNqih9mZkbbTW1vkSwAqsTERFRZY+gLqWbszqV58l8yPBJiCogw9N
qpjSXj5pQnzVKNrjTyilbYvvfD+Xtp1OmPLsVk633yf8ZcVarc438mImb6cN
fbauR8tWhMkI0WxWJCmqZExlRaVXhZgEemNzJw8DhybDqqGStuh5HUMefFfl
xfT4UMzH0yBInRfpRSqLzABekAxfXzjpMf07H0dKioTf7/f8W/bC5tcjAI+t
XMtKRd2+Ha8qetVBJf47WPajKgYpiUunBlmQj11D/9dTiVsfrlVizUlwpeRu
Hg/IODJuqf7tYxGHMry7JNaj9MS249JDb4h9WCG3hlTq1CkSJDEVaz/t77OY
+CvmxGthU8XwEa63bgJyroRlN+iWkqQf1w2436iobfJZ+OAsaoUAM2q1YcUn
v7POryPLETS9/u2KKNtcYEigS3axdD+pvZrefH95+a0PFpff+u7/sHPxVRSx
nUnYsaGIbSv1beolWduoew9wjMAxsNvW1vuJSdgWtCHvE0gJnlFAYtAebRca
aZ78aLv1Y+9U48WL7RnsZ66T5MeWuWmYqRg3RKxDttaw7H734QFrImQLu4E9
6XFdSHwYqRJPfdqNH3kv7YoQh5VvhPs/zMP6HhovAcx+cWelWLt78PFdZyfv
iYk80bIjXwmHCX8jJojRg0QFg9iKx5fke83KAA7CN9zHgCX/6Bvip0WtnjdO
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
avTRHf/n1I7/AW2OEyU=\
\>"]]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"Paley\"\>", ",", "109"}], "}"}], "\[Rule]", 
    GraphicsBox[
     NamespaceBox["NetworkGraphics",
      DynamicModuleBox[{Typeset`graph = HoldComplete[
        Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 
         19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 
         36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 
         53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 
         70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 
         87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 
         103, 104, 105, 106, 107, 108, 109}, {Null, 
          SparseArray[Automatic, {109, 109}, 0, {1, {CompressedData["
1:eJwlyTsoBQAAQNHr//89jwwSkkGSDJIkgyTJIEkySJJBjySDJMkgSTJIkkGS
ZJAkGSRJBkkySJIMkiSDJEluuXWmm9fV3xwKA0L8V64+repGyc5ajWhbT8oO
h2ZN6VAfKoqATi3oXOGRUKGQ1nSr1Cio06h29KycaGjRtI70qeIY6NKiLhQZ
C5Ua0LruFIiDeo1pVy/KjYdWzehYXypJgG4t6VLRiVClQW3oXsEkaNC49vSq
/GRo06xO9K3SFOjRsq4UmwrVGtKmHpSZBo2a0L7eVBCAds3pVD8qS4dereha
8UGo0bC29KisDGjSpA70rsJM6NC8zvSrPxp3PW4=
             "], CompressedData["
1:eJw1mFdTqt0ShLcJVFTEnHPO2W2OiAlRUTErIiIi9f3/m1Pn6ZnaV9ywavU7
093Ts/o//rv+KP3z58//Wv78KeG3tDxQWV1TV9/Q1NLW0dXTNzA0MjYxNTO3
sLTyd31ze3f/8Oj49Pzi8vrm7v7x+fX94/Pr++e3pKy8IlhZHaqprWtobGpt
7+zpHRgcGh6bnltY29ja3tndi8aOT84vEtfJp+fXtzSnct+/pcHq+khDC3/v
7ukfGB2bmJyanuWm5ZXVvxw7OIzGzs4vrq5v71L3D49Pr+nPr5/Cb0lpRSBY
Vc1V4fqm5hYO9/UPDY+MTswuLG1scdX+Qezk9Ozi8urm9uX1PZ0BYf6ntLyq
Bmht/L23b3BofGJqemZ2nq/iqnWORY9iJ/GLy+SNXfX88p75+v4tlpQHK6tC
NdwknG2cHRgcGR0bn5pfWtna4abD6MnZefzyOnmXenv/yGQpRuG3tKw8EKoD
WwcH+geGRyanZmbn5hcpIXdtcpBinCUu+TC76/XtI/v9U1IaqKoO1dZxlXB2
cJQKjk9Mziyu/N3Z46qj2FmcEt7c3j9QwWyOwhfLKwKVtfVg6+L/g0OjY9Mz
c/MLi8t0i5u2OUct4lfXfJfd9J7+zNEvIFbSrXA9dwlnF4cpIQ2YW/67vnfA
Xccn8QQ1vEs9PlHCXP7ntzRAj8MNYOvh78Mj4xN0a3FpeRVmWJMPohQjkbzh
s+yqj8xXnrvAWE23Ig1cJaA9HKaGNGBhdX3zQNQ4PUtcUcT7h+cXapinhuWV
9DjSBLQ+/j46Njk1b8xYg4XW5GiMYlzd3vFddtVn9rvAXWCsoV2NTVwloH0c
pobUf2ltczsqapzHr5IUEUa9UcNCsTwAc+saW0A2wL/HJ6ZnFo0YGxDemhw7
oRTJ1D2fZTd95X6KcD4Axjra1dzCVQI6wGlKSANWNrZ3Y+LGRSIJfx9hVJoS
FssClTC3vrkNZEP8e3Jqdm7ZeLGFuKzJJ2eU4vbhkc+yq75VwzL6DMp62tXa
xl2COsRxakgH/m7t7p+IHJdXtxAYiX1kqGFFZTXUbWjtANkIf56emV9YNWLs
IGTr8VmcUqQQZfrDrvpRDaVlSZl2tXdwlaCOcJwa0oH1nf3DM3HjOpmSLKFU
tlgerK6BuU3tXeAa47+zc4tLa8aLPTzDWhxPUIkHNJn5tJt+rYbSsqRMuzq7
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
             "]}, Pattern}]}, {
         VertexCoordinates -> {{0.998339, 0.057612}, {0.993362, 0.115033}, {
            0.91969, 0.392646}, {-0.532903, 0.846176}, {
            0.998339, -0.057612}, {0.805615, -0.592439}, {-0.580768, 
            0.814069}, {0.958751, 0.284246}, {0.129335, 0.991601}, {-0.483268,
             0.875472}, {
            0.91969, -0.392646}, {-0.907992, -0.418987}, {-0.670557, 
            0.741858}, {0.557067, 0.830467}, {0.770146, -0.637868}, {-0.2704, 
            0.962748}, {-0.214485, -0.976727}, {0.0144105, 
            0.999896}, {-0.930623, 
            0.36598}, {-0.822354, -0.568977}, {-0.979717, -0.200388}, {
            0.603987, 0.796994}, {0.508297, -0.861182}, {
            0.973535, -0.228538}, {-0.100706, -0.994916}, {-0.626704, 
            0.779258}, {0.805615, 
            0.592439}, {-0.930623, -0.36598}, {-0.379352, 0.925252}, {
            0.457838, -0.889035}, {0.838409, -0.545042}, {-0.822354, 
            0.568977}, {-0.712183, 0.701993}, {0.242543, 0.970141}, {0.186249,
             0.982503}, {-0.157858, 
            0.987462}, {-0.788208, -0.615409}, {-0.853768, -0.520654}, \
{-0.989634, 0.143611}, {0.405859, -0.913936}, {0.603987, -0.796994}, {
            0.895541, 0.444979}, {-0.788208, 0.615409}, {-0.432028, 
            0.90186}, {0.732118, -0.681178}, {0.0719925, 
            0.997405}, {-0.751444, 0.659797}, {-0.100706, 
            0.994916}, {-0.950162, -0.311757}, {-0.0432195, 
            0.999066}, {-0.999585, 0.028818}, {
            0.895541, -0.444979}, {-0.996264, -0.0863582}, {0.973535, 
            0.228538}, {0.457838, 0.889035}, {1., 0}, {
            0.958751, -0.284246}, {-0.432028, -0.90186}, {0.985085, 
            0.172071}, {0.732118, 0.681178}, {-0.483268, -0.875472}, {
            0.985085, -0.172071}, {
            0.242543, -0.970141}, {-0.379352, -0.925252}, {0.868417, 
            0.495834}, {-0.950162, 0.311757}, {-0.580768, -0.814069}, {
            0.6489, -0.760874}, {0.691658, 
            0.722226}, {-0.157858, -0.987462}, {-0.325417, 0.945571}, {
            0.129335, -0.991601}, {-0.882345, -0.470602}, {-0.882345, 
            0.470602}, {-0.996264, 0.0863582}, {0.691658, -0.722226}, {
            0.405859, 0.913936}, {0.940783, 0.339009}, {-0.214485, 
            0.976727}, {-0.532903, -0.846176}, {
            0.868417, -0.495834}, {-0.966545, 
            0.256498}, {-0.2704, -0.962748}, {0.352531, 0.9358}, {0.770146, 
            0.637868}, {-0.751444, -0.659797}, {-0.626704, -0.779258}, {
            0.352531, -0.9358}, {
            0.298032, -0.954556}, {-0.0432195, -0.999066}, {-0.853768, 
            0.520654}, {-0.907992, 0.418987}, {-0.966545, -0.256498}, {
            0.298032, 0.954556}, {0.508297, 0.861182}, {
            0.940783, -0.339009}, {-0.712183, -0.701993}, {-0.325417, \
-0.945571}, {0.6489, 0.760874}, {
            0.186249, -0.982503}, {-0.670557, -0.741858}, {
            0.0144105, -0.999896}, {-0.979717, 0.200388}, {
            0.0719925, -0.997405}, {-0.989634, -0.143611}, {0.838409, 
            0.545042}, {-0.999585, -0.028818}, {0.993362, -0.115033}, {
            0.557067, -0.830467}}}]]}, 
       TagBox[GraphicsGroupBox[GraphicsComplexBox[CompressedData["
1:eJxdlXswXHcUx7dMlHiViiIii1RnGm2nHoPROJsN8UjS6OpOMSNBGVNBVEqi
NW3IqFESgzZlQtpUacREkSatx+ZoEFm6SHZZy3osuyz7uB1WRGi0afvXuTN3
fnNn7u/8zuP7/fxcE0/zko1YLFb6P+/z9UxY6rWkFQa+l99h3vviJvAn5py+
EzKgNKzlibIEsNho1e6YoQNrJqDF2VUGUvur335lqcCCvaMtMy9rgOzHpOi+
3dX9S1CyHfgDd20OH5g86mv4Zg4TtrMzJiyWoS+wu9K+WQ9hPvlu9m8/ghif
2lqLS92wIPTd4dXJQJSxaFGum0a9me3klLGWno+4wj4QYqVD9d0aWfPIBGp4
7gbvbBV2Skz/OipYhHgh3/NzsQLMTW8WvVW5DDX1SQFm9Wp4JVTlkfqREqOv
+4oC332Io1yhUjKkh6LeA5eDPhnE2vFDm9EHGQwu6i7nXLgIPWNpqle3GXDa
6Jpr7NdhbhzG+6VJIfbCOr89chnj6lQca9859O+IOCuNYfDchwcTIhuEGN/6
ZYk8ah4qcurKNs4vwc41g82TQ7NQqO26KLqkwZfiIme8XmNglb/S2skRYdRw
QeR0fzsmlIbZxY4xePJX09I1SyVa/Lwvt5lRA+knzQe9dpyqORY6jlszNrtu
XNEBP93vd79jU3DvKRRtZGmxND/bGSTL4Bl+VbOZqUCSP/xY+hvLZ2ABP25i
m3TkLABv7LRHg/kwlIdmuiebM5AnNshekPbDbcefXG9kMnCi8xdFi08vBpzI
V4dXM+DAHdrc9l9CY84uv4zWedQoBoNteBrsMnpY6dU4i/uPs7V2TQwahXgm
jifcg+LEFZOqDRn0JEpuPw7S0X7hreCU6pDrWug2dfIu/lRO44PYW9Ab3TCJ
L3LbzpvJtVBgHNtRkL4IKR4OQ75/qPA/vbTBZ4LNecEyA4dHqsIl5mq0X99b
bbVHBaTfMCDPc+9I0eO2u/iaeFWMye873p9iN6Bpdjk35gkDbscrmqu3GBQ8
2xd0tqAWSH7IloTsTFYw6Dkk8KzYfYfOl84DWP8+f/6/sljED0jqQ9v16Kcj
hQzUFw6+nmZyn9ZL/UL/RzJPqhf0PyLMsh3QwERTWdHdzhnaDyD+RfvNQb2w
RwmPLY9m2MWoMa6Ys2bttgAPgiNu5TovUn3g/LPngSS4fs51jwtXT/2OuRzZ
1/vf0aJZ46TsA5dp+g2kv0DOQ6InqAOfVaWTHtreMB7itY1Sf1N+0fqRXVXX
z+j0mMM7eTkndQQIL9Bm1vDmdNkYbDmckdqu6ChfqN6on+l+LONHDBtsxeBy
6rBJe4me6o/6CQj/gORL41H+0P4g8T+dF5035QHlL+Un5SMQf1I+UF5R/yG5
n5DwHv8G3L60TQ==
          "], {
           {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
            ArrowBox[CompressedData["
1:eJwVxWfXgQoAAOBXIWSUvZKQkb2yskL2yt5kk3N/wv3r99zny0MI//AC8Pf3
9y/89/f/EkAilcglColKopZoJYhELzFKzBKrxC5xSlwSt8Qj8Un8kqCEkkQk
MUlCkpJkJLQkLylKGElFUpOwkqaEk3QkPclAMpJMJLxkLllK1pKtZC85Ss4S
QXKTPCQvyUciAiAgBWQABCgAFQADakADaAE9YACMgAWwAQ7ABeCAB/ACPoAE
gkAUSAApoACUgDJQAapADagDLaANdIAuMABGwBjggRmwA/bAETgBF0AAbsAD
eAIvQAQhUAUiIArqQTNoAW2gA8RAF0iAHjAABkEKDIMRMArGwQSYAjNgFqTB
HJgHC2AJLIMNsAm2wDbYBwfgCJyCPLgAl+AKXIMbcAvuwCN4AW/gA/yAX1CU
yqRyKSRVSlVStVQj1Up1UkRqlJqkZqlN6pBiUreUkPqkpNQvDUgpaVyakmak
JWlZWpXWpHUpK21I29KutCftS0fSiXQqnUsX0oP0KD1LL9Kr9CZ9SF/St/Qj
U8rUMr3MIDPKrDKbzCHDZLjMLfPKfLKQjJJFZFFZTBaXJWUpWUZGy3KyvKwg
K8pKsrKsKmvJOFlb1pUNZSPZRDaTzWUr2Vq2kW1lO9ledpCdZVfZQ/aSibKf
HJIr5Eo5LFfLtXKdHJGjcr3cLLfIrXKHHJPjco/cK/fLA/KgPCSPyJPyjJyW
l+VVeV3Oyhvyprwl78r78oF8KJ/IeflMvpSv5Cf5WS7Ir/K7/CF/yT/yr1yE
YEgLGSETZIbskAPCIBwiIA9EQn4oDEWgGBSHElASSkMZiIbyUAEqQiWIgcpQ
FapDbagDdaE+NIYmEA8toCW0gbbQDtpDB+gInSABukMv6KNQKlQKWKFRaBWI
AlXoFQaFUWFV2BR2BabAFYTCpyAVQUVIQSnCipgiraAVeUVVUVc0FE1FS8Ep
2oq+YqgYKcYKXjFXLBRrxUZxUQiKm+KueCpeio9CVPyUGiWiNCstSqvSqcSU
uJJQepU+ZUAZVEaVMWVCmVSmlGllVkkr88qisqRklGVlRVlV1pUNZVfZU/aV
Q+VUySvnypVyrdwp98qD8qg8Kc/Ki/KmfCo/SlEFq9QqjUqnQlR6lUFlVJlU
ZpVd5VA5VbiKUHlVflVARanCqogqqkqosqq8qqiqqxqqlopTtVUdVVc1VI1V
E9VUNVctVSvVVrVTXVU31UP1VL1VH5UI62A9bIVtsB12wThMwF6YhP1wCKbg
OJyAU3AazsBZOAfn4SLMwGW4AlfhGlyHG3AL7sMDeAiP4Rk8h5fwBt7CB/gI
n+AzfIEF+Ao/4DcsqjVqrVqnRtV6tVFtUpvVFrVV7VRjapeaUHvVpDqoDqkj
6qg6po6rU+qcuqhm1A11S91Wd9RddU/dV4/VUzWvnqmX6rV6o96rD+q7+qF+
qd/qr1rUoBqjxq5xaJwat4bQeDWkJqAJasKaiCapSWkymqyG1uQ0BU1Rw2gq
mqqmpqlrWE1D09K0NUPNSDPWTDULzVKz1uw0e81Jc9ZcNILmqrlp7pqX5qvV
aREtqjVojVqz1qK1am1au9alxbVurVdLagNaShvWxrRxbUKb1Ga0BS2jrWhb
2ra2q+1p+9qBdqidamfauXahXWu32p32qD1pn9qX9qP9an86g86sc+ownUvn
0Xl1pC6gC+koXVQX06V1GR2ty+nyuoKupGN0FV1NV9exuoauqWvp2rqubqyb
6Ka6mW6lW+u2uoPuqLvoBN1Vd9PddQ/dU/fR/RAU0SMGxISYEStiQ+yIA3Ei
boRAPAiJBJAQEkGiSAJJIikkjdBICakgNaSNdJE+MkCGyAgZIzNkgSyRFbJF
9sgBOSMX5I18EBH5oSbUirpQHHWjPpREA2gIDaMRNI4m0CxKo3m0gBbRElpG
K2gNZdEG2kRbKIe20S7aR6coj87QBbpBt+gePaFn9Ire0Dv6QJ/oC32jot6g
N+pNeoveqrfrHXqnHtO79B69V+/TB/QhfVgf08f1KX1an9Fn9Xl9WV/Ts/qu
vq8f6kf6sX6in+oX+pV+rd/o9/qj/qQX9Ff9Vy8aLAa7wW0gDB6D3xAwhAxh
Q9QQMyQNKUPOkDcUDSUDYygbqoaagTU0DS0DZ2gbOoauoW8YGmaGuWFhWBl2
hr3haLgYBMPd8DA8DS/D2/AxfI0mo9loMdqMdqPTiBldRtzoNvqMpNFvDBnD
xqgxYUwaM8askTbmjEVj1cgam8a+cWgcGyfGqZE3zowr48a4Ne6MR+PZeDHe
jHfjz2QzOU0ek9fkMwVNIVPYFDXFTQlT2pQxFUxFE2MqmyqmqqluYk1NE2dq
mzqmrqln6puGprFpYVqaVqaN6WA6ms6mq+lmeppeprfpY/qaRNPPbDFbzTaz
w+w0u8y42W0mzB6z3xwwB81hc9QcN6fMaTNtzpnz5oKZMdfNTTNnHprH5qmZ
N8/Mc/PCvDHvzHvzwXw2C+ar+WF+WhwWl8VnIS1+C2UJW6KWuCVpSVmyFtpS
sjCWiqVqqVnqloalaeEsHUvX0rP0LQPL0DK2TC0ry9qysewsJ8vZIljulofl
bflYvhbR8rParHarw4pZXVa3lbB6rF6rzxq0hqyUNWqNW5PWjDVrzVsL1qK1
ZK1YG1bO2rGOrVPrzDq3LqxL68q6sx6sR+vJKlhv1rv1ZX3bMJvb5rcFbEFb
xBa1xW1JW9qWseVseVvZVrHVbHUba2vYWjbO1rH1bH3bwDa0jWxj29Q2s21s
W9vOdrBdbILtZnvaXravTbT97A67047Zcbvb7rF77T47affbKXvYHrHH7Ul7
2k7bc/aivWRn7GV7zd6yd+w9+9Q+sy/sS/vKvrZv7Af7yX62X+w3+8P+tH/s
Xwfu8DiCjpCDcsQccUfSkXZkHbSj4Cg6qo6ag3U0HE1Hy9F2dBw9x8AxdIwc
Y8fEMXXMHAvHzrF3HBwnx9Vxczwcb8fH8XNiTpcTdxJOj9PnJJ1+Z8AZdEac
UWfMmXSmnVln3llwMs6ys+KsOlln29lzDpwz58K5cq6dG+fWuXOenBen4Lw6
H86X8+0UnT+MwHwYhYWxCJbAklgay2I5LI+VMAarYyzWxFoYh7WxLtbDBtgI
G2MTbIrx2AxbYCvsgB2xE3bB7tgDe2FfTHThLreLcHldPpffFXAFXSEX5Yq5
4q6EK+3KunKuoqvkqriqrpqr7mq6uq6Ba+RauFaujWvr2rn2roPr4rq6bq67
6+X6uL64F/fjETyKx/AUnsazeA4v4EW8jFfwBt7EObyNd/Au3scH+Aif4FOc
x2f4HF/gK3yDn/AzfsGv+BN/4R/85ybcHrfXTbr97qA75KbcYXfEnXAn3Sl3
1p1zF9yMu+yuuetu1t1wc+6+e+SeuFfujXvn3rsP7qP75L667+6H++n+uEX3
jyCJIBEj4kSCyBBZIkcUiBLBEFWiRrQIjugQXaJH9IkhMSImBE/MiDmxIJbE
itgQO+JCCMSVuBNv4kOIHq/H5yE9AU/QQ3nCnogn6ol5Up60J+PJeQqekqfi
qXpYT8PT9LQ8Hc/QM/Hwno1n5zl4jp6T5+y5eO6ep+fleXtEb8BLeRPepDfl
pb05b8Fb8pa9FW/dy3rb3o635+17B96hd+ydeHnv3LvwLr0r79q78e68B+/V
e/PevU/v1yv6SJ/fF/CFfJQv4ov6Yr64L+HL+LI+2lfwlXxlX81X9zV9LR/n
a/t6vrGP9819O9/Bd/KdfRef4Lv6nr637+P7kiEyQqbINJkh82SBLJFlskrW
yAbZJLtkjxyQQ3JEjskpyZNzckmuyDW5IbfkjjyQJ/JOPsgn+SZ//oA/6A/5
w/6IP+aP+xP+pD/lp/05f95f8pf9VT/rb/g5f9vf8Xf9A//UP/cv/Qf/yX/x
C/6r/+a/+9/+r1/0/wLhQCyQCWQDdKAYKAXKgWqgHmADrQAX6AcGgVFgHJgE
poFZYB5YBtaBTWAb2AX2gUPgFLgEnoFX4B34BkNBKhgORoOxYCKYDKaC6WAm
mA8WgsVgOVgN1oPNYCvYCXaDvWA/OArOgsvgOngKXoLX4C14Dz6Cz+A3+AtF
Q4kQHcqF8iEmVA5VQ/VQI9QMtUOd0DA0Ck1C0xAfmoUWoWVoHdqGdqF96BA6
hk6hS+gaeoc+oW/oR4WpCBWl4lSCSlFpKkNlKZoqUiWKoapUnWpQHNWmelSf
GlBDakItqDW1pS7UlbpTD+pJvag39QvHw6lwPlwIF8OVcDVcDzfCrTAX7oZ7
4XF4EubDs/A8vAivwuvwNrwPH8LH8Cl8Dl/C1/A9/A2L4V8kGolF4pFkJBXJ
RLIROpKL5CNMpBypROqRRqQV6US6kUFkGBlFxhE+sopsI/vINXKPPCOvyDvy
iXyjyWgmWoyWoky0Fq1HG9FWtB3tRPvRQXQa5aPz6CK6jK6im+g2uo8eo6fo
OXqJCtFr9B59Rn+xeCwRS8bSsUyMjuVi+VghVoxVYtVYLdaItWLtWC/Wj41i
49gkNo3NY5vYPnaM3WPP2Dv2iX1jYuwXT8fpOBMvxytxNt6It+LteDfeiw/j
o/gsPo8v46v4Or6J7+L7+DF+jl/iQvwav8Xv8Wf8nUgmUol0IpugE/lEIVFM
lBJMopaoJ9hEK9FOdBODxDAxSUwTfGKWWCZ2iWPinHgm3olvQkz8ktlkPllJ
VpO1ZDPZSraT3WQ/OUiOk5PkIrlMrpOb5Da5Sx6Sx+Q5KSSvyVvynnwkn8l3
8ptKpzKpbCqXyqeKqVKKSZVTlRSbaqSaqXaqm+qnRqlxik/NUvPUIrVOHVLn
lJB6p76pXzqXLqZr6XqaTXPpdrqb7qeH6VF6mubTq/Q6vU3v0vv0IX1Kn9NC
+pa+px/pZ/qVfqe/6V8mm6EzuUwhU8wwmXKmkqlmaplmppXhMt1MPzPMTDLT
zDyzyCwzq8w2c8oImVvmm/llC1kmy2Yb2Wa2k+1m+9lhdpydZGfZeXaT3Wb3
2UP2mD1lL1khe8s+ss/sK/vOfrLf7I/O0Xm6QJdohq7QVbpG12mW5ug23aH7
9JAe0zw9o5f0il7TG3pPX+gb/aB/uVKukmvmWjku18v1c8PcODfN8blFbpnb
5fa5Y+6UO+cuuWvulnvkXrl37pP75sTcL1/IF/OlfDlfydfy9Tybb+Sb+U6+
m+/lh/lxfpqf5xf5dX6T3+Z3+WP+mn/kX4VyoVbgCu1CpzAoDAvjwrQwK8wL
q8K6cCgcC+fCpSAUroV74VF4FT6Fb0Es/IqlIlMsF6vFWpEtNorNYqvIFXvF
fnFQHBenxVlxWVwVt8VdcV88FM/Fe/FV/JSqJbbUKXVLvdKoNC5NS7PSorQs
bUrb0ql0Lgmla+lWupeepVfpUxJLP6bMVJgqU2dYpsm0GI5pMx1mwAyZETNl
ZsyCWTMbZs8cmCNzYgTmyXwYsVwvN8u9cr88KE/K0/KsvCivyuvyrrwvX8pC
+Va+lx/lZ/ld/pTFSrVSq9QrjUqzwlXalU6lW+lVRpVxZVKZVRaVVWVb2VWO
lVPlXLlUbpV3Raw2qlx1UB1WR1W+OqsuqqvqprqtHqrH6rV6qz6qz+qr+q5+
q2KtXmNrjVqrxtU6tW6tV+vXBrVJbVrja4vaqrap7WuH2rl2qQm1a+1R+9Zb
9U59VB/XJ/V5fVFf1Tf1XX1fP9XP9Xv9UX/V3/VP/Vv/sQ22ybbYNtthe2yf
HbBDdsTy7Iydsyt2w+7YI3tiBfbK3tg7+2J/jXaj15g0pg2+sWysGpvGrnFo
HBuXhtB4Nl6NT+PbEBu/ZqvJNdvNbrPXHDSHzVFz3Jw0581Fc9ncNHfNQ/Pc
vDRvzXvz0Xw2P61ua9DiW7PWvLVubVq71qF1ap1b19at9W59WmLrx7W5Dtfl
+tyAG3FjbsJNOZ5bcituze24A3fiBO7KPbgn9+LenNjut0fteXvRXra37V37
0D61L22hfW8/2t+22Ol2ep1+Z9gZdSadaYfvzDrzzrqz6Ww7h86pc+ncOvfO
q/PufDrf7rA76S67q+66u+8euqfupXvt3rrP7qv76/V7g96wN+5Nenxv1pv3
Fr1lb9vb9fa9U+/Su/YevWfv0/v2xN6vP+7z/XV/09/2j/1T/9K/9u/9R//d
/wyGg9FgPJgO+MF8sBgsB6vBerAfHAbHwWVwHdwHr8F7IA5+w+lwPtwOd8P9
8Dy8DK/D+/A5fA2/Q3E0Hk1G09FsNB8tR6vRerQZbUfH0Wl0Hl1H99Fz9Bl9
x7PxcrwfH8bHsTC+ju/j5/g9/ox/k+mEn8wmi8lysp5sJtvJbrKfnCeXiTC5
T56T90Sc/KaL6Xp6nJ6m5+ltep8+p+/pdyryM37OL/gVv+a3/I7f8wf+yAv8
lb/xT/7Nf2er2XZ2nl1mwuwxe87es+/sN1/Ml/PVfDPfzvfzw/w4P83P89v8
Pn/M3/Pv/LfYLPYLYXFd3BavxXvxXfyWq+V6uVnulvvlcXlanpeXpbB8LJ/L
1/K7/K12q+PqtrqvHqvP6rv6rTfr7Xq3PqyP6/P6shbW1/Vt/Vq/15/1b3PY
nDePzXPz2oib33a33W8P29P2vBW21+1te98+tp/tdyvuTjth99q9d5/9YX/c
n/aXvbC/7e/7x/65f+3F/e9wOdwOn8P3IB5Px/Pxcrweb8fH8Xl8Hd/Hz+l6
epzE0+98OQvn6/l+fpxf5/f5c/6excv98hKuwk24C0/hJXyEryAKv+vz+rnd
b4/b8/a+fW7i7Xd/38XH8/F6vB/fh/j8vt6vz+v7+r1/n+9H/PzE339RxfMD

             "], 0.022609777250552104`]}, 
           {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
            DiskBox[1, 0.022609777250552104], 
            DiskBox[2, 0.022609777250552104], 
            DiskBox[3, 0.022609777250552104], 
            DiskBox[4, 0.022609777250552104], 
            DiskBox[5, 0.022609777250552104], 
            DiskBox[6, 0.022609777250552104], 
            DiskBox[7, 0.022609777250552104], 
            DiskBox[8, 0.022609777250552104], 
            DiskBox[9, 0.022609777250552104], 
            DiskBox[10, 0.022609777250552104], 
            DiskBox[11, 0.022609777250552104], 
            DiskBox[12, 0.022609777250552104], 
            DiskBox[13, 0.022609777250552104], 
            DiskBox[14, 0.022609777250552104], 
            DiskBox[15, 0.022609777250552104], 
            DiskBox[16, 0.022609777250552104], 
            DiskBox[17, 0.022609777250552104], 
            DiskBox[18, 0.022609777250552104], 
            DiskBox[19, 0.022609777250552104], 
            DiskBox[20, 0.022609777250552104], 
            DiskBox[21, 0.022609777250552104], 
            DiskBox[22, 0.022609777250552104], 
            DiskBox[23, 0.022609777250552104], 
            DiskBox[24, 0.022609777250552104], 
            DiskBox[25, 0.022609777250552104], 
            DiskBox[26, 0.022609777250552104], 
            DiskBox[27, 0.022609777250552104], 
            DiskBox[28, 0.022609777250552104], 
            DiskBox[29, 0.022609777250552104], 
            DiskBox[30, 0.022609777250552104], 
            DiskBox[31, 0.022609777250552104], 
            DiskBox[32, 0.022609777250552104], 
            DiskBox[33, 0.022609777250552104], 
            DiskBox[34, 0.022609777250552104], 
            DiskBox[35, 0.022609777250552104], 
            DiskBox[36, 0.022609777250552104], 
            DiskBox[37, 0.022609777250552104], 
            DiskBox[38, 0.022609777250552104], 
            DiskBox[39, 0.022609777250552104], 
            DiskBox[40, 0.022609777250552104], 
            DiskBox[41, 0.022609777250552104], 
            DiskBox[42, 0.022609777250552104], 
            DiskBox[43, 0.022609777250552104], 
            DiskBox[44, 0.022609777250552104], 
            DiskBox[45, 0.022609777250552104], 
            DiskBox[46, 0.022609777250552104], 
            DiskBox[47, 0.022609777250552104], 
            DiskBox[48, 0.022609777250552104], 
            DiskBox[49, 0.022609777250552104], 
            DiskBox[50, 0.022609777250552104], 
            DiskBox[51, 0.022609777250552104], 
            DiskBox[52, 0.022609777250552104], 
            DiskBox[53, 0.022609777250552104], 
            DiskBox[54, 0.022609777250552104], 
            DiskBox[55, 0.022609777250552104], 
            DiskBox[56, 0.022609777250552104], 
            DiskBox[57, 0.022609777250552104], 
            DiskBox[58, 0.022609777250552104], 
            DiskBox[59, 0.022609777250552104], 
            DiskBox[60, 0.022609777250552104], 
            DiskBox[61, 0.022609777250552104], 
            DiskBox[62, 0.022609777250552104], 
            DiskBox[63, 0.022609777250552104], 
            DiskBox[64, 0.022609777250552104], 
            DiskBox[65, 0.022609777250552104], 
            DiskBox[66, 0.022609777250552104], 
            DiskBox[67, 0.022609777250552104], 
            DiskBox[68, 0.022609777250552104], 
            DiskBox[69, 0.022609777250552104], 
            DiskBox[70, 0.022609777250552104], 
            DiskBox[71, 0.022609777250552104], 
            DiskBox[72, 0.022609777250552104], 
            DiskBox[73, 0.022609777250552104], 
            DiskBox[74, 0.022609777250552104], 
            DiskBox[75, 0.022609777250552104], 
            DiskBox[76, 0.022609777250552104], 
            DiskBox[77, 0.022609777250552104], 
            DiskBox[78, 0.022609777250552104], 
            DiskBox[79, 0.022609777250552104], 
            DiskBox[80, 0.022609777250552104], 
            DiskBox[81, 0.022609777250552104], 
            DiskBox[82, 0.022609777250552104], 
            DiskBox[83, 0.022609777250552104], 
            DiskBox[84, 0.022609777250552104], 
            DiskBox[85, 0.022609777250552104], 
            DiskBox[86, 0.022609777250552104], 
            DiskBox[87, 0.022609777250552104], 
            DiskBox[88, 0.022609777250552104], 
            DiskBox[89, 0.022609777250552104], 
            DiskBox[90, 0.022609777250552104], 
            DiskBox[91, 0.022609777250552104], 
            DiskBox[92, 0.022609777250552104], 
            DiskBox[93, 0.022609777250552104], 
            DiskBox[94, 0.022609777250552104], 
            DiskBox[95, 0.022609777250552104], 
            DiskBox[96, 0.022609777250552104], 
            DiskBox[97, 0.022609777250552104], 
            DiskBox[98, 0.022609777250552104], 
            DiskBox[99, 0.022609777250552104], 
            DiskBox[100, 0.022609777250552104], 
            DiskBox[101, 0.022609777250552104], 
            DiskBox[102, 0.022609777250552104], 
            DiskBox[103, 0.022609777250552104], 
            DiskBox[104, 0.022609777250552104], 
            DiskBox[105, 0.022609777250552104], 
            DiskBox[106, 0.022609777250552104], 
            DiskBox[107, 0.022609777250552104], 
            DiskBox[108, 0.022609777250552104], 
            DiskBox[109, 0.022609777250552104]}}]],
        MouseAppearanceTag["NetworkGraphics"]],
       AllowKernelInitialization->False]],
     DefaultBaseStyle->{
      "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
     FormatType->TraditionalForm,
     FrameTicks->None,
     ImageCache->GraphicsData["CompressedBitmap", "\<\
eJykvWmMJVl2Hva6cl+rMrP26q6luyqieqnume5p9qzdI4nsmYp43WOLi0eb
7TFJaBYRtkckYJHsjGhqoSGbhOwftkzwj2FDsCXbAAHDMGCatmEZgiRKMm3R
hiETXgRLoqgZDmfp6a6qfM8v4t5zvu87EZlZJBvozMq3RNw495zvfOece899
6ws//sUf/bEv/PiXfvgLNz/z1S/8a1/80g//6Ztv/qtfXby09MRk8sQL3f83
J8uLf88nk8GPe5PJ7+XfP9f/XHlp8eMnFv//pfz71e7Vpd/je38xXfrPn/CR
M/17l35k8eNvHpy/+NvPf+h7Hn3qe9/67XuvfOxvn7945avpCpPf1/snDfHd
9P13Th3i3ZNucS+/N//c5394/gt/9X+Y/0f/5a/Of/E/+x/n3//Hv9h95o/8
Pt9/9TEes00f+YlTn2T/9/okf+/8pWt/fevinUd3X3qte2+pe3Oy0r398N4r
n/xg8db82Zc+2r01ofce3PvIp76xef72TN/b7977xuLWP3lmefnz55/+5K/u
X7hymgDGHuvPpLd+/Pf3cL9+4cpT/2j3xkdslGmQy/3b9z7y+nzz/K35xz59
f6V/eWn++ve+PV8/e617aSKvnbtKr630r+3dfG1+6YU6yOacPf/PrW1f+NKZ
M8sn6ffYc+f3fqz/uTc64Y+hmn9tfffqg7svvkYjo4c+oIde7h+me+nu4kH+
vb/yyzbH3VWff/kT853Lz9lbk9/NexeefXO+/8ynSG7n+lvtXr03v3Tz3nEj
/3MnzPS/nh7+T/U/N0/SiS8t/v/63XuvhDmfDeY8P/758PjX/TEOnlk8yvUX
5tMf+Je6t/vh/uX/5Ff64XePce0jnz/h/RfnV185+f0bn/riQo2mx0l/+/Kz
Yxp2tLDMo+29S78Xy/pyeusrSYonadLfuXDx6j/YPLh9qrju+Xj3n/nkieK6
8ckvzq986A/3n+kusbhy/3zd35defHte1u2J7xfV8e9ffvGtebl4/9an/9SJ
Yzj71MsDC98/f5lkvNlJoNOnnzgFnr+UZPmj/c+N46yVtZExtLfGbobVhp4l
aZ6kfC/Oby6U5/Ip0ugkenMhkUv3pr09dr9vvvHl/nV7/1Z+/6B7f6GMt/r3
m8X7TS/x/vuL1w9up+8v3l+MdfGJhaROmo2BYi/1j/bcwtPcfOZunoDNbgLe
37ny/KOLN144SaG/CHe5EPZJ0/KLq1t7M0zxXgKeJ186WTU/dZJqvjU504lq
YX633iBh9ML6Si+sohdY64Ljf/fvpX+f6eW2vnipTR+rW5+LYpq/Zh+74FPk
V6PptOm4+fqX+/dvvnG84p+/+vT8VvHiMTAeQWaDDeA4IJn8K+m9H+5/bp2E
JN+6dP3ZWYcNqum3fAgXn/3MCZr0dpJOZ9tvkCa/QJpcN/p72iQJ1/a7zRPE
E9P/zhO7rrPRf771ay6+e6b7wmQrT1zrl7eh4ZI2sXbpfb/1cY94vvyDjwNZ
SZ03Zgt1/uub55/5CxsH14/lF19Ik/Mv9j/Xx+Zv6CQvOyrtPfPxEwd0c4Hj
PXK8ocjRz0ePGo3IvEhavdTLcDlOQ1L2VRMbpJ8+tpQtL5uGW5R9pKiaYCct
fdYnMU3Gcv56pyP9+JbyHPXTnN1Hb9/+SF/p7zY6dzeSenYiEKDbAoY//fEe
q0/y1P9ymqs/kebqOGT7W2dW1qEFu85Cj/UA994OCtmasNsF6ha93jYu0ZL/
Nh23jy9nFXcLO5MutRBM8gRuTd0UNwtwKeJELN7rZd/9rFu+XrrFM4qgZF1Q
qKxI04ZG3qoeLD4zcFevf9lx8yR32n1ecXCdcXDMhv5Ymrk/fjqZmu+evza/
++L3QEd2CP3e7Aduqmd+unctFaHRwniSrawAdlxA9t6yW1/+rrscN6+Gpsc8
VzaEZTUpU4BVgk827/z2RnZxyaoMdTGORsfOk5tQYtLpUstjr2nsy9EHJjDe
ON5hL3T/QKKP9c5evr6I5P7++ctPjiHmH01T+UO/ay7Xs8V58cKr871LN05C
zDTodUxbjTkAg2jsYwpnRCJqN8yOgLngK/14cGFpnrZIiI3PgStGJQbYzdfC
XtdGLum3THOahrwipDE/UfaBVzAWAMIQ8GvSrUoH5K7GeNfrX+m/Q9jrE9Ib
1oc/Nt/ZPzH58EfSnP7g6Yzy13YWYSuUaaMH360Lt4+n3ll82T4usyPKoDWg
C5jpaoROYub1Wsl+zgB8zbYn9loRprTtIdtYTALwbFFrUKdax9R9ecnmupmc
d/de5Dkr6KGYehUOCNFLC2VLfmNXseuUaO4gk1onMEvCW/P0/sDp/PSDSwtH
PuSnF4WfDhXwy2NeLqJenk1+v8XMuNV3AJhsiACwIGDvMbiKCmT8KftVxs4M
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
snLOe/9p+vpy+Ofh5f+evfD/Aey2PSI=\
\>"]]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"Paley\"\>", ",", "113"}], "}"}], "\[Rule]", 
    GraphicsBox[
     NamespaceBox["NetworkGraphics",
      DynamicModuleBox[{Typeset`graph = HoldComplete[
        Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 
         19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 
         36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 
         53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 
         70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 
         87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 
         103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113}, {Null, 
          SparseArray[Automatic, {113, 113}, 0, {1, {CompressedData["
1:eJwlzStMwwAYhdGfd3mXd+Vwk5VIJJKgkASFggY1WVk5OVlZOVlZOTlZWTk5
WclJuMlRV3yPnz9v3zsR8Rv/e6KgYSBzvlLRMZLvRnxR05PuRbxQ0rJluh/x
wYI1yUHEMzOWbJgcRrwzZ0Uc6VPQMJAl+lR0jOTH+tT0pCf6lLRsmZ7qs2BN
cqbPjCUbJuf6zFkRF/oUNAxkl/pUdIzkqT41PemVPiUtW6bX+ixYk9zoM2PJ
hsmtPnNWxJ0+BQ0D2b0+FR0j+YM+NT1ppk9Jyx8Cbz5o
             "], CompressedData["
1:eJw9mdV2XUEORGNmZmZ2HIcTO2ZmZmamv5vPm12lM/OUl9ur5aNdXSql5fJt
8zL106dP/6n+9CmFf1PTM7Nz8wuLS8srq2vrG5tb2zu7e/sHBr/9+PVn6N/o
+OT07Pzi8ur65vbu/uHx6fnl9e394/Pre0paekZWdn5hSWVVXWNbe0dnT2+f
Dg0Nj4yOjU9MTk3PzC2urK5v7ezuHZ2eXdzc3t0/PD2/p2bl5nFdSVl5RWVN
bV1DY3NLa1t3z+eBL77y79DI3MLi8sr65tbOweHRyenF1fXN0+vbe0pqRmZW
Tm5hcVl1TUNzR2dXd1//Z534N5JcNzu3sLy2vrmzt39wcn5xxXWPTy+vqek5
+QX8eWUVlVXVdfUNTc2tVNvb92Xwq//E4X9jC0vLq2ub2zt7R8cnZ+dXVPry
/pGSnpWdk5dfXFpRW9fU2tXd00uJOjA6ltw2v7C0urG5vUeZZ5dXN9z2/PL2
npqWnplXWMT3rKiqrqltaGxqaeXrdPV//vrtu7/pyOjEEh9mY3t37+CEL3N5
Q6lvKamZObl5BYWl5VX1DS3tfM1+StTvxyeS6xaXVta3tncPKPPi+uaO617f
PtIzMrMLiktoXxWfs76puaWtnY/TM/Dl+4+fbuHY+NQK32Vrd//g6IwPc31H
qR/0Lzsvv6CouLyyprGprZOvOUCFOjA5lVy3vLK2ubO7TxfOrm7vHrju/SMt
Mys7t6i0DFxq+JyNdK+js1vN//rz128jMzE5s8aH2dmnfxd8mVv6/pKSmpaR
mVtQWFRSWlld19zS0a2WU6NOwErct7q2sb23f0gbLm7AhfsysnNy80uApVqw
NDXTvK7uXvX++29oEaFT03MbfJe9Q9oHLXf3tJ3vGYAWCbXq2obWtq5e9Zwi
dQZY4r71ja3dg8Nj2nB1By8fxrMMVmrFSksrrevp7Vfvf/4FFgliZnYBqvcP
jgPrh0faru8ZgJYItdr6pvaOnn61nCp1CFriOsDePzo21w8Ak5pmPitgpV6s
tLXTvL7+ATX/9zCwSIFz80tgfXh0Glw/Pb99pHCbAS0TaPWNLZ1dfQNqOVXq
CLDEbXB9eHJqrNHRB2UazypgaRQsVu7ngUE1/6+0K8UvLK7A9fHJeYD98srf
x3UGtEKkNTZLtINqOUXqCLDEdWB9fHZuqtERXc8ynzXA0ixYrFzUrt4PS7t6
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
             "]}, Pattern}]}, {
         VertexCoordinates -> {{0.998455, 0.0555748}, {0.993823, 0.110978}, {
            0.975368, 0.220584}, {0.849355, 0.527822}, {0.0139004, 
            0.999903}, {-0.152314, -0.988332}, {0.539577, 
            0.841936}, {-0.968859, 0.247613}, {-0.651032, 0.75905}, {0.902685,
             0.430302}, {0.340568, 
            0.94022}, {-0.914298, -0.405043}, {-0.417713, -0.908579}, {
            0.986119, 0.166038}, {0.925204, 0.37947}, {0.491953, 
            0.870622}, {-0.996524, 0.0833084}, {-0.935395, 
            0.353605}, {-0.366573, 0.930389}, {
            0.849355, -0.527822}, {-0.207005, -0.97834}, {0.671881, 
            0.740659}, {-0.731248, 0.682111}, {0.712004, 
            0.702175}, {-0.607842, 0.794058}, {0.961602, 0.274449}, {0.749927,
             0.66152}, {-0.467561, 0.883961}, {0.975368, -0.220584}, {
            0.712004, -0.702175}, {-0.768026, -0.640418}, {
            0.392294, -0.91984}, {-0.890375, 0.455229}, {-0.0416905, 
            0.999131}, {0.0139004, -0.999903}, {0.0694483, 
            0.997586}, {-0.3143, -0.949324}, {0.877376, 0.479803}, {0.179729, 
            0.983716}, {-0.607842, -0.794058}, {
            0.877376, -0.479803}, {-0.0416905, -0.999131}, {0.234121, 
            0.972207}, {-0.731248, -0.682111}, {
            0.539577, -0.841936}, {-0.999614, -0.0277981}, {-0.999614, 
            0.0277981}, {-0.981123, 0.193386}, {-0.768026, 0.640418}, {
            0.585534, 0.810648}, {-0.914298, 0.405043}, {-0.207005, 
            0.97834}, {0.491953, -0.870622}, {-0.990354, 
            0.138561}, {-0.863699, 0.504007}, {0.124782, 
            0.992184}, {-0.467561, -0.883961}, {1., 0}, {
            0.993823, -0.110978}, {0.902685, -0.430302}, {
            0.124782, -0.992184}, {-0.261056, 0.965324}, {
            0.62968, -0.776854}, {-0.935395, -0.353605}, {-0.562773, \
-0.826611}, {0.944863, -0.327466}, {0.442808, -0.896616}, {-0.953601, 
            0.301074}, {-0.515965, 0.85661}, {0.998455, -0.0555748}, {
            0.961602, -0.274449}, {
            0.585534, -0.810648}, {-0.981123, -0.193386}, {-0.890375, \
-0.455229}, {-0.261056, -0.965324}, {0.785532, 0.618821}, {-0.3143, 
            0.949324}, {0.749927, -0.66152}, {-0.651032, -0.75905}, {
            0.785532, -0.618821}, {-0.515965, -0.85661}, {
            0.986119, -0.166038}, {
            0.818709, -0.574209}, {-0.366573, -0.930389}, {0.944863, 
            0.327466}, {0.62968, 0.776854}, {-0.834354, 0.551228}, {0.28779, 
            0.957694}, {-0.834354, -0.551228}, {
            0.0694483, -0.997586}, {-0.0971525, 0.99527}, {
            0.179729, -0.983716}, {-0.417713, 0.908579}, {
            0.925204, -0.37947}, {0.28779, -0.957694}, {-0.69221, 0.721696}, {
            0.818709, 0.574209}, {-0.152314, 0.988332}, {
            0.340568, -0.94022}, {-0.802431, 0.596746}, {0.442808, 
            0.896616}, {-0.996524, -0.0833084}, {-0.990354, -0.138561}, \
{-0.953601, -0.301074}, {-0.69221, -0.721696}, {
            0.671881, -0.740659}, {-0.863699, -0.504007}, {-0.0971525, \
-0.99527}, {0.392294, 
            0.91984}, {-0.968859, -0.247613}, {-0.802431, -0.596746}, {
            0.234121, -0.972207}, {-0.562773, 0.826611}}}]]}, 
       TagBox[GraphicsGroupBox[GraphicsComplexBox[CompressedData["
1:eJxdlXtQVGUYxlcqLbNBBItYargIMhHMhIBuw/AuiYwbZAFG0MAoTKAgcYlc
iYB1uKigCIlQIlkgchlwZIVlINAXVBLbRZAFk5XL3thlb+eI64VxKLv+9X4z
Z86cOed83/c+7/P8PtekzKhkGw6Hk/339c99SJ2l+8zKQn/zk3sRX3eAYN9e
bfIoC77R1crXUgdAa3/ZGhjIQke7jcQxSAb6AGGZ0ccE+aLiJ0aNEtJ1Adzx
Qycgqbi02v85Cxll8VmrRdexSOOXkfYzi92VG1cCQ1Uwk/LODfclI1yyWGq1
HBan4NgXI+IxyBs5bRsypUXGNMhz/3ARPpn3a5GqzeBzJy7Frvw+dDiV9M1K
p+CnbBV/5+sMmMvfVFlCLFgZee4bnnkaqyKO7hrrV6C28fNQB3sLmhVzGYKT
LFg/fSju5w9DHzf0wI6zFvBa+6gsSHAPYibKM73y58Gxy6PdbcYE2/olEUc0
LL6Y9u1LXdESsFn6pXCIsaCK6ZgVNtwFuW/zGebg7xg5s+SJwxZaP3aoK2Tu
ot9QJ321s3IXi8d6eTXrDi/AtnNjh/O69MArbPVPStGj4ErLVwr5AlxRyusH
RnRQv6Wxe2uuDiaiteuzczR43a4pyrzfAGtqek9mDzMgmVeUnaq6AyXJ6Ysp
z/XgIev+w9t7Aa41LS+XmGdx9frg0/sFZtofJPOjQGC7vb16EX9s6NV8VKjF
0k6n8FjuNLx/SRy+O9OC0oYdPdYCM94OkI3nus1CwPfcdQdjL+DtDJ9q1TJL
+4stYdtdE26K4T/9WZCJdmLBW5MYp2jrm9nLoF2OYEpob4benMSmNyRzgGGn
XOJX3QRhm92zM3ksrZd+j2R9xB2bwy8+HQXHzVcVkc4s1ZP6C3sey0V3V1h8
GFllcDpUT5/h7Y+ltvHJLAqPD8bOD44A0Qe8wmpl4gE15HtvsJ98YKB+A9Jv
6id0GfOdf9bJYp3boCFhYAicxyc2pp83obXyqkDuogQHD9fvepYQOtusrcvI
0n4i59/xADj/D5JHJPlAMh+GvHuWt0kyjm37QrxYDQMDMNce46kFUVmuaeX+
IhJ/Iz/iWmmQjRqLsrMMP+QYcUPakd2RQQyYotwfbXk8iWtt6xKexszAe/zG
VxzEZhQoKoJ1xQy+8IFJJQ2Vg7+v88u3ipSY2GzZE5dqAsITJH5Goi+SflA/
0now8UbwKgd3A3BFjZcTRzXUfzQvSPhC/0eyf8oPrOQWbp31M4Kbf1GFaY8a
CQ+oXlRviPExeK3pMmKn0EHfel4F5tSj6HlgApSpfpovLzD0Pc0X2hTx8lbm
elFuX5vLn2Zpnij/KO+QrIcpij9rajx12GXpDnBz1AOpj/Kb8hcrCm79WnzR
gJvq+HbHHTVA/EF5SvNA/UP3Q/mJJD9UD8ozer7Q/VKeUP/DXyo05ts=
          "], {
           {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
            ArrowBox[CompressedData["
1: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
d81b89X8tEatRWvV2rR2rUPr1KJaTItr3Vqf1q8NaEPasDaqjWnj2oQ2q81p
CW1JW9ZWtDVtQ0tq29qOtqsdaJfatZbWbrU7LaM9ac/aq/apfWnfWlb71el1
Bp1RZ9ZZdHadQ4fqvDqfLqSL6lK6tC6jy+oKuqKO0NV0DR2pa+v6uoFupKN0
Y91EN9XNdHPdQrfUrXVb3UHH6E66q+6ue+ieOlZv1tv0sN6ud+hdelSP6916
j96rD+iD+pA+oo/q4/qEPqlP6fP6gr6sr+ir+pq+oSf1bX1X39P39SP9Wr/R
b/V7/UF/0l/0V/1d/9Z/9Kz+ZzAaTAazwWqwGRwGlwE3+A0BQ8QQN2QMWUPO
kDcQhpKhbGgYSEPb0DUMDSPD2DAxTA0zw9ywMCwNK8PasDHsDUfDyXAx3A1P
w8vwNvyMVqPdiBgdRpcRM+JGj9Fr9Bn9xpAxbIwYY8a4MWlMGdPGjLFoJIxV
Y81YNzaMpLFt7Br7xoFxaBwbN8adcW9kjEfjxXgz3o1PI2v8Gn8ms8lisppg
k93kMmEmjyloCplipqQpZ8qbCqaiqWyqmKom0tQ2dU19E2Uam6ammWluWpiW
ppVpbaJNG9POxJjOpovpZnqa3qaPiTXDZofZaXaZMbPb7DH7zH5zwBw0R8xR
c8ycMCfNaXPGnDXnzCVz2Vw3N8xNM2lum7vmvnloHpkp89S8Mx/MjPlkPptv
5of5aX6bfxarxWaBLYjFYcEsbovPErZELAlL2lKwFC2EpWSpWmqWuqVt6Vr6
lqFlYpla5paFZWlZWdYW2rKxbC07y8FyslwtN8vD8rawlq/lZ0WsLitqxaxu
q9fqswasQWvIGrbGrHFrwpqypq1Za86atxasFWvV2rSS1pa1be1a+9ahlbKO
rRPr3HqwHq0n68V6tT6sL+vbytpgm92G2Jw2l81t89oCtqgtZkvZsjbCVrKV
bRVb3dawNW1dW982tFG2mW1uW9pWtrWNtm1sW9vOtrcdbEfbxXa3PWwvG2v7
wU4Yg3HYDXthPxyAQ3AYjsBROAEn4RScgbNwHi7ARZiAa3AdbsFtuAN34T48
hCl4Ak/hGbyEj/AZvsA3+A6/4A/Mwj87YnfYnXbUjtm9dr89ZI/bE/aMPW8v
2yv2qr1mb9pJe8vetw/tlH1iX9iX9rWdtm/sW/vOvrcf7Iz9aD/bb/an/WX/
2H8IirgRD+JF/EgQCSERJIrEkDiSQtJIBskheaSIEEgJKSMNpIl0kC7SQ/rI
EKGQCTJD5sgCWSNn5IrckAfyRD7IF/k5nA6XA3XgDrfD7wg6Io6kI+XIOYqO
qqPmqDsajpaj7eg4hg7KMXHMHCvH2rFxbB07x95xcDCOo+PkODuujofj7fg4
vk7c6XX6nH5n0Bl2RpwxZ9yZcCadGWfWmXMWnEVnyVl2VpxVJ+lsOXvOvnPg
HDop58Q5cy6cS+fKuXFenXfnw/lyvp1fF+rCXLjL4/K6gq6wK+ZKuzKugqvk
qrsarqaLdHVcXVfPRbkmrplr4aJdG9fOtXcdXIzr6Dq5zq6L6+q6u14u1vVF
PagfDaBBNIxG0RiaQJNoCk2jOTSPFlACLaEVtIrW0DraRjvoAB2iI5RCJ+gM
XaArdI3S6A69o0/0hX5QFsMxN+bBfJgfC2NRLIFlsRxGYBWsiZFYC2tjPayP
DbAJNsMW2ArbYjvsgDHYETthZ+yCXbEbdsee2Af74T48iIfwMB7F43gCT+Fp
PINn8QJexAm8jFfwGl7HG3gT7+I9fIRT+Bif4DN8ga9wGt/gW/yAP/E3/sG/
+M/tcXvdPnfAHXRH3XF3yp13F9xld83dcrfdHXfXPXAP3SP3zL1wr9y0e+8+
uI/uk/vsvriv7pv77n64n+63++sJeMKeiCfqiXuSnpQn48l6cp68h/CUPGVP
1VPzNDxND+lpefqegWfsmXimnpln4Vl5aM/Ws/PsPUfP28N6vl6f1+8NeEPe
sDfuTXoz3qKX8Fa9DW/H2/X2vH3vyEt5x96Fd+WlvVsv4z16z96L9+q9ee/e
h/fpfXnfXtYX8kV9MV/cl/SlfRlfzpf3FXxFX9lX8VV9dV/DR/pavrav4xv6
Rr6pb+ab+xa+lY/2bX1738HH+M4+1vfzB/xBf8gf8Uf9SX/an/OX/GV/3U/6
e/6+f+Af+sf+iX/qX/lp/9a/95/8Z//Vf/Pf/Q//0//yv/0fP+v/BSKBeCAR
SAbSgWwgFygEigEiUApUA7VAPdAMkIF2oBPoBnoBKjAOzAOLwDKwCtCBbWAf
YALHwClwDfyCoWA4GAnGgvFgOpgNFoKVYDXYDLaDg+AwOApSwWlwFpwH6eA2
uA8ywUvwGrwHH8Fn8BV8Bz9BNvgN/kKxUDKUCqVD2VA+VAgRoVKoHKqE6qFG
qBlqhdqhbqgX6ocGoUloGlqGVqF1iA5tQ/sQEzqFzqFL6B6OhKPhWDgRToaz
4XyYCNfC9XAr3A2PwlR4HJ6E5+FFeBnehvdhJnwK38L38DP8Cr/DnzAb/oZ/
kUQkHclEspF8pBghIuVIJVKN1CLNCBlpRTqRbqQfGUSGkVFkFplH1hE6sols
I/sIEzlFLpFr5BZ5RmPReDQRTUXT0Xy0GC1HG9FmtBPtR8fRSXQanUWX0VV0
Hd1Hmegpeok+os/oO/qJstFv9BdLxbKxXCwfK8ZKsXKsGqvF6rFGrBVrxzqx
XqwfG8ZGMSo2ji1iy9gmto3tYvsYEzvFLrFb7B57xN7xRDwZT8Uz8Wy8GC/F
q3Ey3or34sP4ND6Lz+OL+DpOxzdxJn6KX+K3+Cv+jrPxb/yXyCTyiUKimCgl
Kolqop5oJJoJMtFJdBO9xCAxTFCJcWKSmCZWiXVil9gnDgkmcUpcErfEI/FM
vBJsMpVMJzPJXDKfLCUryXqynewkB0kqOU8uksvkKrlJbpO75Cl5Sd6Sj+Qn
ySZ/qVyqmCJSpVQlVUvVU80UmWql2qleqp8apEYpKjVJTVOz1DxFpzapQ4pJ
HVOn1CV1Sz1Sr9Q79Un90pl0Np1LF9LFdCVdSzfT3XQvPUpP0sv0Kr1O0+ld
ep8+pC/pW/qRfqW/6V+mkCllyplKppZpZJqZVqad6WS6mUFmmBllxplJZpaZ
ZxaZZWab2WWOmVPmnLlkbplH5pX5ZNjMN5vL5rOFLJEtZWvZRraV7WcH2XF2
ll1n6ewmu80eskz2mL1lH9lX9pMjcpVcNVfLNXJkrpXr5Lq5Xq6fG+Wo3Dg3
zc1yi9wyt8qtc/vcIXfOXXLX3C33yL1yn9w398sX8sU8kS/nK/lGnsx38sP8
KD/NL/Kb/Da/y+/zx/wpf84/8q/8J/8tlAu1Qr3QKJCFdqFT6BX6hUFhWBgX
JoVpYV5YFFaFdYEubApM4Vi4Fm6Fe+FReBU+hW+RKJaK5WK1WCuSxXaxV6SK
4+K8uCruivviocgUz8VL8Vp8FT/FL1ElGkSTIIk20SV6xIAYEiOCIqbEjJgT
S2JF0MSG2BI74kSciTvxIJ7Ei/gQ31K5VClVS/VSo9QudUuD0qQ0LS1LdOlQ
YkrH0ql0Ld1K99Kn9C3Xy2S5VW6Xu+V+eVAelanyuDwpz8uL8rK8LtPlbXlX
3pcP5Uv5Wn6WX+V3+VP+VqqVWqVeaVbISrfSr4wqs8q8sq5sK8fKqXKuXCr3
yqPyrHyrzWq72ql2q/3qsDqqjquT6rQ6qy6rq+q6uqluq/vqocpUj9Vb9V59
Vz9Vtvqt1WuNWrPWqrVr/dqwNq4tasvapravnWuX2rV2qz1rr9q73qp36716
vz6sU/VxfVqf1ef1RX1dp+ub+q6+rzP1Y/1UP9cf9WedrX/rv0azQTZajU6j
2xg2qMa0sWqsG7sG07g2bo1749F4Nz4Nttlp9puD5rBJNSfNaXPeXDSXzVVz
09w2d81Dk2memufmpXltvprv5o9skW2yQ/bIPkmRE3JO0uSGPJAn8k4+yCf5
IlnyS/5avdawNWpRrUlr1pq3lq1Va92iW7vWvnVoHVun1qV1bd1a99anxbY7
7W671x60h+1Je9ZetrftXfvYvrSf7Vf73f60f51Bh+qMO5POrLPoLDvrDt3Z
dLadQ4fpHDvnzqVz69w7j86z8+38ur1uvzvojrpUd9ZddNfdfffQPXdv3Xf3
02W7396oN+lNe7PeorfqrXub3ra36+17x96pd+5de7feo/fsvXrv/qA/7I/6
4/6kv+iv+ps+0z/2r/1Hn+1/+7/BeDAbzAeLwWpADzaD3WA/OAyYwXlwGVwH
98Fj8Bq8B58BOxwNqeF4OB3OhqshPdwNT8Pz8D58DX+j6WgxWo5WI3q0He1G
hxEzOo5Oo+voNrqPnqPX6DNiR9/RjxpTE2pKzakFRVNb6kBdqCv1pD7j+Xg1
Xo/p8Xa8Hx/Gx/FpfB5fxvfxY/wcv8ef8Xf8m0wns8l8spysJtvJfnKc3Cb3
yXvynS6n9HQz3U73U2Z6nJ6nl+l1eps+p6/pe8pOv7P5bDFbztYzerafMbPz
7DF7ztj5er6d7+b7OTM/zc/z6/w2v88f8/f8M2fnv8VysVqsF5vFdsEsTovr
4rV4L37LzXK/PCyZ5Wl5WV6X9+Vj+Vy+luzyu/yt1it6tVntVvvVaXVZ3Vef
FbverZn1cX1aX9a39X39XL/W7/Vn/aM39Jbe0QeaoS/0jX7SX/q3OWxOm/Pm
srltHpvn5r35bNjNd7vb7reH7XF72t62j+17d9xddtfdbffYvXbvHbv77n77
w57ZH/fn/WX/2L/27OF8uB3uh8fhdfgc2MOPOTIn5sxcmRvzYj7M73g9Po7P
4+v4OX6Pv9P5dDldT/fT4/Q5fc/38+v8Pn/O38v1crvcL8/L6/K9Pq+fK3v9
3u63x+15e98+9/f9e/89no/X4/1gH98n+3q/Pi/29Xv/Puzn+/l9f/8ALKeD
Vg==
             "], 0.02260989084833276]}, 
           {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
            DiskBox[1, 0.02260989084833276], DiskBox[2, 0.02260989084833276], 
            DiskBox[3, 0.02260989084833276], DiskBox[4, 0.02260989084833276], 
            DiskBox[5, 0.02260989084833276], DiskBox[6, 0.02260989084833276], 
            DiskBox[7, 0.02260989084833276], DiskBox[8, 0.02260989084833276], 
            DiskBox[9, 0.02260989084833276], DiskBox[10, 0.02260989084833276],
             DiskBox[11, 0.02260989084833276], 
            DiskBox[12, 0.02260989084833276], 
            DiskBox[13, 0.02260989084833276], 
            DiskBox[14, 0.02260989084833276], 
            DiskBox[15, 0.02260989084833276], 
            DiskBox[16, 0.02260989084833276], 
            DiskBox[17, 0.02260989084833276], 
            DiskBox[18, 0.02260989084833276], 
            DiskBox[19, 0.02260989084833276], 
            DiskBox[20, 0.02260989084833276], 
            DiskBox[21, 0.02260989084833276], 
            DiskBox[22, 0.02260989084833276], 
            DiskBox[23, 0.02260989084833276], 
            DiskBox[24, 0.02260989084833276], 
            DiskBox[25, 0.02260989084833276], 
            DiskBox[26, 0.02260989084833276], 
            DiskBox[27, 0.02260989084833276], 
            DiskBox[28, 0.02260989084833276], 
            DiskBox[29, 0.02260989084833276], 
            DiskBox[30, 0.02260989084833276], 
            DiskBox[31, 0.02260989084833276], 
            DiskBox[32, 0.02260989084833276], 
            DiskBox[33, 0.02260989084833276], 
            DiskBox[34, 0.02260989084833276], 
            DiskBox[35, 0.02260989084833276], 
            DiskBox[36, 0.02260989084833276], 
            DiskBox[37, 0.02260989084833276], 
            DiskBox[38, 0.02260989084833276], 
            DiskBox[39, 0.02260989084833276], 
            DiskBox[40, 0.02260989084833276], 
            DiskBox[41, 0.02260989084833276], 
            DiskBox[42, 0.02260989084833276], 
            DiskBox[43, 0.02260989084833276], 
            DiskBox[44, 0.02260989084833276], 
            DiskBox[45, 0.02260989084833276], 
            DiskBox[46, 0.02260989084833276], 
            DiskBox[47, 0.02260989084833276], 
            DiskBox[48, 0.02260989084833276], 
            DiskBox[49, 0.02260989084833276], 
            DiskBox[50, 0.02260989084833276], 
            DiskBox[51, 0.02260989084833276], 
            DiskBox[52, 0.02260989084833276], 
            DiskBox[53, 0.02260989084833276], 
            DiskBox[54, 0.02260989084833276], 
            DiskBox[55, 0.02260989084833276], 
            DiskBox[56, 0.02260989084833276], 
            DiskBox[57, 0.02260989084833276], 
            DiskBox[58, 0.02260989084833276], 
            DiskBox[59, 0.02260989084833276], 
            DiskBox[60, 0.02260989084833276], 
            DiskBox[61, 0.02260989084833276], 
            DiskBox[62, 0.02260989084833276], 
            DiskBox[63, 0.02260989084833276], 
            DiskBox[64, 0.02260989084833276], 
            DiskBox[65, 0.02260989084833276], 
            DiskBox[66, 0.02260989084833276], 
            DiskBox[67, 0.02260989084833276], 
            DiskBox[68, 0.02260989084833276], 
            DiskBox[69, 0.02260989084833276], 
            DiskBox[70, 0.02260989084833276], 
            DiskBox[71, 0.02260989084833276], 
            DiskBox[72, 0.02260989084833276], 
            DiskBox[73, 0.02260989084833276], 
            DiskBox[74, 0.02260989084833276], 
            DiskBox[75, 0.02260989084833276], 
            DiskBox[76, 0.02260989084833276], 
            DiskBox[77, 0.02260989084833276], 
            DiskBox[78, 0.02260989084833276], 
            DiskBox[79, 0.02260989084833276], 
            DiskBox[80, 0.02260989084833276], 
            DiskBox[81, 0.02260989084833276], 
            DiskBox[82, 0.02260989084833276], 
            DiskBox[83, 0.02260989084833276], 
            DiskBox[84, 0.02260989084833276], 
            DiskBox[85, 0.02260989084833276], 
            DiskBox[86, 0.02260989084833276], 
            DiskBox[87, 0.02260989084833276], 
            DiskBox[88, 0.02260989084833276], 
            DiskBox[89, 0.02260989084833276], 
            DiskBox[90, 0.02260989084833276], 
            DiskBox[91, 0.02260989084833276], 
            DiskBox[92, 0.02260989084833276], 
            DiskBox[93, 0.02260989084833276], 
            DiskBox[94, 0.02260989084833276], 
            DiskBox[95, 0.02260989084833276], 
            DiskBox[96, 0.02260989084833276], 
            DiskBox[97, 0.02260989084833276], 
            DiskBox[98, 0.02260989084833276], 
            DiskBox[99, 0.02260989084833276], 
            DiskBox[100, 0.02260989084833276], 
            DiskBox[101, 0.02260989084833276], 
            DiskBox[102, 0.02260989084833276], 
            DiskBox[103, 0.02260989084833276], 
            DiskBox[104, 0.02260989084833276], 
            DiskBox[105, 0.02260989084833276], 
            DiskBox[106, 0.02260989084833276], 
            DiskBox[107, 0.02260989084833276], 
            DiskBox[108, 0.02260989084833276], 
            DiskBox[109, 0.02260989084833276], 
            DiskBox[110, 0.02260989084833276], 
            DiskBox[111, 0.02260989084833276], 
            DiskBox[112, 0.02260989084833276], 
            DiskBox[113, 0.02260989084833276]}}]],
        MouseAppearanceTag["NetworkGraphics"]],
       AllowKernelInitialization->False]],
     DefaultBaseStyle->{
      "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
     FormatType->TraditionalForm,
     FrameTicks->None,
     ImageCache->GraphicsData["CompressedBitmap", "\<\
eJysvWmsZVmWHnQy3hxvinhDvBgzIzIyz40cInKsKbMys+ihqvOcm9U03W43
tIVpeqC6ymCr7EayJfKcRmCkBiT/QpZtIVkgY2GDZMEP/7BAyGKSLf5YtpAl
UGOMkUDuoWxV9ZBxL/ecvdf6vm/t896LKpNSvhfvDufsvYZvfWutvff55Of+
xDd+8V//uT/xyz//c/e/9u2f+2Pf+OWf/+P3v/pHv716ae25qnru9eH/+9X6
6t/Lqip+PK6qH+Tf/+H4c+ON1Y9fWf3/Z/Lvzw2vrv2A7/1auvSfHn/em/zI
6r9fWP3/Px+f3PjN1978/Gcf/Mgnv/n4nS/9rZMbt779/8f7Vy4Y3r+dvv/p
BR9JX6/Pu8W/n19f/vjP/Pzyz/3n/93yP/mv//byL/zVv7n8yT/0jeH9f/Gf
8f3PXTK9i2b3p9Ls/s1LZ3f9ojs8vmCE/8/xjTtP77/8+vB6tTa8U20M7/3e
43c/+O2rJw+Xr7zxxan3vrN746WFvnc0vPedx2+//9e2Dm/+/eObL/ygEvmT
ada/Mv48+kFn9n/cuPPwe9cffNFGmQa5Nr79+tvvLV94+Gg1nfTahz/y9eX2
tTvLL33l4wteWx9fu3r8YCmXvDZc8p8+fue9v75z7fm/d3J276J5T+nwj6f5
/tHx57WpT1w0z79zevPe392/8+TpIx7U+vj243c/HMe7mgNP6/rJzeV/9Jf+
hut0uOJrb7+/3L/56nK4yrO9t+7vXT15Ebc4R0o7w4B+a6W7v3KRq2c8+DfG
nzvnqf6vrl7/zUevv0PGd85882BOHtjY06fvpqG/9d5y7/rN5fyn/vDw1ijU
P/uX/5tRyGf3nyzvvPszy9PnXz///Xcuev/x8vjlD/W2LDEa5OHynS9+ZXl0
9vxFhlOdYzzVt9J7/9r48/A8gL7Ign73eHXrlf0WZi6Df90Hf/zwyxfO+2T2
w+P7w9dXkxztYPj75pOvL2dNt7z15r9wzvufLGftBe8//vrywUd/5GKZvzQp
81v3Hi4fPf4czPGqOe2vbeyefOPKlfXzTPKbSX6/NP68ehEY/fJolY/fjU74
+kpkN249jyE9cEkeXSLJ+x98Y3nzXGl8sqzbfvngK39kefZ4vtLKB8uz1+fL
+x99a3x9tvq/XklzfP91vP9g9f6s6asrg6yrs1Gi4/df+mD8/eDDb6bvXqCp
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
r4rAcYJhRaorXT0q3aC3oCXQFCJsjK92HuziupjNfzuGP22I4zwd7/rhR5+u
zh89WT5556ncHX4mBj9RCbyBSuB3RgTO102Dk2hwCU9Z7iW8l1I8CbR9gURg
SYBcLM/XWJycjRfOPco82XQciM9lKBIYuxPguog2x3Sy4/DP1GHejKNBWj7a
jMKc7ryNcmuvEhIsAqGKG3pHmfW0dhjpzPO5dOC40YxMJiaTlT02LprR+O1A
L5vuVzeWLuszxuJl2M19jnBJ21bhDZPq4and+udEGhabFdS2tWgf0Q3ssoZ9
R3Dm6uDDKVPNdUXmQXLBgma2gILOnJarpC9isTgjL1v2If4vx6f3/pXaBXCX
tn/nZygHBsI2meOLanqCgxhRhTBjOkdJmwn3IfwUFhda78YVDE4MDmSf6QlR
hrltXbiWdWRVXFDECeL7w4ASQ/HPparzxWzfGaliXWOc46NwgiT4+mdmRkp1
CFNtrxLqsCDKY5DR6jEXYs81l7q4JbtIz/KfvjiR0e4Lko0wXC/zqSNeVuNa
Jj6z/j17JSWNggYgDwDTIQoZFxyOtCetYnLyQFmWA2S2S3utGoQjhxThhI2G
svtekZi0sYMuhhnfqSqEgjjggUZy1XWY94rZF+u/nSt+a3bw8vj8ndXB+fub
40vq6arwVBG2W51uKjUiNarObVElGLpRj5oA8TTKHAv/mhmr3Yjg6regOKDl
C1ilpg94tKOzO3xY18PPShCFrvM/ThaLpQdOzeXQ3tiuzLGVQ0fESuVPunAl
56610Z2a6BJ8bYODl0gMwMTcSnippmCbrzLT7oAJ2ySXyVZcbm+ECJ0uNlXj
AqHZFZz8wAH5KKkWXHtI3zKvBecFH4KA6b1hKlkmQB3bA6Uq74q2ayWws/Fd
hipSLLomv+r+Px4sJHn66sPvhQ+3I5LXd9z+9dO7j5YffPT1yTtuCXMBg4fh
hujWfEsoXd1A8Tr5g7b5xt/8lc620+FEcYHI3tLq5HHi6FS6cXKpht34sLNk
M+sWJGvZTJhs+tnMd8IBIRpLQZXLAjCsWhh15xbpJbZPT+pC+Zg1JOvkgYfy
eyl8bAoqSx/7KGCw7H0DCO2LzU3EL7CXpb5OtFy1ucvDJVFilNH7NJo4iqnA
Ak+hgf0R1jJSdvpYxFUylTmn2A2RuxNePeHMu1ggT0UF8M1ScWdCbWzlBiv8
MoTDcaZT2fnqus9LA98rnWY6D7c7Pgk9EuGpfgyXYxX+N4Mngq1rW5Uuv9Lp
+rhFj98P47+biQe/qiNvtC8bQUhdr1k02zkmB153g1x14s57z2mvFiAMfRI+
O4i466mOeyLwLXSt6SKPVT0tbtTezMC2Hc/cGSYtzQ4c3LjnRU3WYRgxjD3a
NwA3ttw3AOjBvmGizLjR/WXTClfok3IXHCENb4cRBIj8L+bM6EiWoPdrknzz
AGmcb8/JNyXnIDxcbVxwO/YXhgzKs/LauIaXqXAfsgu3aknhOa+wa08sfaoO
ty+b9sbC87czw1CRR5KYgW5hhbDMmYciC1ne2mcLZcM9J9knEFC7kSid0U9E
EXNVLCBX7+hr/o4B7Manh+n4hi8p5rnfM7Z6Sywv2LZiXv2zPvIj4MzmkXbq
j11eaC51mRT/ZfM9oTMv32t/Nf7drv9NUx7YWFwIRWuRhD13ykg3f8cOewak
jp+RGmUUU8Y9M0flBt8NMY8ofzVYnskhxWrYI+qjeXwkFcqHIM8MI8Yxx/G1
eaKCGmaNILUJP47s0ChVDF9WLeJUZZXpUn3l5nrGiwh6fU/J+jzR00fN2sFf
RNqyG292X+x9ovB2M7bj0b0qsM0iiraiVlSd4DoC9CvEDXEbafmMbRjRec/Z
2sMEyLDjcg+K28cDsxVbUz0zHGyNdec9y85K04HOVTz4Suvg0GvvQ9lrOvFj
CfjQGevQuRjh3MaVb3TTOwPW31kM7ncbO3hn/b3FYHnFatRDfR7JVLAMT20G
oHDeAMXYBOe9a00gVRcXUPlExV0gmrXznSWXALfIRGLTjbK7wWRu+sdZlpXy
llGCpFKWYcLhMdBaU0X/1MGKoBZKAE9IMspen0imzaPDrBzqKZtoVmevz//X
mydPuI/uXKx2onp2XapnqmfGiG4n4OiRtiLdC9tt3OZau+mZTSBIiyoNcRN7
EtpBQK7uEIwmXgk/qNl2unICUgB+427Wl4iJvjlO0AWa4Gh3x39Q/PieX38q
0wWzQN1h/Yhl1TbzjJ1lbzrrHp9kU8p8ixzfxrx7l2muWMwtbFYlDkcm6JiF
MY72G5Et4O8WzCw0yL7C8oD73sjYI8rQOGBWoJO3BgCixGnH2EdxBO6QmvTt
g/87XG59lPUmBs3yCuGozAFkZLNDUe3gDqVCNnll4X91du/hZmfMQxr3Vbef
Pl89/sb3LcjWWoDWSAi4LsKoXhCcO4rUAwwel08y0wioHPrrUl5NYxlYv3sN
30IhThBL5BZuka/XwsuvDJcSRShu0ThrjH7p3GKzyxKzCq4ZWOAvd/29+N5T
5efhntytWqXJopg6ZIYIrnysRDXmtqvbL+ONO+UFb20MOJ8iyv4Xgr0vQp/k
xKTphFKGP0mnRIeQPMbZR+mNoAGoKingSJKfFuTaqrNJyCvYGQQg1LGRsFq/
03TRkRvHFjg0xErnPoT1n1ccpFmt+kFJoU1Vvz4/Pn97dfjgfb9bcLPnzavS
mtsr+vemglumH62KKMWL+nvRJ/w7A1tZGrl3gtCdXhWrhm25nbG3oFm0b2dm
EdBL5pXor64mEHDauZG7WiCvB+O7t28353+S59IBmjOtRleHvWywET+4d78c
I7EjclnIgly4i0ZWZ/BoNaSHRYFURwvljnBzNzb9O3168u2Cn4uEJdzk3Jcf
N9H7R/uYeIsKFJ83dYiTpoO0iCZFLx7wYaT4MMvGPXfTyc6p1gBePRtGV2tg
k7f/FTuuVn2c619/9eTs/OUHH302rn/BLBkhBEXGlsXOxK7biHzgkkVWnWo6
3zSf4IsqFvnBmysuegNFAADUz95R0DH3jr+L2+aZhr4OcSk3iWZjrv128qN2
wTaERxcRJKxI5W5okN/fp1ZD5ZREqyvrEOYSs++Yb8c9oQO7WWIyFaVPxClN
Ky6RWQUInLNb0zqeiODTWkAS1UtwU6ZUmABqG/iBbfB1TnRuqlZyAczXuqPa
l6mOYEA0u7M9j7E4AWVVrTy31PtZCEQO8WNK58pjr9h5Uh3z65v/33/Fm/oq
btwJxeKKtjQFmucQF0p2kR1puDefK4PnIKNluYKsIAzpEMbtxArvxGq55eNs
+QAXsLBIdCQXTz/lxl/MYjm3zqQ4ilPzJOqXvbJyK+HwWB4+WLeu6Exv+Pig
mV7Jm3t7OG3OREeJJyPwY6bkjOawAecC8TOPyHz3CvlseE7fMWZBYnmNxyUE
JOX10XWMp6e0afWWY4kTEHKOe27HBEgdjYciDiq8AJIR0ImAXeXPVJkISNk/
tq9UtRIbnqpa7fIWvVjWHQjN6uXpbCSoLqtOdApDbY2H2/TUZMh7FikPYybJ
dmVP1LBSz+6yVLulrSrTHSXFGcjQCJooxKcMiiWJvYsISIH8MEYRTVA4zD3a
8gO8RRrB85CZ6TyBbrQTxtaGTcuVCHQse1hIh6m6Z+cdWEy0i0rDhhscGMEk
dpGIYGVFaQhkCUPcTR+MgQ/vEm7mZKdb51RDZByC+kkyDAb6EkYIPVSwUKDh
kGr7mvVvlV/l8tPx+TvLUn76jpSfHonhbj0NUkNK9/XoBS5D26mmFzNi3Vi8
iJeoQ2BRdCS9ypxldEF56UueOkWHbThDQIrsxrGOYo8DuvUhMRMxQoyUrnCM
EdAWwhieteBzPc00E+G1hkmRzK7jQWFnrDYBINTmCoteLpLpjvbs5y6lIf4r
UtwMkXww1gKhSHSqJEKdUxuJdJcxnUlYYGAgLg7eoMEyZVZYv1OkuydGaGSm
aAka33VFI9GOxcRij3wUe8IC+L0d5PzFL+VC0+f33nj6H+3eOGCh6XWxz4lC
034qNMGN0ywXqLwk/GvdYQ7W+CugNBL1wNpBrIrAZrX4I7ineMw2A2pEh3oM
K47qCjcyfQR8eTe5LMdHF9FzrTzKB5H3Fs9FfLyxhp/b4yenOyUZjWxGs8DX
d7gW7o8ll8C/+yDJKIcJ4ea1Lchi1y2PA6aaujNzhz0HAEbGv+fEzKByhGDh
TaR3cM5EpDcHA6CWR0VhRAP3i4BuQSgm3/KUYwAROMUIfaC4HYYt3OgADrp/
lTve3qSxXn7M4re++8dXB8fnq8OHz22TxczP1Gi5knVSD4LsJcwTktLGxDgp
arQwj6qPUJBuuHyTpDdoVEI3G1Ns2+/9NizcUDFZoRBXET50iO4aOJ/QZpyz
dfTwcrLNi/maxtH4AAZBpeh5udT6Z3a6s+VkVO2RDIsV9FwgeLUuR4gHYvZW
Uc8PNiPxqRpY7aQfHW3kbl4ySnpJjsWYEXcO8tS458oY8KAjMpbfGWQ3oBBt
WsGyYp75hDJQqSOukpofSlYjiCwDu3/FRqhqp29s/n+0Eer37j968/dOzu4v
3//i1/JFSlxhXoFJ2qkJOeO9AtBODELtZr7NnwTfzGjhK2HKF0WWxkWVcZJL
OI/sjuvzkMdFW/Iwt+HnHLr7kliOrWASpJDxBvyUZPKCB3Eg+9HytYciUuFi
FtfG0T9mQzN1y0gItMz9DOMl6yraFgT05IgPX3aQXY/vjsmg1S8bGG3FDjEX
/zOykHDYAQzgcCb/zhN2doBIaCUsMzlxqEa9y+aGqgu/Vz5fT02a+/Y0j32V
DWlk01K+Lmc7wsCGu+V+s2KX1UoPrbTzGxf//fD45GzrUWRBlCKzx4A/lOTQ
12FcS+bkBI5CC0pbTE9jV/yKWC3/vaz3MYgaKVV8RReWvt6dzcxS0VocgFMB
m57bZgqEei1GxLJBH5NzS3dTq1jceFEZlZfy44fLmtlxrYpcmiwGJrn599Jv
VRfHTk0Tqy0jvwcnOMSIuJ78uXCHAAB1qpvPwOjjkqoqIb8aodOZBDWKo8Nl
CesmamO9ErK1SGQg9dU5UsR5adHX2fp4RZx60am55k7OMOkgkou/YxfSbKpU
Ux3nk0vTvDd1c8LCp8WwZGZBHY99CTm1lp3p5PzYrupe00XWEigeq1A9qR3J
nJWgV4MnBxKeUd50J1QFcNHoG9XSYxn8aZZnyvdb+xNtSzjNpCm7j3s/ATFW
LueUSFAt0uMJ4Jv/7IoSzrkSlGu+QZl26bp/RBFJpkMwrA0flypBljwRWJuk
9u5DyPhO08W/YhViJZOZVR2T5y7LBm5sDSO4ioX4mk044xyVJ+atbK6Xd0S2
PhqdNnd4rPO2T766Onnns822gS11FzXIifTtbknfvvU1e0N54Q2gAsKWmLDE
CK4zdKA8R9Ec0SN1qkmetMEsGyXPCZi5mBFrRKUjnlOzeEeiEKIAkywQjjIC
vKojvB6TMBbd70GMJOPXeADXtEK2KJpQs1GKnL75VrGuALNlJKJV4RpPIseh
PlGz7Hq5u4OyoDwcH0W3kZYD5tLQiODYwbGQn9MVjJwSYH0UMHf1ZKk0BXLl
lINy+fueN5pvq2oq6xeqWkVw29c5n7C19nZ37r758vjem/8XugmtxPJYTHQi
g7srV+64cz8U/JYlxlbauaiAyRwhTBCfGVE4nhfeTHHQ1z/Sgm0mVwNO57U2
EnhIfdboTIBglDUgxCMAu0gbusUHUY2Yz34mTbhibtYPGAg1vjOPnoIxCyKz
ooTI1W3k9wMdnBNBr63AbUetAVYXqBiLmEHUyhTX09VGQq49jaQVu3k7cHds
laxGHTR6QhGGFeey2qvsKNWRbWeWCRxGe059BvYCymdHmBT/LlMoMj7YlqD9
a0fl8CtWVp7QLm9s7fK/+8bT19Y+9ELs1hacCA7A44YDkahNEBcnvqI+Pl2L
HXyGslhVde6EcBMJdoolaxsOLgjivTQwyf6E4Wbhq67Je8Ux3krrWYezALBD
rRHVmN9yRWKecIrDw2GEwQWTXDV2SeeGziw5OyPpdvdOpBz7NCsNlC4+W271
2xuzOsMkt8KgmDPL3UkIgJWS2qW40ZOgPgrr5e8Lf3mICDQMvpGsqSI6Un06
nDmHZTO6rRKilJKurB9zRVf+O8UK35pOxa796H9/eHT8B4cn5+JvLR1b3+oX
pGU2Q4aRD/42jgR3YCo4QdZUAV6DL0sQpbWSlk5qfyWKQotahESR2wuKOBHS
OEOmClTzcb2UlIdQGaqJzLLj8DLjrSnHMd5A+3y76ih3wXKh73Xs+rAZ3vIQ
6BlmI94FZrzoISvT6UbyC/A4q4adEGIGXRw1C2wT3IuMC4NA1qgRGEaZt/rW
HV8CkCQ4SoLbuMDSOzec5GM9hh7D3tZG/zb/uM82+l+7+O+/vXPnZPshM4Tf
UUiBON0kpBxU1egSH1+TuRNbBKK3vIrajolhUOBubBYbpF3LK789icBDXA+W
QhmaxqXhKtX9+BKRBmLGRWdOY+0j0oFHgNmP/DJRfnBv5rcPh+2FrnfmVRrb
ZsVthSOnLiGt4Ug5Fe9OLLnR2y4GGuXdzc+4t75u/Gtar6UIjGZ3GZQ6yOmO
p31qjbWVuxiBE412UMfUFEZE7uX35U0HqhfiXeA64jOhigbMZWJog59MrlZX
+N6lydUd9tCGHAKEZyRQ7pxt/o8DLtuRqKVBQybYAqcSNyTBFQSQz5kRz723
l8EkdDJH5e4SyDGiVL6e8JuuYjngDX8kaqiLtkjf0XjHx+lJ1JCPc31xg8lD
5xNG6OjYC1mVtDF43MeI5XGKErgjqh104IFY1Tbui+D18zH6Jk0+Z86aRSx4
UEuWuek0ayBwF3pGO6PuwKfKGkx5luATbJipErb8n+Jyyqu+fWVeVW1xIq96
x/OqnBBkIiCTQHxmqZCYtK9HleWeCKmuJ3PiB/7wsAqoolCDqopr5XuugiVP
Hp3GoNxw2jENbkxSjclG1CV8H9FmBYLk6b2epgCWzOD2Sqxj/Z9PicPpMZzN
zzTsdHUrP043gqu8K+CeB3JgoUnFRlovWt3rhE2BzJEuKm++qa8nP49XeMZO
18Yf61k4kpcO6rV5V2Gp2iCg3nFYeZXgqLx7EdO6P76KeJ0iXR7ff/y3nz7/
JKdI3xVruyJF+p2wAbKc5PxcKHWM1zwMd1ks4tex1AB56Gek8g5c7+M4W4JT
coLY+lT28EHHx1zLphHHKJkit1lxB3cXkR7piANTQaL3LzSVgyMxQHhOmuX8
urzJWpSGkagapBIEw3FvuXci2PPKfF+X+GwcdA3xkDRCBlHEnXD0uu4Ry7a8
e07hjD4GW3Ph5GU5ukj+6bImNEB+gawXs0L9aeB+dFeEzVd2qy6We34nTzP5
747PznPK8z3a2dFVKc+Nd1tv/PCDwBWVzfhTCBSC7yjNMdiXdCC3R+ZNfpCg
OJ2eWpSvZqxfc4Kg1EnLbMEFc/LekDQfCy1Fb9M2Rz5xup4RCJzX3FDwQaME
9uhgy5wU5KB2bc8uMvRADAYTDQvGln1K1jOabc+MOfZEqO+dR9cCTdVJ7C4Y
5RCY/RAiijmw3UdJhxErmEqbZZDD/SFGcU2TNQFKrr2gaaQ6KDRzBVclktua
03xazKzZ/P/ZZTnNH1+W0+TbhbSXHGFx4OT8yEYQrblDMeyCvgaXH76uoKWy
iiVrQyCTXTSgL0yls9GgLrNrfTCntAUHzqh105XuyxYjK+WwqHG6OtKLqzSU
MT0Evmk2gx4n08mInJJLgKTSZ1+L6cdeVOKJhL/lg/dissIaNW8YfrnXz4v1
0B1WmR5HhJIYjEQy+a5QgpAl073Ay1dhX61rxSgk997z03e2H30/5x/Pfqac
ZZTuQB4ccxQFdJok2vg3pqGpQsma1KT8bXw/Vo34RxUFjkuzZSzerhmE8A2+
OY77IFxgdoysvGQY1s9clmdZEJvMfdPBiSQV6G8UTIY0/2wivebtEyZFbVxZ
hhvy+HSGwJ6AU2hxiXTOi7QXvVzgJ8rODjSTHzZxTnlnX4/oJK1d4ZxaGqKz
gmYq9dn5UQg00DaPQzylUZ71j684i6O6rvcvzUHekAbPMd3jOWQ7sdROT3ZE
OYtZ8BJMCczDX5DnB22SLQ3iDbJ3kOAkij5adwrUboRD4n4opboWcaYQJMg7
yU3VxjXhbSRJ25CQ4JCx6h6Ha0WiTdd7BQxZlco/UYpKJPIQQwuSFKBFEHQ1
mtkxwIkNdnaBU8b/RieznmcR3gE0vE5skZTGsRM5hV3LednbsfVlfI6BtNwx
cZyhXHJJ8WrAbZnkQdlA//SVE4ZqOFsaMb8aEwK0AufgFWcSQpTxVS95X1kG
QV+8OKlzgINyOAFRf4e3LQWLmsyIBT8L8fquWb6PQZaYpNSmwuxq4LUYvUPN
G9Oo0y1fxy7ZDhKAY1JuODg29Ij5suULNzLbDqnLHQQxIqKxCTzCS/HeMFGQ
9oiB/HPl629gBmBTbTgsQQa4b5EEHYjTkkGGjc/MjJQ2LslBv8/3XPw5dary
nbtv/vSSlslnYkwT+cDz3DIpLpAdBFPlnSbNPpO+KRVy+KQ2ynq4U7MEvjoi
B5+oRLrDoWGOtb2JffnMB4avcs1Eki5aDqselFEd8uNQZBNY5jKc0eEo+aGf
T6OXGZ/AaZAu1O8vGHODUcNJ1feA4qUqu7GODyP6JFwIiyAKamQriYlWhzvK
DFOUxsy5Qv69aULc0JAnwiaPiI8hndC9Lf2Of/Xo5G5O/lVzqn8cb8v+/fTe
4w9XDz/+k/UEmcsygOg1Eh9rIN5ETh2EF2keT9mn4NRoGoQ+C95vgvZHzqJB
JIBdXV5Qv9C76DoW3YyFMR2EWTEtH8qDz2styT+WiWeQlFOoUI+vYQZ+gGMC
V9CvOlOnaEoOVKUR61qZh55SJojgJaUIdV3S6THBbnLiDgOqgz0TWUngy0cm
eNFsVBBID3dwawmxFPxS+Jbno67aO/68WNEHm///wlRyb/3vv/ja3q3fv/fm
BxMJvu+MIY7Wo85EfsaMGokBebcmFqpMeHlzWKlX7ef8rt6QgIAq9o6SrvvG
tnGNFQ/jbee6zu4KYtwIfd01Qc0GrLtcFWCYaaES1hzgEvgJ8uzbhhgwksTk
9q8sauFkcfTVnNvN3EpiOTyGJW+bcMTwRNFrMcLMrs/HF7WGHlW9z5V4gGiK
X0xsbuTWsV6eKinf8yC23X5674f8Q26vXP/5x2avcr+da8u807tcxhbVCOXe
jyVVbZLvN3EpSGprifBJQG2QBkc31pEW2ncFQ+M94FWjrGQbNG/Ts0g3NYEb
o78jPg8OI8fHgarkxzBkqqrjKepudEWf8qoozrcUS+9fhV9zF0APIxF9K4Ob
1YR6U/rBzP9DyQl+zJdFxhYqI7MFAspL+dzq75qolLVhFwhJ2bNDGsjWpPWf
J+98Y1uKrjqgL16aotsfpeg0yPE5uDWQ8pMoKAcuse0ZACrhaGXyQZkp1V6l
GT/PSYGwaeY4EoMQxkAoTsajhkMHNTM3lxa+DAdXKEBHRCBox7IAbV9CTgkZ
RKdhwWINoTnQoMuiVcwnn+oXzn0Mi1JBL0DgooisQx/AoDtcaJT1vTxOQD1s
SAAVbRzhqzjHcYUarJMxJX3wPF/KtDq+/3hbTk4t5fKzLWtOTh3KQx/9KGFC
TCRHB4+fso+MRFWrvP6aGN8oKM8Ir4sY5iUEDGhPBj2Zp+895Ozt/mUQiXiG
T31WTwZvWj9PBV8StaGChya6lopHTbQDSd124KEaoDCGIxYlNjCgKtQweFq2
RHfXkhBtHoN7n9E6yJEw1etbvAYm1nR2B7ySkX7TlY1FW/8uV5UMO0JHBSjW
/96SC/i92yfnf+3O8d0comyOf30hJjKRabvpmbbjtz8rCXFejtIGgPRBdMvM
9sRyqk8OukZmnXEpVLGdOnM+SSdfOM94Ez8TDh7G4UdvdPJpv8so8wZquP25
CFWIi8tMa5vYWhdBFszciHNrpxc2rthUdIXWuRiMoEZ07QCM8P09Wx0hyb3D
eqZykkvABgww0xl5P8LLTq/T6M1UJOkC5wHat6F6tpE9fBJo/G6cLxNPng7h
r6+N4UcXIfy/niKNTTLsCzSC7Ymx0wdvrU4fNpf27cyDF7cs5vmozT487RJR
NmlKpSJO9nGAuOiOexSvJon+83Fxmrd3oDWxUu1Qd5iO2H9yQTmzlDOT7tHs
ItAJMCwmwxSRR6tq4XWlr2WbLaNYOIPN8DiZuTVCE/XaOi+PqIOBVmDoBjQX
Ik0xsxXU0Bgcz8lkW2ghCVFYZGql8GPaQ7aee5eogR6jywJ2nahF3Di/YMuZ
ax+XPz4qAflUWuu/uX188j/s3zq44vw1w5BTXUshtL2uoxD8AAVooc4kAgHH
khHnkQhMUlchryLaO4E8NrgayDR5AomyOgNan2bfEorCfDRKCQJAFifUF9/l
u5XxIQoScwQj4TkN+VwQJbSolqsE54tEmoKMuP6LvXKIvaOduZo2gurGyX20
8BtsrlUnHGw/9VihS/q5IX7v0mgiyq3D9NPx1yH3Bac5eXdryP0l2sj1nK36
tXEIfl1vuyC9aeOu5nZ9wrlFzJGYiynMOU1iMsXhGGxYpk3HqRIzwYucM6zP
vB9lHn11hvS7kS2IeTXpPSAGeQyVIsX5WRrxDNpf7cnT3oABToSwHvL2PLeL
uA/w2Bsha5iLNdw5oJQf78uTBICnGOeeCKABh+l9Z6B7Fe35ouEK8QOj2DRV
wu0x8nFmdlcP4Ia/WP/9/vPRWfSr+4/f3xxSvSW+Nrv4yqUB9v3c9JKHB+eg
Kh60D2ZAymyZdR5z411mqDpSl9twJrbn24PzNq1iYhBqaqGPTSSwQEJmHpJM
wbkwvNi9phQ/uwyKhgjBirjeNLAZkce0GgY0ciSK38BmQcveCPXNYnCyRTib
3s6E4MiN6lDXhAnIpqLRuWdsQQI7tPBxKs/s+rO51d48TNmlvmWnzE/vPnrn
t2+fPJoMkD8RFZ8IkG95gHzy1qcRID+1AJlQaNLS47RMNb2YFuTc/eTme2yP
1xR3FU3T6cV+QVvs20zDgzVKuFKZTZH0bUd/UvScFhP47PrQ6mghqzpjR2qp
K6uffiMhXNgDIz0pG2bYIEpmLsnAwEl39OvEGToOQTPPBtM1mQaT8i3S0aFt
7IwKZyROjcFZEKsYGU/rFf+arTCyKns+pktC4N95/vFnkyHwl6nmJ9tC4OXt
00eb3WGTIbCSl7g31/McVaJPlNcsNEM6VzmE9KF+OR5m8BY0E1qhf4/tkzwZ
0NaA9JP+WmoGLVeki3NjDPcUyXVMbnnVUyAvTp5HMh5WUVHkBiLT5GXCqv0Y
uZb/mcLwEGo1JOCKixRG4/gTRoJ2rK6mtJpW7kih/+HsUn9LldJrG6NSpLj4
71oFwcyHtsS2Xyt/fHXz//emYtu/cnD79g+PT+9esW9Esx6wv4DWA0whGTe/
EhYdOCl6z+QZ+Inn58xqqDGCBVRSg9hUZ+OhgAAqsCYyK0duj5SHmsVpeUYH
FMo39GAUEpzGz5o27vIJkhfBac7aD8xxSorQSdEo6BMEgLTnnrWugWI7YVGm
swsZgV5cDGvpzLjn6LBRbmO8rY2L/VALrhwCteDJM2M+pYa/SmR6pMVhicxA
L6dYt6k5+lYQzyeg6mHqAVp1x+i+PlTo+UCo8QyNIVCi0VbmyYV8wIxTLjgh
8pVRjBaKNPM7znAovSuchHndOp5QDAWgtdP/RuYD2uGtDhkrI0GSukuwYMIw
xOKiPqegpAa/+XtcGO1RKp5dn3d9bBthM/Uzx1Ci6XNzX6GKazr+jUujzP3N
424/fFE3bES/qniwzbb5duDm+3ZIa1nRoJHCRdVgrXv0ANADX1bpbeioNQBV
3JLslDaW0dX+ID0F2uA8SL5u5SfQjllkLNTJKjmGz16/+S5/BJskJUiqSwbm
OiSfnemkYwUKB0DAAHVu65pxF73lRI5FNsjrAlkSpLVp9E5ezkVV+NkcXG6p
tP7BndOHf+P47OFUIPmZKPFEHHm8edrDN99dnT54e0Su79rV9YuYUZOXsptK
ieg9XYh5EEi0DmnlY04+RsAUN0jpongWbzeGVgRX5BtVHrbvNAllkDeoo34C
ZCEfH1MqWpq6tQlPDgQki2PLQ32vxdxsRrBMSZNukHY0icBdu6YHbFNvOh4A
FTGl0mmkXYvMj9TD8NhQCDYHMni8yfqyCPHFJRHi16nAl0eIf+i7f/fnp/ce
bu/cjDjC5oosKJMHnlIj6buOaaWperqfB6D3dtRPTWulHn4ljus/dwKizcv1
0dnm94SzbwpZnkXEXVQxdxiNt2pFsnAe4SObR0ahbwAtqhutnfbUtHRCQM90
5joJmYeAmfSJhQbSMsoO6dUpxGUptDQisWY6MrepkXAQ5c1nuBPTHHvqLV79
wrd/2cO9ny9/fHPz/zemwr2/fuPm/u/NP/goDvC4Pt7WHA6yxjGodjFHEPGK
YacZ2c2RuxRntQg6JQ30WMGGHU2grlXqu2Y9/tU+quJ62mhje9rOXPaTxN+9
5Tj8zx4SuOQHipHypN5sZtsddMO2Z8hjX5cPRKaI3PLmVNiXeYrXjRNYWvlS
pzbAuINQuXUmczifKJqsEe7w/P2tIdsvUEuv5ZDt3670tij2Y9RPiIRjjVLM
UCOcy+Kl7/H3ElnVWL8eaeXVAURYTUSzzJEytEmxxgx379zUd7ahgACaWRxf
Aa8nlDd+LYrVrzy8PpVf8Y0kCEqsw7iT0Vf3/Cik7ddscWQ9IE5XhqHWHOqq
ycEpAMI73YMGlkTsW6T3+HKiugm7rtjQbnr6hy9lrDfkUL6M0m9+/VfKqPdX
CiRjB9IEU8wH30muplwdEAdtOwjPIqGCimpj1c8CAkcIE5KDS6sRyISxtklt
FR9dZeO90Y+mBH2OCs8QbCA1QrHYEaXemxg/PQU11tJu3GSccIMaH4bK7iiU
OH0W3paKzZSOJtH8GC4iejzGZHNzUdxPnn/pm3/ptd0bUzvoNtW3b1EHH2wr
S/zvZ6+/tzp771ujDEPcFKDgMorKqxuyvs9GTDhAT+LDlrEKz5K3nGY6mwfA
bLHnAL/HRKGZRBs3UMFFl7+Xsd5XEBWAF0DHn1AiiY3A2rjUkYSlpQxmXZfs
3whOk0ylzDYff+uA30YPhKtRhD7ZYYjzEueRjThOUSpTlJLBdSsZZI+8iX7+
UFHEP7L5/8n2uPW/+4uf/+bZvTe2lRFmkUDFkSZ3Ysw4g0jTqkL8XQ5eYRun
9r1zUorlEQZGz6MT9YjEHZaBZa6l0LUmzrSUOGVMMJ0MQvMmK3qWhsB+Olww
ZDqd3KlEGcIaZZcaD1QyfELnWxjELNDbhT/TZDEMyHX+AF5mcN/8mGn9Z1f2
m327aNvfVSKYKYXktq8cwVgCdLNx/2m5Xn5HADviPw9zRazioyklYeyrprMT
nK6rBMnlfO8fmx4EbsoQ4vonummNVUSdTHcUfHt3+4ZJWkgKemH/hSpWRtl0
rFCg4hPQGxiEdFhUcWTEQjclzNlLH7IPrAfwBsakCi0gQJ1dxOqcT5y//CoN
XVXxvndpqv365nH7t8+mfGyYjAcIsWtHGFKYjzF0xhfjvq+J2SJqY1OHDwAZ
TqsSDlmtyniPQ2nzQa5kejmIUqCbCTYGLJQR7AVdUIQBY3LYbuVEjfC4KIUS
ZyeAzSpXPCXPgww3R10J98KmoG3Z6yl8xIe6JQv+f57df/O3Du8cTxG674h+
TcQU+5unvf+Fr6w+/Oir2yrxZs1Nq5PQAVfZ7CtLYOCnoe9m7puWZCs6gikx
QBQ86kIz4DO7QATCYbAry/eW8OQMmpYwT4x+yL5yZBLVd8fZHiAQXR93OLRD
CJJXVSM9hd254Xrr5OKuVx/oohZ+OkzQI9KB65K+u97Aph5yneS7JEX9ty7b
x/NdatfNbdHC5/cfvLH6wb/x79bHnqWieLipEdAmmWvHlunC4OSLxCseFym/
qk2WWy5LtGsoFgpQk6OHMrh5B8jSkIT5mSivxFrNcNsI3ZBrawCRxEAArijn
6ZdpSgDho+THFUGFwWcbc33u2JJdtas8/QAWXb55WXru1tnbl/UJdeWPdvP/
16dI/v98eOfo87ebD2re+bqn54LgefG5wvuumMJc+j60ZWpuqbTXEbgAvol0
iZDQOTGfyZQuVVWolmWGaxUmsqS+AcpDB7fXmWdQEykjYDn+HqyIve7e7U2O
a45/4emolF52jLgW17yRnMZU5YQjA+KFKqAb7P7WpNndR++unrz34WWkfUEl
GrXiDGNf92D99Z9+8NGnq8MHH0zq6r33v40lU1IkiKOEm8vr4WYbd1cEySGn
JEHzgDm4W/aY0qYArbQnO4cL6BDWFasYlbTrirdki7kXBX62p6Hhl76bzrRa
dlgE5YroOWtVHCpa61NmKvvhtyaKU6Pj4Tcncvw/zz/+7H+6fnN/GwGvOvTL
m//fuhP1N28fnf7u2YVGbt+NZxsiYjOwp4rLEu9WxYdJqU/XP90CERTvmfid
p/TyUacmaetwecRshxJlakB00/XSkpuqXEom+PW5jaZpWSqr83V+CC4suWel
7eXjZ0yQjQxDcbn8+/zFJc7oFM7oxtoZ/QeXpJbW7PmPFu34Y4XfXJaE+vdn
o6a/W7odre1jA1zNEVh/q9vUxig8a+CQMHUlxMBsUcQvI1Yw8532/rONdLxG
TXWr6HW9OgI6xMpttaE1qOnCEcuo6ML+3ttuMYuVNdXdm8F4jkcDvxpQsR0O
RyBtlLhsM3lF/3GD/mMqy/NLZcH/+LRLeb/+fb34lZCUTrh1Auj+xJEp1kjk
wUGc2lfl5VlB0jC97XbupN5Q2UsOthLS+aKNC4bieuyx9v1q2yxyl44esTKR
1XEikUglUSNdHUGP6ck9JbSotoO3HYueanxQfvbYN5h6Dm7z+3FIs/ENP33+
8dd/d//2yTbf8CeKMvypS2Pn2+un/s4HX/jq3z568pVLtdCacFIOy/ZBU46C
wIw5BCCHsALeSuKWM1g624HF7jO4vgoQGRVb0CkTkec1c9Uh6qIsu6sJwth6
X3f4cvh313YJNCoeveZLXr3DZRC+rn3WCyteEcb/Hi7krW1Ofr30awv/nWcC
5xquBgPRc1pzu4ZQbcU9WzzR+AR9UaES6ujcS0PE14KAXSvg60f8OtE3lCis
JJi7IYDZ4rjiUaH/HR/IqKM6pWiij6yXz8tnAqT8WVvSXJvFH7fnX4npf7Ks
/t+73Yn/6TG23yyp14vwdUuJU+F4U0qK/L10OIAQ85Zs2EEgP01EVh2xQjIa
HHUnhEwVDB0ARVlw7ho9uGQMcDx9O2C5/ChSJREWZNT69o0wmLrHYpKybyjT
8vkn3/zf7rz5pd8+ffje1rz5318W9e+LzNMoOVX/njD7vfUb/+Cdp19YrU+W
2Y7XuMSURzILhMKK/N9Q/QVMYNHL0iBoq9Z3T4Eed/hJCoKmx4wZfbuHlggA
b4kTVgvFa8iy7LBkJk2oHp79KH+f2ta+Fud+SQGZXVkOaJstbn558b9/cPP/
+9tA+4f7+we/8/TDj0OXbgtel8TUliaFWDjLSgjDiEBa6inFcUV9INB/JywW
2eAULlWA3SVkI1kgdr+Xvu0Owr5/Klqx0Vo4qBqZbtuSTa48w0Fknmy5BFxn
/0D53T+0+f/J3s/1v//yjE12d5ab7SOPXlw6GrPBCfurtsIL7Xvo+gAb7G0f
Uf0ODmsSGxocwofMWGFb3mXE+zjHjLTkNXbqsjDWkRDQweTyxOlaPy+hrz9+
/vFnv31j//Y2jPxHysr8w2VlphaP8LhTz2esa/5f7u0f//jZi6/gxcduVOuG
y2mD+o5LKx/4UjYHofWaHMOzh8gqcEU7oqQds8Osud6IOLetsLtVAZyTlWW5
CyCMUVzGN9d30WzT0zuvfxHgdiUZ/UfLsvzK1bi2XsjfEMM58mLwtiTU1N0f
VZ/s/P3wyBotVT0flVZb45jd+lZ76V+XELDGYU9Dyd+skY9Z2qRH7ax5clrK
6w3wT198Fbq4t/7d58+/9I2/cfP4jd9/9uLLPwsh/NNlBf6xsgLbnNDYQDb3
Iv/++y8++fzegzfC4XwSvSBvf3olql3mJu2o+gAKHvwYAcbU6hkTuRxMyrOn
Tna139+bvGVzde/Bm6tPf+G7lvFYK/i/d4XarvHnHw8ONnHiuFG0bQbwN4+O
z37y4pPP6pt3X14M+PObJ491kB+E7N/aLvvTd39+K27dvwQB7l4A8bY80/oz
Dz/6E1t/f+cNosTO8t1nL37SfPBRrsSb3m7Tyn+iSO6f2h7Q/Pkx9921N/yH
girloqz907dUrjXo/dI3VwfHDy6d14Mvbp/3yTtf18fu+XIdnD9Lvs3N+ndv
3X3v86cX7icGf7RJtrz39PkPD4+Ot8YGl5j9P1l+9U9v/v9o6hNXgfGvT8PB
WqL/xWt7Nz7/9Fvfte0xa4menJ3nuV3ENz+/PLj/NM171363WYUolq550u9e
O7i7DM05ehXz+xe2aE9lc5urNWYn2/TsZxfHjqHjTx+/Pec1BL/52s61nwaG
7K5/9p+/tnf9/372/JMJ9vEXxrp79KrWcdny/7PlV//c5v/3JuHotc3vjv9O
ZfLD45OzHz159ylGvW1GD+x3/+oVcv7lVwDby2Y9+xfL735w5bSby6b9Z/5/
GN5VC7bt979aPvIvb/7/7mV+5P/LG6oEpqWzs+V3v1ae/W/+HX79z5Wvr9b/
9/zV/z77uf8XGvCOAQ==\
\>"]]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"Paley\"\>", ",", "121"}], "}"}], "\[Rule]", 
    GraphicsBox[
     NamespaceBox["NetworkGraphics",
      DynamicModuleBox[{Typeset`graph = HoldComplete[
        Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 
         19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 
         36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 
         53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 
         70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 
         87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 
         103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116,
          117, 118, 119, 120, 121}, {Null, 
          SparseArray[Automatic, {121, 121}, 0, {1, {CompressedData["
1:eJwlzyFMAgEAheEnnnDqKaCHnnoBNwKBQCAQDAYCweAcwUBwzmBwajAwRyAQ
DAQCgUAgEAgEAoFAIBgIBAKBQCAQCAQCgUDw33zbl176r58/Ht53JH3rfzfI
oYMVYpyvaGAG1yM9ooIRrF0pjSL62CJpSF9oY4nonvSCOqZwvFIGZQxh+qQU
Cuhhg4QpfaKFBSL70hNqmMA+kO5RwgDGoXSLPLpYI25Jb2hijvCRlEUVYwSO
pTv84Bfy048cOlghFqAfDczgBulHBSNYJ/SjiD62SJ7SjzaWiNr0o44pnBD9
KGMI84x+FNDDBolz+tHCAhGHftQwgX1BP0oYwLikH3l0sUb8in40MUfYpR9/
txpEoA==
             "], CompressedData["
1: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
Ov/HYR49v7h17Or75z9J+8Ro
             "]}, Pattern}]}, {VertexCoordinates -> CompressedData["
1:eJxVVXlMFGcUpx6FemxRxCrWCKtUhFgDmCpSfGBkRYpgPbgUgggtSUXEKEpR
RJE7HoBYg4AiFgUpR4DWKvIoFkRF5RBwFUTOXfYaYjmkrlhI3vujk0wmk2++
b977Xc/EP2Rb4BQdHZ3wiXvyuSDGIE6cmg8Ot6fMGB4SYLPT9WBtwh3wK4lN
am8WIEAWvC9smRK/cNqqXfDPG9x/fV9y2SI1OC9rfGx28SWsWR14Y8lzKea5
WOo6bFJDxFjmV9avBXRILwlaZ/sHNszeIh3QbYKi8tE88zIN+ho0GUW7vsbc
Y3r5klUqzN8o3fVoTIDIJNeL3kIOem73mhfWqIHkAHfhgG0jhGQpzl/u6oMX
kVa1cV4ytMBZtfEb+3BwbM/pQbkM6Dzg81xFVw6J/2qFvpneTlVyNZz+cUPq
3ylK/NJs0HW93RsQ/WDg5znehc6+mXvtwxS4WCfUo0j8AAa3zpMbhAvYsVsb
7KYvg9L0wuV3vu5Hz3VLskzrBLCQlsyJb7vHeADj0e+12aIyWwYdusblCal9
kNbaOTfqYw+01HvPcHovB6X2VSBqBBg1LHfsSS8GwhsZ73OhNTXf2wjgE/vx
0NTp9aC3SzXiFfgIfp2b1aB0E/gd+b3YtiO820YBkYv8K/p3diPtR96vPOhs
71Kthqqym24H49q4f+D+zXdeU60MFDAzenKhDjW/uLnP8niFGUZB62UaFUbk
uF+q9OjBQvP3hXqRA3hT+1N438/9sLQ9YMfC2n4gPpH5PDztQOnREgU46su6
puV2sR6A9ZB88tu7x5SlkDc3MGSFTECroqUiaZUKh3LFhrXz2/l/wP+z8fNI
vVHQDRXnRZ/v0Q7AaMmpzthLb/Dp9sUHrXcr0UZU4a1x6UKJePWpM0oFRE0S
oyeAXfm/inz7Z9g6/nREPlsDfn0N4ldjLWhV0H2mPqcXN8ivfrf2kBxHpw9V
ZyYJODzn3f1nJ2qA+EbmO8j0t3ex1Z3gILGPWVqnBNIjsh6pX+R+E+VtrW4f
BSg8njt1PC0RTMXapKuWLdgC8QF1lhrMzj5xKilNA94ShV1acxNGNd89Cvsb
sHx/9MsQtQaoXuR66Xvk7/P3pjVZ2w1AbmOv/6yCHtRZO6L60+UFjC8/MXo2
XY0PwyqvGK2SQ+bVLaIrQ72MDzA+VA9wPTeKtzk4trSjr7OP1dlkFRir5t36
dI8KpPUmeTEpHawPYH2Q3pD1Rn5B9kuZzdPg6nsD6G7W9CFjSg8Qf8j8Pbis
nZ9ZIODJoz7ot6aa8QfG/5slbbGJoWrsLnpoNKwvRd8RpeuRrGaQzGz4Pf2w
hvcD7yc9IeuJ+kfun/BCxov0i6xf8jOyn196DblOb7+PO4OMLz7JEEDnf9cg
kL+R/U35A5w/5HdkvxO+wPhu8jYP2XRbDgsfJYQZbuvlPEDOA/IDsB+ID2Q+
KM+Q84z0DKznsxdWpoTlPMGG4zalPiYCujWqDEPT0lG/MGqD3QcBKc+R85z0
g6wfwhsZb9InsD4pf5Hzl/ICOC/If8j+I/8g++eayKL9bXIVRsRLjujfncid
t3KJ5w4NjF7IMIgIeg40T5DnCa0jr1M/wP3oDs6fSF4l3Hq84hPLzzqRzgc+
n/gE5pP0Bawvmk/A84n4QeaH8ATGk/IUOU9J78B6p3wCzieaL8DzhfIBOR+o
fuT6af4hz7//AFS4IZo=
           "]}]]}, 
       TagBox[GraphicsGroupBox[GraphicsComplexBox[CompressedData["
1:eJxVVXlMFGcUpx6FemxRxCrWCKtUhFgDmCpSfGBkRYpgPbgUgggtSUXEKEpR
RJE7HoBYg4AiFgUpR4DWKvIoFkRF5RBwFUTOXfYaYjmkrlhI3vujk0wmk2++
b977Xc/EP2Rb4BQdHZ3wiXvyuSDGIE6cmg8Ot6fMGB4SYLPT9WBtwh3wK4lN
am8WIEAWvC9smRK/cNqqXfDPG9x/fV9y2SI1OC9rfGx28SWsWR14Y8lzKea5
WOo6bFJDxFjmV9avBXRILwlaZ/sHNszeIh3QbYKi8tE88zIN+ho0GUW7vsbc
Y3r5klUqzN8o3fVoTIDIJNeL3kIOem73mhfWqIHkAHfhgG0jhGQpzl/u6oMX
kVa1cV4ytMBZtfEb+3BwbM/pQbkM6Dzg81xFVw6J/2qFvpneTlVyNZz+cUPq
3ylK/NJs0HW93RsQ/WDg5znehc6+mXvtwxS4WCfUo0j8AAa3zpMbhAvYsVsb
7KYvg9L0wuV3vu5Hz3VLskzrBLCQlsyJb7vHeADj0e+12aIyWwYdusblCal9
kNbaOTfqYw+01HvPcHovB6X2VSBqBBg1LHfsSS8GwhsZ73OhNTXf2wjgE/vx
0NTp9aC3SzXiFfgIfp2b1aB0E/gd+b3YtiO820YBkYv8K/p3diPtR96vPOhs
71Kthqqym24H49q4f+D+zXdeU60MFDAzenKhDjW/uLnP8niFGUZB62UaFUbk
uF+q9OjBQvP3hXqRA3hT+1N438/9sLQ9YMfC2n4gPpH5PDztQOnREgU46su6
puV2sR6A9ZB88tu7x5SlkDc3MGSFTECroqUiaZUKh3LFhrXz2/l/wP+z8fNI
vVHQDRXnRZ/v0Q7AaMmpzthLb/Dp9sUHrXcr0UZU4a1x6UKJePWpM0oFRE0S
oyeAXfm/inz7Z9g6/nREPlsDfn0N4ldjLWhV0H2mPqcXN8ivfrf2kBxHpw9V
ZyYJODzn3f1nJ2qA+EbmO8j0t3ex1Z3gILGPWVqnBNIjsh6pX+R+E+VtrW4f
BSg8njt1PC0RTMXapKuWLdgC8QF1lhrMzj5xKilNA94ShV1acxNGNd89Cvsb
sHx/9MsQtQaoXuR66Xvk7/P3pjVZ2w1AbmOv/6yCHtRZO6L60+UFjC8/MXo2
XY0PwyqvGK2SQ+bVLaIrQ72MDzA+VA9wPTeKtzk4trSjr7OP1dlkFRir5t36
dI8KpPUmeTEpHawPYH2Q3pD1Rn5B9kuZzdPg6nsD6G7W9CFjSg8Qf8j8Pbis
nZ9ZIODJoz7ot6aa8QfG/5slbbGJoWrsLnpoNKwvRd8RpeuRrGaQzGz4Pf2w
hvcD7yc9IeuJ+kfun/BCxov0i6xf8jOyn196DblOb7+PO4OMLz7JEEDnf9cg
kL+R/U35A5w/5HdkvxO+wPhu8jYP2XRbDgsfJYQZbuvlPEDOA/IDsB+ID2Q+
KM+Q84z0DKznsxdWpoTlPMGG4zalPiYCujWqDEPT0lG/MGqD3QcBKc+R85z0
g6wfwhsZb9InsD4pf5Hzl/ICOC/If8j+I/8g++eayKL9bXIVRsRLjujfncid
t3KJ5w4NjF7IMIgIeg40T5DnCa0jr1M/wP3oDs6fSF4l3Hq84hPLzzqRzgc+
n/gE5pP0Bawvmk/A84n4QeaH8ATGk/IUOU9J78B6p3wCzieaL8DzhfIBOR+o
fuT6af4hz7//AFS4IZo=
          "], {
           {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
            ArrowBox[CompressedData["
1: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
q+CCXA1XzzVyTVw718F1cr3cADfOTXEz3Cw3x81zC9wit8Qtc2tcmNvidrg9
7oA75c64cy7CXXF33D33wD1xz1yUe+XeuU/uiyfkyXhynooH8jQ8HU/PM/Is
PCvPxoN4dp6b5+F5eX5egBfihXkRXpQX48V5SV6Kl+FVeTVeg9fkwbwOr8cb
8Ea8MW/Cm/IQ3oq34W15O96Jh/LuvCfvw/vyfnwBX8gX8yV8KV/GV/JVfA1f
xzfyzXwL38l38d18Pz/ET/Iz/Bw/zy/wi/wSv8yv8Kv8Br/N7/B7/AF/xJ/z
F3yEv+Jv+Af+kX/iX/go/8a/85/8N/8jEAsUAqVALdAIdAKDwCgwC2wCSGAX
OAROgVfgE/gFQUFIEBFEBTFBXJAQJAVpQUaQE9QFDQEsaAnagp5gIBgJJoKp
YCaYC1aCjWAn2AsOgovgJngK3oKfUCQUC6VCmVAuVAhBoVqoExqEZqFVaBO6
hR6hVxgURoRpYU5YEBaFJWFZWBFWhTVhXQgLu8KecCAcCSdCRLgUroQb4U54
Ep6FF+FVeBM+hE/hW/gV/kRSkUoEirQincggMonMIqvILnKInCKXyC3yiwKi
oCgsiohiorgoIUqKUqK0KCvKiQqipggWtUUdUVc0EI1EE9FMNBctRIhoI9qJ
DqKj6CS6ih6it+grloilYrlYIVaKVWKNWCs2iE1iqxgS28VesU/sF4fFMXFW
XBCXxGVxRVwV18R1cUPcFLfFffFAPBJPxDPxSrwWb8Q78UF8EaPiq/gufohf
4rf4K5FL1BKNRC8xSEwSi8QqgSROiUvilngkXklQEpKEJVFJTJKQJCUpSVqS
kWQleUlBUpK0JG1JV9KT9CUjyUQykywkiGQpWUl2koPkJDlLLpK75CX5SmVS
uVQpVUlBqVqqk+qlJqlFCkkdUqfULw1Ig9KoNCHNS0vSirQqrUnr0oa0KYWl
LWlXOpSOpBPpTLqQbqRb6U56kJ6kV+lNepc+pS/pR/qVKWVamU5mlJlkFplN
BskcMrfMI/PKfDK/LCyLyKKyuCwhS8nSsowsK8vJ8rKirCSryDqyrqwvG8iG
solsJlvIlrKVbC3byA6yk+wiQ2VX2VP2kSvkSjkoV8s1cq3cIDfKLXKb3CF3
yd3yoDwkD8vj8pS8KK/Ia/K6vCFvymF5S96Wd+R9+Vg+kc/kC/lSvpPv5Qf5
SX6R3+UP+VP+ln/kPwWo0CsMCrPCorAp7AqHwqXwKnwKvyKgCCqiipgirkgq
UoqMIqvIKfKKgqKoKCsqipqip+grhoqRYqyYKRaKpWKt2Ci2ip3ipLgoroqb
4q54K35KlRJUapRapU6pV5qUZqVNaVe6lB6lVxlWRpRRZVKZUZaVNWVD2VTC
ypayrewou8qecqicKmfKhXKpXCsPyqPypLwor8qn8qV8K7/Kn0qjMqpMKqvK
prKrnCqXyqPyqwKqoCqkCqviqoQqqUqrMqqcKq8qqIqqkqqsqqpqqoZqoBqq
xqqJaqpaqJaqtWqr2qn2qoPqorqq7qqH6qn6gmpQA+pAPWgAjaAFtIJ20Al6
QB/oB6NgDIyDaTAHVsEGCIMtsA12wC7YA/vgAByDc3ABLsE1uAVP4Bm8gFfw
Dr7BD/hV69RmtUUNqe1qp9qt9qh96qA6pA6rI+qoOqlOqdPqrDqnLqiL6pK6
rK6oq+q6uqGG1SP1WD1Vz9Rz9VK9Vm/Ve/VBfVSf1Ff1Xf1Uv9RvjVaj0xg0
Ro1JY9bYNJDGqXFrfJqAJqiJaxKapCarKWjqGljT1nQ0XU1P09cMNEPNSDPV
IJqlZq3ZavaaiwbVXDV3zVPz1fy0Bq1Va9M6tE6tW+vV+rQBbVgb0Ua1MW1c
m9ZmtFltXlvQlrRlbUVb1da0dW1TC2vb2ol2qp1rF1pEu9ZutXvtUXvSnrUX
7V371L61H+1Xp9cZdCadWWfRWXV2nUPn1nl1AV1IF9YldSldWpfXlXRNXVvX
1fV0fd1AN9SNdGPdRDfXrXRr3Va31x11V91Nd9c9dW+9SQ/p7XqX3q336v36
gD6kj+pj+rg+oU/qs/qcPq8v6kv6ir6qr+nr+oa+qW/p2/qufqaf6xH9Ur/S
b/V7/VF/1l/0qP6qf+rf+q/+ZzAaTAaLwWqwGSCD0+AyeA1+Q8gQMUQNaUPG
kDUUDRVDy9A19A0Dw9AwMowNE8PUMDMgho1ha9gbjoaz4W54GJ6Gt+FrtBgd
RqfRY/Qa/cagMWSMGOPGhDFpTBnTxryxYCway8aKsWasGxvGphE2towdY9fY
Ny6MiHFlXBs3xr3xaDwbUePVeDPejW/j12Q2WUw2E2Symxwmt8lj8puCpogp
ZoqbsqacKW8qm2qmjqlvGppGprFpYpqaZqa5aWFamXamveloOptQ09P0Mr1N
X7PN7DK7zT6z3xw0h80Rc8ycNKfMaXPGnDUXzSVz2Vw118wNc9MMm1vmtrlj
7pn75qF5aV6ZN+ateWc+ms9m1Hwz380P89P8tVgtNovd4rA4LS6L1+KzBC1h
S8ySsCQteUvBUrRULQ1LzzK0jC0Ty9Qys8wtCwtiWVo2loPlaDlbUMvN8rZ8
LF+r3eqxeq0Ba9AatkatMWvCmrZmrFlrzpq3lq0Va9VatzassLVlbVs71q61
Zx1Yh9axdW3dWHfWvfVgPVtR6836sD6tL+vbBtnsNqfNZXPbPDa/LWAL26K2
hC1lS9uKtpKtbKvbYNvANrZNbTPb3LawIbalbWVb23a2k+1sQ20328P2tf0g
J+SD/FAICkNRKA4loBSUhXJQHipARagK1aA61IRgqA11oC7Ug/rQABpBY2gK
baEddICO0AlCoRv0gF7QG/pAX7vD7rS77R671+6zB+0he9Qet6fsGXvWXrZX
7FV70962j+xT+9y+sCP2pX1lX9s39q39YL/YUfvN/rC/HG5HwBF0RBxRR9yR
dKQcGUfeUXAUHSVH2VF3NBxNR8vRdnQdPUffMXAMHSPHxDF1zB17x8Fxcpwd
F8fN8XC8HB/H1/Fzupxup9fpc/qdAWfYGXHGnUlnxplz5p1VZ81Zd7acXefE
OXcizqVz5Vw7N86tc+fcO0/Oq/PmfDhfzo/L6wq5wq6YK+5KutKujCvnKrpK
rrKr4qq6mi7Y1XJ1XF1X3zVwDV0j19g1cc1ccxfiOrpOrosLdV1dD9fL9XH9
3B631+13B9xBd8gddcfcSXfanXMX3EV33d1wN90dd989cyPulXvt3ri37p17
7z64j+6L++5+uF/uj/vn8Xsinqgn4Ul60p6sJ+cpeMqeiqfqqXnqnpan7el4
ep6+Z+gZecaeiWfqmXkWHsSz8pw9F8/Vc/PcPS/Px/Pz+rx+b9Ab8oa9EW/c
m/CmvVlvwVvylr1NL+xteXveoXfhXXk33q135917D96j9+Q9e6/ep/fl/Xh/
vqAv5ov7Ur60L+vL+wq+kq/qq/nqvoav6ev4ur6eb+Ab+sa+iW/qm/nmvoVv
6Vv5Nj7Ud/XdfQ/f0/fx/fwBf9Af9kf8UX/Mn/Sn/Fl/3l/yV/xVf8vf9nf8
A//Yv/Rv/Dv/3n/wH/0n/9l/8aP+u//t//h/gXAgEUgGMoFsIB8oBkqBSqAe
aASaATjQCvQC/cAgMAqMA9PALDAPLAJIYBlYBzaBXeAWuAeegVfgHfgFQ8Fw
MBqMBePBRDAdzATzwWKwEqwF68FOsBvsBUfBaXAd3AUPwWPwFDwHL0E0eA3e
gs/gN/gLRUOpUDqUC+VDxVA5VAnVQs0QHGqF2qFOaBAahkahSWgamocWISS0
DK1C69A2tAsdQo/QM/QOfULfcCQcDcfDiXAynApnw7lwMVwO18KNcDPcC/fD
g/AkPA9vw4fwKXwOX8Jo+Bq+he/hR/gdiUcykWykEClGypFqpBZpRFqRdqQT
6UZ6kVFkHJlEZpF5BIksI6vIOrKJbCP7yCFyirwi78g38ovGovFoMpqKpqOZ
aD5aiJaj1WgjCkdb0UF0GB1FZ1Ekuo+eopcoGr1Gb9F79BF9Rl/RbywZy8Xy
sVKsHKvG6rFGDI51Yt1YL9aPDWKT2DQ2iy1iSGwVW8c2sW1sF9vHjrFT7BL7
xL7xRDwZT8cz8Ww8Fy/GS/FqvB6H4+14Jz6Kj+OT+CK+ih/jl/g1fovf44/4
M/6Kv+OfRDpRSBQTlUQ1UU80E3Cinegl+olBYpgYJWaJeWKRWCZWiU1im9gl
9olD4pg4Jy6Ja+KXTCXTyWwyl8wnC8lyspKsJ5vJdrKb7CUnyWlyllwmN8lz
8pq8Jx/JZ/KVfCc/yW/yl8qmSqlyqpaqp5qpVqqd6qYGqWFqlBqnJqlFCkkt
U+vUJrVL7VOH1DF1Sp1TaOqauqcz6Ww6ny6ki+lSupqupZvpVrqb7qcH6Vl6
nl6k1+ldGk3f08/0K/1Of9Lf9C+Tz1Qy1Uwj08y0Mp1MN9PPjDLjzCQzzcwy
y8wqs85sM7vMIXPMnDLnzCWDZm6Ze+aZzWXz2WK2lC1nK9l6tpFtZTvZfnaY
HWUXWSS7zG6zh+wt+8y+s5/sN/vLFXO1XD0H51q5Tq6X6+eGuUlumpvl5rlF
bp3b5La5fe6QO+XOuUsOzV1zt9wj98y984V8MV/OV/LVfC3fzMP5Tr6XH+bH
+Ul+mV/l1/l9/pR/5N/5b/5XKBcahWahXegUeoVBYVgYF2aFeWFRQArLwraw
K+wLx8KpcCmghWvhVrgXHoVX4V34FkvFcrFarBXrxUaxVWwXe8VBcVycFmfF
dXFT3BaPxUvxVfyWqiW41Cp1S73SoDQqjUvT0qKElJalVWld2pcOpWPpXLqU
rqVb6V56lJ6lV+lT+pYr5Wq5Xm6Um2W43Cl3y4PyqDwtz8uL8ra8K+/L5/K1
/KnUK+1Kp9KvDCqjyqQyrcwry8qqsq5sKtvKsXKqnCto5Vq5Vx6VZ+VVeVc+
lV+1Vq1Xm1W42qq2q71qvzqqTqrzKlJdVvfVQ/VYRav36q/WrHVrvdqwNqpN
arPavIbU1rVNbVvb1fa1c+1SQ2u32r32rL1q79qn9q396o16s96qt+uderc+
qA/rk/qsjtRX9XX9WD/Vz/Vb/dloNfqNQWPcmDRmjUUDaawa28ausW8cGscG
2rg2bo1H49l4Nz6Nb+PXhJutZqfZbfaa/eaoOW7Omovmqrlpbpvn5qWJNh/N
N9yBh/AInsIzeAEv4RW8gffwAT7CJ/gM3+A7/IBf8Bv+wr9Wu9Vp9Vr91qA1
bE1a09aitWxtWrvWvoW2rq1b69X6tnvtcXvSnrcX7WV73d60d+1j+9Q+ty9t
tP1oP9uv9qf97XQ7vc6gM+yMOuPOrDPvLDvrzq5z6Bw7t8698+h8uoPutDvr
It1ld93ddnfdQ/fcvXTR7rV767667+6n++v1e4PeqDfuTXrT3qKH9Na9be/Q
O/XOvUfv2Xv1fv1Rf95f9Ff9dX/b3/cP/VMf7V/7t/69/+h/+t/+bzAcjAaT
wXQwG8wHy8FqsB3sB6fBZYAOXoP34DOcDJHhcrgZbof74XF4Gl6Gt+F9+Bg+
h6/hbzQeTUaz0Xy0GCGj9Wgz2o+Oo8voOrqNPqPv6DeejVfj9Xg33o+P4/P4
Mr6OH+Pn+DV+jz+T6WQ2WUyQyXKymmwnu8lxcp5cJ/fJY/KbLqab6XZ6mB6n
5yk6vU7v09f0Pf1Mv9PfbD5bzJaz1Ww928z2s8PsPENn99lz9pov57v5fn6a
n+fo/Da/z5/zz/w7/y2QxXKxXmwW28VucVycFujitngu3osPskYOyBG5IChy
Qx7IE3kjv+VquV5ul7vlfnlYnpeX5W35WL6X3+VvtV2dVufVdXVbPVav1Xv1
XW/W2/V+fVgf16c1ur6uH+vX+rvZby4bdHPfPDavzWfz3e62++1xe9qet5ft
bXvfvraf3XF33d12z91r99n99of9cX/eX/bo/rp/7J/7z/53OB/uh8fhffgc
fsfT8XxEj9fj7Xg/vo7v4++Enp6n1+l7+p0vZ/R8O9/Pj/Pz/Dl/L7fL+/JB
r+gNfaBP9IW+0d/1cf1ef7f77XF73d63z+17fz2ej9fj8/g+fs/P6/36vH7v
3+f7+f0D42TELQ==
             "], 0.0226101018151022]}, 
           {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
            DiskBox[1, 0.0226101018151022], DiskBox[2, 0.0226101018151022], 
            DiskBox[3, 0.0226101018151022], DiskBox[4, 0.0226101018151022], 
            DiskBox[5, 0.0226101018151022], DiskBox[6, 0.0226101018151022], 
            DiskBox[7, 0.0226101018151022], DiskBox[8, 0.0226101018151022], 
            DiskBox[9, 0.0226101018151022], DiskBox[10, 0.0226101018151022], 
            DiskBox[11, 0.0226101018151022], DiskBox[12, 0.0226101018151022], 
            DiskBox[13, 0.0226101018151022], DiskBox[14, 0.0226101018151022], 
            DiskBox[15, 0.0226101018151022], DiskBox[16, 0.0226101018151022], 
            DiskBox[17, 0.0226101018151022], DiskBox[18, 0.0226101018151022], 
            DiskBox[19, 0.0226101018151022], DiskBox[20, 0.0226101018151022], 
            DiskBox[21, 0.0226101018151022], DiskBox[22, 0.0226101018151022], 
            DiskBox[23, 0.0226101018151022], DiskBox[24, 0.0226101018151022], 
            DiskBox[25, 0.0226101018151022], DiskBox[26, 0.0226101018151022], 
            DiskBox[27, 0.0226101018151022], DiskBox[28, 0.0226101018151022], 
            DiskBox[29, 0.0226101018151022], DiskBox[30, 0.0226101018151022], 
            DiskBox[31, 0.0226101018151022], DiskBox[32, 0.0226101018151022], 
            DiskBox[33, 0.0226101018151022], DiskBox[34, 0.0226101018151022], 
            DiskBox[35, 0.0226101018151022], DiskBox[36, 0.0226101018151022], 
            DiskBox[37, 0.0226101018151022], DiskBox[38, 0.0226101018151022], 
            DiskBox[39, 0.0226101018151022], DiskBox[40, 0.0226101018151022], 
            DiskBox[41, 0.0226101018151022], DiskBox[42, 0.0226101018151022], 
            DiskBox[43, 0.0226101018151022], DiskBox[44, 0.0226101018151022], 
            DiskBox[45, 0.0226101018151022], DiskBox[46, 0.0226101018151022], 
            DiskBox[47, 0.0226101018151022], DiskBox[48, 0.0226101018151022], 
            DiskBox[49, 0.0226101018151022], DiskBox[50, 0.0226101018151022], 
            DiskBox[51, 0.0226101018151022], DiskBox[52, 0.0226101018151022], 
            DiskBox[53, 0.0226101018151022], DiskBox[54, 0.0226101018151022], 
            DiskBox[55, 0.0226101018151022], DiskBox[56, 0.0226101018151022], 
            DiskBox[57, 0.0226101018151022], DiskBox[58, 0.0226101018151022], 
            DiskBox[59, 0.0226101018151022], DiskBox[60, 0.0226101018151022], 
            DiskBox[61, 0.0226101018151022], DiskBox[62, 0.0226101018151022], 
            DiskBox[63, 0.0226101018151022], DiskBox[64, 0.0226101018151022], 
            DiskBox[65, 0.0226101018151022], DiskBox[66, 0.0226101018151022], 
            DiskBox[67, 0.0226101018151022], DiskBox[68, 0.0226101018151022], 
            DiskBox[69, 0.0226101018151022], DiskBox[70, 0.0226101018151022], 
            DiskBox[71, 0.0226101018151022], DiskBox[72, 0.0226101018151022], 
            DiskBox[73, 0.0226101018151022], DiskBox[74, 0.0226101018151022], 
            DiskBox[75, 0.0226101018151022], DiskBox[76, 0.0226101018151022], 
            DiskBox[77, 0.0226101018151022], DiskBox[78, 0.0226101018151022], 
            DiskBox[79, 0.0226101018151022], DiskBox[80, 0.0226101018151022], 
            DiskBox[81, 0.0226101018151022], DiskBox[82, 0.0226101018151022], 
            DiskBox[83, 0.0226101018151022], DiskBox[84, 0.0226101018151022], 
            DiskBox[85, 0.0226101018151022], DiskBox[86, 0.0226101018151022], 
            DiskBox[87, 0.0226101018151022], DiskBox[88, 0.0226101018151022], 
            DiskBox[89, 0.0226101018151022], DiskBox[90, 0.0226101018151022], 
            DiskBox[91, 0.0226101018151022], DiskBox[92, 0.0226101018151022], 
            DiskBox[93, 0.0226101018151022], DiskBox[94, 0.0226101018151022], 
            DiskBox[95, 0.0226101018151022], DiskBox[96, 0.0226101018151022], 
            DiskBox[97, 0.0226101018151022], DiskBox[98, 0.0226101018151022], 
            DiskBox[99, 0.0226101018151022], DiskBox[100, 0.0226101018151022],
             DiskBox[101, 0.0226101018151022], 
            DiskBox[102, 0.0226101018151022], 
            DiskBox[103, 0.0226101018151022], 
            DiskBox[104, 0.0226101018151022], 
            DiskBox[105, 0.0226101018151022], 
            DiskBox[106, 0.0226101018151022], 
            DiskBox[107, 0.0226101018151022], 
            DiskBox[108, 0.0226101018151022], 
            DiskBox[109, 0.0226101018151022], 
            DiskBox[110, 0.0226101018151022], 
            DiskBox[111, 0.0226101018151022], 
            DiskBox[112, 0.0226101018151022], 
            DiskBox[113, 0.0226101018151022], 
            DiskBox[114, 0.0226101018151022], 
            DiskBox[115, 0.0226101018151022], 
            DiskBox[116, 0.0226101018151022], 
            DiskBox[117, 0.0226101018151022], 
            DiskBox[118, 0.0226101018151022], 
            DiskBox[119, 0.0226101018151022], 
            DiskBox[120, 0.0226101018151022], 
            DiskBox[121, 0.0226101018151022]}}]],
        MouseAppearanceTag["NetworkGraphics"]],
       AllowKernelInitialization->False]],
     DefaultBaseStyle->{
      "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
     FormatType->TraditionalForm,
     FrameTicks->None,
     ImageCache->GraphicsData["CompressedBitmap", "\<\
eJysvXusZll2H3Sm7r113+9bVbequp7dfb5+VFW/3Y/p6bbHk5npc74eE4eA
iU2QZRvPjBOBJrGQEZ5zRnIECiigICGEECiBWAgC/4CEI/FQiJCABAkLS45Q
RCyEbIQE9tiZsWem63585+y91u/3W/vcWzVjWup7b33feey99lq/9Vtr7cfH
P/0Xv/xzf/6n/+JXfuan737haz/9z3/5Kz/zF+5+/p/72vKjlU9V1aceDP/f
rVaXfy+qqvjxsKp+kL//jfHn2ivLH7+Y/zn8fmv49NIF36X7qm/8gLen705+
dvnjfzw+ufq7L7/6Q5985nMf/+7DN979uydXr39t+flF3w3/TT135YJXpqZW
/+L4853JS57w1ou+e5i/W/zYT/zM4t/5j//24j/4L/7e4t/9m39n8ad+6su/
sX90/BtHx1emvhvu/5Un9PQHkUTqZvVL48/T857wr17U6uMrp7+5d3A09d3v
Xrv1wh8c3H178eIr7wzfrQxfVqvD12c37jy3eOHhW/j4dPj48cM33j/bOTyd
etr/euX01p9fP7j+Px9dvfGDyCh1svoL48/9KWlcNDq/tbWz+60XHrw5fF5R
RxYPXv/04ur126F/i4dvfrDYOrm3ePeHP1obP15Z3L73/OLdD7+YL0qfffC5
Ly2OTk7pqWt++87piya5/N3+8N23Hrz23v+9ub1/ngzeOmesc8+rpA+b5w32
31x+/v++8PANeu3K+Pihk8vmV2vU9OvP3KXurI6fbR3fW7ywbPa/9av/lQlk
aOWN288uZg/fxMcr48cvvfL24u6zL8hTN/ZvDHKTz1RIm0OLfm/Z4v/kIqXP
mv/nxp973++If+vo6q3Fwzfes1Y8/+KjxezBG0MHKu7YS6++s7h64w46djx+
/PJSL46ffX9x5faDxfwf/2eGr8en/9v/0X8zvu34Zr38fzb53cmN+4t79SN6
1Zo/c/f0JRNvdb4g9xZvvPPDi6Nrt79fLUnCqn7hYiX5zz71qU/9wQsPz7cG
F8ar48ufe+n1xeG1O5OdvXL7xcXh6XOT3127+2hx9zNfXlx/9cdHQQ4dX2rG
aBbDv08ffWlxes53J7PPniv84bk33/yJc7+nAeChvn7rWQWtUQ//0VJJ/vba
+t7/dHTl2qQeJmFWP/eD6eF3t/dOACPvj9awuXt8Tr8eLq7MfnRaVg+/dL4c
H368mLXdYtZ0i3s//OcW1x7Ol8r7mfH3vQ9+IX3X9ou7/N2D5Xcf/sJ4z0Xj
M9x37hjV54/R9v5VdHsvQctSEt+nPv8cnOMTQO+bL07o8807zy+NnlDrmhvi
3s2HF8pylONSRkfPZTl++FXI8cP03fFzkGPddtWl4YpqazGbp+sG2Q6/66ZP
v1v7fPz3peGP6rp/5ENnr/wArxweNb42Dl97/vDt3XwUsAaQd20JeaUd/K1L
a5vn4nEahOpn0lhcpPPfOb42Ym9Gs8PFW+99dnFw5Zlzlf7O+1+GUEU5e1Ps
LNzdLFQVrCl/bZ8N1zT2fbfs9/Kq5c/arknXXRr+SM9d88Hy5y3vSCN0DaOw
/J2e0Uk7RoX5UA3v7rL9w2fnepDTO4tHb76fZbT5NIifZV/92fHnxpTBfIX8
/4XIvglLuPHoHOv/uIJwsvY2JrxuqVLDd0cQnA9ApwOQB2T8e95j8Fq2iu7S
KPF9Ggdcli/x19t4+7/TWFTpGWv0ShunPjd3h5r1VJZzoQPZMCLzi+fgVxqp
6p9OA3Yefv391c0DgOXpE32Em8vDjE8PkrqZSdRZNIQ1jEVJqzeTNptW098k
vSTRpAUr9Dwzx3WYHA9Leh+0p4UWZBMaTatbNgL3UhvNzJK2pDdXB/69YTPw
96vjZ0/lizYG8T5e0tz/88qNZ6eALg1W9VPjz62LcG5x5eZzi7vPP4CenDzR
v1x79DFBE2QyYzWPVrHiyDWM3Dh+jl390uHoAMDcaralpss3DvdcJs8CRamH
FzombuA7NlVoR3rUtuobdMQ/dxQYIXX5/NEMO+/vU5vhVhLva+8udo+uX4SU
afCqf/L7Acr7KXR74zOL7YPTC/ls4aiJGziqNR36SMNTs4zYlUAfkvS3HVBh
OtHUHMmyqa3KtW65mxgJd2LaojpZ2VK59vA9wDO1ct4VIzt+N+9Nr7rqCuOx
YLcbLRHTC/1jJvHgdOtGU/7KxHhWP5GG/J84H2r/3snVG/9gbfsIWLA5Qu32
lefONdU6s4CR1rmVkIxlbEaBrUwamDujhL6Zb8x7VpD0pmRVe5BvS5rCryZj
JIe4ko1SvpKWB+1pgSiKDvW8U2VIlDVrCt+8HPi94D7Q9vOse+fq8xiJpSN5
8ZWB//zhy6++U1DPZMfVn34KSN47ubl44dEPATP2HJKvvvj5FAKJFn5Vx9Gk
Y33dQp/YwjO4mvWOmFmPFqjA3pufc+Zkd4h1sSTXcbu8dXxLkj3zHFeL1MzK
PUYrHmMcVYBST797c/LLK9cDsgiZqC4ZUJg65waNYsr33Ms8/sgkvCQmw78F
yDcX3b/27y9Ob965kO4mW67+5PhzPaL4v1IVqa6d8RH1g7fOTVcMEH5nCeGZ
81waucg6BNiqwYB9nLqwC+xswmdstzw4bS/gaFpQO+qPuFCXg58R6Fgfy7Tb
IKYli1UbJ0x2rtz0KTIix5T8/wAA+VZm/UwFG1bbemQLNYNUBCvDta3xo7vn
sLVHb763eOHBG4Fhf+fRG+//8qXVST+elKP6x5KOTMH+72xsblPq81rG/GfP
C3rIzyroasCCUQIFBlX1+5vyfpe2UD95XpLVpuscD7a7GrDsZgicmJyJAxbd
DPqdmlXSh6RUiBR6uTVKAAzEFIebmy0tRYu1tIIFRKF7vnXKc2ztXRkGk7j8
Yuvk/veu3nn5915+peDySS2qH3tCzuK1tz9Yqt3rlCk5EK/hsb0HW/AaInbh
2tlQnIyRlMVQyOtvqplOjBzyTCsMExkiVtVejZXtkTkrZwnkgdBk7NmKQTx0
0B2M88FEZ9o+R4PAPMG/7Cg2yASIR86F/fZOJ6y1/HfItSzH4+T5D3/AQOHH
WEFWvlK6lKuLX/mrf2Nx7fqt8yOCZTQ+maCIhiLA7fmOmsxVqTXjd8htpcck
RRhHfhz4nB2riV4I43MiL/iWMWud1I1ZIvIAUOdRRypXDugNKAy7D/JamcK0
ydNZDx1Z8B445PSvFcjsWP3jRCA9yzzk6WOLFc7kmFY008Rj0Ju/tPz/MZzK
wxE+hhRnEUR4bj66avp3w0Mf2L0zTEZ3ianh7tmJFM9BbEpUsUk5HGUj1CZY
O8J+SwrVlBrsYcaklzl14S11lGLgTImERJJBdIM54eWmPeC+0QetjtBEIWz6
+KS8JVhqDF3Pi1y2r1DkcnnwQf/71tG9f6G6dIlVpE1K9FHyPVPM5NdPrj3z
7Z1rs5Cl36UK5KdTko9i5potWZ1CA44fbMIcwTqZToBVf8QaG5+IdjRa1rWW
xb5LToSdTImK9Fn2CjsGKt4epbkT6Jnxzn2XUonCbQItHGOAT518BnStczhG
pplNNptJFsuq+NPMdhJ7Suqa/HrM2Q55o+HfOvwbueD+3OL4+v2zl197L5Ka
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
QkdthghO3ofawSVITo/IJdaYPKXuMa4EUa1IvTBFhxQYeo9c6B1UbE9aAo5U
vgb8tZe4WWkV9r1AfGdUeSz9ujVbdaOZUh/6dwNj9hQmNrAEepH9E5nkBFM5
SQFcB4t5HSUbyWY7KtJKSBZoy2qjETkRYwatiR3qpWLb42FCUdd9KMTMwI3a
TmYJRTPbQOMjgUkdsr1WlO+QJrjM1syJukkgK6mYzL4PTcEZgkVRwWlemqyK
MwaxdOODz33p96jKl5CgOhh/7j3Nyg3VfcC5L+kPpI8ROA9wQXfj/C4iTQjb
+XGOASvWXRaDOOCeH5fesiecyxvHWk+uk2JUJAJYibP1hg2EFDgoSp3ZBLvb
AR5ijoLzGaSz8658sDXVqEnTxzZqGGV8XXtfkNX4Owg16WTdptO/VV/JQ+tM
BHB9aaJUtUUM8ANEFe1fHS3bcR+NUEOLtOypQr4Z/p2aLVsDCbKijMHaiAGR
mj6hKCjHrpA+kRbAi0aFEeSWSljcnPqeyJqJl3rbhmvufuYr42YIF62WOWCo
mKr9XZPaXzGtgbpTTGFQ5yI+zEaiqP6QYqT0zCaUj+2HtcNHlLdlU9TgdJNt
FqDuvg/Pd/tKZr0lZiiFALh9sIHdiRaTtbN3J1qZpHEAhWNFKnpPJkVu1lkY
mQd0psqbmNatVAZZydC+kvmG6c3GKpIQxduxw/BSibOJ6+HVoZsIbdBtIgGR
g+Ea8SIZJg4VBaMdk70UpAviri6ZKqjcQkNSg5FCVuUHw1qXCE1ROazOy7JN
fTkmuDsH0dmJCGlMnz2pOKh4cP4+ZsNRGILOLvI8zx6klDDCgVd60VsBh5IN
OvBt1kfO0nUiH+yzaU4TDINIHUUeGyp/ccrj76LIxjArPtjyegeiqpO4EjkA
U5F5X5Z8BDItchD0LSgUWsn4QjCVgHWLXKTY3Zk+prfjeCPuq2PXz0z96qCK
jipc6TQdaIYSR+nw0P5AU0peKFRn/M7tLVw6Kujc7c1s+xBzzZiitrF3zDvg
XTipjiNks3Ih8ZS6eo3a0pVNZ0fJFIYojx3PJVXflnGaFvSzUyPDHO45vmDp
z77gwRM2Tfs8oGbusIn5ni0sunQpe9Rt5gpZ4vOJ0W7H2NkI4/kDJTOqbHlH
5yMl+22lG5DHIE8Q/P5MDxoHS3F7jIc3GVDYzCB28bWpa93wUY2R49gp3e46
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
+uAowbn53LA59iFxXGWwyWwawZ2zcM+EF6s3MbSX/aYZDUeNc0WDs0w2jl2m
ORhQAk5wLkSblWH8N1IarQq0BC8HAyS8uPWiRHYNprMVPInwW9KFbsHjfStZ
6+kWtwtCv/y6a94E5ALDiAqmkapFb8ejy0xcSjuIlfMmvecuaN0QwJiYunFQ
TN3wwvZEMFvzhOikN8Y/eH9F8TuOcQEP0Q2eWe7EwbNy7MtFamFOMPl74g62
u1ThjzzAvFpQc4Rhxp+D3z+PnpiepXmPVnmLrIV9FvFLFowRrCJIEL+Vkzzr
2hgGswaaUmZaqIQcHs9yzq+CFsYYkc8tbNzQQsEjWIUwIfIMBACAq7CPCFyn
T33jMmAvuVWAlQTLiELzO3a830IH5hho1a/ME6+5ARd1HBUHWU0eIl4WziLC
66qClkN0uatsbNkaa1pCaFIMyTqPr9eL0XjS2aJCQI6feqqHBAZCTNBMC7lo
oCjULxJoPW+wJEyDHTvGk/KjcOYUnisyncntzBOMCfOWHmxx5PLw2Mp2XbZX
1sYLaldw0g7vtvWngR/Glrw6mo6BxO5zf31n4iaKwxG84+1G+G4JaVqc7t35
V5LSwdimMdqVSyQea3raU4cYomONDbs/XndJhw9H7aHtKFes/hLp8IhyjH4e
fzFlwPdGyuogZGYUDCL5Fc6ocTnho49vZI1kJuygHCeznG6QSyijRMa9QHIK
bIskTDinTVfKcxToeDriWFzUufBwUp/9IYiyMXz0q8v/f3t3/+Bs9uCNeDDp
KMmEFPukw+q/a9kXNKYlWPx0BltLz2o4sDmAYdtIz8NwBLxnMdbnbELYYB9i
Aq4aFTTtkHAa0epy0XNwKAGBUpXTg28YDauW+ZgasMLfpdetZBwstWeCds/h
0jxWJEo+Vf0UNBeuDKswLPRDcNz4+tAdsu0Ag5SGsPsrWdlJKGV8RzbI8zrJ
BqmSeh9no55i2vHvZf4Aq3JDMNd0lgyUrmmXkawjjm2TPmsRKfCKjJ2Tidsi
twKRyO9hagqmUpdOQscEBXTD5i0xP1skOxxseufZFxZHJ6ff2d6/8iuoxaTI
Zks2E37zvR85u3nnucX2wdXF7ulLi7sfftVGYAU9WxUp1wbPtrmVYookn2zN
AM/7VmimwyAgQJCB8u/8/ApKYe+KiiDe1d5Nx5evsbKY0JUnYiATcmwrugg7
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
gm1ErtkQH9hdsG6Wr6cwCNQ1D/dIQ6zA1KXuxnS6LabmndrFVAjU/ZX7qhc0
PA4WVUcl02irhV0NNTE73b1idtpyD1rNHzPakFhohR98bSltXVxDW7O+fvPz
sNa1st0zZxLJU9apBGL9hjVKJjt1j8SslKCSv+fEjNQJ2uul3by+VQFfRipq
30lalDUstqOGBy0pWxs1yClh01sRekIZya3LKnIqjvdAqMsP6QplUkI19FXk
nthL31iwedNeBuuOx6mZKa8NMrVLd77T42TN0n+Xu5hGUvrp07c++G/rG9tT
pPRbST+/9SKk9EYmpc8zjXBS6n4QW4vz0s1dnLo1PPiMgKAUoLHrdgTt8k5s
Rs+i2quuUsnuakDKkksGyZKuZT1k/ocVkcKj0NiEgH70E8hYQXCs/z2ANQcj
pVoWTri24wkrbIspwAGXse8SRvI9VbRhhLBU+yfkKfMNMGXKdSmn/JmkdD+3
lFMeDCp8cfv+K2Ov0qsPK5AZeWAnTXOL1DrT/vmE1hAx87zQPOhCWGPOccsO
AVljOqMWvB2Rxor31jHxzN/lAg4Avk/Zigf0ayzvVEWFKUFZf2ZkJeAW9sFo
mfQM+eUJ3yr+dRfPa1R6rs5zHourYNN5XN4tzic2K+yd3FnMnr27jD9+xKp3
tpQ/fuvbvzBmSq/er0A65SN37yme0dCstmJTPs5PZ16YNIvjta0LXNAR8t47
HVrymJArMdaIBBYPHpPwJcEEK6od8X43O021Rpjrs/bwTL0761EfnrPB41U9
Sc9PtEdzB+zINV9FXtojp8bOUjIHiZq+LGH50Xd+6bo7dkzVPrqC+m1sbg2t
Y6882u5OUUIE8gO2R4avDjfdmBMJxxXamh0HL/S9SuRC4PRaa7+3xLTVcRIj
J5pjhSldNsrDMSlCj6igJ0BU6pgBFK3QgZgiKdZJYE7lbUX8b1NcwjzC8Oat
RUBs2Jt7e5osb790xUqwYA2XL/+2jLrde1j/1739oynq9nHSr49fhLpt+Z50
VEnfH3+Gu5wsCRWu5GHTcErc+B2gDcvYdSjdnhkco5D24EjDZ2rKcBAZqeFT
Gz7bSfkicCriX3WY5di4mByY4KpkKlUheJTuog32zUmhQRKH9Pn1XFLkK5+y
I5+FPH6gHOldrOOIU78Lav7idOzbSZHapXTsfFDL33/jrQ8udm+9UWRsmJLF
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
HcyA9A==\
\>"]]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"Paley\"\>", ",", "125"}], "}"}], "\[Rule]", 
    GraphicsBox[
     NamespaceBox["NetworkGraphics",
      DynamicModuleBox[{Typeset`graph = HoldComplete[
        Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 
         19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 
         36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 
         53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 
         70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 
         87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 
         103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116,
          117, 118, 119, 120, 121, 122, 123, 124, 125}, {Null, 
          SparseArray[Automatic, {125, 125}, 0, {1, {CompressedData["
1:eJwlyUEoAwAARuHfDDPMzMwwC0mSJEmSJEmSpCVJkpYkaSRJ0pKDJEmSJEmS
JEmSJMlBkiRJkiRJkiRJkiSvvPpOL9nb4fEFSPLrvyL0YwdfyGN2YwNvyDJI
7VjBE9ICpWYs4A5uo9SAGVzBESTVYAJnsARLlRjBEYJDpFIMYh+/KDRJfdjG
J3JDpS6s4xWZZqkNy3hEapjkxTxu4QqX6jGNS9gjJA/GcYpwi1SBYRzCGCmV
YAB7+EGBVerFFj6QEyV1Yg0vyLBJrVjCA1KipSbM4QbxdqkOU7iALUaqxhhO
YHZI5RjCAQyxUjH82MU38p1SDzbxjuw4yYdVPCM9XmrBIu6RlCA1YhbXcLqk
WkziHNZEqQqjOIbJLZXhD2/FR6E=
             "], CompressedData["
1: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

             "]}, Pattern}]}, {VertexCoordinates -> {{
             Sin[Rational[1, 125] Pi], -Cos[Rational[1, 125] Pi]}, {
             Sin[Rational[3, 125] Pi], -Cos[Rational[3, 125] Pi]}, {
             Sin[Rational[9, 125] Pi], -
             Cos[Rational[9, 125] Pi]}, {(Rational[5, 8] + 
              Rational[1, 8] 5^Rational[1, 2])^Rational[1, 2], 
             Rational[1, 4] (-1 + 5^Rational[1, 2])}, {-
             Cos[Rational[61, 250] Pi], 
             Sin[Rational[61, 250] Pi]}, {
             Sin[Rational[28, 125] Pi], 
             Cos[Rational[28, 125] Pi]}, {0, 1}, {
             Sin[Rational[16, 125] Pi], 
             Cos[Rational[16, 125] Pi]}, {
             Cos[Rational[1, 50] Pi], 
             Sin[Rational[1, 50] Pi]}, {-Cos[Rational[17, 250] Pi], 
             Sin[Rational[17, 250] Pi]}, {
             Sin[Rational[17, 125] Pi], -Cos[Rational[17, 125] Pi]}, {
             Sin[Rational[8, 125] Pi], 
             Cos[Rational[8, 125] Pi]}, {-Cos[Rational[19, 250] Pi], -
             Sin[Rational[19, 250] Pi]}, {
             Sin[Rational[6, 25] Pi], 
             Cos[Rational[6, 25] Pi]}, {-Cos[Rational[41, 250] Pi], 
             Sin[Rational[41, 250] Pi]}, {-Cos[Rational[9, 250] Pi], 
             Sin[Rational[9, 250] Pi]}, {-Cos[Rational[43, 250] Pi], -
             Sin[Rational[43, 250] Pi]}, {
             Sin[Rational[27, 125] Pi], -
             Cos[Rational[27, 125] Pi]}, {(Rational[5, 8] + 
              Rational[-1, 8] 5^Rational[1, 2])^Rational[1, 2], 
             Rational[1, 4] (-1 - 5^Rational[1, 2])}, {-
             Sin[Rational[16, 125] Pi], 
             Cos[Rational[16, 125] Pi]}, {
             Cos[Rational[23, 250] Pi], -Sin[Rational[23, 250] Pi]}, {-
             Cos[Rational[11, 250] Pi], -Sin[Rational[11, 250] Pi]}, {
             Cos[Rational[51, 250] Pi], -Sin[Rational[51, 250] Pi]}, {-
             Sin[Rational[23, 125] Pi], -Cos[Rational[23, 125] Pi]}, {-
             Cos[Rational[59, 250] Pi], -Sin[Rational[59, 250] Pi]}, {-
             Sin[Rational[19, 125] Pi], -Cos[Rational[19, 125] Pi]}, {-
             Cos[Rational[47, 250] Pi], -Sin[Rational[47, 250] Pi]}, {
             Cos[Rational[49, 250] Pi], 
             Sin[Rational[49, 250] Pi]}, {-Cos[Rational[23, 250] Pi], -
             Sin[Rational[23, 250] Pi]}, {
             Cos[Rational[11, 250] Pi], -Sin[Rational[11, 250] Pi]}, {-
             Sin[Rational[28, 125] Pi], 
             Cos[Rational[28, 125] Pi]}, {-Sin[Rational[12, 125] Pi], 
             Cos[Rational[12, 125] Pi]}, {-Sin[Rational[18, 125] Pi], 
             Cos[Rational[18, 125] Pi]}, {-Cos[Rational[33, 250] Pi], 
             Sin[Rational[33, 250] Pi]}, {-Sin[Rational[24, 125] Pi], 
             Cos[Rational[24, 125] Pi]}, {
             Sin[Rational[24, 125] Pi], 
             Cos[Rational[24, 125] Pi]}, {-Sin[Rational[7, 125] Pi], -
             Cos[Rational[7, 125] Pi]}, {-Cos[Rational[29, 250] Pi], 
             Sin[Rational[29, 250] Pi]}, {
             Sin[Rational[21, 125] Pi], -Cos[Rational[21, 125] Pi]}, {
             Cos[Rational[11, 50] Pi], -Sin[Rational[11, 50] Pi]}, {
             Cos[Rational[29, 250] Pi], 
             Sin[Rational[29, 250] Pi]}, {
             Sin[Rational[29, 125] Pi], -
             Cos[Rational[29, 125] Pi]}, {-(Rational[5, 8] + 
               Rational[1, 8] 5^Rational[1, 2])^Rational[1, 2], 
             Rational[1, 4] (-1 + 5^Rational[1, 2])}, {
             Cos[Rational[31, 250] Pi], -Sin[Rational[31, 250] Pi]}, {-
             Sin[Rational[22, 125] Pi], 
             Cos[Rational[22, 125] Pi]}, {
             Sin[Rational[2, 25] Pi], 
             Cos[Rational[2, 25] Pi]}, {
             Sin[Rational[3, 25] Pi], -Cos[Rational[3, 25] Pi]}, {-
             Sin[Rational[6, 125] Pi], 
             Cos[Rational[6, 125] Pi]}, {-Cos[Rational[51, 250] Pi], -
             Sin[Rational[51, 250] Pi]}, {-(Rational[5, 8] + 
               Rational[-1, 8] 5^Rational[1, 2])^Rational[1, 2], 
             Rational[1, 4] (-1 - 5^Rational[1, 2])}, {
             Sin[Rational[26, 125] Pi], 
             Cos[Rational[26, 125] Pi]}, {
             Cos[Rational[3, 250] Pi], -Sin[Rational[3, 250] Pi]}, {-
             Sin[Rational[8, 125] Pi], 
             Cos[Rational[8, 125] Pi]}, {
             Cos[Rational[13, 250] Pi], 
             Sin[Rational[13, 250] Pi]}, {-Cos[Rational[3, 250] Pi], -
             Sin[Rational[3, 250] Pi]}, {-Sin[Rational[17, 125] Pi], -
             Cos[Rational[17, 125] Pi]}, {
             Cos[Rational[27, 250] Pi], -Sin[Rational[27, 250] Pi]}, {-
             Cos[Rational[7, 50] Pi], -Sin[Rational[7, 50] Pi]}, {-
             Sin[Rational[29, 125] Pi], -Cos[Rational[29, 125] Pi]}, {-
             Cos[Rational[3, 50] Pi], -Sin[Rational[3, 50] Pi]}, {-
             Cos[Rational[31, 250] Pi], -Sin[Rational[31, 250] Pi]}, {
             Sin[Rational[22, 125] Pi], 
             Cos[Rational[22, 125] Pi]}, {
             Sin[Rational[11, 125] Pi], -Cos[Rational[11, 125] Pi]}, {-
             Cos[Rational[37, 250] Pi], 
             Sin[Rational[37, 250] Pi]}, {
             Cos[Rational[59, 250] Pi], -Sin[Rational[59, 250] Pi]}, {
             Sin[Rational[14, 125] Pi], 
             Cos[Rational[14, 125] Pi]}, {
             Cos[Rational[7, 250] Pi], -Sin[Rational[7, 250] Pi]}, {
             Cos[Rational[53, 250] Pi], 
             Sin[Rational[53, 250] Pi]}, {-Sin[Rational[13, 125] Pi], -
             Cos[Rational[13, 125] Pi]}, {-Sin[Rational[2, 25] Pi], 
             Cos[Rational[2, 25] Pi]}, {-Cos[Rational[39, 250] Pi], -
             Sin[Rational[39, 250] Pi]}, {
             Cos[Rational[57, 250] Pi], 
             Sin[Rational[57, 250] Pi]}, {
             Cos[Rational[47, 250] Pi], -Sin[Rational[47, 250] Pi]}, {-
             Sin[Rational[4, 125] Pi], 
             Cos[Rational[4, 125] Pi]}, {
             Cos[Rational[43, 250] Pi], -Sin[Rational[43, 250] Pi]}, {-
             Sin[Rational[1, 125] Pi], -Cos[Rational[1, 125] Pi]}, {-
             Cos[Rational[7, 250] Pi], -Sin[Rational[7, 250] Pi]}, {-
             Sin[Rational[9, 125] Pi], -Cos[Rational[9, 125] Pi]}, {
             Cos[Rational[1, 250] Pi], 
             Sin[Rational[1, 250] Pi]}, {
             Cos[Rational[61, 250] Pi], 
             Sin[Rational[61, 250] Pi]}, {-Sin[Rational[21, 125] Pi], -
             Cos[Rational[21, 125] Pi]}, {
             Cos[Rational[33, 250] Pi], 
             Sin[Rational[33, 250] Pi]}, {-Cos[Rational[9, 50] Pi], 
             Sin[Rational[9, 50] Pi]}, {
             Sin[Rational[31, 125] Pi], -Cos[Rational[31, 125] Pi]}, {
             Sin[Rational[4, 125] Pi], 
             Cos[Rational[4, 125] Pi]}, {
             Sin[Rational[1, 25] Pi], -Cos[Rational[1, 25] Pi]}, {-
             Sin[Rational[31, 125] Pi], -Cos[Rational[31, 125] Pi]}, {
             Cos[Rational[19, 250] Pi], -Sin[Rational[19, 250] Pi]}, {-
             Cos[Rational[27, 250] Pi], -Sin[Rational[27, 250] Pi]}, {-
             Sin[Rational[27, 125] Pi], -Cos[Rational[27, 125] Pi]}, {-
             Sin[Rational[11, 125] Pi], -Cos[Rational[11, 125] Pi]}, {
             Sin[Rational[7, 125] Pi], -Cos[Rational[7, 125] Pi]}, {
             Cos[Rational[41, 250] Pi], 
             Sin[Rational[41, 250] Pi]}, {-Sin[Rational[26, 125] Pi], 
             Cos[Rational[26, 125] Pi]}, {
             Sin[Rational[6, 125] Pi], 
             Cos[Rational[6, 125] Pi]}, {-Sin[Rational[3, 125] Pi], -
             Cos[Rational[3, 125] Pi]}, {-Sin[Rational[4, 25] Pi], 
             Cos[Rational[4, 25] Pi]}, {
             Cos[Rational[39, 250] Pi], -Sin[Rational[39, 250] Pi]}, {
             Sin[Rational[2, 125] Pi], 
             Cos[Rational[2, 125] Pi]}, {
             Cos[Rational[17, 250] Pi], 
             Sin[Rational[17, 250] Pi]}, {-Sin[Rational[1, 25] Pi], -
             Cos[Rational[1, 25] Pi]}, {
             Cos[Rational[7, 50] Pi], -Sin[Rational[7, 50] Pi]}, {-
             Sin[Rational[14, 125] Pi], 
             Cos[Rational[14, 125] Pi]}, {
             Sin[Rational[4, 25] Pi], 
             Cos[Rational[4, 25] Pi]}, {
             Cos[Rational[9, 50] Pi], 
             Sin[Rational[9, 50] Pi]}, {-Cos[Rational[49, 250] Pi], 
             Sin[Rational[49, 250] Pi]}, {
             Sin[Rational[13, 125] Pi], -Cos[Rational[13, 125] Pi]}, {-
             Cos[Rational[57, 250] Pi], 
             Sin[Rational[57, 250] Pi]}, {-Sin[Rational[2, 125] Pi], 
             Cos[Rational[2, 125] Pi]}, {-Cos[Rational[21, 250] Pi], 
             Sin[Rational[21, 250] Pi]}, {
             Cos[Rational[21, 250] Pi], 
             Sin[Rational[21, 250] Pi]}, {
             Cos[Rational[9, 250] Pi], 
             Sin[Rational[9, 250] Pi]}, {-Cos[Rational[53, 250] Pi], 
             Sin[Rational[53, 250] Pi]}, {-Cos[Rational[1, 250] Pi], 
             Sin[Rational[1, 250] Pi]}, {
             Sin[Rational[18, 125] Pi], 
             Cos[Rational[18, 125] Pi]}, {-Cos[Rational[13, 250] Pi], 
             Sin[Rational[13, 250] Pi]}, {-Cos[Rational[11, 50] Pi], -
             Sin[Rational[11, 50] Pi]}, {
             Sin[Rational[23, 125] Pi], -Cos[Rational[23, 125] Pi]}, {-
             Sin[Rational[6, 25] Pi], 
             Cos[Rational[6, 25] Pi]}, {-Cos[Rational[1, 50] Pi], 
             Sin[Rational[1, 50] Pi]}, {
             Sin[Rational[12, 125] Pi], 
             Cos[Rational[12, 125] Pi]}, {-Sin[Rational[3, 25] Pi], -
             Cos[Rational[3, 25] Pi]}, {
             Cos[Rational[3, 50] Pi], -Sin[Rational[3, 50] Pi]}, {
             Sin[Rational[19, 125] Pi], -Cos[Rational[19, 125] Pi]}, {
             Cos[Rational[37, 250] Pi], 
             Sin[Rational[37, 250] Pi]}}}]]}, 
       TagBox[GraphicsGroupBox[GraphicsComplexBox[CompressedData["
1:eJxdlQtQ1FUUhxEscSGFIQlEkIcEJoIikEl0wkRxoMWAUhdjzEQeNmqSCsVD
QkwBUfHBLEQFjAJKGLo+APEshSwouiBBIIjLY9llX/90IGBVqGbuaSZ3Zmfn
zpyZe/b8vvNdh227Q6MMDQwMkv/5/vurXhfsKqoVwnNh7OXYFxzq3f0tfwi8
AmM2y5uqlRy+bvgoVSFqAYn9X/pQDw6nw9dYzNmtgw0jHm9zje3QN8s2/bap
AufzFXExnsPA16wQVYqGwE3v26mNUoLB/z5/wg5vueMa027g5TrPzdyrhakP
hrCD4yDxlMyGZ/ELTNQ3tEgCOFT6tR01dboLHzq5ujpkPIRDJ1Jzzi7U4iL/
1DqrE82w4Ynw2YSAg8P6U7sK3uDQK1G2VRhwHy3szT+WKuRgeeOB0bUwBaTY
6oVZXWr0ku1d3XXkMUxI45+W3+VwnuvSpy5DN2GrcLKuZ48aJccuytfvl2GS
d95yU8shuNLYcnvxiBIjBftmOkkHoGw0r+DA4Aiy/pH6X1vGG/Su0MHKhF93
1fs9wBmOKtfeKg6/9bS+uaCkHq22eN7ffX4EjtplFc12HMRWt/em5yb1o6Kr
Mn/WPRXGndbaXBUqULlPmB32vRxHoe1cfewjPB/g71C4U4MJBYpuv9MqtPWx
atW09eP1S8Yp8QtVULHZWJz4zQDdjy/dD3Q/ywMpj3m+BVU1hu04N3XS8v0c
HYyvOhMjmuxB8cELGVqJBgLTTHpK12vRxc/DYmVzN6QvMvcxdxnAMXux8WcC
FZ2Bzi12bh0u0Y3Ynr3C7Fgahxs7v5S+MqxFwc+3GuKlnZA4+2R0pa0MxriB
G6vPqVG1M+JzkzIl1M64OtUYNUT1QPUnrCrsJkLkMH6PN459CuINibdJe1G6
b74W/Oxu6YP5XTigyXrV974MfUKyJZt81XB21gK9eYcUZHZmtsVTOrAqLwsU
HP8D5AKusEasxc4B59N5q37DapPuZ8YlHLB8kPJheSPlHW0e4ffWV4OQMrnn
WGTMCHiGfKdaqudg+zL5RfvgEuIRicfF+6t36HI5SHqz9YugtgaqR6pnPCPx
XGxrlKx308GVIy2bVMEdmDWvt3fjqAYL05ybx6EH2Tzwv3nMdq6Q7+Iw4Wuj
qAXPJcjmgS/NA2ge8g02USYJbZAhj/XXNekwN+Bk+OZ8DV4/F3Qo5HIvMP6A
+BsOGFtWNKcTjlcGnrXh6eCwxicvTMbB5VPWB+OSr6HDdGnE2sUjYC0ez0i7
PQiZPVNmGzN/R/cz9fOL+Dpk80eafxhuk9b4avCu6tI2I/s+jHQvvdPuqIQX
/FQHsaEcGN9AfPvEz1nCr6rGx9L+9JJOjvYTaD+Zr5B8xfpD6o/5CslXqQa6
OME0By23roW+c/Mo+QrIV4xPJD4Z/0D8H3bfPl07U40fLbF6N8W5H9atn3/H
JmkYcoqfHBhuGKZ+gfqVRRR9quaJwaj7YHg0csjqkeqZr4B8xfJHyp/5B8k/
LD+k/Ni+Ae0b8xuQ3xivSLwy3oF4Z35H8ntoOW55raMPN4vT+CKehvICyuvh
haacH6vLQVJX51U6xpGfgfzM/i/S/2X8AvHLeELiid0HdB+bL9B8md+Q/Mb4
AuKL8YPED+sPqb9PwvuMY4Z0GGRZl/tTVSudgc7M/0D+Zzwj8cx4QeKF+RHI
j2y/kfab+QzJZ8zvQH5n7xHSe8TeO6T3jvkYyMfMV0i+YvsOtO/sfQB6H9g+
A+3z3xeUPbQ=
          "], {
           {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
            ArrowBox[CompressedData["
1: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
crwir8qr8xq8Nq/PG/AmvAVvyVvx1rw978A78s68O+/Be/HefCFfyVfztXw9
38A38a18G9/N9/H9/AA/zE/w0/wcv8Av8sv8Cr/Kr/Nb/Da/y+/x+/wRf8wH
+RP+jD/nL/hb/o6/55/5V/6Nf+e/+F/+TyAUiAUSgVQgE8gFCoFSoBZoBXqB
SWARWAUOgVPgErgFXoFPEBKEBVFBTBAXJAQpQVqQFeQEBUFZUBc0BS1BVzAU
jAQzwUqwFmwEW8FRcBKcBVfBU/ASfARfoVioFmqFeqFRaBJahHahQ+gVBoRB
YUgYFaaEWWFBWBKWhVVhTVgXNoUdYVfYFw6EQyEonAinwplwIVwKV8K98CA8
Cq/Cu/AhfAo/IrFIKpKJ5CKFSClSidQirUgvMoosIpvILnKJ3CKPyCvyiwKi
iCgqiosSoqQoJcqIsqK8qCAqiaqipqgt6oj6orEIFC1EG9FWtBPtRWfRRXQV
3UVv0Uf0E0vFWrFebBSbxRaxTewUu8R+cUgcFkfEcXFGnBeXxBVxVVwXN8RN
cVvcE/fFQ/FIPBZPxTPxXLwQr8Rr8UZ8FJ/EZ/Fd/BS/xG/xTyKVyCUKiVKi
kqglGolWopcYJWaJTeKQOCUeiVfik/glQUlIEpPEJUlJSpKWZCQ5SV5SlJQk
FUld0pZ0JT3JUDKRTCUryU6ylxwkR8lVcpPcJU/JV/KTyqV6qVFqllqlNqlD
6pZ6pEFpRBqVxqRJaU5alFakNWld2pS2pG1pVzqQDqVjKSidSOfShXQpXUk3
0q10Jz1LL9Kr9Cl9Sz/Sr0wuU8pUMrVMI9PKdDK9zCgzy6wyh8wlc8t8Mr8s
IAvKwrKILCFLytKyjCwry8kKsqKsLKvIarKmrCvrywaysWwmm8s2soPsKDvJ
zrK77CF7yt5ypdwoN8utcrvcIXfJvXKfPCyPyePyhDwtL8jL8pq8IW/K2/KO
vCvvy0fysXwin8pn8qV8JV/LN/KdfC8/yK/ym/wuf8u/8p9CqVArNAqtQqfQ
KwwKo8KssCrsCpfCo/AqAoqgIqQIK6KKmCKlSCuyipwirygoSoqyoqqoKRqK
tqKvGCpGiolioVgqdoqT4qy4KK6Kp+KleCu+SrXSrLQq7Uqn0qX0KP3KgDKq
TCiTypQyqywpq8qGsqVsK7vKnrKvHCpB5UQ5U86VC+VauVFulTvlQXlUnpR3
5UP5VH5VapVWpVPpVQaVUWVSmVVWlV3lVHlUPpVfFVKFVRFVVBVXJVQZVVaV
VxVURVVJVVFVVXVVQ9VSdVVD1VgFqmaqlWqtOqguqqvqprqr3qqP6qvWqq1q
u9qpdqs9ap86qA6p4+qUOq3OqPPqirqubqk76q66rx6oh+qxeqqeqRfqpXql
3qp36r36oD6pz+qL+ql+qd8arUavMWiMGpPGrLForBq7xqlxa3yagCaoiWii
mpgmrklqUpqcJq8pakqasqaiqWnqmqampelo+pqxZqKZahaajWarOWlumrvm
oXlqvpqfVq+1a51at9ar9WkD2rA2ok1qM9qsNqctamvapraj7Wn72qF2pB1r
J9q5dqFdadfajXavPWiP2pP2or1qb9q39qP96vQ6o86kM+ssOqvOprPrnDq3
zqsL6EK6sC6mi+sSuqQurcvoCrqirqyr6Kq6mq6ha+rauo6upxvqJrqZbq5b
6Xa6ve6ie+ieupfurTfqnXq33qv36wP6kD6qj+nT+pw+ry/oy/qGvq3v6Qf6
oX6sB/UT/Uy/1K/0G/1Wv9Mf9Sf9WX/R3/R3/UP/1f8MRoPZYDFYDTaD3eAw
OA1ug9fgN4QMEUPUkDAkDSlD2pA15AwlQ9lQNdQMdUPD0DK0DV1DzzAwjA0z
w8KwNGwMB8PRcDO8DG/Dx/A1mo1uo9foNwaNIWPEGDcmjFljwVg0loxVY8vY
NQ6MI+PYODFOjTPjwrg2bow74954MJ6NF+PVeDM+jE/jy2Q2WU02k93kMDlN
LpPb5DX5TUFTxBQzxU0pU9qUMWVNeVPBVDFVTXVTw9Q0tUwdU9fUNw1MI9PE
tDCtTGvTznQynU0P08f0Nf3MVrPX7DcHzWFzxBwzJ80pc95cMpfNFXPd3DH3
zSMzaJ6YZ+a5eWFembfmnflgPppP5qv5Zr6bH+aX+W3+WKwWu8VhcVpcFrfF
Y/Fa/JagJWyJWRKWpCVjyVpylrylaClZapa6pWlpWdqWjqVn6VuGlpEFtMws
K8vGsrUcLBfL1fKy/Kx2q98atIatUWvMmrCmrRlr0VqxVq01a9Pasw6toHVq
nVkX1qV1Zd1Y99aD9WQ9Wy/Wu/VhfVpf1o/1a/3Z7DanzWVz2zw2r81n89uC
trAtakvYUra0LWfL2wq2oq1sq9gatqatbevYuraebWAb2sY20Da1LWwb2862
t51sN9vd9rE77UF72B61x+0Je8qetefsZXvNXrc37G37wD62T+1z+8K+sq/t
G/vOfrSf7Bf71X6zP+0v+9v+sf8cTofb4XF4HT6H3xFwBB1hR9QRd6QcGUfW
UXAUHSVH2VF11BwtR9vRdfQcfcfAMXKMHRPH1DF3rBw7x8FxdFwcD8fT8XO6
nWFn1Bl3Jp0pZ8aZdxacVWfD2XS2nF3nyDlxzp1L58q5cW6dO+fBeXZenDfn
3flwvp0f59f5c7ldXpfP5XcFXEFXyBV2RV1xV9KVceVceVfJVXZVXFVX3dVw
dVxdV981cA1dIxfomrhmrrlr6dq4Dq6T6+y6uV6ut9vrjrrj7qQ77c64c+6i
u+Suu1vutrvj7rtB98y9dK/dG/fOvXcf3Cf31X1zP9xP98v9df88Xo/fE/AE
PSFP2BPxRD1xT9KT9uQ8BU/RU/FUPTVP3dP0tDw9T98z9Iw8Yw/omXpmnoVn
6Vl7dp6T5+K5eh6ej+fr9Xvj3qQ37c16c96Ct+yteJvejrfr7XmH3ql34V17
t96d9+A9ek/ei/fufXhf3rf34/P7gr6QL+yL+KK+mC/uS/rSvqyv4Cv5yr6a
r+5r+Jq+tq/jG/iGvrEP9E18U9/ct/CtfGvf1nfwXXw339338v38QX/Sn/Zn
/Xl/wV/yV/01f9vf8/f9A//YP/ev/Fv/3n/wn/xn/8V/8z/9L//H//X/AsFA
OBAJRAOxQDyQCCQD6UA2kA+UApVANdAINAOtQDvQDfQCo8A4MAlMA7PAPLAM
rAKbwDawD5wCt8Aj8Ax8guFgOpgN5oPFYClYCdaDjWA3OAgOg6PgJLgMboL7
4DF4Cl6C1+At+Ai+g5/gLxQORUOxUDyUCCVDqVA6lA3lQ8VQJVQL1UOtUDvU
CXVD/dAgBIYmoVloHlqElqF1aBPahfahY+gSeoReoXfoF46Gs+F8uBguhyvh
WrgZboX74VF4HAbDs/A6vAsfw+fwJXwL38OP8Cv8Df8i0Ug8kogkI6lIOpKJ
ZCP5SDFSjtQijUgz0ol0I71IPzKMjCLTyCyyiCwjq8g6so3sIofIMXKO3CKv
yCfyjcaj+WgxWo5Wo7VoI9qOdqLDKBidRKfRRXQbPUTP0Wv0Fn1En9FX9BOL
x5KxVCwdy8SysVwsHyvGyrFqrBFrxdqxXqwfG8SGsXEMjM1ji9gqto5tYtvY
PnaInWLn2DX2iH1iv3gyXoyX49V4Pd6It+LdeC8+jk/js/g8vorv46f4NX6P
P+Kv+Dv+if8SyUQ6kUlkE7lEPlFIFBPlRDVRT7QSnUQ3MUgME6PEODFJTBPL
xCqxSWwTu8Q+cUycEpfENXFPvBK/ZDpZTlaT9WQz2Up2kv3kIDlJzpOL5DK5
SR6Tl+Q9+Uy+kp/kN/lLpVPZVC6VTxVSxVQpVU5VU/VUM9VJ9VL91Cg1ToGp
SWqWmqfWqU1ql9qnDqlj6py6pG6pe+qZ+qSz6Wq6nm6m2+lOupcepkfpWXqZ
XqXX6V36nL6ln+l3+pP+ZbKZfKaQKWZKmXKmkqlm6plmpp3pZQaZYQbMTDLT
zCyzyCwz28wuc8gcM6fMOXPN3DKPzDPzzvyy+Ww928y2s91sLzvIjrNgdpFd
ZzfZbfaQvWYf2Xf2m/3l8rlirpQr5yq5aq6Wq+eauXaumxvkRrlxbpqb5ea5
RW6VW+f2uUPulDvnLrlr7p575F65d+6bL+ab+Xa+m+/nB/lRfpKf5lf5bX6X
3+dP+Xv+lf8WioVyoVKoFmqFeqFRaBbahW6hXxgVwMKkMC8sCsvCqrApbAvH
wqlwKVwLt8K98Cy8Cp/Ct1gutovdYr84LI6KYHFWnBc3xX3xUDwWL8Vn8VMq
l6qlWqleapSapVapXeqW+qVhCSxNS7PSsrQqrUub0q60L51Ll9KtdC89Ss/S
u/Qp/crVcrfcLw/L4zJYnpYX5WV5Vz6WT+Vz+VZ+l3+VaqVeaVSalValXelU
upV+ZVgZV6aVeWVRWVc2lW1lVzlUjpVr5VZ5VJ6VV+Vd+VZ+1Xq1Xx1Wx9VJ
dVqdV1fVdfVQPVcv1Wv1Uf3W6rVmrVVr1zq1bq1X69eGtXFtUpvXlrVVbVvb
1fa1Q+1UO9futUftVXvXPrVvvVkf1sf1SX1Wn9eX9U19Wz/Vr/Vb/V5/NZqN
dqPT6DZ6jX5j0Bg2xo1JY9ZYNtaNTWPfODSOjVPj0rg2no1X49P4Nn7NdnPc
nDRnzUVz2Vw3d81989K8Nx/NZ/PTare6rV6r3xq0hq1Ra9yatGatRWvd2rZ2
rWPr1Dq3Lq1b6956tz6tX7vbnrRn7UV71V63t+1D+9i+tZ/tV/vd/nW6nX5n
0Bl2Rp1xB+xMOrPOorPqbDv7zqFz7lw6186t8+g8O9/Or9vvzrqL7qq76W67
++6pe+4+uu/up/vt9XvD3qg37oG9SW/am/UWvVVv09v3jr1T79q79e69R+/V
e/eH/UV/1d/0d/19/9i/9K/9V//b/w2Gg/EAHEwG08FsMB8sBqvBZrAbHAfn
wWVwHzwGz8Fr8Bl8h+PhargZ7oaH4XF4Ht6G9+FnNB5NRtPRbDQfLUbL0Wq0
Ge1Gh9F5dB3dRs/Ra/QefUa/8WS8Ge/Gh/FpfB5fx4/xc/wDJ+AMnIMLcAmu
wDW4AXfgATyBV/AOPsA3+AG/4G8ym+wmh8lpcplcJ/fJa/KezqaL6XK6mq6n
m+l2upsepqfpZXqfPqev6Xf6my1mh9lpdpndZvfZc/aZfeeL+Wq+nm/m2/lu
vp8f5qf5ZX6bP+fv+WexWpwWl8Vt8Vg8F+/Fb7labpbb5W65Xx6Wx+VpeVne
lo/le/ld/lab1WV1Wz1Wr9V79V1v1rv1fn1YH9en9Xl9Wd/Wj/Vr/d3sNrfN
Y/PafDbf7W572B63p+15e9let7ftY/vafnaH3WP32n12v/1hf9qf95f9dX/b
3/eP/Wv/2f8Op8Pr8Dn8jqfj5Xg93o734+P4PL6On+PvdDl9Tr/z5Xw738+P
8/P8Or/Pn/Pvcrv8rrfr4/q8vq7v6+f6vf5uj/vj/rq/75/79/57vJ6v5+f5
ff5en/fn/fv8vr9/paZ1gA==
             "], 0.022610183673328177`]}, 
           {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
            DiskBox[1, 0.022610183673328177], 
            DiskBox[2, 0.022610183673328177], 
            DiskBox[3, 0.022610183673328177], 
            DiskBox[4, 0.022610183673328177], 
            DiskBox[5, 0.022610183673328177], 
            DiskBox[6, 0.022610183673328177], 
            DiskBox[7, 0.022610183673328177], 
            DiskBox[8, 0.022610183673328177], 
            DiskBox[9, 0.022610183673328177], 
            DiskBox[10, 0.022610183673328177], 
            DiskBox[11, 0.022610183673328177], 
            DiskBox[12, 0.022610183673328177], 
            DiskBox[13, 0.022610183673328177], 
            DiskBox[14, 0.022610183673328177], 
            DiskBox[15, 0.022610183673328177], 
            DiskBox[16, 0.022610183673328177], 
            DiskBox[17, 0.022610183673328177], 
            DiskBox[18, 0.022610183673328177], 
            DiskBox[19, 0.022610183673328177], 
            DiskBox[20, 0.022610183673328177], 
            DiskBox[21, 0.022610183673328177], 
            DiskBox[22, 0.022610183673328177], 
            DiskBox[23, 0.022610183673328177], 
            DiskBox[24, 0.022610183673328177], 
            DiskBox[25, 0.022610183673328177], 
            DiskBox[26, 0.022610183673328177], 
            DiskBox[27, 0.022610183673328177], 
            DiskBox[28, 0.022610183673328177], 
            DiskBox[29, 0.022610183673328177], 
            DiskBox[30, 0.022610183673328177], 
            DiskBox[31, 0.022610183673328177], 
            DiskBox[32, 0.022610183673328177], 
            DiskBox[33, 0.022610183673328177], 
            DiskBox[34, 0.022610183673328177], 
            DiskBox[35, 0.022610183673328177], 
            DiskBox[36, 0.022610183673328177], 
            DiskBox[37, 0.022610183673328177], 
            DiskBox[38, 0.022610183673328177], 
            DiskBox[39, 0.022610183673328177], 
            DiskBox[40, 0.022610183673328177], 
            DiskBox[41, 0.022610183673328177], 
            DiskBox[42, 0.022610183673328177], 
            DiskBox[43, 0.022610183673328177], 
            DiskBox[44, 0.022610183673328177], 
            DiskBox[45, 0.022610183673328177], 
            DiskBox[46, 0.022610183673328177], 
            DiskBox[47, 0.022610183673328177], 
            DiskBox[48, 0.022610183673328177], 
            DiskBox[49, 0.022610183673328177], 
            DiskBox[50, 0.022610183673328177], 
            DiskBox[51, 0.022610183673328177], 
            DiskBox[52, 0.022610183673328177], 
            DiskBox[53, 0.022610183673328177], 
            DiskBox[54, 0.022610183673328177], 
            DiskBox[55, 0.022610183673328177], 
            DiskBox[56, 0.022610183673328177], 
            DiskBox[57, 0.022610183673328177], 
            DiskBox[58, 0.022610183673328177], 
            DiskBox[59, 0.022610183673328177], 
            DiskBox[60, 0.022610183673328177], 
            DiskBox[61, 0.022610183673328177], 
            DiskBox[62, 0.022610183673328177], 
            DiskBox[63, 0.022610183673328177], 
            DiskBox[64, 0.022610183673328177], 
            DiskBox[65, 0.022610183673328177], 
            DiskBox[66, 0.022610183673328177], 
            DiskBox[67, 0.022610183673328177], 
            DiskBox[68, 0.022610183673328177], 
            DiskBox[69, 0.022610183673328177], 
            DiskBox[70, 0.022610183673328177], 
            DiskBox[71, 0.022610183673328177], 
            DiskBox[72, 0.022610183673328177], 
            DiskBox[73, 0.022610183673328177], 
            DiskBox[74, 0.022610183673328177], 
            DiskBox[75, 0.022610183673328177], 
            DiskBox[76, 0.022610183673328177], 
            DiskBox[77, 0.022610183673328177], 
            DiskBox[78, 0.022610183673328177], 
            DiskBox[79, 0.022610183673328177], 
            DiskBox[80, 0.022610183673328177], 
            DiskBox[81, 0.022610183673328177], 
            DiskBox[82, 0.022610183673328177], 
            DiskBox[83, 0.022610183673328177], 
            DiskBox[84, 0.022610183673328177], 
            DiskBox[85, 0.022610183673328177], 
            DiskBox[86, 0.022610183673328177], 
            DiskBox[87, 0.022610183673328177], 
            DiskBox[88, 0.022610183673328177], 
            DiskBox[89, 0.022610183673328177], 
            DiskBox[90, 0.022610183673328177], 
            DiskBox[91, 0.022610183673328177], 
            DiskBox[92, 0.022610183673328177], 
            DiskBox[93, 0.022610183673328177], 
            DiskBox[94, 0.022610183673328177], 
            DiskBox[95, 0.022610183673328177], 
            DiskBox[96, 0.022610183673328177], 
            DiskBox[97, 0.022610183673328177], 
            DiskBox[98, 0.022610183673328177], 
            DiskBox[99, 0.022610183673328177], 
            DiskBox[100, 0.022610183673328177], 
            DiskBox[101, 0.022610183673328177], 
            DiskBox[102, 0.022610183673328177], 
            DiskBox[103, 0.022610183673328177], 
            DiskBox[104, 0.022610183673328177], 
            DiskBox[105, 0.022610183673328177], 
            DiskBox[106, 0.022610183673328177], 
            DiskBox[107, 0.022610183673328177], 
            DiskBox[108, 0.022610183673328177], 
            DiskBox[109, 0.022610183673328177], 
            DiskBox[110, 0.022610183673328177], 
            DiskBox[111, 0.022610183673328177], 
            DiskBox[112, 0.022610183673328177], 
            DiskBox[113, 0.022610183673328177], 
            DiskBox[114, 0.022610183673328177], 
            DiskBox[115, 0.022610183673328177], 
            DiskBox[116, 0.022610183673328177], 
            DiskBox[117, 0.022610183673328177], 
            DiskBox[118, 0.022610183673328177], 
            DiskBox[119, 0.022610183673328177], 
            DiskBox[120, 0.022610183673328177], 
            DiskBox[121, 0.022610183673328177], 
            DiskBox[122, 0.022610183673328177], 
            DiskBox[123, 0.022610183673328177], 
            DiskBox[124, 0.022610183673328177], 
            DiskBox[125, 0.022610183673328177]}}]],
        MouseAppearanceTag["NetworkGraphics"]],
       AllowKernelInitialization->False]],
     DefaultBaseStyle->{
      "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
     FormatType->TraditionalForm,
     FrameTicks->None,
     ImageCache->GraphicsData["CompressedBitmap", "\<\
eJy0vWmsbdl2HrTrnr7vzz23v7furbVvVd2m2ld9lZ+b58dauyqyDcKEkGDZ
Ds/vJQp6cRTRhLUgjoIJsqKgIEQrBHEsCPziBz8SEEb8oBFgeAiJXw6CoASC
/Wyeu+e6i7PXnGN83zfm2ufcelFKuuec2s1ac47mG98YY865Pv2Jn/3aT//x
n/jZn/nJn7j7w9/8iX/yaz/zk3/y7lf+xDfPX1p6YTJ54dH8393J8vnf/WRS
/Hg8mXwvf//88HPl6fmPP3X+7y/m32/PX73y9+G9dL/JvzD8fDj6kfP/fur8
3399dHz6a6++9qXf/+gHP/21x2++998en1775t+n9+b/jY0lDXPyzww/v/RF
R/sX8uv9H/jxn+z/9f/gv+j/vf/kv+v/zb/2X/Y/9oe+9q2jk7Nv7e7tf+H3
9g6PvnV4dDL23vyeP/c9zDJNb/JPDz/3v5fZ/O9Hx1e/c/f+y/PXl+ZvTJbn
b3330evvPju9dju8/PmjN94fefm712/df/bw8Vt4eX/+8m8+ePnp3z44Ovte
ZpymNPnZ4efe2NwfXzSrre2d33r4+M3565M0oqXhvUevv9/fuf9wspJf+/gH
P+uv3bybp7L4tdv3Xurf++Sr8tqDh0/6h4/eonvsze/xOy+98vqvHZ5cXzTr
txfoMs918scXT/kik/1r56//2sNH5ZTn6jofukz54Pis/1d/8a9PTIfzYb7y
2rv96fU789ef4+Xrt+/303ON+8tLw8snZzflZgtk9OuP33z/P37hhRe+qL1n
4Uz+WJLR92Lwz46v3e3Pb+9DfOnlJ/30XG6Qx93hO6+em8r2wVk/+wf/yPy9
4Rr/2i/9Z8M1T2+/3B+cPRh97+SC945uTPvj839j7+0e3egfPvnSxRLdG9S3
uXv8PaFIEtvkG8PPzYsc6G8eHp/+3t0HrwZH7x+98cFgUD7IJ8M3H7zyRn9w
9c7ovK7efdwfT3/gXC6P+odP3+3f+75/oH/5/Pf8/88ef9afvfajo+9dffJp
f23Be2cXvHdcfXn4/Vwyho1fPbdxn+zmfLK/f+7I3zk8vXWRIydRTv7o8HN9
zGR/5vzf/5uhaDES3R/0urFztFCEJwtEePVchFXd9ne/74/1Vx/N+qP7H52/
NuvvffyNflp3/bTp+nv23oOPht93P/n6+XfovfPPH+b3zr83uTJ/Z3JSfm9+
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
FFwSIIjZlaoBGYqwDxeX2lekreaKnPlUhStWQ1BkWi01CaEeUsaZWJxI/s6o
p/EiD3JDLJzNl7iMp2WDJxX2A4szsiUFdruX1YVR0zHrtUSDSb6F8j3yWAqe
DSR37fUy2O2f3urvTx/lYLf6+Uc/+NlfnbywFHnSDycL+6HFNOlX52t3pq++
jvh2SPXwHy6AMhXxR6tSqq5sCV5CDfwH9JtIcSGANl2nyqRY4hBZiIRXD1sa
cZ23jWQ4kUh5oFiViEQAN9SNh+RSQ7dTNDdxzvqIYBVNzZmbfjaMdcJnHWa2
PjbIqYgXHurelS6RSPsOaUpHFzvwZVhcz+uRHjw7unbvN0a4VUKzyQ8OP08X
UquvfPbj/XzZ1kVFe6ngUoZyLisGZei/c7U4mAgHKSpqSxTeKomMjinOuB07
HEDJDIPVxh7N+eeWYcpUo45BOyRTXraixGS0QlN7Zc+NTIglYT6nepLyjbSR
1vppKRHzS/JfmokkDFkpUy+2oGbmkzy/0BFnkb3VFMYi6pe/+qP98dWbF9YQ
fogtcIyTDeuN+lv3Hg6N97ElPnm26KXR5GTkqyI3oqpuoMjngBtb8jKaem3O
KEkWTkCu6mclrdMiEwyV8FGMlVwpqcjjFKDJ6z4KR4S90pmWBG45FeRxX3+Z
+Lxz1yV2m9zGWeHR2Wwzb1gC0rke1gjOOLQTQ01meEL+FPojCNs0xfT6WL65
fXi9f/j47bgC1NldNsMvDz9lkfffOP/3e49ef5dXBfW7N5+m9sZ9XXHksWjd
jUbcF4pYKrgGM64pGl7O/CAtDcuVWz2vBMm+QCVGAswmM8AqdchYliMpZsj/
vdBBvH+5d54H7IWzEdY29LpHR6l0E2fcUlDkyCIuxUQVdQ7B6doj+RLsa13H
WLpfUubOSNjoHLNtEYK1uvZvv0krI1affTywvRci20umNvm+4WfRafmt8zz2
87Mbt+dYOYmljJNzqqfBxckxYVUr2CN4EATk7YuRAkFJGTXEKI0UG4XwGMrY
JsiuiGU5LbPksnZ6nuG4Rc+QkxGJ9bhO60kqQ+RGGWCFZ3k+OcyBOcpoI78h
284AiFIu8YYaEZbyLG6D+BqGGdETzwu3VQORBgWG7Vnyas+eNzdXWf2x7mt9
dw6v/c6rr70biWIy08knw8+rF65rvHv/Yf+n/+xfLssmH33NVElhhXLIBmr2
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
ebXU9WHwl984unLzg3uPXoO/vPoctPndmW8tuBdAlmkzJTpqRT8TpuT0dVlB
afi7ktywo/xLbLlZC9IpjJtjcV87fndPMqb7mrxItnT1+O5s8ohOPKyZb/u1
UxhMXo7qTw7/3ooG1T6/w7vkCY9F1jTvVb94rXoNgOdr9c4XqK4ywZlLJMb4
D/m/vGR2WQzHyxict3snmXI6fF1yiN0X335Oi9h+/7W3P/HlE2p/1v1l0SqS
3Kuf/NCeabCM3z9Byg8Or9yALryeLOPVj54wyaNvayUmIii+EiBp9M13Skpt
sCN0m1V5ZI/F/H17g4BHY+4hCJt3eQg+44OrN+68P3n0yofV859Kgv6pb89x
/PaF3YNvPXkt842lYRJ7B0c0uMkw8LsPXx32Bn9Ywc8ZwyIhzen/2BGnswS4
vX91du/JGwUDfvT07dmxb275tjX3TyeB/tlvj1N948GT194/fnFiF1fM7tx7
MssYnz93+UyJXrpxf7Z3+c44QbxaD609nk+1kmTmVOSt7/y0jWnu5b6xu3cQ
i5Nn6tqfS6JJP3Y+rK598eSVX7l5514hsoPDo/dRfx8TmbKq4CCuHN+Z3Xv8
eugu/UzVYemDO/ef/P7k4cv09p35V7768KWBlH1YNan+fBLGXx7+fWGRnvzM
aQJZ39j8yr1HT8NhviyPd23k8yDgg8tXj+n89NKz67fufvCmnKkeW9YLwwzv
3nv8xRMGsmiGf/WUJf/pNMn043BUDlWKP/7gk182jvz1i5euxl8fXTv+el69
9OvD51m806ZWLVjYv5L+9LPDv1/6w5zyf9nbv/ibm1vbo3/b2d37ze3dvT/M
mVRd+tvPD/++9WGn8uN/gL8tHNLfTH/7peHf50Y/8sK3+be/mx49m//r8fP/
d/VH/j9hl3Mr\
\>"]]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"Paley\"\>", ",", "137"}], "}"}], "\[Rule]", 
    GraphicsBox[
     NamespaceBox["NetworkGraphics",
      DynamicModuleBox[{Typeset`graph = HoldComplete[
        Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 
         19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 
         36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 
         53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 
         70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 
         87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 
         103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116,
          117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 
         130, 131, 132, 133, 134, 135, 136, 137}, {Null, 
          SparseArray[Automatic, {137, 137}, 0, {1, {CompressedData["
1:eJwlzyFMAgEAheGnop6KeirqqaceeoFAIBAIBILBYHDOYDA4ZzA4NRgMBoPh
5ggEwgUCgUAgEAgEAoFAIBAIBAKBQCAQCASC/+bbvvTSH358u3mdk/Sr/13A
Qwsmxy189ODMS08oYoTYgvSBKmZIBaQfNBFclK6RRRf2kvSAAoaILkvvqGCK
pCF9owFjRbpCBh1Yq9I98hggsia9oIwJEkHpC3UE1qVLpNFGaEO6Qw59uJvS
M0oYI25Kn6hBW/TDQwvmNv3w0YOzQz+KGCEWoh9VzJDapR9NBPfoRxZd2Pv0
o4Ahohb9qGCK5AH9aMA4pB8ZdGAd0Y88BojY9KOMCRLH9KOOwAn9SKON0Cn9
yKEP16EfJYwRD9OPGnRGPzy0YJ7TDx89OC79+AOxkU6+
             "], CompressedData["
1:eJw9mlV7lk2zRF9C3N3dlWAh7koIIYQQ4u7u7kb413tVz3z7iCPua3qeVVXd
Pclb2B1eCPjvv/+WCv/77w3/BgQGh4ZHRsfGJyanpmdm5+YXFpeWV757//Hz
l7qGppa2jq6evv6BwaHhkdGxiamZuYWllbWNrZ29g6OTs4urm7uHp5fXN28D
Q/hGXHxCShrfyMktKCwqLi0rf//hU31DS0/v12/fB3/8HP79Z2p6dn5haXll
bXNrZ3dv/+D04vrm9u7+4fHva0BwSJjOEZeUnJKWmZ1fUFpZ9a76/aeaL7V1
9U3NLW3tHZ1d3T186ufI7z/jE5NTs/NLaxubO0fHJ6fnF1fXzy9/3wQEBYfx
jYTEpLQMasnLLyouKS2vqPz4qaaxqa2P//xj6OevkT/jM7Pzi0srq2sb2zsc
4/Do/MqO8fT8LzA0LELXkZCSmpaRnVtYVM4pPnys4RQNjS2tbXaK3j6+9Gv0
z/jk1PTM/OLKxtb23snp2fnl1c3t39d/uo/QCD5CLRlZ3GlBYQnXQUGfa2qb
Wzr6+d8/h3/9Hh2fnJtf5DrWN7Z29zjG8cnljR3j5W/A2+DwiCj9Lklp6RlZ
ufnFJZWc49PnWs7R1Mx12Dm+9vOp32Pjk9Mzs3OLy2vc68HZ+cXl9c3d/b83
XEd4FJ+glqwcftqi4jJug4K+1Na3tnUN8H9/cZtjk9MLi8vcBj/L/oEu9Oz6
zk7x+u9tYFBoZFSM+EjJyMzKyS8sLXvHMWq+1HOMllbuw47xbYBv/ZmYnJ6d
m19YXt3gXo8uLq+ub+8eHt8EvOU+ImP4BrXk5MFYSWkF10FBdfWN7R094MF1
8LNOzy4tr3Id/C6HR7rSi9sHO0dQcEh4dEycME3Lys7JKywur3j/WXQ0coq2
dm7DTvF9kC+NG2iLS6vrW1zryRWU3T88PXOOwCBuJDqOr1BMXkGhMBVnVNTQ
2NzZ1QcfXMi48FpZXTdOD45PdKVX90+cIyQ0LDI2LkFqycjJzSsohtOPYrSh
uVWMchl2ih9DfGfSOFteWd/c4VrPxPrjkzjlHMEh3EhsAt+hnAL0wi8j0qip
qbm1u6cfQMS5AFtb3zRQj07PdKc3jy//wsIjouMTkiTarLz8gqJSOP0sRpta
TSlchp1CshufNsxW1za397jUC6H+/GKccozQMC4kPokPUU8ReuGHEWgU1dLa
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
Rfz2/oJcJH4XDth7QWGp1GadZWu7HpLF6bBf0c8vuV3ftvoPHEhOxnwLp/He
z8VosR88JLzaRgNNbw6D3OrYjL3irKxq0rbX2zs9Rbv9mNTvsgF/Lyoul9ys
s2zv1EOyOB3xO/rFFbfs21UDggM92PttUCikJno/F6WlfvSQ8uqbDTS9Ogxx
rRNz9oyztq5R215vET99EGqR+l0yYO8lpZUSm/WVnd16Rxalo35Fv7zmdn37
akBwoCf3fhsSDqnJ3tBFabmfPaS8xlYDTc8Ow1zr1IK942xsata211v3XmmP
8zG26Kci7L2s/J3kZp1ld69ekoXpmF/Sr264Zd+hOhA86EXvt2GRgJrq/VyQ
VvrZQ7prbjfO9Oowwq3OLNkzzta2Rm17vfXvlfY6H2eLfirC3isq30tu1lj2
ftVDsjCd8Dv69S237DtWA4IFveopOiwiGlTTvaML03d++JDwWjsNNL07jHKv
cyv2jLOzq1nb3m/de6U9zifYop+ScPeqdx8lN+srv37TO7IwnfI7+s0dt+s7
VQeCBwXoJToiKhZUM72lC9P3fvqQ8Nq7DTQ9O4xxrQtr9oqzt69Z2x5wbc8f
Zo/zSbbopyLcvfr9Z+nN+spv3/WMLExn/JJ+e8/t+s7Vgjy/SvoakeMhNds7
uij96KcPCa+z10jTs8ME17q0Ya84B4eatd37rdb8EfY6n2J7firC3T98/CK9
WV/5/Yf92YZWY35Jv3vgdn2XakH+6u9QwjQjJ0Jqrrd0UfrZTx8SXvdXA03v
DlNc68qWveIcHWvUtvdbbfmj7HU+zdb8FIS3f/pcJ7VZW/njp/3ZhjZjfkm/
f+Q2fddqQPR+G6qH6LiEZFDN95YuTL/48UPK6/1moOndYYZrXduxV5yTU03a
9n6rLX+MPc9n2JqfgvD2mi8NUpt1lT9/2V9taDHml/SHJ27Vd6sGxN5vw/UU
nZCUCqqF3tOFaZ0fQKS8r9+NNL08zHGvG3v2jHN2fm/vlXiQXMxe57NszU9B
eHttXZPkZk3lr9/2VxtajPkl/fGZW/Vhyv/s9TZSL9FJKemQWuw9XZQ2+PlD
wvv2w0DTw8MC97p1YI84F5catP8Pi8rRrQ==
             "]}, Pattern}]}, {
         VertexCoordinates -> {{0.998948, 0.0458466}, {0.995796, 0.0915968}, {
            0.98322, 0.182423}, {0.896661, 0.442717}, {0.282733, 
            0.959199}, {-0.814374, -0.58034}, {
            0.193684, -0.981064}, {-0.473292, 0.880906}, {
            0.98322, -0.182423}, {
            0.800853, -0.59886}, {-0.432407, -0.901678}, {0.99055, 
            0.137154}, {0.948908, 0.315552}, {0.643763, 0.765225}, {-0.814374,
             0.58034}, {0.369403, 
            0.929269}, {-0.941423, -0.337227}, {-0.589639, -0.807667}, {
            0.916016, -0.401143}, {0.238459, -0.971153}, {-0.589639, 
            0.807667}, {0.973823, 0.227309}, {0.827467, 0.561514}, {-0.125788,
             0.992057}, {0.282733, -0.959199}, {-0.694842, 0.719163}, {
            0.800853, 0.59886}, {-0.260664, 0.965429}, {
            0.643763, -0.765225}, {-0.906577, -0.422041}, {-0.347999, \
-0.937495}, {0.916016, 0.401143}, {0.411619, 
            0.911356}, {-0.978779, -0.20492}, {-0.864108, -0.503306}, \
{-0.0801735, -0.996781}, {0.326411, 
            0.945228}, {-0.886274, -0.463161}, {-0.216129, -0.976365}, {
            0.678169, 0.734906}, {-0.727082, 0.68655}, {0.711149, 
            0.703041}, {-0.626048, 0.779785}, {0.933443, 0.358725}, {0.532725,
             0.846288}, {-0.978779, 0.20492}, {-0.757794, 0.652494}, {
            0.608003, 0.793935}, {-0.886274, 0.463161}, {-0.0343902, 
            0.999408}, {0.0114654, -0.999934}, {0.0572969, 
            0.998357}, {-0.260664, -0.965429}, {0.772556, 
            0.634947}, {-0.390614, 0.920555}, {0.896661, -0.442717}, {
            0.103008, -0.994681}, {-0.216129, 0.976365}, {
            0.532725, -0.846288}, {-0.999737, -0.0229293}, {-0.999737, 
            0.0229293}, {-0.987144, 0.159831}, {-0.840125, 0.542393}, {
            0.238459, 0.971153}, {-0.727082, -0.68655}, {
            0.570965, -0.820975}, {-0.987144, -0.159831}, {-0.924973, \
-0.380034}, {-0.473292, -0.880906}, {1., 0}, {0.995796, -0.0915968}, {
            0.933443, -0.358725}, {0.369403, -0.929269}, {-0.864108, 
            0.503306}, {0.103008, 0.994681}, {-0.390614, -0.920555}, {
            0.962377, 0.271716}, {0.742633, 0.669698}, {-0.51318, 0.858281}, {
            0.998948, -0.0458466}, {0.973823, -0.227309}, {
            0.711149, -0.703041}, {-0.757794, -0.652494}, {
            0.452969, -0.891526}, {-0.968355, 0.249578}, {-0.66114, 
            0.750263}, {0.875421, 0.48336}, {0.148502, 
            0.988912}, {-0.51318, -0.858281}, {0.99055, -0.137154}, {
            0.875421, -0.48336}, {-0.0343902, -0.999408}, {0.193684, 
            0.981064}, {-0.626048, -0.779785}, {
            0.85234, -0.522987}, {-0.171138, -0.985247}, {0.570965, 
            0.820975}, {-0.941423, 0.337227}, {-0.432407, 0.901678}, {
            0.948908, -0.315552}, {0.493366, -0.869822}, {-0.993434, 
            0.114406}, {-0.906577, 0.422041}, {-0.171138, 0.985247}, {
            0.411619, -0.911356}, {-0.924973, 0.380034}, {-0.304652, 
            0.952464}, {0.742633, -0.669698}, {-0.66114, -0.750263}, {
            0.772556, -0.634947}, {-0.55199, -0.833851}, {
            0.962377, -0.271716}, {
            0.608003, -0.793935}, {-0.955894, -0.293712}, {-0.694842, \
-0.719163}, {0.678169, -0.734906}, {-0.840125, -0.542393}, {
            0.0572969, -0.998357}, {-0.0801735, 0.996781}, {
            0.148502, -0.988912}, {-0.347999, 0.937495}, {
            0.827467, -0.561514}, {-0.304652, -0.952464}, {0.85234, 
            0.522987}, {0.0114654, 0.999934}, {-0.125788, -0.992057}, {
            0.452969, 
            0.891526}, {-0.997635, -0.0687397}, {-0.993434, -0.114406}, \
{-0.968355, -0.249578}, {-0.786911, -0.617066}, {
            0.326411, -0.945228}, {-0.786911, 0.617066}, {0.493366, 
            0.869822}, {-0.997635, 0.0687397}, {-0.955894, 
            0.293712}, {-0.55199, 0.833851}}}]]}, 
       TagBox[GraphicsGroupBox[GraphicsComplexBox[CompressedData["
1:eJxdlXlQU1cUxkN0VFpwQalQy4iisqhFEWst2FNGQUWUFhSkrHEry4AVCXtF
RhZBiW0EVBZ3RTusLkXrcgrRgsEFwh4iTQgJ2R/CiA4K1Hb869yZN2/evPfu
vef7vvO7C3bt99nLZrFYOR+u/+7Hh542cd4wkDW2/pxzUhnkFVXxT7xk4KxZ
lJc8thb2PbAQ5sQzwOrPML4U0AAr7VrDY2t0IM2yqEraIYHkifm2XhYi+G23
1rK+xgBJzz+b+eMMDQoGZ61czO/DAHPZkkvCRpCZRmyX7mFw2C84O9KzFy87
FzdwVujo/BimTk0sPK8Gw7qgWIm9HO0YeTivvAcld1eIjol1mFstUxfcYODa
uNui9bw62Ls62Dsu2AAu459ONnJqg7pxreTWmX5ILLloczdVRfcDpe3sFK/L
ndD6NtOff18PvyQWWttYG9DSyJxnXdCOzR6VxT69fVjRK4sP71JjTrHvE9b3
eih3Ta/2Le9Ge+2a2a2ZzyFh5bO4qtkM/R6ujCwU8+wZcJt1zCLe4hkcLx00
K0nWQIR042rdGxmwdlqtFVn+heH8nT6GhwzVD533uHoudlVidWPV/F2TBoDo
ASVXX0y/U9mMYxk3A5v6DbReNHny5FEFW4+H8ha53WH3oKKIfabUvQN5LleO
vJ7Q03pAxhGveeMvhvxo6fQ2ez0oQsL87Hw+1KVfnNfyjRAPNE4RPb6qxcrl
ro7m86TYkJZu/V3WLTT9++iGCwoGU9OOjGjkbXAoJly4DQxw6MB1z8AgHRrP
HZoWc/klVj0N5Fr93oTc6vEXnG8Z/MI2M+nETQUs3RJXGJAxAEu2/5zotmEA
S1ZdvLXmrQKE15yO36tTQq6qs8M7TQmW62qbC6b1o8TeqnxiWAUlgttiQa8e
MlObbwa87oCpoae9zE1kwFWH8oVztHT/EBgkX9UNKgyoF1u4yPphfse82/Vx
cmgXZoRqflLT/UKxefH5U8UXMOJYVOqSdwx0iTYNLk3JBhuzzELuBIN8Y19m
sl8FmMbO5eQOMdQPvHHEM6jhjgpKHUdCUn/oB5MpnZKWiS58GLm33pGrp/2D
bsNrE+6F/AnpKWchuo2hetH68JLrcGzXGIP501M8GpJP0WcYtedNqipkMObo
qyJ/7iN4f/2VaGufBnty+L9uCpQByS/VH0ds3PfsdO8DcfloULS7Bsl86Nxj
Php2Ro9BPH/rZJ8u2s/I+n8MAuvjIDxB4h+SfqR5A6IP1ROlmRXdwiYD2Dod
TG/a3QInH49tvCoYgFLPKYcdYhTwvP5s/NsoKbYov641TtAC4R2SfkWSPyT5
wc0ZHtUHxiTwyZyao5xsHarDxs4J3hvQNFdptGzoBexOrjebYafAYIFJni1b
BfsiypSxk3RQftCkMYTpBe14zUwrtgCmDfg2OFxh6P4o35D8jySflK+0X3CW
78KcEA8tvOOWuXjfl6K1Q97p7oHHGB+9v3ZRNkP9pjwEwl/KW+TsePB+28l/
YKoucii/XYv3Dp+y/ErIoLd/wrI/Nj8AwiMg61P+0HxBzVaHz6PSWnFTnW9j
QbKB+otEb9p/GMauNSivy7Asv9NTVamheUHCg495N6CJX0nk8qciymPKLyT9
RflAeUn9p3ym5wWS+qmflE/0fKF5BY3xFtfzOgZT2vc36U7XUL9onlFW5DIa
+qUaV9s6OhmhnPKevgeSB7oeEH2B+AP/AsPLq0Y=
          "], {
           {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
            ArrowBox[CompressedData["
1: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
8rKC7E1Wk33IWrK+bCAbySaymWwuW8h+ZCvZVraTnWUX2d+j8vHp8flR/ah9
fHk0PBofrY+2R/uj89Hz6HsMPYYfE4/px8xj9jH3mH98e3x/LD9WHquPtcfG
Y/Ox9dh+7Dx2H78evx97j/3H0ePkcfb487h53D7uHg+Px8fT4/nxT66QK+XP
cq38RW6Qm+UWuVXulLvlHrlPHpAH5SF5VB6Tx+UJeVKekqflRfmb/F1elzfk
bflQPpJP5DP5Qr6U/8jX8o18Jz/Ir/I/hUrxrNAotIoXhUFhUpgVdoVD4VS4
FT5FQBFRRBVJRVaRU+QVBUVR8a6oKKqKmuJDUVe0FJ+KtqKr+FJ8K3qKvmKg
GComiplioVgrfhU7xUFxUpwVF8VV+aRUKTXKF6VBaVJalTalXelWepU+ZUAZ
UoaVEWVcmVC+KpPKtDKjzCpLyndlRdlUtpRd5Vg5Uc6UC+WPcqVcK7fKX+VB
eXpSP2medE8vT4Yn05PlyfrkfHI9uZ+8T4Gn0FPsKf6Ufso/FZ6KT29PpafK
U+3p46n+1HhqPrWfOk/dp++n3lP/afA0fBo9jZ9mT4unn6ft0/7p8HR6ujxd
n/5Uzyq1SqcyqEwqi8qucqicKq/KrwqoQqqIKqqKqV5VSVVKlVZlVTlVXlVW
VVQ11aeqrfpWTVUz1UL1o1qrNqqtaqfaq06qy7P2WfesfzY8m54tz7Zn+7P7
2fPsffY/h54jz4nn1+fsc/H57bn0/P5cfq49158bz83n1vPnc/f56/n7uf88
eB4+j57Hz5Pn6fPi+ed5/bx7Pj6fni/Pf2qNWqvWq01qi9qmdqpdarfarw6q
Q+qIOqaOqxPqlDqtzqiz6ry6oC6qq+qauq7uqLvqvnquXqh/1Gv1Vv2r3qkP
6qP6ov7TvGj0GqPGpLFobBqHxqnxanwavyaoiWhimqQmpclrSpp3TVlT0VQ1
dU1T09J8atqajuZb09P0NUPNSDPWTDRTzUwz1/xo1pqt5qA5ay6aP61O+6I1
ai1am9ahdWs9Wq82qA1rI9qYNqF91Sa1GW1Wm9PmtUXtm7ak/dDWtU3tl/Zb
O9QutT/atXar3Wn32oP2pD1r/3QGnVFn1ll0Np1D59K5dX5dQBfUhXUxXUKX
1mV0RV1ZV9FVdTXdh66p+9S1dR1dV/el6+sGuqFurJvoprqZbq5b6Ja6tW6r
2+lOuqvu70X/Yngxv9heHC+uF++L78X/En6JvsReEi/Jl9RL+iX3kn8pvBRf
Si/vL+WXxkvz5fOl99J/Gb+sXtYv25fdy+Hl+HJ6ubxc9Sa9WW/V2/QOvUvv
0Xv1QX1IH9ZH9Ql9Up/V5/QlfVVf03/o6/qG/lPf0Xf1X/pvfU8/1I/0Y/1U
P9PP9Qv9Uv+jX+m3+p3+oL8YjAaTwWpwGFwGj8FvCBiChqghbkgYkoa0IWPI
GgqGouHNUDKUDRVD1dAyfBo6hoFhaJgaNoatYWc4GE6Gs+Fi+DNajFaj3egw
uoweo8/oN4aNEWPUGDcmjWlj3lgwlo0fxrqxYWwaW8aO8cv4bewZ+8aBcWyc
GKfGuXFhXBp/jCvj2rgx7owH48n4ZzKbLCa7yWXymHymoClkCpvipldT0pQ2
ZU05U970ZiqZ3k1lU9VUM32Y2qaO6cs0Mo1Nc9OvaWc6mE6mi+lq+jPbzHaz
0+wye8w+c8AcNEfNMXPc/GpOm7PmovnNXDU3zE1zy/xpbpu/zD1z3zwwD80j
89Q8M8/NS/OPeWVemzfmrfnXfDCfzBeL1WKzOC0ei88SsIQtEUvU8mpJWdKW
rCVvKViKlndL2VKxVC0flrqlYelaviw9y8QytSwte8vBcrJcLH9Wh9VpdVs9
Vp81YA1Zw9a4NWF9taasWWveWrK+Wz+sLeuntW3tWLvWnnVgHVpH1rF1Yp1b
F9aldWVdWzfWrfXXurPurSfrxfpns9scNrfNZwvYQraoLWaL21K2jC1ry9uK
tjdbyVaxVW0124etYWvaWrZvW882sM1sc9vKdrSdbBfbn91ld9u9dp89YA/Z
I/ao/dWetKfsGXveXrSX7RV7w962d+xd+5f92z6wj+xj+8Q+tc/sS/uPfWXf
2Lf2X/vOvrcf7Ef7xf7ncDpcDq8j4Ag5Io64I+F4dWQcOUfeUXSUHO+OsqPm
+HDUHQ1Hy/HpaDv6joFj5Fg4lo6N4+y4OP6cHqfX6XcGnCFnxBlzxp0pZ9qZ
ceacRWfJWXXWnC1n1/nl/Hb2nH3nyDlxTp0z59y5cK6ca+fG+evcOffOg/Po
PDnPzj+X2+Vx+V0hV8QVc726kq6UK+cquIqukqvsqriqrrqr4Wq6Wq62q+Pq
uoaukWvi+nGtXL+uq+vP7XP73UF3yB1xx9wJ96s74866c+6Cu+Quuz/cdXfb
/e3uufvugXvonrhn7rl74V66f9wb99b96967D+6j++Q+uy/uq8fr8XmCnogn
5kl4Up60J+MpeN48JU/ZU/XUPB+epqfl+fS0PV3Pl+fbM/ZMPDPP2rPx7L0B
b9Ab9ka8MW/Cm/SmvDlv3lvwvnnL3qq34W16u96+d+AdekfesXfmXXiX3h/v
yrv2/np33r336D15z96L9+r98/l9AV/YF/MlfElfxpf15Xxvvndf2Vf1ffjq
vobv09f2dXxd37ev5+v7pr6Zb+Hb+n59R3/IH/ZH/TF/wp/0p/0Zf8Ff9L/5
3/1V/4e/5f/0f/uH/pF/7J/4p/6F/8e/8q/9G//Wv/cf/Ef/2X/xX/1/gWAg
FIgGEoFkIB3IBfKBQuA9UAlUAx+BRqAZaAU6gW7gK/Ad6AcGgWFgHlgEfgK7
wD5wDkaC0WA8mAgmg+lgNpgLvgVLwfdgJfgRbATbwU6wHxwHJ8FpcBacB3+C
6+AmuA3+BnfBY/AUPAevwb9QOBQJxUPJUDqUDRVCxdBbqBKqhT5CjVAr9Blq
h75C36FeqB8ahkahcWgZ+gmtQ4fQMXQNx8Lx8Gs4GU6Hs+F8uBB+D5fDlXAt
3Ai3wt3wV3gYnoZn4Xl4EV6G1+Ft+De8C+/Dh/A5fAlfI9FILPIaSUeykXzk
LVKKvEdqkXqkEWlF2pFOpBvpRfqRQWQYGUcmkWlkFVlHtpFT5BxNRF+jqWg6
mo3mo8XoW7QSrUZr0Xq0FW1Hv6O96Dg6jy6iy+hPdBXdRnfRffQQPUZP0Wv0
LxaPJWKpWDaWjxVj77FyrBKrx5qxVqwd68a+Yt+xQWwYG8XGsWlsFpvHNrFt
bBe7xK7xZDwVz8Sz8Xy8GC/F3+O1+Ee8Hm/G2/FuvB8fxKfxZfwnvoqv45v4
Ln6IH+On+Dl+SbwmkolMIp8oJkqJSqKaqCWaic9EO9FNfCd6iX5ilBgnJolp
Yp5YJJaJ38QucUj8vaZfM6+51/xr8bX0Wn6tvNZfG6/N18/X7uv36/B19Dp/
Xb2uXzev29ff18Pr6fX8enm9vv4lU8l0MpcsJkvJcrKW/EjWk5/JTrKb/E72
k4PkMDlJTpOz5Dy5TP4kV8l98pA8pbKpXKqQKqZKqXKqmqqlmqlW6jPVSX2n
+qlxapJapjapbeo3tUvtU6fUJXVN/aUz6Wy6kC6ly+lqup5upJvpTvor/Z3u
p4fpUXqcnqXn6UV6mV6l1+lN+pg+pS+ZfKaQecuUMuVMNfORqWc+M+1MJ/OV
6WeGmWlmllllfjO7zD5zyBwzl8xfNpfNZ9+y5Ww1+5FtZlvZz+xXtpftZ4fZ
cXaSnWYX2WX2J7vKbrLb7G/2nL1k/3LF3FvuPVfOVXMfuUaumevkurmvXC83
zI1z89wit8ntc4fcMXfKnXN/+UK+mH/PV/Mf+Ub+M9/Od/K9/CA/zI/z0/ws
P8//5Ff5dX6T/83v8vv8Nf9XKBXeC5VCtfBRaBRahc/CV+G70CsMCuPCtLAs
/BR+C8fCqXAuXArX4luxVKwUP4qNYqvYKXaLX8VBcVQcF6fFeXFRXBbXxU1x
W/wt7ouH4vGt/FZ5q719vDXeWm/tt85b763/NngbvU3f5m+rt/Xb/u38dnm7
vv2V3kvlUq3UKLVK7dJX6bvUK41Kk9K0NC8tSz+lVWlb+i3tSvvSsXQqnd+r
77X3+nvjvfXefu++f70P3ofvo/fJ+/x9+b55374f36/vf+VKuVqul1vldrlb
7pX75UF5Up6V5+VleVVelzflXXlfPpSP5XP5Ur5WPir1SrPSqrQr3cp3pVcZ
VcaVSWVWWVZWld/KrnKu1qof1Wa1Xe1Wv6uD6rA6qs6qi+qyuqpuqtvqb/VQ
PVZP1XP1Wv2rNWrN2metXevWvmv92qA2qU1rs9qitqptavvaoXb9qH80Pj4/
uh/fH/2P0cf4Y/Kx+Pj5WH1sPn4/dh/7j9PH+ePyca236p/1Tr1b/67368P6
qD6rz+uL+k99U/+tH+unRrPRanQa341+Y9iYNKaNWeOnsW5sGr+NfePQODYu
jWvjr9ludppfze9mvzlsjpuT5qK5bP40183f5r55bl5an61266vVbw1b49as
NW8tWuvWtvXb2reOrVPr3Pr77H5+ffY++5/Dz/Hn9HP2+fO5+lx/bj/3n8fP
6+dfu9PutnvtYXvcnrYX7WX7p71t79r79rF9bl/a1853p9cZdIadcWfamXcW
nXVn09l2dp1j59z96n53B91xd9qdd3+6q+66u+seusfuuXvt/n31vwZfo6/x
1/Rr/rX8+vnafv1+7b4OX+ev63fvu/89+p5+z7+X3+vvzff2+/B9+j5/X3vD
3qg36U17896yt+qte7vevnfonXrX/qA/7E/68/6yv+pv+7/9Xf/Uv/Svg/Fg
MpgN5oPlYDXYDLaDw+A4OA0uw9FwPJwNl8PVcDPcDffDw/Ay/BtNR7PRYrQc
rUab0e9oNzqNzqPL6G88GU/Hi/FqvBn/jg/j4/g0/pvMJ4vJz2Q12Ux+J/vJ
YXKZXCd/09l0Pv2Zbqa/0/30ND1PL7Pl7Ge2nm1mv7P97Dg7zf7mi/lyvp7/
zvfz4/wyv87/FqvFerFd/C72i+PivLgsf5ar5Xa5Xx6X5+Xfz+Zn+7P72f8c
f84/15+/1Xq1We1Wx9V5dV3/rnfrw/q4Pq+vm+3md3PYnDfX7X572J625+31
d/e7/z39XnfH3Wl32V33h/1xfzmcD5fD3/F0PB//TtfT3/lyvl7//gP+QtFq

             "], 0.022610393921783267`]}, 
           {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
            DiskBox[1, 0.022610393921783267], 
            DiskBox[2, 0.022610393921783267], 
            DiskBox[3, 0.022610393921783267], 
            DiskBox[4, 0.022610393921783267], 
            DiskBox[5, 0.022610393921783267], 
            DiskBox[6, 0.022610393921783267], 
            DiskBox[7, 0.022610393921783267], 
            DiskBox[8, 0.022610393921783267], 
            DiskBox[9, 0.022610393921783267], 
            DiskBox[10, 0.022610393921783267], 
            DiskBox[11, 0.022610393921783267], 
            DiskBox[12, 0.022610393921783267], 
            DiskBox[13, 0.022610393921783267], 
            DiskBox[14, 0.022610393921783267], 
            DiskBox[15, 0.022610393921783267], 
            DiskBox[16, 0.022610393921783267], 
            DiskBox[17, 0.022610393921783267], 
            DiskBox[18, 0.022610393921783267], 
            DiskBox[19, 0.022610393921783267], 
            DiskBox[20, 0.022610393921783267], 
            DiskBox[21, 0.022610393921783267], 
            DiskBox[22, 0.022610393921783267], 
            DiskBox[23, 0.022610393921783267], 
            DiskBox[24, 0.022610393921783267], 
            DiskBox[25, 0.022610393921783267], 
            DiskBox[26, 0.022610393921783267], 
            DiskBox[27, 0.022610393921783267], 
            DiskBox[28, 0.022610393921783267], 
            DiskBox[29, 0.022610393921783267], 
            DiskBox[30, 0.022610393921783267], 
            DiskBox[31, 0.022610393921783267], 
            DiskBox[32, 0.022610393921783267], 
            DiskBox[33, 0.022610393921783267], 
            DiskBox[34, 0.022610393921783267], 
            DiskBox[35, 0.022610393921783267], 
            DiskBox[36, 0.022610393921783267], 
            DiskBox[37, 0.022610393921783267], 
            DiskBox[38, 0.022610393921783267], 
            DiskBox[39, 0.022610393921783267], 
            DiskBox[40, 0.022610393921783267], 
            DiskBox[41, 0.022610393921783267], 
            DiskBox[42, 0.022610393921783267], 
            DiskBox[43, 0.022610393921783267], 
            DiskBox[44, 0.022610393921783267], 
            DiskBox[45, 0.022610393921783267], 
            DiskBox[46, 0.022610393921783267], 
            DiskBox[47, 0.022610393921783267], 
            DiskBox[48, 0.022610393921783267], 
            DiskBox[49, 0.022610393921783267], 
            DiskBox[50, 0.022610393921783267], 
            DiskBox[51, 0.022610393921783267], 
            DiskBox[52, 0.022610393921783267], 
            DiskBox[53, 0.022610393921783267], 
            DiskBox[54, 0.022610393921783267], 
            DiskBox[55, 0.022610393921783267], 
            DiskBox[56, 0.022610393921783267], 
            DiskBox[57, 0.022610393921783267], 
            DiskBox[58, 0.022610393921783267], 
            DiskBox[59, 0.022610393921783267], 
            DiskBox[60, 0.022610393921783267], 
            DiskBox[61, 0.022610393921783267], 
            DiskBox[62, 0.022610393921783267], 
            DiskBox[63, 0.022610393921783267], 
            DiskBox[64, 0.022610393921783267], 
            DiskBox[65, 0.022610393921783267], 
            DiskBox[66, 0.022610393921783267], 
            DiskBox[67, 0.022610393921783267], 
            DiskBox[68, 0.022610393921783267], 
            DiskBox[69, 0.022610393921783267], 
            DiskBox[70, 0.022610393921783267], 
            DiskBox[71, 0.022610393921783267], 
            DiskBox[72, 0.022610393921783267], 
            DiskBox[73, 0.022610393921783267], 
            DiskBox[74, 0.022610393921783267], 
            DiskBox[75, 0.022610393921783267], 
            DiskBox[76, 0.022610393921783267], 
            DiskBox[77, 0.022610393921783267], 
            DiskBox[78, 0.022610393921783267], 
            DiskBox[79, 0.022610393921783267], 
            DiskBox[80, 0.022610393921783267], 
            DiskBox[81, 0.022610393921783267], 
            DiskBox[82, 0.022610393921783267], 
            DiskBox[83, 0.022610393921783267], 
            DiskBox[84, 0.022610393921783267], 
            DiskBox[85, 0.022610393921783267], 
            DiskBox[86, 0.022610393921783267], 
            DiskBox[87, 0.022610393921783267], 
            DiskBox[88, 0.022610393921783267], 
            DiskBox[89, 0.022610393921783267], 
            DiskBox[90, 0.022610393921783267], 
            DiskBox[91, 0.022610393921783267], 
            DiskBox[92, 0.022610393921783267], 
            DiskBox[93, 0.022610393921783267], 
            DiskBox[94, 0.022610393921783267], 
            DiskBox[95, 0.022610393921783267], 
            DiskBox[96, 0.022610393921783267], 
            DiskBox[97, 0.022610393921783267], 
            DiskBox[98, 0.022610393921783267], 
            DiskBox[99, 0.022610393921783267], 
            DiskBox[100, 0.022610393921783267], 
            DiskBox[101, 0.022610393921783267], 
            DiskBox[102, 0.022610393921783267], 
            DiskBox[103, 0.022610393921783267], 
            DiskBox[104, 0.022610393921783267], 
            DiskBox[105, 0.022610393921783267], 
            DiskBox[106, 0.022610393921783267], 
            DiskBox[107, 0.022610393921783267], 
            DiskBox[108, 0.022610393921783267], 
            DiskBox[109, 0.022610393921783267], 
            DiskBox[110, 0.022610393921783267], 
            DiskBox[111, 0.022610393921783267], 
            DiskBox[112, 0.022610393921783267], 
            DiskBox[113, 0.022610393921783267], 
            DiskBox[114, 0.022610393921783267], 
            DiskBox[115, 0.022610393921783267], 
            DiskBox[116, 0.022610393921783267], 
            DiskBox[117, 0.022610393921783267], 
            DiskBox[118, 0.022610393921783267], 
            DiskBox[119, 0.022610393921783267], 
            DiskBox[120, 0.022610393921783267], 
            DiskBox[121, 0.022610393921783267], 
            DiskBox[122, 0.022610393921783267], 
            DiskBox[123, 0.022610393921783267], 
            DiskBox[124, 0.022610393921783267], 
            DiskBox[125, 0.022610393921783267], 
            DiskBox[126, 0.022610393921783267], 
            DiskBox[127, 0.022610393921783267], 
            DiskBox[128, 0.022610393921783267], 
            DiskBox[129, 0.022610393921783267], 
            DiskBox[130, 0.022610393921783267], 
            DiskBox[131, 0.022610393921783267], 
            DiskBox[132, 0.022610393921783267], 
            DiskBox[133, 0.022610393921783267], 
            DiskBox[134, 0.022610393921783267], 
            DiskBox[135, 0.022610393921783267], 
            DiskBox[136, 0.022610393921783267], 
            DiskBox[137, 0.022610393921783267]}}]],
        MouseAppearanceTag["NetworkGraphics"]],
       AllowKernelInitialization->False]],
     DefaultBaseStyle->{
      "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
     FormatType->TraditionalForm,
     FrameTicks->None,
     ImageCache->GraphicsData["CompressedBitmap", "\<\
eJysvWuMZdl1HnbdVdXV1fXqenR39bu6Z+bc7p5+zPTMcIZNzjT14JA6584o
oihFIinJlERxyPEjpihIcZyco5ehyAYlxLFixE4CWbBgK1b+JD+TAImRH3kA
sQAG+RPAsh0ocIBIkRhSL06f3Hv2Xuv7vrVPVfcoGWCquu7jnL3X41vfWmvv
fd767Jff+dxf/OyXv/Ajnz382Jc++2+884Uf+fHDN//yl+YvLf25yeTP3Vn8
fzhZnv+7n0yKH3cnkz/Lv78y/Fy5P//xE/P/fzn/fmXx6onhvfXR9+b/jb7+
N9N7PzP8fO79fPVH5///93v7537v+Rc+8M3Xv/2t37v70gf/x/1zF750zHv/
6JjvHDnEn0/v/VvDzwdHDfH93PKr27t7/3xnd7//zu/7kf4//I3/pv+1/+J/
6v/eP/4n/Xd/5p2v7p09+OrW9pnivW+ffe//s7t/MPadxX1+7pipjY25TcP+
ieHnxfcj4L+RXx8bydfno+8fvfm2vP7iB15/fPPOg8VrS4sXJ8uLlx/fefDw
8bkLV/HyUv+Zz/14f+vey4uXJum1s4uP/tHdBw9/9/TGztgd/9n6xuZXd/fO
vi+V/lR678vDz+2xiR6non+5vrH99Zt3eJhLw3v3HjxcvO+vNZ/4gf7ho4/n
OafX3vj2t/sLlw/zX+nn29/7w/3Dj5SfW6gb99jvu6/8an9w6dr/XyaQRfSX
h5+b8RPff5Sa5+r85s3nHxSzX+jyg48+PlmhGXzs7e8f/jqRX/vsu3+1v33/
lf5Xfv2/nJgtLK59+4XX+nMXry1eF1u4+xJ9dCl99P6r/eEzN11Qf/6LP9U/
P78khrM9DOfuS6+/t7Fz/n3bzF9JUvlLw89TY7bxz3f3z33j7PlLbLljqn7u
1r1+eqecwfxSZCbn+5/55V+bC+9KP/vkDy0+O4z07/zD/3oY+bmrt/qdg2eL
976t+WS/e/bi6Hf2L97or1f35L71d31m1BTVxDYXJvb4GBP71Jg3/YUksXeG
n1tjlnb3GMjoL197pv/pX/r7S0eayO3hK8/eftDvnL82OuO985f7Nz76VvH6
9tkr/f6laX/z/mv9Bz/yHf2t+e+zV+/0B/fe7g9e+MTw7/je9tUHo6/vV986
/I73v//yh+ZafsCm+3RmemohgW9cvHrjX5zZ3R8zxXeTXD8//Fw7Co7/8fz1
37t1dxyNvutTP5Zfe/VYMzt/eK/fn37buECujAvk/N23++sf+Qvz37N+75nX
+/N3Zv3hG1/sq6brq7rFe8++Pvy+Pn9vOn/v8JG+fvjoi8PnL4woZPfCc/3u
wfU/k5mbSf/1f/8fDjb2fkz6x5Lof/h9QuP8kt/cP7g2x56HGQafm3vZW/31
526N2ObVfu8I26zqLonvThbtQkxvvKviyyK/nl+fNu3wvWr+ezr/PZ2LdHht
+B9/z9+bw/H8rxOLr00u5Df0C8VN5joa089TOobr59M/+qUQ4Acv+JNLV5/5
nTN7o5Hrc0kVnz0aj3/79MbmN6bPvxgIRn/nwYeGoOSeuemxZmPnoBT8wp4f
JaHv+rzfnY9zIae1LLzWhb349yDshb2n1+ZKX4h3NX1uUIIIfrjSQvhdEv7K
oDH/YL7I0uIr87hQ1fkm+ffhI7WIQfPz770fx6lu3x+C9PL/B+f480kjnxl+
bjy1cywo4PzWKzlGL6LP2ubekXB06aXvS7M1+HiUZjuXRrLfuZwqmO58Rouf
KxB1lmiVJDqX9pK8ZmqoW3sjiTmLfy3rtEsqyv5RkQ3YQLq5qqZkBxgU6T7b
TImJ746qb3P3Yn/z7itP5Tt3Xvzg/35qfWPMd34oaerT74/L/MDnv9wvAgpu
vpF4y9yfNi/dHQWBBWol6Q5ocyIbcuWYMtj94Ecuw7ol809Ky+CVFJaUc9qc
C/+7QuiLCc/aQRedD2Vq+qhJNzZMG5vpdZb1NMvfXfzt/168boa37Ti5+Mz1
EM8uv/KpUTw011vJulsEhhvV82Nut3CzH0y6+1SK/sczqKsDg8rK2u1/8e/8
Zn/xynjUPH94tz/88DujlsgRIGNUOzlJ2NSRLrJ6VhA7aveXLKdV4KPLWnQ8
/8w6+QdUWkGt0KV5arr4SVEyHDDFtRMwI7todtYzWeGdD45uMPw9xgzJISOV
/54ffDdLfnWhkd+fJ6tfGYPNpMnJ9w4/VyNs/sL8/9+9Oc93jqdxa8NtLx9W
AxceC2FwtdMSooB9CkvZc7olU1kMcbVIsGmHUNiVavPrpijmHKMVNdjgdil2
RqKCi1roY7evGhvU8PpgEhRJAdHmrjuFiUbaevmVT4+67MJhLl290f/83/r1
HDHn8rl1/5u756587fkXXi1yx+9PKv6epOIxvP2dU2vr33ztjTczCmweSQ8X
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
79Wn//vs3/r/APrLbFw=\
\>"]]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"Paley\"\>", ",", "149"}], "}"}], "\[Rule]", 
    GraphicsBox[
     NamespaceBox["NetworkGraphics",
      DynamicModuleBox[{Typeset`graph = HoldComplete[
        Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 
         19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 
         36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 
         53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 
         70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 
         87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 
         103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116,
          117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 
         130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143,
          144, 145, 146, 147, 148, 149}, {Null, 
          SparseArray[Automatic, {149, 149}, 0, {1, {CompressedData["
1:eJwl0WtEHQAAhuF3Xc6qnS47tda631ZnbTKTmUwymUySJJmZySQzLUkySSZJ
kiSZJJmZyWQmSZJJJpNMMjPJJDOZmclMJnvZx/Pr+/nmNT+qbzsBTPB/tzSu
XYU9OrSsQATUaVL7Ko2Ebq0qGAWNmtGByqKhV+sKBeCOXuinyk9CvzaVFgPN
eqXfqoyFIW0rOw5a9UZ/dfMUjOqzCoPQpkVFxEONJvRFJQnQqRXFJEK9pvRV
l5PgsdaUcBqa9EzfdTUEfXqvlGS4q5f6pespMKAPSj8D9zWnP7qRCsP6qNyz
8EDzOlZ1GoxpR0XnoF1LikqHWj3Vni5lQJfeKi4TGjStb7qSBT16p6RsuK3n
+qFrOfBEG0rNhXua1aEq8mBQW8rMhxa91pGqCmBEn5RfCA+1IM7bX+PaVbjI
/lpWoNj+mtS+SsP216qCF+yvGR2orMT+WlfoIvwDP4NX5Q==
             "], CompressedData["
1:eJw1WldbVVsQu6J06b13FRERERERARERkN5FRECk99577yj/9yaZdZ5449sr
M5NJMidtYLplwOu///4Lz/nvvwf46/XIxy/gcXBoeGR0bHxicmp65pNnz1+8
fPX6zdt37z98LP/0+cvX2m8NTS1tHV3ff/z8NfD7z8jYxNTM3MLSytrG1s7e
wdHJ2cXVzd2/Bw+9ff38Ax8HhYSGR8TExiclp2Y+zca/KsR/Kv1YVvm1tq6h
sam5tfN778++X/0DQ8Mjo2PjE5PzC4vLK6trm1vbO/tHxycXN17evoEh4VHR
MfGJSanpGZlPnmbn8JMK3hTim0orPlVWfan+Wlvf0Nre0dn9/Ufv76Hh6ZnZ
ufnljc29/cOjs/OLq+ubu7//7h94+/oHBAYFh4SFR0bFxSempKY/yc7BvyrC
Pyorr6iq/Vbf1NzS2t79g180+HtYXzQ1vbi0vLq2vrG9s7t3eHJ6dnXn9fCR
r39QWGRMbFxickp6ZtaTZ9k5ucSp8G0RgCqr/FxV/bWm9ltjU3tnV3fPj599
f4ZH8U0Li6tb2weHeNfl1c3tHb7J10AKi4iMjklITE5Lz3yWk4t/VIx/g7dV
f2tobGlta+/s+ckvGvozqi+amQVI6xubW7t7+wfHeOLNP3yTt49/YEhEdFx8
QnJqGoB69jwnN4/FK3pXjOpVAKia2rpvDc0tAKqn9+ev/pHRcXzT0vL6zu7R
MV4moB54+RtKEVHRsXGoHEB/npuH/1OC/4Kn1TQ0NbcR7d5f/KThkXF90tw8
UFLhDg6PTvHCOy98kq9fYFBYVGyCqgecnr/IzctnQxW/L0FHVQKnum/1DU2t
bcCpt+/XwODY+CQ+aWUV5Ts5xdOE06NAQykKzZSAygHyF3n5+Del+Cd4WF1T
S2sHse4b4BeNjk3qixYWgZIKh2Y6x/uIE77JPyAoJCIGbcnqAacXL/PyC9jl
JR9K0eZVwKke/dnS3gGc+voHfg9NTE6zMddRvrNzvI04+QQZSjHopiSUDoi/
zC/AfynD/8DD6lva2rsIdf9va+9pfdLSMlBS5dBNl3gfccInBT4OCYuKQ1+y
eMDp5av8As7LBwwMRq8aOGFkWto6u4BT/+DvP8NT07PszE1U7+ISjwNOfiGG
Uhy6KQWVA+CvCjgqFfgXeFZjW0fndyI9+Mfae1ZftLIKlFQ4dNM1Xmc44ZuC
gsMiYhLQmawecMLoFXJiPmJkwAc1wAlD09bR/R04DQ79GRmdmZ1nb26jfFfX
t3fAKSDMUEpAN6WhdMD7dSEnpRL/Ac9q7ujq/kGgh0asv+f1SWvruxxhVA7d
dPvv3mDCF4WERkTFJaExWTvAhMEr4sSUY2RAUXVkFnRoV88PwARqGRufm19k
a+6ieDe3rN3DR36PIwynJPRTBmoHwN8UcVKqvpBQGlu7vveQnAaHx6zBRU14
2j5HGKVDP/31MpTwSWHhUTEJKehM1o4E9baomBPzCSMD2qwntaBFQXhACdwy
MQmuY2/uo3h3f1E7b5+A4CiDKQXtlIXaAe63xRwUcBzopLkdDEdyGhqdsAYX
NeFphxxglA7tdI+3CSZ8UkRkTFxSGjqTpSM/vSsu4ch8xsyAyhvJLWhRMB4Z
eHxiahpkx948RO3QTw/xvMehMYZSGukXtQPe70o4J6A4sElrJwiO7DQ8PmUN
Lm7C0445wCid+gmvE074pqjouISUDPQmi0d+el9SypkBk9dgvzSLykGb/QPk
4MmpmVnQHbvzGNV74OWN5wWHxxlMGWRflA54vy/lnIDhwCbt3eA3stPo5Ix1
uLgJTzvl/KJy7Cc8TjDhi2JiE5LSstCarB3p6UNpGWcGPF6HldcqIgdpDv4m
B0/PzM2D7dicpyge+8kXzwuNTDCcssi+KB4A/1DGOQHFgU06e0Bw5Kfx6Tlr
cbETnnbOAUbtfLCkDCR8UVx8UkrGUzQmS0dy+lhWwZEBi9djC7eLxsGZQ39I
wbNzC4tgO7bmuWrHjYD3hUcnGU5Pyb4oHvD+WMFBAcOBTbp7wW/kp8nZBetw
sRPedsn5Ze24yw0mfFNCYkpaVjZak6UjO5VXVHJkQOONkAad4nFw5vAISXh+
YWkZdMfmvGTtuBHwwMjYFIOJ6zwPxQPg5ZUcFDAcyKSnD/xGgpqeX7IWFz3h
cdccYNSOu9xgwhclJadlPM1BZ7J05CboAo4MRQbUSrdYHJQ5OkYOXlxaWQXd
sTevrXbcCHhgdHya4cR1no/iAfJPVZwUMBzopLcf/EaGml1csR4XP+FxwAm1
4y43kPBFKakZWdm5r6RUSshNUAWcGIoMCKgekTgIc3xiVrJnbR1sx9a8dbXj
RsALYxMzDCdu84IiCqjyz9UcFFAc9dMgCI4ENb+8Zj0uesLrgBNKx11uKOGT
0tKznubkvZZQKSU3QRRwYqgyIOp6xeFgzMmpeemejU2QHTuTOKl43Ah4Y3xy
luHEdV5YTAn16UsNRwUcRwU1BIYjRS2ubliPi6DwvnuUjrvcUMIXZUAb5ua/
kUwpIzVBE3BeKDKgM/vE4SDM6ZlF6Z6tbZDdrTTdQ84waseVgDcmpj41nLjN
i0qooT5/reOsgOMooYbBcKSo5fUt63ERFN7n9RDF4zI3mPBNWVCHeQVvpVMq
SE3QBBwYygyI336ROBhzdm5ZwmdnF2wnnckZRum4EfDG5PRsQ4nLvLiUEupL
bT0nBQxHBTUKfiNDrW7uWIuLn/A+ajpUj+vcgMI3PYU+zC98J51SSXKCKODE
UGdAkQ+KxcGY8wurkj57+6A76Eyp8WAtBLwwNTPHQOIqLymjhPr6rZGTAoaj
ghoHv5Gf1rf3rMHFTuwnajqUj+vccMInZUMfFhS9l06pIjtBE3BgKDTgEoZE
4qDMxaV1SZ+DQ7Ad+sn0eKgWAl6Y/iTXYOIyh7SHhqptaOasgOMooSbBcCSo
zd0D63DR0z3b0h/F4zI3lPBFOdCHhcUfpFKqyU3QBJwX6gwYl2GROChzeWVT
0ufoGGRHLvA2RR6ulYAnZj7LM6C4zSHtoaK+NbVyWMBxFFHTYDgy1Pb+kXU4
+YldGYjScZkbSPiiXMjDopKPUik15CZIAk4LVQa81KhIHIS5urYt5XNyCq7T
N/n4miSP1FLAI588zzeguM4h7SGjGlraOS5gOaqoWXAcGWr38MRa/O89uzII
leMuN5DwRXmQh8Wl5RIpdeQmKAIOC1UG7N24KByEub6xK91zdk6tok/y8zdN
Hq2dgFc+e1FgOHGbV8qWNbV1clpAcxRR8yA5MtT+8Zn1+P1DtmUISsddbijh
k/IhD0vKPkmk1JObIAg4LVQZsJyT4nAw5ubWvoTPxSW5QJ8UEGiaPFZLAc98
/rLQYOI6r5Ira+no5rCA5qiiFkFyJKjD0wtrchAd2zIMxeMuN5zwTQWQh6UV
nyVSGslOkAScF8oM+OBpZ15Bd4dSPlfocdET3miiPF5bAc988arIYOI+r5Yp
a+vq4bCA56ZkX7e2SVDH55JP1CpsyggUj6vcYKILhjwsq/wikdJMboIk4LRQ
ZMCazzrzCrY7lvC5UY+LoPBGU+WJWgt45svXxYYT93mNXFnH916OC3huRvZ1
Z5cUdXpJ/QSeY0tGoXbc5AYSPTDUYUXVV4mUVjITBAFnhRpjCsTizCvY7lSy
5871uCgKrzRVnqzFgIe+elNiQHGj18mVdf3o48CA5+ZkX/cYFpyeX9/dg+fY
kTGoHPe4gUQHDHFYWV0ridJOYoIg4KRQYsyAVpx3BdudS/X88/S4GArPNFme
qr2Al75+W2o4caXXy5V9/9nPiQHPLci+HjAtOL+8RT+B59iScagdF7nBRAsM
cVhV800ipZPUBEnAUaHEmAOtOPcKtru8Nt/i7dyrtH2UyfJ0rQU89c27MoOJ
K71RpuzHr0FODIhuSe71iHHB5fVfeE7QHFsyAcXjHjec6IAhDqvrGqRSuslN
kAQcFUqMBbCKc68gO9IvfIuvM69S9jGmyjO1FfDQt+8rDCWu9GaZsp8DQ5wX
EN2KzOsJ04Lr23taTrAcOzIJ1eMeN5jogCEOa+qbpFJ6SE7QBBwVKowlsIqz
r+C6W+kCH3/nXSXt40yUP9FawEPffag0lLjRW2XKfv0e5sCA6dbkXc8YF9z+
pejx8wfNsSNTUD1ucsOJDhjisK6xRTqll+wETcBRocRYAa04/wqyA07efoHO
u0raJ5gmf6a1gHe+/1hlKHGft8uTDfwZ5cCA6DbkXS+YFvy9l+gJCATNsSPT
UD2ucsOJFhjisL65TTKlj+QEScBJocZYA604+wqyA06+AUHOu0rZJ5kmf669
gGd+KK82lLjPO2XJfo+Mc2LAc1vyrlfX0gVSPY+DQHPsyAxUj5vcYKIFhjZs
bO2QSuknO0EScFIoMjbAKs6/XjEveOjt/zjEmVdp+xTT5C+0GPDOj59qDCdu
9G6Zsj9jk5wYMN2OzOvNLXSBVE9wCEiOHZmF2nGPG0p0wJCGze1dEimDZCdI
Ag4KJcYWOMXZ1xvLC7x9A4PDnHmVuk8zUf5SiwEPLf9cZ0Bxp/fIlo1MTHNk
wHV7Mq/QdBZChoaB49iRT1E7rnFDiQYY2tBiUboyCsxpeqgVKowdcIqzr3fK
C3z9g0IjnHmVuM8wSf5KiwEP/fSl3mBSNipTNjY1y4kB1x3IvFLTeaJacBxb
Mhu14xo3mOiAIQ4tF6Uro76cpYlao8DYA6c490qcyE+W2Mq+St5nmSZ/rdWA
l37+2mgwKRuVLZuYmefEgOuOZF9BdJ6sFhzHlsxB8bjGDSZaYGhDC0Zpyqgv
5+miNigwDkAqzr0+ANWRoCywlXuVun9qovyNdgNe+qW22XBSNCpfNjW3yIkB
11FD3XqB6TxhLUiOHZmL4nGNG0x0wJCGFozSlFFgLtJFbVFgHIFUzL0+ANOR
nyyulXuVts82Uf5WmwEP/fqt1VBSMipbNrOwzIEB1VFC0SOA6jxpLViOHZmH
6nGNG070wJCGFo3SlFFiLtNH7VBhnIBWxOPgOfKTpbVyr5L2OSbJ32kx4J21
De0GknJR2bK5pVUODIiOCkoeAVzniWtBc2zJfFSPW9xwogmGNLRolKaMGnOV
NmqPAuMMtCIeB8+RnyyslXuVts81Rf5eiwHP/NbUaSgpF5UrW1hZ58CA6K7k
pbg5QXaevBY8x5YsQPm4xg0numBoQwtHacsoMtdpow4oMC6u6M29QXNkJ8tq
5V6l7fNMj3/QWsArG1q6DSWlovJkS2ubnBfw3I15Ka5OcJ0nsAXNsSULUT2u
ccOJNhja0MJR+jJqzE3aqCMKjCvTT74gOrKTZbVyr1L3+SbIP2ov4JVNbT0G
k3JRmbKVjW0ODJju7t6ZVzCdJ68FybEli1A8rnFDiSYYytCiUboyasxt2qgT
6osbp5/8QXSkJwtrZV6l7gtMkJdrL+CVLR29hpNyUbmyta1dDgyYDvrJ2Vdw
nSevBc2xKYtRPO5xg4kmGMrQwlG6MqrMXRqpMyqMO9NPgSA6spOFtTKvEveF
Jsg/aTHgmW1dfQaTclHZso2dfc4LmA6k4twrqM4T2ILl2JQlKB4XueFEEwxl
aOEoTRll5j6dFC9Tt+Qn2ddIhgUJFtbKvUrdF5ke/6zFgFd2fO83mBSLypdt
7R1yXuBbwCrOvILqPIEtWI5dWYrqcZEbTHTBUIYWjtKUUWUe0kldWdZDVoF/
jWZakGRZreyr5H2xyfEvWgx4ZdePQYNJuah82c7BMcfl/hFYxVlXUJ0nrwXL
sSfLUDuucUPJHQItGqUno8g8po+6cVkPWQUGNpZhQYqFtfKv0vcl7haoxYBX
fv85ZDApGJUt2zs65bhgSYFWnHcF2XnyWvAcm7ICxeMaN5jcKdCyUZoyqsxT
Oqk7ZT3kFPjXeEYFaRbWyr5K3Ze6S6D2Al7549ewoaRYVLbs4OT8Uj2OLQVi
ceYVbOcJbEF07MpKVI+L3IByx0ALR2nKqDLP6aXQT+C5x7KviUwKMiyrlXuV
ui9zh0CtBTzy58CooaRcVL7s6OzyWj2ONQVeceYVdOcJbMF07MoqlI973HBy
x0DLRunJqDIvr6ULHoHnguVfk5kUZFlYK/sqdV/hDoFaC3jjr9/jBpOCURmz
k4vrW/U49hR4xXlXsJ0nrwXRsSurUT3ucYPJXQMtG6Un00VYXuqRD4guVAY2
lUnBU0tr5V8l7ivdHVBbAW8c+DNpMCkYlS87u4JHeKTzXbBu3RKHYDtPXgui
Y1fWoHhc5AaTuwZaNEpPpoMwvZSPH2guXAY2nUFBtoW18q/S9lXuDKilgCf+
Hpk2lBSMypZd3NAj+Oh6F6pjt9Qh2M4T14Lo2JZ1KB43ucHkzoEWjdKU6R5M
L+UXAJqLlH/NZE6QY2mt7Ku0fbW7Amor4Il/xmYNJeWismVXd/QIfjrfheva
LXEItvPEtSA6tmU9isdNbjC5c6BlozRldg9+yGEBzUXLvz5hTJBrYa3sq8R9
jTsDaingiSMT8waTYlG5Mt6D6aV0v4vUuVvqEHTnCWzBdOzLRlSPu9xwcudA
S0dpy6QzvTks4LlY+ddnjAnyLKuVfZW4r3NnQC0FPHFsatFgUiwqV8Z7ML2U
7nfRundLHoLuPIktmI592YzqcZUbTu4eaOEobRl1pi9nBSwXL/f6nClBvkW1
Mq/S9vXuCqidgAdOzCwbSopFZcrsHkw3pftdrA7eEoggPE9iC65jZ7aifNzl
hpM7CFo4eqV95+PPWQHJJcq9vmBMUGBZrcyrtH2jOwJqKeCBU3OrhpJyUbky
u5vTTemAF6+LtwQiCM8T2ILr2JntqB53ueHkDoKWjUo/PfIL5KyA5JLlXl8y
Jii0sFbmVdq+2V0BtRPwvpmFdYNJwShdmV3NaaZ0wEvUwVsCEXzniWtBdWzM
ThSPq9xQcudAi0ZNP/kEBHFWQHKpsq+vmBMUWVor9ypp3+rOgFoJeN/c0qbB
pGBUtbO7Od2UDnjJOnhLIILwPHktuI6d2Y3icZcbTO4eaNmo9JPf4xCOCkgu
Xfb1NXOCYktr5V4l7dvdFVArAQ9cWNk2mJSLqnZ2N6eb0gUvVRdvCUQwniev
BdmxNXtQPO5yw8ndAy0blX4KCA7jqIDkMmVf3zAmKLGwVu5Vyr7TnQG1EvC+
pbVdg0nBKGtnZ3N6KV3w0nXwlj4E4XniWnAdO7MXxeMuN5TcNdCS0QdyZY9D
IzgpILknsq9vmRKUWlor9ypl3+3ugFoJeN/Kxr7BpGRUtbOzOc2UTniZunhL
IILxPHEtyI6t2YficZkbTO4cyGT0gUxZcHgUBwUU90zu9R1TgjJLa2Vepex7
3BlQGwHvW9s6NJSUjEqqBNrdnF5KN7wnOnhLIILxPGktyE4/8ELxuMwNJ3cN
vGQ/PZQpC42M4aiA457Lvb5nSlBhea3Mq5R9rzsEaiXgfRs7xwYTtrmXpEqQ
Hc7ppXTCe6aDtwQiKM+T1oLt9AsvVI/L3GBy10DegyntIaDCo+M4KaC4F3Kv
H5gSVFpcK/MqZd/n7oDaCHjf1t6p4fT3/pGUSoidzemldMB7rnu3BCIYzxPW
guz0Cy/UjsvcUHLXQN2DKe0hoCJjEzgpoLiXMq8fGRNUWVwr7ypl3+/OgNoI
eN/OwbnBdK9glK5MF2FaKR3wXujcLYEIxvOktSA7/cILteMyN5TcOdDuwRT3
UFDR8UmcFf4yT+61nEFBteW1Mq/S9oPuDqiNgBfuHV0KJwWjNGW6CNNJ6YD3
Utdu6UMQniesBdfpF14oHXe5oeSOge4eTG0PCRWbmMJR4Q/zZF8/MSiosbhW
7lXSfsgdArUR8MKDk2vhpGCUpkwHYTopXfBe6dgtfQjC86S14Dr9wgu14y43
lNwt0O7m/tL20FDxyWmcFf4wT/b1M6OCOstr5V4l7YfdKVA7AW88OoM6tFg0
Ur+FxMzRSemC91q3bulD8J0nrAXV6RdeKB13uaHkLoHubh4obQ8NlZiawVnh
D/NkX78wKai3vFbuVdJ+1N0CtRLwxpML6ExLRaP1U0jMHI2ULnhvdOyWPgTf
ebJaUJ1+4YXacZcbSnYJfGAwKRyVLUtOz+Kw8Hd5sq9fmRQ0WmAr9yppP+5u
gVoJeOTZFXSmxaKx+iUkho4+Sge8t7p2Sx+C8DxRLbhOP/BC7bjLDSZdAv8H
tHSg4Q==
             "]}, Pattern}]}, {
         VertexCoordinates -> {{0.999111, 0.0421565}, {0.996446, 0.0842381}, {
            0.992009, 0.12617}, {0.977854, 0.209286}, {0.928842, 0.370476}, {
            0.753864, 0.657031}, {0.178261, 0.983983}, {-0.920825, 
            0.389976}, {
            0.664942, -0.746895}, {-0.157476, -0.987523}, {-0.936446, 
            0.350811}, {0.725495, -0.688227}, {
            0.0105421, -0.999944}, {-0.999778, 0.021083}, {
            0.996446, -0.0842381}, {0.977854, -0.209286}, {
            0.894332, -0.447403}, {
            0.565392, -0.824822}, {-0.399662, -0.916663}, {-0.649047, 
            0.760748}, {-0.198966, -0.980006}, {-0.903566, 0.428448}, {
            0.599661, -0.800254}, {-0.321023, -0.947071}, {-0.767548, 
            0.640991}, {0.136621, -0.990623}, {-0.973225, -0.229856}, {
            0.912398, 0.409303}, {0.695837, 0.7182}, {0.0105421, 
            0.999944}, {-0.998, 0.0632114}, {0.985808, -0.167877}, {
            0.928842, -0.370476}, {
            0.695837, -0.7182}, {-0.0737288, -0.997278}, {-0.982049, 
            0.188624}, {0.912398, -0.409303}, {
            0.632864, -0.774263}, {-0.240103, -0.970747}, {-0.864263, 
            0.50304}, {0.456806, -0.889566}, {-0.6164, -0.787433}, {-0.198966,
             0.980006}, {-0.936446, -0.350811}, {0.780892, 0.624667}, {
            0.260516, 0.96547}, {-0.842288, 0.539027}, {
            0.380247, -0.924885}, {-0.739844, -0.672779}, {0.136621, 
            0.990623}, {-0.950403, 0.311022}, {0.780892, -0.624667}, {
            0.178261, -0.983983}, {-0.950403, -0.311022}, {0.830737, 
            0.556665}, {0.418899, 0.908033}, {-0.6164, 
            0.787433}, {-0.280813, -0.959763}, {-0.818816, 0.574056}, {
            0.300985, -0.953629}, {-0.842288, -0.539027}, {0.456806, 
            0.889566}, {-0.547877, 
            0.836559}, {-0.43795, -0.898999}, {-0.582656, 
            0.812719}, {-0.360663, -0.932696}, {-0.710824, 
            0.70337}, {-0.0316215, -0.9995}, {-0.994448, 0.105227}, {
            0.968162, -0.250323}, {0.853465, -0.52115}, {
            0.418899, -0.908033}, {-0.680541, -0.73271}, {-0.0316215, 
            0.9995}, {-0.999778, -0.021083}, {1., 0}, {
            0.999111, -0.0421565}, {0.992009, -0.12617}, {
            0.956749, -0.290915}, {0.806531, -0.591192}, {
            0.260516, -0.96547}, {-0.884701, -0.466159}, {0.599661, 
            0.800254}, {-0.240103, 0.970747}, {-0.903566, -0.428448}, {
            0.664942, 0.746895}, {-0.0737288, 
            0.997278}, {-0.994448, -0.105227}, {0.985808, 0.167877}, {
            0.956749, 0.290915}, {0.853465, 0.52115}, {0.493901, 
            0.869518}, {-0.475459, 
            0.879738}, {-0.582656, -0.812719}, {-0.280813, 
            0.959763}, {-0.864263, -0.50304}, {0.530118, 
            0.847924}, {-0.399662, 0.916663}, {-0.710824, -0.70337}, {
            0.0526869, 0.998611}, {-0.989128, 0.147056}, {
            0.943634, -0.33099}, {0.753864, -0.657031}, {
            0.094738, -0.995502}, {-0.989128, -0.147056}, {0.968162, 
            0.250323}, {0.894332, 0.447403}, {0.632864, 0.774263}, {-0.157476,
             0.987523}, {-0.96267, -0.270679}, {0.874676, 0.484707}, {
            0.565392, 0.824822}, {-0.321023, 
            0.947071}, {-0.818816, -0.574056}, {0.380247, 
            0.924885}, {-0.680541, 
            0.73271}, {-0.115705, -0.993284}, {-0.96267, 0.270679}, {
            0.830737, -0.556665}, {
            0.340919, -0.940093}, {-0.793888, -0.608064}, {0.300985, 
            0.953629}, {-0.793888, 0.608064}, {
            0.219583, -0.975594}, {-0.920825, -0.389976}, {0.725495, 
            0.688227}, {0.094738, 0.995502}, {-0.973225, 0.229856}, {
            0.874676, -0.484707}, {
            0.493901, -0.869518}, {-0.547877, -0.836559}, {-0.360663, 
            0.932696}, {-0.767548, -0.640991}, {0.219583, 
            0.975594}, {-0.884701, 0.466159}, {
            0.530118, -0.847924}, {-0.475459, -0.879738}, {-0.512123, 
            0.858912}, {-0.512123, -0.858912}, {-0.43795, 
            0.898999}, {-0.649047, -0.760748}, {-0.115705, 
            0.993284}, {-0.982049, -0.188624}, {0.943634, 0.33099}, {0.806531,
             0.591192}, {0.340919, 0.940093}, {-0.739844, 0.672779}, {
            0.0526869, -0.998611}, {-0.998, -0.0632114}}}]]}, 
       TagBox[GraphicsGroupBox[GraphicsComplexBox[CompressedData["
1:eJxdVXs0VHkcH++z2kq1Yjkq26R2lylEtlZfUWpZ2Ui0S6hESw+7dcyeVZ1V
tN5Oml4eyeaRSmhtpdqvN1PCjCR6YBjDvO6E0A5Z29m/vr9z7rnnnnvv7/f9
fr6fh/nuQ14hmiwWizdz/XfXC6i+cmeCgYSbOfvjeXng7t9wVyRiYKgqvSkn
rRyWNScUxv/NwAN4fX2HRSVUhDVyz7oxYBVQZS/iP4L+Z1dfzL+nAKfJyfGe
8g6ANatDChYPQvA1Tk+IrhiWHEvP3yCoB47jJSk/moGKroSpkCgFlu1NEQe8
fQ7mZ8cjV28WgxVX4Js2IMHctpGDlitqMe/0lXb+RQYD9edeChhXYLRSW33r
52dg+aWH24Y1EuBZLr8yqjOAG8I7y43Px4JextrUhGkGN28vPMh5z+CsDA1O
4zke7QdJ/egRy2XvypZDWNQWa6fclyg5fHOsxEgE54uDTN/slWLy7FfyuWc7
UfO35qsePgpcxhbav6/tx1pp6qqP/QbBWj+m4U4UH8WbJxPs/BlM7+Wu15LK
ke+r+Xlp+AtY+O6tS8SqPviiscW1OGMI14nSZl9NfIr2xSc6QrcqsS2uRliZ
OognJypTpmP6YaP1L1pN0VWg635UY+VtBuP426sK2Qy66of0ysKfIHs4wC3A
RgFhA3w7HZsuuGD8eNR94wCwz0+nHVcPAMEDdsyxKstiGBybvu95mVMC33pr
OzxMZGDfgiC/99F1SOaHZD/Mmqhj9XeXoW1+UPLtIQaDvnLWHY5gcG9L9uOn
7EYg9WC6SRcrwqkffIxUNjX1g+g14jNcer8Z9xnaa/kbMGh/RrtXv1CGs1PO
+EqMe0B9tGCd59evQLHpTzPvKDnOYq84nnSvD522dZbk2wwhwRcIH9C20N5h
3tQghB+fzNs01QfbInQ83G+0Qm5mmK+5WAnmuhVjOqNS7LQwTC6HXlj9YOfJ
cZ/nsHsk8kDhBQUK47W9n9yQ4FaVR1voaTES/OFD3/uV+GM8T9AoaQNyHhJ+
I/ke9bjC6hCeFIqOrV1k29oLrsz2SseWLtij/8whY44CSL/gXyRc2DEhwOvL
zMRBfynRwLw486GtFBO9nEuKdonANkF8bodLG9QlqcaWnFIi6Q8JnqAZXOBn
93sv2vM2BRvVSWFksfBQoN5L7A3UTr5YK8cTHBObRXkiPNJS4fpYQwrtbK6L
iWEHOsUu3ZL3XIGyBot383AAay8GPtGIGQDtw7e5paty8JxLYoREzWCzV1nm
KeFM35MFpitUFVD7g6Sbo1bCnjcZ1W46raihHnzK85RBk5Jf43yzB0n/KOB7
yabqxWjMVTr6/yRBsj8QPSPrw1IB6/9F/AuJX6EieOUnJVlKWJxVMbwzW4g1
9+I+NWkZgjptu+hZMhESvuDMblyupxxvmDIpSe2vkOgXCJ+B6B2JnwHRDxC8
kOgRSL1A8IMDSVmq+ZndoDvv2n6jNhmM3BLzZAdeY19S8NZWCzmQeSLhExD9
YeT1JTMM6gH+o5UnrT+TAfE7IPNH7zddrIZ3RZCV4zHn8igDDl2RNUw+g2Zm
vkvvC6tBfMFSCTZK0AzxLlZx2pHkAZqvL5kh+104tOUPzeUvGCT/I+EPEH8G
4i9A8gIkfV3fWTcrUVpqpdXsJUCHBW2xflMymDT5JuawTjcQfwfix0D0hsQv
gPAVjgjV9R3ZDzH019E4dSOD5Hwg+sePIsXyLEE7+H7vKnU0VOK1f3jNp0OH
MHF6Xa7z0T4k+gbyHqZmXNrdtAnGU2MHDRwYJHmKJB+B4A0kT4Dgg4RfSPwD
iT8AyS8k9QHRExC+IeEvDqkM6j339GB3Qu2MQmVAnpH4F5A8RjIPIHmFhJ9A
/ADIfIDkAxD+I8lX/Bc60x+9
          "], {
           {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
            ArrowBox[CompressedData["
1:eJwVxWdbMQoAANA3I4UQGWWEEjIiKSNkS8qubBmhjEpWSFY2of7vfe75cmiR
nCMC+Pfv3wD779//rwBWQCurK2sr0BX4CmIFtYJe2VrBrRBWdlZIK5QV6gp9
ZX/lYIW1crjCXeGvCFaOV05WTlckK7KV8xXlysWKZkW3YlgxrZhXLCs3K7YV
x4pr5XblfsW74l8JroRXIiuxlceV5MrTSnolu/Ky8rbyvlJcKa98rNRWPle+
VlornZXvlf7KcGW8Ml35WVms/AKAADAAAlgDrANgADhgA4AEoABoAAaABxAA
OwAygAKgAvYBTAAbwAXwAQKAGHAKkABkAAVACVABtAATwAy4AtwArAAbwA5w
Au4AXkAAEASEAGHAAyACiAMSgCQgBXgCPAPSgAwgD3gHFAAlQBlQAXwA6oBP
QAPwBWgDvgE9QB8wBvwAwUAIEAZEAtFALBAHxAN3gCQgGUgF0oF7wH3gAZAJ
ZAM5QC6QDxQAj4Ei4AlQDJQAZcBzoAKoBmqAWqAeaAAagSagGXgNvAE6gW7g
LfAO6AF6gX5gABgDxoEJYA74AnwFvgHzwBKwBqwDW8A2sAv8Bg6BI+AYOAXO
gD/ABXAJ/AX+gcAgCGgdBAXBQBsgBAgJ2gShQVsgLGgbtAMigXZBVBAddABi
gzggPkgAOgadgSQgGegcpAJdgNQgPcgMsoCuQTaQHeQAOUFukAfkB4VAYdAD
KAKKgmKgBCgFegI9g9KgDCgLyoEKoCKoBKqAPkBVUA3UAH2BmqAWqAvqgwag
IWgKWoAh4HXwBngTvAXGgwngbTAJTAHvgungfTADfABmgdlgDpgH5oMF4GPw
CVgMPgWfgWXgc7ASrAJrwTqwHmwEm8CXYDPYAraCbWA3+A58D/aAfWA/OAgO
gR/BCXAK/Ap+A+fB7+ACuAL+BDfAHXAX3AP3wWPwBDwF/4Dn4AX4F/y3Clld
X4Wtwlc3VpGrqNXNVczq1ipuFb9KXCWtUlZpq/TV/VXWKmeVtypYPV49WZWu
ylbPV5Wr6lXNqnbVuGpZvVm1rjpWnauuVffq3apvNbj6sBpZja7GVuOrj6up
1efV9GpmNbuaW31ZfV0trZZXK6vV1dpqffVztbnaWm2vdlZ7q8PV0ep49Wf1
F7IOgUGQEAwEB9mG7ECIEAqECqFB9iEHECaEBTmEcCA8yBFEADmGnEBOIWcQ
CUQKOYcoIRcQNUQPMUCMkEuIGXIFsUBuIHaIA3IH8UC8EB8kAAlCwpAHSBKS
gjxD8pB3SAFShJQgVcgXpAn5hvQgA8gQMoXMID+QBWQJ+V1bX4Otbawh1pBr
m2voNcwadg23RljbXiOvUdaoa3tr+2sHa4drvLWjteO1k7XTNfna+Zpy7WJN
u6Zb069drt2s2dbsa64199rt2t2aZy2wFl6LrsXW4muPa4m15NrzWmYtu5Zb
e1l7XXtby69V1j7Wqmv1tc+1xtrXWnuts9Zd+14brI3XJmvTtcU6bH1jfXMd
u05YJ66T1snr1HX6+t76wTprnb1+uM5d560frQvXj9dP1k/XJevSddm6fF25
frGuWdeuG9dN65frV+uW9ev1m3XbunPdte5Z96371wProfXwemQ9uv60/rye
WS+sF9dL6+X1ynp9vbXeXu+vD9ZH6+P1n/X5+mL9d/0PCoNuQJFQFHQTioFu
QbFQPJQA3YESobtQKpQOZUAPoCwoF3oEFUJPoKdQCVQBVUIvoBqoHmqAGqFX
UBvUAXVCb6F30HuoB+qDhqARaBz6CE1Ak9AU9AmageagL9BX6Bs0D32HFqBV
aA1ahzagX9AmtAXtQr+hPWgfOoJOoTPoD/QXtgFDwjAwPGwHRoZRYLswOmwf
xoCxYIcwDowL48OOYEKYCHYCO4VJYDKYHHYOU8AuYBqYDqaHXcLMsCvYNewG
ZoXZYA6YG3YL88ECsCAsBHuARWAxWByWhmVgOVgJVoZVYB+wKqwB68C6sCFs
BJvAprAFbAn7hW/AkfBNOBqOgWPhODgevg3fgZPgZDgNTofvw5lwFvwQzocL
4SL4KVwCl8FV8Au4Bq6DG+Em+CX8Gu6Au+Bu+D3cA/fCffAA/AEegyfgSXgK
/gR/hqfhOfgr/A2eh7/DC/AivASvwz/hDXgT3oK34R14D96HD+BD+AT+A5/D
FxvIjc0N7Mb2Bmljd4O6QdvY3zjYYG4cbnA3eBv8DcGGcEO0Id443ZBsyDbO
NxQbyg3VhmZDt2HYMG5cbVg2rjesG7YN+4Zjw7Vxt3G/EdgIbYQ3HjaiG7GN
x43ERnYjt/G6Udn42Khu1DbqG82N743exnhjsjHb+Nn43fhDIBGbCAxiC4FF
4BEExDaCiCAhKIhdxB5iH3GAYCMOEVyEACFCiBEShAxxjlAjNAgdwoC4RJgR
VwgrwoW4RdwhvAgfwo8IIEKIKOIRkUI8IZ4RaUQGkUW8IvKId0QBUUSUEGVE
BdFAfCGaiDaig+givhEDxBAxQowRM8QCsUT8IjeRGCQeSURSkDQkHbmHPECy
kGwkF8lHHiEFyGOkCClGniElSBnyHKlEqpAXSDVShzQgTchL5DXyBmlF2pEO
pBPpQt4iPUgvMoR8QEaQUWQc+YhMIlPIF+QrMo+sImvIOvIT2UC2kX3kADlF
zpBz5AK1icKgsCgcCo/aRu2giCgyioKiomgoBuoAxUJxUFwUH3WMEqPOUDLU
OUqJ0qJ0KAPKhLpCWVDXKDvqFnWP8qD8qAAqiAqhHlBxVBL1jEqjMqgsKod6
QeVRBVQRVUKVURXUB6qKaqJaqDaqi/pG9VB91Ag1Rk1QU9Qc9Yv628RsYje3
N8mb1M29zf1NxiZr83CTs8nfFGwKN483TzbFm2eb0k3Z5vmmcvNiU72p2dRu
GjZNm+bNq03rpm3TvuncdG26N2837zd9m/7Nh83oZmwzvpnYTG4+bT5vvm3m
Nwub9c3Pzcbm12Zzs7s53Bxt/mzON5ebv2gMGovGownobTQRTUKT0btoKpqO
3kMz0Sz0IZqH5qMF6BP0GVqKPkcr0RdoPdqANqHN6Gv0DdqKdqLv0V60Dx1E
h9Bh9AM6ik6gn9AZdBadQ7+gX9Fv6AK6hC6jK+gPdBVdQ9fRbXQH3UX30H30
AD1ET9BT9Az9g15isBg8hojZxdAxDMwBhok5xHAxPIwAc4wRYU4wp5gzjBQj
x5xjlJgLjAajxegweowJY8ZYMNcYO8aBcWLcmFvMHeYe48UEMEFMFBPHPGIS
mBTmCZPGZDDvmAKmhGlgvjBNTAvTxvQwY8wEs8AsMX9b2C381vbWzhZxi7xF
2drdom3Rt/a3GFvsrcMt7tbRlmDreOt0S7ol31JuXWxptoxbpi3zlmXLumXb
sm+5t7xb/q3AVnjrYSuyFd2Kb6W20lu5rZet1623rfzW+1Zpq7L1sVXdqm3V
tz63Glvdre+t3tZga7g12hpvzbZ+tuZbi60/LB67jSVjadh9LBPLwrKxXCwf
e4Q9xp5gxdhTrAQrxcqxCqwSe4HVYHVYPdaANWLNWAv2BmvFOrEurBt7h73H
erBerB8bwoaxcWwCm8SmsM/YNDaLzWGL2BK2gm1iW9g2toPtYgfYKXaG/cX+
4fC4bRwRR8KRcbs4Ko6G28Pt4w5wTBwHx8XxcULcMe4EJ8HJcQrcBU6D0+Eu
cWacBXeDs+McOCfuDufHBXEhXAQXxcVwcVwC94zL4l5xb7g87h1XwBVxFVwV
V8PVcZ+4Bu4L18T1cH3cADfCjXET3BQ3xy1wS9wvfhtPxO/i9/AHeDb+EM/B
8/ECvBB/gj/Fn+EleBlejlfgVfgLvAavwxvwRrwJf4m34G/wNrwd78bf4u/w
HrwX78P78UH8Az6CT+BT+Cf8Mz6Dz+Jf8K/4Mr6Cr+Lb+A6+i//G9/Aj/A9+
TtgmEAlkAoWwS6AR6IQ9AoNwQGAR2AQegU8QEESEE8IpQUZQEFQEDUFHMBCu
CBbCDcFGcBJcBDfBQwgSwoQHQowQJzwSEoQUIUN4IeQJ74QCoUgoEcqEKqFO
+CQ0CF+EJqFFaBMGhCFhRJgQpoQZ4YewJPwS/raJ2+Rt2jZjm7XN2eZu87YF
28fbou3Tbcm2dFu2fb6t2FZtq7c127ptw7Zp+3LbvH21fbNt23ZsO7fvtu+3
Pdu+bf92YDu4Hd6Obse2U9vP2+ntzHZu+2X7bTu//bFd3a5vd7e/t3vb/e3B
9mR7sb3cIe6Qd3Z3qDu0nb2d/R3GDnOHtXO4w9k52hHsHO+Id053JDvnO6od
9Y5ux7Bj2rneudmx7Th23Du3O3c7vp3wTmQnuvO4k9hJ7qR2nndyO287hZ3i
TmmnvFPZ+dip7zR2vnaaO62d9k5np7sz2hnvTHZmOz87853Fzh+RTNwl7hGZ
xEMij8gnHhGPiSdEMVFClBHlxHOikqgiqolaoo5oIJqIZuIV0UK8JtqIDqKL
6CZ6iF6ijxggBokhYpgYIcaJj8RnYoaYJeaIr8Q34juxQKwR68QGsUfsEwfE
IXFEnBF/iX8kMmmXRCPRSXskBumAxCSxSYckLolHEpKOSSekM5KEJCMpSWqS
lmQgmUhmkpVkIzlILtId6Z7kIQVIEVKMFCclSSnSE+mZlCG9kt5JJVKZVCF9
kKqkGqlBapJapDapQ+qSvkk90oQ0Jc1Ic9KCtCT9knfJNDKDzCZzyUdkAVlI
PiGfks/IMvI5WUFWki/IarKWrCcbyCaymWwhX5NvyFayg+wi35LvyD6ynxwg
h8hh8gM5Qo6RE+QkOUPOkV/Ir+Q8+Z1cJJfIn+QGuUkekIfkEXlMnpDnlF0K
jbJH2acwKEwKi8KmcChcCp9yRBFRTiinFClFRjmnXFC0FD3FRDFTLBQ7xUFx
UW4pHoqX4qOEKDHKIyVBeaI8U9KUDCVHyVOKlArlg1Kl1Ch1yielSWlTOpQu
5ZvSo/QpA8qM8kOZU5aUX8rfLm13b5e5y9nl7wp3j3dFu6e7kl3p7vmucle1
e7Gr2dXu6neNu6Zd865l92bXumvbte+6dm9373c9u4Hd4G5o92E3shvdje0+
7qZ2n3Zzu6+7b7v53cJucbe8W9n92m3utndHu+Pdye50d7a7pNKoe1QG9YDK
pLKph1QOlUflUwVUIVVMPaVKqHLqOVVJ1VD1VCPVTLVQb6hOqot6S72n+qh+
aoD6QH2kJqkpapqaoWapOeortUAtU6vUGrVO/aQ2qF/UNrVL/ab2qH3qgDqk
jqhz6oK6pP7R9mgMGpvGowloItoJTUyT0GQ0OU1Ju6CpaRqajqanGWmXNDPN
Qruh2Wh2moPmpN3S7mlemo8WooVpD7QoLUaL0x5pSdozLU17peVp77QCrUQr
0z5oVVqL1qZ1aRPalDaj/dDmtD/6Hp1BZ9JZdDadQ+fSefQjuoB+TBfRz+gS
uoyuoCvpF3Qd3Ui/pFvoN3Qb3U2/pd/TvfQAPUgP0aP0JP2J/kzP0nP0F/or
PU8v0T/odfonvUH/ojfpLXqX3qP36QP6kD6ij+kT+pL+S//bY+wx9zh7R3vH
e+K9072zPdne+Z5i72JPs6fd0+0Z9ox7l3tXe5a9mz3bnmPPuefac+/d73n3
/HuBvYe9yF50L773uJfYS+497WX2snv5vcJeca+0V9n72Kvt1fc6e9293t5s
72dvvrfYW+4z9pn77P3Dfc4+b5+/f7Qv3D/eP9kX70v3Zfvn+6r9i33NvmH/
cv9q/2bftu/Yv9u/3/fu+/dD++H9h/34/tN+ej+z/7L/uv+2n98v7Ff2a/uN
/a/95n5rv73f2e/tD/aH+6P98f5kf7o/2/9jMBlsBo8hZJwwzhgShpRxzlAy
VAwNQ8fQMwwME+OSccW4ZtwwbAwHw8VwM24Zdwwvw88IMkKMKCPGiDMSjCQj
xXhipBk5xgujwCgxyowKo8qoMT4ZDcY3o8cYMOaMBWPJ+GX8HTAP2AecA+4B
7+DoQHAgPBAdnBycHpwdyA/OD5QH6gPNge7AdHB1cH1gO3AcuA48B94D/0Hw
4OEgchA9SBykD7IHuYO3g/zB+0HhoHRQPfg8aB60DtoHnYPuwffB4GB0MD6Y
HEwPZgc/B3Mmm8lhHjFFzFOmlCljyplK5gVTzdQxDUwj08Q0M6+Y10wr08Z0
MF3MW+Yd857pYfqZQWaY+cCMMx+ZCWaK+cR8ZqaZWeYr841ZYlaYH8wqs878
ZH4xm8w+c8AcMZfMX+Yfi83isHgsPuuIJWQds0QsMeuUJWFJWQqWknXB0rJ0
LAPLzLpmWVkOlot1y/Kx/KwgK8yKsmKsOCvFyrJeWK+sd1aBVWSVWBVWnfXF
arM6rC7rm9Vj9Vkj1oQ1Zc1YP6w5a8FasjlsHlvIFrMlbDn7nK1gX7A1bC3b
wDaxL9lmtoV9zbay7WwH28W+Zd+zPWwv28cOssPsCDvKTrCT7BT7mZ1mZ9hZ
9gs7z35nV9hVdo1dZzfYX+wWu80eskfsCfvvkHPIOzw6FBwKD0WHJ4fiw7ND
yaHsUH6oOrw41BzqDw2HpkPLofXQfug6vD28PwwcBg/Dh5HD+OHjYeLw+fDl
8O0wf1g8LB2WDyuH1cPGYeuwe/h92DvsHw4Oh4eTw9nhz+H8cHG4PPw9/OPw
OEccEeeMI+MoOEqOiqPh6Dh6jolj5lxxLJwbjpVj5zg5Ls4t557j5fg4fk6A
E+ZEODFOnJPiPHGeORlOlpPjvHDeOAVOkVPl1DmfnAanyWlxOpwuZ8yZcGZc
HveIK+Qec0VcMfeUe8aVcmXcc66Cq+ZquDqukWvimrk3XDvXyb3l3nO93BA3
zI1wY9wEN8lNcTPcN+47t8AtcyvcD26VW+c2uR1uj9vnDrhD7og75s64c+6C
u+T+cv94RzwhT8yT8s55Kt4FT83T8Qw8I8/Ms/CueTc8G8/Oc/LcvFvePc/L
8/MCvCAvxIvwYrxHXoL3zEvzMrwc74X3ynvjvfNKvDKvzmvwvnhNXpvX4X3z
erwpb8ab84/4Qr6If8IX88/4Er6UL+ef85V8FV/L1/EN/Eu+mW/h2/hOvpt/
z/fy/fwHfoQf4z/yU/wn/jM/x3/nF/kl/ge/yq/x6/wGv83/5g/4Q/6IP+ZP
+FP+nL/k//L/joRHoqOzI/mR8kh9pDnSHhmOTEeXR5ajmyPrke3IceQ8ch/d
Hd0feY/8R8Gj0FH46OEodvR4lDxKHWWOske5o9ejt6P80ftR8ahy9HHUOGoe
tY7aR92j76P+0eDo52h+tBQIBSKBWHAqOBNIBTKBXKAQKAUXArVALzAITIIr
gUVwI3AI3II7gVfgFwQFUUFM8ChICp4FaUFG8CooCsqCiqAmqAs+BQ1BU9AV
9AUjwVgwEUwFM8GPYCn4E4qEYqFUqBBeCLVCnVAvNAnNwivhjdAmtAsdQpfQ
LbwTeoReoV8YFIaFD8KIMCp8FCaFT8JnYU74InwV5oXvwoKwKCwLq8KasCls
CzvCrrAn7AuHwpFwIVwK/45Fx+Ljs2PJsfRYfnx+rDhWHV8ca461x8Zj07H5
+Pr45th27Dq+O/Yc+4+Dx+Hj+PHjcfL46ThznD3OHeePy8cfx9Xjz+PG8ddx
87h93DseHk+Op8ez45/j+fHi+E8kFp2J5CKVSCPSiwwio8gssoiuRTaRQ+QU
uUS3ojuRR+QT+UVBUVgUEUVFMVFclBQ9idKijOhV9CbKiwqioqgkKos+RHXR
p6gt6oq+RT3RQDQUjUUT0a/o70R8cnYiPZGdyE8UJ8oT1Yn6RHOiO9GfXJ6Y
Tywn1hPbiePk9sRz4jsJnoRPIieJk+TJ00n6JHfycvJ6Ujj5OKmd1E++Tpon
rZP2SfdkcDI+mZ38nMxPFifLk1/xmVgqVojVYp3YKDaJL8UW8Y3YKnaIXWK3
+FZ8L/aIfeKAOCgOiyPimDgufhQnxE/itDgrzonz4ndxQVwSl8UV8Ye4Jm6I
v8RdcU/cFw/EI/FYPBXPTs9Opafy0/NTxanq9OJUfao91Z0aTo2nV6eW05tT
+6nj1HV6f+o7DZyGTyOnsdPU6dNp+jR7+nr6dpo/LZ3WTj9PG6et0/Zp57R7
2jsdnU5P56eL0+Xp7+nfmfRMfqY6054Zzi7PzGdXZzdntjP7mevs9uzu7P7M
e+Y7C5yFzsJnkbPY2eNZ4ix5ljpLn2XPXs5ezwpnxbPSWeXs46x6Vjv7PGue
tc56Z4Oz4dnobHI2Pfs5m0ukErlEIVFKVBK1RCPRSvQSg8QkuZRcS24kNolT
4pLcSrySgCQkiUhikkfJsyQtyUpeJHnJu6QgqUg+JV+SpqQj6Uq+JT3JQDKR
/EiWkl/Jn1QuVUjVUr3UJL2SWqTXUpvUIXVKb6X3Uo/UK/VLA9KQ9EEakcak
j9KkNCV9kj5Ls9IX6Zs0Ly1Jy9KKtCqtSevST+mXtC3tSAfSkXQsnUhn0h/p
QrqUyWUKmUp2IVPLtDKdTC8zykwys+xKZpXZZA6ZW3Yru5f5ZSHZgywme5Ql
ZRlZVvYie5MVZEVZSVaVfclasrbsW9aT9WUD2Ug2ky1kf3KFXCXXyo1ys/xa
fiO3yh1yl9wtv5d75T65Xx6Uh+QP8qg8Jn+UJ+VP8md5Wp6Rv8jf5O/ygrwi
/5BX5XX5p7wh/5K35F35t3wkn8in8pl8Ll/If+V/54pz1bn6XHOuPdefG86N
55fn5nPL+fW5/dxx7jq/O78/954Hzx/Oo+eP58nzp/Pc+cv52/n7eem8fF45
r5+3zjvn3fP++eB8eD46n5zPz38VKoVaoVdcKiwKq8KmsCtcilvFncKr8CsC
iqAirHhQRBVxxaMiqXhSpBUZRVaRU7wp3hVFRUlRVdQUdUVD8aVoKlqKjqKn
6CsmipniRzFXLBW/SpVSrdQqdUq90qg0KS+VV0qL8kZpVTqVLuWt0qP0Kv3K
sDKqjCuTyidlWvmqfFO+K4vKivJDWVU2lB3lt7KnHCpHyrFyopwplyq1Sqsy
qq5UNyq7yqFyqm5V9yqPyq8KqkKqsCqiiqriqoQqqXpSpVVZVU71onpVvauK
qrKqoqqrPlUNVVPVUrVVHdW3aqAaqmaquWqhWqr+LtQX2gv9heHCeHF5Yb64
uri+uLmwXdgv3Be3F/cXvgv/RfAichG/SFw8XaQvshf5i/eL4kX5onpRu6hf
NC++L/oXg4vxxeRiejG7mF/8qbVqvfpSfa22qZ1ql9qtvld71T51UB1WP6gj
6pg6rk6oU+ondVqdVb+oX9Vv6ry6qC6rP9RVdUP9pW6q2+qOuqv+VvfVI/VY
PVcv1b/qP41Wo9cYNSbNpeZKY9Fca6wam8ahcWruNPcaryagCWrCmpgmoUlp
0pqs5kVT0BQ1Zc2Hpq751DQ0bU1fM9SMNFPNTPOjmWuWWr3WqL3SWrUOrVt7
q73TerV+bUAb1ka0UW1M+6hNaFPaZ21am9W+aN+0ee27tqAtaz+0NW1d29S2
tG1tV/ut7Wn72qF2op1ql9o/nV5n1F3qzLor3bXuRmfV2XUOnUvn1nl0Xp1f
F9KFdRHdoy6le9ZldS+6N11JV9Z96Gq6hu5L19R1dUPdWDfR/ejmuoVuqfvT
G/WX+mu9Xe/S3+nv9R69Xx/Uh/QRfUwf1z/qk/qU/lmf0Wf1L/o3/bu+oC/q
S/oPfU3/qW/o2/qOvqvv6fv6gX6oH+tn+h/9n8FouDRcGSyGa4PVYDPYDU6D
y3BruDP4DH5D0PBgiBhihqTh2ZAxvBjeDO+GiuHDUDN8GpqGlqFt6BnGhqlh
ZlgYloZfw5/x0nhltBqdxlujx+g1+oxBY9j4YIwZH40JY9L4ZHw2Zow544vx
zfhuLBpLxrKxYqwZP41fxqaxa/w29owD49A4Mo6NU+PcuDBdmq5M16Ybk9Vk
NzlMTpPbdGu6N3lMAVPQFDZFTTHTo+nJlDHlTG+md1PRVDXVTJ+mL1Pb1DF1
TQPT1PRjmpt+TX+XV5fXl/ZL9+X9pe/Sfxm4DF9GLqOXj5fJy9Tl02X6MnOZ
u3y9fLt8vyxeli8rlx+X1cvPy6/L1mX7snfZvxxcji7Hl5PL6eXP5fLy13xl
vjZbzTaz3ew0u8xu85353uw1+8whc9gcMcfNj+akOW3OmV/N7+aiuWyumz/N
X+aWuWv+NvfMI/OPeWFeXl1fWa+cV3dX3qvAVfAqdBW5il3Fr5JXT1fPV+mr
7FXu6vUqf/V+VbwqX31cVa9qV/Wrr6vWVeeqezW4Gl6NriZX06vZ1c/V4urP
cm2xWuwWh8VpcVtuLXcWj8Vr8VsClgdLxBKzJCxJy5Mla3m15C1FS9nyYWlY
viwtS8fSs/QtA8vEsrD8Wv6urdf2a/e159p/HboOXz9cx64frxPXT9fp68x1
9vrl+vU6f124Ll6Xrz+ua9f168/rxnXrunP9fd27Hl2PryfXs+uf6/n14vr3
xnpjv3HeuG7cN3c39zeeG9+N/yZ4E7qJ3sRuHm9SN0836ZuXm/xN4aZ883FT
u2netG46N983g5vhzehmdvNrtVud1jurzxq0Plgj1qj10Zq0pqxpa9aas75Y
36x5a8FaspatH9aa9dPasH5Zm9aO9dvatw6sE+vUOrPOrQvr0vprs9ucNrft
1nZn89i8Np8tYAvawrYHW9z2aEvanm1pW9b2ZivYSrYPW832aWvbOrZvW982
so1tE9vc7rS77R57wB62R+0xe9yetD/Zn+1Z+4v91f5mf7cX7CV7xf5hr9k/
7V/2pr1lb9u/7X370D6yz+w/9rl9af+1/zmcDrfjznHv8Dh8Dr8j4Ag5wo6I
I+pIOJKOJ0fGkXW8ON4dJUfFUXN8Or4cXce3o+8YOiaOqWPmWDrdzjunzxly
Rpxx56Mz4Xxypp0Z54vzzZl3vjuLzpKz4qw6a85P55ez5Ww7O86us+8cOsfO
iXPuXDiXzj+X23Xn8ri8Lp8r4Aq6Qq4HV8QVc8VdKdeTK+3KuV5cb66iq+Kq
uj5dX66Wq+fqu4ausWvm+nHNXX/uO7fHHXA/uGPuhDvpTrnT7qw7535zv7sL
7qK77K64q+66+9P95W65O+6u+9vdcw/dY/fUPXMv3b/uv9u7W8+t79Z/G7gN
3YZvH26jt7Hbx9vE7fNt+jZ7+3r7dvt+W76t3tZvv25bt53bwe3wdnw7vZ3f
Lm6Xd547313oLnr3eJe6e7p7vsvevdy93r3fFe9Kd+W7j7vqXf2ucfd117rr
3H3f9e76d4O78d307udufvd377n33Qfug/eh+4f7yH30Pn7/eJ+8T91n7rP3
L/f5+/f74v3Hff2+cd+679x/34/ux/fT+5/75f3v/Z/H5wl4HjxxT9Lz7El7
Mp4Xz5sn7yl6yp6K58NT89Q9DU/T0/J0PN+evmfgGXpGnqnnx7PwLL0+b8Ab
8oa9D96oN+aNexPepPfJ++zNeV+8b96Ct+gte2vehrfp7Xi/vX3vxDv1/ngX
3j9fwBfyRX0J35Mv48v6cr4337uv4Cv7PnxVX8336Wv4mr62r+P79vV9Q9/I
N/ZNfD++he/X9+cP+EP+B3/EH/XH/Y/+hD/lf/Kn/Rn/q//N/+4v+cv+D/+n
v+lv+7/9ff/QP/P/+Bf+30Ao8BCIB1KBdCAXeAm8Bt4DxUAp8BGoBeqBz8BX
oBloB7qB70A/MAyMA5PANDALLAK/wVDwIRgNxoLxYCKYDKaCz8F0MBvMBfPB
92AxWAl+BGvBr2A72A32g8PgODgPLoK/oYdQNJQIPYeyodfQWygfKobKoUqo
FvoMNUJfoVaoHeqGeqF+aBgah6ahWegnNA/9hh/C0XA8/BhOhFPhp/BzOBPO
hl/Cr+FCuBguh6vhWvgz3Ap3w73wMDwOT8PL8O9D9CH+kHrIPLw85B/eHwoP
5YePh+rD58PXQ/Oh9dB56D70HgYPw4fxw/Th52H+sHhYRqKReCQRSUZSkedI
OpKJ5CIvkbdIPlKKlCMfkXrkM/IV6UR6kUFkHJlGfiJ/0Xg0EX2O5qJv0UK0
GC1FP6K1aD36FW1F29FO9Dvaiw6io+g4Oo3+RBfRZfQ3+heLxxKxVOwp9hzL
xLKxXOw19hZ7jxVildhHrBZrxL5irdh3bBAbxaaxn9ginoin4pn4a/w9XoqX
45V4Lf4Zb8Rb8U68G/+O9+OD+Cg+iU/jP/FF/Df+95h4TD0+P6YfM4+5x5fH
18f84/tj8bH0WH2sPX4+Nh9bj53H/uPocfL487h4/E2kEs+JXCKfKCYqiY9E
NfGZ+Eo0E53Ed6KX6CeGiVFikpglfhKLxG8ylXxOZpLZZC75mnxL5pOFZDFZ
TlaS9eRn8ivZTnaS38lhcpKcJRfJ39RzKpN6TRVS5VQ1VUvVU1+pVqqd+k71
U4PUMDVOTVKz1Dy1SP0+PT9lnnJPL0+vT/mn96fCU+mp/PTxVH1qPH09tZ66
T99P/afx0+xp/vT7nHnOPeefS88fz/Xnz+fGc+u589x97j8Pn0fP4+fp8+x5
/rx8/k1n0rn0a/otnU8X0sV0KV1Jf6Rr6Xq6mW6lO+leup8epqfpeXqZyWVe
M4VMJVPLNDJfmWamk/nO9DLDzDgzyUwzP5l5Zpn5y+ayr9l89j1byJay5Wwl
W83Wsp/ZRrad7WS/s4PsMDvO/mSX2b/cay6fK+Wquc9cM9fKtXPfuX5ukBvn
prlZ7ie3yC1zfy+vL/mXwkvxpfRSefl4qb7UXz5fvl6aL92X75f+y+hl/DJ9
Wbz8veZfC6+V1/rr12v7tfPafe2/Dl9Hr9PXn9f56+L19/XvLf9WeCu9ld8q
b9W32lv9rfH29dZ6a7/13vpvw7fJ2/Tt5+03X8iX8tV8I9/Kd/Pf+V5+mB/n
J/mf/CK/zP++F95L75X3j/fqe/39873x3nxvvXfeu++D9+H7+H32/vO+KJQK
lUK90Cx0Cr1CvzAojAvTwqywKPwW/oqlYqVYLdaK9WKj+FVsFtvFTvG72CuO
iuPitDgvLoq/pUqpWmqU2qXv0qA0LI1K09JPaV76LVfK1XK9/FlulJvlVrld
7pa/y/3yoDwpT8s/5WX5t1Kt1CvNSrfSr4wq48qk8lNZVJYf1Y/6R+Pj66P5
0f7ofHQ/eh/9j+HH6GP28fOx+Pir1quNarvaqw6rk+q0Oqsuqr/Vv1q91qg1
a61au9atfdd6tUFtWBvXJrV5bVH7rTfqzXq3PqiP67P6T31e//1sfDY/25+d
z+5n77P/OfgcfY4/p5+zz+Xnb6PZaDd6jVFj2pg3Fo3lV/Or/dX9+v7qfQ2+
hl+jr8nX9Ovna/7112w3u81Bc9L8aS6bv82/VrvVbfVa/dagNWqNW5PWrPXT
WrSW7W671x61Z+1F+6/T7fQ6g86wM+pMOtPOrDPvLDq/nb9urzvoTrrz7u93
73vwPfoef0++Z98/3/Pv5fdvb9Ab9Wa9ZX/QH/Un/Wl/1p/3F/1l/28wGkwG
88HfcDScDGfDn+F8uBz+Dv9Gk9FstBxPxrPxfLwYL8d/k9lkPvmbzqbz6XL6
O/2bzWfLn/nP8udvvpz/LZaLv+Xf799/MZ6hQw==
             "], 0.02261055620269392]}, 
           {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
            DiskBox[1, 0.02261055620269392], DiskBox[2, 0.02261055620269392], 
            DiskBox[3, 0.02261055620269392], DiskBox[4, 0.02261055620269392], 
            DiskBox[5, 0.02261055620269392], DiskBox[6, 0.02261055620269392], 
            DiskBox[7, 0.02261055620269392], DiskBox[8, 0.02261055620269392], 
            DiskBox[9, 0.02261055620269392], DiskBox[10, 0.02261055620269392],
             DiskBox[11, 0.02261055620269392], 
            DiskBox[12, 0.02261055620269392], 
            DiskBox[13, 0.02261055620269392], 
            DiskBox[14, 0.02261055620269392], 
            DiskBox[15, 0.02261055620269392], 
            DiskBox[16, 0.02261055620269392], 
            DiskBox[17, 0.02261055620269392], 
            DiskBox[18, 0.02261055620269392], 
            DiskBox[19, 0.02261055620269392], 
            DiskBox[20, 0.02261055620269392], 
            DiskBox[21, 0.02261055620269392], 
            DiskBox[22, 0.02261055620269392], 
            DiskBox[23, 0.02261055620269392], 
            DiskBox[24, 0.02261055620269392], 
            DiskBox[25, 0.02261055620269392], 
            DiskBox[26, 0.02261055620269392], 
            DiskBox[27, 0.02261055620269392], 
            DiskBox[28, 0.02261055620269392], 
            DiskBox[29, 0.02261055620269392], 
            DiskBox[30, 0.02261055620269392], 
            DiskBox[31, 0.02261055620269392], 
            DiskBox[32, 0.02261055620269392], 
            DiskBox[33, 0.02261055620269392], 
            DiskBox[34, 0.02261055620269392], 
            DiskBox[35, 0.02261055620269392], 
            DiskBox[36, 0.02261055620269392], 
            DiskBox[37, 0.02261055620269392], 
            DiskBox[38, 0.02261055620269392], 
            DiskBox[39, 0.02261055620269392], 
            DiskBox[40, 0.02261055620269392], 
            DiskBox[41, 0.02261055620269392], 
            DiskBox[42, 0.02261055620269392], 
            DiskBox[43, 0.02261055620269392], 
            DiskBox[44, 0.02261055620269392], 
            DiskBox[45, 0.02261055620269392], 
            DiskBox[46, 0.02261055620269392], 
            DiskBox[47, 0.02261055620269392], 
            DiskBox[48, 0.02261055620269392], 
            DiskBox[49, 0.02261055620269392], 
            DiskBox[50, 0.02261055620269392], 
            DiskBox[51, 0.02261055620269392], 
            DiskBox[52, 0.02261055620269392], 
            DiskBox[53, 0.02261055620269392], 
            DiskBox[54, 0.02261055620269392], 
            DiskBox[55, 0.02261055620269392], 
            DiskBox[56, 0.02261055620269392], 
            DiskBox[57, 0.02261055620269392], 
            DiskBox[58, 0.02261055620269392], 
            DiskBox[59, 0.02261055620269392], 
            DiskBox[60, 0.02261055620269392], 
            DiskBox[61, 0.02261055620269392], 
            DiskBox[62, 0.02261055620269392], 
            DiskBox[63, 0.02261055620269392], 
            DiskBox[64, 0.02261055620269392], 
            DiskBox[65, 0.02261055620269392], 
            DiskBox[66, 0.02261055620269392], 
            DiskBox[67, 0.02261055620269392], 
            DiskBox[68, 0.02261055620269392], 
            DiskBox[69, 0.02261055620269392], 
            DiskBox[70, 0.02261055620269392], 
            DiskBox[71, 0.02261055620269392], 
            DiskBox[72, 0.02261055620269392], 
            DiskBox[73, 0.02261055620269392], 
            DiskBox[74, 0.02261055620269392], 
            DiskBox[75, 0.02261055620269392], 
            DiskBox[76, 0.02261055620269392], 
            DiskBox[77, 0.02261055620269392], 
            DiskBox[78, 0.02261055620269392], 
            DiskBox[79, 0.02261055620269392], 
            DiskBox[80, 0.02261055620269392], 
            DiskBox[81, 0.02261055620269392], 
            DiskBox[82, 0.02261055620269392], 
            DiskBox[83, 0.02261055620269392], 
            DiskBox[84, 0.02261055620269392], 
            DiskBox[85, 0.02261055620269392], 
            DiskBox[86, 0.02261055620269392], 
            DiskBox[87, 0.02261055620269392], 
            DiskBox[88, 0.02261055620269392], 
            DiskBox[89, 0.02261055620269392], 
            DiskBox[90, 0.02261055620269392], 
            DiskBox[91, 0.02261055620269392], 
            DiskBox[92, 0.02261055620269392], 
            DiskBox[93, 0.02261055620269392], 
            DiskBox[94, 0.02261055620269392], 
            DiskBox[95, 0.02261055620269392], 
            DiskBox[96, 0.02261055620269392], 
            DiskBox[97, 0.02261055620269392], 
            DiskBox[98, 0.02261055620269392], 
            DiskBox[99, 0.02261055620269392], 
            DiskBox[100, 0.02261055620269392], 
            DiskBox[101, 0.02261055620269392], 
            DiskBox[102, 0.02261055620269392], 
            DiskBox[103, 0.02261055620269392], 
            DiskBox[104, 0.02261055620269392], 
            DiskBox[105, 0.02261055620269392], 
            DiskBox[106, 0.02261055620269392], 
            DiskBox[107, 0.02261055620269392], 
            DiskBox[108, 0.02261055620269392], 
            DiskBox[109, 0.02261055620269392], 
            DiskBox[110, 0.02261055620269392], 
            DiskBox[111, 0.02261055620269392], 
            DiskBox[112, 0.02261055620269392], 
            DiskBox[113, 0.02261055620269392], 
            DiskBox[114, 0.02261055620269392], 
            DiskBox[115, 0.02261055620269392], 
            DiskBox[116, 0.02261055620269392], 
            DiskBox[117, 0.02261055620269392], 
            DiskBox[118, 0.02261055620269392], 
            DiskBox[119, 0.02261055620269392], 
            DiskBox[120, 0.02261055620269392], 
            DiskBox[121, 0.02261055620269392], 
            DiskBox[122, 0.02261055620269392], 
            DiskBox[123, 0.02261055620269392], 
            DiskBox[124, 0.02261055620269392], 
            DiskBox[125, 0.02261055620269392], 
            DiskBox[126, 0.02261055620269392], 
            DiskBox[127, 0.02261055620269392], 
            DiskBox[128, 0.02261055620269392], 
            DiskBox[129, 0.02261055620269392], 
            DiskBox[130, 0.02261055620269392], 
            DiskBox[131, 0.02261055620269392], 
            DiskBox[132, 0.02261055620269392], 
            DiskBox[133, 0.02261055620269392], 
            DiskBox[134, 0.02261055620269392], 
            DiskBox[135, 0.02261055620269392], 
            DiskBox[136, 0.02261055620269392], 
            DiskBox[137, 0.02261055620269392], 
            DiskBox[138, 0.02261055620269392], 
            DiskBox[139, 0.02261055620269392], 
            DiskBox[140, 0.02261055620269392], 
            DiskBox[141, 0.02261055620269392], 
            DiskBox[142, 0.02261055620269392], 
            DiskBox[143, 0.02261055620269392], 
            DiskBox[144, 0.02261055620269392], 
            DiskBox[145, 0.02261055620269392], 
            DiskBox[146, 0.02261055620269392], 
            DiskBox[147, 0.02261055620269392], 
            DiskBox[148, 0.02261055620269392], 
            DiskBox[149, 0.02261055620269392]}}]],
        MouseAppearanceTag["NetworkGraphics"]],
       AllowKernelInitialization->False]],
     DefaultBaseStyle->{
      "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
     FormatType->TraditionalForm,
     FrameTicks->None,
     ImageCache->GraphicsData["CompressedBitmap", "\<\
eJysvVmQJtl1Hvarq6prr66upffpZZb8e2Z6mRWzYgYAAQyQ+c9ABEGKAAiK
EAACIMQNBIMKmkQmRdGSKVpi0FooW3qwGVKICtMv1qPtCFv2g5cIWxHUi0MR
pvggP9m0wA0SgEpX5r3nfN93blZ1D6mHrur6l8x7z/Kd75xz7823P/u1L33h
Rz/7tS9/7rM33/rqZ3/iS1/+3E/d/PCPf/X4paU/M5v9mTvDv5uz5eP/97NZ
8ePubPYn+f9/NP68eP/4x08f//vV/PvF9O7s38vrv5Le+8Xx55NTH/n88b//
ef/gwu89/cx7vv3eD779e3eff+V/Pbhw+Tf/Pb3+1Xc75C699/Pjzxcedsi/
vX946V+tb2z2H/v+z/X/6T/57/vf+Kf/W//3/8t/1n9w8X1/sHdwqXj9e37g
S3+wf3i5f/PD7zzs539n7+DCb++c233Yqf/KxNj/gzS7nxl/7j/07M7t7f+r
83sHU6P69qUr1/uf/at/b7Y0vHr88we+8FP9k/deGD7nrw2fvffcq8PnT/nc
/vC579x59uX++N4PJa3nXn5zkNY3nr7/YlT67GfTVH/yXU71JEU++573fuf2
neeKad1//rX++z/7Y/7aO9/3F/pX3/eR8a/l/NobH3ynf+udT45/nXnA576r
/oR8jkWXXtvu/8O/9Y/7Z158fUodw/Q/NWXXP53E8RPjz513NfXjy37n0tUb
g5Ztls3HP9O/+mY5+vd/5OMy+lHJd5/v/84/+m9cQsOlBwUXxjDxubvHxvCp
z/9kvscqS3L890M/8peONfMGaWV7GPIfXbn+6O/u7h08NBr8eJLOXxx/bvFH
/uPjf4PXTdv+1esslSl7+OxXfrZ/6v6LNLOr42Weuv+e/ql74+vjJX/9H/93
/Xc1n+j3Dq/0i0/8eXl9uPX+xWv9Gx96+6E/fzG4JUudbfD1DzT5r+Hnzmhb
12489m4AaJDqjyUBfmX8uRrN64/uPPvSCBTf+4NfmfSek23oTv+Xf/U3+guX
H5mc5cHVx/vzlx7vb99/uX/lfR/tnzz+fXj9Tn/u+nPj7+L1R054feLzB9du
99t7Vx9KG5/+/E+O0j3+26b36c9/NeDbaJr9nWdfmcK3Ex33y0myPzz+3I7W
+8ks6Sl9jZ7xC3/zv3CJl9J96URbHK537vCRYwnPC2lduvdOf+vNv9hfvLvo
9x977/j71htf6edN2996X3798fz6mz/Sz+tOX7+TX2+6/uZwnTt8nR/pLz3z
8YfS3mO37/fnDy4XGqqeut+/8uZHZisn4uraIKN/e6yK3z0GvCl7/lKS+hfG
n2tTcPk7G1vbfzR/+tlBgmzSL7z6/tGk042unCrgk8z30t13+ptZYHuPJYHd
HAXZ9vNFNwp6EOogwOG1qunOHP9oj+c1vFQNbzfp7Wr4Sv74+LHjP2aX/CPD
74o+NqqJ1TGqqVV1H79/+OSHChVt713pb999kZ2gxPDNY2283T9aPR2t9V+c
O7//a9H4P5/U8Nnx5+ZD4fIQpKH8R47d1I3+oeRuhrpnhnpskCalUdajvE3A
bdKJ62J8bTZIuZvt4nskaf1sukaVlJOuZa+NyqrbYymOX1+Mb83Sa3vpcnX+
Sh7WrWAy11781DitU+JDDA8A6NX+z3/5Z4a4/8dP3XuhYFefS4r5odPw/qri
/We++LXjGP8CRcJDd44LV24ERbwNB2DEGARVZ8E36f9VzcowCa1lCaV/6iyj
xM6MH97Ll1NB+kdZR1lnSf+DQuj2dXYs8j+6q/1d1Vmlu25Blyeg7rTAc/X6
o/0v/Sf/iJnggPLvhgn+YFLdp/8UAcVu/8u//lv9lUduTY70wvUnj8H+DUeM
jF/H3z0Ww+ycq4dUl4XVTfgUvzZe49gVNmACjfmkAV0LM0m66Y4Bwd0WFjR4
V1JIMAMMBW5uqhcdp1snvZ7zjxRh8BhFpnS9d+lWf+mRR0enMFo2ktoX30vM
YQxXR3eee/X/Xt/amQpXn0k6/dSfNlxtjCq/drPqz1+8MRn3s3jTfFcKJHPA
OoZ7Rr9RC8fCGZUGB7MIxcCYJbuUlcY6zW/Pku8eQgE1K8RjIkZF9pOB1BQX
PtNl7D7wa3AAtdna9zwqPn4y4H70z366f/X9H135E0S/Tyatft+fOPrdm4x+
F2/e7a+88P1Kx974EZcmpNiJW1i4qTxqqQQrchWiHPl7J0e6ubxm4Ny0o8ea
Eu1SBiBLZD8J87Ob7zta831ZyxW+GMahkJ0vfDyQTTHY4bORol66dqufH8t+
KtEtY+r1P5qKqd+f1P297yKHKmPqxokx9eK9t5O6RgfIHryaZkx+w76QfHCV
vTjHu9a+N0tufYjr1MEaKOziOrgP+ylbUJXJTje7IN+poi+aVUr8IBKcOTPf
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
AP2TN98fulrcEQ66cniz6i9euTXNghxD6XRSwVVZqMm/kVtyDo6yti+wtHTU
LaCLjzH24EmuNmZqSzuKhl+hRjV+y67TKtrEav0p2FBQ3FamqNAxs/fUdqW0
pJQIzjxHnmOZKy//qWMPgHj8+ns4NOjs9+b3X/l/t85fYEhwX/OlpBk/fIro
angqoquDMZ0+VHZOJDGZVt3IW2Ni1FW038D+EFEYChhS8EllIfmUXdmSSbwm
haqZuCyBzTpLXSWGKya9ku3ZThXTWrVVZ7DPM73Ve4SiV3Icq3m5lXnFgHns
bDx8od+/eoMcfjrO6dW3P93/6E/8hZn1VuYenr8ZzHzsQvtTab3/9LS38Drz
V77x8/6Kr3z9558OrfZ47doJPOODYUqjr/CbhZl2eDUk0Sz3yZRKUCJ3RiTe
GS1ofBNrQ354QWeNFpf2dI7oWqJzp0QZPT7YvcYcIg/3QKK8mHru5zbtBN6Q
vn6Dcm47t97qLz13e9KSBgs7suWZEcfBd3/681+ahPk/kxb3R8Z/bjDM/9rR
///t5vaFwrCru4+GTPAzqcGVgRrk4eImwpS1TlcA6Z0L3LwkBRz4dTByXXiq
08ys6En7r9JSrTBsg857R0bBylKtJ3Vvt2SemsZYMsWNEYl5Hy/zccfzcPWq
muvVGy8e0bfi4LXhxKovfvmnZkuw1I/vPHz1o0v7hwUy/2hazC+P/1yb4nXf
Xju3/vtDBKCbYILbXk9psKOBbe5cOcZtjwJK4IrrfaumRTtGPty7WhCMUZa7
bFzO1NCsKRbN4wJ5onfeJJC188ccQjwFck35OaBdVixW9yWtsqDTMDLXvfq4
9KfNl77Wv/3pH0y2sTG07vS3UiDP5vfbuxcvfSvi7I+l1fvK+M+tyLia0/hZ
O5NpqM4M12icmCjwU5jdhbj4beOWJJSSVEfvGvooKlpuELSrwSd2+rOZ+j2z
fE6TE7Ep8xqc5qKEU1LOLVo2HNcWj3QYdHv74mF/+8FrlMdZ6n/iZ3/lSLjv
Es1dG/7+0d2Hr/3O2rlzU/zoa2kZ/9wncJfDMh1534Gi599dPtZdDkW2G3Qs
i1R9KYHBCQfqkEKLF7tM8GMBrtBnZ550AFMqA5N31LqGLyoHK5dxh0ke1di6
SbMZlHJ/Yn0G5d3avVK4vCHmfev9zy/llo0h9TbYwzHBzQ9NUZwfT2v2E+M/
N0/lBY8e9/Tw+q3B7JZzim7KEV46fHEM1qdA1CcuaTtyeOxxYB6SV9JycisO
lFMWldgG0aSr6OKlIBLxBtGOTMwvvvhesTZ7h0OI9/wxtwHd7H/lb/xDU/Yh
4z5sEIZJnR1y5h9fPjj8aCq19ZNpbb5xvFP7v7cu7Pz+weH1k53ac25Sg6nF
QZ7fuzbyqXKdPgdzuwlzmxLMddxCaVYAb0f2RjXdo78dhLQraOPN8PxBPwqS
/+Td/tLBc0fzekOTQUegNcEmHj15Z+T9VlQ9MpYhpzil3b99fmc3+qivp7X4
qT+2i0pXxGdjyQv0pO/+9j8ZtWVKi45boK0r94rEqS2cOGxydxCstsDe/JR6
ihGJQlvPSUg0bo549Z2RfJsHGQnB+5/PR15h7pmQz86QVzm8/vzvHOnylFf5
6ST5n/2EXmVQi8EE7Hd/7r/85f7eo9coMJufKPVLB9f79z/3hfL3x8BaWo2H
p/p9woxbJ2GGxKyvvfMZilmTb757NBcAyZax4/7IP58a/H8mifbPfzLw/3j/
yjWGtfqLX/V1Pl7a4PQ4POrSicA0GHdcgR9Y/Ei/t3+tzADD6GdTVp/0b7d/
/7M/1H/whR8bvzf8/9f/7j8d4Hdqmt/e2d37rc2t7Smd/AtJcH9p/Of2FDL/
n9s7u99eW18vnnxkJR8fgT0jNguQDSUP9ATgmBLqUv/Vb/xCP6gCC+N0xrg7
CvXBK2/F+yC/vbGx9VtHU5oSRgTDQbX+YhLQz43/vDj1iUmhHWnct49g4CSh
sZE/HdQmnEXmhj8lSZPaF37kv+jf/j5V2dKodk8yqv+4c3H/d2++ePs00vjL
SRq/NP7zyh9bGvntR6zrw+Ns80QpHenHU+Uhu38UQ/jViXn812mmf2X856PT
znT473/0SYzoOAl8f/PD//HCzqQb/qQaPCb6j/73rfGfL0x+5JivfpIpnvT7
Y4f219O7/874z51PMrRjf/+b6W/98I8Hp//32Z/4z2EPLxw=\
\>"]]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"Paley\"\>", ",", "157"}], "}"}], "\[Rule]", 
    GraphicsBox[
     NamespaceBox["NetworkGraphics",
      DynamicModuleBox[{Typeset`graph = HoldComplete[
        Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 
         19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 
         36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 
         53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 
         70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 
         87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 
         103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116,
          117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 
         130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143,
          144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 
         157}, {Null, 
          SparseArray[Automatic, {157, 157}, 0, {1, {CompressedData["
1:eJwl0W1EHQAARuHTrfV5+1hrdWvV6q5Vq3ZLJslMJjMzSTIzk8kkM5WZmcxk
ZiZJMklyTTKZmUkmSWZmJkkmmZlkZiaZmWQy2WEvz6/35ynu6GntjgGi/F+z
JrSleo9HWlM4AL1aVDAWrmhau2qKgxFtKnIA7mlJoXjo1KwCCdCiqLbVkAiP
ta6SJLilN0pLhqt6rj86lwJP9FU1QbivZeWlQpdeKy4NWvVUP3U6HQb0SaUZ
cFtvlXEQ2vVCezqfCaP6ptpD0K8V5WfBDc0p/jC0aVK/dCYbBvVZ5TlwR++U
GYJreqm/upALY/quU3nwQKsqPAI3Na/EfLikKf1WYwEM6YsqCuGu3ivrKHTo
lfZ1sQjG9UN1xfBQH1UUhm4tKPkYXNYz7ehsCQxrQ1XHoU8flF0K1zUjyuyv
CW2pvtz+WlP4hP21qGCF/TWtXTVV2l+bilTZX0sKnbS/ZhWI2F9Rbauh2v5a
1z/c017R
             "], CompressedData["
1:eJw9WmVf1s/XVBARkU4RFZBGREREpFtKpLu7u7tFukXkbd2v556Z3d//0fVs
P3t9z5yZM3M2tGu8qsvh0aNH/5fw6NFj/Do8efrs+Qt3T29f/8Cg4DchYeGR
0bHvP3z89PnL12/pmdm5+YXfS8p+/KyqqWtoamnr6OrpGxgaGZuYmplbWFpZ
29ja2fv1++jk7OLq5s/ff48dnZ46P3N94ebp4+sXEPgy6FXw6zchoe8icGTC
5+Qvqd8ysrJzcvO+F1dU1zY0Nrd19PYNDo2Mjk9Nz8zOzS9ubPK8o9Oz86vb
P38dnJ67enh6+wSEvIuIio7BGYmfkj5/TU3PyCooLPpeWlb+o6Kyqrq2vqG5
FTfr7ukdGBwZn5xaXF5ZXVvf4M0Oj05OL69ubv/+e3js5PzM5bmbu4e3n3+A
udnbkDCcjH+b+CXla1p6Fm6WX1BSWllb39Tc2tHVPzA8MjY+yZstLC5vbfPA
k/OLy5u7v/8cHJ84v3Dz8vb1exkWERUTG4dTkvAPv6VlZuUUfS8uwd1+VlbX
1NY3NrW247P19vUPDY9NTs8s826bW/xsxydn59c3f+7+PXZwdnnu+sLD08sX
X81cLTQsHAejEklf8dkyc3C1wqKy8ur6xpbW9q6ewaHRsYnJaV5taXl1Z5fn
nV1eXf+5/+fwxOmpi7uHj69/wKvwqJi49/E4JRl/MT0jOyevuKS0DFfDd6ur
b2xuae9ESfvx4UYnpmfnVnm17R2W9PTs4hJFuH/s8MQFFXX38vbxx2czV3sX
HomDgZLkb/hu2XmsR/GPilqUtL2zp294ZHxianqWV1tZXd/b53kX1yjDwxPi
w9PLzz/w5evImLj4Dwk4JAX/MDMrN6+AJcXN8NUAjta2zm6gbRCfbXxqdn5h
nTfb3SPazi+uru9YU8cnT11RUsItEJ/NXC0iMhonA8Ep6fhuuQUsR+nPynrU
tLO7b2B0bHJqZnZ+SSjZ/HXAAwG3O9T0KRECwAUGvXobHRef8DERp6TiL2bn
5BcUsaS4Gz4b4NHe0d2LVhjGd5ucmV9c2uTd9n+xFQi4e9TU6ekzN5SUeAvC
ZzNXi4qOxcHortRMfLf8IpajvKq6ETXt7h0YGp+YnkEjCMCb28Tv2QXwdo+a
PiNCgLeg4NehsfEJ7IUvQG1GZm5eYVExS4qr4bsBHp1dvf1o01F8uOk5tMM2
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
MWLK5e7/A5UUxos=
             "]}, Pattern}]}, {
         VertexCoordinates -> {{0.999199, 0.0400096}, {0.996798, 0.0799551}, {
            0.971309, 0.237821}, {0.505765, 0.862671}, {
            0.324201, -0.945988}, {0.996798, -0.0799551}, {
            0.847104, -0.531427}, {-0.983827, -0.179119}, {-0.738215, \
-0.674565}, {0.920982, 0.389605}, {-0.266863, 0.963734}, {-0.928593, 
            0.371099}, {0.470845, 0.882216}, {0.505765, -0.862671}, {0.605449,
             0.795884}, {-0.266863, -0.963734}, {-0.998199, -0.0599944}, \
{-0.990206, -0.139613}, {-0.857568, -0.514371}, {
            0.825164, -0.564894}, {-0.9998, 0.0200088}, {-0.966356, 
            0.257208}, {-0.109834, 0.99395}, {-0.380371, 
            0.924834}, {-0.975873, -0.218339}, {-0.589403, -0.807839}, {
            0.169267, 0.98557}, {0.847104, 0.531427}, {-0.877461, 0.479648}, {
            0.886882, 0.461995}, {-0.621252, 0.783611}, {
            0.0500045, -0.998749}, {0.089924, -0.995949}, {
            0.286093, -0.958202}, {0.961016, -0.276492}, {
            0.0100049, -0.99995}, {-0.109834, -0.99395}, {-0.652107, \
-0.758127}, {0.539875, 0.841745}, {0.1297, -0.991553}, {
            0.470845, -0.882216}, {0.751565, 
            0.659659}, {-0.955292, -0.295666}, {-0.228091, -0.97364}, \
{-0.966356, -0.257208}, {-0.417069, -0.908875}, {-0.738215, 0.674565}, {
            0.751565, -0.659659}, {-0.813696, 0.581291}, {
            0.992801, -0.119773}, {0.72457, -0.689201}, {-0.681917, 
            0.73143}, {0.435171, -0.900348}, {0.867688, 0.497109}, {-0.764613,
             0.644489}, {0.867688, -0.497109}, {-0.928593, -0.371099}, {
            0.169267, -0.98557}, {0.636807, -0.771023}, {-0.149513, 
            0.98876}, {-0.55661, 
            0.830774}, {-0.343065, -0.939312}, {-0.942697, 0.33365}, {
            0.286093, 0.958202}, {0.999199, -0.0400096}, {
            0.935832, -0.352445}, {-0.380371, -0.924834}, {-0.857568, 
            0.514371}, {0.961016, 0.276492}, {0.324201, 0.945988}, {
            0.971309, -0.237821}, {0.208564, -0.978009}, {
            0.777356, -0.629061}, {-0.913002, 0.407955}, {0.636807, 
            0.771023}, {-0.453099, -0.89146}, {-0.589403, 
            0.807839}, {-0.149513, -0.98876}, {-0.789787, -0.613381}, {
            1., 0}, {0.987214, -0.159398}, {0.573121, -0.819471}, {0.247527, 
            0.968881}, {0.987214, 0.159398}, {0.801902, 0.597456}, {-0.994999,
             0.0998839}, {-0.789787, 0.613381}, {
            0.949184, -0.314721}, {-0.188954, -0.981986}, {-0.895949, \
-0.444157}, {0.539875, -0.841745}, {0.435171, 0.900348}, {
            0.667146, -0.744927}, {-0.343065, 
            0.939312}, {-0.9998, -0.0200088}, {-0.998199, 
            0.0599944}, {-0.895949, 0.444157}, {0.777356, 
            0.629061}, {-0.994999, -0.0998839}, {-0.942697, -0.33365}, \
{-0.0300107, -0.99955}, {-0.305208, -0.952286}, {-0.990206, 
            0.139613}, {-0.652107, 0.758127}, {0.247527, -0.968881}, {
            0.886882, -0.461995}, {-0.836301, -0.54827}, {
            0.920982, -0.389605}, {-0.55661, -0.830774}, {-0.0300107, 
            0.99955}, {0.0100049, 0.99995}, {0.208564, 0.978009}, {0.935832, 
            0.352445}, {-0.0699783, 0.997549}, {-0.188954, 
            0.981986}, {-0.710635, 0.703561}, {0.605449, -0.795884}, {
            0.0500045, 0.998749}, {0.3988, 0.917038}, {
            0.801902, -0.597456}, {-0.975873, 0.218339}, {-0.305208, 
            0.952286}, {-0.983827, 0.179119}, {-0.488403, 
            0.872618}, {-0.681917, -0.73143}, {0.696416, 
            0.717639}, {-0.764613, -0.644489}, {0.980046, 0.198769}, {
            0.667146, 0.744927}, {-0.621252, -0.783611}, {0.36179, 
            0.932259}, {0.904657, -0.426141}, {-0.710635, -0.703561}, {
            0.825164, 0.564894}, {-0.955292, 0.295666}, {0.089924, 
            0.995949}, {0.573121, 
            0.819471}, {-0.0699783, -0.997549}, {-0.488403, -0.872618}, \
{-0.417069, 0.908875}, {-0.913002, -0.407955}, {0.36179, -0.932259}, {
            0.992801, 0.119773}, {0.904657, 0.426141}, {-0.453099, 
            0.89146}, {-0.813696, -0.581291}, {0.980046, -0.198769}, {
            0.3988, -0.917038}, {0.949184, 0.314721}, {0.1297, 0.991553}, {
            0.72457, 0.689201}, {-0.877461, -0.479648}, {
            0.696416, -0.717639}, {-0.522925, 
            0.852379}, {-0.522925, -0.852379}, {-0.228091, 
            0.97364}, {-0.836301, 0.54827}}}]]}, 
       TagBox[GraphicsGroupBox[GraphicsComplexBox[CompressedData["
1:eJxdlXswV2kYx10GuSWXlExKuW2JmFRseZYw1FIRKZpEaFe2tItsiLZQafWL
Uq61lHQhtrJRPUJWJJeEX3Lnh9/tRbJ0s7Wzfz3vzJkzZ8457/tcvs/nq+t7
wNVfSkJCIvPL9fXebhdgcnCagZu7cuDSyFxI+uAhqBpkYPz56gcWfhdcWX7G
pAaDsOvX9AQHX4BO1QsNK9MeqM2NWy2RLgCuwdwz97AFpNScLyfYi5H8j2Nj
8twIbQE8qDQw/1myF12PPqo4doThTP1p9d2ialzo7jwnNHsI37WWe8hfGMRb
iQ7WhYdFUMP3aHBi7fC2zifRUaMJg3xjC4dbxVC9/9mNWSUiZFL6MprlbWCh
tEjVbUkXSNvEKC38VkjjQ7j5PKV1dz9MaYv+6g0fofuh9PNIORhjeLa/T/pC
SQF+KHKKripkuM8zsbS16wkeUd9wyDxEgOmePctLQ3twqsrK/XEgH25kTKZk
qPfhOpcmjvdnhsU+8a2mUSng4Scf5CcUY9p3qqfnhzWCmcGnRxo6D5ET/cHq
4AsG68w90me2t2OHq1zE+osiKE+Jld5pxXAyaq1jwngdcm30C/ze9OFE523j
Ju4Iuuy5euzUjadgGPBofu1JBqSekBW9Zd43GkI07fGPO1PcBTGGK7w99gih
N/V9hBunE1T8mrs39fZjmb6lz3b1EZgBl4sr0/Khe1VUWPk7hrN0F++2lSkB
vUh2oLGLYfC2POkdm5tB4u+s9an5Ypxu33U5t1wMtysCYhSLm/BUv//4oajj
kOT2i17qDEOSH05VNhxV6RrA0U7emWTbYVxRnMnyHHphwKnZIpnxQdFBP1Qq
rRxyZPZ51ZcyJP1DWdP3Cs1Kw9DiO7pSpD0IMcZ28eUcMa6KXaJpJmxGnfgn
H+ea16PfrxVqKkYMSb3RwKrO2LboNZp26snGzhVRfQHZH613Zpg9l+ejdZHL
eXapD2ImnNNknzIIzByLCsl/jJIW9/bfNh2CBR1BNkyZh8pVxZc2NA/iXtll
/d2BQ7C2dGN4G7cDStJ70q81CDFs9UC2VpUAfGT97P5o7IYFmjkF98KHEdas
8s/LHgDyHomeab+xLbdD7YHPABxvMwlee2sYjVrzx9cvrcT46XEpYQ6DGqVt
1djQi1tR0evP83xwfszlVU+8wn/uzFNony3GfDNd3rllYrzYmRx/YucrIP0F
Mv/Ykr71rfu4CGp7jCJCf29Folc6D0D0QXlA+YFXHiblWBbXwlHz6njuJobz
TG7e0eoZBlSqTrDTHcC6Nv+pzWtEKPg6/tqvgeQPe4Luj5+beYMrDFYvaosT
0nkBUh/0rp32ZfYj+Ca9e2XT5X6U+G+NgsT/y3z4eKNNKoNknTgPw8AqjHw5
wZXc3geQtxi0LfnoYDM6NVnQADlDmqVqkgzI95C0QN3XJH8EVnMuKXrr9EN5
IUdvVhvD6MzByk+cB0DOB/6uh4tKdosh1TU10U+vBa/ttZS/alqDNYZ7h4L3
MxxzfLgu86YQ78e5HlENfkPnB4negC8XyrHdMQhe8p36Ia1DSPoPhE+Ud0DO
A9IPmg/VE44+0/m4qCwL5UY1Hbd8ZBhxNmtJfMJLPCzvErU4Qkx5CoQPQOqL
hF+48ULylvcVfBTOE8YFn+6l/oBE/zQeILwCoj8geofvZ0TKWvwidFDw7xUI
GJD+gG5yYsaJRzwsu1/ide43HhB/QcJXCLT74cDoCS64zg5Q9/EUUb0g4T+Q
+gHxS7iyXPX6Z5tuDGyJPB8pFADhEcoZKVsoOPFgc9GPc3iTPMofPBTUHHzS
m4HZXSvLDSHPqH6oX6CKfaw1x7ANfnqd+HLOKxFE6+Ssezv+RXcy2bwB+w4k
9aD+SPkNxG+AzButP5J8Kd+B8ILGi4TnNH7KEyB+QOuFpJ9I5pn6GxD/oH5N
+4URntct6st6MOGYltsdBwGQZ+p/QOYD/gVKMUmj
          "], {
           {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
            ArrowBox[CompressedData["
1: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
neFyuAvcJe4Kd427xd3hKrgH3CPuCVfHNXBNXBv3hnvHfeC+cD+4Pp6AJ+Nn
8HQ8Az+Ln8Mv4JfxErwUL8PL8Wv4dfwmXonfwmvwWrwOb8Kb8Va8Db+Ld+M9
eC/eh/fjA/ggPoQ/xB/hI/goPo4/xp/g0/gM/gyfw+fxBXwRf4Ev46/wt/gK
voZ/wLfxz/gX/Cu+i+/h3/Bf+B98Hz/E/00SJomTpMnpSfIkdZI2SZ+cnWRP
zk8uTHIneZP8ScHk4uTSpHByeVI8KZmUTsomNyeVk+rJrUnDpHHSNLk9aZ3c
nXRM7k06J12T7smDSf/k0WR88ngyNZmezEzmJvOTpcny5M3k7eT9ZGWyNvk0
WZ9sTDYnW5PtyefJj8nPya/Jn8n+5JBAJFAIVAKTMEtgEdgELkFMkBJkhDXC
OmGDsElQEtQELUFH0BMMBAthm7BD2CU4CF6Cj7BPOCAECSHCISFMOCJECTFC
nHBMSBJShAwhS8gR8oQi4YJwSSgRrgk3hHtCjfBIeCI8E14JXUKP8EZ4J3wQ
fgh9wnCKODU9RZ6amaJM0acYU8wp1tTCFGeKO8WfEkwtTi1NCaeWp0RT4qmV
KemUbGptSjmlntJMaadMU+Ypy5RtamfKMeWcck25pzxT3qnAVHAqOnU8lZw6
ncpMZafyU8Wpq6nrqbup+6nqVG3qcaox1ZxqTbWnOlPPU69TX1PfUz9T/akh
cZpII9KJc0QWcZ64QOQTV4gy4hpxg7hJVBCVRDVRQ9QTDUQj0US0Em1EO9FB
dBL3iQdEPzFAPCSGiUfECDFKjBMTxGNikpgmnhKzxHNinlgkXhJLxDLxinhL
vCNWiY/EOrFBfCX2iG/Ed+IH8ZP4RewTh6Rp0gyJQqKSaCQmaZY0R5oncUk8
Ep+0SFoiCUnLJBFJTJKQVkirJBlpjbRBUpM0JB1JT7KQtklW0i7JTnKS3CQP
yUvykfZJIdIhKU5KktKkM1KWdE4qki5JN6RbUoVUJT2QHkl1UovUJnVIz6QX
0iupR/oh/ZL6pOH0zDRjmjnNnp6f5kxzpxenV6fXpjemFdPKadW0elozrZs2
TpumzdOW6Z3p3em9aee0e9o/HZgOToemj6Yj09Hp2HR8+nj6ZDo5nZ7OTJ9N
n08XpovTl9Pl6avp6+mb6fvpyvTDdH26Od2a7k2/T39Mf05/TX9P/0wPyTNk
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
OW+Dt8lT8FQ8NW+Lp+FpeTqenmfgmXhm3jbPxtvjuXgenpcX4AV5Id4RL8KL
8455J7wkL8VL83K8c16Jd8O741V5Nd4jr8Fr8V55Xd4774P3xfvm/fKGvD/+
Il/Ml/BlfDl/nb/BV/FN/G2+jb/Lt/Md/D2+i+/h7/MP+H5+gB/mH/Fj/Dj/
mJ/hn/Gz/By/wC/yL/iX/BL/in/Nv+Hf8Sv8Kv+RX+c3+C1+h//Mf+G/8t/4
7/wv/i9/wB8KFgVCwbJAJBALpIJVgUywLlAIlAKVYEugEWgFOoFeYBAYBSaB
RbAtsAl2BS6BR+AT7AtCgkNBWBAVxATHgqQgJUgLTgUZQV5QEFwJ7gQVwYPg
UVAXtAQdQU/wJvgUfAl+BL+CwaJwcWVRuri2uL64uahY3Fq0LNoWdxcdi3uL
zkXXomfRt+hfDCwGF0OLkcXoYmLxeDG5mF3MLZ4v5hcvFi8XS4vlxavFm8Xb
xbvFymJt8WGxvthcbC12Fl8WXxe7i73Fj8XPxZ/FweLfknBJtCRekiytLMmW
5EtrS5tLqiX10taSdkm3pF8yLBmXTEvmJcuSdcm2tLvkWPIs+ZYOlvxL4aWj
pchSfCmxlFxKL50uZZbOlrJLxaWLpZulylJt6WmpvtRc6iy9LL0vfSx9L/0s
9ZcGS39CkXBVKBNuCDeFSqFKqBVahbtCh9ApdAndQo/QJzwQBoUh4aEwLIwJ
48ITYVKYFp4L88KCsCgsCcvCK+G18EZ4J7wXVoQ14aPwSdgUtoUd4YuwK+wJ
34Tvwi/ht7Av/FsWLUuWV5aly6vLa8vryxvLyuWtZc2ydlm/bFg2LpuWzcuW
5e1l6/LO8u6yY9m57Fs+WA4sB5cjy9Hl2PLx8slyejmzfLacXc4tny9fLpeW
75Zry4/LjeXmcnv5Zbm7/Ln8tfy73F8eLv+JJCK5aE2kEClFatGWSC/aETlE
TpFb5BF5RT7RgSggOhSFRUeiiCghOhalRGlRRlQQFUUXokvRlehadCO6Fd2J
KqKqqCZ6FNVFDVFb9Cx6EXVFb6J30YfoU/Qj+hUNxRKxVLwqlonl4g3xplgh
Vou1Yp1YLzaKTWKz2CLeFlvFNvGO2C52iJ1it/hAHBCHxIfimDguToiT4pQ4
I86Kc+JzcV5cEJfFV+KK+FFcF7fEbfGzuCt+E3+Lf8QD8VAilaxLNiQqiVqi
kWglRold4pS4JV6JT7IvOZAEJCHJkSQiiUpikhNJUnIqyUiykgvJpaQkKUtu
JLeSO8m9pCKpSR4kj5K6pClpSZ4lr5Ku5E3yIfmUfEm+JX3JYEW6IluRr6yt
rK8oVpQrqhXNin7FsGJcMa9YVrZXrCu2lZ2V3RX7yt6Kc8W94l0JrIRWwitH
K4mV45WTlfTK6Up25Xwlv1JYKa5crFyv3KzUVuorzZXOyvPK68rbysfK70p/
5U8qk25KFdItqUaqk+qlZume1C31SvelB1K/NCANScPSqDQmjUsT0pQ0LT2T
ZqXn0pK0LL2SXkvvpPfSirQqrUkfpU/SurQpbUs70ldpT/om/ZB+Sb+lP9Jf
6VD6typbXVtdX91Y3VxVrapXt1Z1q8ZV06p5dXvVumpb3VndXbWvOlb3Vl2r
7lXv6v5qaDW8GlmNrp6sJldTq5nVs9Xz1cJqcfVi9XK1tHq7erf6uNpcba++
rL6u9lY/Vr9WB6tD2ZpMKVPJtDKdzCAzyrZlLplXti/zywKyoCwkC8sisrgs
ITuWnchOZRlZTnYuK8iuZNeyG9mtrCKrymqyB9mjrC5ryJqytuxZ9iLryd5l
H7Iv2Y/sV9aXDeRr8g35plwhV8q35Bq5Vm6Qm+UW+bbcJt+R78rtcod8T+6U
u+QeuVe+L/fLw/KIPCaPy1PytPxUnpXn5AX5hfxSXpKX5Vfye3lFXpe35c/y
rrwnf5d/yX/kf2sba+q1rTX9mmHNtGZes6151vbX/GvBtdDa4Vp4LbIWWzte
O1lLrqXWztaya/m1wtrF2s3a7drd2v1abe1h7XHtaa2+1lxrrbXXntde17pr
72ufa19rP2v9tcHacO1vfWNdsa5cV62r17XrunX9uml9e926blvfXbevO9b3
1p3rrnX3umfdt76/7l8PrkfWY+uJ9eP10/XM+tn6+Xp+/WK9tF5ev1q/Xr9Z
r67X1pvrz+uv62/r7+uf6z/r/Q3FhmZDu2HcMG1YNrY3djd8G/6N4MbhRnjj
aCOyEdtIbCQ3UhvpjdON3Mb5RnHjYqO0cbdxv1HZqG48bjxt1DcaG82N9kZn
43njdaO38bbxufG98bPR3xhu/G0qNlWb6s2tTc2mftOwady0bNo2dzZ3Nx2b
e5vOTdeme9Oz6d30bR5s+jeDm4ebsc3E5slmcvNsM7uZ2yxsFjdLm1eb15s3
m7ebd5sPm4+b7c3Xzd7mx+bn5vdmf3OoUCl0Cr3CrLAorAqbwqE4UAQVh4oj
RUQRVcQUCcWJIq04VWQUZ4q8oqC4VJQUV4qKoqqoKR4UdUVD0VS0FG3Fs+JF
8aroKd4VH4pvxa+irxgqVcotpUapVeqURqVJaVZalbtKu9KhdCpdSrfSo/Qq
fcp95YEyoAwqD5VHyoTyRJlSppU55bkyr7xQXiqvlDfKW+Wd8l5ZUT4p68pn
ZU/5rvxSfit/lUPVlsqgMqq2VVbVjmpX5VQFVIeqI1VUFVPFVQnViSqlyqjO
VFlVTlVUXajKqivVjaqmelA9qp5UTVVL1VZ1VM+qV1VX1VO9qz5VX6pf1UA1
VG+ptWqdWq82qM1qi3pbvaN2qPfUTrVb7VF71T71vvpA7VcH1CH1ofpIHVWf
qFPqU3VGnVcX1EV1SV1W36jv1Pfqirqqrqkb6qb6Vf2u/lT/qH/Vgy3tlmnL
vGXb2tmybzm23FuhraOt6FZ8K7F1vHWyldo63cpu5bbOt/Jbl1ulreutm627
rcetp636VmOrvdXZet562Xrd6m29bb1vfW59b/1sDbb+NFqNXmPQGDUmzbbG
qrFp7BqnxqVxa7wan2Zfc6DxawKaoCakCWuONFFNXJPSnGrONFlNUXOhudRc
aa41d5qKpqqpaR40j5qWpq3paT4135q+ZqD50+q1Fu22dldr1+5pnVqvNqyN
auPaY+2JNqlNaU+1Z9pzbV5b0Ba1Ze2V9lZ7p61o69qGtqltaZ+1L9pXbVfb
075rP7Sf2m/tr7av/dPpdUadSWfWWXQ23Y5uV7enc+s8Oq9uX3eg8+sCuqAu
pDvUhXURXVQX1x3rTnVnupzuXHepK+nKuhvdra6iq+kedI+6J11d19E96951
37pf3VD3pzfqrXqb3qHf07v0bv2+PqKP64/1SX1Kn9af6s/0OX1BX9Rf6C/1
1/ob/b2+oq/pm/qWvq3v6F/1XX1P/6Z/13/qv/Tf+l/9QD80GA1mg8WwbbAa
dg12g8PgMngNPsO+wW8IGIKGkOHQEDYcGSKGmCFuODYkDWeGnCFvKBjKhivD
teHOcG+oGR4NT4a6oWFoGl4Mr4ZPw69hYDQbd4y7RqfRZfQYvUa/MWY8NiaN
aeOpMWM8M+aMeeOF8dJYMpaNt8Y7Y9VYMz4a28aO8dn4YuwZ34zvxg/jp/Hb
+GP8NQ6MfyazadtkNdlMOyaHac/kNHlM+6YDk98UNIVMh6aw6cgUMUVNMVPC
dGxKmtKmnClvKpouTNemG9OtqWKqmh5NdVPD1DS1TG1T19QzfZsGpj/zttlu
dpjdZo/ZZ943B80Jc9KcNmfMZ+asOWfOm4vmkrlsvjJfm+/NFfOD+dFcNz+b
X8yv5q753fxh/jR/mb/Nv+a+eWD+s2xbbJYdy67FbnFaXBa3xWfxWwKWoOXQ
ErYcWSKWqCVmiVsSlhNL0pK2ZCx5S9FyaSlZbi13lntLzfJgqVualpalbelY
ni1vlnfLr+Vv27a9t+3c9m77tg+2/duH2yfb6e3MdnY7t32+nd8ubl9uX21f
b99s325Xt2vbT9v17eb263Z3u7f9tv25/bX9vf2z/bs92B5u/1lt1l2r3eqw
7lndVo/Vaz2wBq0h66H1yBqxRq0xa9yasB5bT6wpa9qasWatReultWy9st5b
K9aq9dH6ZG1a29aO9dn6Yn21flg/rQPbrs1lc9v2bQe2gC1oO7KlbBlb1nZu
y9sKtqLt0la23dhubXe2e9uD7dHWsDVtbVvP9mZ7t33Yvm0/tl9b3zaw/e3s
7jh29nacO64d745vZ38nsHO4E9452onuxHbiO4md452TneROaud0J7OT3Tnf
udwp71zv3OxUd2o7Dzv1ncZOe+d552Xndae709v52vne+dt17Hp2vbv+3cBu
aPdwN7p7upvdPd8t7BZ3L3Yvd8u717t3u/e7ld3q7tNufbe129593n3f/dj9
3P3a/d3t7w52h7t/dofdaXfZ3XaPfd9+YPfbQ/Yje8QetcftCfux/cSetKfs
afup/cyetZ/bC/ay/dp+a7+zP9gf7U/2pr1lf7a/2rv2nv3N/m7/sf86nA6f
Y98RdIQcYceRI+44c5w7Co4Lx6Wj5Cg7rh23joqj6qg5HhwNR9PRcTw7Xh2f
ji/Ht+PHMXAMHX97zj33nmfPu+fb8+8F9oJ74b3oXmwvvne8d7KX3EvtpfdO
9zJ7Z3u5vfO9wt7F3vXe7d79XmXvaa++19hr73X2Xvd6e29773sfe597/b2B
0+08cPqdh86wM+KMOo+dOWfBeeEsOcvOK+e189Z576w5H5yPzidny9l2vjhf
nT3nt/PH+evsO/9cbpfX5XPtuw5cQVfIdeiKuOKuhOvYlXSlXGnXqSvjOnNl
XTlX3lVwXbhKrlvXvavqqrkarqar5Xp2vbh6rnfXh+vT9eX6dg1df26vO+AO
uo/cEXfMHXcn3Xn3hbvkvnJfu2/ct+57d9X96H5y190Nd8f97O66e+5396+7
7x64hx6vZ99z4PF7Ap5DT9hz5Il5jj0nnqQn7Tn1ZDxnnqwn5zn35D1Fz4Wn
5Lny3HuqngfPo6flaXs6nldP1/Pu+fR8eb49P55f77435D30Rr0xb8J77E17
i96S98p747313nnvvVXvg7fubXib3pb3xfvqffO+ez+9A+/Q++fb9/l9AV/Q
F/Id+SK+qC/hS/pSvrQv4zvzZX0537kv7yv4ir5LX8l35bvxVX0Pvidf3dfx
PftefD3fm+/T9+378f36+r7Bvn8/vH+0H99P7J/sJ/cz+5f7V/s3+3f79/uV
/er+w/7TfnO/td/e7+x393v7H/uf+9/7fwf+g+BB6ODwIHwQPYgdxA9ODtIH
pweZg+xB7uD8IH9QOCgeXBxcHpQPrg5uDu4OHg6eDhoHzYOXg9eD7sH7wcfB
98HvQf9gcDA8+PMH/RF/1H/sP/Gn/Gl/1l/23/jv/BV/1V/zP/if/A1/29/x
P/tf/G/+d/+X/9v/GwgGDgPhwFEgEogHEoHjQCqQCZwFsoHzQD5QCBQDF4HL
QClQDlwHbgJ3gUrgKdAItALtQDfQC7wFPgNfgd/AIDAM/AUPg7FgPJgMpoKn
wUzwPHgdvAtWgrXgQ/Ax+BRsBFvB5+BL8DXYDX4EP4M/wd/gIHQYOgpFQtFQ
LHQcOgklQ6ehbCgXOg8VQsXQRegyVAqVQ1eh69Bt6C5UCdVCjVAr1Ak9h95C
76GP0HfoJzQI/R0eHSYOjw/Th6eHZ4fZw8Lh7WHlsHb4ePh0WD9sHLYOO4ev
h93D3uHb4dfh92H/cHD4Fz4KR8OxcDycCCfDqXA6fBY+D+fDhfBF+DJcCpfD
V+Hr8E34NnwfroRr4cdwK9wJv4Rfwx/hz/BX+DfcD/8dRY9OjpJHmaOzo9zR
+dHF0f1R7ejxqH7UOGoetY46Ry9HvaO3o/ejj6Ofo9+j4dFfJBqJRxKR48hJ
JB05jWQiuUghUoxcREqRcuQqch25idxG7iL3kWqkFnmM1COdyEukG+lFviLf
kZ/IIDKMxqOpaDqajeai+WghWopWo4/RerQZbUXb0U70JdqNvkc/op/Rr2g/
OojFY8exk1gyloplYmexbCwfu4hdxkqxq9h17CZ2G7uL3ccqsWrsIfYYq8ea
sZdYN/YWe4/9xH5j/dhf/Dh+Gs/Ez+P5eDF+Eb+KP8Tr8Wa8He/En+Mv8W78
Lf4Z/4p/x3/iw/hf4jiRTKQS6cRpIpvIJc4TxUQpUU5cJW4St4m7xH2ikqgm
aomHxFOinmgm2olu4i3xkfhM9BODxPA4eXx2nD0uHBePL49LxzfHT8fN4/bx
8/HL8etx9/jt+OP4+/jn+Pe4f5I8SZ+cnmROzk7OT/InhZPLk6uT65Obk7uT
+5PKSfWkdvJw8njydNI4aZ60T55P3k4+Tr5Ovk+GJ3/JdDKXPE9eJC+T5eRV
8i7ZSLaTz8nXZDfZS74lP5Jfyd9kPzlIDlPpVCZ1lsqmcqlCqpi6SJVTN6nb
1F2qkqqmaqmH1GPqKVVPNVKtVDv1nHpNfaS+Uj+p33QmnU8X0qV0OX2dvklX
0q30c/o13Uu/pd/TH+mv9E96kB6m/04zp9nT3On5af704vTytHR6fXp3en9a
Oa2dPpw+nj6d1k8bp83T1mnn9Pn09bR3+nX6c9o/HWSymWLmInOVuc7cZu4y
tUwn85rpZd4zH5nPzFfmJ9PP/J1lz87P8meFs+JZ6ax8dnV2e1Y5q57Vzh7P
ns7qZ42z5lnrrH3WOXs5ez3rnb2f/Zz1z4Znf9nz7GW2lL3J3mbvs5XsY/Yl
28u+Zz+zX9nv7E+2nx3mznOFXDF3kbvMXeWucze5+1wt95B7zNVzjVwz18q1
c53cc+4l1831cu+5z1w/NzwvnJfPr87vzu/Pq+e18/p59/z9/PP8+/zn/Pe8
fz7MF/IX+ct8KV/O3+Rv83f5av4x/5Sv55v5Vr6d7+Sf8y/513w3/5Z/z3/m
v/PDwkXhunBTqBSqhYfCY6FZeCt8Fr4Lv4V+YVAYFi+KpWK5eFW8Lt4V74uV
4kOxXmwUm8V2sVN8Lr4UX4vdYq/4Vvwofha/i78XpYvbi7uL2sXDxdNF/aJ9
8XHxffF7MbgYXvxdli6vLq8vby5vLyuX1cva5dNl87J12b58vny5fL3sXvYu
3y7fLz8uvy6/L38vB6Wr0n2pUnosPZUapWbpufRV+i0NSn/lq/JN+bZ8V74v
18oP5cdyo9wud8rP5ddyt9wrv5Xfyx/lz/JX+af8Wx6U/65urqpXtav6VeOq
ddW+er36uRpc/V3fXN9d319XrqvXj9dP1/Xr1vXz9cv163Xv+u36/frj+vP6
6/r7+ue6fz24/ru5u3m4ebxp3rRuOjfPN72b/s3f7d1t5bZ6W7t9uK3fNm6b
t53b19vube/2/fbj9vP26/b79uf297Z/O7z9u6vcPd3V79p3nbuXu9e797vh
feW+dv9w/3j/dN+8b92371/ue/dv9+/3n/df99/3P/e/9/37wf2wUqs0Ks3K
c+Wl0q30Kp/VWvWx+lStVxvVdrVTfa52q+/Vj+pn9bv6U/2t9quD6rD6V3us
tWrt2mutW3urvde+Hx4f6g+Nh+ZD6+H54eXh9eHt4fPh6+H74feh/zB4GD78
PdYfO4/Pj73Ht8ePx8/H36f6U/Op9dR+6jy9PnWfek8fT99PP0+/T4On4dNf
vVl/qb/W3+sf9a/6d33QaDbajU7jufHS6DXeGu+Nr8Zvo98YNP6a7Wa32Wt+
Nr+aP83f5l+r3XpuvbReW93We+uj9dn6aQ1aw9Zf+7n91n5vf7d/2v32oPPc
ee10O73OW+ez89X57vQ7f8+vzx/Pn8+/z/3n4fPfy+tL7+Xt5f3l4+X75efl
92X42nv9ev1+HbwOu73ue/ej+9n96v52+91B77330/vt/b29v32+fb19v/28
Dd6Gb3/vn+/998HH58f3x8/H70f/4+/z+3P4+ff1/fX71f8afA2/f39+fwY/
w5+/30F/0P8b/A3//gfiVMaJ
             "], 0.022610653571041833`]}, 
           {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
            DiskBox[1, 0.022610653571041833], 
            DiskBox[2, 0.022610653571041833], 
            DiskBox[3, 0.022610653571041833], 
            DiskBox[4, 0.022610653571041833], 
            DiskBox[5, 0.022610653571041833], 
            DiskBox[6, 0.022610653571041833], 
            DiskBox[7, 0.022610653571041833], 
            DiskBox[8, 0.022610653571041833], 
            DiskBox[9, 0.022610653571041833], 
            DiskBox[10, 0.022610653571041833], 
            DiskBox[11, 0.022610653571041833], 
            DiskBox[12, 0.022610653571041833], 
            DiskBox[13, 0.022610653571041833], 
            DiskBox[14, 0.022610653571041833], 
            DiskBox[15, 0.022610653571041833], 
            DiskBox[16, 0.022610653571041833], 
            DiskBox[17, 0.022610653571041833], 
            DiskBox[18, 0.022610653571041833], 
            DiskBox[19, 0.022610653571041833], 
            DiskBox[20, 0.022610653571041833], 
            DiskBox[21, 0.022610653571041833], 
            DiskBox[22, 0.022610653571041833], 
            DiskBox[23, 0.022610653571041833], 
            DiskBox[24, 0.022610653571041833], 
            DiskBox[25, 0.022610653571041833], 
            DiskBox[26, 0.022610653571041833], 
            DiskBox[27, 0.022610653571041833], 
            DiskBox[28, 0.022610653571041833], 
            DiskBox[29, 0.022610653571041833], 
            DiskBox[30, 0.022610653571041833], 
            DiskBox[31, 0.022610653571041833], 
            DiskBox[32, 0.022610653571041833], 
            DiskBox[33, 0.022610653571041833], 
            DiskBox[34, 0.022610653571041833], 
            DiskBox[35, 0.022610653571041833], 
            DiskBox[36, 0.022610653571041833], 
            DiskBox[37, 0.022610653571041833], 
            DiskBox[38, 0.022610653571041833], 
            DiskBox[39, 0.022610653571041833], 
            DiskBox[40, 0.022610653571041833], 
            DiskBox[41, 0.022610653571041833], 
            DiskBox[42, 0.022610653571041833], 
            DiskBox[43, 0.022610653571041833], 
            DiskBox[44, 0.022610653571041833], 
            DiskBox[45, 0.022610653571041833], 
            DiskBox[46, 0.022610653571041833], 
            DiskBox[47, 0.022610653571041833], 
            DiskBox[48, 0.022610653571041833], 
            DiskBox[49, 0.022610653571041833], 
            DiskBox[50, 0.022610653571041833], 
            DiskBox[51, 0.022610653571041833], 
            DiskBox[52, 0.022610653571041833], 
            DiskBox[53, 0.022610653571041833], 
            DiskBox[54, 0.022610653571041833], 
            DiskBox[55, 0.022610653571041833], 
            DiskBox[56, 0.022610653571041833], 
            DiskBox[57, 0.022610653571041833], 
            DiskBox[58, 0.022610653571041833], 
            DiskBox[59, 0.022610653571041833], 
            DiskBox[60, 0.022610653571041833], 
            DiskBox[61, 0.022610653571041833], 
            DiskBox[62, 0.022610653571041833], 
            DiskBox[63, 0.022610653571041833], 
            DiskBox[64, 0.022610653571041833], 
            DiskBox[65, 0.022610653571041833], 
            DiskBox[66, 0.022610653571041833], 
            DiskBox[67, 0.022610653571041833], 
            DiskBox[68, 0.022610653571041833], 
            DiskBox[69, 0.022610653571041833], 
            DiskBox[70, 0.022610653571041833], 
            DiskBox[71, 0.022610653571041833], 
            DiskBox[72, 0.022610653571041833], 
            DiskBox[73, 0.022610653571041833], 
            DiskBox[74, 0.022610653571041833], 
            DiskBox[75, 0.022610653571041833], 
            DiskBox[76, 0.022610653571041833], 
            DiskBox[77, 0.022610653571041833], 
            DiskBox[78, 0.022610653571041833], 
            DiskBox[79, 0.022610653571041833], 
            DiskBox[80, 0.022610653571041833], 
            DiskBox[81, 0.022610653571041833], 
            DiskBox[82, 0.022610653571041833], 
            DiskBox[83, 0.022610653571041833], 
            DiskBox[84, 0.022610653571041833], 
            DiskBox[85, 0.022610653571041833], 
            DiskBox[86, 0.022610653571041833], 
            DiskBox[87, 0.022610653571041833], 
            DiskBox[88, 0.022610653571041833], 
            DiskBox[89, 0.022610653571041833], 
            DiskBox[90, 0.022610653571041833], 
            DiskBox[91, 0.022610653571041833], 
            DiskBox[92, 0.022610653571041833], 
            DiskBox[93, 0.022610653571041833], 
            DiskBox[94, 0.022610653571041833], 
            DiskBox[95, 0.022610653571041833], 
            DiskBox[96, 0.022610653571041833], 
            DiskBox[97, 0.022610653571041833], 
            DiskBox[98, 0.022610653571041833], 
            DiskBox[99, 0.022610653571041833], 
            DiskBox[100, 0.022610653571041833], 
            DiskBox[101, 0.022610653571041833], 
            DiskBox[102, 0.022610653571041833], 
            DiskBox[103, 0.022610653571041833], 
            DiskBox[104, 0.022610653571041833], 
            DiskBox[105, 0.022610653571041833], 
            DiskBox[106, 0.022610653571041833], 
            DiskBox[107, 0.022610653571041833], 
            DiskBox[108, 0.022610653571041833], 
            DiskBox[109, 0.022610653571041833], 
            DiskBox[110, 0.022610653571041833], 
            DiskBox[111, 0.022610653571041833], 
            DiskBox[112, 0.022610653571041833], 
            DiskBox[113, 0.022610653571041833], 
            DiskBox[114, 0.022610653571041833], 
            DiskBox[115, 0.022610653571041833], 
            DiskBox[116, 0.022610653571041833], 
            DiskBox[117, 0.022610653571041833], 
            DiskBox[118, 0.022610653571041833], 
            DiskBox[119, 0.022610653571041833], 
            DiskBox[120, 0.022610653571041833], 
            DiskBox[121, 0.022610653571041833], 
            DiskBox[122, 0.022610653571041833], 
            DiskBox[123, 0.022610653571041833], 
            DiskBox[124, 0.022610653571041833], 
            DiskBox[125, 0.022610653571041833], 
            DiskBox[126, 0.022610653571041833], 
            DiskBox[127, 0.022610653571041833], 
            DiskBox[128, 0.022610653571041833], 
            DiskBox[129, 0.022610653571041833], 
            DiskBox[130, 0.022610653571041833], 
            DiskBox[131, 0.022610653571041833], 
            DiskBox[132, 0.022610653571041833], 
            DiskBox[133, 0.022610653571041833], 
            DiskBox[134, 0.022610653571041833], 
            DiskBox[135, 0.022610653571041833], 
            DiskBox[136, 0.022610653571041833], 
            DiskBox[137, 0.022610653571041833], 
            DiskBox[138, 0.022610653571041833], 
            DiskBox[139, 0.022610653571041833], 
            DiskBox[140, 0.022610653571041833], 
            DiskBox[141, 0.022610653571041833], 
            DiskBox[142, 0.022610653571041833], 
            DiskBox[143, 0.022610653571041833], 
            DiskBox[144, 0.022610653571041833], 
            DiskBox[145, 0.022610653571041833], 
            DiskBox[146, 0.022610653571041833], 
            DiskBox[147, 0.022610653571041833], 
            DiskBox[148, 0.022610653571041833], 
            DiskBox[149, 0.022610653571041833], 
            DiskBox[150, 0.022610653571041833], 
            DiskBox[151, 0.022610653571041833], 
            DiskBox[152, 0.022610653571041833], 
            DiskBox[153, 0.022610653571041833], 
            DiskBox[154, 0.022610653571041833], 
            DiskBox[155, 0.022610653571041833], 
            DiskBox[156, 0.022610653571041833], 
            DiskBox[157, 0.022610653571041833]}}]],
        MouseAppearanceTag["NetworkGraphics"]],
       AllowKernelInitialization->False]],
     DefaultBaseStyle->{
      "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
     FormatType->TraditionalForm,
     FrameTicks->None,
     ImageCache->GraphicsData["CompressedBitmap", "\<\
eJysvWmMJll2Hfapc8/KrKxcqiprr+qujq+6u5bearq7ZnqZ4Wwd8XWPOBzS
nI3UcDicTZTI4VCiCHIiSImSbNEmIRmUZFswbMKESFj+Y8G/bAEGYRheANsA
+csCROqvIdMckkNSnOlwRrx37znnvsisato/KrPyWyLeu8u5595334u3Pvf1
L33hRz/39S9//nPXP/K1z/3Yl778+Z+4/uG/+rWjl5b+wmz2F24P/67Plo/+
389mxY87s9mf5///7vjz3L2jHz959O+X8+/76d3Zu3l96rV/P338b40/5/ET
w8v/0/7Bud975tn3fPvVD771e3deeOV/OTh34dffxeu/s3dw7nc3Nk/Fz37t
XY5+9nPpvW+MP5+f+sgPh9t/8+bTd/9w7+Cw/9j3f77/j37jv+9/9Z//r/1/
8l/+Zv89n/nSH+6fvdC//uG3H/X1/vrNW/1P/51/zK/9q1Nb27+1t3/2UcXz
ixNj/pk0q78x/tx9FAX81v7Zw0GgMqvPfOEn+tvPvjT8PVsaXjn6OYzy7vOv
DCMNrz0oXnvxwQf67//cX5k9Nr522Hf/wX/2zuGla4XkPrj4vkmJPv/y68Pr
33zm3v1HUfJfS7P+ifHn3iPp8s7zL4+6uf3cS1E340iPdPNYntDb3/dD/fs+
0Ix/LefXXvvg2/1H3v5k/uu419aOVP8xe23895e+8lP90aREsIOwn7r74vha
uude/7f/w3/aP3v/fVOmdpyZTJnDjyfB/JVpwUyaw87e/u/u7h1M3bm/9+J7
+5/7pf/8MdL0vRfeS5pe6j/31Z/un3vPa/2v/Np/6xMcLnN0C7GS41574eXX
+0/98I/79erv/kz/4PWPiqAHhTx4I71mnxsEO9wXgt0erO47U1Z3gnXNfixJ
7EfHn9uPDAHPvefVd27dfqFwmPvvTY6QXrs62sj7P/pxt4d/7x/9s1Gqi0/8
4CCy8bV/9E//xXj9/fOX+9c+9NYjv37t8blDyvDacN357eeHz4mp3Xlh1M6U
eS+RNM1MH8vSPMEkB+l9agpkv5qk+aXx51a0v09m6R4HPTaa5uOfdRtIDni3
f/1D6ljD15++957+6bv3RTAvvPJGv3f2Yn/r7nv6V954s3/q3sv92au3+50r
z4+/bx39/bDX9w4f77f3LulrF548ev1Gobjvaj4x3o9f//QP//ho66QINuvj
TXh9EPC3jiDqXx8T8b6S5PvF8ed6tNbhk797FC+/dfb8peGqJ2l88Nun790n
vx21399JiC+GdnDpZr97eLOQ3cH8A/35O4t+/+ar4+8br32ln9ddf+ONv5xe
fyK//vpX+3mTX7+dP387ff766/m1J/DahWc//ki6euLWvX734EKhE3KESatP
NnXqyDnf6h+vnonW/dv7Z8///WjZP5Ik//nSsgcONODzJIJevvYEI2iJlpf7
n//lX+3PXbhyLCTcqO6KFA7vvK0SzlKbN21fHf0bNFDVw+/8/yb/nX4/Nnxw
tpr/7NLv4WvD19Pb3WPDl4/C+KjM1/+yKPn6a18dP++vZyWfvfWh0pEmnGbC
OSw2fO8PfNUD6ZEAv30EC986d3ilwOwvJF380PhzLXrBty5cufHtW888N0Fm
HvTf/akfySZx9kQs3jl79cjs56XJVx9Qc82mnYV+dKejv46GX+XX5lkhJuVq
0c2SBtbS66aYUXn+nZmp4ei/m1mruNDw/8rUV5v68scP8jXbSc1F1zrOhQYZ
XLr6eP8L/+DXkrdsHoWgt/vvqj8hnrKzux895XNJOT8w/twsHOX0zhlxlBHr
3//myniT/dElbzz51CNB+vk7b/XXgyNcHx1hFMuRDI8EZOY+Cnc0cTL3Jpn7
0vBxaKXN7tL6F7KGZskvNvxi6fXkXn7hUTnps+mijw2fOdKL3dYd1a5i+mJ4
HDzqqQmPOvKmwyuPR+9RFrXW/+CX//rAar/19N0XC+/5S0lBnz3Ge46iz7cP
L14dnVFh61WCrQspAD/7cr+1e1h4yT4HBtOKeANkBwlk+S3y64s2e8oGfTb/
rkk3ST/5s7tQtCu8pc+3cBjTsf/uTCNZz89AQ+6ZgpXZ6zv3XNNqRXO8/gYF
uCOZXL7/qVFGUx43hIYjjxtfG+jX8PdEVJlyu9lnklo/Of688cgBarjFUYBy
cjr8PTW089fv9pde+H6N60dqrWpVqeNUPYhxMPwViM3Uld47ctEdMQHyS8W2
mj/jGJhc7Ciau/jT+0l7K/41+F22kvS9Jai+MVPbye5PZonrSlSdkwNXNY9n
w000gu2tO/f7s4eX+09/4WtKAu+/SsHqZO/9dFLz97/L2Pfig/dT2rbRf/5H
f2YkHfM7LxbkIk+JY9Camr7poh7dNbvLKQ1oE25Bbp4D5QrpwG1ntJtRSe3S
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
OQGmnr6ziYWV8R4By4uFfAZcm+TUdS7pESpOfOHR++FWTtE+e/ezw5M33hue
vvWZ4dOfb4dHr709bhj1WyOKnGVI2TzBhlEfVg4CFglkz02BF60PspSe099Q
VOjpsUw9244pGGHNgoXelsKtzUg+pV9xbhHcNs8Fc0bi5QRV6f/LmfcC57T/
G2fD5t6d6k3rkUXvq1hpEpEP6QUaSolEj+RyZbCSkCkeA8TCpd82ImDCByIE
WZMn4CVcQYmS9wRlIpGHfTGAsfsTgShJf4gRkwql36fL7pRPEggDfqYIOLtu
XFXNeKmPhuOpSHeFPcZddAI8REG3XfyeFxuorYViW21NgVtgrc6X33S7RU6F
Uc9uVzd9Lr1QRnb4d//hPxl+9hf/trXR/tG9V578WkSUE24M1XappHw4o5Qw
z8j7OLm/ul7rJCY/dGLvNe3VIA/vEKFdJ26/RCrsZrwKleisn7TOCAN1iL+K
MQNjS8YR346nCcoT+DTisA6lTDboDCenNbPTspjidkPJs/P3LNG1ELa7oKa3
fBs+4I7A02yc1K1m1Ss93iSyBPCXAwaU2IAzV3V2HWcYphysc5XuoiJioLr2
b6n0EQAIQDd90KOzftuiyM98gOmk5dNPk5RASXhvjJIikf1QY1eAM1Ohdlod
NPtY5JaYxsDz4j2GV6NlTWFf07/3j9mqJYc7CVDOnWz3JzwmNSMCUjujxfZ4
UB5TceL0mcpy1ZlSP4zYraXL2nku16b1N0wxFMdUGxViYlrE5cfgnUm6EK+a
zcJo9CXcgyzQxzWd0Mf+a2acQl8oC2g7rS3ENjxVyC46KBRAqcg3gVMJCjHX
7pjNRCfRdqJ48PsZ46Y51twIib7tTTdkYW9j4Hr0q5cJ3fFrhiU2EuEiIpMZ
3ACrVllFHtOyInS25yzPLaXuqfhi++n0Q5xrcj1K+pZzUxLPTXbraXs/lAK4
AM7E+jdzf8EPQU9H5aUch1zNJWDPMozM7fh0Jp6HLIab0JVPq0GOT5VXOEJZ
0i7CPItWbJMBkZ8B0qbOLmuxWfaSDjFg+HeuN+r6RRW3E2x6mOL6BPv8/yVs
AlzBf1vBliAwsgSUXRhHo/P0n3IQSVczAlPw55a71TsRSA3i1VXXRR3ZCoUg
RDpJk8/Us1DnRn6TzWQ7WDbkHfDGmIHsYQeukt6+TEZKuNDw/3U2tTUozDTk
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
zc/mvQ4dySL4UIalNMxqFvZhps4/mNuQWkBxLNuap9MO1LWK7Hgcwnh23099
+5eZnY/q/cqTNwt2/m5S6/dW5BylC/vsbM4x12ldq0OijBXNeIqXrrYCLAVk
Z2D2TNM5QcMY2TAimqfUHd5x/dwvhJOfcElGn1r8OTX1qVHSM1JWuMHsYzUz
nEcGcsk40GnQrCCSXSIFY14tcVzLgLwJ+6fvaXWA7F/9nfF6dAIqwc5ppLOg
qgGw0YFwXoI1VvgTlFYr66X5zd/+ne9fuXHrf2D2nZC5+nSZT0Q79Nlj8onQ
FaQnKNS0WH9PBO/BkYRy7LwDSWmBNjgkkp17zzoX9JLIIBNFJ0o+ieiipxiw
bjk7nrBkbxBVGr/FnawaRSjWA/Mqt85eliKQHipny0O8KxeTpFDQbwT+jA5K
IFb9xsNwonrBZyZZbOjl3FKdI3n+lb0WWZNTjDuJYtx/9e24hGXcq3jcSHyG
YSTFrT4z0yawlldAvyAzSPGtJytmjr1p5GgmYrlIj5ZYmrxvZ3uWkteS/QDz
ZfU9x/2FdXZs0SxgVhDSu/GgcKWAkUm+F4liHX2By8ED8Ly7rmiij+BRrsQb
gV8THy5ozryI1HmuqWc25B0/W/pnk6wop8JN+uQLGreptnecT+/zcpIR8S5f
vUkFyDMfv//Fr/7p3v7F/yecwPQ+q+InSdmdm1RyPDZ4Ygi3356SGjdzVRJR
Gk2ghUHCqZYIZcqwKshakNFkS1mT1m3Xuqi5nSXfJunrRUU5ZnXC7gx3mWr0
xSPWeq6YAmnvQDy2VJoBELRpyVspQUmWCD7JGoRipwfNnmcLOs5hAQFAHlP6
+gXBA0HsGQQmWm3Tg2VZTBoWLW9VbT+fW+v+re/+6vDotbeQjZg2bv9nD5+8
+d/mtIPxgKS01QcnTsJdmLITI2Uej6SfqzPOTQE8Up+SDXQet84e5R12yPKj
fnUiMtKhynMWIn6fbXf3zoTZwhao+S5nnoJAjxwfWLy9TZgV16eDgVRG0Od4
Q2Ap9n4ub4SMtg1p2YX3RfCVS9WZOmFAq78Nj53Hf1GdOK7toqqDcsPho69j
PB82l0RO5b1dT1IL/FxS1c+eJIe2dcIuqKxpfLY24d9GEI1SnYWdmHzFdZmz
RdHU5xOXLEFVONQa0nlycZmGTAQvwSxuXXlJ237nlJvXSK2adGpFaXAtAkm7
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
14+nef7JMk3x60d//un27gUx86/8hW+Ot7LI4UWpsKuvfT2mLyqZy6UFDu6D
k9HccCFI4l/iPJrDwNo5mpfgTuyJXLBF+bHI6XPntQZ8lCFKz0QrdBmjs9rn
OBDHaeoS4/0DoiGbiVEVsaJzBj968Oob3790eL2oaH8zze63Vljx4bWbHy0e
vkbbMc1Z8W7KRh0Na3vvSpFd2Lvz3OmmZaiyv0xmtQsmJ9klt9AAfUIEe0I6
/6NukqDWWjx63JKRlHd/VB5Z27KdeAy5rfncVxt3ttHNxmBj0DwWwGaM1NpZ
jynE/d7+waW/E+z0p9NE/swKM93d258z0wQIe1OReNzZl0309SOmdvHwxvDw
KGyLzOw2rRfKzjlj5GEBv2JzIWRZUZ7y2REe5ABJS3CUzXGyzg1rmZ3DZWJk
GlxFP3MrkKRVAdLot/72v/WfHGd7P/dL3/vo8pXr35/rJvlLacr+8glsjxj0
xw9fe2vi7Om2lyeIHYP3uRFeuv7yNPrCJu8+B7wgaxw9qheWhDARdS1oiE9L
gsuXCkOCnDGzXFWTlFq239vUOq5g+OoLo5knz94jVnO8WZ3f249m9bNpjn5u
+nv7hWaVr/TxeELXEckVyEz5+zy4q54RGaezmLYrLw137z+ZNzuatlEQtz5N
wnmARdJIlfA+wNlcRiC7zRkjJ0UcoYjcqUwfb7n/8vsFwo30/eDq3eOCC5um
8SeZjVSnTmA330lz8t3p7425hMOYlvrjK9dvokNwzXLhaXMpunPOQ+Q7v+m5
sHGgLzKl8xdvTA9ZJtQ/pCYLjV9uf1qVeXwfgsZ349I1u/bO1Ycq7GfvH+nL
zSI3OyLRi2n+trGD4Yjqn8Qg/koS/s+XBjG+tnOR3ze//cuTluti6WnAKHE8
GT740g8PP/S1n5x+Yg8RDaT/+/94uP3yfMi6CusKga2YuKSxd4prf3H545Mf
nE22v/EeLb1aSz78gy+Tkm3Pke3f39u/+LvbO7tzcdVfTQL+penvnajd/+xO
/fCPzu9dXJF0vTH6o5Bv+ewkZXNIpPJUWmQ2d3ElNM1JYtWMkPrZcH76O78y
jJoWNfLN9z5PGpn86CtP3oyLe1Zx2KiDo5b+YhLiX5v+3o/f+BszkPG/HEH5
729sba1oJ3nOcM7a+8ngRYWg7uF9EQxr0hrd4/lnWbsuFFbzm7/9OyNwnpQ2
/nIS1K/MC+qVHCGIBt5/9Pqkga8+e75KA1czIhXe3IPNCXRtpWZMAp0W4sbD
Kh6//q5juJnduXM7v3s0z3NmV/1aksS/Pv19+OdWmd84soebd+sT2ScPfbXI
rqyc0y+03/jnF/Zm02z/fO/g8A+P7PIkxvI30pP/+vT36yfRgfGK/9vm1rnf
P/KzJzKiuZEeI6lVE/WPZsYx/v97M2P+Xnqq35r+Xsw91UmfdNWd5yRwnJyr
Ve//RvrsH0x/X/gkP517799PXx/Gvx6f/N/Vv/T/AUdK/pg=\
\>"]]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"Paley\"\>", ",", "169"}], "}"}], "\[Rule]", 
    GraphicsBox[
     NamespaceBox["NetworkGraphics",
      DynamicModuleBox[{Typeset`graph = HoldComplete[
        Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 
         19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 
         36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 
         53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 
         70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 
         87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 
         103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116,
          117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 
         130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143,
          144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 
         157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169}, {
         Null, 
          SparseArray[Automatic, {169, 169}, 0, {1, {CompressedData["
1:eJwlzyGwCwAcx/E/hmEYhmHYYxiGYVhYWFhYWNi9EwTBOUFwCIIgCIIgCIIg
CMLOvfDCCy+88MILLywsLCwsLCwsLCwsLCz43PndfdIvfVdevlt9uyci/sb/
PaXDkrbjDwtaeyN+M6e5L+IXMxqJiJ9Mqe+P+MGE2oGI74ypHoz4xohKMuIr
Q8qHIr4woHQ44jN9ikciPtGjkIr4SJf80YgP7JI7FvGeHbLHI96wTSYd8Zot
0iciXrFJ6mTECzZInop4zjqJTMQz1ojT+umwpH1GPwtaZ/Uzp5nVz4zGOf1M
qZ/Xz4TaBf2Mqeb0M6JyUT9Dypf0M6B0WT99inn99Cis6KdL/op+dsld1c8O
2YJ+tslc088W6ev62SR1Qz8bJIv6WSdxUz9rxC39dFjSvq2fBa2SfuY07+hn
RuOufqbU7+lnQq2snzHV+/oZUXmgnyHlh/oZUKrop0/xkX56FB7rp0v+iX7+
AWToafY=
             "], CompressedData["
1:eJxFW+VflksbPHIUu6VLBKS7W6W7GwER6ZQ0EQuREkkRW4z/8p2Zvfe8n55v
+9u9Z665Zq7dJ7B7rLbb5Z9//plK/eefI/h1Oep64tSZcxcuXXH39Pb1v3ot
+HpYRFRMXEJSSlpGVs6NW/mFxaXlldW19Y3Nre0dXd09vf2Dw6Pj96dm5h4+
fvrs+cvXb96urL17v7Wzt3/w+ev3n7/+HDl68tyFK+4ePlgvEAuGRsUnJqdl
ZGbn3MgvKCouqaisbWhsaW273XGnp39gaHhk9P7k1PST+WcLL14vvll6u7K6
tv5uc2d378PHg0+fv3w7/P3n71HX4ydOnj5zFju9fMXdy9vH/2rw9fCIyKiY
2DisnpqWkX3jVl5+UVl5RXVNbX1Dc8vtrjt3e3r7+ofGJ+7Pzj14+Ojxk/kX
r16vvN/c3vn47cfPw99HXP51PX3hkrunlx8OHoSTh8dgqYys7NwbtwqLSkrL
qqrrm5rb2m93dt3tHRwaGR0bn5qemZ1feP7iFfa5vIJ9brzf3vuw/xH7/Prt
x++/ridOnjp99tx5fFA3d08fX7+r166HRUZFx8TFJ2Dt9Iys3Fv5BYX4BlW1
dfWNTa1tnd137/X2DwyO4CNol0/nF14tvlnb2t7d+/Tj8Nfvv0f+PXrsxNlL
Vzy9fQIAUAgQiozDWlk5uTdv5ReX4Mw1tfigtzs673Tf6x8eGcORZ3DmhRcv
Xy1im6tr2Obm1u4+vie2+f3H4d9/T5zC1zx/4SKA9/D09vMPuBYcFhGNr5mQ
mIS1M7NybuYXFhXjE9TUNzQ2t7TfvtNzr69/cGh4DN9A2wRei0tv3+3sftj/
QoyO/HvM9fip81fcvX39hDuYFJ2AtXJu3MzLLywtw6Hr6vE9OwlN3+Do2ATO
TGiAy+KSYMc2t3c+CPbvxMjl32OngPr5i4Td08vbN+BqYPD1iCignpCUnILF
waq8wuKSUnyDusam5ta2js67vX0Dg6DVBD6C9gm8lpZX3pNQ3/A9j4FLZy66
e/r6Bwh1ED42CSuBQQWFxeUVOHNDIz7nHUIzMDw+AXrOEBrgsrQs0LHL3b2P
Av0nMQJEx88A9ouXibs3qB94Leh6WFQMYE9KSU3D6iBVQXFpWTm+AejZ2g6C
3iP9wapJfARtE3gtr65tkU8/8D2Pg0znLnt6o46EOgozPgUr3WIdlVZW4chN
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
oREmuhMj2e9yO/dvbLE9+V4fi/T+LOXulWB/Bz7tY81f9J9087x/ps77BwSR
8gxcOLq2aXx3LVl0h8iMmGz00BE6jhnW3m/Zy/Jv5JLqyDh6+E8/f00Vw6NM
didIMuCVdvDf3Gabct8Aq3TqAfVuUbi/B58OsOgfRATaeV4/U+avBoaQ80xc
OLq2aXx3PVl0l8iMmWz02NE5zhnebe3Yu/IfyptKCXL08J8BVzVWjIwx0Z0o
yYBX28F/623bkweGWKUzjyh4S8J9C3z6jEVdEBFo53n/TJm/FhRKzjNx4eTa
prHdjWTRPSIzYaLRU0fnOGd4v7Nnr8oPmTcVEuTnYT8Dr2moGB1nojtBkgGv
tYP/9k7bk4dGWKNzT6h3y4J9B3z6esh7GSQE+nneP1Png0PCyXkmLpxc2zS2
u5ks6iMwkyYbPXNkjnOGrb19e1fOewRXpQT5edjPoGDNFGMTTHQnSPLf9Xbw
33HHtuSRMdbow3nq3apQ3wOfvv/mvQwSAu0875+p89dDI8l5Ji4cXds0truV
JBogMNMmGz13dI5jhp39A3tXznuEEwoJ8vOwnyHXNVSMTzLZnSDJgDfauX/X
XduSxyZYpI8XKHfrQn0ffPqJfYJJZ+Xnef1MnQ8LjyblGbhwdG3T2O52kmiI
yMyacPTS0TmOGfYOPtu7cuyTZELzkJ+H/wwN01AxMcVkd4Ik/91sx/7d92xP
nphkkT59QbnbEOwH4NMvlCa5dF5+ntfP1PmIyFhynokLZ9c+je/uII1GCM0D
E45eO0LHOcP+56/mrvwIljyjjCA7D/sZHqGRYnKaie7ESPa71Q79e/psS56c
Zo0+e0W52xTqn0GnP7rvIJkuytDz/plCHxUdT9YzcuHw2qdx3l3k0RixeWTi
0RtH6ThnOPjKmQDqHSueU0aQn4f9jIzSSDE1w0R3YiT33W6H/r0DtiVPz7JG
ny9S7raF+lfQSVflJ0mmy/LzvH6m0sfEJpL1jFw4vbZpnHc3eTRBbJ6YdPTW
EToOGj5/50zgyFEseEEJQXYe9jM6RgPF9CwT3ImQ3HeHHfr3D9mGPPuAJfpy
iWq3K9C//9S9jO47yCY3OXpeP1Pq4+KTSXtmLhxf+zTWu4dEmiQ68yYerThK
x0nDV/YjVyx3SQlBbh7mMzZOA8XMHJPbiY+8d5ed+Q+O2H784BEr9PUyxe6D
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
             "]}, Pattern}]}, {VertexCoordinates -> CompressedData["
1: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

           "]}]]}, 
       TagBox[GraphicsGroupBox[GraphicsComplexBox[CompressedData["
1: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

          "], {
           {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
            ArrowBox[CompressedData["
1:eJwVxWc7MgwDANC7aKA0UNFQKbNBQoNQKisjUhJSimiRkhCJlAqlqSQj8hee
X/de7/lyKAaH0gD89+/ff/h///4/AAioBYABUEA9AAZoBCABaEAzAAPAAdoA
BAAJQAZQATRAJ6Ab0AtgAFiAfgAHwAUMA3gAAWAUIAJMAMSAKYAMMA2YBcwD
FgBLACVgFbAG0AC0AB1gC6AHGAC7ADNgH3AAsALsACfgGHAC8AC8AB/gAuAH
XANuALeAECAMeADEAI+AZ0ASkAJkADnAK6AIKAHKgE/AN+AHUAXWAuuAjUAk
sBmIAWKBeCABSAKSgRQgFUgDdgK7gAzgAHAQOATkAQVAIXAMKAJOAKeAUqAc
OA2cASqAC0AlUAVcA64DtcAN4CZwC7gD3AXuAy3AQ6AVaAPagcdAF/AE6AZe
Aq+A18AAMAgMAe+BYWAE+ACMAePAR+AT8Bn4AswAs8AcMA8sAIvAN2AJ+A78
AFaAv8Aq8K+mtgZcA6mB1tTVNNTAauA1jTXIGnRNU01zDaamtaatBl9DqiHX
0Go6a3pqemv6ahg1rBp2TX/NQM1gzVDNSA2vRlAzVjNRI66R1EzVyGvmauZr
FDVLNcs1yprVGlWNpma9ZrNGX7NTY6zZrTHX7NXs1xzWOGuOao5rTmu8NWc1
vprzmouay5qrmmDNXU2oJlaTrHmpSddkago1HzVfNd81lZrfWnBtQy2yFl2L
qcXVttYSa0m15FpqbUctrbaztru2p5ZVO1g7VDtSK6gdrR2rHa+dqBXXymrl
tTO1s7VztYu1S7WrtepaTe1Gra52s3a7Vl9rrDXXHtQe1tpq7bWOWmftSa27
1lN7WntVG6i9qQ3W3tWGayO1D7XR2ljtY+1T7XNtojZZm67N1eZrX2sLtW+1
pdr32nLtR+1X7W/tHwgMgoLqQPWgBhAc1AhCgJAgNKgZ1ALCgHAgPIgAIoLI
ICqoE9QN6gMxQEwQC9QPGgBxQIOgIdAIiA8SgEZB4yAxaAokBclAMyAFaAG0
CFKCVkCroDWQGqQFbYC2QQaQEWQCmUH7IAvoAGQDHYNcoBPQGcgHOgddgC5B
ftAVKAC6A92DwqBHUAqUBmVBOdAb6AtUAf2AfkF/YCgYDkaDm8E4cBsYD24H
k8FUMA1MB3eCu8G94D5wP3gIPALmg0fBIvA4eBIsBk+Bp8Ez4DnwPFgBXgYr
wWvgdbAWvAneAm+Dd8AGsAm8D7aCbWAH2Ak+Ah+DPeBTsBd8Bg6Ag+Bb8B34
HvwAjoJj4Dj4EfwMToCT4BdwCpwFv4IL4CL4DfwOLoM/wJ/gL3AF/AeBQuoh
DRAYBA5BQJAQFAQNaYZgIFgIDtIGIUJIkHYIFUKDdEN6IUwIC8KG9EM4kEEI
FzIEGYHwIULIKEQEmYRMQWQQOWQaMgdZhCxBliGrEBVkDaKBrEN0kE3IDmQX
YoLsQfYhB5BDiBXigJxA3BAP5BxyAbmE+CFXkGtIABKE3EMikAfIMyQDyULy
kFfIO6QC+YVUIX/QeigC2gzFQNugBCgRSoFSoTRoJ7QL2g3thTKgTCgHOgLl
Q4VQEXQCOgmVQKegMugsdA6qgC5AF6Er0FWoBroB1UG3oXroDtQI3YXuQQ+g
dqgDegQ9hrqgJ1Av9Azqg55Dg9A7aAh6D41AY9A49BH6BH2GJqEv0BQ0Dc1A
89Ai9A1agr5DP6Cf0C/oN7QC/a2rr4PVwesa6xB1qDp0XVNdcx2mDlfXWtdW
R6hrryPXUepodZ11vXWMOnZdf91AHaeOWzdUN1w3UsevE9aN1YnqJuokdbK6
6bqZutk6Rd1ynbJupW6tTl2nqdPWbdRt1W3XGevMdXt1lrqDOmudrc5ed1Tn
qTut89Zd1vnrruqu6wJ1N3XBuru6SF20LlaXrMvV5esKdcW6j7rfur96WD2q
HlOPqyfUk+rb6zvqafWd9d31PfW99Yx6Vj27nlvPrxfWj9VP1IvrJfXSeln9
dP18vaJ+sX6pfrleVb9Wr63frN+q36k31BvrTfXmeku9td5Zf1Tvqj+pd9d7
6n315/UX9Zf1d/X39eH6SH20/rH+qf65PlGfrE/Vp+sz9dn6XH2hvlT/Xl+u
/6j/qv+ur9T/1P/W/zXAGhobEA3IBlRDU0NzQ0sDpgHX0NaAbyA0kBooDdSG
jobOhu4GRgOrYaCB0zDYwG0Ybhhp4DXwG4QNYw3jDRMN4gZpw3TDbMNcw3zD
YsNKw2qDqkHTsN6gbdA1bDboG3YaTA37DZaGwwZrg73B0eBscDV4G84afA1X
DdcNgYabhmDDbcNdw31DtCHe8NiQanhtKDS8NZQavhr+YI2wJhgO1gYjwcgw
CowO64R1w3phfTAGjAXrhw3AhmFC2BhsHCaGTcGkMDlsGjYLW4AtwpZhStgK
TA3TwHSwbZgeZoTtwkywPdg+7BBmhx3DXDA3zAM7hXlhF7BLmB92BbuHRWAP
sCgsDnuGJWBJ2AssBcvAsrAcLA97hb3ByrAP2CfsC1aB/cB+YVXYH7wRjoSj
4Gh4E7wFjoFj4Th4G5wAJ8JJcDK8A06D0+Hd8F44C94PH4Rz4UPwYTgPzocL
4EL4GHwcPgkXw6fgcvgsfB6ugC/Al+Eq+BpcDdfCN+A6+BZ8G26AG+F78AP4
IdwGt8Od8CP4MdwN98HP4RfwAPwGHoTfwu/gIfg9PAKPw5/gz/AMvAh/g7/D
y/BKI7KxpbGtkdBIbqQ2djR2NXY39jYyGpmNrMb+Rk7jYCOvcaxxvHGycapR
1ihvnGmcbZxvXGpcblxpXG1UNa43ahu3GncaDY2mRnPjXqOl8aDR1uhsPGl0
N542ehvPGn2N/sarxuvGQGOkMdoYa4w3PjUmG18aU43pxkxjrjHf+NpYaCw2
vjd+Nn41fjdWGn8bq41/CCQCjWhCNCNaEFgEDtGKaEMQECREO4KMoCLoiE5E
F6IXwUD0IziIIcQwYgTBQwgQQsQoYgwxjphESBBTCBliBjGPWEAsIpYQKwg1
QoNYR+gQm4gthB6xg9hFmBAWhBVhQzgQTsQxwoU4QZwiLhCXCD8iiLhF3CFC
iHtEGBFBRBFPiAQiicghSoh3xAfiE/GLRCOxSAKShKQiaUg6sgfZi2QgWUg2
sh/JQXKRQ0gBchw5iZQgZchp5AxyDjmPXEAqkStIFXINqUZuIHVIPdKI3EXu
IfeRFuQh0op0II+RHuQp8gzpQ54jL5DXyADyBhlERpFx5CPyCZlAppBpZAaZ
ReaQr8gCsoh8Q5aQH8hvZAX5g/xF/qHQqGZUCwqDwqJaUW0oPIqAIqHIKAqK
iqKhulDdqB4UA8VCcVBc1AiKh+KjBKhR1BhKhBpHTaIkKClKhppGzaEWUEuo
ZZQSpUKto7SoDdQWahulRxlQRpQZtYc6RNlRDtQR6hh1gnKjPKgzlB91hbpG
3aFCqHtUGBVBPaCiqDgqgXpBpVCvqDLqA/WF+kb9oZvRrWgSmoymoTvRXeg+
NAPNQvejB9AcNBc9jB5Bj6In0RK0FD2NnkXPoRXoBfQSehWtQqvRGvQ6ehO9
hTagTWgz2oI+QB+ibWg7+gh9gvaiz9Dn6Av0JdqPvkEH0bfoO3Qc/YR+RifQ
L+gMOovOofPoV3QR/YYuod/RZfQX+gf9i66i/5qamzBN2CZcU2sTvonQRGwi
NZGbqE0dTbSmzqaept6mviZWU38Tt2m4id8kaBI2jTaJmsabJpommyRN0iZ5
03TTbJOiaalJ2bTStNqkbtpo0jVtNumbdpoMTbtNpqb9JkuTrcnZdNTkajpp
8jSdNnmbzpuumwJNN033TeGmSNNDU7Qp1hRvemp6aUo3ZZqKTZ9NX02Vpp9m
TDO+mdxMbe5s7m7uaWY2s5r7mznNg83c5uFmXjO/WdQsaZY2y5tnm+ebFc2L
zUvNyua1ZnXzerO2eaN5u1nfvNu817zffNhsbbY1O5qdza5mT7Ov+bz5stnf
fNV83XzbfNccar5vfmpONCebX5rTzbnmfPNrc6G52Fxqfm8uN380fzZXmqvN
fy2YFlxLa0tbC76F2EJqaW8ht1BbaC30ls6W7pa+FkYLs6W/hdMy3MJrEbaM
toy1iFomWiZbxC2SFmmLvGWmZbZlvmWxRdmy2qJqWWtZb9ls2WrZbjG0GFt2
W8wtey0HLYctjpbjFleLu8XT4m05a/G1XLbctARbblsiLQ8t0ZZYS7zlseWp
JdGSbsm25FpKLd8tlZbflioGhyFiqBgaphvTi+nDsDH9GA6GixnCDGN4GAFG
iJnASDFyzAxmHrOAWcQsY5SYVYwGs47ZwOgwm5gdjAFjxlgwBxgbxo5xYI4w
xxg3xou5wFxirjDXmADmBhPC3GPCmAgmgXnBpDBpTBbziilgipg3TAlTxnxg
PjFfmG/MLxaHbcPisQQsEduOJWMpWCqWhu3EdmG7sb1YJpaFZWM5WC6WhxVg
x7Ai7Dh2AivGSrBTWClWjp3BzmHnsQvYZewqdg2rxmqwG9htrB67g93FmrBm
7D7WgrVibdgj7AnWjT3FerE+7Dn2AnuFvcXeYUPYKDaGjWMfsU/YZ2wC+4LN
YvPYV2wZ+4P9xf7h2nDtOBquE9eLY+CYuAEcB8fFDeNGcDycADeKG8OJcXLc
DG4Ot4Bbwi3jVnCruDWcFreB28Rt4bZxRtwubh93iLPiHDgn7gjnwp3gTnE+
nB93hQvgbnBB3C0ujIvgHnBR3Asujcvgsrg8roh7w5Vw77gy7hP3hfvGVXA/
uL/WtlZCK7GV1NreSmmltna00lo7W7tbe1p7Wxmt7Nb+1oFWbutwq6B1tHW8
daJ1slXcOtUqbZW1yltnWudaFa0LrUutK61rrZrW9VZt62brTquh1dhqbt1r
3W89aD1stbc6Wl2tntbT1rNWX+tF62WrvzXQGmq9bw23xlsfW59an1sTrcnW
l9Z0a7610Fps/Wyttv61EdoobZ1t3W2MNlYbu22wjds23MZr47cJ2kbbRG3j
bVNtM21zbYq2pTZl20qbqm2tTdOma9ts227Tt+20mdrMbQdttjZ721HbcZur
zd3maTtru2i7bgu0Bdtu2+7aQm0PbdG2WFu8Ld2Wbcu15dsKbaW297Zy20fb
Z9t3W6Xtp+23rYon4En4djwZT8F34Gl4Or4T343vxffhGXgWfgDPwQ/ih/E8
/ChehJ/Ei/ES/BRehpfjp/Ez+Dm8Ar+IX8Ir8Sq8Bq/Fb+B1+G28Eb+LN+H3
8Rb8Ad6Kt+Gd+CO8G+/Fn+HP8Rd4P/4Kf40P4sP4CP4B/4R/xifwSfwLPoVP
47P4Av4NX8J/E0iEDkI3oZfAIvQTBghDhGECjyAgCAmjBBFhgjBJkBHmCArC
IkFJWCWoCGqChqAlbBG2CTsEA8FI2CPsE6wEB8FJcBFOCG7CKcFLOCf4CTeE
IOGOECLcE8KEGCFOeCQ8EbKEPOGVUCC8EcqED8In4YvwTfgh/BKqhD8iiUgm
UohUYgeRTuwkdhG7ib1EBpFJZBH7iYNELnGIyCMKiCLiBFFCnCJKiTLiNHGG
OEucIyqIi8RlopK4SlQTtUQdcZO4Rdwhmohm4h7xgHhItBLtRAfxmOginhJ9
xHPiJdFPvCYGiDfEO+IDMUqMERPEJPGFmCKmiRlilpgnvhHfiWXiD4lMopN6
SQxSP4lDGiSNkHgkAWmUNEYSkSZIYpKENE1SkBZJy6RV0hpJTVonaUk6kp60
QzKSdkkmkoV0QLKTjkjHJDfJQzolnZF8pEvSNemWdEe6J4VJEdID6ZH0RHom
JUh5UoFUJL2R3kmfpC/SN6lC+iFVSX/t5HZqe0c7rZ3e3tXe3d7T3tvOaGe1
s9v72zntQ+3D7SPtgvbR9ol2cbu0XdYub59un22fa59vV7Qvti+3r7Svtq+1
r7fr2rfat9v17cb2vfb9dku7td3Wbm93th+1n7S728/aL9ov26/ar9tv2oPt
t+337bH2ePtj+0t7qj3dnmnPtufa8+2F9vf2j/bP9iqZSu4iM8gsMofMJQ+R
+WQBeZQsIo+TJ8hi8hRZSp4lL5KXySvkNbKGvE7eIOvIW2QD2Ug2kc3kPfIh
2Up2kl3kE/Ip2Us+I5+TL8hX5BtyiHxPjpAfyFFyjPxMTpCT5BdygfxGLpHf
yR/kb3KF/EP+JVcpVAqNQqd0UrooPZReSh+FQWFR+ikDFA6FSxmh8Ch8yihF
RBFTpihyyjRlhjJLmacoKAuURcoyZYWioqxRNJQNyhZFT9mhGCgmioVyQDmk
2CkOipNyTHFRPJRTyjnFT7miBCg3lFvKHSVEiVAeKU+UZ0qakqFkKTlKnvJK
KVDeKB+UL8o3lUbtobKo/VQudZg6QhVSR6ki6gR1kiqmTlFlVDl1nrpMXaGq
qBqqlrpB3aRuUfXUXaqJukfdp1qoNqqdekx1Uz3UM6qPek69pPqpAeotNUyN
UKPUGDVOfaQmqS/UFDVNfaO+U8vUD+oX9Yf6S61S/zpoHZ0dXR3dHT0dfR2M
DmYHq6O/g9Mx2MHtGO7gdwg6hB2ijomOqQ5Zx0zHbMdcx3zHQsdix1LHcsdK
h6pD3aHp0HZsdug7DB3Gjt2OvY7DDmuHrcPZcdRx3HHS4e7wdpx1XHZcdwQ6
gh23HaGO+45wR7TjuSPRkezIduQ68h2vHYWOYsdbx3vHV0el44fWSeuj9dM4
tGEaj8anjdFEtAmamCahTdFktGnaDG2BtkJT0dQ0LU1H26Rt0/Q0A81M26NZ
aAe0Q5qD5qSd0E5pXto57YJ2SbuiXdOCtBDtgRalxWmPtCfaMy1FS9MytCzt
nfZB+6R90Sq0Ku2P3knvpvfQe+l9dCadRWfT++kcOpc+RB+m8+hC+ih9jD5B
F9Nl9Gn6HH2erqAv0Jfoy3QlfYWuoqvp63QtXUffphvou3QT3Uy30G10O91B
P6a76Cd0D/2U7qOf06/oN/Qg/Y4eoofpEfoDPU5P0l/oKXqe/kov0Iv0N3qJ
/k7/oFfov/RqZ3cns5PTye3kdQo6hZ3jnROd4s6pTmmnrHO6c7ZzrnOpU9Wp
7lzv1HVudW537nQaOnc79zstnYed1k5b51Hncaen86zT13nZ6e+86gx03nTe
dYY7Y53xzqfO585EZ7Iz05ntzHXmOz86vzq/Oyudv13dXb1dfV2MLmYXu6u/
a6CL08XtGu4a6eJ1CbrGukRd413irqmu6a7ZLkXXQtdi11KXsmula7VL1aXu
Wu/a6NJ1bXXtdO12mbv2uva7DrscXc6uo66TLneXp8vbddZ10XXZFei67brr
uu8Kdz10RbtiXU9dqa50V6ar0FXseusqdb13lbs+ur66frv+unu72d3c7uFu
Qfdo91j3ZLe4e6pb1i3vnu6e7Z7vVnQru9Xd690b3Vvd+u6dbmP3bre5+6D7
sNvWbe92dLu6T7q93efdF91X3dfdge5g9233ffdD92P3U3eiO9n90p3qznXn
u1+7C91f3ZXun+7f7r+e3h5GD7OH1cPuGejh9Az2cHuGe3g9/B5Bz2jPeM9E
z2TPVI+sZ7ZnvmexZ6lnuUfZs9qj6lnrUfes92z0bPZs9eh7jD3mnv0eS89B
j63nqOe4x9Xj6Tnt8fb4es57/D1XPcGeUM99T6TnoSfWE+957En0ZHqyPbme
t55Sz3tPueej57Pnq6fS89fL6B3oHe7l9Y72inrHeyW9U72y3unemd7Z3vne
hd7F3tXe9d6N3s1efa+h19hr6jX37vdae229jl5n71Gvu9fT6+u97PX3Bnpv
eoO9d72h3khvrPe5N9H70pvqTfdmel97C73F3rfeSu9vb7X3r4/Rx+pj9/X3
DfQN9nH7hvqG+3h9gj5h32ifqG+yT9wn6ZP1TffN9y30Lfcp+1b6VvvW+tR9
mr71vo2+zb7tPn2foc/Ut9930HfYZ+1z9Ln6Tvrcfd6+sz5f30XfZd91X6Dv
ri/cF+mL9sX6Hvue+p77Xvpyffm+1773vnLfR99n31ffd1+l75fBYgwyeAwB
Q8SYYEwypAwZY5oxy5hjzDMWGEuMZcYaY4OxydhmGBi7DBNjj7HPOGDYGQ7G
EeOY4WKcMryMC8YV45oRZNwy7hj3jDAjynhkJBkvjDQjw8gycowi441RYrwz
fhl/TBaznznA5DAHmUPMYeYIk8cUMEeZY0wRc4IpYU4xpcxp5ixzgbnEXGGu
MlXMNaaGuc7UMjeYm8xt5g7TwNxl7jEPmFamjWlnHjHdTA/zlOljnjMvmH7m
FfOGGWTeMx+YUWac+ch8ZiaYSWaa+cosMIvMD+Yn84v5zawwf5i/zD9WP2uI
JWCNsiZYYpaEJWdNs2ZZ8ywFa4G1xFKyVlga1iZrm7XD2mWZWXssC+uAZWU5
WUcsF+uE5WadsXwsPyvAumHdsUKse1aE9cCKs55ZKVaalWXlWHnWK6vEemeV
WR+sP3Y/m8MeZHPZQ+wRNo/NZwvYo2wRe5w9wRazpWwZW86eZc+zl9hKtoq9
xlazNWwte4OtY2+yt9k7bCN7l21mW9hWtp3tYDvZLvYp28s+Y1+wL9l+9jU7
wL5l37Ej7Bg7zn5iP7OT7Bd2ip1lF9lv7BL7i/3NrrB/2L/sKvuvn9M/0j/a
L+oX90/1S/tn+mf75/sX+hf7l/qV/av9qn5t/3b/Tr+x39y/32/pP+y39tv7
j/td/e5+T/9p/3n/Rf91f7D/tv++P9wf6Y/2x/qf+pP9mf5sf77/tb/QX+wv
93/0f/Z/DXAGuANDA8MDIwP8AcGAcGB0QDQwMTA5IB6YGpAPTA/MDMwPLAwo
B1YH1AOagfUB7YBuYHNga2B7YGfAOGAaMA/sDxwO2AecA0cDxwPugbMB38D5
gH/gauB64GYgOBAauB+IDjwOPA0kBpIDqYH0QGYgP1AaeB8oD1QGfgZ+B6oD
fxwuh88RcSY4UxwZR86Z48xzFjhLnGWOkrPKWeOoOTrODsfIMXH2OQecQ46N
Y+c4OSccN+eU4+WccS45fs4N544T4kQ4D5woJ8555CQ4KU6Ok+cUOEXOG6fE
+eR8cb45lUHu4PDgyCBvkD8oHBwdHBsUDU4Migclg1ODssGZwdnBucGFwaXB
1cG1wfVB7eDGoG5wa3B7UD+4M2gcNA3uDe4PHgzaBp2Dx4OuwZPB08HzwYvB
y8HrwcDgzeDt4N1geDAyGB98HkwMvgymBjOD2cHcYGGwPPgx+Dn4O1gd/OMO
c4XcCa6YK+NOc2e4Cu4Cd4mr5K5wV7lrXA13nbvFNXJN3D3uAdfKtXEdXCf3
mOvhnnLPuD7uOfeKe8295d5zw9woN8aNc5+4z9wXbob7yi1w37gl7ju3zP3m
Vrg/3N+h4SHeEH9IMCQcGhsSDY0PTQyJh6aGpEOyoemhuaH5IcXQ0pByaG1I
M7QxpBvaHNoa0g/tDBmGjEOmob0hy9DBkHXIMXQ8dDLkHvIMnQ1dDvmHroZu
hoJDt0Ohofuhh6Ho0NNQcuhlKD2UGcoN5Ydeh96GPoe+hr6H/oZ5w2PD4uGp
4enh2eG54cXhpWHl8OqwanhtWDOsHd4Y1g+bhveGLcPWYfuwY/ho+Hj4ZNg7
fDZ8PnwxfDkcGL4ZDg1Hhh+G48OPw0/DieHkcHo4N1wcfht+Hy4Pfwx/Dv8M
/w5Xh/9GeCOCEeHI6MjYyPjIxMjkiHhkakQ2Ih+ZHpkdUYwsjCyOKEdWRzQj
2pHNka2R7RH9iGHEOLI7YhrZG7GMHI5YR+wjRyMnI56R0xHvyPnI1cj1SGDk
duRuJDQSHomMxEbiI4mR1Eh6JDuSG3kdKYwUR95HvkcqIz88AW+cN8WT8WZ5
8zwFb5mn5K3y1nhqnoan5el4mzwDb49n4R3y7Dwn74jn4p3wPDwf75x3yfPz
rnhB3i0vzIvyYrwn3jMvwXvhpXhZ3iuvxHvnffA+eV+8b16V98cX8Ef5Y3wR
f5w/yRfzJfwpvow/zZ/hz/Ln+Yv8Jf4yf5W/xtfydfxtvp6/wzfwd/kmvpm/
x7fwD/k2vp3v5Lv4Hr6Xf8b38S/5Af4NP8gP8e/5Yf4DP8p/5D/xX/gZfpaf
57/yi/w3fon/wf/h//KrglHBpEAmmBbMCxYEi4IVwapgTaARrAu0Ap1gS7At
2BVYBIcCm8ApOBa4BG6BR+AVXAguBVeCa0FAcCcICR4EccGjICFICl4EaUFG
kBcUBWXBh+BL8C2oCH6Eo0KRcFw4IZwUSoRTQqlQJpwWzgrnhPPCBeGyUClc
Ea4JNUKdcEu4IzQIjcJdoVm4J9wXWoSHQpvQIXQKj4VuoVfoE54LL4RXwqDw
VngnDAsjwgdhTBgXPgsTwrQwJ8wLC8KisCR8F5aFX8Kq8G9UNCoZnR6dHV0Y
XRpdHlWNro1qRrWjG6O60a1R/ejOqHn0cNQ26hg9Hj0ZdY+ejnpHfaP+0avR
wOjNaHD0fjQ8Ght9Gn0efRlNjaZHs6O50cJoafRz9Gu0Mvoz+jtaHRONTYxN
jonHJGPSMdmYfGx6bHZsfkwxtjC2NLYytjqmGtOMace2xvRjxrHdMdOYeWx/
zDJ2MHY4ZhtzjB2NHY+djJ2O+cYuxi7H/GOBsbux0Nj92MNYdCw29jj2NJYc
exnLjr2OFcbexkpj5bGPsc+ximhCJBXNiuZFSyKlaEWkFmlEWpFOtCnaEulF
BpFRtC+yiRyiI9GJyCM6FZ2JfKIL0bUoIAqKbkV3oojoQfQoSoiSorQoI8qK
8qJX0ZuoLPoWVUS/oqrob3xiXDwuGZ8al47Lx6fHZ8Znx+fHF8YXx5fGleOq
8bVx9bh2XDeuHzeMm8bN43vj++MH44fj1nHbuGP8aNw1fjLuGT8bvxj3j1+N
X48Hx+/Hw+OR8dh4fPxx/Hk8MZ4aT4/nx4vjb+Pv4+Xxz/Gv8e/x3wnxhHxi
fmJhQjmxOqGaWJ/QTugmtia2J/QThondCdPEwYRj4mjCNeGZ8E6cTZxPXEz4
J24mghN3E6GJ+4noRGzieeJlIjWRnchN5CcKE8WJ94nPiZ+J34m/SfHk1KR0
UjYpn5yZnJ2cm5yfXJhcmlyeVE6uTqonNZPrk7rJrUnD5O7k3uT+pGXyYNI6
aZu0TzomjyZdk+5Jz6R38nzSP3k9GZi8mbybjEw+TEYnHyefJp8nk5Mvk5nJ
7GRhsjT5Pvkx+Tn5PVmZ/Jn8E0+JZ8QL4iXxqnhNrBZviHXiLbFevCM2iHfF
ZvGe2Co+ErvEbrFX7BOfiy/FfvG1+FZ8J74Xh8URcVz8KE6K0+KMOC9+FRfE
b+KS+EP8La6K/yRTEplELpmWzEjmJPMShWRBsiRRSlYkq5I1ybpEK9mQbEn0
kl2JWWKRHEgOJVaJXeKQOCVHEpfELTmVeCU+yaXkWnIjCUpuJfeSqCQmiUue
JQlJUpKSpCU5SV7yJilLPiRfkm/Jj+RXUp2STc1NLU0pp9amNFPrU5tTW1P6
KcOUcWp3yjy1P2WZsk+5ptxTp1O+qYupy6mrqeupm6nQ1P1UZOphKjr1NPU8
lZrKTuWmClPFqbep96ny1NfUj1QmnZbOSGelc1KFdEG6KF2SKqWrUpV0TaqR
bkh10k2pXmqQmqX70kOpVWqT2qVO6ZH0WOqSuqWn0jOpT3ohvZLeSG+ld9KQ
NCKNSx+lT9Kk9EWakmakWemrtCB9l35Kv6QV6Y+0Kv2TTcsUMqVsVaaRaWUb
sm2ZXmaQ7cpMMrNsX3YgO5Q5ZW7ZqexMdiHzy65kAdmN7FYWlkVkUVlMFpcl
ZElZRpaXvcreZCXZu+xD9imryKryafmsfE4+L1fIF+VL8mW5Ur4qX5Or5Rq5
Vr4p35Jvyw3yXfm+/EBuk9vlDrlTfix3yU/kbvmp/Ex+Lr+Q++UB+a08JL+X
h+VR+ZP8WZ6Qp+RpeUaek+flRfmb/EP+La/If+XV6dnpxenV6bVp7bRuenN6
Z9owvTttnt6b3p8+mLZO26aPp0+nz6bPp/3T19OB6eD07XRo+mE6Oh2ffpx+
mn6ZTk3npgvTxen36fL0x/TX9Pf078zszPyMYmZhZnFmeUY5szKzOrM2o5lZ
n9HO6Ga2Z/QzOzO7M+aZgxnrjGPGOXM0czxzMuOe8cyczpzNnM9czvhnrmeC
M6GZ8Exk5mEmPpOYSc68zGRmsjO5mdeZwkxp5n3ma+Zn5nfmb3Z+dnl2bVYz
q5vdmt2eNc7uzppn92ctswez1ln7rGP2ZPZs9nz2cvZ69mY2OHs3G5oNz8Zm
47NPs8+zidn0bGb2dfZttjT7Mfs5+zVbmf2Z/Zubn1uYW5xbmlueW5lbnVPN
rc1p5rRzG3O6ua25nTnDnHHOPLc/Z52zzx3NHc+55k7mPHOnc965s7nzucu5
q7nruZu5u7nw3MNcdC429zT3MpeaS8/l5vJzr3PFube58tzHXGWuOvc3vzC/
Mq+Z185vzevnd+ZN8+b5/fmD+cN567x93jl/NO+ZP5+/nL+av5m/nb+bv58P
zz/MP84/zSfmk/Mv89n53Hxx/n2+PP81/z1fmf+dryoWFEuKZYVSsaJQKdYU
aoVGoVXoFJuKLYVeYVTsKkyKfcWBwq5wKlyKE4Vb4VF4FWcKn+Jccam4UgQU
N4pbxb3iQRFTxBWPioQircgosopXRUFRVJQU74pPxZfid2FpQbWgXdAt6BcM
C8aFvYX9hYMF64Jtwb7gXDhecC14Fy4XrhYCC7cLoYX7hcjCw0Js4XkhsfCy
kFpIL+QXXhdKCx8LnwuVhZ+F34W/xaVF5eLK4uqialG9qFlcX9Qu6ha3FrcX
9YuGRdOieXFv8WDRuuhcPF50L3oWTxe9i77F88WLxcvFq8XAYnDxdjG0GFmM
LT4uPi0+L74sZhdzi/nF4uLbYmmxvPix+L1YWfxbUi6pl3RLW0uGpd0l05Jl
6WDJumRfciw5l46XTpbcS76lq6XAUnAptBReiixFl2JLj0vJpZel9FJmKbtU
WCoulZe+lr6XfpeqS3/LyuXVZdXy2rJ6eX1Zu7yxrFveWtYv7ywblneX95b3
ly3L1mX78vHyyfLpsnf5bNm3fLF8uexfvloOLAeX75ZDy+Hl6PLj8vNyYjm5
nF7OL78uF5ZLy+/L5eXP5a/ln+Vf5apyXbml1Ct3lWblnvJQaVXalU7lkfJY
eaL0KE+VF8qAMqi8U4aVD8qoMq58VD4rU8q0MqvMKfPKN2VJ+amsKH+Ufyur
K2sr6hXNyvrKxopuZXNla0W/YlgxruyumFcsKwcrhyv2FefKyYpn5WzFt3K+
crHiX7lauV4JrARX7lbuV8IrDyvxleeV5MrLSmolu1JYKa68rZRXPlY+V75X
KivVlb/VtdWNVf2qYdW8ur9qWbWt2ledq8errtWTVc+qd/Vs1b8aXL1bvV99
WI2txlefVp9Xk6uZ1exqfvV1tbD6vlpe/V79Xa2q1lQa1bpKq9pQbaq2VNsq
vcqg2lWZVGbVvupQZVXZVE7Vscqj8qrOVReqS5Vfda0KqG5UQdWd6l4VUT2o
YqonVVKVUqVVGVVe9aYqqd5Vn6ov1bfqR/W7plnbXDOs7a7trx2sHa451pxr
x2sna+41z5p3zbd2vna9drd2vxZZi609rj2tJdaSa6m13Fp+rbBWXHtb+1j7
XPtZ+1Nr1Fr1hlqn3lRvq/XqHbVBvas2q/fU++oDtU1tVzvUx+oTtVftU1+q
/eor9bX6Rh1U36rv1PfqiDqqjqkf1Ql1Sp1RZ9U5dUH9ri6rP9Tf6or6R11V
/2m0mm3NrsasOdBYNTbNkeZYc6LxaE41Xo1Pc6G51Nxo7jURTVTzqHnWJDQv
mpQmo3nVFDRvmpLmXfOl+dZU17XruvXN9a317fWddcO6cX133by+v25ZP1i3
rjvWnetH6yfrnnXf+sX61fr1emD9Zv12/W49tH6/HlmPrsfXH9ef11/WM+u5
9fz66/rb+sf65/rX+s/673pVq9PuaM3afa1Va9c6tC7tidaj9WrPtD7thdav
vdLeaiPaqDaufdYmtS/atDajzWmL2jftu7as/dBWtD8buo2tje0N/cbOhnFj
d8O0Yd7Y3zjYONywbtg3jjaON1wbng3vxsWGfyOwcbMR3LjdCG3cb4Q3IhvR
jfjG08bzRnIjvZHbeN0obBQ33je+Nr43KhvVjT/dls6o29cd6Ow6p+5I59Z5
dF6dT3euu9D5dde6gC6ki+riuiddUpfSpXVZXU73qivp3nUfuk/dl+5XV93c
2tRv7mwaNo2bpk3z5t7m/ubBpnXTtmnfdG66Nk823ZveTd+mf/N6M7h5u3m3
GdoMb0Y2Hzajm/HNp83EZnIztZndfN0sbr5tljY/NiubP5u/W/ot09bBlnXL
uXW85do63fJu+bYuti63/FvXWzdbwa3wVnzraSuxldrKbGW38luvW8Wt8tbH
1tfW91Zl629bv23YNm7vbpu297b3ty3bB9vWbfu2Y9u5fbzt3vZsn277ti+2
r7dvtu+2Q9v32+Hth+3odmw7vv20ndh+2U5tZ7bz28Xt0vb7dnn7a/t3u7r9
pzfo9/RWvV1/rD/Ru/Vnep/+Qu/XX+mv9Tf6W/2d/kH/pE/oX/QZfU6f1xf0
RX1J/6n/0lf0P/rfHcPO7o5px7yzt2PZOdg53LHu2HecO0c7xzsnO6c73p2z
nYsd/87Nzu3O/U54J7LzsBPbie887jztJHZedtI7mZ3cTmGntFPe+dj53Kns
/Bl2DRaD3eA0nBg8hlPDueHC4DdcGwKGG8OtIWS4N8QMCcOLIW3IGV4NBcOb
oWQoG74NFcOvoWr4M+4azcY9477RYjw0Wo02o93oNB4bXcYTo8d4ZvQZz41+
47Xx1hgyRowPxqgxZnw0PhmfjQnjizFtzBpzxlfjm7Fs/DR+Gb+Nv7vm3cNd
5+7xrmfXu3u2e7nr373evdkN7t7uhnbDu5Hdx92X3fRudvd1t7j7tvu+W979
3P3Z/d39M5lN+yaL6cB0aLKZ7CaHyWk6Np2Y3CaPyWs6N12YLk3XphtTyBQ2
RU0xU9z0aHo2JUxJ04spbcqa8qZXU9H0bvo0fZsqph/Tn3nfbDMfm0/MXrPP
fG6+Ml+bb8y35jtzyBw2P5ij5mdz2pw1581Fc8n8bv4wf5q/zVXz397+3sHe
4Z51z7bn2HPuHe0d753sefZO97x7vr3LPf/e1d7N3u1eeO9hL773uPe097yX
3HvZS+2l97J7+b3CXnGvtPex9733s/e7V90/2Hfsn+x79n37F/uX+4H9m/3b
/dD+/X54/2E/th/fT+5n9/P7hf3Sfnn/Y/9r/3v/x3JgsVpsFrvFYTmyHFtc
lhOLx+K1nFl8lgvLleXaErDcWkKWB0vM8mR5tiQsSUvKkrZkLFlL3lKwvFlK
lrLly/JjqVr+DqwHRweeA+/BxYH/4OogeHB7EDoIH0QOHg5iB48HTwepg/xB
4eDtoHzwefB1UDn4OageWg/th45D5+HRoevw5NB96Dn0HvoOzw8vDv2HgcOb
w+Bh6DB8GDt8PEwcJg9fDlOHmcPsYe4wf1g4fDt8Pywffh5WDqtWu9Vl9Vp9
Vr/12hqw3llD1rD1wRq1xqyP1mdrwpqxFqxv1nfrp/XbWrH+Wqs2u81pO7Id
21w2t81jO7V5bT7bhe3S5rdd24K2W9udLWx7sD3anm0vtpQtbcvYcra87dVW
sL3Z3m0ftk/bt+3X7rS77T77hf3afmMP2u/tYfuDPWaP2x/tz/ak/cWes7/Z
3+0f9m/7j/3X/udwOo4dLseJw+04dXgdZw6f48Lhd1w5rh03jjtHyHHveHDE
HM+OpCPtyDiyjpzj1VFwFB1vjnfHh+PL8e34cfw5j52nzgun33njvHXeOSPO
B2fM+eh8cj47k86UM+18db47P5xfzh9n1fl3dHx0cuQ+8hydHp0d+Y7Ojy6O
/EfXR4Gjm6Pbo/uj8FHkKHb0eJQ8Sh1lj3JH+aPXo+LR21Hp6P3o4+jrqHL0
c1Q9Pjk+O/YfXx/fHoeO74+jx7Hjx+Pn48Rx8jh1nDnOHhePP46/jivHVdeJ
y+M6dXldZ65z14Xr0uV3XbtuXEHXrSvkirgeXFHXo+vZlXJlXHnXq6vgKrpK
rndX2fXh+nJVXL+u6onn5Pzk+uTmJHQSPomcxE8eT55PkicvJ6mTzEnuJH9S
Ovk6qZz8uj1ur/vM7XOfuy/dfveV+9p9475137lD7rA76o654+5nd9Kdcefc
BXfR/eYuucvuD/en+8tdcf+6/zxez6XnxnPrCXsePFHPk+fZk/SkPGlPxpPz
vHoKnrKn4vn1/J16T32n56cXp5enV6fXp4HTm9Pb09Dp/Wn49OE0fvp4+nSa
PE2d5k5fT99OS6fvp+XTz9Ov0+/Tyunv6Z/X573y3npD3gdvzBv3JrxJb8qb
8Wa9Oe+rt+h98356f71/Z76zi7PLM//Z1Vng7OYseHZ7FjoLn0XOHs5iZ09n
z2eJs9RZ5uz1rHj2flY++zj7PPs+q5z9nP2e/fkufAFfyBf2xXyPviffiy/l
y/hyvrzv1Vf0lXzvvm/f3/nFuf/86vz6PHAePL89vzsPnYfPH86j57Hzx/PE
efL85TxznjsvnpfOP84/z7/Ov89/zn/Pq+d/F/6L4EX44uHi8eL5InGRvshc
5C5eLwoXxYvSRfni4+Ln0n95fRm4vLkMXt5dhi7vL8OXD5exy/jl4+Xz5ctl
6jJ9mbt8vSxdli+/Lr8vK5c/l9XLP/+1/87/4I/5n/1J/4s/68/5X/1F/5u/
5C/7P/1f/urV9dXNVfDq9uru6v4qfBW5eriKXT1ePV09XyWv0leZq+zV61Xx
qnz1eVW5+rn6vape31zfX8euH6+T16nr9HX++vW6eF26fr8uX39ef19XAjeB
28BdIBS4D0QCD4FoIBZ4DDwHEoFkIBXIBnKBfKAYKAU+A9+B30A18HdzexO5
ebx5vkndZG6yN4Wb4k3ppnzzcfN5833zc/MbvA2GgvfBcDASjAZjwXjwMfgc
TAZfgqlgJpgPvgYLwVKwHPwO/gT/bkO30dvn2+Rt5jZ3m799uy3dlm8/b79u
v29/bqu3f3ehu/Bd5O7hLnoXv3u8e7p7vkvepe7Sd5m73F3hrnj3dle++7z7
uauGwqF4KBlKhXKh11Ah9B4qhz5D36FK6CdUvQ/fP9xH72P38fun++f7xH3y
PnWfuc/e5+5f79/uS/fv95/33/fV8EP4KZwKZ8Kv4WL4LfwR/gx/h3/Cv+Fq
5CESi8Qjj5GnSCKSjLxEUpFMJBfJR14jxch7pBz5iHxHfh5iD4mHzEPuofhQ
enh/+Hr4fvh5qD78RWPRx+hT9DmaiL5EU9F0NBPNRV+jhWgxWop+RD+jX9Gf
aDX2GHuJ5WKvsVKsHPuIVWI/sWr8Mf4cT8ST8Zd4Op6JZ+O5+Gu8GH+Ll+Ll
+Ff8O16JVx+fH9OPr4/Fx/Lj5+PX4+9j9en5Kfn08pR6Sj9ln3JP+afXp+JT
6en9qfz0+VR5+nn6fU4+Z5+Lz6Xnz+fv58rzXyKZSCXSiUwim8gnXhOFRDFR
SpQTH4nPxHfiN1FN/CVTyXyylCwnv5M/yd+X1EvmJfuSe8m/FF6KL28vpZfy
y+fL18v3y8/LXyqTKqTKqc/UT6qa+ktn0rl0Pv2aLqTf0qX0e7qc/kx/pyvp
n3Q1k8u8ZT4z35lqNpd9zRayxexb9j1bzn5kP7Pf2Z/sb7aae829575zP/nX
fDH/li/l3/Mf+c/8V/47/5Ov5v9ei68frz+v1UKxUCq8F8qFj8JX4btQKfwU
qsVS8atYfSu9ld8+3j7fvt4qbz9vv2/VUrlUeS+/f75/vX+/V95/36vvf+XP
8u/H58f3R+Xj5+P34+/z+/Pv6/vr5+v3q/r19/1T+alUK38/1d/q/wASRG0S

             "], 0.022610767167259627`]}, 
           {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
            DiskBox[1, 0.022610767167259627], 
            DiskBox[2, 0.022610767167259627], 
            DiskBox[3, 0.022610767167259627], 
            DiskBox[4, 0.022610767167259627], 
            DiskBox[5, 0.022610767167259627], 
            DiskBox[6, 0.022610767167259627], 
            DiskBox[7, 0.022610767167259627], 
            DiskBox[8, 0.022610767167259627], 
            DiskBox[9, 0.022610767167259627], 
            DiskBox[10, 0.022610767167259627], 
            DiskBox[11, 0.022610767167259627], 
            DiskBox[12, 0.022610767167259627], 
            DiskBox[13, 0.022610767167259627], 
            DiskBox[14, 0.022610767167259627], 
            DiskBox[15, 0.022610767167259627], 
            DiskBox[16, 0.022610767167259627], 
            DiskBox[17, 0.022610767167259627], 
            DiskBox[18, 0.022610767167259627], 
            DiskBox[19, 0.022610767167259627], 
            DiskBox[20, 0.022610767167259627], 
            DiskBox[21, 0.022610767167259627], 
            DiskBox[22, 0.022610767167259627], 
            DiskBox[23, 0.022610767167259627], 
            DiskBox[24, 0.022610767167259627], 
            DiskBox[25, 0.022610767167259627], 
            DiskBox[26, 0.022610767167259627], 
            DiskBox[27, 0.022610767167259627], 
            DiskBox[28, 0.022610767167259627], 
            DiskBox[29, 0.022610767167259627], 
            DiskBox[30, 0.022610767167259627], 
            DiskBox[31, 0.022610767167259627], 
            DiskBox[32, 0.022610767167259627], 
            DiskBox[33, 0.022610767167259627], 
            DiskBox[34, 0.022610767167259627], 
            DiskBox[35, 0.022610767167259627], 
            DiskBox[36, 0.022610767167259627], 
            DiskBox[37, 0.022610767167259627], 
            DiskBox[38, 0.022610767167259627], 
            DiskBox[39, 0.022610767167259627], 
            DiskBox[40, 0.022610767167259627], 
            DiskBox[41, 0.022610767167259627], 
            DiskBox[42, 0.022610767167259627], 
            DiskBox[43, 0.022610767167259627], 
            DiskBox[44, 0.022610767167259627], 
            DiskBox[45, 0.022610767167259627], 
            DiskBox[46, 0.022610767167259627], 
            DiskBox[47, 0.022610767167259627], 
            DiskBox[48, 0.022610767167259627], 
            DiskBox[49, 0.022610767167259627], 
            DiskBox[50, 0.022610767167259627], 
            DiskBox[51, 0.022610767167259627], 
            DiskBox[52, 0.022610767167259627], 
            DiskBox[53, 0.022610767167259627], 
            DiskBox[54, 0.022610767167259627], 
            DiskBox[55, 0.022610767167259627], 
            DiskBox[56, 0.022610767167259627], 
            DiskBox[57, 0.022610767167259627], 
            DiskBox[58, 0.022610767167259627], 
            DiskBox[59, 0.022610767167259627], 
            DiskBox[60, 0.022610767167259627], 
            DiskBox[61, 0.022610767167259627], 
            DiskBox[62, 0.022610767167259627], 
            DiskBox[63, 0.022610767167259627], 
            DiskBox[64, 0.022610767167259627], 
            DiskBox[65, 0.022610767167259627], 
            DiskBox[66, 0.022610767167259627], 
            DiskBox[67, 0.022610767167259627], 
            DiskBox[68, 0.022610767167259627], 
            DiskBox[69, 0.022610767167259627], 
            DiskBox[70, 0.022610767167259627], 
            DiskBox[71, 0.022610767167259627], 
            DiskBox[72, 0.022610767167259627], 
            DiskBox[73, 0.022610767167259627], 
            DiskBox[74, 0.022610767167259627], 
            DiskBox[75, 0.022610767167259627], 
            DiskBox[76, 0.022610767167259627], 
            DiskBox[77, 0.022610767167259627], 
            DiskBox[78, 0.022610767167259627], 
            DiskBox[79, 0.022610767167259627], 
            DiskBox[80, 0.022610767167259627], 
            DiskBox[81, 0.022610767167259627], 
            DiskBox[82, 0.022610767167259627], 
            DiskBox[83, 0.022610767167259627], 
            DiskBox[84, 0.022610767167259627], 
            DiskBox[85, 0.022610767167259627], 
            DiskBox[86, 0.022610767167259627], 
            DiskBox[87, 0.022610767167259627], 
            DiskBox[88, 0.022610767167259627], 
            DiskBox[89, 0.022610767167259627], 
            DiskBox[90, 0.022610767167259627], 
            DiskBox[91, 0.022610767167259627], 
            DiskBox[92, 0.022610767167259627], 
            DiskBox[93, 0.022610767167259627], 
            DiskBox[94, 0.022610767167259627], 
            DiskBox[95, 0.022610767167259627], 
            DiskBox[96, 0.022610767167259627], 
            DiskBox[97, 0.022610767167259627], 
            DiskBox[98, 0.022610767167259627], 
            DiskBox[99, 0.022610767167259627], 
            DiskBox[100, 0.022610767167259627], 
            DiskBox[101, 0.022610767167259627], 
            DiskBox[102, 0.022610767167259627], 
            DiskBox[103, 0.022610767167259627], 
            DiskBox[104, 0.022610767167259627], 
            DiskBox[105, 0.022610767167259627], 
            DiskBox[106, 0.022610767167259627], 
            DiskBox[107, 0.022610767167259627], 
            DiskBox[108, 0.022610767167259627], 
            DiskBox[109, 0.022610767167259627], 
            DiskBox[110, 0.022610767167259627], 
            DiskBox[111, 0.022610767167259627], 
            DiskBox[112, 0.022610767167259627], 
            DiskBox[113, 0.022610767167259627], 
            DiskBox[114, 0.022610767167259627], 
            DiskBox[115, 0.022610767167259627], 
            DiskBox[116, 0.022610767167259627], 
            DiskBox[117, 0.022610767167259627], 
            DiskBox[118, 0.022610767167259627], 
            DiskBox[119, 0.022610767167259627], 
            DiskBox[120, 0.022610767167259627], 
            DiskBox[121, 0.022610767167259627], 
            DiskBox[122, 0.022610767167259627], 
            DiskBox[123, 0.022610767167259627], 
            DiskBox[124, 0.022610767167259627], 
            DiskBox[125, 0.022610767167259627], 
            DiskBox[126, 0.022610767167259627], 
            DiskBox[127, 0.022610767167259627], 
            DiskBox[128, 0.022610767167259627], 
            DiskBox[129, 0.022610767167259627], 
            DiskBox[130, 0.022610767167259627], 
            DiskBox[131, 0.022610767167259627], 
            DiskBox[132, 0.022610767167259627], 
            DiskBox[133, 0.022610767167259627], 
            DiskBox[134, 0.022610767167259627], 
            DiskBox[135, 0.022610767167259627], 
            DiskBox[136, 0.022610767167259627], 
            DiskBox[137, 0.022610767167259627], 
            DiskBox[138, 0.022610767167259627], 
            DiskBox[139, 0.022610767167259627], 
            DiskBox[140, 0.022610767167259627], 
            DiskBox[141, 0.022610767167259627], 
            DiskBox[142, 0.022610767167259627], 
            DiskBox[143, 0.022610767167259627], 
            DiskBox[144, 0.022610767167259627], 
            DiskBox[145, 0.022610767167259627], 
            DiskBox[146, 0.022610767167259627], 
            DiskBox[147, 0.022610767167259627], 
            DiskBox[148, 0.022610767167259627], 
            DiskBox[149, 0.022610767167259627], 
            DiskBox[150, 0.022610767167259627], 
            DiskBox[151, 0.022610767167259627], 
            DiskBox[152, 0.022610767167259627], 
            DiskBox[153, 0.022610767167259627], 
            DiskBox[154, 0.022610767167259627], 
            DiskBox[155, 0.022610767167259627], 
            DiskBox[156, 0.022610767167259627], 
            DiskBox[157, 0.022610767167259627], 
            DiskBox[158, 0.022610767167259627], 
            DiskBox[159, 0.022610767167259627], 
            DiskBox[160, 0.022610767167259627], 
            DiskBox[161, 0.022610767167259627], 
            DiskBox[162, 0.022610767167259627], 
            DiskBox[163, 0.022610767167259627], 
            DiskBox[164, 0.022610767167259627], 
            DiskBox[165, 0.022610767167259627], 
            DiskBox[166, 0.022610767167259627], 
            DiskBox[167, 0.022610767167259627], 
            DiskBox[168, 0.022610767167259627], 
            DiskBox[169, 0.022610767167259627]}}]],
        MouseAppearanceTag["NetworkGraphics"]],
       AllowKernelInitialization->False]],
     DefaultBaseStyle->{
      "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
     FormatType->TraditionalForm,
     FrameTicks->None,
     ImageCache->GraphicsData["CompressedBitmap", "\<\
eJykvWmMJll2HRbqzKys3CqrMrP26lp6ia+Xqup9epnprp6le2YivukRh0Oa
20geUiPOIspWcwgSBI0IiqYlW2OTsA1aMm0INg1JJCz/sX7aAgzCP7wAtgHz
nwCK8m+b5pCcoaBhh7+I9+4959wXmZU9bqAzs74l4r377j333OW9+NyXv/nV
r/zMl7/5tZ/68u1Pv//lf/OrX/upn7397r/x/uqltb9QVX/h7vj/7Wp99fdQ
VcWPe1X1/fz9d6afF59b/fi51f+/nn+/kt6t5l4/7WvVt9I1fnn6+cxpvvZv
r/7/nw6PLv3hs89/5Htvfupzf3jvpdf/l6NLV3975vV/fnB06Q+2tnf4td/f
2d37gwsHR/H73/oQ00vDrX5p+vnyaUYYR/LtJ565/ycHR1eGz//ITw3/6e/8
D8Nv/ZP/dfjP/uvfHX7wJ776J4cXrw4P3n0vvj7cfuKp4Rf/1t+bXuv/g/9i
+vcx3//2nSefeZh0jpt1mlb18/PLHmd30kxkxD/xlZ8d7j7/6viZam18ZfVz
/Nz9F98YP5tf25xee/mNTww/8uW/Pn3vX//6LwwvfORN+t6l6TPPv/Kx6R52
v08tf/hPD44un1YiczNPU67en36e/75mTrNMgz1TTOi9H/7J4WOfaDeyDN76
1HvDp9/70fyv8efGavU/b6/Zx6uNLJ8H7+A9u+PT918m+Zyflc+HkEMSQPU3
pp+7f+VDzvuRPJU88Olf61kWPLEvf+MXVwv71vAb/+C/M30Yr7a6i+jD+NpL
rz0Yfuyv/A362pvj1yr+3kuvvT1+puLbv/H2Z+j25wvZzcnpxdcejLP79rPP
vcJyet8FUv3M9HOH9ePfX/3/f57bP3+cTKo5odhrJIg8o0eLWf97f/cfD8+9
/NFh+cW/PH5ueu3v/qN/Ot3v8PKN4a13Ple8fuuxhVvfL6/w4uZj9ez3n3v5
jeFX/6N/4OOZNOreS8dKOL22L9L8d/7jfzRJcsb6fm//wuF/GJE1ybD6ainK
OVP7zt0XXv3elWs3hx/6S984tSjTa/dPFB2LaHztpdffHg4uXhueuv+R4fW3
Pzs8/dxrw8Wbd4f9R1+cfj+1+re9fnDlsWHv4Lq8du7wxur1O/7aU8+9Olw4
ujrcf+kNufcn2y9O9zlhOR4R/X/bNSHh4Vtk7zvDX/7az//5les3v/PM/Zcf
6tOSyKufnn5eOJVxG5yPt/3lX/svo/VmSX/0WEnPSXVOehdv3R2O6k8Ml+8t
h8Mn3px+33nw9aFuu+HO238tvP6N8rW3Vq89yK89nl67+NSnipWbVvSmruhx
K0UrInCcRL83Kf4oh1O6nfch++qnjsGRg8OLx+JIuu0z2al83J3KhxH9OO2j
xUrMd1Wct0fRrV47yKK7vXptFP2i7YdF063+Tr8XTZ//Xv2eXk+v8Xv5e4+M
L1ZX80fGl/JK0q1vr1Ztev0BvX63XLm5FfrxlVGMDgNauJYM5JU3xUCOcYi/
d3jxcgFNaVmqn5x+bkYD+c7VR+9876lnXzgW1dczOr71znvDxz/zhYeuxOHi
41GxV9ddyW5l+y7Vln4vR6n3q7uOnzkziW76XGv/m+TbLl1nY3rNVyp9frpH
V5311ZPfedVXK7k2fexCWtTV27ffPnmVHn/quWmVWBE/+xd/fHjj45/NFGZn
zg1/7+4Lr33n0pVHC1tJy1D9penn9kN9bvuFL423MrdVutbD6aPPPPeR4dK1
W8EkaCHuJr0chVG7+ttCZCGvNHvNRb1a99pWKL2ZhH+WFhDfrWWhmnGNanvb
LK2d1nj13rW0Fg2tL1kgLNMviffbsGATIL4jC3blxp1hcffFSMPU2W9P6vzJ
5osPs560TtWXjjGeOT/OhC69tnuiz7508+nh8Mm3hoMnHKaSDNcgm9XSJPHv
q/1kGUbEmmRYole2kS1/z/6vM5Sl1yf558+eSSpjn8Nn0tu36FadD63OZk3m
O12i5mVvOlleRswRsA/rt4ej64tTETwil5XRjNWa/vlxNphWs/rR6eeth9rg
HF0YF3T892n90+V775EYskRbW9V18kWTWJKhrPviZek9kgysnpBwsjIVIyPh
Gq6ZV7NfrbwvEVmfIyU0rekLyG7woQUGv7rdVVFFge+MMrXcqBuuPv+FU3OV
UcjjWp9ktzOEPK1t9SOnsFsO3jMFyVq0P/zUz/zScOnqo8Pi3suzdMOoxZ2M
rcka+rwADnkOgIk/7CTrAO4qFpOBJ0PM6z1isnhGs8JNQLWvhEu9YkDG53pX
vNFpLgLgYpX9NjYVHla/cqSugYw/q685mT2GuD5175Xh4pUbw49/5f0Qlakh
HxMLvI/lrb44/dx9KPEMhrx2DLOZYtDr9crDvJUW+O64wF8vbGXhqLwG9HRb
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
bZeBeLWZFmrmHPnB5c69Z3SNS9slxdDvSXZXjc/KHTpRSiaDr7t7584fAvAk
w32nfjwxNz2nmz1uAyaRXdUdyJSxa9Z0etyP3i/WQj7DEBBgG1LKEMCndDlc
5XEuXLJy/wJ7ye3CP4ohRpWMLWNx3neO77H8k4OjK98ivNhOqHG6/sr7nzPd
1IIbREa1UAyvZpeV1OSmhnpCQrtiPi4jq47yZxlTxP3SAHAtzW+y7FpnqVKx
8evieWozKROcauRDgHrWy6hC2VrMjVDQUNnZ/IugO8xQzOXglARCATJHf4ip
6HSfgZ7B3AeW2DQ/xJTV1tWxqIMGNkFXrwzeyMLy6G7Q6MKqB7JaOmdYiXC0
GZLl4IXwpCCaXnKykxpn/QDCqJ7dWxyEX2HZIZlayKVAFUdDoA4KR/51z57N
ekkCLUpWe1IPhqKGlRJ86XoXF58aDi5eG559/iPT4Y0jEjz/ykeHF197YFnP
HcaOxYdoxQzRvkMvOatWfyu8RhgOHrtwcHQsOC9AdBsWxp/T22bECVxCh9V6
WCH7673osEWZhGAicEYVM4Aar9FDTxpKLQAB2F9nNDgKOhaVwmyBbCN4sKDK
Gxlk2HHXyD3LrjenubX2ebO10uYF7393SM9X3IaElALI5Vw++0D9hlRs1tPS
v1s2qDWWSWVNdWim6NLEctBF5isqM5skD1jDT0IHAcr8aZt1SG1aaa2EokWo
IkhLycmYnErpQ8tktY6NLGmC8IVeONXeiUClOKUdHn/quenZEOMpkNa3yelP
AZC59OcZSn92PGY/HF0MkRW6E4PEx8pkCNlE9vR5G2dgdemzSPIzVMEenf+y
R4BdTBo1DSidHX4gNspCr2nRpeLIPhJ/J4kcCYlkNGSErEWfuqLdjMyjrH6Y
7fq2d1CklFp8BMM5KGxf+HZ0lDRMDi1INacgUdJTZPGFtTeUUdBDRQVXXKUa
P8W6QTZKhEjuRFr9lgiFoXMgDJEuQo/Oigjxvq9zEuSm48qixcgNLdf4li18
/dxZL3rwvB50IeEk8woQHU0vEqYnyRiONHhSGaVlvPsiWWTePz6b+dwWaPjp
1Y//96m7L1Dmc98znxe5o5P4hVJlQWrE1ewYLQ1xXo3IvsYNRMJVYRmSor8g
lMGzx2Z/bofs4VSBa2tX4KdbKF9NS3+H1IFtjWbQhpHSDAoCJcNSNwVHTb48
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\
\>"]]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"Path\"\>", ",", "4"}], "}"}], "\[Rule]", 
    GraphicsBox[
     NamespaceBox["NetworkGraphics",
      DynamicModuleBox[{Typeset`graph = HoldComplete[
        Graph[{1, 2, 3, 4}, {Null, 
          SparseArray[
          Automatic, {4, 4}, 0, {
           1, {{0, 1, 3, 5, 6}, {{2}, {1}, {3}, {2}, {4}, {3}}}, Pattern}]}, {
         VertexCoordinates -> {{1, 0}, {2, 0}, {3, 0}, {4, 0}}}]]}, 
       TagBox[
        GraphicsGroupBox[
         GraphicsComplexBox[{{1., 0.}, {2., 0.}, {3., 0.}, {4., 0.}}, {
           {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
            ArrowBox[{{1, 2}, {2, 3}, {3, 4}}, 0.030239520958083826`]}, 
           {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
            DiskBox[1, 0.030239520958083826], 
            DiskBox[2, 0.030239520958083826], 
            DiskBox[3, 0.030239520958083826], 
            DiskBox[4, 0.030239520958083826]}}]],
        MouseAppearanceTag["NetworkGraphics"]],
       AllowKernelInitialization->False]],
     DefaultBaseStyle->{
      "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
     FormatType->TraditionalForm,
     FrameTicks->None]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"Quartic\"\>", ",", 
      RowBox[{"{", 
       RowBox[{"9", ",", "2"}], "}"}]}], "}"}], "\[Rule]", 
    GraphicsBox[
     NamespaceBox["NetworkGraphics",
      DynamicModuleBox[{Typeset`graph = HoldComplete[
        Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9}, {Null, 
          SparseArray[
          Automatic, {9, 9}, 0, {
           1, {{0, 4, 8, 12, 16, 20, 24, 28, 32, 36}, {{2}, {3}, {4}, {5}, {
             1}, {3}, {4}, {5}, {1}, {2}, {6}, {7}, {1}, {2}, {6}, {7}, {1}, {
             2}, {8}, {9}, {3}, {4}, {8}, {9}, {3}, {4}, {8}, {9}, {5}, {6}, {
             7}, {9}, {5}, {6}, {7}, {8}}}, Pattern}]}, {
         VertexCoordinates -> {{0, 1}, {
             Rational[1, 5], 
             Rational[1, 2]}, {0, 0}, {
             Rational[2, 5], 
             Rational[1, 2]}, {
             Rational[1, 2], 1}, {1, 0}, {
             Rational[3, 5], 
             Rational[1, 2]}, {1, 1}, {
             Rational[4, 5], 
             Rational[1, 2]}}}]]}, 
       TagBox[
        GraphicsGroupBox[
         GraphicsComplexBox[{{0., 1.}, {0.2, 0.5}, {0., 0.}, {0.4, 0.5}, {0.5,
           1.}, {1., 0.}, {0.6, 0.5}, {1., 1.}, {0.8, 0.5}}, {
           {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
            ArrowBox[{{1, 2}, {1, 3}, {1, 4}, {1, 5}, {2, 3}, {2, 4}, {2, 
             5}, {3, 6}, {3, 7}, {4, 6}, {4, 7}, {5, 8}, {5, 9}, {6, 8}, {6, 
             9}, {7, 8}, {7, 9}, {8, 9}}, 0.01273]}, 
           {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
            DiskBox[1, 0.01273], DiskBox[2, 0.01273], DiskBox[3, 0.01273], 
            DiskBox[4, 0.01273], DiskBox[5, 0.01273], DiskBox[6, 0.01273], 
            DiskBox[7, 0.01273], DiskBox[8, 0.01273], DiskBox[9, 0.01273]}}]],
        MouseAppearanceTag["NetworkGraphics"]],
       AllowKernelInitialization->False]],
     DefaultBaseStyle->{
      "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
     FormatType->TraditionalForm,
     FrameTicks->None]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"Quartic\"\>", ",", 
      RowBox[{"{", 
       RowBox[{"9", ",", "8"}], "}"}]}], "}"}], "\[Rule]", 
    GraphicsBox[
     NamespaceBox["NetworkGraphics",
      DynamicModuleBox[{Typeset`graph = HoldComplete[
        Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9}, {Null, 
          SparseArray[
          Automatic, {9, 9}, 0, {
           1, {{0, 4, 8, 12, 16, 20, 24, 28, 32, 36}, {{2}, {3}, {4}, {5}, {
             1}, {3}, {4}, {6}, {1}, {2}, {5}, {7}, {1}, {2}, {7}, {8}, {1}, {
             3}, {8}, {9}, {2}, {7}, {8}, {9}, {3}, {4}, {6}, {9}, {4}, {5}, {
             6}, {9}, {5}, {6}, {7}, {8}}}, Pattern}]}, {
         VertexCoordinates -> {{1, 0}, {
             Rational[3, 4], 
             Rational[2, 3]}, {
             Rational[3, 4], 
             Rational[1, 3]}, {1, 1}, {0, 0}, {
             Rational[1, 4], 
             Rational[2, 3]}, {
             Rational[1, 2], 
             Rational[1, 2]}, {0, 1}, {
             Rational[1, 4], 
             Rational[1, 3]}}}]]}, 
       TagBox[
        GraphicsGroupBox[
         GraphicsComplexBox[{{1., 0.}, {0.75, 0.6666666666666666}, {0.75, 
          0.3333333333333333}, {1., 1.}, {0., 0.}, {0.25, 
          0.6666666666666666}, {0.5, 0.5}, {0., 1.}, {0.25, 
          0.3333333333333333}}, {
           {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
            ArrowBox[{{1, 2}, {1, 3}, {1, 4}, {1, 5}, {2, 3}, {2, 4}, {2, 
             6}, {3, 5}, {3, 7}, {4, 7}, {4, 8}, {5, 8}, {5, 9}, {6, 7}, {6, 
             8}, {6, 9}, {7, 9}, {8, 9}}, 0.01273]}, 
           {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
            DiskBox[1, 0.01273], DiskBox[2, 0.01273], DiskBox[3, 0.01273], 
            DiskBox[4, 0.01273], DiskBox[5, 0.01273], DiskBox[6, 0.01273], 
            DiskBox[7, 0.01273], DiskBox[8, 0.01273], DiskBox[9, 0.01273]}}]],
        MouseAppearanceTag["NetworkGraphics"]],
       AllowKernelInitialization->False]],
     DefaultBaseStyle->{
      "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
     FormatType->TraditionalForm,
     FrameTicks->None]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"Quartic\"\>", ",", 
      RowBox[{"{", 
       RowBox[{"9", ",", "11"}], "}"}]}], "}"}], "\[Rule]", 
    GraphicsBox[
     NamespaceBox["NetworkGraphics",
      DynamicModuleBox[{Typeset`graph = HoldComplete[
        Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9}, {Null, 
          SparseArray[
          Automatic, {9, 9}, 0, {
           1, {{0, 4, 8, 12, 16, 20, 24, 28, 32, 36}, {{2}, {3}, {4}, {5}, {
             1}, {3}, {4}, {6}, {1}, {2}, {7}, {8}, {1}, {2}, {7}, {9}, {1}, {
             6}, {8}, {9}, {2}, {5}, {8}, {9}, {3}, {4}, {8}, {9}, {3}, {5}, {
             6}, {7}, {4}, {5}, {6}, {7}}}, Pattern}]}, {
         VertexCoordinates -> {{0, 1}, {
             Rational[1, 4], 
             Rational[1, 2]}, {0, 0}, {
             Rational[1, 2], 
             Rational[1, 2]}, {1, 1}, {
             Rational[3, 4], 
             Rational[3, 4]}, {
             Rational[1, 2], 
             Rational[1, 4]}, {1, 0}, {
             Rational[3, 4], 
             Rational[1, 2]}}}]]}, 
       TagBox[
        GraphicsGroupBox[
         GraphicsComplexBox[{{0., 1.}, {0.25, 0.5}, {0., 0.}, {0.5, 0.5}, {1.,
           1.}, {0.75, 0.75}, {0.5, 0.25}, {1., 0.}, {0.75, 0.5}}, {
           {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
            ArrowBox[{{1, 2}, {1, 3}, {1, 4}, {1, 5}, {2, 3}, {2, 4}, {2, 
             6}, {3, 7}, {3, 8}, {4, 7}, {4, 9}, {5, 6}, {5, 8}, {5, 9}, {6, 
             8}, {6, 9}, {7, 8}, {7, 9}}, 0.01273]}, 
           {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
            DiskBox[1, 0.01273], DiskBox[2, 0.01273], DiskBox[3, 0.01273], 
            DiskBox[4, 0.01273], DiskBox[5, 0.01273], DiskBox[6, 0.01273], 
            DiskBox[7, 0.01273], DiskBox[8, 0.01273], DiskBox[9, 0.01273]}}]],
        MouseAppearanceTag["NetworkGraphics"]],
       AllowKernelInitialization->False]],
     DefaultBaseStyle->{
      "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
     FormatType->TraditionalForm,
     FrameTicks->None]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"SelfComplementary\"\>", ",", 
      RowBox[{"{", 
       RowBox[{"8", ",", "1"}], "}"}]}], "}"}], "\[Rule]", 
    GraphicsBox[
     NamespaceBox["NetworkGraphics",
      DynamicModuleBox[{Typeset`graph = HoldComplete[
        Graph[{1, 2, 3, 4, 5, 6, 7, 8}, {Null, 
          SparseArray[
          Automatic, {8, 8}, 0, {
           1, {{0, 4, 7, 8, 9, 12, 16, 22, 28}, {{5}, {6}, {7}, {8}, {6}, {
             7}, {8}, {7}, {8}, {1}, {7}, {8}, {1}, {2}, {7}, {8}, {1}, {2}, {
             3}, {5}, {6}, {8}, {1}, {2}, {4}, {5}, {6}, {7}}}, Pattern}]}, {
         VertexCoordinates -> {{1.930159912868408, 1.4328278256451554`}, {
           1.927268278390134, 0.}, {3.8573653901917098`, 
           1.0015452423203681`}, {0., 1.0021810500866357`}, {
           1.9282625444003687`, 2.002787880716363}, {1.9314386669541102`, 
           0.5711389372838005}, {2.529717636086559, 1.0019793805536878`}, {
           1.329294889409823, 1.0006795383015827`}}}]]}, 
       TagBox[
        GraphicsGroupBox[
         GraphicsComplexBox[{{1.930159912868408, 1.4328278256451554`}, {
          1.927268278390134, 0.}, {3.8573653901917098`, 
          1.0015452423203681`}, {0., 1.0021810500866357`}, {
          1.9282625444003687`, 2.002787880716363}, {1.9314386669541102`, 
          0.5711389372838005}, {2.529717636086559, 1.0019793805536878`}, {
          1.329294889409823, 1.0006795383015827`}}, {
           {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
            ArrowBox[{{1, 5}, {1, 6}, {1, 7}, {1, 8}, {2, 6}, {2, 7}, {2, 
             8}, {3, 7}, {4, 8}, {5, 7}, {5, 8}, {6, 7}, {6, 8}, {7, 8}}, 
             0.03608769279716163]}, 
           {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
            DiskBox[1, 0.03608769279716163], DiskBox[2, 0.03608769279716163], 
            DiskBox[3, 0.03608769279716163], DiskBox[4, 0.03608769279716163], 
            DiskBox[5, 0.03608769279716163], DiskBox[6, 0.03608769279716163], 
            DiskBox[7, 0.03608769279716163], 
            DiskBox[8, 0.03608769279716163]}}]],
        MouseAppearanceTag["NetworkGraphics"]],
       AllowKernelInitialization->False]],
     DefaultBaseStyle->{
      "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
     FormatType->TraditionalForm,
     FrameTicks->None]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"SelfComplementary\"\>", ",", 
      RowBox[{"{", 
       RowBox[{"8", ",", "3"}], "}"}]}], "}"}], "\[Rule]", 
    GraphicsBox[
     NamespaceBox["NetworkGraphics",
      DynamicModuleBox[{Typeset`graph = HoldComplete[
        Graph[{1, 2, 3, 4, 5, 6, 7, 8}, {Null, 
          SparseArray[
          Automatic, {8, 8}, 0, {
           1, {{0, 2, 4, 6, 8, 13, 18, 23, 28}, {{5}, {7}, {5}, {7}, {6}, {
             8}, {6}, {8}, {1}, {2}, {6}, {7}, {8}, {3}, {4}, {5}, {7}, {8}, {
             1}, {2}, {5}, {6}, {8}, {3}, {4}, {5}, {6}, {7}}}, Pattern}]}, {
         VertexCoordinates -> {{0, 1.}, {0, 0.5}, {-0.1, -0.75}, {
            0.1, -0.75}, {1., 0}, {0, -1.}, {-1., 0}, {0, -0.5}}}]]}, 
       TagBox[
        GraphicsGroupBox[
         GraphicsComplexBox[{{0., 1.}, {0., 0.5}, {-0.1, -0.75}, {
          0.1, -0.75}, {1., 0.}, {0., -1.}, {-1., 0.}, {0., -0.5}}, {
           {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
            ArrowBox[{{1, 5}, {1, 7}, {2, 5}, {2, 7}, {3, 6}, {3, 8}, {4, 
             6}, {4, 8}, {5, 6}, {5, 7}, {5, 8}, {6, 7}, {6, 8}, {7, 8}}, 
             0.02261146496815286]}, 
           {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
            DiskBox[1, 0.02261146496815286], DiskBox[2, 0.02261146496815286], 
            DiskBox[3, 0.02261146496815286], DiskBox[4, 0.02261146496815286], 
            DiskBox[5, 0.02261146496815286], DiskBox[6, 0.02261146496815286], 
            DiskBox[7, 0.02261146496815286], 
            DiskBox[8, 0.02261146496815286]}}]],
        MouseAppearanceTag["NetworkGraphics"]],
       AllowKernelInitialization->False]],
     DefaultBaseStyle->{
      "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
     FormatType->TraditionalForm,
     FrameTicks->None]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"SelfComplementary\"\>", ",", 
      RowBox[{"{", 
       RowBox[{"8", ",", "4"}], "}"}]}], "}"}], "\[Rule]", 
    GraphicsBox[
     NamespaceBox["NetworkGraphics",
      DynamicModuleBox[{Typeset`graph = HoldComplete[
        Graph[{1, 2, 3, 4, 5, 6, 7, 8}, {Null, 
          SparseArray[
          Automatic, {8, 8}, 0, {
           1, {{0, 4, 6, 9, 12, 14, 18, 23, 28}, {{4}, {6}, {7}, {8}, {5}, {
             7}, {6}, {7}, {8}, {1}, {7}, {8}, {2}, {8}, {1}, {3}, {7}, {8}, {
             1}, {2}, {3}, {4}, {6}, {1}, {3}, {4}, {5}, {6}}}, Pattern}]}, {
         VertexCoordinates -> {{
            0, 0.5393446629166315}, {-0.5877852522924727, \
-0.8090169943749468}, {0, 1.}, {0, 0.30901699437494734`}, {
            0.5877852522924737, -0.8090169943749481}, {
            0, 0.7696723314583158}, {-0.9510565162951538, 
            0.30901699437494834`}, {0.9510565162951533, 
            0.30901699437494634`}}}]]}, 
       TagBox[
        GraphicsGroupBox[
         GraphicsComplexBox[{{0., 
          0.5393446629166315}, {-0.5877852522924727, -0.8090169943749468}, {
          0., 1.}, {0., 0.30901699437494734`}, {
          0.5877852522924737, -0.8090169943749481}, {0., 
          0.7696723314583158}, {-0.9510565162951538, 0.30901699437494834`}, {
          0.9510565162951533, 0.30901699437494634`}}, {
           {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
            ArrowBox[{{1, 4}, {1, 6}, {1, 7}, {1, 8}, {2, 5}, {2, 7}, {3, 
             6}, {3, 7}, {3, 8}, {4, 7}, {4, 8}, {5, 8}, {6, 7}, {6, 8}}, 
             0.021812234931106983`]}, 
           {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
            DiskBox[1, 0.021812234931106983], 
            DiskBox[2, 0.021812234931106983], 
            DiskBox[3, 0.021812234931106983], 
            DiskBox[4, 0.021812234931106983], 
            DiskBox[5, 0.021812234931106983], 
            DiskBox[6, 0.021812234931106983], 
            DiskBox[7, 0.021812234931106983], 
            DiskBox[8, 0.021812234931106983]}}]],
        MouseAppearanceTag["NetworkGraphics"]],
       AllowKernelInitialization->False]],
     DefaultBaseStyle->{
      "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
     FormatType->TraditionalForm,
     FrameTicks->None]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"SelfComplementary\"\>", ",", 
      RowBox[{"{", 
       RowBox[{"8", ",", "5"}], "}"}]}], "}"}], "\[Rule]", 
    GraphicsBox[
     NamespaceBox["NetworkGraphics",
      DynamicModuleBox[{Typeset`graph = HoldComplete[
        Graph[{1, 2, 3, 4, 5, 6, 7, 8}, {Null, 
          SparseArray[
          Automatic, {8, 8}, 0, {
           1, {{0, 3, 7, 11, 14, 17, 20, 24, 28}, {{4}, {7}, {8}, {5}, {6}, {
             7}, {8}, {5}, {6}, {7}, {8}, {1}, {7}, {8}, {2}, {3}, {6}, {2}, {
             3}, {5}, {1}, {2}, {3}, {4}, {1}, {2}, {3}, {4}}}, Pattern}]}, {
         VertexCoordinates -> {{0, 1.}, {0, -1.}, {
            0, -0.33331132076081427`}, {
            0, 0.3333333333333333}, {-0.15, -0.6666471499339349}, {
            0.15, -0.6666528235649164}, {-1., 0}, {1., 0}}}]]}, 
       TagBox[
        GraphicsGroupBox[
         GraphicsComplexBox[{{0., 1.}, {0., -1.}, {
          0., -0.33331132076081427`}, {0., 
          0.3333333333333333}, {-0.15, -0.6666471499339349}, {
          0.15, -0.6666528235649164}, {-1., 0.}, {1., 0.}}, {
           {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
            ArrowBox[{{1, 4}, {1, 7}, {1, 8}, {2, 5}, {2, 6}, {2, 7}, {2, 
             8}, {3, 5}, {3, 6}, {3, 7}, {3, 8}, {4, 7}, {4, 8}, {5, 6}}, 
             0.02261146496815286]}, 
           {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
            DiskBox[1, 0.02261146496815286], DiskBox[2, 0.02261146496815286], 
            DiskBox[3, 0.02261146496815286], DiskBox[4, 0.02261146496815286], 
            DiskBox[5, 0.02261146496815286], DiskBox[6, 0.02261146496815286], 
            DiskBox[7, 0.02261146496815286], 
            DiskBox[8, 0.02261146496815286]}}]],
        MouseAppearanceTag["NetworkGraphics"]],
       AllowKernelInitialization->False]],
     DefaultBaseStyle->{
      "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
     FormatType->TraditionalForm,
     FrameTicks->None]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"SelfComplementary\"\>", ",", 
      RowBox[{"{", 
       RowBox[{"8", ",", "6"}], "}"}]}], "}"}], "\[Rule]", 
    GraphicsBox[
     NamespaceBox["NetworkGraphics",
      DynamicModuleBox[{Typeset`graph = HoldComplete[
        Graph[{1, 2, 3, 4, 5, 6, 7, 8}, {Null, 
          SparseArray[
          Automatic, {8, 8}, 0, {
           1, {{0, 4, 8, 11, 14, 17, 20, 24, 28}, {{4}, {6}, {7}, {8}, {5}, {
             6}, {7}, {8}, {5}, {7}, {8}, {1}, {6}, {7}, {2}, {3}, {8}, {1}, {
             2}, {4}, {1}, {2}, {3}, {4}, {1}, {2}, {3}, {5}}}, Pattern}]}, {
         VertexCoordinates -> {{0, 0}, {6, 6}, {12, 12}, {6, 2}, {9, 9}, {3, 
           3}, {12, 0}, {0, 12}}}]]}, 
       TagBox[
        GraphicsGroupBox[
         GraphicsComplexBox[{{0., 0.}, {6., 6.}, {12., 12.}, {6., 2.}, {9., 
          9.}, {3., 3.}, {12., 0.}, {0., 12.}}, {
           {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
            ArrowBox[{{1, 4}, {1, 6}, {1, 7}, {1, 8}, {2, 5}, {2, 6}, {2, 
             7}, {2, 8}, {3, 5}, {3, 7}, {3, 8}, {4, 6}, {4, 7}, {5, 8}}, 
             0.07217898832684824]}, 
           {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
            DiskBox[1, 0.07217898832684824], DiskBox[2, 0.07217898832684824], 
            DiskBox[3, 0.07217898832684824], DiskBox[4, 0.07217898832684824], 
            DiskBox[5, 0.07217898832684824], DiskBox[6, 0.07217898832684824], 
            DiskBox[7, 0.07217898832684824], 
            DiskBox[8, 0.07217898832684824]}}]],
        MouseAppearanceTag["NetworkGraphics"]],
       AllowKernelInitialization->False]],
     DefaultBaseStyle->{
      "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
     FormatType->TraditionalForm,
     FrameTicks->None]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"SelfComplementary\"\>", ",", 
      RowBox[{"{", 
       RowBox[{"8", ",", "7"}], "}"}]}], "}"}], "\[Rule]", 
    GraphicsBox[
     NamespaceBox["NetworkGraphics",
      DynamicModuleBox[{Typeset`graph = HoldComplete[
        Graph[{1, 2, 3, 4, 5, 6, 7, 8}, {Null, 
          SparseArray[
          Automatic, {8, 8}, 0, {
           1, {{0, 4, 7, 9, 11, 14, 18, 23, 28}, {{4}, {5}, {7}, {8}, {5}, {
             6}, {7}, {6}, {8}, {1}, {7}, {1}, {2}, {8}, {2}, {3}, {7}, {8}, {
             1}, {2}, {4}, {6}, {8}, {1}, {3}, {5}, {6}, {7}}}, Pattern}]}, {
         VertexCoordinates -> {{
             Rational[3, 4], 
             Rational[1, 2]}, {0, 0}, {
             Rational[1, 2], 
             Rational[3, 4]}, {
             Rational[5, 8], 
             Rational[3, 8]}, {1, 0}, {0, 1}, {
             Rational[1, 2], 
             Rational[1, 2]}, {1, 1}}}]]}, 
       TagBox[
        GraphicsGroupBox[
         GraphicsComplexBox[{{0.75, 0.5}, {0., 0.}, {0.5, 0.75}, {0.625, 
          0.375}, {1., 0.}, {0., 1.}, {0.5, 0.5}, {1., 1.}}, {
           {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
            ArrowBox[{{1, 4}, {1, 5}, {1, 7}, {1, 8}, {2, 5}, {2, 6}, {2, 
             7}, {3, 6}, {3, 8}, {4, 7}, {5, 8}, {6, 7}, {6, 8}, {7, 8}}, 
             0.01273]}, 
           {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
            DiskBox[1, 0.01273], DiskBox[2, 0.01273], DiskBox[3, 0.01273], 
            DiskBox[4, 0.01273], DiskBox[5, 0.01273], DiskBox[6, 0.01273], 
            DiskBox[7, 0.01273], DiskBox[8, 0.01273]}}]],
        MouseAppearanceTag["NetworkGraphics"]],
       AllowKernelInitialization->False]],
     DefaultBaseStyle->{
      "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
     FormatType->TraditionalForm,
     FrameTicks->None]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"SelfComplementary\"\>", ",", 
      RowBox[{"{", 
       RowBox[{"8", ",", "8"}], "}"}]}], "}"}], "\[Rule]", 
    GraphicsBox[
     NamespaceBox["NetworkGraphics",
      DynamicModuleBox[{Typeset`graph = HoldComplete[
        Graph[{1, 2, 3, 4, 5, 6, 7, 8}, {Null, 
          SparseArray[
          Automatic, {8, 8}, 0, {
           1, {{0, 4, 7, 9, 11, 14, 18, 23, 28}, {{4}, {5}, {7}, {8}, {5}, {
             6}, {7}, {6}, {7}, {1}, {8}, {1}, {2}, {8}, {2}, {3}, {7}, {8}, {
             1}, {2}, {3}, {6}, {8}, {1}, {4}, {5}, {6}, {7}}}, Pattern}]}, {
         VertexCoordinates -> {{
             Rational[3, 5], 
             Rational[1, 2]}, {0, 0}, {
             Rational[1, 5], 
             Rational[1, 2]}, {
             Rational[4, 5], 
             Rational[1, 2]}, {1, 0}, {0, 1}, {
             Rational[2, 5], 
             Rational[1, 2]}, {1, 1}}}]]}, 
       TagBox[
        GraphicsGroupBox[
         GraphicsComplexBox[{{0.6, 0.5}, {0., 0.}, {0.2, 0.5}, {0.8, 0.5}, {
          1., 0.}, {0., 1.}, {0.4, 0.5}, {1., 1.}}, {
           {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
            ArrowBox[{{1, 4}, {1, 5}, {1, 7}, {1, 8}, {2, 5}, {2, 6}, {2, 
             7}, {3, 6}, {3, 7}, {4, 8}, {5, 8}, {6, 7}, {6, 8}, {7, 8}}, 
             0.01273]}, 
           {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
            DiskBox[1, 0.01273], DiskBox[2, 0.01273], DiskBox[3, 0.01273], 
            DiskBox[4, 0.01273], DiskBox[5, 0.01273], DiskBox[6, 0.01273], 
            DiskBox[7, 0.01273], DiskBox[8, 0.01273]}}]],
        MouseAppearanceTag["NetworkGraphics"]],
       AllowKernelInitialization->False]],
     DefaultBaseStyle->{
      "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
     FormatType->TraditionalForm,
     FrameTicks->None]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"SelfComplementary\"\>", ",", 
      RowBox[{"{", 
       RowBox[{"8", ",", "10"}], "}"}]}], "}"}], "\[Rule]", 
    GraphicsBox[
     NamespaceBox["NetworkGraphics",
      DynamicModuleBox[{Typeset`graph = HoldComplete[
        Graph[{1, 2, 3, 4, 5, 6, 7, 8}, {Null, 
          SparseArray[
          Automatic, {8, 8}, 0, {
           1, {{0, 3, 6, 10, 14, 17, 20, 24, 28}, {{4}, {5}, {7}, {4}, {6}, {
             7}, {5}, {6}, {7}, {8}, {1}, {2}, {7}, {8}, {1}, {3}, {8}, {2}, {
             3}, {8}, {1}, {2}, {3}, {4}, {3}, {4}, {5}, {6}}}, Pattern}]}, {
         VertexCoordinates -> {{0, 0}, {
             Rational[2, 3], 
             Rational[1, 3]}, {
             Rational[1, 3], 
             Rational[2, 3]}, {1, 0}, {0, 1}, {
             Rational[2, 3], 
             Rational[2, 3]}, {
             Rational[1, 3], 
             Rational[1, 3]}, {1, 1}}}]]}, 
       TagBox[
        GraphicsGroupBox[
         GraphicsComplexBox[{{0., 0.}, {0.6666666666666666, 
          0.3333333333333333}, {0.3333333333333333, 0.6666666666666666}, {1., 
          0.}, {0., 1.}, {0.6666666666666666, 0.6666666666666666}, {
          0.3333333333333333, 0.3333333333333333}, {1., 1.}}, {
           {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
            ArrowBox[{{1, 4}, {1, 5}, {1, 7}, {2, 4}, {2, 6}, {2, 7}, {3, 
             5}, {3, 6}, {3, 7}, {3, 8}, {4, 7}, {4, 8}, {5, 8}, {6, 8}}, 
             0.01273]}, 
           {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
            DiskBox[1, 0.01273], DiskBox[2, 0.01273], DiskBox[3, 0.01273], 
            DiskBox[4, 0.01273], DiskBox[5, 0.01273], DiskBox[6, 0.01273], 
            DiskBox[7, 0.01273], DiskBox[8, 0.01273]}}]],
        MouseAppearanceTag["NetworkGraphics"]],
       AllowKernelInitialization->False]],
     DefaultBaseStyle->{
      "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
     FormatType->TraditionalForm,
     FrameTicks->None]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"SelfComplementary\"\>", ",", 
      RowBox[{"{", 
       RowBox[{"9", ",", "1"}], "}"}]}], "}"}], "\[Rule]", 
    GraphicsBox[
     NamespaceBox["NetworkGraphics",
      DynamicModuleBox[{Typeset`graph = HoldComplete[
        Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9}, {Null, 
          SparseArray[
          Automatic, {9, 9}, 0, {
           1, {{0, 4, 7, 10, 11, 12, 17, 22, 29, 36}, {{6}, {7}, {8}, {9}, {
             6}, {8}, {9}, {7}, {8}, {9}, {8}, {9}, {1}, {2}, {7}, {8}, {9}, {
             1}, {3}, {6}, {8}, {9}, {1}, {2}, {3}, {4}, {6}, {7}, {9}, {1}, {
             2}, {3}, {5}, {6}, {7}, {8}}}, Pattern}]}, {
         VertexCoordinates -> {{
             Rational[1, 2], 
             Rational[3, 8]}, {
             Rational[1, 4], 1}, {
             Rational[1, 2], 
             Rational[1, 8]}, {-1, 0}, {2, 0}, {
             Rational[1, 3], 
             Rational[2, 3]}, {
             Rational[1, 2], 
             Rational[1, 4]}, {0, 0}, {1, 0}}}]]}, 
       TagBox[
        GraphicsGroupBox[
         GraphicsComplexBox[{{0.5, 0.375}, {0.25, 1.}, {0.5, 0.125}, {-1., 
          0.}, {2., 0.}, {0.3333333333333333, 0.6666666666666666}, {0.5, 
          0.25}, {0., 0.}, {1., 0.}}, {
           {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
            ArrowBox[{{1, 6}, {1, 7}, {1, 8}, {1, 9}, {2, 6}, {2, 8}, {2, 
             9}, {3, 7}, {3, 8}, {3, 9}, {4, 8}, {5, 9}, {6, 7}, {6, 8}, {6, 
             9}, {7, 8}, {7, 9}, {8, 9}}, 0.030239520958083826`]}, 
           {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
            DiskBox[1, 0.030239520958083826], 
            DiskBox[2, 0.030239520958083826], 
            DiskBox[3, 0.030239520958083826], 
            DiskBox[4, 0.030239520958083826], 
            DiskBox[5, 0.030239520958083826], 
            DiskBox[6, 0.030239520958083826], 
            DiskBox[7, 0.030239520958083826], 
            DiskBox[8, 0.030239520958083826], 
            DiskBox[9, 0.030239520958083826]}}]],
        MouseAppearanceTag["NetworkGraphics"]],
       AllowKernelInitialization->False]],
     DefaultBaseStyle->{
      "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
     FormatType->TraditionalForm,
     FrameTicks->None]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"SelfComplementary\"\>", ",", 
      RowBox[{"{", 
       RowBox[{"9", ",", "2"}], "}"}]}], "}"}], "\[Rule]", 
    GraphicsBox[
     NamespaceBox["NetworkGraphics",
      DynamicModuleBox[{Typeset`graph = HoldComplete[
        Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9}, {Null, 
          SparseArray[
          Automatic, {9, 9}, 0, {
           1, {{0, 4, 6, 8, 10, 12, 18, 24, 30, 36}, {{6}, {7}, {8}, {9}, {
             6}, {8}, {6}, {9}, {7}, {8}, {7}, {9}, {1}, {2}, {3}, {7}, {8}, {
             9}, {1}, {4}, {5}, {6}, {8}, {9}, {1}, {2}, {4}, {6}, {7}, {9}, {
             1}, {3}, {5}, {6}, {7}, {8}}}, Pattern}]}, {
         VertexCoordinates -> {{
             Rational[-1, 16], 
             Rational[2, 5]}, {
             Rational[-1, 6], 
             Rational[2, 5]}, {
             Rational[-1, 8], 
             Rational[1, 8]}, {
             Rational[1, 6], 
             Rational[2, 5]}, {
             Rational[1, 8], 
             Rational[1, 8]}, {
             Rational[-1, 2], 0}, {
             Rational[1, 2], 0}, {0, Rational[1, 2] 3^Rational[1, 2]}, {0, 
             Rational[1, 4]}}}]]}, 
       TagBox[
        GraphicsGroupBox[
         GraphicsComplexBox[{{-0.0625, 0.4}, {-0.16666666666666666`, 
          0.4}, {-0.125, 0.125}, {0.16666666666666666`, 0.4}, {0.125, 
          0.125}, {-0.5, 0.}, {0.5, 0.}, {0., 0.8660254037844386}, {0., 
          0.25}}, {
           {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
            ArrowBox[{{1, 6}, {1, 7}, {1, 8}, {1, 9}, {2, 6}, {2, 8}, {3, 
             6}, {3, 9}, {4, 7}, {4, 8}, {5, 7}, {5, 9}, {6, 7}, {6, 8}, {6, 
             9}, {7, 8}, {7, 9}, {8, 9}}, 0.01273]}, 
           {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
            DiskBox[1, 0.01273], DiskBox[2, 0.01273], DiskBox[3, 0.01273], 
            DiskBox[4, 0.01273], DiskBox[5, 0.01273], DiskBox[6, 0.01273], 
            DiskBox[7, 0.01273], DiskBox[8, 0.01273], DiskBox[9, 0.01273]}}]],
        MouseAppearanceTag["NetworkGraphics"]],
       AllowKernelInitialization->False]],
     DefaultBaseStyle->{
      "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
     FormatType->TraditionalForm,
     FrameTicks->None]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"SelfComplementary\"\>", ",", 
      RowBox[{"{", 
       RowBox[{"9", ",", "3"}], "}"}]}], "}"}], "\[Rule]", 
    GraphicsBox[
     NamespaceBox["NetworkGraphics",
      DynamicModuleBox[{Typeset`graph = HoldComplete[
        Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9}, {Null, 
          SparseArray[
          Automatic, {9, 9}, 0, {
           1, {{0, 4, 6, 8, 10, 12, 18, 24, 30, 36}, {{6}, {7}, {8}, {9}, {
             6}, {8}, {6}, {8}, {7}, {9}, {7}, {9}, {1}, {2}, {3}, {7}, {8}, {
             9}, {1}, {4}, {5}, {6}, {8}, {9}, {1}, {2}, {3}, {6}, {7}, {9}, {
             1}, {4}, {5}, {6}, {7}, {8}}}, Pattern}]}, {
         VertexCoordinates -> {{
             Rational[-1, 20], 
             Rational[2, 5]}, {
             Rational[-1, 10], 
             Rational[2, 5]}, {
             Rational[-3, 20], 
             Rational[2, 5]}, {
             Rational[1, 2], 0}, {
             Rational[1, 20], 
             Rational[2, 5]}, {
             Rational[-1, 2], 0}, {
             Rational[1, 4], 0}, {
             Rational[-3, 40], 
             Rational[3, 5]}, {0, Rational[1, 2] 3^Rational[1, 2]}}}]]}, 
       TagBox[
        GraphicsGroupBox[
         GraphicsComplexBox[{{-0.05, 0.4}, {-0.1, 0.4}, {-0.15, 0.4}, {0.5, 
          0.}, {0.05, 0.4}, {-0.5, 0.}, {0.25, 0.}, {-0.075, 0.6}, {0., 
          0.8660254037844386}}, {
           {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
            ArrowBox[{{1, 6}, {1, 7}, {1, 8}, {1, 9}, {2, 6}, {2, 8}, {3, 
             6}, {3, 8}, {4, 7}, {4, 9}, {5, 7}, {5, 9}, {6, 7}, {6, 8}, {6, 
             9}, {7, 8}, {7, 9}, {8, 9}}, 0.01273]}, 
           {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
            DiskBox[1, 0.01273], DiskBox[2, 0.01273], DiskBox[3, 0.01273], 
            DiskBox[4, 0.01273], DiskBox[5, 0.01273], DiskBox[6, 0.01273], 
            DiskBox[7, 0.01273], DiskBox[8, 0.01273], DiskBox[9, 0.01273]}}]],
        MouseAppearanceTag["NetworkGraphics"]],
       AllowKernelInitialization->False]],
     DefaultBaseStyle->{
      "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
     FormatType->TraditionalForm,
     FrameTicks->None]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"SelfComplementary\"\>", ",", 
      RowBox[{"{", 
       RowBox[{"9", ",", "4"}], "}"}]}], "}"}], "\[Rule]", 
    GraphicsBox[
     NamespaceBox["NetworkGraphics",
      DynamicModuleBox[{Typeset`graph = HoldComplete[
        Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9}, {Null, 
          SparseArray[
          Automatic, {9, 9}, 0, {
           1, {{0, 2, 6, 9, 12, 14, 19, 24, 30, 36}, {{5}, {8}, {6}, {7}, {
             8}, {9}, {6}, {8}, {9}, {7}, {8}, {9}, {1}, {9}, {2}, {3}, {7}, {
             8}, {9}, {2}, {4}, {6}, {8}, {9}, {1}, {2}, {3}, {4}, {6}, {7}, {
             2}, {3}, {4}, {5}, {6}, {7}}}, Pattern}]}, {
         VertexCoordinates -> {{
             Rational[-1, 3], Rational[1, 4] 3^Rational[-1, 2]}, {
             Rational[1, 2], 0}, {
             Rational[-1, 12], 3^Rational[-1, 2]}, {
            0, Rational[1, 8] 3^Rational[1, 2]}, {
             Rational[-1, 6], Rational[1, 2] 3^Rational[-1, 2]}, {
            0, Rational[1, 2] 3^Rational[1, 2]}, {
             Rational[1, 6], Rational[1, 8] 3^Rational[1, 2]}, {
             Rational[-1, 2], 0}, {0, Rational[1, 4] 3^Rational[1, 2]}}}]]}, 
       TagBox[
        GraphicsGroupBox[
         GraphicsComplexBox[{{-0.3333333333333333, 0.14433756729740646`}, {
          0.5, 0.}, {-0.08333333333333333, 0.5773502691896258}, {0., 
          0.21650635094610965`}, {-0.16666666666666666`, 
          0.2886751345948129}, {0., 0.8660254037844386}, {
          0.16666666666666666`, 0.21650635094610965`}, {-0.5, 0.}, {0., 
          0.4330127018922193}}, {
           {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
            ArrowBox[{{1, 5}, {1, 8}, {2, 6}, {2, 7}, {2, 8}, {2, 9}, {3, 
             6}, {3, 8}, {3, 9}, {4, 7}, {4, 8}, {4, 9}, {5, 9}, {6, 7}, {6, 
             8}, {6, 9}, {7, 8}, {7, 9}}, 0.01273]}, 
           {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
            DiskBox[1, 0.01273], DiskBox[2, 0.01273], DiskBox[3, 0.01273], 
            DiskBox[4, 0.01273], DiskBox[5, 0.01273], DiskBox[6, 0.01273], 
            DiskBox[7, 0.01273], DiskBox[8, 0.01273], DiskBox[9, 0.01273]}}]],
        MouseAppearanceTag["NetworkGraphics"]],
       AllowKernelInitialization->False]],
     DefaultBaseStyle->{
      "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
     FormatType->TraditionalForm,
     FrameTicks->None]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"SelfComplementary\"\>", ",", 
      RowBox[{"{", 
       RowBox[{"9", ",", "5"}], "}"}]}], "}"}], "\[Rule]", 
    GraphicsBox[
     NamespaceBox["NetworkGraphics",
      DynamicModuleBox[{Typeset`graph = HoldComplete[
        Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9}, {Null, 
          SparseArray[
          Automatic, {9, 9}, 0, {
           1, {{0, 4, 8, 9, 10, 14, 18, 22, 29, 36}, {{5}, {6}, {8}, {9}, {
             6}, {7}, {8}, {9}, {8}, {9}, {1}, {7}, {8}, {9}, {1}, {2}, {8}, {
             9}, {2}, {5}, {8}, {9}, {1}, {2}, {3}, {5}, {6}, {7}, {9}, {1}, {
             2}, {4}, {5}, {6}, {7}, {8}}}, Pattern}]}, {
         VertexCoordinates -> {{0, 0}, {
             Rational[1, 2], 
             Rational[1, 3]}, {2, 0}, {
             Rational[13, 32], 
             Rational[2, 3]}, {
             Rational[1, 2], 1}, {
             Rational[3, 8], 
             Rational[1, 3]}, {
             Rational[5, 8], 
             Rational[1, 3]}, {1, 0}, {
             Rational[1, 2], 
             Rational[2, 3]}}}]]}, 
       TagBox[
        GraphicsGroupBox[
         GraphicsComplexBox[{{0., 0.}, {0.5, 0.3333333333333333}, {2., 0.}, {
          0.40625, 0.6666666666666666}, {0.5, 1.}, {0.375, 
          0.3333333333333333}, {0.625, 0.3333333333333333}, {1., 0.}, {0.5, 
          0.6666666666666666}}, {
           {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
            ArrowBox[{{1, 5}, {1, 6}, {1, 8}, {1, 9}, {2, 6}, {2, 7}, {2, 
             8}, {2, 9}, {3, 8}, {4, 9}, {5, 7}, {5, 8}, {5, 9}, {6, 8}, {6, 
             9}, {7, 8}, {7, 9}, {8, 9}}, 0.02261146496815286]}, 
           {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
            DiskBox[1, 0.02261146496815286], DiskBox[2, 0.02261146496815286], 
            DiskBox[3, 0.02261146496815286], DiskBox[4, 0.02261146496815286], 
            DiskBox[5, 0.02261146496815286], DiskBox[6, 0.02261146496815286], 
            DiskBox[7, 0.02261146496815286], DiskBox[8, 0.02261146496815286], 
            DiskBox[9, 0.02261146496815286]}}]],
        MouseAppearanceTag["NetworkGraphics"]],
       AllowKernelInitialization->False]],
     DefaultBaseStyle->{
      "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
     FormatType->TraditionalForm,
     FrameTicks->None]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"SelfComplementary\"\>", ",", 
      RowBox[{"{", 
       RowBox[{"9", ",", "6"}], "}"}]}], "}"}], "\[Rule]", 
    GraphicsBox[
     NamespaceBox["NetworkGraphics",
      DynamicModuleBox[{Typeset`graph = HoldComplete[
        Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9}, {Null, 
          SparseArray[
          Automatic, {9, 9}, 0, {
           1, {{0, 4, 8, 10, 12, 16, 20, 24, 30, 36}, {{5}, {6}, {8}, {9}, {
             6}, {7}, {8}, {9}, {7}, {8}, {7}, {9}, {1}, {7}, {8}, {9}, {1}, {
             2}, {8}, {9}, {2}, {3}, {4}, {5}, {1}, {2}, {3}, {5}, {6}, {9}, {
             1}, {2}, {4}, {5}, {6}, {8}}}, Pattern}]}, {
         VertexCoordinates -> {{
             Rational[-1, 10], Rational[1, 20] (-2 + 5 3^Rational[1, 2])}, {
            0, Rational[1, 2] 3^Rational[1, 2]}, {
             Rational[1, 5], 
             Rational[1, 4]}, {
             Rational[-1, 2], 0}, {0, 
             Rational[1, 10]}, {
             Rational[-1, 10], Rational[1, 20] (2 + 5 3^Rational[1, 2])}, {
             Rational[1, 2], 0}, {0, Rational[1, 4] 3^Rational[1, 2]}, {
             Rational[-1, 4], Rational[1, 4] 3^Rational[1, 2]}}}]]}, 
       TagBox[
        GraphicsGroupBox[
         GraphicsComplexBox[{{-0.1, 0.3330127018922193}, {0., 
          0.8660254037844386}, {0.2, 0.25}, {-0.5, 0.}, {0., 0.1}, {-0.1, 
          0.5330127018922193}, {0.5, 0.}, {0., 0.4330127018922193}, {-0.25, 
          0.4330127018922193}}, {
           {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
            ArrowBox[{{1, 5}, {1, 6}, {1, 8}, {1, 9}, {2, 6}, {2, 7}, {2, 
             8}, {2, 9}, {3, 7}, {3, 8}, {4, 7}, {4, 9}, {5, 7}, {5, 8}, {5, 
             9}, {6, 8}, {6, 9}, {8, 9}}, 0.01273]}, 
           {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
            DiskBox[1, 0.01273], DiskBox[2, 0.01273], DiskBox[3, 0.01273], 
            DiskBox[4, 0.01273], DiskBox[5, 0.01273], DiskBox[6, 0.01273], 
            DiskBox[7, 0.01273], DiskBox[8, 0.01273], DiskBox[9, 0.01273]}}]],
        MouseAppearanceTag["NetworkGraphics"]],
       AllowKernelInitialization->False]],
     DefaultBaseStyle->{
      "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
     FormatType->TraditionalForm,
     FrameTicks->None]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"SelfComplementary\"\>", ",", 
      RowBox[{"{", 
       RowBox[{"9", ",", "7"}], "}"}]}], "}"}], "\[Rule]", 
    GraphicsBox[
     NamespaceBox["NetworkGraphics",
      DynamicModuleBox[{Typeset`graph = HoldComplete[
        Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9}, {Null, 
          SparseArray[
          Automatic, {9, 9}, 0, {
           1, {{0, 5, 8, 10, 12, 15, 20, 24, 30, 36}, {{5}, {6}, {7}, {8}, {
             9}, {6}, {8}, {9}, {7}, {8}, {7}, {9}, {1}, {8}, {9}, {1}, {2}, {
             7}, {8}, {9}, {1}, {3}, {4}, {6}, {1}, {2}, {3}, {5}, {6}, {9}, {
             1}, {2}, {4}, {5}, {6}, {8}}}, Pattern}]}, {
         VertexCoordinates -> {{
             Rational[9, 16], Rational[7, 16] 3^Rational[1, 2]}, {
             Rational[9, 16], 
             Rational[11, 40]}, {0, 0}, {
             Rational[7, 16], 
             Rational[2, 5]}, {
             Rational[11, 16], 
             Rational[2, 5]}, {
             Rational[1, 8], 
             Rational[1, 8]}, {
             Rational[1, 2], Rational[1, 2] 3^Rational[1, 2]}, {1, 0}, {
             Rational[9, 16], 
             Rational[2, 5]}}}]]}, 
       TagBox[
        GraphicsGroupBox[
         GraphicsComplexBox[{{0.5625, 0.7577722283113838}, {0.5625, 0.275}, {
          0., 0.}, {0.4375, 0.4}, {0.6875, 0.4}, {0.125, 0.125}, {0.5, 
          0.8660254037844386}, {1., 0.}, {0.5625, 0.4}}, {
           {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
            ArrowBox[{{1, 5}, {1, 6}, {1, 7}, {1, 8}, {1, 9}, {2, 6}, {2, 
             8}, {2, 9}, {3, 7}, {3, 8}, {4, 7}, {4, 9}, {5, 8}, {5, 9}, {6, 
             7}, {6, 8}, {6, 9}, {8, 9}}, 0.01273]}, 
           {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
            DiskBox[1, 0.01273], DiskBox[2, 0.01273], DiskBox[3, 0.01273], 
            DiskBox[4, 0.01273], DiskBox[5, 0.01273], DiskBox[6, 0.01273], 
            DiskBox[7, 0.01273], DiskBox[8, 0.01273], DiskBox[9, 0.01273]}}]],
        MouseAppearanceTag["NetworkGraphics"]],
       AllowKernelInitialization->False]],
     DefaultBaseStyle->{
      "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
     FormatType->TraditionalForm,
     FrameTicks->None]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"SelfComplementary\"\>", ",", 
      RowBox[{"{", 
       RowBox[{"9", ",", "8"}], "}"}]}], "}"}], "\[Rule]", 
    GraphicsBox[
     NamespaceBox["NetworkGraphics",
      DynamicModuleBox[{Typeset`graph = HoldComplete[
        Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9}, {Null, 
          SparseArray[
          Automatic, {9, 9}, 0, {
           1, {{0, 3, 7, 9, 11, 14, 19, 24, 30, 36}, {{5}, {6}, {8}, {6}, {
             7}, {8}, {9}, {6}, {9}, {7}, {8}, {1}, {7}, {9}, {1}, {2}, {3}, {
             8}, {9}, {2}, {4}, {5}, {8}, {9}, {1}, {2}, {4}, {6}, {7}, {9}, {
             2}, {3}, {5}, {6}, {7}, {8}}}, Pattern}]}, {
         VertexCoordinates -> {{0, Rational[1, 2] 3^Rational[1, 2]}, {0, 
             Rational[1, 6]}, {
             Rational[-3, 20], 
             Rational[1, 3]}, {
             Rational[3, 20], 
             Rational[1, 3]}, {0, 
             Rational[1, 2]}, {
             Rational[-1, 2], 0}, {
             Rational[1, 20], 
             Rational[1, 3]}, {
             Rational[1, 2], 0}, {
             Rational[-1, 20], 
             Rational[1, 3]}}}]]}, 
       TagBox[
        GraphicsGroupBox[
         GraphicsComplexBox[{{0., 0.8660254037844386}, {0., 
          0.16666666666666666`}, {-0.15, 0.3333333333333333}, {0.15, 
          0.3333333333333333}, {0., 0.5}, {-0.5, 0.}, {0.05, 
          0.3333333333333333}, {0.5, 0.}, {-0.05, 0.3333333333333333}}, {
           {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
            ArrowBox[{{1, 5}, {1, 6}, {1, 8}, {2, 6}, {2, 7}, {2, 8}, {2, 
             9}, {3, 6}, {3, 9}, {4, 7}, {4, 8}, {5, 7}, {5, 9}, {6, 8}, {6, 
             9}, {7, 8}, {7, 9}, {8, 9}}, 0.01273]}, 
           {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
            DiskBox[1, 0.01273], DiskBox[2, 0.01273], DiskBox[3, 0.01273], 
            DiskBox[4, 0.01273], DiskBox[5, 0.01273], DiskBox[6, 0.01273], 
            DiskBox[7, 0.01273], DiskBox[8, 0.01273], DiskBox[9, 0.01273]}}]],
        MouseAppearanceTag["NetworkGraphics"]],
       AllowKernelInitialization->False]],
     DefaultBaseStyle->{
      "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
     FormatType->TraditionalForm,
     FrameTicks->None]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"SelfComplementary\"\>", ",", 
      RowBox[{"{", 
       RowBox[{"9", ",", "9"}], "}"}]}], "}"}], "\[Rule]", 
    GraphicsBox[
     NamespaceBox["NetworkGraphics",
      DynamicModuleBox[{Typeset`graph = HoldComplete[
        Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9}, {Null, 
          SparseArray[
          Automatic, {9, 9}, 0, {
           1, {{0, 3, 7, 9, 11, 14, 19, 24, 30, 36}, {{5}, {6}, {8}, {6}, {
             7}, {8}, {9}, {6}, {8}, {7}, {9}, {1}, {7}, {9}, {1}, {2}, {3}, {
             8}, {9}, {2}, {4}, {5}, {8}, {9}, {1}, {2}, {3}, {6}, {7}, {9}, {
             2}, {4}, {5}, {6}, {7}, {8}}}, Pattern}]}, {
         VertexCoordinates -> {{1, 0}, {
             Rational[1, 2], 
             Rational[1, 4]}, {0, 1}, {
             Rational[11, 16], 
             Rational[1, 4]}, {
             Rational[7, 8], 
             Rational[3, 8]}, {0, 0}, {
             Rational[3, 4], 
             Rational[3, 8]}, {1, 1}, {
             Rational[7, 8], 
             Rational[1, 8]}}}]]}, 
       TagBox[
        GraphicsGroupBox[
         GraphicsComplexBox[{{1., 0.}, {0.5, 0.25}, {0., 1.}, {0.6875, 
          0.25}, {0.875, 0.375}, {0., 0.}, {0.75, 0.375}, {1., 1.}, {0.875, 
          0.125}}, {
           {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
            ArrowBox[{{1, 5}, {1, 6}, {1, 8}, {2, 6}, {2, 7}, {2, 8}, {2, 
             9}, {3, 6}, {3, 8}, {4, 7}, {4, 9}, {5, 7}, {5, 9}, {6, 8}, {6, 
             9}, {7, 8}, {7, 9}, {8, 9}}, 0.01273]}, 
           {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
            DiskBox[1, 0.01273], DiskBox[2, 0.01273], DiskBox[3, 0.01273], 
            DiskBox[4, 0.01273], DiskBox[5, 0.01273], DiskBox[6, 0.01273], 
            DiskBox[7, 0.01273], DiskBox[8, 0.01273], DiskBox[9, 0.01273]}}]],
        MouseAppearanceTag["NetworkGraphics"]],
       AllowKernelInitialization->False]],
     DefaultBaseStyle->{
      "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
     FormatType->TraditionalForm,
     FrameTicks->None]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"SelfComplementary\"\>", ",", 
      RowBox[{"{", 
       RowBox[{"9", ",", "10"}], "}"}]}], "}"}], "\[Rule]", 
    GraphicsBox[
     NamespaceBox["NetworkGraphics",
      DynamicModuleBox[{Typeset`graph = HoldComplete[
        Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9}, {Null, 
          SparseArray[
          Automatic, {9, 9}, 0, {
           1, {{0, 3, 6, 9, 12, 17, 22, 27, 31, 36}, {{5}, {7}, {8}, {5}, {
             8}, {9}, {6}, {7}, {8}, {6}, {8}, {9}, {1}, {2}, {6}, {7}, {9}, {
             3}, {4}, {5}, {7}, {9}, {1}, {3}, {5}, {6}, {9}, {1}, {2}, {3}, {
             4}, {2}, {4}, {5}, {6}, {7}}}, Pattern}]}, {
         VertexCoordinates -> {{-1, 0}, {1, 0}, {
             Rational[-1, 4], 
             Rational[1, 2]}, {
             Rational[1, 4], 
             Rational[1, 2]}, {0, -1}, {0, 
             Rational[1, 3]}, {
             Rational[-1, 2], 0}, {0, 1}, {
             Rational[1, 2], 0}}}]]}, 
       TagBox[
        GraphicsGroupBox[
         GraphicsComplexBox[{{-1., 0.}, {1., 0.}, {-0.25, 0.5}, {0.25, 0.5}, {
          0., -1.}, {0., 0.3333333333333333}, {-0.5, 0.}, {0., 1.}, {0.5, 
          0.}}, {
           {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
            ArrowBox[{{1, 5}, {1, 7}, {1, 8}, {2, 5}, {2, 8}, {2, 9}, {3, 
             6}, {3, 7}, {3, 8}, {4, 6}, {4, 8}, {4, 9}, {5, 6}, {5, 7}, {5, 
             9}, {6, 7}, {6, 9}, {7, 9}}, 0.02261146496815286]}, 
           {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
            DiskBox[1, 0.02261146496815286], DiskBox[2, 0.02261146496815286], 
            DiskBox[3, 0.02261146496815286], DiskBox[4, 0.02261146496815286], 
            DiskBox[5, 0.02261146496815286], DiskBox[6, 0.02261146496815286], 
            DiskBox[7, 0.02261146496815286], DiskBox[8, 0.02261146496815286], 
            DiskBox[9, 0.02261146496815286]}}]],
        MouseAppearanceTag["NetworkGraphics"]],
       AllowKernelInitialization->False]],
     DefaultBaseStyle->{
      "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
     FormatType->TraditionalForm,
     FrameTicks->None]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"SelfComplementary\"\>", ",", 
      RowBox[{"{", 
       RowBox[{"9", ",", "11"}], "}"}]}], "}"}], "\[Rule]", 
    GraphicsBox[
     NamespaceBox["NetworkGraphics",
      DynamicModuleBox[{Typeset`graph = HoldComplete[
        Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9}, {Null, 
          SparseArray[
          Automatic, {9, 9}, 0, {
           1, {{0, 3, 6, 9, 12, 17, 22, 27, 31, 36}, {{5}, {7}, {8}, {5}, {
             7}, {8}, {6}, {8}, {9}, {6}, {8}, {9}, {1}, {2}, {6}, {7}, {9}, {
             3}, {4}, {5}, {7}, {9}, {1}, {2}, {5}, {6}, {9}, {1}, {2}, {3}, {
             4}, {3}, {4}, {5}, {6}, {7}}}, Pattern}]}, {
         VertexCoordinates -> {{0, 1}, {
             Rational[1, 2], 1}, {1, 1}, {
             Rational[3, 2], 1}, {0, 0}, {
             Rational[3, 2], 0}, {
             Rational[1, 2], 
             Rational[1, 2]}, {
             Rational[3, 4], Rational[1, 2] (2 + 3^Rational[1, 2])}, {1, 
             Rational[1, 2]}}}]]}, 
       TagBox[
        GraphicsGroupBox[
         GraphicsComplexBox[{{0., 1.}, {0.5, 1.}, {1., 1.}, {1.5, 1.}, {0., 
          0.}, {1.5, 0.}, {0.5, 0.5}, {0.75, 1.8660254037844386`}, {1., 
          0.5}}, {
           {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
            ArrowBox[{{1, 5}, {1, 7}, {1, 8}, {2, 5}, {2, 7}, {2, 8}, {3, 
             6}, {3, 8}, {3, 9}, {4, 6}, {4, 8}, {4, 9}, {5, 6}, {5, 7}, {5, 
             9}, {6, 7}, {6, 9}, {7, 9}}, 0.021515049724012608`]}, 
           {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
            DiskBox[1, 0.021515049724012608], 
            DiskBox[2, 0.021515049724012608], 
            DiskBox[3, 0.021515049724012608], 
            DiskBox[4, 0.021515049724012608], 
            DiskBox[5, 0.021515049724012608], 
            DiskBox[6, 0.021515049724012608], 
            DiskBox[7, 0.021515049724012608], 
            DiskBox[8, 0.021515049724012608], 
            DiskBox[9, 0.021515049724012608]}}]],
        MouseAppearanceTag["NetworkGraphics"]],
       AllowKernelInitialization->False]],
     DefaultBaseStyle->{
      "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
     FormatType->TraditionalForm,
     FrameTicks->None]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"SelfComplementary\"\>", ",", 
      RowBox[{"{", 
       RowBox[{"9", ",", "12"}], "}"}]}], "}"}], "\[Rule]", 
    GraphicsBox[
     NamespaceBox["NetworkGraphics",
      DynamicModuleBox[{Typeset`graph = HoldComplete[
        Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9}, {Null, 
          SparseArray[
          Automatic, {9, 9}, 0, {
           1, {{0, 3, 5, 8, 10, 15, 19, 24, 30, 36}, {{5}, {6}, {9}, {5}, {
             8}, {6}, {7}, {8}, {7}, {9}, {1}, {2}, {7}, {8}, {9}, {1}, {3}, {
             8}, {9}, {3}, {4}, {5}, {8}, {9}, {2}, {3}, {5}, {6}, {7}, {9}, {
             1}, {4}, {5}, {6}, {7}, {8}}}, Pattern}]}, {
         VertexCoordinates -> {{0, 
             Rational[1, 6]}, {
             Rational[1, 8], 
             Rational[1, 2]}, {0, 
             Rational[1, 2]}, {
             Rational[-1, 8], 
             Rational[1, 2]}, {
             Rational[1, 2], 0}, {0, 
             Rational[1, 3]}, {0, Rational[1, 2] 3^Rational[1, 2]}, {
             Rational[1, 8], 
             Rational[1, 3]}, {
             Rational[-1, 2], 0}}}]]}, 
       TagBox[
        GraphicsGroupBox[
         GraphicsComplexBox[{{0., 0.16666666666666666`}, {0.125, 0.5}, {0., 
          0.5}, {-0.125, 0.5}, {0.5, 0.}, {0., 0.3333333333333333}, {0., 
          0.8660254037844386}, {0.125, 0.3333333333333333}, {-0.5, 0.}}, {
           {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
            ArrowBox[{{1, 5}, {1, 6}, {1, 9}, {2, 5}, {2, 8}, {3, 6}, {3, 
             7}, {3, 8}, {4, 7}, {4, 9}, {5, 7}, {5, 8}, {5, 9}, {6, 8}, {6, 
             9}, {7, 8}, {7, 9}, {8, 9}}, 0.01273]}, 
           {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
            DiskBox[1, 0.01273], DiskBox[2, 0.01273], DiskBox[3, 0.01273], 
            DiskBox[4, 0.01273], DiskBox[5, 0.01273], DiskBox[6, 0.01273], 
            DiskBox[7, 0.01273], DiskBox[8, 0.01273], DiskBox[9, 0.01273]}}]],
        MouseAppearanceTag["NetworkGraphics"]],
       AllowKernelInitialization->False]],
     DefaultBaseStyle->{
      "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
     FormatType->TraditionalForm,
     FrameTicks->None]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"SelfComplementary\"\>", ",", 
      RowBox[{"{", 
       RowBox[{"9", ",", "13"}], "}"}]}], "}"}], "\[Rule]", 
    GraphicsBox[
     NamespaceBox["NetworkGraphics",
      DynamicModuleBox[{Typeset`graph = HoldComplete[
        Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9}, {Null, 
          SparseArray[
          Automatic, {9, 9}, 0, {
           1, {{0, 3, 5, 8, 10, 15, 19, 24, 30, 36}, {{5}, {6}, {8}, {5}, {
             8}, {6}, {7}, {9}, {7}, {9}, {1}, {2}, {7}, {8}, {9}, {1}, {3}, {
             8}, {9}, {3}, {4}, {5}, {8}, {9}, {1}, {2}, {5}, {6}, {7}, {9}, {
             3}, {4}, {5}, {6}, {7}, {8}}}, Pattern}]}, {
         VertexCoordinates -> {{(Rational[5, 8] + 
              Rational[1, 8] 5^Rational[1, 2])^Rational[1, 2], 
             Rational[1, 4] (-1 + 5^Rational[1, 2])}, {
            Rational[1, 4] (-1 + (10 - 2 5^Rational[1, 2])^Rational[1, 2]), 
             Rational[1, 16] (-1 - 2 5^Rational[1, 2])}, {
            Rational[-1, 2] (Rational[1, 2] (5 + 5^Rational[1, 2]))^
              Rational[1, 2], Rational[1, 4] (-1 + 5^Rational[1, 2])}, {
            Rational[1, 4] (1 - (10 - 2 5^Rational[1, 2])^Rational[1, 2]), 
             Rational[1, 16] (-1 - 2 5^Rational[1, 2])}, {(Rational[5, 8] + 
              Rational[-1, 8] 5^Rational[1, 2])^Rational[1, 2], 
             Rational[1, 4] (-1 - 5^Rational[1, 2])}, {0, 
            1}, {-(Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
              Rational[1, 2], 
             Rational[1, 4] (-1 - 5^Rational[1, 2])}, {(Rational[5, 8] + 
              Rational[-1, 8] 5^Rational[1, 2])^Rational[1, 2], 
             Rational[
             1, 8]}, {-(Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
              Rational[1, 2], 
             Rational[1, 8]}}}]]}, 
       TagBox[
        GraphicsGroupBox[
         GraphicsComplexBox[{{0.9510565162951535, 0.30901699437494745`}, {
          0.33778525229247314`, -0.3420084971874737}, {-0.9510565162951535, 
          0.30901699437494745`}, {-0.33778525229247314`, \
-0.3420084971874737}, {0.5877852522924731, -0.8090169943749475}, {0., 
          1.}, {-0.5877852522924731, -0.8090169943749475}, {
          0.5877852522924731, 0.125}, {-0.5877852522924731, 0.125}}, {
           {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
            ArrowBox[{{1, 5}, {1, 6}, {1, 8}, {2, 5}, {2, 8}, {3, 6}, {3, 
             7}, {3, 9}, {4, 7}, {4, 9}, {5, 7}, {5, 8}, {5, 9}, {6, 8}, {6, 
             9}, {7, 8}, {7, 9}, {8, 9}}, 0.021812234931106983`]}, 
           {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
            DiskBox[1, 0.021812234931106983], 
            DiskBox[2, 0.021812234931106983], 
            DiskBox[3, 0.021812234931106983], 
            DiskBox[4, 0.021812234931106983], 
            DiskBox[5, 0.021812234931106983], 
            DiskBox[6, 0.021812234931106983], 
            DiskBox[7, 0.021812234931106983], 
            DiskBox[8, 0.021812234931106983], 
            DiskBox[9, 0.021812234931106983]}}]],
        MouseAppearanceTag["NetworkGraphics"]],
       AllowKernelInitialization->False]],
     DefaultBaseStyle->{
      "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
     FormatType->TraditionalForm,
     FrameTicks->None]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"SelfComplementary\"\>", ",", 
      RowBox[{"{", 
       RowBox[{"9", ",", "14"}], "}"}]}], "}"}], "\[Rule]", 
    GraphicsBox[
     NamespaceBox["NetworkGraphics",
      DynamicModuleBox[{Typeset`graph = HoldComplete[
        Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9}, {Null, 
          SparseArray[
          Automatic, {9, 9}, 0, {
           1, {{0, 4, 6, 10, 14, 16, 20, 24, 30, 36}, {{4}, {6}, {8}, {9}, {
             5}, {8}, {6}, {7}, {8}, {9}, {1}, {7}, {8}, {9}, {2}, {9}, {1}, {
             3}, {8}, {9}, {3}, {4}, {8}, {9}, {1}, {2}, {3}, {4}, {6}, {7}, {
             1}, {3}, {4}, {5}, {6}, {7}}}, Pattern}]}, {
         VertexCoordinates -> {{
             Rational[-1, 2], 0}, {
             Rational[-1, 5], 
             Rational[1, 3]}, {
             Rational[1, 15], 
             Rational[1, 3]}, {
             Rational[1, 2], 0}, {
             Rational[-1, 10], 
             Rational[1, 4]}, {
             Rational[-1, 15], 
             Rational[1, 3]}, {
             Rational[1, 5], 
             Rational[1, 3]}, {0, Rational[1, 2] 3^Rational[1, 2]}, {0, 
             Rational[1, 6]}}}]]}, 
       TagBox[
        GraphicsGroupBox[
         GraphicsComplexBox[{{-0.5, 0.}, {-0.2, 0.3333333333333333}, {
          0.06666666666666667, 0.3333333333333333}, {0.5, 0.}, {-0.1, 
          0.25}, {-0.06666666666666667, 0.3333333333333333}, {0.2, 
          0.3333333333333333}, {0., 0.8660254037844386}, {0., 
          0.16666666666666666`}}, {
           {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
            ArrowBox[{{1, 4}, {1, 6}, {1, 8}, {1, 9}, {2, 5}, {2, 8}, {3, 
             6}, {3, 7}, {3, 8}, {3, 9}, {4, 7}, {4, 8}, {4, 9}, {5, 9}, {6, 
             8}, {6, 9}, {7, 8}, {7, 9}}, 0.01273]}, 
           {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
            DiskBox[1, 0.01273], DiskBox[2, 0.01273], DiskBox[3, 0.01273], 
            DiskBox[4, 0.01273], DiskBox[5, 0.01273], DiskBox[6, 0.01273], 
            DiskBox[7, 0.01273], DiskBox[8, 0.01273], DiskBox[9, 0.01273]}}]],
        MouseAppearanceTag["NetworkGraphics"]],
       AllowKernelInitialization->False]],
     DefaultBaseStyle->{
      "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
     FormatType->TraditionalForm,
     FrameTicks->None]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"SelfComplementary\"\>", ",", 
      RowBox[{"{", 
       RowBox[{"9", ",", "15"}], "}"}]}], "}"}], "\[Rule]", 
    GraphicsBox[
     NamespaceBox["NetworkGraphics",
      DynamicModuleBox[{Typeset`graph = HoldComplete[
        Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9}, {Null, 
          SparseArray[
          Automatic, {9, 9}, 0, {
           1, {{0, 4, 7, 11, 15, 18, 22, 26, 31, 36}, {{4}, {6}, {8}, {9}, {
             5}, {7}, {8}, {6}, {7}, {8}, {9}, {1}, {7}, {8}, {9}, {2}, {7}, {
             9}, {1}, {3}, {8}, {9}, {2}, {3}, {4}, {5}, {1}, {2}, {3}, {4}, {
             6}, {1}, {3}, {4}, {5}, {6}}}, Pattern}]}, {
         VertexCoordinates -> {{0, 
             Rational[1, 2]}, {
             Rational[1, 8], 
             Rational[1, 4]}, {
             Rational[-1, 2], 0}, {
             Rational[1, 8], 
             Rational[5, 12]}, {
            Rational[1, 46] (29 - 9 3^Rational[1, 2]), 
             Rational[-3, 46] (-9 + 2 3^Rational[1, 2])}, {
             Rational[-1, 8], 
             Rational[5, 12]}, {
             Rational[1, 2], 0}, {0, 
             Rational[1, 3]}, {0, Rational[1, 2] 3^Rational[1, 2]}}}]]}, 
       TagBox[
        GraphicsGroupBox[
         GraphicsComplexBox[{{0., 0.5}, {0.125, 0.25}, {-0.5, 0.}, {0.125, 
          0.4166666666666667}, {0.2915552767800023, 
          0.3610368511866682}, {-0.125, 0.4166666666666667}, {0.5, 0.}, {0., 
          0.3333333333333333}, {0., 0.8660254037844386}}, {
           {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
            ArrowBox[{{1, 4}, {1, 6}, {1, 8}, {1, 9}, {2, 5}, {2, 7}, {2, 
             8}, {3, 6}, {3, 7}, {3, 8}, {3, 9}, {4, 7}, {4, 8}, {4, 9}, {5, 
             7}, {5, 9}, {6, 8}, {6, 9}}, 0.01273]}, 
           {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
            DiskBox[1, 0.01273], DiskBox[2, 0.01273], DiskBox[3, 0.01273], 
            DiskBox[4, 0.01273], DiskBox[5, 0.01273], DiskBox[6, 0.01273], 
            DiskBox[7, 0.01273], DiskBox[8, 0.01273], DiskBox[9, 0.01273]}}]],
        MouseAppearanceTag["NetworkGraphics"]],
       AllowKernelInitialization->False]],
     DefaultBaseStyle->{
      "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
     FormatType->TraditionalForm,
     FrameTicks->None]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"SelfComplementary\"\>", ",", 
      RowBox[{"{", 
       RowBox[{"9", ",", "16"}], "}"}]}], "}"}], "\[Rule]", 
    GraphicsBox[
     NamespaceBox["NetworkGraphics",
      DynamicModuleBox[{Typeset`graph = HoldComplete[
        Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9}, {Null, 
          SparseArray[
          Automatic, {9, 9}, 0, {
           1, {{0, 4, 8, 10, 14, 16, 20, 24, 30, 36}, {{4}, {6}, {7}, {8}, {
             5}, {7}, {8}, {9}, {6}, {9}, {1}, {7}, {8}, {9}, {2}, {8}, {1}, {
             3}, {8}, {9}, {1}, {2}, {4}, {9}, {1}, {2}, {4}, {5}, {6}, {9}, {
             2}, {3}, {4}, {6}, {7}, {8}}}, Pattern}]}, {
         VertexCoordinates -> {{0, 0}, {1, 1}, {
             Rational[1, 2], 
             Rational[7, 16]}, {
             Rational[1, 2], 
             Rational[1, 4]}, {
             Rational[1, 2], 
             Rational[3, 4]}, {
             Rational[7, 16], 
             Rational[1, 2]}, {1, 0}, {0, 1}, {
             Rational[9, 16], 
             Rational[1, 2]}}}]]}, 
       TagBox[
        GraphicsGroupBox[
         GraphicsComplexBox[{{0., 0.}, {1., 1.}, {0.5, 0.4375}, {0.5, 0.25}, {
          0.5, 0.75}, {0.4375, 0.5}, {1., 0.}, {0., 1.}, {0.5625, 0.5}}, {
           {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
            ArrowBox[{{1, 4}, {1, 6}, {1, 7}, {1, 8}, {2, 5}, {2, 7}, {2, 
             8}, {2, 9}, {3, 6}, {3, 9}, {4, 7}, {4, 8}, {4, 9}, {5, 8}, {6, 
             8}, {6, 9}, {7, 9}, {8, 9}}, 0.01273]}, 
           {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
            DiskBox[1, 0.01273], DiskBox[2, 0.01273], DiskBox[3, 0.01273], 
            DiskBox[4, 0.01273], DiskBox[5, 0.01273], DiskBox[6, 0.01273], 
            DiskBox[7, 0.01273], DiskBox[8, 0.01273], DiskBox[9, 0.01273]}}]],
        MouseAppearanceTag["NetworkGraphics"]],
       AllowKernelInitialization->False]],
     DefaultBaseStyle->{
      "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
     FormatType->TraditionalForm,
     FrameTicks->None]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"SelfComplementary\"\>", ",", 
      RowBox[{"{", 
       RowBox[{"9", ",", "17"}], "}"}]}], "}"}], "\[Rule]", 
    GraphicsBox[
     NamespaceBox["NetworkGraphics",
      DynamicModuleBox[{Typeset`graph = HoldComplete[
        Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9}, {Null, 
          SparseArray[
          Automatic, {9, 9}, 0, {
           1, {{0, 4, 8, 10, 14, 16, 20, 24, 30, 36}, {{4}, {6}, {7}, {8}, {
             5}, {7}, {8}, {9}, {6}, {8}, {1}, {7}, {8}, {9}, {2}, {9}, {1}, {
             3}, {8}, {9}, {1}, {2}, {4}, {9}, {1}, {2}, {3}, {4}, {6}, {9}, {
             2}, {4}, {5}, {6}, {7}, {8}}}, Pattern}]}, {
         VertexCoordinates -> {{0, 0}, {1, 1}, {
             Rational[5, 12], 
             Rational[31, 60]}, {
             Rational[1, 2], 
             Rational[1, 5]}, {
             Rational[1, 2], 
             Rational[4, 5]}, {
             Rational[5, 12], 
             Rational[7, 16]}, {1, 0}, {0, 1}, {
             Rational[1, 2], 
             Rational[1, 2]}}}]]}, 
       TagBox[
        GraphicsGroupBox[
         GraphicsComplexBox[{{0., 0.}, {1., 1.}, {0.4166666666666667, 
          0.5166666666666667}, {0.5, 0.2}, {0.5, 0.8}, {0.4166666666666667, 
          0.4375}, {1., 0.}, {0., 1.}, {0.5, 0.5}}, {
           {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
            ArrowBox[{{1, 4}, {1, 6}, {1, 7}, {1, 8}, {2, 5}, {2, 7}, {2, 
             8}, {2, 9}, {3, 6}, {3, 8}, {4, 7}, {4, 8}, {4, 9}, {5, 9}, {6, 
             8}, {6, 9}, {7, 9}, {8, 9}}, 0.01273]}, 
           {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
            DiskBox[1, 0.01273], DiskBox[2, 0.01273], DiskBox[3, 0.01273], 
            DiskBox[4, 0.01273], DiskBox[5, 0.01273], DiskBox[6, 0.01273], 
            DiskBox[7, 0.01273], DiskBox[8, 0.01273], DiskBox[9, 0.01273]}}]],
        MouseAppearanceTag["NetworkGraphics"]],
       AllowKernelInitialization->False]],
     DefaultBaseStyle->{
      "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
     FormatType->TraditionalForm,
     FrameTicks->None]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"SelfComplementary\"\>", ",", 
      RowBox[{"{", 
       RowBox[{"9", ",", "18"}], "}"}]}], "}"}], "\[Rule]", 
    GraphicsBox[
     NamespaceBox["NetworkGraphics",
      DynamicModuleBox[{Typeset`graph = HoldComplete[
        Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9}, {Null, 
          SparseArray[
          Automatic, {9, 9}, 0, {
           1, {{0, 3, 6, 10, 13, 16, 21, 26, 31, 36}, {{4}, {6}, {7}, {5}, {
             8}, {9}, {6}, {7}, {8}, {9}, {1}, {6}, {7}, {2}, {8}, {9}, {1}, {
             3}, {4}, {8}, {9}, {1}, {3}, {4}, {8}, {9}, {2}, {3}, {5}, {6}, {
             7}, {2}, {3}, {5}, {6}, {7}}}, Pattern}]}, {
         VertexCoordinates -> {{
             Rational[3, 16], 
             Rational[2, 5]}, {
             Rational[-15, 64], 
             Rational[49, 160]}, {0, Rational[1, 2] 3^Rational[1, 2]}, {
             Rational[15, 64], 
             Rational[49, 160]}, {
             Rational[-1, 8], 
             Rational[49, 160]}, {
             Rational[1, 2], 0}, {
             Rational[1, 8], 
             Rational[49, 160]}, {
             Rational[-1, 2], 0}, {
             Rational[-3, 16], 
             Rational[2, 5]}}}]]}, 
       TagBox[
        GraphicsGroupBox[
         GraphicsComplexBox[{{0.1875, 0.4}, {-0.234375, 0.30625}, {0., 
          0.8660254037844386}, {0.234375, 0.30625}, {-0.125, 0.30625}, {0.5, 
          0.}, {0.125, 0.30625}, {-0.5, 0.}, {-0.1875, 0.4}}, {
           {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
            ArrowBox[{{1, 4}, {1, 6}, {1, 7}, {2, 5}, {2, 8}, {2, 9}, {3, 
             6}, {3, 7}, {3, 8}, {3, 9}, {4, 6}, {4, 7}, {5, 8}, {5, 9}, {6, 
             8}, {6, 9}, {7, 8}, {7, 9}}, 0.01273]}, 
           {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
            DiskBox[1, 0.01273], DiskBox[2, 0.01273], DiskBox[3, 0.01273], 
            DiskBox[4, 0.01273], DiskBox[5, 0.01273], DiskBox[6, 0.01273], 
            DiskBox[7, 0.01273], DiskBox[8, 0.01273], DiskBox[9, 0.01273]}}]],
        MouseAppearanceTag["NetworkGraphics"]],
       AllowKernelInitialization->False]],
     DefaultBaseStyle->{
      "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
     FormatType->TraditionalForm,
     FrameTicks->None]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"SelfComplementary\"\>", ",", 
      RowBox[{"{", 
       RowBox[{"9", ",", "19"}], "}"}]}], "}"}], "\[Rule]", 
    GraphicsBox[
     NamespaceBox["NetworkGraphics",
      DynamicModuleBox[{Typeset`graph = HoldComplete[
        Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9}, {Null, 
          SparseArray[
          Automatic, {9, 9}, 0, {
           1, {{0, 3, 6, 10, 13, 16, 21, 26, 31, 36}, {{4}, {6}, {7}, {5}, {
             7}, {9}, {6}, {7}, {8}, {9}, {1}, {6}, {8}, {2}, {8}, {9}, {1}, {
             3}, {4}, {8}, {9}, {1}, {2}, {3}, {8}, {9}, {3}, {4}, {5}, {6}, {
             7}, {2}, {3}, {5}, {6}, {7}}}, Pattern}]}, {
         VertexCoordinates -> {{
             Rational[1, 6], 
             Rational[1, 4]}, {1, 0}, {
             Rational[3, 4], 
             Rational[3, 4]}, {
             Rational[1, 6], 
             Rational[1, 2]}, {1, 1}, {
             Rational[1, 3], 
             Rational[1, 2]}, {0, 0}, {0, 1}, {
             Rational[3, 4], 
             Rational[1, 2]}}}]]}, 
       TagBox[
        GraphicsGroupBox[
         GraphicsComplexBox[{{0.16666666666666666`, 0.25}, {1., 0.}, {0.75, 
          0.75}, {0.16666666666666666`, 0.5}, {1., 1.}, {0.3333333333333333, 
          0.5}, {0., 0.}, {0., 1.}, {0.75, 0.5}}, {
           {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
            ArrowBox[{{1, 4}, {1, 6}, {1, 7}, {2, 5}, {2, 7}, {2, 9}, {3, 
             6}, {3, 7}, {3, 8}, {3, 9}, {4, 6}, {4, 8}, {5, 8}, {5, 9}, {6, 
             8}, {6, 9}, {7, 8}, {7, 9}}, 0.01273]}, 
           {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
            DiskBox[1, 0.01273], DiskBox[2, 0.01273], DiskBox[3, 0.01273], 
            DiskBox[4, 0.01273], DiskBox[5, 0.01273], DiskBox[6, 0.01273], 
            DiskBox[7, 0.01273], DiskBox[8, 0.01273], DiskBox[9, 0.01273]}}]],
        MouseAppearanceTag["NetworkGraphics"]],
       AllowKernelInitialization->False]],
     DefaultBaseStyle->{
      "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
     FormatType->TraditionalForm,
     FrameTicks->None]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"SelfComplementary\"\>", ",", 
      RowBox[{"{", 
       RowBox[{"9", ",", "20"}], "}"}]}], "}"}], "\[Rule]", 
    GraphicsBox[
     NamespaceBox["NetworkGraphics",
      DynamicModuleBox[{Typeset`graph = HoldComplete[
        Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9}, {Null, 
          SparseArray[
          Automatic, {9, 9}, 0, {
           1, {{0, 3, 8, 11, 14, 17, 21, 26, 31, 36}, {{4}, {6}, {7}, {5}, {
             6}, {7}, {8}, {9}, {7}, {8}, {9}, {1}, {6}, {8}, {2}, {7}, {8}, {
             1}, {2}, {4}, {9}, {1}, {2}, {3}, {5}, {9}, {2}, {3}, {4}, {5}, {
             9}, {2}, {3}, {6}, {7}, {8}}}, Pattern}]}, {
         VertexCoordinates -> {{
             Rational[5, 6], 
             Rational[1, 6]}, {
             Rational[1, 6], 
             Rational[1, 6]}, {1, 1}, {
             Rational[2, 5], 
             Rational[1, 2]}, {0, 0}, {
             Rational[3, 5], 
             Rational[1, 2]}, {1, 0}, {0, 1}, {
             Rational[1, 2], 
             Rational[7, 8]}}}]]}, 
       TagBox[
        GraphicsGroupBox[
         GraphicsComplexBox[{{0.8333333333333334, 0.16666666666666666`}, {
          0.16666666666666666`, 0.16666666666666666`}, {1., 1.}, {0.4, 0.5}, {
          0., 0.}, {0.6, 0.5}, {1., 0.}, {0., 1.}, {0.5, 0.875}}, {
           {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
            ArrowBox[{{1, 4}, {1, 6}, {1, 7}, {2, 5}, {2, 6}, {2, 7}, {2, 
             8}, {2, 9}, {3, 7}, {3, 8}, {3, 9}, {4, 6}, {4, 8}, {5, 7}, {5, 
             8}, {6, 9}, {7, 9}, {8, 9}}, 0.01273]}, 
           {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
            DiskBox[1, 0.01273], DiskBox[2, 0.01273], DiskBox[3, 0.01273], 
            DiskBox[4, 0.01273], DiskBox[5, 0.01273], DiskBox[6, 0.01273], 
            DiskBox[7, 0.01273], DiskBox[8, 0.01273], DiskBox[9, 0.01273]}}]],
        MouseAppearanceTag["NetworkGraphics"]],
       AllowKernelInitialization->False]],
     DefaultBaseStyle->{
      "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
     FormatType->TraditionalForm,
     FrameTicks->None]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"SelfComplementary\"\>", ",", 
      RowBox[{"{", 
       RowBox[{"9", ",", "21"}], "}"}]}], "}"}], "\[Rule]", 
    GraphicsBox[
     NamespaceBox["NetworkGraphics",
      DynamicModuleBox[{Typeset`graph = HoldComplete[
        Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9}, {Null, 
          SparseArray[
          Automatic, {9, 9}, 0, {
           1, {{0, 3, 6, 10, 13, 16, 21, 26, 31, 36}, {{4}, {6}, {9}, {5}, {
             6}, {8}, {6}, {7}, {8}, {9}, {1}, {7}, {8}, {2}, {7}, {9}, {1}, {
             2}, {3}, {8}, {9}, {3}, {4}, {5}, {8}, {9}, {2}, {3}, {4}, {6}, {
             7}, {1}, {3}, {5}, {6}, {7}}}, Pattern}]}, {
         VertexCoordinates -> {{
             Rational[1, 2], 
             Rational[1, 2]}, {
             Rational[9, 20], 
             Rational[2, 5]}, {1, 0}, {
             Rational[1, 2], 
             Rational[1, 3]}, {
             Rational[11, 20], 
             Rational[2, 5]}, {0, 0}, {
             Rational[13, 20], 
             Rational[1, 4]}, {
             Rational[7, 20], 
             Rational[1, 4]}, {
             Rational[1, 2], Rational[1, 2] 3^Rational[1, 2]}}}]]}, 
       TagBox[
        GraphicsGroupBox[
         GraphicsComplexBox[{{0.5, 0.5}, {0.45, 0.4}, {1., 0.}, {0.5, 
          0.3333333333333333}, {0.55, 0.4}, {0., 0.}, {0.65, 0.25}, {0.35, 
          0.25}, {0.5, 0.8660254037844386}}, {
           {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
            ArrowBox[{{1, 4}, {1, 6}, {1, 9}, {2, 5}, {2, 6}, {2, 8}, {3, 
             6}, {3, 7}, {3, 8}, {3, 9}, {4, 7}, {4, 8}, {5, 7}, {5, 9}, {6, 
             8}, {6, 9}, {7, 8}, {7, 9}}, 0.01273]}, 
           {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
            DiskBox[1, 0.01273], DiskBox[2, 0.01273], DiskBox[3, 0.01273], 
            DiskBox[4, 0.01273], DiskBox[5, 0.01273], DiskBox[6, 0.01273], 
            DiskBox[7, 0.01273], DiskBox[8, 0.01273], DiskBox[9, 0.01273]}}]],
        MouseAppearanceTag["NetworkGraphics"]],
       AllowKernelInitialization->False]],
     DefaultBaseStyle->{
      "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
     FormatType->TraditionalForm,
     FrameTicks->None]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"SelfComplementary\"\>", ",", 
      RowBox[{"{", 
       RowBox[{"9", ",", "22"}], "}"}]}], "}"}], "\[Rule]", 
    GraphicsBox[
     NamespaceBox["NetworkGraphics",
      DynamicModuleBox[{Typeset`graph = HoldComplete[
        Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9}, {Null, 
          SparseArray[
          Automatic, {9, 9}, 0, {
           1, {{0, 3, 6, 10, 13, 16, 21, 26, 31, 36}, {{4}, {6}, {8}, {5}, {
             6}, {8}, {6}, {7}, {8}, {9}, {1}, {7}, {9}, {2}, {7}, {9}, {1}, {
             2}, {3}, {8}, {9}, {3}, {4}, {5}, {8}, {9}, {1}, {2}, {3}, {6}, {
             7}, {3}, {4}, {5}, {6}, {7}}}, Pattern}]}, {
         VertexCoordinates -> {{
             Rational[1, 3], 
             Rational[1, 3]}, {
             Rational[1, 2], 
             Rational[1, 3]}, {1, 0}, {
             Rational[13, 30], 
             Rational[1, 2]}, {
             Rational[17, 30], 
             Rational[1, 2]}, {
             Rational[1, 2], 
             Rational[1, 6]}, {
             Rational[1, 2], Rational[1, 2] 3^Rational[1, 2]}, {0, 0}, {
             Rational[2, 3], 
             Rational[1, 3]}}}]]}, 
       TagBox[
        GraphicsGroupBox[
         GraphicsComplexBox[{{0.3333333333333333, 0.3333333333333333}, {0.5, 
          0.3333333333333333}, {1., 0.}, {0.43333333333333335`, 0.5}, {
          0.5666666666666667, 0.5}, {0.5, 0.16666666666666666`}, {0.5, 
          0.8660254037844386}, {0., 0.}, {0.6666666666666666, 
          0.3333333333333333}}, {
           {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
            ArrowBox[{{1, 4}, {1, 6}, {1, 8}, {2, 5}, {2, 6}, {2, 8}, {3, 
             6}, {3, 7}, {3, 8}, {3, 9}, {4, 7}, {4, 9}, {5, 7}, {5, 9}, {6, 
             8}, {6, 9}, {7, 8}, {7, 9}}, 0.01273]}, 
           {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
            DiskBox[1, 0.01273], DiskBox[2, 0.01273], DiskBox[3, 0.01273], 
            DiskBox[4, 0.01273], DiskBox[5, 0.01273], DiskBox[6, 0.01273], 
            DiskBox[7, 0.01273], DiskBox[8, 0.01273], DiskBox[9, 0.01273]}}]],
        MouseAppearanceTag["NetworkGraphics"]],
       AllowKernelInitialization->False]],
     DefaultBaseStyle->{
      "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
     FormatType->TraditionalForm,
     FrameTicks->None]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"SelfComplementary\"\>", ",", 
      RowBox[{"{", 
       RowBox[{"9", ",", "23"}], "}"}]}], "}"}], "\[Rule]", 
    GraphicsBox[
     NamespaceBox["NetworkGraphics",
      DynamicModuleBox[{Typeset`graph = HoldComplete[
        Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9}, {Null, 
          SparseArray[
          Automatic, {9, 9}, 0, {
           1, {{0, 4, 9, 13, 16, 19, 23, 27, 31, 36}, {{4}, {7}, {8}, {9}, {
             5}, {6}, {7}, {8}, {9}, {5}, {6}, {7}, {9}, {1}, {8}, {9}, {2}, {
             3}, {7}, {2}, {3}, {8}, {9}, {1}, {2}, {3}, {5}, {1}, {2}, {4}, {
             6}, {1}, {2}, {3}, {4}, {6}}}, Pattern}]}, {
         VertexCoordinates -> {{0, 0}, {1, 1}, {
             Rational[3, 5], 
             Rational[1, 2]}, {
             Rational[1, 5], 
             Rational[1, 2]}, {
             Rational[4, 5], 
             Rational[1, 2]}, {
             Rational[1, 2], 
             Rational[3, 4]}, {1, 0}, {0, 1}, {
             Rational[2, 5], 
             Rational[1, 2]}}}]]}, 
       TagBox[
        GraphicsGroupBox[
         GraphicsComplexBox[{{0., 0.}, {1., 1.}, {0.6, 0.5}, {0.2, 0.5}, {0.8,
           0.5}, {0.5, 0.75}, {1., 0.}, {0., 1.}, {0.4, 0.5}}, {
           {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
            ArrowBox[{{1, 4}, {1, 7}, {1, 8}, {1, 9}, {2, 5}, {2, 6}, {2, 
             7}, {2, 8}, {2, 9}, {3, 5}, {3, 6}, {3, 7}, {3, 9}, {4, 8}, {4, 
             9}, {5, 7}, {6, 8}, {6, 9}}, 0.01273]}, 
           {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
            DiskBox[1, 0.01273], DiskBox[2, 0.01273], DiskBox[3, 0.01273], 
            DiskBox[4, 0.01273], DiskBox[5, 0.01273], DiskBox[6, 0.01273], 
            DiskBox[7, 0.01273], DiskBox[8, 0.01273], DiskBox[9, 0.01273]}}]],
        MouseAppearanceTag["NetworkGraphics"]],
       AllowKernelInitialization->False]],
     DefaultBaseStyle->{
      "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
     FormatType->TraditionalForm,
     FrameTicks->None]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"SelfComplementary\"\>", ",", 
      RowBox[{"{", 
       RowBox[{"9", ",", "26"}], "}"}]}], "}"}], "\[Rule]", 
    GraphicsBox[
     NamespaceBox["NetworkGraphics",
      DynamicModuleBox[{Typeset`graph = HoldComplete[
        Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9}, {Null, 
          SparseArray[
          Automatic, {9, 9}, 0, {
           1, {{0, 4, 7, 11, 15, 19, 22, 26, 31, 36}, {{4}, {5}, {7}, {8}, {
             5}, {6}, {9}, {6}, {7}, {8}, {9}, {1}, {7}, {8}, {9}, {1}, {2}, {
             8}, {9}, {2}, {3}, {8}, {1}, {3}, {4}, {9}, {1}, {3}, {4}, {5}, {
             6}, {2}, {3}, {4}, {5}, {7}}}, Pattern}]}, {
         VertexCoordinates -> {{
             Rational[3, 4], 
             Rational[2, 3]}, {0, 0}, {
             Rational[1, 4], 
             Rational[2, 3]}, {
             Rational[2, 3], 
             Rational[1, 3]}, {1, 0}, {0, 1}, {
             Rational[1, 2], 
             Rational[2, 3]}, {1, 1}, {
             Rational[1, 3], 
             Rational[1, 3]}}}]]}, 
       TagBox[
        GraphicsGroupBox[
         GraphicsComplexBox[{{0.75, 0.6666666666666666}, {0., 0.}, {0.25, 
          0.6666666666666666}, {0.6666666666666666, 0.3333333333333333}, {1., 
          0.}, {0., 1.}, {0.5, 0.6666666666666666}, {1., 1.}, {
          0.3333333333333333, 0.3333333333333333}}, {
           {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
            ArrowBox[{{1, 4}, {1, 5}, {1, 7}, {1, 8}, {2, 5}, {2, 6}, {2, 
             9}, {3, 6}, {3, 7}, {3, 8}, {3, 9}, {4, 7}, {4, 8}, {4, 9}, {5, 
             8}, {5, 9}, {6, 8}, {7, 9}}, 0.01273]}, 
           {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
            DiskBox[1, 0.01273], DiskBox[2, 0.01273], DiskBox[3, 0.01273], 
            DiskBox[4, 0.01273], DiskBox[5, 0.01273], DiskBox[6, 0.01273], 
            DiskBox[7, 0.01273], DiskBox[8, 0.01273], DiskBox[9, 0.01273]}}]],
        MouseAppearanceTag["NetworkGraphics"]],
       AllowKernelInitialization->False]],
     DefaultBaseStyle->{
      "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
     FormatType->TraditionalForm,
     FrameTicks->None]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"SelfComplementary\"\>", ",", 
      RowBox[{"{", 
       RowBox[{"9", ",", "27"}], "}"}]}], "}"}], "\[Rule]", 
    GraphicsBox[
     NamespaceBox["NetworkGraphics",
      DynamicModuleBox[{Typeset`graph = HoldComplete[
        Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9}, {Null, 
          SparseArray[
          Automatic, {9, 9}, 0, {
           1, {{0, 4, 7, 11, 15, 19, 22, 26, 31, 36}, {{4}, {5}, {7}, {8}, {
             5}, {6}, {8}, {6}, {7}, {8}, {9}, {1}, {7}, {8}, {9}, {1}, {2}, {
             8}, {9}, {2}, {3}, {9}, {1}, {3}, {4}, {9}, {1}, {2}, {3}, {4}, {
             5}, {3}, {4}, {5}, {6}, {7}}}, Pattern}]}, {
         VertexCoordinates -> {{1, 1}, {
             Rational[1, 4], 
             Rational[2, 3]}, {0, 0}, {
             Rational[3, 4], 
             Rational[2, 3]}, {
             Rational[1, 2], 
             Rational[2, 3]}, {
             Rational[1, 3], 
             Rational[1, 3]}, {1, 0}, {0, 1}, {
             Rational[2, 3], 
             Rational[1, 3]}}}]]}, 
       TagBox[
        GraphicsGroupBox[
         GraphicsComplexBox[{{1., 1.}, {0.25, 0.6666666666666666}, {0., 0.}, {
          0.75, 0.6666666666666666}, {0.5, 0.6666666666666666}, {
          0.3333333333333333, 0.3333333333333333}, {1., 0.}, {0., 1.}, {
          0.6666666666666666, 0.3333333333333333}}, {
           {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
            ArrowBox[{{1, 4}, {1, 5}, {1, 7}, {1, 8}, {2, 5}, {2, 6}, {2, 
             8}, {3, 6}, {3, 7}, {3, 8}, {3, 9}, {4, 7}, {4, 8}, {4, 9}, {5, 
             8}, {5, 9}, {6, 9}, {7, 9}}, 0.01273]}, 
           {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
            DiskBox[1, 0.01273], DiskBox[2, 0.01273], DiskBox[3, 0.01273], 
            DiskBox[4, 0.01273], DiskBox[5, 0.01273], DiskBox[6, 0.01273], 
            DiskBox[7, 0.01273], DiskBox[8, 0.01273], DiskBox[9, 0.01273]}}]],
        MouseAppearanceTag["NetworkGraphics"]],
       AllowKernelInitialization->False]],
     DefaultBaseStyle->{
      "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
     FormatType->TraditionalForm,
     FrameTicks->None]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"SelfComplementary\"\>", ",", 
      RowBox[{"{", 
       RowBox[{"9", ",", "28"}], "}"}]}], "}"}], "\[Rule]", 
    GraphicsBox[
     NamespaceBox["NetworkGraphics",
      DynamicModuleBox[{Typeset`graph = HoldComplete[
        Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9}, {Null, 
          SparseArray[
          Automatic, {9, 9}, 0, {
           1, {{0, 5, 8, 11, 14, 17, 22, 26, 31, 36}, {{4}, {5}, {7}, {8}, {
             9}, {5}, {6}, {8}, {6}, {7}, {9}, {1}, {7}, {8}, {1}, {2}, {9}, {
             2}, {3}, {7}, {8}, {9}, {1}, {3}, {4}, {6}, {1}, {2}, {4}, {6}, {
             9}, {1}, {3}, {5}, {6}, {8}}}, Pattern}]}, {
         VertexCoordinates -> {{
             Rational[3, 4], 
             Rational[1, 3]}, {
             Rational[1, 5], 
             Rational[2, 3]}, {
             Rational[4, 5], 
             Rational[2, 3]}, {1, 0}, {
             Rational[2, 5], 
             Rational[2, 3]}, {0, 1}, {1, 1}, {0, 0}, {
             Rational[3, 5], 
             Rational[2, 3]}}}]]}, 
       TagBox[
        GraphicsGroupBox[
         GraphicsComplexBox[{{0.75, 0.3333333333333333}, {0.2, 
          0.6666666666666666}, {0.8, 0.6666666666666666}, {1., 0.}, {0.4, 
          0.6666666666666666}, {0., 1.}, {1., 1.}, {0., 0.}, {0.6, 
          0.6666666666666666}}, {
           {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
            ArrowBox[{{1, 4}, {1, 5}, {1, 7}, {1, 8}, {1, 9}, {2, 5}, {2, 
             6}, {2, 8}, {3, 6}, {3, 7}, {3, 9}, {4, 7}, {4, 8}, {5, 9}, {6, 
             7}, {6, 8}, {6, 9}, {8, 9}}, 0.01273]}, 
           {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
            DiskBox[1, 0.01273], DiskBox[2, 0.01273], DiskBox[3, 0.01273], 
            DiskBox[4, 0.01273], DiskBox[5, 0.01273], DiskBox[6, 0.01273], 
            DiskBox[7, 0.01273], DiskBox[8, 0.01273], DiskBox[9, 0.01273]}}]],
        MouseAppearanceTag["NetworkGraphics"]],
       AllowKernelInitialization->False]],
     DefaultBaseStyle->{
      "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
     FormatType->TraditionalForm,
     FrameTicks->None]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"SelfComplementary\"\>", ",", 
      RowBox[{"{", 
       RowBox[{"9", ",", "29"}], "}"}]}], "}"}], "\[Rule]", 
    GraphicsBox[
     NamespaceBox["NetworkGraphics",
      DynamicModuleBox[{Typeset`graph = HoldComplete[
        Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9}, {Null, 
          SparseArray[
          Automatic, {9, 9}, 0, {
           1, {{0, 5, 8, 11, 14, 17, 22, 26, 31, 36}, {{4}, {5}, {7}, {8}, {
             9}, {5}, {6}, {8}, {6}, {7}, {8}, {1}, {7}, {9}, {1}, {2}, {9}, {
             2}, {3}, {7}, {8}, {9}, {1}, {3}, {4}, {6}, {1}, {2}, {3}, {6}, {
             9}, {1}, {4}, {5}, {6}, {8}}}, Pattern}]}, {
         VertexCoordinates -> {{
             Rational[1, 3], 
             Rational[1, 3]}, {
             Rational[3, 4], 
             Rational[2, 3]}, {
             Rational[1, 4], 
             Rational[2, 3]}, {0, 0}, {
             Rational[2, 3], 
             Rational[1, 3]}, {1, 1}, {0, 1}, {
             Rational[1, 2], 
             Rational[2, 3]}, {1, 0}}}]]}, 
       TagBox[
        GraphicsGroupBox[
         GraphicsComplexBox[{{0.3333333333333333, 0.3333333333333333}, {0.75, 
          0.6666666666666666}, {0.25, 0.6666666666666666}, {0., 0.}, {
          0.6666666666666666, 0.3333333333333333}, {1., 1.}, {0., 1.}, {0.5, 
          0.6666666666666666}, {1., 0.}}, {
           {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
            ArrowBox[{{1, 4}, {1, 5}, {1, 7}, {1, 8}, {1, 9}, {2, 5}, {2, 
             6}, {2, 8}, {3, 6}, {3, 7}, {3, 8}, {4, 7}, {4, 9}, {5, 9}, {6, 
             7}, {6, 8}, {6, 9}, {8, 9}}, 0.01273]}, 
           {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
            DiskBox[1, 0.01273], DiskBox[2, 0.01273], DiskBox[3, 0.01273], 
            DiskBox[4, 0.01273], DiskBox[5, 0.01273], DiskBox[6, 0.01273], 
            DiskBox[7, 0.01273], DiskBox[8, 0.01273], DiskBox[9, 0.01273]}}]],
        MouseAppearanceTag["NetworkGraphics"]],
       AllowKernelInitialization->False]],
     DefaultBaseStyle->{
      "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
     FormatType->TraditionalForm,
     FrameTicks->None]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"SelfComplementary\"\>", ",", 
      RowBox[{"{", 
       RowBox[{"9", ",", "30"}], "}"}]}], "}"}], "\[Rule]", 
    GraphicsBox[
     NamespaceBox["NetworkGraphics",
      DynamicModuleBox[{Typeset`graph = HoldComplete[
        Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9}, {Null, 
          SparseArray[
          Automatic, {9, 9}, 0, {
           1, {{0, 4, 8, 11, 14, 18, 22, 27, 31, 36}, {{4}, {5}, {7}, {9}, {
             5}, {6}, {7}, {8}, {6}, {8}, {9}, {1}, {7}, {8}, {1}, {2}, {8}, {
             9}, {2}, {3}, {7}, {9}, {1}, {2}, {4}, {6}, {9}, {2}, {3}, {4}, {
             5}, {1}, {3}, {5}, {6}, {7}}}, Pattern}]}, {
         VertexCoordinates -> {{
             Rational[1, 2], 
             Rational[1, 2]}, {0, 1}, {1, 0}, {
             Rational[1, 2], 
             Rational[3, 4]}, {
             Rational[3, 4], 
             Rational[3, 4]}, {0, 0}, {
             Rational[1, 4], 
             Rational[3, 4]}, {1, 1}, {
             Rational[1, 2], 
             Rational[1, 4]}}}]]}, 
       TagBox[
        GraphicsGroupBox[
         GraphicsComplexBox[{{0.5, 0.5}, {0., 1.}, {1., 0.}, {0.5, 0.75}, {
          0.75, 0.75}, {0., 0.}, {0.25, 0.75}, {1., 1.}, {0.5, 0.25}}, {
           {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
            ArrowBox[{{1, 4}, {1, 5}, {1, 7}, {1, 9}, {2, 5}, {2, 6}, {2, 
             7}, {2, 8}, {3, 6}, {3, 8}, {3, 9}, {4, 7}, {4, 8}, {5, 8}, {5, 
             9}, {6, 7}, {6, 9}, {7, 9}}, 0.01273]}, 
           {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
            DiskBox[1, 0.01273], DiskBox[2, 0.01273], DiskBox[3, 0.01273], 
            DiskBox[4, 0.01273], DiskBox[5, 0.01273], DiskBox[6, 0.01273], 
            DiskBox[7, 0.01273], DiskBox[8, 0.01273], DiskBox[9, 0.01273]}}]],
        MouseAppearanceTag["NetworkGraphics"]],
       AllowKernelInitialization->False]],
     DefaultBaseStyle->{
      "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
     FormatType->TraditionalForm,
     FrameTicks->None]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"SelfComplementary\"\>", ",", 
      RowBox[{"{", 
       RowBox[{"9", ",", "31"}], "}"}]}], "}"}], "\[Rule]", 
    GraphicsBox[
     NamespaceBox["NetworkGraphics",
      DynamicModuleBox[{Typeset`graph = HoldComplete[
        Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9}, {Null, 
          SparseArray[
          Automatic, {9, 9}, 0, {
           1, {{0, 4, 8, 11, 14, 18, 22, 27, 31, 36}, {{4}, {5}, {7}, {9}, {
             5}, {6}, {7}, {8}, {6}, {7}, {8}, {1}, {8}, {9}, {1}, {2}, {8}, {
             9}, {2}, {3}, {7}, {9}, {1}, {2}, {3}, {6}, {9}, {2}, {3}, {4}, {
             5}, {1}, {4}, {5}, {6}, {7}}}, Pattern}]}, {
         VertexCoordinates -> {{1, 0}, {
             Rational[1, 2], 1}, {0, 1}, {1, 1}, {
             Rational[3, 4], 1}, {
             Rational[1, 4], 1}, {0, 0}, {
             Rational[1, 2], Rational[1, 2] (2 + 3^Rational[1, 2])}, {
             Rational[1, 2], 
             Rational[1, 2]}}}]]}, 
       TagBox[
        GraphicsGroupBox[
         GraphicsComplexBox[{{1., 0.}, {0.5, 1.}, {0., 1.}, {1., 1.}, {0.75, 
          1.}, {0.25, 1.}, {0., 0.}, {0.5, 1.8660254037844386`}, {0.5, 0.5}}, {
           {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
            ArrowBox[{{1, 4}, {1, 5}, {1, 7}, {1, 9}, {2, 5}, {2, 6}, {2, 
             7}, {2, 8}, {3, 6}, {3, 7}, {3, 8}, {4, 8}, {4, 9}, {5, 8}, {5, 
             9}, {6, 7}, {6, 9}, {7, 9}}, 0.021515049724012608`]}, 
           {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
            DiskBox[1, 0.021515049724012608], 
            DiskBox[2, 0.021515049724012608], 
            DiskBox[3, 0.021515049724012608], 
            DiskBox[4, 0.021515049724012608], 
            DiskBox[5, 0.021515049724012608], 
            DiskBox[6, 0.021515049724012608], 
            DiskBox[7, 0.021515049724012608], 
            DiskBox[8, 0.021515049724012608], 
            DiskBox[9, 0.021515049724012608]}}]],
        MouseAppearanceTag["NetworkGraphics"]],
       AllowKernelInitialization->False]],
     DefaultBaseStyle->{
      "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
     FormatType->TraditionalForm,
     FrameTicks->None]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"SelfComplementary\"\>", ",", 
      RowBox[{"{", 
       RowBox[{"9", ",", "32"}], "}"}]}], "}"}], "\[Rule]", 
    GraphicsBox[
     NamespaceBox["NetworkGraphics",
      DynamicModuleBox[{Typeset`graph = HoldComplete[
        Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9}, {Null, 
          SparseArray[
          Automatic, {9, 9}, 0, {
           1, {{0, 4, 9, 13, 16, 20, 23, 27, 31, 36}, {{4}, {5}, {7}, {9}, {
             5}, {6}, {7}, {8}, {9}, {6}, {7}, {8}, {9}, {1}, {7}, {9}, {1}, {
             2}, {8}, {9}, {2}, {3}, {8}, {1}, {2}, {3}, {4}, {2}, {3}, {5}, {
             6}, {1}, {2}, {3}, {4}, {5}}}, Pattern}]}, {
         VertexCoordinates -> {{2, 
             Rational[1, 2]}, {0, 1}, {0, 0}, {1, 
             Rational[1, 2]}, {
             Rational[1, 2], 2}, {0, 
             Rational[1, 2]}, {1, 0}, {-1, 
             Rational[1, 2]}, {1, 1}}}]]}, 
       TagBox[
        GraphicsGroupBox[
         GraphicsComplexBox[{{2., 0.5}, {0., 1.}, {0., 0.}, {1., 0.5}, {0.5, 
          2.}, {0., 0.5}, {1., 0.}, {-1., 0.5}, {1., 1.}}, {
           {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
            ArrowBox[{{1, 4}, {1, 5}, {1, 7}, {1, 9}, {2, 5}, {2, 6}, {2, 
             7}, {2, 8}, {2, 9}, {3, 6}, {3, 7}, {3, 8}, {3, 9}, {4, 7}, {4, 
             9}, {5, 8}, {5, 9}, {6, 8}}, 0.030239520958083826`]}, 
           {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
            DiskBox[1, 0.030239520958083826], 
            DiskBox[2, 0.030239520958083826], 
            DiskBox[3, 0.030239520958083826], 
            DiskBox[4, 0.030239520958083826], 
            DiskBox[5, 0.030239520958083826], 
            DiskBox[6, 0.030239520958083826], 
            DiskBox[7, 0.030239520958083826], 
            DiskBox[8, 0.030239520958083826], 
            DiskBox[9, 0.030239520958083826]}}]],
        MouseAppearanceTag["NetworkGraphics"]],
       AllowKernelInitialization->False]],
     DefaultBaseStyle->{
      "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
     FormatType->TraditionalForm,
     FrameTicks->None]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"SelfComplementary\"\>", ",", 
      RowBox[{"{", 
       RowBox[{"9", ",", "34"}], "}"}]}], "}"}], "\[Rule]", 
    GraphicsBox[
     NamespaceBox["NetworkGraphics",
      DynamicModuleBox[{Typeset`graph = HoldComplete[
        Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9}, {Null, 
          SparseArray[
          Automatic, {9, 9}, 0, {
           1, {{0, 5, 9, 12, 16, 19, 23, 27, 31, 36}, {{4}, {5}, {6}, {8}, {
             9}, {5}, {6}, {7}, {9}, {6}, {7}, {9}, {1}, {7}, {8}, {9}, {1}, {
             2}, {8}, {1}, {2}, {3}, {8}, {2}, {3}, {4}, {9}, {1}, {4}, {5}, {
             6}, {1}, {2}, {3}, {4}, {7}}}, Pattern}]}, {
         VertexCoordinates -> {{
             Rational[2, 3], 
             Rational[3, 4]}, {0, 0}, {
             Rational[1, 3], 
             Rational[1, 2]}, {
             Rational[1, 2], Rational[3, 8] (2 + 3^Rational[1, 2])}, {1, 0}, {
             Rational[2, 3], 
             Rational[1, 2]}, {0, 
             Rational[3, 4]}, {1, 
             Rational[3, 4]}, {
             Rational[1, 3], 
             Rational[3, 4]}}}]]}, 
       TagBox[
        GraphicsGroupBox[
         GraphicsComplexBox[{{0.6666666666666666, 0.75}, {0., 0.}, {
          0.3333333333333333, 0.5}, {0.5, 1.399519052838329}, {1., 0.}, {
          0.6666666666666666, 0.5}, {0., 0.75}, {1., 0.75}, {
          0.3333333333333333, 0.75}}, {
           {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
            ArrowBox[{{1, 4}, {1, 5}, {1, 6}, {1, 8}, {1, 9}, {2, 5}, {2, 
             6}, {2, 7}, {2, 9}, {3, 6}, {3, 7}, {3, 9}, {4, 7}, {4, 8}, {4, 
             9}, {5, 8}, {6, 8}, {7, 9}}, 0.01754545009007749]}, 
           {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
            DiskBox[1, 0.01754545009007749], DiskBox[2, 0.01754545009007749], 
            DiskBox[3, 0.01754545009007749], DiskBox[4, 0.01754545009007749], 
            DiskBox[5, 0.01754545009007749], DiskBox[6, 0.01754545009007749], 
            DiskBox[7, 0.01754545009007749], DiskBox[8, 0.01754545009007749], 
            DiskBox[9, 0.01754545009007749]}}]],
        MouseAppearanceTag["NetworkGraphics"]],
       AllowKernelInitialization->False]],
     DefaultBaseStyle->{
      "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
     FormatType->TraditionalForm,
     FrameTicks->None]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"SelfComplementary\"\>", ",", 
      RowBox[{"{", 
       RowBox[{"9", ",", "35"}], "}"}]}], "}"}], "\[Rule]", 
    GraphicsBox[
     NamespaceBox["NetworkGraphics",
      DynamicModuleBox[{Typeset`graph = HoldComplete[
        Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9}, {Null, 
          SparseArray[
          Automatic, {9, 9}, 0, {
           1, {{0, 4, 8, 11, 15, 18, 22, 26, 31, 36}, {{4}, {5}, {6}, {8}, {
             5}, {6}, {7}, {9}, {6}, {7}, {8}, {1}, {7}, {8}, {9}, {1}, {2}, {
             9}, {1}, {2}, {3}, {8}, {2}, {3}, {4}, {9}, {1}, {3}, {4}, {6}, {
             9}, {2}, {4}, {5}, {7}, {8}}}, Pattern}]}, {
         VertexCoordinates -> {{
             Rational[3, 5], 
             Rational[1, 2]}, {
             Rational[1, 2], 
             Rational[1, 4]}, {1, 0}, {0, 1}, {
             Rational[2, 5], 
             Rational[1, 2]}, {
             Rational[4, 5], 
             Rational[1, 2]}, {0, 0}, {1, 1}, {
             Rational[1, 5], 
             Rational[1, 2]}}}]]}, 
       TagBox[
        GraphicsGroupBox[
         GraphicsComplexBox[{{0.6, 0.5}, {0.5, 0.25}, {1., 0.}, {0., 1.}, {
          0.4, 0.5}, {0.8, 0.5}, {0., 0.}, {1., 1.}, {0.2, 0.5}}, {
           {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
            ArrowBox[{{1, 4}, {1, 5}, {1, 6}, {1, 8}, {2, 5}, {2, 6}, {2, 
             7}, {2, 9}, {3, 6}, {3, 7}, {3, 8}, {4, 7}, {4, 8}, {4, 9}, {5, 
             9}, {6, 8}, {7, 9}, {8, 9}}, 0.01273]}, 
           {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
            DiskBox[1, 0.01273], DiskBox[2, 0.01273], DiskBox[3, 0.01273], 
            DiskBox[4, 0.01273], DiskBox[5, 0.01273], DiskBox[6, 0.01273], 
            DiskBox[7, 0.01273], DiskBox[8, 0.01273], DiskBox[9, 0.01273]}}]],
        MouseAppearanceTag["NetworkGraphics"]],
       AllowKernelInitialization->False]],
     DefaultBaseStyle->{
      "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
     FormatType->TraditionalForm,
     FrameTicks->None]}], ",", 
   RowBox[{"\<\"SingletonGraph\"\>", "\[Rule]", 
    GraphicsBox[
     NamespaceBox["NetworkGraphics",
      DynamicModuleBox[{Typeset`graph = HoldComplete[
        Graph[{1}, {}, {VertexCoordinates -> {{0, 0}}}]]}, 
       TagBox[GraphicsGroupBox[GraphicsComplexBox[{{0., 0.}}, {{}, 
           {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
            DiskBox[1, 0.004014598540145964]}}]],
        MouseAppearanceTag["NetworkGraphics"]],
       AllowKernelInitialization->False]],
     DefaultBaseStyle->{
      "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
     FormatType->TraditionalForm,
     FrameTicks->None,
     PlotRangePadding->0.1]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"Sun\"\>", ",", "4"}], "}"}], "\[Rule]", 
    GraphicsBox[
     NamespaceBox["NetworkGraphics",
      DynamicModuleBox[{Typeset`graph = HoldComplete[
        Graph[{1, 2, 3, 4, 5, 6, 7, 8}, {Null, 
          SparseArray[
          Automatic, {8, 8}, 0, {
           1, {{0, 2, 4, 6, 8, 13, 18, 23, 28}, {{5}, {7}, {5}, {8}, {6}, {
             7}, {6}, {8}, {1}, {2}, {6}, {7}, {8}, {3}, {4}, {5}, {7}, {8}, {
             1}, {3}, {5}, {6}, {8}, {2}, {4}, {5}, {6}, {7}}}, Pattern}]}, {
         VertexCoordinates -> {{1.20208, 1.20208}, {-1.20208, 1.20208}, {
            1.20208, -1.20208}, {-1.20208, -1.20208}, {0, 1}, {0, -1}, {1, 
            0}, {-1, 0}}}]]}, 
       TagBox[
        GraphicsGroupBox[
         GraphicsComplexBox[{{1.20208, 1.20208}, {-1.20208, 1.20208}, {
          1.20208, -1.20208}, {-1.20208, -1.20208}, {0., 1.}, {0., -1.}, {1., 
          0.}, {-1., 0.}}, {
           {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
            ArrowBox[{{1, 5}, {1, 7}, {2, 5}, {2, 8}, {3, 6}, {3, 7}, {4, 
             6}, {4, 8}, {5, 6}, {5, 7}, {5, 8}, {6, 7}, {6, 8}, {7, 8}}, 
             0.02580848675124936]}, 
           {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
            DiskBox[1, 0.02580848675124936], DiskBox[2, 0.02580848675124936], 
            DiskBox[3, 0.02580848675124936], DiskBox[4, 0.02580848675124936], 
            DiskBox[5, 0.02580848675124936], DiskBox[6, 0.02580848675124936], 
            DiskBox[7, 0.02580848675124936], 
            DiskBox[8, 0.02580848675124936]}}]],
        MouseAppearanceTag["NetworkGraphics"]],
       AllowKernelInitialization->False]],
     DefaultBaseStyle->{
      "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
     FormatType->TraditionalForm,
     FrameTicks->None]}]}], "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.877292249640396*^9, 3.87729228233461*^9},
 CellLabel->
  "Out[112]=",ExpressionUUID->"2b5192e4-2e25-44b1-9df3-af7c32a57c12"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{"SelfComplementaryGraphQ", "//", "ClearAll"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SelfComplementaryGraphQ", "[", 
   RowBox[{"graph_", "?", "GraphQ"}], "]"}], ":=", 
  RowBox[{"IsomorphicGraphQ", "[", 
   RowBox[{"graph", ",", 
    RowBox[{"GraphComplement", "[", "graph", "]"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.877292336299216*^9, 3.8772923617393465`*^9}, {
  3.8772924935066924`*^9, 3.877292497491148*^9}},
 CellLabel->
  "In[120]:=",ExpressionUUID->"7bb5ee4f-05bd-436a-b26b-2368d6356f35"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SelfComplementaryGraphQ", "[", 
  RowBox[{"LineGraph", "[", 
   RowBox[{"CompleteGraph", "[", 
    RowBox[{"{", 
     RowBox[{"3", ",", "3"}], "}"}], "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.877292363286174*^9, 3.877292369911189*^9}},
 CellLabel->
  "In[122]:=",ExpressionUUID->"0958d33a-fa9c-451e-b207-d46c340d2a4d"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.8772923703486567`*^9, 3.8772924993035464`*^9},
 CellLabel->
  "Out[122]=",ExpressionUUID->"4932b8b0-74dc-4465-8caa-6938121147c4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LineGraph", "[", 
  RowBox[{"CompleteGraph", "[", 
   RowBox[{"{", 
    RowBox[{"3", ",", "3"}], "}"}], "]"}], "]"}]], "Input",
 CellLabel->
  "In[123]:=",ExpressionUUID->"566f1510-5226-4d4f-beb5-2f9fbb8d2385"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9}, {Null, 
       SparseArray[
       Automatic, {9, 9}, 0, {
        1, {{0, 4, 8, 12, 16, 20, 24, 28, 32, 36}, {{2}, {3}, {4}, {7}, {1}, {
          3}, {5}, {8}, {1}, {2}, {6}, {9}, {1}, {5}, {6}, {7}, {2}, {4}, {
          6}, {8}, {3}, {4}, {5}, {9}, {1}, {4}, {8}, {9}, {2}, {5}, {7}, {
          9}, {3}, {6}, {7}, {8}}}, Pattern}]}]]}, 
    TagBox[
     GraphicsGroupBox[
      GraphicsComplexBox[{{1.2079673927638768`, 1.7902512755419115`}, {
       1.0878765604185308`, 0.7020758679304038}, {1.9108211323526678`, 
       1.116077715118665}, {0.23361976938664963`, 1.7886326799866432`}, {0., 
       0.8421298838341131}, {1.003135888454517, 1.282716991046409}, {
       0.5421962514105807, 0.9206600460159506}, {0.48953527602042485`, 0.}, {
       1.4251429090817125`, 0.2707953541890852}}, {
        {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
         ArrowBox[{{1, 2}, {1, 3}, {1, 4}, {1, 7}, {2, 3}, {2, 5}, {2, 8}, {3,
           6}, {3, 9}, {4, 5}, {4, 6}, {4, 7}, {5, 6}, {5, 8}, {6, 9}, {7, 
          8}, {7, 9}, {8, 9}}, 0.021883741217488067`]}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         DiskBox[1, 0.021883741217488067], DiskBox[2, 0.021883741217488067], 
         DiskBox[3, 0.021883741217488067], DiskBox[4, 0.021883741217488067], 
         DiskBox[5, 0.021883741217488067], DiskBox[6, 0.021883741217488067], 
         DiskBox[7, 0.021883741217488067], DiskBox[8, 0.021883741217488067], 
         DiskBox[9, 0.021883741217488067]}}]],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None]], "Output",
 CellChangeTimes->{3.8772924642664394`*^9, 3.8772925019129477`*^9},
 CellLabel->
  "Out[123]=",ExpressionUUID->"60853acc-7e56-4cd3-82af-4010b0f04205"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GraphComplement", "[", 
  RowBox[{"LineGraph", "[", 
   RowBox[{"CompleteGraph", "[", 
    RowBox[{"{", 
     RowBox[{"3", ",", "3"}], "}"}], "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.877292468438326*^9, 3.877292471051306*^9}},
 CellLabel->
  "In[124]:=",ExpressionUUID->"676fd549-2ed8-4749-8e34-8a533459d74a"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9}, {Null, 
       SparseArray[
       Automatic, {9, 9}, 0, {
        1, {{0, 4, 8, 12, 16, 20, 24, 28, 32, 36}, {{5}, {6}, {8}, {9}, {4}, {
          6}, {7}, {9}, {4}, {5}, {7}, {8}, {2}, {3}, {8}, {9}, {1}, {3}, {
          7}, {9}, {1}, {2}, {7}, {8}, {2}, {3}, {5}, {6}, {1}, {3}, {4}, {
          6}, {1}, {2}, {4}, {5}}}, Pattern}]}, {
      GraphLayout -> {"Dimension" -> 2}, 
       VertexCoordinates -> {{1.2079673927638768`, 1.7902512755419115`}, {
        1.0878765604185308`, 0.7020758679304038}, {1.9108211323526678`, 
        1.116077715118665}, {0.23361976938664963`, 1.7886326799866432`}, {0., 
        0.8421298838341131}, {1.003135888454517, 1.282716991046409}, {
        0.5421962514105807, 0.9206600460159506}, {0.48953527602042485`, 0.}, {
        1.4251429090817125`, 0.2707953541890852}}}]]}, 
    TagBox[
     GraphicsGroupBox[
      GraphicsComplexBox[{{1.2079673927638768`, 1.7902512755419115`}, {
       1.0878765604185308`, 0.7020758679304038}, {1.9108211323526678`, 
       1.116077715118665}, {0.23361976938664963`, 1.7886326799866432`}, {0., 
       0.8421298838341131}, {1.003135888454517, 1.282716991046409}, {
       0.5421962514105807, 0.9206600460159506}, {0.48953527602042485`, 0.}, {
       1.4251429090817125`, 0.2707953541890852}}, {
        {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
         ArrowBox[{{1, 5}, {1, 6}, {1, 8}, {1, 9}, {2, 4}, {2, 6}, {2, 7}, {2,
           9}, {3, 4}, {3, 5}, {3, 7}, {3, 8}, {4, 8}, {4, 9}, {5, 7}, {5, 
          9}, {6, 7}, {6, 8}}, 0.021883741217488067`]}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         DiskBox[1, 0.021883741217488067], DiskBox[2, 0.021883741217488067], 
         DiskBox[3, 0.021883741217488067], DiskBox[4, 0.021883741217488067], 
         DiskBox[5, 0.021883741217488067], DiskBox[6, 0.021883741217488067], 
         DiskBox[7, 0.021883741217488067], DiskBox[8, 0.021883741217488067], 
         DiskBox[9, 0.021883741217488067]}}]],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None]], "Output",
 CellChangeTimes->{3.8772924715200415`*^9, 3.8772925040535545`*^9},
 CellLabel->
  "Out[124]=",ExpressionUUID->"f3ef97f8-4fdf-49a3-934a-a7ac4c999acf"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"IsomorphicGraphQ", "[", 
  RowBox[{
   RowBox[{"GraphComplement", "[", 
    RowBox[{"LineGraph", "[", 
     RowBox[{"CompleteGraph", "[", 
      RowBox[{"{", 
       RowBox[{"3", ",", "3"}], "}"}], "]"}], "]"}], "]"}], ",", 
   RowBox[{"LineGraph", "[", 
    RowBox[{"CompleteGraph", "[", 
     RowBox[{"{", 
      RowBox[{"3", ",", "3"}], "}"}], "]"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.877292475317597*^9, 3.877292483225517*^9}},
 CellLabel->
  "In[125]:=",ExpressionUUID->"a0338716-74bc-41d9-9a71-8196b5d9ae83"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.87729248361605*^9, 3.8772925071941786`*^9}},
 CellLabel->
  "Out[125]=",ExpressionUUID->"b6551e57-6ad5-4008-bc67-2ccae7ca3361"]
}, Open  ]],

Cell[TextData[{
 "The answer is that ",
 Cell[BoxData[
  FormBox[
   RowBox[{"L", "(", 
    SubscriptBox["K", 
     RowBox[{"3", ",", "3"}]], ")"}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "18da5b0c-63e6-4a96-b4af-32cb387346ca"],
 " is self-complementary."
}], "Text",
 CellChangeTimes->{{3.8772923779708214`*^9, 3.8772924011082635`*^9}, {
  3.877292511471754*^9, 
  3.877292514674779*^9}},ExpressionUUID->"b22b14eb-da45-4f34-a5fd-\
0babfdf85212"],

Cell["\<\
The book says the answer is true. I originally got this wrong because I \
compared the graph and its complement with == instead of IsomorphicGraphQ.\
\>", "Text",
 CellChangeTimes->{{3.877292441102147*^9, 3.877292452985344*^9}, {
  3.8772925168153915`*^9, 
  3.8772925327508373`*^9}},ExpressionUUID->"1a4d2670-64cb-466a-99d2-\
3625320a2e40"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Exercise 87", "Section",
 CellChangeTimes->{{3.877292678890699*^9, 
  3.877292684781227*^9}},ExpressionUUID->"3400f2a2-d291-4791-9e98-\
1142e6e6452c"],

Cell["Is the Petersen graph (a) 3-colorable (b) 3-edge-colorable?", "Text",
 CellChangeTimes->{{3.8772926864109697`*^9, 
  3.8772927042497816`*^9}},ExpressionUUID->"b43455b2-aa89-4d07-801e-\
45a33054b78b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GraphData", "[", 
  RowBox[{"\"\<PetersenGraph\>\"", ",", "\"\<ChromaticNumber\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.877292705437299*^9, 3.8772927119283543`*^9}},
 CellLabel->
  "In[127]:=",ExpressionUUID->"1fff6cc0-7205-4e0f-a897-8a9aee17f64c"],

Cell[BoxData["3"], "Output",
 CellChangeTimes->{3.8772927121471004`*^9},
 CellLabel->
  "Out[127]=",ExpressionUUID->"eb4dac2e-648b-4c6e-a287-49afd7b03369"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GraphData", "[", 
  RowBox[{"\"\<PetersenGraph\>\"", ",", "\"\<EdgeChromaticNumber\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.877292705437299*^9, 3.87729271603942*^9}},
 CellLabel->
  "In[128]:=",ExpressionUUID->"7c978bb0-2956-47de-9843-4cd016bbea2f"],

Cell[BoxData["4"], "Output",
 CellChangeTimes->{3.87729271646134*^9},
 CellLabel->
  "Out[128]=",ExpressionUUID->"55e46fc5-d41a-47a2-948b-a0d55a58ac4e"]
}, Open  ]],

Cell["Yes to a, no to b.", "Text",
 CellChangeTimes->{{3.877292720102067*^9, 
  3.8772927228938875`*^9}},ExpressionUUID->"92e6a2c8-ce46-407e-b75e-\
d8150be4ed00"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ColorGraphVertices", "[", 
  RowBox[{
   RowBox[{"PetersenGraph", "[", "]"}], ",", 
   RowBox[{"ImageSize", "->", "Large"}], ",", 
   RowBox[{"VertexSize", "->", "Large"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8772927268058977`*^9, 3.8772927587958193`*^9}},
 CellLabel->
  "In[131]:=",ExpressionUUID->"fd687cd5-a61d-4f75-bafb-9b6ff4f6bc42"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10}, {
      Null, {{1, 3}, {1, 4}, {1, 6}, {2, 4}, {2, 5}, {2, 7}, {3, 5}, {3, 8}, {
       4, 9}, {5, 10}, {6, 7}, {6, 10}, {7, 8}, {8, 9}, {9, 10}}}, {
      GraphLayout -> {"Dimension" -> 2}, ImageSize -> Large, 
       VertexCoordinates -> {{0.9510565162951535, 0.30901699437494745`}, {
        0.5877852522924732, -0.8090169943749473}, {-0.587785252292473, \
-0.8090169943749475}, {-0.9510565162951536, 
        0.30901699437494723`}, {-2.4492935982947064`*^-16, 1.}, {
        1.902113032590307, 0.6180339887498949}, {
        1.1755705045849465`, -1.6180339887498947`}, {-1.175570504584946, \
-1.618033988749895}, {-1.9021130325903073`, 
        0.6180339887498945}, {-4.898587196589413*^-16, 2.}}, 
       VertexSize -> {Large}, 
       VertexStyle -> {
        6 -> RGBColor[0.34398, 0.49112, 0.89936], 1 -> 
         RGBColor[0.97, 0.606, 0.081], 9 -> RGBColor[0.91, 0.318, 0.243], 2 -> 
         RGBColor[0.91, 0.318, 0.243], 8 -> 
         RGBColor[0.34398, 0.49112, 0.89936], 3 -> 
         RGBColor[0.91, 0.318, 0.243], 4 -> 
         RGBColor[0.34398, 0.49112, 0.89936], 10 -> 
         RGBColor[0.97, 0.606, 0.081], 7 -> RGBColor[0.97, 0.606, 0.081], 5 -> 
         RGBColor[0.34398, 0.49112, 0.89936]}}]]}, 
    TagBox[
     GraphicsGroupBox[
      GraphicsComplexBox[{{0.9510565162951535, 0.30901699437494745`}, {
       0.5877852522924732, -0.8090169943749473}, {-0.587785252292473, \
-0.8090169943749475}, {-0.9510565162951536, 
       0.30901699437494723`}, {-2.4492935982947064`*^-16, 1.}, {
       1.902113032590307, 0.6180339887498949}, {
       1.1755705045849465`, -1.6180339887498947`}, {-1.175570504584946, \
-1.618033988749895}, {-1.9021130325903073`, 
       0.6180339887498945}, {-4.898587196589413*^-16, 2.}}, {
        {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
         ArrowBox[{{1, 3}, {1, 4}, {1, 6}, {2, 4}, {2, 5}, {2, 7}, {3, 5}, {3,
           8}, {4, 9}, {5, 10}, {6, 7}, {6, 10}, {7, 8}, {8, 9}, {9, 10}}, 
          0.19999999999999998`]}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         {RGBColor[0.97, 0.606, 0.081], DiskBox[1, 0.19999999999999998]}, 
         {RGBColor[0.91, 0.318, 0.243], DiskBox[2, 0.19999999999999998]}, 
         {RGBColor[0.91, 0.318, 0.243], DiskBox[3, 0.19999999999999998]}, 
         {RGBColor[0.34398, 0.49112, 0.89936], 
          DiskBox[4, 0.19999999999999998]}, 
         {RGBColor[0.34398, 0.49112, 0.89936], 
          DiskBox[5, 0.19999999999999998]}, 
         {RGBColor[0.34398, 0.49112, 0.89936], 
          DiskBox[6, 0.19999999999999998]}, 
         {RGBColor[0.97, 0.606, 0.081], DiskBox[7, 0.19999999999999998]}, 
         {RGBColor[0.34398, 0.49112, 0.89936], 
          DiskBox[8, 0.19999999999999998]}, 
         {RGBColor[0.91, 0.318, 0.243], DiskBox[9, 0.19999999999999998]}, 
         {RGBColor[0.97, 0.606, 0.081], DiskBox[10, 0.19999999999999998]}}}]],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None,
  ImageSize->Large]], "Output",
 CellChangeTimes->{{3.877292731759348*^9, 3.877292759202097*^9}},
 CellLabel->
  "Out[131]=",ExpressionUUID->"7726f266-a336-4ba6-9cc2-400e8906babd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PersistResourceFunction", "[", 
  RowBox[{"{", "\"\<ColorGraphEdges\>\"", "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.8772927656927357`*^9, 3.87729277153708*^9}},
 CellLabel->
  "In[132]:=",ExpressionUUID->"4c475ab8-4e7b-4f9d-9cf1-f575e37def0e"],

Cell[BoxData[
 RowBox[{"{", 
  InterpretationBox[
   RowBox[{
    TagBox["Success",
     "SummaryHead"], "[", 
    DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
     TemplateBox[{
       PaneSelectorBox[{False -> GridBox[{{
             PaneBox[
              ButtonBox[
               DynamicBox[
                FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
               ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
               BaseStyle -> {}, Evaluator -> Automatic, Method -> 
               "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
              Dynamic[{
                Automatic, 
                 3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])}]], 
             FrameBox[
              StyleBox["\"\[Checkmark]\"", 
               Directive[
                RGBColor[
                0.3607843137254902, 0.596078431372549, 0.3803921568627451], 
                25], StripOnInput -> False], ContentPadding -> False, 
              FrameStyle -> None, FrameMargins -> {{0, 0}, {0, 0}}, 
              StripOnInput -> False], 
             GridBox[{{
                RowBox[{
                  TagBox[
                   TemplateBox[{"\"Message\"", "\": \""}, "RowDefault"], 
                   "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                  TagBox[
                  "\"Successfully stored ColorGraphEdges as an initialization \
symbol.\"", "SummaryItem"]}]}, {
                RowBox[{
                  TagBox[
                   
                   TemplateBox[{"\"PersistenceLocation\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox[
                   InterpretationBox[
                    RowBox[{
                    TagBox["PersistenceLocation", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GraphicsBox[{
                    Thickness[0.04081632653061224], {
                    FaceForm[{
                    RGBColor[0.749, 0.749, 0.749], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGZigAFlBwht7oCLr7ihKGNir7nDlhNl++ZLKUHF
LaC0Ihr/hz2Mv6FksgRL2Dt7VPkH9jDzYHxU+2D8D/Yw/oHvwY+Xzr5jj2oe
DPxA5TfAzGFgiEqxvu/Pa+GAKm/hADMPxkexD843dYDxIe41dUA1z8wB1T4o
n0EVzvcx73RMeKqMJq/scN+/d3peEYIP8z8AUyhEVw==
                    "]]}, {
                    RGBColor[1., 1., 1.], 
                    Opacity[1.], 
                    CapForm["Round"], 
                    JoinForm["Round"], 
                    
                    JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIFIGYC4pASlen/AwwcGMBAxAHM/4Dg7zOYqSWx1dCh
1t40bpeniMP9B9yTVzYZOlhuOVG2T17KIWz+6rU34g0dKl+qGXLoyDkcv7O1
pUbA0OHF75UfL/UqOBx1Wpt576O+gwpb41RnbiWHP6ffnTx8SNchSSDCckuH
skOeScN2BydtB441MlEp1ipw/qdLvkkCEmoOZkBu0yJtiP7TGg6SasGsi4V0
Hc5/D3689LaGw6L0za+KTXUdWl8H7pBr1XXYd1BcLdhV10EeJDBP30Fo6d6D
4mm6UP8YOVx0ufHhC5cGnM/k28Lrv14Jzg8z0FopfEEJrr+oq+/Jp/tKcPPB
7mdShtv/oBCooEgF7r5lQOvULqvA3Q/jw/wHdn+QEtz/geunpHYoK8DDh69w
TfftF9Lw8Hs3dRNP4RopePiuSQgJUleQgoe/V8AfieJwSXj83BL65Hg+TQYe
f2D+MznU+EWKbwBI8b86
                    "], CurveClosed -> {1}]}}, AspectRatio -> Automatic, 
                    ImageSize -> {25., 25.}, 
                    PlotRange -> {{0., 24.5}, {0., 24.5}}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Local\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GraphicsBox[{
                    Thickness[0.04081632653061224], {
                    FaceForm[{
                    RGBColor[0.749, 0.749, 0.749], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGZigAFlBwht7oCLr7ihKGNir7nDlhNl++ZLKUHF
LaC0Ihr/hz2Mv6FksgRL2Dt7VPkH9jDzYHxU+2D8D/Yw/oHvwY+Xzr5jj2oe
DPxA5TfAzGFgiEqxvu/Pa+GAKm/hADMPxkexD843dYDxIe41dUA1z8wB1T4o
n0EVzvcx73RMeKqMJq/scN+/d3peEYIP8z8AUyhEVw==
                    "]]}, {
                    RGBColor[1., 1., 1.], 
                    Opacity[1.], 
                    CapForm["Round"], 
                    JoinForm["Round"], 
                    
                    JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIFIGYC4pASlen/AwwcGMBAxAHM/4Dg7zOYqSWx1dCh
1t40bpeniMP9B9yTVzYZOlhuOVG2T17KIWz+6rU34g0dKl+qGXLoyDkcv7O1
pUbA0OHF75UfL/UqOBx1Wpt576O+gwpb41RnbiWHP6ffnTx8SNchSSDCckuH
skOeScN2BydtB441MlEp1ipw/qdLvkkCEmoOZkBu0yJtiP7TGg6SasGsi4V0
Hc5/D3689LaGw6L0za+KTXUdWl8H7pBr1XXYd1BcLdhV10EeJDBP30Fo6d6D
4mm6UP8YOVx0ufHhC5cGnM/k28Lrv14Jzg8z0FopfEEJrr+oq+/Jp/tKcPPB
7mdShtv/oBCooEgF7r5lQOvULqvA3Q/jw/wHdn+QEtz/geunpHYoK8DDh69w
TfftF9Lw8Hs3dRNP4RopePiuSQgJUleQgoe/V8AfieJwSXj83BL65Hg+TQYe
f2D+MznU+EWKbwBI8b86
                    "], CurveClosed -> {1}]}}, AspectRatio -> Automatic, 
                    ImageSize -> {25., 25.}, 
                    PlotRange -> {{0., 24.5}, {0., 24.5}}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Local\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Base: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    "\"file:///C:/Users/Hannah/AppData/Roaming/Wolfram/\
Objects/Persistence\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                    PersistenceLocation[
                    "Local", 
                    "file:///C:/Users/Hannah/AppData/Roaming/Wolfram/Objects/\
Persistence", 
                    Hold[Persistence`Data`a16937363724473571974$7]], 
                    Selectable -> False, Editable -> False, 
                    SelectWithContents -> True], "SummaryItem"]}]}}, 
              GridBoxAlignment -> {
               "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
              False, GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {
               "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
              BaseStyle -> {
               ShowStringCharacters -> False, NumberMarks -> False, 
                PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
           AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {1, 1}], True -> GridBox[{{
             PaneBox[
              ButtonBox[
               DynamicBox[
                FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
               ButtonFunction :> (Typeset`open$$ = False), Appearance -> None,
                BaseStyle -> {}, Evaluator -> Automatic, Method -> 
               "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
              Dynamic[{
                Automatic, 
                 3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])}]], 
             FrameBox[
              StyleBox["\"\[Checkmark]\"", 
               Directive[
                RGBColor[
                0.3607843137254902, 0.596078431372549, 0.3803921568627451], 
                25], StripOnInput -> False], ContentPadding -> False, 
              FrameStyle -> None, FrameMargins -> {{0, 0}, {0, 0}}, 
              StripOnInput -> False], 
             GridBox[{{
                RowBox[{
                  TagBox[
                   TemplateBox[{"\"Message\"", "\": \""}, "RowDefault"], 
                   "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                  TagBox[
                  "\"Successfully stored ColorGraphEdges as an initialization \
symbol.\"", "SummaryItem"]}]}, {
                RowBox[{
                  TagBox[
                   
                   TemplateBox[{"\"PersistenceLocation\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox[
                   InterpretationBox[
                    RowBox[{
                    TagBox["PersistenceLocation", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GraphicsBox[{
                    Thickness[0.04081632653061224], {
                    FaceForm[{
                    RGBColor[0.749, 0.749, 0.749], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGZigAFlBwht7oCLr7ihKGNir7nDlhNl++ZLKUHF
LaC0Ihr/hz2Mv6FksgRL2Dt7VPkH9jDzYHxU+2D8D/Yw/oHvwY+Xzr5jj2oe
DPxA5TfAzGFgiEqxvu/Pa+GAKm/hADMPxkexD843dYDxIe41dUA1z8wB1T4o
n0EVzvcx73RMeKqMJq/scN+/d3peEYIP8z8AUyhEVw==
                    "]]}, {
                    RGBColor[1., 1., 1.], 
                    Opacity[1.], 
                    CapForm["Round"], 
                    JoinForm["Round"], 
                    
                    JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIFIGYC4pASlen/AwwcGMBAxAHM/4Dg7zOYqSWx1dCh
1t40bpeniMP9B9yTVzYZOlhuOVG2T17KIWz+6rU34g0dKl+qGXLoyDkcv7O1
pUbA0OHF75UfL/UqOBx1Wpt576O+gwpb41RnbiWHP6ffnTx8SNchSSDCckuH
skOeScN2BydtB441MlEp1ipw/qdLvkkCEmoOZkBu0yJtiP7TGg6SasGsi4V0
Hc5/D3689LaGw6L0za+KTXUdWl8H7pBr1XXYd1BcLdhV10EeJDBP30Fo6d6D
4mm6UP8YOVx0ufHhC5cGnM/k28Lrv14Jzg8z0FopfEEJrr+oq+/Jp/tKcPPB
7mdShtv/oBCooEgF7r5lQOvULqvA3Q/jw/wHdn+QEtz/geunpHYoK8DDh69w
TfftF9Lw8Hs3dRNP4RopePiuSQgJUleQgoe/V8AfieJwSXj83BL65Hg+TQYe
f2D+MznU+EWKbwBI8b86
                    "], CurveClosed -> {1}]}}, AspectRatio -> Automatic, 
                    ImageSize -> {25., 25.}, 
                    PlotRange -> {{0., 24.5}, {0., 24.5}}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Local\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GraphicsBox[{
                    Thickness[0.04081632653061224], {
                    FaceForm[{
                    RGBColor[0.749, 0.749, 0.749], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGZigAFlBwht7oCLr7ihKGNir7nDlhNl++ZLKUHF
LaC0Ihr/hz2Mv6FksgRL2Dt7VPkH9jDzYHxU+2D8D/Yw/oHvwY+Xzr5jj2oe
DPxA5TfAzGFgiEqxvu/Pa+GAKm/hADMPxkexD843dYDxIe41dUA1z8wB1T4o
n0EVzvcx73RMeKqMJq/scN+/d3peEYIP8z8AUyhEVw==
                    "]]}, {
                    RGBColor[1., 1., 1.], 
                    Opacity[1.], 
                    CapForm["Round"], 
                    JoinForm["Round"], 
                    
                    JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIFIGYC4pASlen/AwwcGMBAxAHM/4Dg7zOYqSWx1dCh
1t40bpeniMP9B9yTVzYZOlhuOVG2T17KIWz+6rU34g0dKl+qGXLoyDkcv7O1
pUbA0OHF75UfL/UqOBx1Wpt576O+gwpb41RnbiWHP6ffnTx8SNchSSDCckuH
skOeScN2BydtB441MlEp1ipw/qdLvkkCEmoOZkBu0yJtiP7TGg6SasGsi4V0
Hc5/D3689LaGw6L0za+KTXUdWl8H7pBr1XXYd1BcLdhV10EeJDBP30Fo6d6D
4mm6UP8YOVx0ufHhC5cGnM/k28Lrv14Jzg8z0FopfEEJrr+oq+/Jp/tKcPPB
7mdShtv/oBCooEgF7r5lQOvULqvA3Q/jw/wHdn+QEtz/geunpHYoK8DDh69w
TfftF9Lw8Hs3dRNP4RopePiuSQgJUleQgoe/V8AfieJwSXj83BL65Hg+TQYe
f2D+MznU+EWKbwBI8b86
                    "], CurveClosed -> {1}]}}, AspectRatio -> Automatic, 
                    ImageSize -> {25., 25.}, 
                    PlotRange -> {{0., 24.5}, {0., 24.5}}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Local\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Base: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    "\"file:///C:/Users/Hannah/AppData/Roaming/Wolfram/\
Objects/Persistence\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                    PersistenceLocation[
                    "Local", 
                    "file:///C:/Users/Hannah/AppData/Roaming/Wolfram/Objects/\
Persistence", 
                    Hold[Persistence`Data`a16937363724473571974$7]], 
                    Selectable -> False, Editable -> False, 
                    SelectWithContents -> True], "SummaryItem"]}]}, {
                RowBox[{
                  TagBox[
                   TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                   "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                  TagBox["\"InstalledResourceFunction\"", "SummaryItem"]}]}}, 
              GridBoxAlignment -> {
               "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
              False, GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {
               "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
              BaseStyle -> {
               ShowStringCharacters -> False, NumberMarks -> False, 
                PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
           AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {1, 1}]}, 
        Dynamic[Typeset`open$$], ImageSize -> Automatic]},
      "SummaryPanel"],
     DynamicModuleValues:>{}], "]"}],
   Success[
   "InstalledResourceFunction", <|
    "MessageTemplate" :> 
     "Successfully stored `symName` as an initialization symbol.", 
     "MessageParameters" -> <|"symName" -> "ColorGraphEdges"|>, 
     "PersistenceLocation" -> 
     PersistenceLocation[
      "Local", "file:///C:/Users/Hannah/AppData/Roaming/Wolfram/Objects/\
Persistence", 
       Hold[Persistence`Data`a16937363724473571974$7]]|>],
   Editable->False,
   SelectWithContents->True,
   Selectable->False], "}"}]], "Output",
 CellChangeTimes->{3.8772927764118853`*^9},
 CellLabel->
  "Out[132]=",ExpressionUUID->"10349eb7-b623-48c3-a063-4dc55e2a243a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ColorGraphEdges", "[", 
  RowBox[{
   RowBox[{"PetersenGraph", "[", "]"}], ",", 
   RowBox[{"ImageSize", "->", "Large"}], ",", 
   RowBox[{"EdgeStyle", "->", 
    RowBox[{"{", "Thick", "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8772927268058977`*^9, 3.8772928134866095`*^9}},
 CellLabel->
  "In[135]:=",ExpressionUUID->"5968dcde-7b5e-4312-925f-3b89cb02059a"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10}, {
      Null, {{1, 3}, {1, 4}, {1, 6}, {2, 4}, {2, 5}, {2, 7}, {3, 5}, {3, 8}, {
       4, 9}, {5, 10}, {6, 7}, {6, 10}, {7, 8}, {8, 9}, {9, 10}}}, {EdgeStyle -> {
         Thickness[Large], UndirectedEdge[6, 7] -> 
         RGBColor[0.34398, 0.49112, 0.89936], UndirectedEdge[7, 8] -> 
         RGBColor[0.97, 0.606, 0.081], UndirectedEdge[2, 4] -> 
         RGBColor[0.34398, 0.49112, 0.89936], UndirectedEdge[5, 10] -> 
         RGBColor[0.34398, 0.49112, 0.89936], UndirectedEdge[1, 4] -> 
         RGBColor[0.91, 0.318, 0.243], UndirectedEdge[6, 10] -> 
         RGBColor[0.91, 0.318, 0.243], UndirectedEdge[3, 5] -> 
         RGBColor[0.91, 0.318, 0.243], UndirectedEdge[3, 8] -> 
         RGBColor[0.34398, 0.49112, 0.89936], UndirectedEdge[4, 9] -> 
         RGBColor[0.448, 0.69232, 0.1538], UndirectedEdge[9, 10] -> 
         RGBColor[0.97, 0.606, 0.081], UndirectedEdge[2, 7] -> 
         RGBColor[0.91, 0.318, 0.243], UndirectedEdge[8, 9] -> 
         RGBColor[0.91, 0.318, 0.243], UndirectedEdge[1, 6] -> 
         RGBColor[0.448, 0.69232, 0.1538], UndirectedEdge[2, 5] -> 
         RGBColor[0.97, 0.606, 0.081], UndirectedEdge[1, 3] -> 
         RGBColor[0.97, 0.606, 0.081]}, GraphLayout -> {"Dimension" -> 2}, 
       ImageSize -> Large, 
       VertexCoordinates -> {{0.9510565162951535, 0.30901699437494745`}, {
        0.5877852522924732, -0.8090169943749473}, {-0.587785252292473, \
-0.8090169943749475}, {-0.9510565162951536, 
        0.30901699437494723`}, {-2.4492935982947064`*^-16, 1.}, {
        1.902113032590307, 0.6180339887498949}, {
        1.1755705045849465`, -1.6180339887498947`}, {-1.175570504584946, \
-1.618033988749895}, {-1.9021130325903073`, 
        0.6180339887498945}, {-4.898587196589413*^-16, 2.}}}]]}, 
    TagBox[
     GraphicsGroupBox[
      GraphicsComplexBox[{{0.9510565162951535, 0.30901699437494745`}, {
       0.5877852522924732, -0.8090169943749473}, {-0.587785252292473, \
-0.8090169943749475}, {-0.9510565162951536, 
       0.30901699437494723`}, {-2.4492935982947064`*^-16, 1.}, {
       1.902113032590307, 0.6180339887498949}, {
       1.1755705045849465`, -1.6180339887498947`}, {-1.175570504584946, \
-1.618033988749895}, {-1.9021130325903073`, 
       0.6180339887498945}, {-4.898587196589413*^-16, 2.}}, {
        {Hue[0.6, 0.7, 0.5], Thickness[Large], Opacity[0.7], 
         {RGBColor[0.97, 0.606, 0.081], 
          {Arrowheads[0.], ArrowBox[{1, 3}, 0.03574187784409402]}}, 
         {RGBColor[0.91, 0.318, 0.243], 
          {Arrowheads[0.], ArrowBox[{1, 4}, 0.03574187784409402]}}, 
         {RGBColor[0.448, 0.69232, 0.1538], 
          {Arrowheads[0.], ArrowBox[{1, 6}, 0.03574187784409402]}}, 
         {RGBColor[0.34398, 0.49112, 0.89936], 
          {Arrowheads[0.], ArrowBox[{2, 4}, 0.03574187784409402]}}, 
         {RGBColor[0.97, 0.606, 0.081], 
          {Arrowheads[0.], ArrowBox[{2, 5}, 0.03574187784409402]}}, 
         {RGBColor[0.91, 0.318, 0.243], 
          {Arrowheads[0.], ArrowBox[{2, 7}, 0.03574187784409402]}}, 
         {RGBColor[0.91, 0.318, 0.243], 
          {Arrowheads[0.], ArrowBox[{3, 5}, 0.03574187784409402]}}, 
         {RGBColor[0.34398, 0.49112, 0.89936], 
          {Arrowheads[0.], ArrowBox[{3, 8}, 0.03574187784409402]}}, 
         {RGBColor[0.448, 0.69232, 0.1538], 
          {Arrowheads[0.], ArrowBox[{4, 9}, 0.03574187784409402]}}, 
         {RGBColor[0.34398, 0.49112, 0.89936], 
          {Arrowheads[0.], ArrowBox[{5, 10}, 0.03574187784409402]}}, 
         {RGBColor[0.34398, 0.49112, 0.89936], 
          {Arrowheads[0.], ArrowBox[{6, 7}, 0.03574187784409402]}}, 
         {RGBColor[0.91, 0.318, 0.243], 
          {Arrowheads[0.], ArrowBox[{6, 10}, 0.03574187784409402]}}, 
         {RGBColor[0.97, 0.606, 0.081], 
          {Arrowheads[0.], ArrowBox[{7, 8}, 0.03574187784409402]}}, 
         {RGBColor[0.91, 0.318, 0.243], 
          {Arrowheads[0.], ArrowBox[{8, 9}, 0.03574187784409402]}}, 
         {RGBColor[0.97, 0.606, 0.081], 
          {Arrowheads[0.], ArrowBox[{9, 10}, 0.03574187784409402]}}}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         DiskBox[1, 0.03574187784409402], DiskBox[2, 0.03574187784409402], 
         DiskBox[3, 0.03574187784409402], DiskBox[4, 0.03574187784409402], 
         DiskBox[5, 0.03574187784409402], DiskBox[6, 0.03574187784409402], 
         DiskBox[7, 0.03574187784409402], DiskBox[8, 0.03574187784409402], 
         DiskBox[9, 0.03574187784409402], DiskBox[10, 0.03574187784409402]}}]],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None,
  ImageSize->Large]], "Output",
 CellChangeTimes->{{3.87729278246465*^9, 3.8772928138615484`*^9}},
 CellLabel->
  "Out[135]=",ExpressionUUID->"9ae9ae6a-499d-4baa-8bb5-190842b00f5c"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Exercise 88", "Section",
 CellChangeTimes->{{3.87729283238245*^9, 
  3.877292834210911*^9}},ExpressionUUID->"9f57d2dc-786d-4dd6-adb7-\
54a3812532cc"],

Cell[TextData[{
 "The graph ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["W", "n"], "=", 
     SubscriptBox["K", "1"]}], "\[LongDash]", 
    SubscriptBox["C", "n"]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "04a441ef-fa57-4fa2-860b-fa188d6e148e"],
 " is called the wheel with ",
 Cell[BoxData[
  FormBox["n", TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "d185176b-7c57-4931-b3e0-87ba45b22900"],
 " spokes, when ",
 Cell[BoxData[
  FormBox[
   RowBox[{"n", ">=", "3"}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "247f935e-13b6-4d61-8ac1-a064d55081b6"],
 ". How many cycles does it contain as subgraphs?"
}], "Text",
 CellChangeTimes->{{3.8772928397733154`*^9, 
  3.8772928760792074`*^9}},ExpressionUUID->"0dda2f10-7a04-4b04-9a40-\
6b40da344d98"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"WheelGraph", "/@", 
  RowBox[{"Range", "[", "12", "]"}]}]], "Input",
 CellChangeTimes->{{3.8772928921386633`*^9, 3.877292907590268*^9}},
 CellLabel->
  "In[137]:=",ExpressionUUID->"56fdb04f-419e-4f4d-9af3-106b8586a53c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1}, {}, {GraphLayout -> "StarEmbedding"}]]}, 
      TagBox[GraphicsGroupBox[GraphicsComplexBox[{{0., 0.}}, {{}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           DiskBox[1, 0.004014598540145964]}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    FormatType->TraditionalForm,
    FrameTicks->None,
    PlotRangePadding->0.1], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2}, {
        Null, SparseArray[
         Automatic, {2, 2}, 0, {1, {{0, 1, 2}, {{2}, {2}}}, {1, 1}}]}, {
        GraphLayout -> "StarEmbedding"}]]}, 
      TagBox[GraphicsGroupBox[GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGCQBGIQDQEf7BlQwIf9MNa1KPOYRiD/00l3o2DRhv1pS1nE
lkZ/2G98Obh+7vND+7XsPuVsD/643+L7Zq9bSy7ub66YXHTpyqf9V19IuczI
vrG/h29/pNCBL/uvvm1xf2xzdz9rteMh/nff9h/I7Ttwbuv9/W3hBjc4jH7u
/8Q302ba4vv71UKcEipif+9PMAx7uJ797v4vtSE/Lzj/3S+w41/mOvEb+x8Z
Hf/Mv+/ffn3HcuGvFhf33/S3i7239v/+H1b/MrQ/HoS5+wB7jIix2rKFe2Dy
3yHy9jD92hD99jDzeSHm28Psj4XYbw9z3weI++zZoO7fD3G/Pcx/VyD+s4f5
/zLE//Zo4WMPCz8VSPjZw8L3MyR87QGMGM0i
         "], {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
           ArrowBox[{1, 2}, 0.02261146496815286], 
           ArrowBox[BezierCurveBox[{2, 6, 9, 11, 17, 19, 22, 2},
            SplineDegree->7], 0.02261146496815286]}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           DiskBox[1, 0.02261146496815286], 
           DiskBox[2, 0.02261146496815286]}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    FormatType->TraditionalForm,
    FrameTicks->None], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3}, {
        Null, SparseArray[
         Automatic, {3, 3}, 0, {
          1, {{0, 2, 3, 3}, {{2}, {3}, {3}}}, {1, 1, 2}}]}, {
        GraphLayout -> "StarEmbedding"}]]}, 
      TagBox[GraphicsGroupBox[GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGBQBmIQjR18sEfj74ex3NRaxObZvrQXOBGlLvR20/4avabq
4pbn9g7lu45fT9y+P2p7feaHI0/tHdYqv56jvXt/sJH6dVmGJ/YJTceTlD32
7WfvEXrAbv7I/oRJ28mTUQf2v/LjVdub9cA+YkLKUTvLg/sFIjckzrG4a78h
qv/dm30H9/fPBIGb9h8Cd8i1vj64fzaEvx/Gl4Go3w9T/wFi3n6YebwQ+/bD
7IuEuGd/ANQ98RD37jeAurcJ4p/9BlD/+ED8u58B6l80/9uj+d8ezf/2aP63
R/O/PZr/7dH8b4/mf3s0/9uj+d8ezf/2aP63R/O/PZr/7dH8b4/mf3sAWawK
8A==
         "], {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
           ArrowBox[{1, 2}, 0.02261146496815286], 
           ArrowBox[{1, 3}, 0.02261146496815286], 
           ArrowBox[BezierCurveBox[{2, {0., -0.32888149436623243`}, 3}], 
            0.02261146496815286], 
           ArrowBox[BezierCurveBox[{2, {0., 0.32888149436623243`}, 3}], 
            0.02261146496815286]}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           DiskBox[1, 0.02261146496815286], DiskBox[2, 0.02261146496815286], 
           DiskBox[3, 0.02261146496815286]}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    FormatType->TraditionalForm,
    FrameTicks->None], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4}, {Null, 
         SparseArray[
         Automatic, {4, 4}, 0, {
          1, {{0, 3, 6, 9, 12}, {{2}, {3}, {4}, {1}, {3}, {4}, {1}, {2}, {
            4}, {1}, {2}, {3}}}, Pattern}]}, {
        GraphLayout -> "StarEmbedding"}]]}, 
      TagBox[
       GraphicsGroupBox[
        GraphicsComplexBox[{{0., 0.}, {
         0.8660254037844389, -0.5000000000000012}, {1.8369701987210297`*^-16, 
         1.}, {-0.8660254037844386, -0.49999999999999917`}}, {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
           ArrowBox[{{1, 2}, {1, 3}, {1, 4}, {2, 3}, {2, 4}, {3, 4}}, 
            0.020399597244776413`]}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           DiskBox[1, 0.020399597244776413], DiskBox[2, 0.020399597244776413],
            DiskBox[3, 0.020399597244776413], 
           DiskBox[4, 0.020399597244776413]}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    FormatType->TraditionalForm,
    FrameTicks->None], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4, 5}, {Null, 
         SparseArray[
         Automatic, {5, 5}, 0, {
          1, {{0, 4, 7, 10, 13, 16}, {{2}, {3}, {4}, {5}, {1}, {3}, {5}, {
            1}, {2}, {4}, {1}, {3}, {5}, {1}, {2}, {4}}}, Pattern}]}, {
        GraphLayout -> "StarEmbedding"}]]}, 
      TagBox[
       GraphicsGroupBox[
        GraphicsComplexBox[{{0., 0.}, {6.049014748177263*^-16, -1.}, {
         1., -1.133107779529596*^-15}, {-7.044813998280222*^-16, 1.}, {-1., 
         3.6739403974420594`*^-16}}, {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
           ArrowBox[{{1, 2}, {1, 3}, {1, 4}, {1, 5}, {2, 3}, {2, 5}, {3, 4}, {
            4, 5}}, 0.02261146496815286]}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           DiskBox[1, 0.02261146496815286], DiskBox[2, 0.02261146496815286], 
           DiskBox[3, 0.02261146496815286], DiskBox[4, 0.02261146496815286], 
           DiskBox[5, 0.02261146496815286]}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    FormatType->TraditionalForm,
    FrameTicks->None], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4, 5, 6}, {Null, 
         SparseArray[
         Automatic, {6, 6}, 0, {
          1, {{0, 5, 8, 11, 14, 17, 20}, {{2}, {3}, {4}, {5}, {6}, {1}, {3}, {
            6}, {1}, {2}, {4}, {1}, {3}, {5}, {1}, {4}, {6}, {1}, {2}, {5}}}, 
           Pattern}]}, {GraphLayout -> "StarEmbedding"}]]}, 
      TagBox[
       GraphicsGroupBox[
        GraphicsComplexBox[{{0., 
         0.}, {-0.5877852522924726, -0.8090169943749468}, {
         0.5877852522924738, -0.8090169943749481}, {0.9510565162951533, 
         0.30901699437494634`}, {-7.044813998280222*^-16, 
         1.}, {-0.9510565162951538, 0.30901699437494945`}}, {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
           ArrowBox[{{1, 2}, {1, 3}, {1, 4}, {1, 5}, {1, 6}, {2, 3}, {2, 6}, {
            3, 4}, {4, 5}, {5, 6}}, 0.021812234931106983`]}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           DiskBox[1, 0.021812234931106983], DiskBox[2, 0.021812234931106983],
            DiskBox[3, 0.021812234931106983], 
           DiskBox[4, 0.021812234931106983], DiskBox[5, 0.021812234931106983],
            DiskBox[6, 0.021812234931106983]}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    FormatType->TraditionalForm,
    FrameTicks->None], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4, 5, 6, 7}, {Null, 
         SparseArray[
         Automatic, {7, 7}, 0, {
          1, {{0, 6, 9, 12, 15, 18, 21, 24}, {{2}, {3}, {4}, {5}, {6}, {7}, {
            1}, {3}, {7}, {1}, {2}, {4}, {1}, {3}, {5}, {1}, {4}, {6}, {1}, {
            5}, {7}, {1}, {2}, {6}}}, Pattern}]}, {
        GraphLayout -> "StarEmbedding"}]]}, 
      TagBox[
       GraphicsGroupBox[
        GraphicsComplexBox[{{0., 
         0.}, {-0.8660254037844384, -0.49999999999999933`}, {
         3.8285686989269494`*^-16, -1.}, {
         0.8660254037844389, -0.5000000000000012}, {0.8660254037844386, 
         0.4999999999999993}, {1.8369701987210297`*^-16, 
         1.}, {-0.8660254037844388, 0.5000000000000013}}, {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
           ArrowBox[{{1, 2}, {1, 3}, {1, 4}, {1, 5}, {1, 6}, {1, 7}, {2, 3}, {
            2, 7}, {3, 4}, {4, 5}, {5, 6}, {6, 7}}, 0.02261146496815286]}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           DiskBox[1, 0.02261146496815286], DiskBox[2, 0.02261146496815286], 
           DiskBox[3, 0.02261146496815286], DiskBox[4, 0.02261146496815286], 
           DiskBox[5, 0.02261146496815286], DiskBox[6, 0.02261146496815286], 
           DiskBox[7, 0.02261146496815286]}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    FormatType->TraditionalForm,
    FrameTicks->None], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4, 5, 6, 7, 8}, {Null, 
         SparseArray[
         Automatic, {8, 8}, 0, {
          1, {{0, 7, 10, 13, 16, 19, 22, 25, 28}, {{2}, {3}, {4}, {5}, {6}, {
            7}, {8}, {1}, {3}, {8}, {1}, {2}, {4}, {1}, {3}, {5}, {1}, {4}, {
            6}, {1}, {5}, {7}, {1}, {6}, {8}, {1}, {2}, {7}}}, Pattern}]}, {
        GraphLayout -> "StarEmbedding"}]]}, 
      TagBox[
       GraphicsGroupBox[
        GraphicsComplexBox[{{0., 
         0.}, {-0.9749279121818235, -0.22252093395631342`}, \
{-0.43388373911755757`, -0.9009688679024187}, {
         0.43388373911755884`, -0.9009688679024196}, {
         0.9749279121818237, -0.2225209339563155}, {0.7818314824680294, 
         0.6234898018587326}, {-7.044813998280222*^-16, 
         1.}, {-0.7818314824680302, 0.6234898018587351}}, {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
           ArrowBox[{{1, 2}, {1, 3}, {1, 4}, {1, 5}, {1, 6}, {1, 7}, {1, 8}, {
            2, 3}, {2, 8}, {3, 4}, {4, 5}, {5, 6}, {6, 7}, {7, 8}}, 
            0.02220329551621769]}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           DiskBox[1, 0.02220329551621769], DiskBox[2, 0.02220329551621769], 
           DiskBox[3, 0.02220329551621769], DiskBox[4, 0.02220329551621769], 
           DiskBox[5, 0.02220329551621769], DiskBox[6, 0.02220329551621769], 
           DiskBox[7, 0.02220329551621769], 
           DiskBox[8, 0.02220329551621769]}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    FormatType->TraditionalForm,
    FrameTicks->None], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9}, {Null, 
         SparseArray[
         Automatic, {9, 9}, 0, {
          1, {{0, 8, 11, 14, 17, 20, 23, 26, 29, 32}, {{2}, {3}, {4}, {5}, {
            6}, {7}, {8}, {9}, {1}, {3}, {9}, {1}, {2}, {4}, {1}, {3}, {5}, {
            1}, {4}, {6}, {1}, {5}, {7}, {1}, {6}, {8}, {1}, {7}, {9}, {1}, {
            2}, {8}}}, Pattern}]}, {GraphLayout -> "StarEmbedding"}]]}, 
      TagBox[
       GraphicsGroupBox[
        GraphicsComplexBox[{{0., 0.}, {-1., 
         1.0106430996148606`*^-15}, {-0.7071067811865471, \
-0.7071067811865468}, {6.049014748177263*^-16, -1.}, {
         0.7071067811865481, -0.7071067811865483}, {
         1., -1.133107779529596*^-15}, {0.707106781186547, 
         0.7071067811865467}, {-7.044813998280222*^-16, 
         1.}, {-0.707106781186548, 0.7071067811865483}}, {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
           ArrowBox[{{1, 2}, {1, 3}, {1, 4}, {1, 5}, {1, 6}, {1, 7}, {1, 8}, {
            1, 9}, {2, 3}, {2, 9}, {3, 4}, {4, 5}, {5, 6}, {6, 7}, {7, 8}, {8,
             9}}, 0.02261146496815286]}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           DiskBox[1, 0.02261146496815286], DiskBox[2, 0.02261146496815286], 
           DiskBox[3, 0.02261146496815286], DiskBox[4, 0.02261146496815286], 
           DiskBox[5, 0.02261146496815286], DiskBox[6, 0.02261146496815286], 
           DiskBox[7, 0.02261146496815286], DiskBox[8, 0.02261146496815286], 
           DiskBox[9, 0.02261146496815286]}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    FormatType->TraditionalForm,
    FrameTicks->None], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10}, {Null, 
         SparseArray[
         Automatic, {10, 10}, 0, {
          1, {{0, 9, 12, 15, 18, 21, 24, 27, 30, 33, 36}, {{2}, {3}, {4}, {
            5}, {6}, {7}, {8}, {9}, {10}, {1}, {3}, {10}, {1}, {2}, {4}, {
            1}, {3}, {5}, {1}, {4}, {6}, {1}, {5}, {7}, {1}, {6}, {8}, {1}, {
            7}, {9}, {1}, {8}, {10}, {1}, {2}, {9}}}, Pattern}]}, {
        GraphLayout -> "StarEmbedding"}]]}, 
      TagBox[
       GraphicsGroupBox[
        GraphicsComplexBox[{{0., 0.}, {-0.9848077530122081, 
         0.17364817766693114`}, {-0.8660254037844384, -0.49999999999999933`}, \
{-0.34202014332566844`, -0.9396926207859079}, {
         0.3420201433256691, -0.9396926207859085}, {
         0.8660254037844389, -0.5000000000000012}, {0.984807753012208, 
         0.17364817766692903`}, {0.6427876096865388, 
         0.7660444431189772}, {-7.044813998280222*^-16, 
         1.}, {-0.6427876096865399, 0.7660444431189788}}, {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
           ArrowBox[{{1, 2}, {1, 3}, {1, 4}, {1, 5}, {1, 6}, {1, 7}, {1, 8}, {
            1, 9}, {1, 10}, {2, 3}, {2, 10}, {3, 4}, {4, 5}, {5, 6}, {6, 7}, {
            7, 8}, {8, 9}, {9, 10}}, 0.022364449578799767`]}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           DiskBox[1, 0.022364449578799767], DiskBox[2, 0.022364449578799767],
            DiskBox[3, 0.022364449578799767], 
           DiskBox[4, 0.022364449578799767], DiskBox[5, 0.022364449578799767],
            DiskBox[6, 0.022364449578799767], 
           DiskBox[7, 0.022364449578799767], DiskBox[8, 0.022364449578799767],
            DiskBox[9, 0.022364449578799767], 
           DiskBox[10, 0.022364449578799767]}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    FormatType->TraditionalForm,
    FrameTicks->None], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}, {Null, 
         SparseArray[
         Automatic, {11, 11}, 0, {
          1, {{0, 10, 13, 16, 19, 22, 25, 28, 31, 34, 37, 40}, {{2}, {3}, {
            4}, {5}, {6}, {7}, {8}, {9}, {10}, {11}, {1}, {3}, {11}, {1}, {
            2}, {4}, {1}, {3}, {5}, {1}, {4}, {6}, {1}, {5}, {7}, {1}, {6}, {
            8}, {1}, {7}, {9}, {1}, {8}, {10}, {1}, {9}, {11}, {1}, {2}, {
            10}}}, Pattern}]}, {GraphLayout -> "StarEmbedding"}]]}, 
      TagBox[
       GraphicsGroupBox[
        GraphicsComplexBox[{{0., 0.}, {-0.9510565162951538, 
         0.3090169943749484}, {-0.9510565162951534, -0.30901699437494645`}, \
{-0.5877852522924726, -0.8090169943749468}, {6.049014748177263*^-16, -1.}, {
         0.5877852522924738, -0.8090169943749481}, {
         0.9510565162951539, -0.3090169943749485}, {0.9510565162951533, 
         0.30901699437494634`}, {0.5877852522924726, 
         0.8090169943749468}, {-7.044813998280222*^-16, 
         1.}, {-0.5877852522924737, 0.8090169943749487}}, {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
           ArrowBox[{{1, 2}, {1, 3}, {1, 4}, {1, 5}, {1, 6}, {1, 7}, {1, 8}, {
            1, 9}, {1, 10}, {1, 11}, {2, 3}, {2, 11}, {3, 4}, {4, 5}, {5, 
            6}, {6, 7}, {7, 8}, {8, 9}, {9, 10}, {10, 11}}, 
            0.02261146496815286]}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           DiskBox[1, 0.02261146496815286], DiskBox[2, 0.02261146496815286], 
           DiskBox[3, 0.02261146496815286], DiskBox[4, 0.02261146496815286], 
           DiskBox[5, 0.02261146496815286], DiskBox[6, 0.02261146496815286], 
           DiskBox[7, 0.02261146496815286], DiskBox[8, 0.02261146496815286], 
           DiskBox[9, 0.02261146496815286], DiskBox[10, 0.02261146496815286], 
           DiskBox[11, 0.02261146496815286]}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    FormatType->TraditionalForm,
    FrameTicks->None], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12}, {Null, 
         SparseArray[
         Automatic, {12, 12}, 0, {
          1, {{0, 11, 14, 17, 20, 23, 26, 29, 32, 35, 38, 41, 44}, {{2}, {
            3}, {4}, {5}, {6}, {7}, {8}, {9}, {10}, {11}, {12}, {1}, {3}, {
            12}, {1}, {2}, {4}, {1}, {3}, {5}, {1}, {4}, {6}, {1}, {5}, {7}, {
            1}, {6}, {8}, {1}, {7}, {9}, {1}, {8}, {10}, {1}, {9}, {11}, {
            1}, {10}, {12}, {1}, {2}, {11}}}, Pattern}]}, {
        GraphLayout -> "StarEmbedding"}]]}, 
      TagBox[
       GraphicsGroupBox[
        GraphicsComplexBox[{{0., 0.}, {-0.9096319953545187, 
         0.4154150130018871}, {-0.9898214418809327, -0.14231483827328406`}, \
{-0.7557495743542579, -0.6548607339452843}, {-0.28173255684142917`, \
-0.9594929736144971}, {0.28173255684143034`, -0.9594929736144975}, {
         0.7557495743542585, -0.6548607339452855}, {
         0.9898214418809328, -0.14231483827328617`}, {0.9096319953545181, 
         0.41541501300188516`}, {0.5406408174555974, 
         0.8412535328311802}, {-7.044813998280222*^-16, 
         1.}, {-0.5406408174555979, 0.8412535328311815}}, {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
           ArrowBox[{{1, 2}, {1, 3}, {1, 4}, {1, 5}, {1, 6}, {1, 7}, {1, 8}, {
            1, 9}, {1, 10}, {1, 11}, {1, 12}, {2, 3}, {2, 12}, {3, 4}, {4, 
            5}, {5, 6}, {6, 7}, {7, 8}, {8, 9}, {9, 10}, {10, 11}, {11, 12}}, 
            0.02244607451670738]}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           DiskBox[1, 0.02244607451670738], DiskBox[2, 0.02244607451670738], 
           DiskBox[3, 0.02244607451670738], DiskBox[4, 0.02244607451670738], 
           DiskBox[5, 0.02244607451670738], DiskBox[6, 0.02244607451670738], 
           DiskBox[7, 0.02244607451670738], DiskBox[8, 0.02244607451670738], 
           DiskBox[9, 0.02244607451670738], DiskBox[10, 0.02244607451670738], 
           DiskBox[11, 0.02244607451670738], 
           DiskBox[12, 0.02244607451670738]}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    FormatType->TraditionalForm,
    FrameTicks->None]}], "}"}]], "Output",
 CellChangeTimes->{{3.877292899138697*^9, 3.877292908230812*^9}},
 CellLabel->
  "Out[137]=",ExpressionUUID->"16c866fb-0b5b-4e2a-9ded-ab4a7b6da2fa"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindFundamentalCycles", "[", 
  RowBox[{"WheelGraph", "[", "7", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8772929120901814`*^9, 3.87729295146204*^9}},
 CellLabel->
  "In[138]:=",ExpressionUUID->"b6424514-4963-4d53-8fd7-48113cd5ed58"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"7", "\[UndirectedEdge]", "1"}], ",", 
     RowBox[{"1", "\[UndirectedEdge]", "6"}], ",", 
     RowBox[{"6", "\[UndirectedEdge]", "7"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"6", "\[UndirectedEdge]", "1"}], ",", 
     RowBox[{"1", "\[UndirectedEdge]", "5"}], ",", 
     RowBox[{"5", "\[UndirectedEdge]", "6"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"5", "\[UndirectedEdge]", "1"}], ",", 
     RowBox[{"1", "\[UndirectedEdge]", "4"}], ",", 
     RowBox[{"4", "\[UndirectedEdge]", "5"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"4", "\[UndirectedEdge]", "1"}], ",", 
     RowBox[{"1", "\[UndirectedEdge]", "3"}], ",", 
     RowBox[{"3", "\[UndirectedEdge]", "4"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"7", "\[UndirectedEdge]", "1"}], ",", 
     RowBox[{"1", "\[UndirectedEdge]", "2"}], ",", 
     RowBox[{"2", "\[UndirectedEdge]", "7"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"3", "\[UndirectedEdge]", "1"}], ",", 
     RowBox[{"1", "\[UndirectedEdge]", "2"}], ",", 
     RowBox[{"2", "\[UndirectedEdge]", "3"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.877292951727687*^9},
 CellLabel->
  "Out[138]=",ExpressionUUID->"f03940e6-f9aa-4cd2-a6f4-1e46fb41fa90"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "[", 
  RowBox[{"FindFundamentalCycles", "[", 
   RowBox[{"WheelGraph", "[", "7", "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8772929539620676`*^9, 3.8772929549376287`*^9}},
 CellLabel->
  "In[139]:=",ExpressionUUID->"8fadd81b-6cad-4ca7-be03-9e5e3f2c426e"],

Cell[BoxData["6"], "Output",
 CellChangeTimes->{3.8772929552345486`*^9},
 CellLabel->
  "Out[139]=",ExpressionUUID->"78734cd1-f373-4567-b102-aca93eb073a1"]
}, Open  ]],

Cell["Find all cycles of wheel graph 7.", "Text",
 CellChangeTimes->{{3.877292986069931*^9, 
  3.87729299428339*^9}},ExpressionUUID->"1f9245b9-bddf-412d-a456-\
e22c41f01bd5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindCycle", "[", 
  RowBox[{
   RowBox[{"WheelGraph", "[", "7", "]"}], ",", "Infinity", ",", "All"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8772929539620676`*^9, 3.8772929805075316`*^9}},
 CellLabel->
  "In[142]:=",ExpressionUUID->"b778bb10-a686-42ac-b2d8-dbf4ef18b68c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"1", "\[UndirectedEdge]", "3"}], ",", 
     RowBox[{"3", "\[UndirectedEdge]", "4"}], ",", 
     RowBox[{"4", "\[UndirectedEdge]", "1"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"1", "\[UndirectedEdge]", "4"}], ",", 
     RowBox[{"4", "\[UndirectedEdge]", "5"}], ",", 
     RowBox[{"5", "\[UndirectedEdge]", "1"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"2", "\[UndirectedEdge]", "7"}], ",", 
     RowBox[{"7", "\[UndirectedEdge]", "1"}], ",", 
     RowBox[{"1", "\[UndirectedEdge]", "2"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"2", "\[UndirectedEdge]", "3"}], ",", 
     RowBox[{"3", "\[UndirectedEdge]", "1"}], ",", 
     RowBox[{"1", "\[UndirectedEdge]", "2"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"1", "\[UndirectedEdge]", "5"}], ",", 
     RowBox[{"5", "\[UndirectedEdge]", "6"}], ",", 
     RowBox[{"6", "\[UndirectedEdge]", "1"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"1", "\[UndirectedEdge]", "7"}], ",", 
     RowBox[{"7", "\[UndirectedEdge]", "6"}], ",", 
     RowBox[{"6", "\[UndirectedEdge]", "1"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"1", "\[UndirectedEdge]", "3"}], ",", 
     RowBox[{"3", "\[UndirectedEdge]", "2"}], ",", 
     RowBox[{"2", "\[UndirectedEdge]", "7"}], ",", 
     RowBox[{"7", "\[UndirectedEdge]", "1"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"1", "\[UndirectedEdge]", "3"}], ",", 
     RowBox[{"3", "\[UndirectedEdge]", "4"}], ",", 
     RowBox[{"4", "\[UndirectedEdge]", "5"}], ",", 
     RowBox[{"5", "\[UndirectedEdge]", "1"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"5", "\[UndirectedEdge]", "1"}], ",", 
     RowBox[{"1", "\[UndirectedEdge]", "7"}], ",", 
     RowBox[{"7", "\[UndirectedEdge]", "6"}], ",", 
     RowBox[{"6", "\[UndirectedEdge]", "5"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"2", "\[UndirectedEdge]", "3"}], ",", 
     RowBox[{"3", "\[UndirectedEdge]", "4"}], ",", 
     RowBox[{"4", "\[UndirectedEdge]", "1"}], ",", 
     RowBox[{"1", "\[UndirectedEdge]", "2"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"1", "\[UndirectedEdge]", "2"}], ",", 
     RowBox[{"2", "\[UndirectedEdge]", "7"}], ",", 
     RowBox[{"7", "\[UndirectedEdge]", "6"}], ",", 
     RowBox[{"6", "\[UndirectedEdge]", "1"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"1", "\[UndirectedEdge]", "4"}], ",", 
     RowBox[{"4", "\[UndirectedEdge]", "5"}], ",", 
     RowBox[{"5", "\[UndirectedEdge]", "6"}], ",", 
     RowBox[{"6", "\[UndirectedEdge]", "1"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"1", "\[UndirectedEdge]", "4"}], ",", 
     RowBox[{"4", "\[UndirectedEdge]", "3"}], ",", 
     RowBox[{"3", "\[UndirectedEdge]", "2"}], ",", 
     RowBox[{"2", "\[UndirectedEdge]", "7"}], ",", 
     RowBox[{"7", "\[UndirectedEdge]", "1"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"5", "\[UndirectedEdge]", "4"}], ",", 
     RowBox[{"4", "\[UndirectedEdge]", "1"}], ",", 
     RowBox[{"1", "\[UndirectedEdge]", "7"}], ",", 
     RowBox[{"7", "\[UndirectedEdge]", "6"}], ",", 
     RowBox[{"6", "\[UndirectedEdge]", "5"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"2", "\[UndirectedEdge]", "7"}], ",", 
     RowBox[{"7", "\[UndirectedEdge]", "6"}], ",", 
     RowBox[{"6", "\[UndirectedEdge]", "5"}], ",", 
     RowBox[{"5", "\[UndirectedEdge]", "1"}], ",", 
     RowBox[{"1", "\[UndirectedEdge]", "2"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"2", "\[UndirectedEdge]", "3"}], ",", 
     RowBox[{"3", "\[UndirectedEdge]", "4"}], ",", 
     RowBox[{"4", "\[UndirectedEdge]", "5"}], ",", 
     RowBox[{"5", "\[UndirectedEdge]", "1"}], ",", 
     RowBox[{"1", "\[UndirectedEdge]", "2"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"1", "\[UndirectedEdge]", "3"}], ",", 
     RowBox[{"3", "\[UndirectedEdge]", "2"}], ",", 
     RowBox[{"2", "\[UndirectedEdge]", "7"}], ",", 
     RowBox[{"7", "\[UndirectedEdge]", "6"}], ",", 
     RowBox[{"6", "\[UndirectedEdge]", "1"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"1", "\[UndirectedEdge]", "3"}], ",", 
     RowBox[{"3", "\[UndirectedEdge]", "4"}], ",", 
     RowBox[{"4", "\[UndirectedEdge]", "5"}], ",", 
     RowBox[{"5", "\[UndirectedEdge]", "6"}], ",", 
     RowBox[{"6", "\[UndirectedEdge]", "1"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"1", "\[UndirectedEdge]", "7"}], ",", 
     RowBox[{"7", "\[UndirectedEdge]", "2"}], ",", 
     RowBox[{"2", "\[UndirectedEdge]", "3"}], ",", 
     RowBox[{"3", "\[UndirectedEdge]", "4"}], ",", 
     RowBox[{"4", "\[UndirectedEdge]", "5"}], ",", 
     RowBox[{"5", "\[UndirectedEdge]", "1"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"5", "\[UndirectedEdge]", "1"}], ",", 
     RowBox[{"1", "\[UndirectedEdge]", "3"}], ",", 
     RowBox[{"3", "\[UndirectedEdge]", "2"}], ",", 
     RowBox[{"2", "\[UndirectedEdge]", "7"}], ",", 
     RowBox[{"7", "\[UndirectedEdge]", "6"}], ",", 
     RowBox[{"6", "\[UndirectedEdge]", "5"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"5", "\[UndirectedEdge]", "4"}], ",", 
     RowBox[{"4", "\[UndirectedEdge]", "3"}], ",", 
     RowBox[{"3", "\[UndirectedEdge]", "1"}], ",", 
     RowBox[{"1", "\[UndirectedEdge]", "7"}], ",", 
     RowBox[{"7", "\[UndirectedEdge]", "6"}], ",", 
     RowBox[{"6", "\[UndirectedEdge]", "5"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"5", "\[UndirectedEdge]", "4"}], ",", 
     RowBox[{"4", "\[UndirectedEdge]", "3"}], ",", 
     RowBox[{"3", "\[UndirectedEdge]", "2"}], ",", 
     RowBox[{"2", "\[UndirectedEdge]", "7"}], ",", 
     RowBox[{"7", "\[UndirectedEdge]", "6"}], ",", 
     RowBox[{"6", "\[UndirectedEdge]", "5"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"2", "\[UndirectedEdge]", "7"}], ",", 
     RowBox[{"7", "\[UndirectedEdge]", "6"}], ",", 
     RowBox[{"6", "\[UndirectedEdge]", "5"}], ",", 
     RowBox[{"5", "\[UndirectedEdge]", "4"}], ",", 
     RowBox[{"4", "\[UndirectedEdge]", "1"}], ",", 
     RowBox[{"1", "\[UndirectedEdge]", "2"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"1", "\[UndirectedEdge]", "2"}], ",", 
     RowBox[{"2", "\[UndirectedEdge]", "3"}], ",", 
     RowBox[{"3", "\[UndirectedEdge]", "4"}], ",", 
     RowBox[{"4", "\[UndirectedEdge]", "5"}], ",", 
     RowBox[{"5", "\[UndirectedEdge]", "6"}], ",", 
     RowBox[{"6", "\[UndirectedEdge]", "1"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"1", "\[UndirectedEdge]", "4"}], ",", 
     RowBox[{"4", "\[UndirectedEdge]", "3"}], ",", 
     RowBox[{"3", "\[UndirectedEdge]", "2"}], ",", 
     RowBox[{"2", "\[UndirectedEdge]", "7"}], ",", 
     RowBox[{"7", "\[UndirectedEdge]", "6"}], ",", 
     RowBox[{"6", "\[UndirectedEdge]", "1"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"5", "\[UndirectedEdge]", "1"}], ",", 
     RowBox[{"1", "\[UndirectedEdge]", "4"}], ",", 
     RowBox[{"4", "\[UndirectedEdge]", "3"}], ",", 
     RowBox[{"3", "\[UndirectedEdge]", "2"}], ",", 
     RowBox[{"2", "\[UndirectedEdge]", "7"}], ",", 
     RowBox[{"7", "\[UndirectedEdge]", "6"}], ",", 
     RowBox[{"6", "\[UndirectedEdge]", "5"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"5", "\[UndirectedEdge]", "4"}], ",", 
     RowBox[{"4", "\[UndirectedEdge]", "1"}], ",", 
     RowBox[{"1", "\[UndirectedEdge]", "3"}], ",", 
     RowBox[{"3", "\[UndirectedEdge]", "2"}], ",", 
     RowBox[{"2", "\[UndirectedEdge]", "7"}], ",", 
     RowBox[{"7", "\[UndirectedEdge]", "6"}], ",", 
     RowBox[{"6", "\[UndirectedEdge]", "5"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"2", "\[UndirectedEdge]", "7"}], ",", 
     RowBox[{"7", "\[UndirectedEdge]", "6"}], ",", 
     RowBox[{"6", "\[UndirectedEdge]", "5"}], ",", 
     RowBox[{"5", "\[UndirectedEdge]", "4"}], ",", 
     RowBox[{"4", "\[UndirectedEdge]", "3"}], ",", 
     RowBox[{"3", "\[UndirectedEdge]", "1"}], ",", 
     RowBox[{"1", "\[UndirectedEdge]", "2"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"2", "\[UndirectedEdge]", "3"}], ",", 
     RowBox[{"3", "\[UndirectedEdge]", "4"}], ",", 
     RowBox[{"4", "\[UndirectedEdge]", "5"}], ",", 
     RowBox[{"5", "\[UndirectedEdge]", "6"}], ",", 
     RowBox[{"6", "\[UndirectedEdge]", "7"}], ",", 
     RowBox[{"7", "\[UndirectedEdge]", "1"}], ",", 
     RowBox[{"1", "\[UndirectedEdge]", "2"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"1", "\[UndirectedEdge]", "5"}], ",", 
     RowBox[{"5", "\[UndirectedEdge]", "4"}], ",", 
     RowBox[{"4", "\[UndirectedEdge]", "3"}], ",", 
     RowBox[{"3", "\[UndirectedEdge]", "2"}], ",", 
     RowBox[{"2", "\[UndirectedEdge]", "7"}], ",", 
     RowBox[{"7", "\[UndirectedEdge]", "6"}], ",", 
     RowBox[{"6", "\[UndirectedEdge]", "1"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"1", "\[UndirectedEdge]", "7"}], ",", 
     RowBox[{"7", "\[UndirectedEdge]", "2"}], ",", 
     RowBox[{"2", "\[UndirectedEdge]", "3"}], ",", 
     RowBox[{"3", "\[UndirectedEdge]", "4"}], ",", 
     RowBox[{"4", "\[UndirectedEdge]", "5"}], ",", 
     RowBox[{"5", "\[UndirectedEdge]", "6"}], ",", 
     RowBox[{"6", "\[UndirectedEdge]", "1"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.8772929714203243`*^9, 3.8772929808980656`*^9}},
 CellLabel->
  "Out[142]=",ExpressionUUID->"ee4b4841-5b65-4738-94fb-3b440e149466"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "[", 
  RowBox[{"FindCycle", "[", 
   RowBox[{
    RowBox[{"WheelGraph", "[", "7", "]"}], ",", "Infinity", ",", "All"}], 
   "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.877293010354054*^9, 3.877293011406269*^9}},
 CellLabel->
  "In[143]:=",ExpressionUUID->"860b8b87-2b15-4fe7-abb0-a9c58f98cdcc"],

Cell[BoxData["31"], "Output",
 CellChangeTimes->{3.877293011687521*^9},
 CellLabel->
  "Out[143]=",ExpressionUUID->"5eecdc57-95a5-4be1-bff6-41a9c90ad0d2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"Length", "[", 
    RowBox[{"FindCycle", "[", 
     RowBox[{
      RowBox[{"WheelGraph", "[", "i", "]"}], ",", "Infinity", ",", "All"}], 
     "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "3", ",", "18"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8772930179724817`*^9, 3.8772930345746655`*^9}, {
  3.8772930661017356`*^9, 3.8772930741485786`*^9}},
 CellLabel->
  "In[150]:=",ExpressionUUID->"223ba7d8-cfc9-4e88-8113-e728aa322fd3"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "2", ",", "7", ",", "13", ",", "21", ",", "31", ",", "43", ",", "57", ",", 
   "73", ",", "91", ",", "111", ",", "133", ",", "157", ",", "183", ",", 
   "211", ",", "241", ",", "273"}], "}"}]], "Output",
 CellChangeTimes->{{3.8772930274428654`*^9, 3.87729303484026*^9}, 
   3.8772930746016507`*^9},
 CellLabel->
  "Out[150]=",ExpressionUUID->"9e14761b-de8b-4f16-9b67-183b3a9f3b29"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindSequenceFunction", "[", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"Length", "[", 
     RowBox[{"FindCycle", "[", 
      RowBox[{
       RowBox[{"WheelGraph", "[", "i", "]"}], ",", "Infinity", ",", "All"}], 
      "]"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "3", ",", "18"}], "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.87729302892727*^9, 3.8772930647266426`*^9}},
 CellLabel->
  "In[149]:=",ExpressionUUID->"595553f5-f3cd-4e9f-bc1d-8da19da6ba94"],

Cell[BoxData[
 InterpretationBox[
  TemplateBox[<|"head" -> "DifferenceRoot", "big" -> GridBox[{{
        RowBox[{
          RowBox[{"8", "+", 
            RowBox[{"6", " ", "\[FormalN]"}], "+", 
            RowBox[{
              RowBox[{"(", 
                RowBox[{"1", "-", "\[FormalN]"}], ")"}], " ", 
              RowBox[{"\[FormalY]", "[", "\[FormalN]", "]"}]}], "+", 
            RowBox[{
              RowBox[{"(", 
                RowBox[{
                  RowBox[{"-", "3"}], "+", "\[FormalN]"}], ")"}], " ", 
              RowBox[{"\[FormalY]", "[", 
                RowBox[{"1", "+", "\[FormalN]"}], "]"}]}]}], "\[Equal]", 
          "0"}]}, {
        RowBox[{
          RowBox[{"\[FormalY]", "[", "1", "]"}], "\[Equal]", "2"}]}, {
        RowBox[{
          RowBox[{"\[FormalY]", "[", "2", "]"}], "\[Equal]", "7"}]}, {
        RowBox[{
          RowBox[{"\[FormalY]", "[", "3", "]"}], "\[Equal]", "13"}]}, {
        RowBox[{
          RowBox[{"\[FormalY]", "[", "4", "]"}], "\[Equal]", "21"}]}}, 
      BaseStyle -> {"HolonomicInnerGrid"}], "small" -> 
    RowBox[{"\[FormalY]", "[", 
       RowBox[{"1", "+", "\[FormalN]"}], "]"}], "branchcuts" -> "None"|>,
   "HolonomicDisplay"],
  DifferenceRoot[
   Function[{\[FormalY], \[FormalN]}, {
    8 + 6 \[FormalN] + (
        1 - \[FormalN]) \[FormalY][\[FormalN]] + (-3 + \[FormalN]) \[FormalY][
        1 + \[FormalN]] == 0, \[FormalY][1] == 2, \[FormalY][2] == 
     7, \[FormalY][3] == 13, \[FormalY][4] == 21}]]]], "Output",
 CellChangeTimes->{{3.8772930306928596`*^9, 3.8772930589923115`*^9}},
 CellLabel->
  "Out[149]=",ExpressionUUID->"c1aebe95-dbe9-426e-96eb-53638c75061e"]
}, Open  ]],

Cell["Donald Knuth doesn\[CloseCurlyQuote]t give a particular answer for \
this.", "Text",
 CellChangeTimes->{{3.8772931321881638`*^9, 
  3.8772931394594975`*^9}},ExpressionUUID->"5712bb4d-0426-4714-a142-\
a71833804867"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Exercise 91", "Section",
 CellChangeTimes->{{3.8772932283224263`*^9, 
  3.877293234494275*^9}},ExpressionUUID->"d3562d19-498f-4e21-a474-\
a2a46ab6f918"],

Cell[TextData[{
 "Draw diagrams for the 4-vertex graphs (a)",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["K", "2"], 
    SubscriptBox["\[EmptySquare]K", "2"]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "f36938e6-7a82-43bf-bbc0-756ec33ab890"]
}], "Text",
 CellChangeTimes->{{3.877293236900525*^9, 
  3.877293306444003*^9}},ExpressionUUID->"864a8031-aa54-412c-8ac4-\
e6b8e4818a77"],

Cell["The symbol \[EmptySquare] represents the Cartesian graph product.", \
"Text",
 CellChangeTimes->{{3.877293333062315*^9, 3.8772933448878093`*^9}, {
  3.877293398929612*^9, 
  3.8772934019608097`*^9}},ExpressionUUID->"0d3a7ff9-ea46-4977-9a30-\
218cc451c83f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GraphProduct", "[", 
  RowBox[{
   RowBox[{"CompleteGraph", "[", "2", "]"}], ",", 
   RowBox[{"CompleteGraph", "[", "2", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.877293345575308*^9, 3.877293353387489*^9}},
 CellLabel->
  "In[154]:=",ExpressionUUID->"9af18d7d-f29e-4703-99ed-62593c45ceca"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{{1, 1}, {2, 1}, {1, 2}, {2, 2}}, {Null, 
       SparseArray[
       Automatic, {4, 4}, 0, {
        1, {{0, 2, 4, 6, 8}, {{2}, {3}, {1}, {4}, {1}, {4}, {2}, {3}}}, 
         Pattern}]}, {
      VertexCoordinates -> {{2., 0.}, {0., 0.}, {0., 0.}, {-2., 0.}}}]]}, 
    TagBox[
     GraphicsGroupBox[
      GraphicsComplexBox[{{2., 0.}, {0., 0.}, {0., 0.}, {-2., 0.}}, {
        {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
         ArrowBox[{{1, 2}, {1, 3}, {2, 4}, {3, 4}}, 0.03700564971751412]}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         DiskBox[1, 0.03700564971751412], DiskBox[2, 0.03700564971751412], 
         DiskBox[3, 0.03700564971751412], DiskBox[4, 0.03700564971751412]}}]],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None]], "Output",
 CellChangeTimes->{3.8772933537624836`*^9},
 CellLabel->
  "Out[154]=",ExpressionUUID->"9e62960c-c71e-4ffa-8adf-2ddf732e5cf7"]
}, Open  ]],

Cell[TextData[{
 "(b) ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["K", "2"], "\[CircleTimes]", 
    SubscriptBox["K", "2"]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "9f8e6538-257c-442a-a79c-083ba5e9b26f"],
 ". The symbol \[CircleTimes] represents the juxtaposition, or direct sum of \
two graphs. I think I have the right function."
}], "Text",
 CellChangeTimes->{{3.8772933615167046`*^9, 3.8772934355432615`*^9}, {
  3.877293481205165*^9, 
  3.877293487580169*^9}},ExpressionUUID->"eed58341-fe43-4dec-ab46-\
3c146b928039"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GraphDisjointUnion", "[", 
  RowBox[{
   RowBox[{"CompleteGraph", "[", "2", "]"}], ",", 
   RowBox[{"CompleteGraph", "[", "2", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8772934390119514`*^9, 3.8772934779469037`*^9}},
 CellLabel->
  "In[156]:=",ExpressionUUID->"6126f726-5452-4c18-8f9d-e935f1190db7"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{1, 2, 3, 4}, {Null, {{1, 2}, {3, 4}}}]]}, 
    TagBox[
     GraphicsGroupBox[
      GraphicsComplexBox[{{1.12501, -0.37503000000000003`}, {
       0.12501000000000007`, -0.37503000000000003`}, {1.12501, -0.12501}, {
       0.12501000000000007`, -0.12501}}, {
        {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
         ArrowBox[{{1, 2}, {3, 4}}, 0.01273]}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         DiskBox[1, 0.01273], DiskBox[2, 0.01273], DiskBox[3, 0.01273], 
         DiskBox[4, 0.01273]}}]],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None]], "Output",
 CellChangeTimes->{{3.8772934501887302`*^9, 3.877293478290639*^9}},
 CellLabel->
  "Out[156]=",ExpressionUUID->"d4e520ba-73cf-4568-b212-bcee31114c26"]
}, Open  ]],

Cell["\<\
Later on the symbol \[CircleTimes] is also used for the conjunction or direct \
product. I\[CloseCurlyQuote]m not sure if this is implemented in Mathematica \
or not yet.\
\>", "Text",
 CellChangeTimes->{{3.8772936598632336`*^9, 3.8772936753955173`*^9}, {
  3.877293793727059*^9, 
  3.8772938034146004`*^9}},ExpressionUUID->"35504b3b-881e-4fbf-a174-\
7189501297f5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GraphProduct", "[", 
  RowBox[{
   RowBox[{"CompleteGraph", "[", "2", "]"}], ",", 
   RowBox[{"CompleteGraph", "[", "2", "]"}], ",", "\"\<Conormal\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8772934390119514`*^9, 3.8772934779469037`*^9}, {
  3.8772936774893436`*^9, 3.877293685331019*^9}, {3.8772937884509907`*^9, 
  3.8772937902635007`*^9}},
 CellLabel->
  "In[158]:=",ExpressionUUID->"c03e372c-501d-46dc-a007-cd570db632f1"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{{1, 1}, {2, 1}, {1, 2}, {2, 2}}, {Null, 
       SparseArray[
       Automatic, {4, 4}, 0, {
        1, {{0, 3, 6, 9, 12}, {{2}, {3}, {4}, {1}, {3}, {4}, {1}, {2}, {4}, {
          1}, {2}, {3}}}, Pattern}]}, {
      VertexCoordinates -> {{2., 0.}, {0., 0.}, {0., 0.}, {-2., 0.}}}]]}, 
    TagBox[
     GraphicsGroupBox[
      GraphicsComplexBox[{{2., 0.}, {0., 0.}, {0., 0.}, {-2., 0.}}, {
        {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
         ArrowBox[{{1, 2}, {1, 3}, {1, 4}, {2, 3}, {2, 4}, {3, 4}}, 
          0.03700564971751412]}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         DiskBox[1, 0.03700564971751412], DiskBox[2, 0.03700564971751412], 
         DiskBox[3, 0.03700564971751412], DiskBox[4, 0.03700564971751412]}}]],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None]], "Output",
 CellChangeTimes->{3.8772936867223167`*^9, 3.877293790685395*^9},
 CellLabel->
  "Out[158]=",ExpressionUUID->"3640a98b-ab89-4dd2-8de0-76495c95650a"]
}, Open  ]],

Cell[TextData[{
 "(c) ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["K", "2"], "symbol", " ", 
    SubscriptBox["K", "2"]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "109a5339-1317-4b1d-bd0b-0d1edb33ff5f"],
 ". Mathematica doesn\[CloseCurlyQuote]t support the next symbol, which is \
like a square with an X through its center, similar to the tensor product \
symbol used in part b but with a square instead of a circle."
}], "Text",
 CellChangeTimes->{{3.877293498904233*^9, 3.8772935053760448`*^9}, {
  3.877293577220499*^9, 
  3.877293619000373*^9}},ExpressionUUID->"863d7b98-7bd3-44c0-aafd-\
ad0c42c9edb7"],

Cell["\<\
I\[CloseCurlyQuote]m going to move onto another exercise because I\
\[CloseCurlyQuote]m not sure which graph product to use.\
\>", "Text",
 CellChangeTimes->{{3.877293883452829*^9, 
  3.877293900506359*^9}},ExpressionUUID->"4fdef808-6e45-4317-bf66-\
7a491db07a8a"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Exercise 124", "Section",
 CellChangeTimes->{{3.8772939043656397`*^9, 
  3.877293914912547*^9}},ExpressionUUID->"d5e6f787-64c8-4cbf-a77b-\
46b5cfffbc46"],

Cell["\<\
What is the chromatic number of the Chv\[AGrave]tal graph, Fig. 2(f)?\
\>", "Text",
 CellChangeTimes->{{3.877293916537543*^9, 
  3.8772939502462254`*^9}},ExpressionUUID->"093c2604-e706-4b07-9a5a-\
04bbee4f069f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GraphData", "[", 
  RowBox[{"\"\<ChvatalGraph\>\"", ",", "\"\<ChromaticNumber\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8772939515587015`*^9, 3.877293958636795*^9}},
 CellLabel->
  "In[159]:=",ExpressionUUID->"73e6179c-f327-43e2-92a3-26df0deea4ff"],

Cell[BoxData["4"], "Output",
 CellChangeTimes->{3.877293958871185*^9},
 CellLabel->
  "Out[159]=",ExpressionUUID->"34c399f6-e9f7-4541-b43b-6abf0cf8cade"]
}, Open  ]],

Cell["Color the nodes:", "Text",
 CellChangeTimes->{{3.877293970936225*^9, 
  3.877293973410573*^9}},ExpressionUUID->"21427d86-43b3-45c7-9695-\
b6c22684e61c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ColorGraphVertices", "[", 
  RowBox[{
   RowBox[{"GraphData", "[", "\"\<ChvatalGraph\>\"", "]"}], ",", 
   RowBox[{"ImageSize", "->", "Large"}], ",", 
   RowBox[{"VertexSize", "->", "Large"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8772939746292753`*^9, 3.877294000237897*^9}},
 CellLabel->
  "In[162]:=",ExpressionUUID->"af22e6f9-caf1-4f16-8737-eb749250baa8"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12}, {Null, 
       SparseArray[
       Automatic, {12, 12}, 0, {
        1, {{0, 4, 8, 12, 16, 20, 24, 28, 32, 36, 40, 44, 48}, {{7}, {10}, {
          11}, {12}, {3}, {6}, {8}, {11}, {2}, {7}, {9}, {12}, {8}, {10}, {
          11}, {12}, {6}, {9}, {11}, {12}, {2}, {5}, {7}, {10}, {1}, {3}, {
          6}, {8}, {2}, {4}, {7}, {9}, {3}, {5}, {8}, {10}, {1}, {4}, {6}, {
          9}, {1}, {2}, {4}, {5}, {1}, {3}, {4}, {5}}}, Pattern}]}, {
      GraphLayout -> {"Dimension" -> 2}, ImageSize -> Large, 
       VertexCoordinates -> {{-0.9511, 0.309}, {-0.5878, -0.809}, {
         0.5878, -0.809}, {0.9511, 0.309}, {0, 1.}, {-1.9021, 
         0.618}, {-1.1756, -1.618}, {1.1756, -1.618}, {1.9021, 0.618}, {
         0, 2.}, {-0.3, 0}, {0.3, 0}}, VertexSize -> {Large}, 
       VertexStyle -> {
        6 -> RGBColor[0.448, 0.69232, 0.1538], 1 -> 
         RGBColor[0.91, 0.318, 0.243], 9 -> 
         RGBColor[0.34398, 0.49112, 0.89936], 2 -> 
         RGBColor[0.34398, 0.49112, 0.89936], 8 -> 
         RGBColor[0.97, 0.606, 0.081], 3 -> RGBColor[0.91, 0.318, 0.243], 4 -> 
         RGBColor[0.91, 0.318, 0.243], 11 -> RGBColor[0.97, 0.606, 0.081], 10 -> 
         RGBColor[0.97, 0.606, 0.081], 7 -> 
         RGBColor[0.34398, 0.49112, 0.89936], 5 -> 
         RGBColor[0.91, 0.318, 0.243], 12 -> 
         RGBColor[0.34398, 0.49112, 0.89936]}}]]}, 
    TagBox[
     GraphicsGroupBox[
      GraphicsComplexBox[{{-0.9511, 0.309}, {-0.5878, -0.809}, {
       0.5878, -0.809}, {0.9511, 0.309}, {0., 1.}, {-1.9021, 
       0.618}, {-1.1756, -1.618}, {1.1756, -1.618}, {1.9021, 0.618}, {0., 
       2.}, {-0.3, 0.}, {0.3, 0.}}, {
        {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
         ArrowBox[{{1, 7}, {1, 10}, {1, 11}, {1, 12}, {2, 3}, {2, 6}, {2, 
          8}, {2, 11}, {3, 7}, {3, 9}, {3, 12}, {4, 8}, {4, 10}, {4, 11}, {4, 
          12}, {5, 6}, {5, 9}, {5, 11}, {5, 12}, {6, 7}, {6, 10}, {7, 8}, {8, 
          9}, {9, 10}}, 0.12]}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         {RGBColor[0.91, 0.318, 0.243], DiskBox[1, 0.12]}, 
         {RGBColor[0.34398, 0.49112, 0.89936], DiskBox[2, 0.12]}, 
         {RGBColor[0.91, 0.318, 0.243], DiskBox[3, 0.12]}, 
         {RGBColor[0.91, 0.318, 0.243], DiskBox[4, 0.12]}, 
         {RGBColor[0.91, 0.318, 0.243], DiskBox[5, 0.12]}, 
         {RGBColor[0.448, 0.69232, 0.1538], DiskBox[6, 0.12]}, 
         {RGBColor[0.34398, 0.49112, 0.89936], DiskBox[7, 0.12]}, 
         {RGBColor[0.97, 0.606, 0.081], DiskBox[8, 0.12]}, 
         {RGBColor[0.34398, 0.49112, 0.89936], DiskBox[9, 0.12]}, 
         {RGBColor[0.97, 0.606, 0.081], DiskBox[10, 0.12]}, 
         {RGBColor[0.97, 0.606, 0.081], DiskBox[11, 0.12]}, 
         {RGBColor[0.34398, 0.49112, 0.89936], DiskBox[12, 0.12]}}}]],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None,
  ImageSize->Large]], "Output",
 CellChangeTimes->{{3.8772939814729958`*^9, 3.8772940005346265`*^9}},
 CellLabel->
  "Out[162]=",ExpressionUUID->"d9525913-48a7-46bf-a887-7f4ffb1f2c88"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Exercise 129", "Section",
 CellChangeTimes->{{3.8772940245552173`*^9, 3.877294027367803*^9}, 
   3.877294758273178*^9},ExpressionUUID->"37e57f09-bcd6-4d61-a703-\
05acf21eb6d6"],

Cell["Describe the maximal cliques of the 8x8 queen graph (37).", "Text",
 CellChangeTimes->{{3.8772940370662336`*^9, 
  3.8772940580881643`*^9}},ExpressionUUID->"47a7c21a-0b4b-456a-9764-\
ab03b8887884"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GraphData", "[", 
  RowBox[{"{", 
   RowBox[{"\"\<Queen\>\"", ",", " ", 
    RowBox[{"{", 
     RowBox[{"8", ",", " ", "8"}], "}"}]}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.8772940598131714`*^9, 3.877294065969369*^9}},
 CellLabel->
  "In[163]:=",ExpressionUUID->"b737730a-918a-4c74-9889-4536dd42d6dd"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
       20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37,
       38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55,
       56, 57, 58, 59, 60, 61, 62, 63, 64}, {Null, 
       SparseArray[
       Automatic, {64, 64}, 0, {
        1, {{0, 21, 42, 63, 84, 105, 126, 147, 168, 189, 212, 235, 258, 281, 
          304, 327, 348, 369, 392, 417, 442, 467, 492, 515, 536, 557, 580, 
          605, 632, 659, 684, 707, 728, 749, 772, 797, 824, 851, 876, 899, 
          920, 941, 964, 989, 1014, 1039, 1064, 1087, 1108, 1129, 1152, 1175, 
          1198, 1221, 1244, 1267, 1288, 1309, 1330, 1351, 1372, 1393, 1414, 
          1435, 1456}, CompressedData["
1:eJw1lGeygtoWhA8oWUBFwJxQDOQgOY3hDeFO4E3tDvH21uKXVV/jWr27utbl
n///7x/67+/vX+bvj8IvPZkyLMcL4kLb7C/3lx/l5UCNUFqutoer/Q7ioqLo
LxSl2ULTd0fr4YRJTdETAqWZvFwZm/3p9nTTBnAKOJMVTTe3h/Pl7n1aAhmO
lxV1Zax3x6v98rPuC1leUee6uT9Zj3cQ5f0PcurcWB/Ot6cTxgUs0ViMP88X
y83ucnt5UVaSL4WRatv99f7247wa8H9B/OKlttrsDpbtBElRYypeRLC20rf7
4+X2cMO0wS7gGfBKN3aH0/X+fMEvHBAsw5ph7o9ny377Udb9YsHwuWGuD6fb
wwnivOxHqprr4/n+dMOkqBCjIMIB/r/ebC/Wy40+ZUfDm7QY6e56e3txVvXU
hCHJLr98u9tfrLvjJ3k90FMWg/E+Iuz2h+vNfrlBWjQThsNCCCsI+8PRuj/e
Xhh92ilLUiaCDovH081+On6clR3D/ZLCjvXxdL4/3CDJq57lR2qezvbTC9Oi
HqipIC2WMIIB58v15URp2dKMCIvaZqTW240/VTdhBUkmUW+//GrdXo6XZHVP
TTlxpmAyHkoU63Z/u36U5s1AM7wkq9gJaQ/pdrcdL4g/RdlO2JlCQifKATbt
h+uHSVZ1U05Wf6lhz9l+PL0gzeue4ZX5SE+Ppx9+imagGAE93WxhBgOer3eU
lA3NiugpvryM1InTqp1wkoJOk9SvX/523Cj51N2UF2Yqio3JeCxRHNeL06xs
eooR5TnqjZ2QbpBcz08+edUONCsp6DjMEOUOm36QZkXdTbiZqpu/5LDn6Qfh
J2/6KS+j6iN9BGFWtAPFCvIC5b1cYQYDwigua5oTlSWqiy9fI02qZsJLqmag
6CT595fHSVrW7XQ2X6xMVB2D8VYiJOmnajpGkJf6GmXHQgguhPST1W1PsaKi
Gag7jBDBg8Usb7qB5iR1ZR5Ov9SwI8zyou0n/Gyuo/IjDfKiGyhOUBY6zon1
esMIBhRlRfOiujRwTWDRiUZaT6S5Zu6OqDsJPf7iqm6ms9Ua5wRlx1Q8kuC6
aRl5oeOgoOrYBZwCN23HCsrS2B1RdDgg+ANvXU9xoqrhrtwfv6QwvOj6geal
+QqnxX6ONO8HihfUhbE54LQ4UQwHLflSnC/N7RF3BdaS8gcnkrbenSwbHScp
V18Iv/szDgrqjYF4F4GMrG8OOCcoNpYANoCssjC2R8tGp7GYwLYfOEFdmjtc
Ey/4xYKhsCTOtfUe58QPR9j/BxTjuzc=
          "]}, Pattern}]}]]}, 
    TagBox[GraphicsGroupBox[GraphicsComplexBox[CompressedData["
1:eJw9kHsw2wcAx3/JJuo85tFWbdRzpTSh5rGS+f4oxaxo5jyq2ypFu7qjNHM3
1XqtTvWiuu16mFePrul5xmPXRldFy5RaI60Oo0hKZkHqkYQQ6+52+9597vPf
54+vNTuFlUAlCIJ8y78+URNidp6rwSSl5/Q7fqtwMYh834VHJS8XFmYNvadC
Q7ORtSRkExk+9KEs6RbYA05FjOcEWZ2yFBOetokQE5NpdZsC+2uzpS0XNMjk
32LV8DX42FXCpH1HkA3BRZ8wLOSQ3Cu26GmlkI9iYwby7FagPHKMSToQZNlB
jzrldSo59E2UbmSjHM3dFcq542okB7OCxm028LWq1jNKi0I68ctzOYurqL56
63GQcB2EVc2dISFBHo02EY0UbIBxwc3X5r4C+QaBVUbsVbzLXZ46+AuF7Bvq
EYlml5E7UkBP1N3EtX22hsWfz8LrkEbXsYtCmpKR7rqeGqiid1P1muZBm1tk
mj4lSFFQbI9J1AIyAow5N79UYLrPUvBB6BoUvYJLM+0aaByZjtU0FSpKM+nh
OnJ0Lkp0J9kbOF+uk1rpo0CodmC1Q/g6njmKJVHsl3BNdvqrxW8T/fZmIqMe
KWo99rHPzmnwgl7uTGvZQv326wdmv3Xj3iGJbb6XCrtFxtMLjFkw61GUeUKN
+IjBJ+32M1DsteINOLxBzoH+ZKGVAjM2OeZG0atgjdlmD1xZwOnggNmV9BmI
74y36RmqkP+tacu4/iukPU5s2Lq4BELmZ1Mw0AY3s/i/6e7r8GOl2ldsbINT
wfZO+FGMzlFxkw9nG4OjtYuMHWNw2GmV5Bu2jJ5G2sm4bSmUhUFahbkqyPq4
gXEFCzAU1rV/pnyNunLLxCa+HIyM+sN+MStwI6sopf4rYJkXsoriRTAuEd4V
hCrhXGzbG+gphp87hd89rIYsnBdR9hGVFPBGd/H9xXiSHmfcYqYGV5T7w8tB
OaosGXk3HZV4kJf/NFh/CuGf+lc+L17CyTXvmf0/yzE2MbdJKZEjmpfbHnZ7
Bo3eagOtcimE43pdSTtV+L5OYL4YMg/mRPoEl74Kqt12ihd7FAz7h6TeDoKk
NVV1yuLX0FbLWVxyHYaFvrbk3IF13F2h9w5XDMDt1G3nqT1SjAyb/M4LmcSH
lLBT0qNvMHYm+Kx79jDyu/VzJHZjoFl2FF9Sj6D1WF9s+QspKi96dMrapXhG
JUZ2fdGBja4yU27HEgxGPNssH/0BaVqkxOrtT631EeIbWWsg5NKgyCNeaNF/
ePVX3jz+DLg2zUgT4kZiXRtnagHEf7uemmm9RzANWf9lG50ECer5PyU0nJlG
c2eDbK9agJKi49qk4SC+up89es5bCpdRfmlSshBhqRTile/U/x3XhiuhESYr
+Ac6z/Ho
       "], {
        {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
         ArrowBox[CompressedData["
1:eJwVxUUBJIkBAMBtmmZmZmZm0HAS1sDZjZwknyr/77///AX//Pnzn//x/wEQ
gAAYQIAfgAIYgAMEwAMioAMW4AMxkAMN0AMrsAMfCIEwiIA/EAUxEAcJkAQF
UAIN0AYDMAELsAUHcAMPCIYQ6AehEAYREAlREA+JkAyZkAOFUAqVUAeN0Akj
8A9GYQwmYQqmYQGWYAXWYQt24QjO4Aqe4Av5ISiCIRRCIwwiIjKiIgZiIx7i
IzFSIzNy/9Af9qN/zI/9ST/lp/3Mn/MLfskv/zW/5fegGMqgLMqhMqqiFuqi
IZqiBdqiPbqiL8ZiHKZgGmZjHhZhGVZiHTZgG7ZjH07gJE7hNM7gLM7hPC7g
Om7iPh7hOV7jPb7gO/4SJEERNMEQLMERPCEQImEQFhEQMVEQDTEQK3EQH0mR
NMmQLMmRAimSEqmTJmmTIZmQJdmSI7mRJ0VTDMVSHCVSEiVTBmVRDuVTEZVS
FdVRE3XRDM3SHC3RMq3QJm3TLh3QMZ3ROV3TM30zLMMxMqMwKmMxDuMxIZMw
BdMwPbMwD8uxCquyGmuzLhuxKVuyLTuwK7uzL6dyGudwHhdzGVdxHTdyG3dw
Hy/wIi/xMq/wKq/xOm/wPh/yOV/xPT/zO/8IoiAJsqAIqqAJumAIphAIkVAI
tTAIi3AIryiJsqiIqqiJhmiKluiLoRiLpdiIo7iKp/hJsqRIqqRJpmRJthRI
kZRIuVRJrTRJm3TJiqzKmmzJtuzIoRzLqVzItdzJvTzLt6IqmmIrjuIqkZIo
mVIqjTIoi7Irj6qpjuqqnhqrqVqprTqqq3qor+ZqnpZomVZrnTZpm3Zqn27o
pm7ptu7oru7pvh7ouV7qvT7pu34bpmEZtuEYruEZvhEYoVEYlTEYs3EYj2mZ
tumYrumZgRmakZmbpVmbo7mYp/latuVYruVZoRVZsVVYldVYvTVZq3VZn+3Y
ru3ZkR3biV3atd3agz3bm73bt+M6nhM7iZM6ldM4nTM6i3M4j+u5iZu6mVu7
rTu5q3u6r5d6mdd4nTd7m3d5nx/4oR/5sZ/4qZ/5uV/4vT/6u38FYRAFcZAE
aZAFeVAEZTAEU3AEdxiFcZiEaZiFRViGVdiHYziHZ/hEcZREaZRFZVRFdTRE
U7REe3RFb5zEaZzFVVzHTTzGc7zGR3zHX5ImWVInTdImU7IkW3ImT5qlTdqm
XTqna3qlb9ZmXbZkW3ZnX17kZV7ldd7kbd7lfT7ke34WZVEVddEUbdEVfTEU
Y3EUV1mVddmUbdmVQzmWU7mXZ3lXddVUbdVVYzVVc3VUV/XUTd3WXT3Vc73U
Z33Xb9M2XTM3S7M2V/M0X9u1S7u2W3u3b7d2W/d0Xz/0Yz/1c7/0a7/1e38M
4zAN87AM67AN+3AM5ziN87iM67iNx3iO1zRPy7RO23RO13TPy7zO23zN9/ws
67It9/Is77qtz/qu3/Zu337s537t9/7s7/4d53Ed9/Ec7/Gd13mfz/me33Vf
z/Ve3/3c7/097/O9338Bu7C7XQ==
          "], 0.025250458087772487`]}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         DiskBox[1, 0.025250458087772487], DiskBox[2, 0.025250458087772487], 
         DiskBox[3, 0.025250458087772487], DiskBox[4, 0.025250458087772487], 
         DiskBox[5, 0.025250458087772487], DiskBox[6, 0.025250458087772487], 
         DiskBox[7, 0.025250458087772487], DiskBox[8, 0.025250458087772487], 
         DiskBox[9, 0.025250458087772487], DiskBox[10, 0.025250458087772487], 
         DiskBox[11, 0.025250458087772487], DiskBox[12, 0.025250458087772487],
          DiskBox[13, 0.025250458087772487], 
         DiskBox[14, 0.025250458087772487], DiskBox[15, 0.025250458087772487],
          DiskBox[16, 0.025250458087772487], 
         DiskBox[17, 0.025250458087772487], DiskBox[18, 0.025250458087772487],
          DiskBox[19, 0.025250458087772487], 
         DiskBox[20, 0.025250458087772487], DiskBox[21, 0.025250458087772487],
          DiskBox[22, 0.025250458087772487], 
         DiskBox[23, 0.025250458087772487], DiskBox[24, 0.025250458087772487],
          DiskBox[25, 0.025250458087772487], 
         DiskBox[26, 0.025250458087772487], DiskBox[27, 0.025250458087772487],
          DiskBox[28, 0.025250458087772487], 
         DiskBox[29, 0.025250458087772487], DiskBox[30, 0.025250458087772487],
          DiskBox[31, 0.025250458087772487], 
         DiskBox[32, 0.025250458087772487], DiskBox[33, 0.025250458087772487],
          DiskBox[34, 0.025250458087772487], 
         DiskBox[35, 0.025250458087772487], DiskBox[36, 0.025250458087772487],
          DiskBox[37, 0.025250458087772487], 
         DiskBox[38, 0.025250458087772487], DiskBox[39, 0.025250458087772487],
          DiskBox[40, 0.025250458087772487], 
         DiskBox[41, 0.025250458087772487], DiskBox[42, 0.025250458087772487],
          DiskBox[43, 0.025250458087772487], 
         DiskBox[44, 0.025250458087772487], DiskBox[45, 0.025250458087772487],
          DiskBox[46, 0.025250458087772487], 
         DiskBox[47, 0.025250458087772487], DiskBox[48, 0.025250458087772487],
          DiskBox[49, 0.025250458087772487], 
         DiskBox[50, 0.025250458087772487], DiskBox[51, 0.025250458087772487],
          DiskBox[52, 0.025250458087772487], 
         DiskBox[53, 0.025250458087772487], DiskBox[54, 0.025250458087772487],
          DiskBox[55, 0.025250458087772487], 
         DiskBox[56, 0.025250458087772487], DiskBox[57, 0.025250458087772487],
          DiskBox[58, 0.025250458087772487], 
         DiskBox[59, 0.025250458087772487], DiskBox[60, 0.025250458087772487],
          DiskBox[61, 0.025250458087772487], 
         DiskBox[62, 0.025250458087772487], DiskBox[63, 0.025250458087772487],
          DiskBox[64, 0.025250458087772487]}}]],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None]], "Output",
 CellChangeTimes->{3.877294066484996*^9},
 CellLabel->
  "Out[163]=",ExpressionUUID->"65830de9-9105-4593-847f-a499a5afc24b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GraphData", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\"\<Queen\>\"", ",", " ", 
     RowBox[{"{", 
      RowBox[{"8", ",", " ", "8"}], "}"}]}], "}"}], ",", 
   "\"\<MaximumCliques\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.8772940598131714`*^9, 3.877294065969369*^9}, {
  3.8772941098898*^9, 3.877294113952319*^9}},
 CellLabel->
  "In[164]:=",ExpressionUUID->"069e893e-66a8-4aeb-8990-f0aaf484199a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", 
     "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "9", ",", "17", ",", "25", ",", "33", ",", "41", ",", "49", ",",
      "57"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "10", ",", "19", ",", "28", ",", "37", ",", "46", ",", "55", 
     ",", "64"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "2", ",", "10", ",", "18", ",", "26", ",", "34", ",", "42", ",", "50", 
     ",", "58"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "3", ",", "11", ",", "19", ",", "27", ",", "35", ",", "43", ",", "51", 
     ",", "59"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "4", ",", "12", ",", "20", ",", "28", ",", "36", ",", "44", ",", "52", 
     ",", "60"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "5", ",", "13", ",", "21", ",", "29", ",", "37", ",", "45", ",", "53", 
     ",", "61"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "6", ",", "14", ",", "22", ",", "30", ",", "38", ",", "46", ",", "54", 
     ",", "62"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "7", ",", "15", ",", "23", ",", "31", ",", "39", ",", "47", ",", "55", 
     ",", "63"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "8", ",", "15", ",", "22", ",", "29", ",", "36", ",", "43", ",", "50", 
     ",", "57"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "8", ",", "16", ",", "24", ",", "32", ",", "40", ",", "48", ",", "56", 
     ",", "64"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "9", ",", "10", ",", "11", ",", "12", ",", "13", ",", "14", ",", "15", 
     ",", "16"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "17", ",", "18", ",", "19", ",", "20", ",", "21", ",", "22", ",", "23", 
     ",", "24"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "25", ",", "26", ",", "27", ",", "28", ",", "29", ",", "30", ",", "31", 
     ",", "32"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "33", ",", "34", ",", "35", ",", "36", ",", "37", ",", "38", ",", "39", 
     ",", "40"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "41", ",", "42", ",", "43", ",", "44", ",", "45", ",", "46", ",", "47", 
     ",", "48"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "49", ",", "50", ",", "51", ",", "52", ",", "53", ",", "54", ",", "55", 
     ",", "56"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "57", ",", "58", ",", "59", ",", "60", ",", "61", ",", "62", ",", "63", 
     ",", "64"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.877294114217914*^9},
 CellLabel->
  "Out[164]=",ExpressionUUID->"c44bbe5d-30d8-4244-b9f8-a6b26c6f54da"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"HighlightGraph", "[", 
    RowBox[{
     RowBox[{"GraphData", "[", 
      RowBox[{"{", 
       RowBox[{"\"\<Queen\>\"", ",", " ", 
        RowBox[{"{", 
         RowBox[{"8", ",", " ", "8"}], "}"}]}], "}"}], "]"}], ",", "#"}], 
    "]"}], "&"}], "/@", 
  RowBox[{"GraphData", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\"\<Queen\>\"", ",", " ", 
      RowBox[{"{", 
       RowBox[{"8", ",", " ", "8"}], "}"}]}], "}"}], ",", 
    "\"\<MaximumCliques\>\""}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8772941246866612`*^9, 3.8772941358911*^9}},
 CellLabel->
  "In[165]:=",ExpressionUUID->"2ce2a1bf-fa50-47a2-923d-e7ab90f2692b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 
        19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 
        53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64}, {Null, 
         SparseArray[
         Automatic, {64, 64}, 0, {
          1, {{0, 21, 42, 63, 84, 105, 126, 147, 168, 189, 212, 235, 258, 281,
             304, 327, 348, 369, 392, 417, 442, 467, 492, 515, 536, 557, 580, 
            605, 632, 659, 684, 707, 728, 749, 772, 797, 824, 851, 876, 899, 
            920, 941, 964, 989, 1014, 1039, 1064, 1087, 1108, 1129, 1152, 
            1175, 1198, 1221, 1244, 1267, 1288, 1309, 1330, 1351, 1372, 1393, 
            1414, 1435, 1456}, CompressedData["
1:eJw1lGeygtoWhA8oWUBFwJxQDOQgOY3hDeFO4E3tDvH21uKXVV/jWr27utbl
n///7x/67+/vX+bvj8IvPZkyLMcL4kLb7C/3lx/l5UCNUFqutoer/Q7ioqLo
LxSl2ULTd0fr4YRJTdETAqWZvFwZm/3p9nTTBnAKOJMVTTe3h/Pl7n1aAhmO
lxV1Zax3x6v98rPuC1leUee6uT9Zj3cQ5f0PcurcWB/Ot6cTxgUs0ViMP88X
y83ucnt5UVaSL4WRatv99f7247wa8H9B/OKlttrsDpbtBElRYypeRLC20rf7
4+X2cMO0wS7gGfBKN3aH0/X+fMEvHBAsw5ph7o9ny377Udb9YsHwuWGuD6fb
wwnivOxHqprr4/n+dMOkqBCjIMIB/r/ebC/Wy40+ZUfDm7QY6e56e3txVvXU
hCHJLr98u9tfrLvjJ3k90FMWg/E+Iuz2h+vNfrlBWjQThsNCCCsI+8PRuj/e
Xhh92ilLUiaCDovH081+On6clR3D/ZLCjvXxdL4/3CDJq57lR2qezvbTC9Oi
HqipIC2WMIIB58v15URp2dKMCIvaZqTW240/VTdhBUkmUW+//GrdXo6XZHVP
TTlxpmAyHkoU63Z/u36U5s1AM7wkq9gJaQ/pdrcdL4g/RdlO2JlCQifKATbt
h+uHSVZ1U05Wf6lhz9l+PL0gzeue4ZX5SE+Ppx9+imagGAE93WxhBgOer3eU
lA3NiugpvryM1InTqp1wkoJOk9SvX/523Cj51N2UF2Yqio3JeCxRHNeL06xs
eooR5TnqjZ2QbpBcz08+edUONCsp6DjMEOUOm36QZkXdTbiZqpu/5LDn6Qfh
J2/6KS+j6iN9BGFWtAPFCvIC5b1cYQYDwigua5oTlSWqiy9fI02qZsJLqmag
6CT595fHSVrW7XQ2X6xMVB2D8VYiJOmnajpGkJf6GmXHQgguhPST1W1PsaKi
Gag7jBDBg8Usb7qB5iR1ZR5Ov9SwI8zyou0n/Gyuo/IjDfKiGyhOUBY6zon1
esMIBhRlRfOiujRwTWDRiUZaT6S5Zu6OqDsJPf7iqm6ms9Ua5wRlx1Q8kuC6
aRl5oeOgoOrYBZwCN23HCsrS2B1RdDgg+ANvXU9xoqrhrtwfv6QwvOj6geal
+QqnxX6ONO8HihfUhbE54LQ4UQwHLflSnC/N7RF3BdaS8gcnkrbenSwbHScp
V18Iv/szDgrqjYF4F4GMrG8OOCcoNpYANoCssjC2R8tGp7GYwLYfOEFdmjtc
Ey/4xYKhsCTOtfUe58QPR9j/BxTjuzc=
            "]}, Pattern}]}, {GraphHighlight -> {1, 6, 5, 7, 2, 8, 4, 3}}]]}, 
      TagBox[GraphicsGroupBox[GraphicsComplexBox[CompressedData["
1:eJw9kHsw2wcAx3/JJuo85tFWbdRzpTSh5rGS+f4oxaxo5jyq2ypFu7qjNHM3
1XqtTvWiuu16mFePrul5xmPXRldFy5RaI60Oo0hKZkHqkYQQ6+52+9597vPf
54+vNTuFlUAlCIJ8y78+URNidp6rwSSl5/Q7fqtwMYh834VHJS8XFmYNvadC
Q7ORtSRkExk+9KEs6RbYA05FjOcEWZ2yFBOetokQE5NpdZsC+2uzpS0XNMjk
32LV8DX42FXCpH1HkA3BRZ8wLOSQ3Cu26GmlkI9iYwby7FagPHKMSToQZNlB
jzrldSo59E2UbmSjHM3dFcq542okB7OCxm028LWq1jNKi0I68ctzOYurqL56
63GQcB2EVc2dISFBHo02EY0UbIBxwc3X5r4C+QaBVUbsVbzLXZ46+AuF7Bvq
EYlml5E7UkBP1N3EtX22hsWfz8LrkEbXsYtCmpKR7rqeGqiid1P1muZBm1tk
mj4lSFFQbI9J1AIyAow5N79UYLrPUvBB6BoUvYJLM+0aaByZjtU0FSpKM+nh
OnJ0Lkp0J9kbOF+uk1rpo0CodmC1Q/g6njmKJVHsl3BNdvqrxW8T/fZmIqMe
KWo99rHPzmnwgl7uTGvZQv326wdmv3Xj3iGJbb6XCrtFxtMLjFkw61GUeUKN
+IjBJ+32M1DsteINOLxBzoH+ZKGVAjM2OeZG0atgjdlmD1xZwOnggNmV9BmI
74y36RmqkP+tacu4/iukPU5s2Lq4BELmZ1Mw0AY3s/i/6e7r8GOl2ldsbINT
wfZO+FGMzlFxkw9nG4OjtYuMHWNw2GmV5Bu2jJ5G2sm4bSmUhUFahbkqyPq4
gXEFCzAU1rV/pnyNunLLxCa+HIyM+sN+MStwI6sopf4rYJkXsoriRTAuEd4V
hCrhXGzbG+gphp87hd89rIYsnBdR9hGVFPBGd/H9xXiSHmfcYqYGV5T7w8tB
OaosGXk3HZV4kJf/NFh/CuGf+lc+L17CyTXvmf0/yzE2MbdJKZEjmpfbHnZ7
Bo3eagOtcimE43pdSTtV+L5OYL4YMg/mRPoEl74Kqt12ihd7FAz7h6TeDoKk
NVV1yuLX0FbLWVxyHYaFvrbk3IF13F2h9w5XDMDt1G3nqT1SjAyb/M4LmcSH
lLBT0qNvMHYm+Kx79jDyu/VzJHZjoFl2FF9Sj6D1WF9s+QspKi96dMrapXhG
JUZ2fdGBja4yU27HEgxGPNssH/0BaVqkxOrtT631EeIbWWsg5NKgyCNeaNF/
ePVX3jz+DLg2zUgT4kZiXRtnagHEf7uemmm9RzANWf9lG50ECer5PyU0nJlG
c2eDbK9agJKi49qk4SC+up89es5bCpdRfmlSshBhqRTile/U/x3XhiuhESYr
+Ac6z/Ho
         "], {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
           ArrowBox[CompressedData["
1:eJwVxUUBJIkBAMBtmmZmZmZm0HAS1sDZjZwknyr/77///AX//Pnzn//x/wEQ
gAAYQIAfgAIYgAMEwAMioAMW4AMxkAMN0AMrsAMfCIEwiIA/EAUxEAcJkAQF
UAIN0AYDMAELsAUHcAMPCIYQ6AehEAYREAlREA+JkAyZkAOFUAqVUAeN0Akj
8A9GYQwmYQqmYQGWYAXWYQt24QjO4Aqe4Av5ISiCIRRCIwwiIjKiIgZiIx7i
IzFSIzNy/9Af9qN/zI/9ST/lp/3Mn/MLfskv/zW/5fegGMqgLMqhMqqiFuqi
IZqiBdqiPbqiL8ZiHKZgGmZjHhZhGVZiHTZgG7ZjH07gJE7hNM7gLM7hPC7g
Om7iPh7hOV7jPb7gO/4SJEERNMEQLMERPCEQImEQFhEQMVEQDTEQK3EQH0mR
NMmQLMmRAimSEqmTJmmTIZmQJdmSI7mRJ0VTDMVSHCVSEiVTBmVRDuVTEZVS
FdVRE3XRDM3SHC3RMq3QJm3TLh3QMZ3ROV3TM30zLMMxMqMwKmMxDuMxIZMw
BdMwPbMwD8uxCquyGmuzLhuxKVuyLTuwK7uzL6dyGudwHhdzGVdxHTdyG3dw
Hy/wIi/xMq/wKq/xOm/wPh/yOV/xPT/zO/8IoiAJsqAIqqAJumAIphAIkVAI
tTAIi3AIryiJsqiIqqiJhmiKluiLoRiLpdiIo7iKp/hJsqRIqqRJpmRJthRI
kZRIuVRJrTRJm3TJiqzKmmzJtuzIoRzLqVzItdzJvTzLt6IqmmIrjuIqkZIo
mVIqjTIoi7Irj6qpjuqqnhqrqVqprTqqq3qor+ZqnpZomVZrnTZpm3Zqn27o
pm7ptu7oru7pvh7ouV7qvT7pu34bpmEZtuEYruEZvhEYoVEYlTEYs3EYj2mZ
tumYrumZgRmakZmbpVmbo7mYp/latuVYruVZoRVZsVVYldVYvTVZq3VZn+3Y
ru3ZkR3biV3atd3agz3bm73bt+M6nhM7iZM6ldM4nTM6i3M4j+u5iZu6mVu7
rTu5q3u6r5d6mdd4nTd7m3d5nx/4oR/5sZ/4qZ/5uV/4vT/6u38FYRAFcZAE
aZAFeVAEZTAEU3AEdxiFcZiEaZiFRViGVdiHYziHZ/hEcZREaZRFZVRFdTRE
U7REe3RFb5zEaZzFVVzHTTzGc7zGR3zHX5ImWVInTdImU7IkW3ImT5qlTdqm
XTqna3qlb9ZmXbZkW3ZnX17kZV7ldd7kbd7lfT7ke34WZVEVddEUbdEVfTEU
Y3EUV1mVddmUbdmVQzmWU7mXZ3lXddVUbdVVYzVVc3VUV/XUTd3WXT3Vc73U
Z33Xb9M2XTM3S7M2V/M0X9u1S7u2W3u3b7d2W/d0Xz/0Yz/1c7/0a7/1e38M
4zAN87AM67AN+3AM5ziN87iM67iNx3iO1zRPy7RO23RO13TPy7zO23zN9/ws
67It9/Is77qtz/qu3/Zu337s537t9/7s7/4d53Ed9/Ec7/Gd13mfz/me33Vf
z/Ve3/3c7/097/O9338Bu7C7XQ==
            "], 0.025250458087772487`]}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
            DiskBox[1, 0.025250458087772487]}, 
           {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
            DiskBox[2, 0.025250458087772487]}, 
           {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
            DiskBox[3, 0.025250458087772487]}, 
           {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
            DiskBox[4, 0.025250458087772487]}, 
           {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
            DiskBox[5, 0.025250458087772487]}, 
           {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
            DiskBox[6, 0.025250458087772487]}, 
           {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
            DiskBox[7, 0.025250458087772487]}, 
           {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
            DiskBox[8, 0.025250458087772487]}, 
           DiskBox[9, 0.025250458087772487], 
           DiskBox[10, 0.025250458087772487], 
           DiskBox[11, 0.025250458087772487], 
           DiskBox[12, 0.025250458087772487], 
           DiskBox[13, 0.025250458087772487], 
           DiskBox[14, 0.025250458087772487], 
           DiskBox[15, 0.025250458087772487], 
           DiskBox[16, 0.025250458087772487], 
           DiskBox[17, 0.025250458087772487], 
           DiskBox[18, 0.025250458087772487], 
           DiskBox[19, 0.025250458087772487], 
           DiskBox[20, 0.025250458087772487], 
           DiskBox[21, 0.025250458087772487], 
           DiskBox[22, 0.025250458087772487], 
           DiskBox[23, 0.025250458087772487], 
           DiskBox[24, 0.025250458087772487], 
           DiskBox[25, 0.025250458087772487], 
           DiskBox[26, 0.025250458087772487], 
           DiskBox[27, 0.025250458087772487], 
           DiskBox[28, 0.025250458087772487], 
           DiskBox[29, 0.025250458087772487], 
           DiskBox[30, 0.025250458087772487], 
           DiskBox[31, 0.025250458087772487], 
           DiskBox[32, 0.025250458087772487], 
           DiskBox[33, 0.025250458087772487], 
           DiskBox[34, 0.025250458087772487], 
           DiskBox[35, 0.025250458087772487], 
           DiskBox[36, 0.025250458087772487], 
           DiskBox[37, 0.025250458087772487], 
           DiskBox[38, 0.025250458087772487], 
           DiskBox[39, 0.025250458087772487], 
           DiskBox[40, 0.025250458087772487], 
           DiskBox[41, 0.025250458087772487], 
           DiskBox[42, 0.025250458087772487], 
           DiskBox[43, 0.025250458087772487], 
           DiskBox[44, 0.025250458087772487], 
           DiskBox[45, 0.025250458087772487], 
           DiskBox[46, 0.025250458087772487], 
           DiskBox[47, 0.025250458087772487], 
           DiskBox[48, 0.025250458087772487], 
           DiskBox[49, 0.025250458087772487], 
           DiskBox[50, 0.025250458087772487], 
           DiskBox[51, 0.025250458087772487], 
           DiskBox[52, 0.025250458087772487], 
           DiskBox[53, 0.025250458087772487], 
           DiskBox[54, 0.025250458087772487], 
           DiskBox[55, 0.025250458087772487], 
           DiskBox[56, 0.025250458087772487], 
           DiskBox[57, 0.025250458087772487], 
           DiskBox[58, 0.025250458087772487], 
           DiskBox[59, 0.025250458087772487], 
           DiskBox[60, 0.025250458087772487], 
           DiskBox[61, 0.025250458087772487], 
           DiskBox[62, 0.025250458087772487], 
           DiskBox[63, 0.025250458087772487], 
           DiskBox[64, 0.025250458087772487]}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    FormatType->TraditionalForm,
    FrameTicks->None], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 
        19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 
        53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64}, {Null, 
         SparseArray[
         Automatic, {64, 64}, 0, {
          1, {{0, 21, 42, 63, 84, 105, 126, 147, 168, 189, 212, 235, 258, 281,
             304, 327, 348, 369, 392, 417, 442, 467, 492, 515, 536, 557, 580, 
            605, 632, 659, 684, 707, 728, 749, 772, 797, 824, 851, 876, 899, 
            920, 941, 964, 989, 1014, 1039, 1064, 1087, 1108, 1129, 1152, 
            1175, 1198, 1221, 1244, 1267, 1288, 1309, 1330, 1351, 1372, 1393, 
            1414, 1435, 1456}, CompressedData["
1:eJw1lGeygtoWhA8oWUBFwJxQDOQgOY3hDeFO4E3tDvH21uKXVV/jWr27utbl
n///7x/67+/vX+bvj8IvPZkyLMcL4kLb7C/3lx/l5UCNUFqutoer/Q7ioqLo
LxSl2ULTd0fr4YRJTdETAqWZvFwZm/3p9nTTBnAKOJMVTTe3h/Pl7n1aAhmO
lxV1Zax3x6v98rPuC1leUee6uT9Zj3cQ5f0PcurcWB/Ot6cTxgUs0ViMP88X
y83ucnt5UVaSL4WRatv99f7247wa8H9B/OKlttrsDpbtBElRYypeRLC20rf7
4+X2cMO0wS7gGfBKN3aH0/X+fMEvHBAsw5ph7o9ny377Udb9YsHwuWGuD6fb
wwnivOxHqprr4/n+dMOkqBCjIMIB/r/ebC/Wy40+ZUfDm7QY6e56e3txVvXU
hCHJLr98u9tfrLvjJ3k90FMWg/E+Iuz2h+vNfrlBWjQThsNCCCsI+8PRuj/e
Xhh92ilLUiaCDovH081+On6clR3D/ZLCjvXxdL4/3CDJq57lR2qezvbTC9Oi
HqipIC2WMIIB58v15URp2dKMCIvaZqTW240/VTdhBUkmUW+//GrdXo6XZHVP
TTlxpmAyHkoU63Z/u36U5s1AM7wkq9gJaQ/pdrcdL4g/RdlO2JlCQifKATbt
h+uHSVZ1U05Wf6lhz9l+PL0gzeue4ZX5SE+Ppx9+imagGAE93WxhBgOer3eU
lA3NiugpvryM1InTqp1wkoJOk9SvX/523Cj51N2UF2Yqio3JeCxRHNeL06xs
eooR5TnqjZ2QbpBcz08+edUONCsp6DjMEOUOm36QZkXdTbiZqpu/5LDn6Qfh
J2/6KS+j6iN9BGFWtAPFCvIC5b1cYQYDwigua5oTlSWqiy9fI02qZsJLqmag
6CT595fHSVrW7XQ2X6xMVB2D8VYiJOmnajpGkJf6GmXHQgguhPST1W1PsaKi
Gag7jBDBg8Usb7qB5iR1ZR5Ov9SwI8zyou0n/Gyuo/IjDfKiGyhOUBY6zon1
esMIBhRlRfOiujRwTWDRiUZaT6S5Zu6OqDsJPf7iqm6ms9Ua5wRlx1Q8kuC6
aRl5oeOgoOrYBZwCN23HCsrS2B1RdDgg+ANvXU9xoqrhrtwfv6QwvOj6geal
+QqnxX6ONO8HihfUhbE54LQ4UQwHLflSnC/N7RF3BdaS8gcnkrbenSwbHScp
V18Iv/szDgrqjYF4F4GMrG8OOCcoNpYANoCssjC2R8tGp7GYwLYfOEFdmjtc
Ey/4xYKhsCTOtfUe58QPR9j/BxTjuzc=
            "]}, Pattern}]}, {
        GraphHighlight -> {25, 57, 1, 9, 49, 17, 41, 33}}]]}, 
      TagBox[GraphicsGroupBox[GraphicsComplexBox[CompressedData["
1:eJw9kHsw2wcAx3/JJuo85tFWbdRzpTSh5rGS+f4oxaxo5jyq2ypFu7qjNHM3
1XqtTvWiuu16mFePrul5xmPXRldFy5RaI60Oo0hKZkHqkYQQ6+52+9597vPf
54+vNTuFlUAlCIJ8y78+URNidp6rwSSl5/Q7fqtwMYh834VHJS8XFmYNvadC
Q7ORtSRkExk+9KEs6RbYA05FjOcEWZ2yFBOetokQE5NpdZsC+2uzpS0XNMjk
32LV8DX42FXCpH1HkA3BRZ8wLOSQ3Cu26GmlkI9iYwby7FagPHKMSToQZNlB
jzrldSo59E2UbmSjHM3dFcq542okB7OCxm028LWq1jNKi0I68ctzOYurqL56
63GQcB2EVc2dISFBHo02EY0UbIBxwc3X5r4C+QaBVUbsVbzLXZ46+AuF7Bvq
EYlml5E7UkBP1N3EtX22hsWfz8LrkEbXsYtCmpKR7rqeGqiid1P1muZBm1tk
mj4lSFFQbI9J1AIyAow5N79UYLrPUvBB6BoUvYJLM+0aaByZjtU0FSpKM+nh
OnJ0Lkp0J9kbOF+uk1rpo0CodmC1Q/g6njmKJVHsl3BNdvqrxW8T/fZmIqMe
KWo99rHPzmnwgl7uTGvZQv326wdmv3Xj3iGJbb6XCrtFxtMLjFkw61GUeUKN
+IjBJ+32M1DsteINOLxBzoH+ZKGVAjM2OeZG0atgjdlmD1xZwOnggNmV9BmI
74y36RmqkP+tacu4/iukPU5s2Lq4BELmZ1Mw0AY3s/i/6e7r8GOl2ldsbINT
wfZO+FGMzlFxkw9nG4OjtYuMHWNw2GmV5Bu2jJ5G2sm4bSmUhUFahbkqyPq4
gXEFCzAU1rV/pnyNunLLxCa+HIyM+sN+MStwI6sopf4rYJkXsoriRTAuEd4V
hCrhXGzbG+gphp87hd89rIYsnBdR9hGVFPBGd/H9xXiSHmfcYqYGV5T7w8tB
OaosGXk3HZV4kJf/NFh/CuGf+lc+L17CyTXvmf0/yzE2MbdJKZEjmpfbHnZ7
Bo3eagOtcimE43pdSTtV+L5OYL4YMg/mRPoEl74Kqt12ihd7FAz7h6TeDoKk
NVV1yuLX0FbLWVxyHYaFvrbk3IF13F2h9w5XDMDt1G3nqT1SjAyb/M4LmcSH
lLBT0qNvMHYm+Kx79jDyu/VzJHZjoFl2FF9Sj6D1WF9s+QspKi96dMrapXhG
JUZ2fdGBja4yU27HEgxGPNssH/0BaVqkxOrtT631EeIbWWsg5NKgyCNeaNF/
ePVX3jz+DLg2zUgT4kZiXRtnagHEf7uemmm9RzANWf9lG50ECer5PyU0nJlG
c2eDbK9agJKi49qk4SC+up89es5bCpdRfmlSshBhqRTile/U/x3XhiuhESYr
+Ac6z/Ho
         "], {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
           ArrowBox[CompressedData["
1:eJwVxUUBJIkBAMBtmmZmZmZm0HAS1sDZjZwknyr/77///AX//Pnzn//x/wEQ
gAAYQIAfgAIYgAMEwAMioAMW4AMxkAMN0AMrsAMfCIEwiIA/EAUxEAcJkAQF
UAIN0AYDMAELsAUHcAMPCIYQ6AehEAYREAlREA+JkAyZkAOFUAqVUAeN0Akj
8A9GYQwmYQqmYQGWYAXWYQt24QjO4Aqe4Av5ISiCIRRCIwwiIjKiIgZiIx7i
IzFSIzNy/9Af9qN/zI/9ST/lp/3Mn/MLfskv/zW/5fegGMqgLMqhMqqiFuqi
IZqiBdqiPbqiL8ZiHKZgGmZjHhZhGVZiHTZgG7ZjH07gJE7hNM7gLM7hPC7g
Om7iPh7hOV7jPb7gO/4SJEERNMEQLMERPCEQImEQFhEQMVEQDTEQK3EQH0mR
NMmQLMmRAimSEqmTJmmTIZmQJdmSI7mRJ0VTDMVSHCVSEiVTBmVRDuVTEZVS
FdVRE3XRDM3SHC3RMq3QJm3TLh3QMZ3ROV3TM30zLMMxMqMwKmMxDuMxIZMw
BdMwPbMwD8uxCquyGmuzLhuxKVuyLTuwK7uzL6dyGudwHhdzGVdxHTdyG3dw
Hy/wIi/xMq/wKq/xOm/wPh/yOV/xPT/zO/8IoiAJsqAIqqAJumAIphAIkVAI
tTAIi3AIryiJsqiIqqiJhmiKluiLoRiLpdiIo7iKp/hJsqRIqqRJpmRJthRI
kZRIuVRJrTRJm3TJiqzKmmzJtuzIoRzLqVzItdzJvTzLt6IqmmIrjuIqkZIo
mVIqjTIoi7Irj6qpjuqqnhqrqVqprTqqq3qor+ZqnpZomVZrnTZpm3Zqn27o
pm7ptu7oru7pvh7ouV7qvT7pu34bpmEZtuEYruEZvhEYoVEYlTEYs3EYj2mZ
tumYrumZgRmakZmbpVmbo7mYp/latuVYruVZoRVZsVVYldVYvTVZq3VZn+3Y
ru3ZkR3biV3atd3agz3bm73bt+M6nhM7iZM6ldM4nTM6i3M4j+u5iZu6mVu7
rTu5q3u6r5d6mdd4nTd7m3d5nx/4oR/5sZ/4qZ/5uV/4vT/6u38FYRAFcZAE
aZAFeVAEZTAEU3AEdxiFcZiEaZiFRViGVdiHYziHZ/hEcZREaZRFZVRFdTRE
U7REe3RFb5zEaZzFVVzHTTzGc7zGR3zHX5ImWVInTdImU7IkW3ImT5qlTdqm
XTqna3qlb9ZmXbZkW3ZnX17kZV7ldd7kbd7lfT7ke34WZVEVddEUbdEVfTEU
Y3EUV1mVddmUbdmVQzmWU7mXZ3lXddVUbdVVYzVVc3VUV/XUTd3WXT3Vc73U
Z33Xb9M2XTM3S7M2V/M0X9u1S7u2W3u3b7d2W/d0Xz/0Yz/1c7/0a7/1e38M
4zAN87AM67AN+3AM5ziN87iM67iNx3iO1zRPy7RO23RO13TPy7zO23zN9/ws
67It9/Is77qtz/qu3/Zu337s537t9/7s7/4d53Ed9/Ec7/Gd13mfz/me33Vf
z/Ve3/3c7/097/O9338Bu7C7XQ==
            "], 0.025250458087772487`]}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
            DiskBox[1, 0.025250458087772487]}, 
           DiskBox[2, 0.025250458087772487], DiskBox[3, 0.025250458087772487],
            DiskBox[4, 0.025250458087772487], 
           DiskBox[5, 0.025250458087772487], DiskBox[6, 0.025250458087772487],
            DiskBox[7, 0.025250458087772487], 
           DiskBox[8, 0.025250458087772487], 
           {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
            DiskBox[9, 0.025250458087772487]}, 
           DiskBox[10, 0.025250458087772487], 
           DiskBox[11, 0.025250458087772487], 
           DiskBox[12, 0.025250458087772487], 
           DiskBox[13, 0.025250458087772487], 
           DiskBox[14, 0.025250458087772487], 
           DiskBox[15, 0.025250458087772487], 
           DiskBox[16, 0.025250458087772487], 
           {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
            DiskBox[17, 0.025250458087772487]}, 
           DiskBox[18, 0.025250458087772487], 
           DiskBox[19, 0.025250458087772487], 
           DiskBox[20, 0.025250458087772487], 
           DiskBox[21, 0.025250458087772487], 
           DiskBox[22, 0.025250458087772487], 
           DiskBox[23, 0.025250458087772487], 
           DiskBox[24, 0.025250458087772487], 
           {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
            DiskBox[25, 0.025250458087772487]}, 
           DiskBox[26, 0.025250458087772487], 
           DiskBox[27, 0.025250458087772487], 
           DiskBox[28, 0.025250458087772487], 
           DiskBox[29, 0.025250458087772487], 
           DiskBox[30, 0.025250458087772487], 
           DiskBox[31, 0.025250458087772487], 
           DiskBox[32, 0.025250458087772487], 
           {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
            DiskBox[33, 0.025250458087772487]}, 
           DiskBox[34, 0.025250458087772487], 
           DiskBox[35, 0.025250458087772487], 
           DiskBox[36, 0.025250458087772487], 
           DiskBox[37, 0.025250458087772487], 
           DiskBox[38, 0.025250458087772487], 
           DiskBox[39, 0.025250458087772487], 
           DiskBox[40, 0.025250458087772487], 
           {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
            DiskBox[41, 0.025250458087772487]}, 
           DiskBox[42, 0.025250458087772487], 
           DiskBox[43, 0.025250458087772487], 
           DiskBox[44, 0.025250458087772487], 
           DiskBox[45, 0.025250458087772487], 
           DiskBox[46, 0.025250458087772487], 
           DiskBox[47, 0.025250458087772487], 
           DiskBox[48, 0.025250458087772487], 
           {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
            DiskBox[49, 0.025250458087772487]}, 
           DiskBox[50, 0.025250458087772487], 
           DiskBox[51, 0.025250458087772487], 
           DiskBox[52, 0.025250458087772487], 
           DiskBox[53, 0.025250458087772487], 
           DiskBox[54, 0.025250458087772487], 
           DiskBox[55, 0.025250458087772487], 
           DiskBox[56, 0.025250458087772487], 
           {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
            DiskBox[57, 0.025250458087772487]}, 
           DiskBox[58, 0.025250458087772487], 
           DiskBox[59, 0.025250458087772487], 
           DiskBox[60, 0.025250458087772487], 
           DiskBox[61, 0.025250458087772487], 
           DiskBox[62, 0.025250458087772487], 
           DiskBox[63, 0.025250458087772487], 
           DiskBox[64, 0.025250458087772487]}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    FormatType->TraditionalForm,
    FrameTicks->None], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 
        19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 
        53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64}, {Null, 
         SparseArray[
         Automatic, {64, 64}, 0, {
          1, {{0, 21, 42, 63, 84, 105, 126, 147, 168, 189, 212, 235, 258, 281,
             304, 327, 348, 369, 392, 417, 442, 467, 492, 515, 536, 557, 580, 
            605, 632, 659, 684, 707, 728, 749, 772, 797, 824, 851, 876, 899, 
            920, 941, 964, 989, 1014, 1039, 1064, 1087, 1108, 1129, 1152, 
            1175, 1198, 1221, 1244, 1267, 1288, 1309, 1330, 1351, 1372, 1393, 
            1414, 1435, 1456}, CompressedData["
1:eJw1lGeygtoWhA8oWUBFwJxQDOQgOY3hDeFO4E3tDvH21uKXVV/jWr27utbl
n///7x/67+/vX+bvj8IvPZkyLMcL4kLb7C/3lx/l5UCNUFqutoer/Q7ioqLo
LxSl2ULTd0fr4YRJTdETAqWZvFwZm/3p9nTTBnAKOJMVTTe3h/Pl7n1aAhmO
lxV1Zax3x6v98rPuC1leUee6uT9Zj3cQ5f0PcurcWB/Ot6cTxgUs0ViMP88X
y83ucnt5UVaSL4WRatv99f7247wa8H9B/OKlttrsDpbtBElRYypeRLC20rf7
4+X2cMO0wS7gGfBKN3aH0/X+fMEvHBAsw5ph7o9ny377Udb9YsHwuWGuD6fb
wwnivOxHqprr4/n+dMOkqBCjIMIB/r/ebC/Wy40+ZUfDm7QY6e56e3txVvXU
hCHJLr98u9tfrLvjJ3k90FMWg/E+Iuz2h+vNfrlBWjQThsNCCCsI+8PRuj/e
Xhh92ilLUiaCDovH081+On6clR3D/ZLCjvXxdL4/3CDJq57lR2qezvbTC9Oi
HqipIC2WMIIB58v15URp2dKMCIvaZqTW240/VTdhBUkmUW+//GrdXo6XZHVP
TTlxpmAyHkoU63Z/u36U5s1AM7wkq9gJaQ/pdrcdL4g/RdlO2JlCQifKATbt
h+uHSVZ1U05Wf6lhz9l+PL0gzeue4ZX5SE+Ppx9+imagGAE93WxhBgOer3eU
lA3NiugpvryM1InTqp1wkoJOk9SvX/523Cj51N2UF2Yqio3JeCxRHNeL06xs
eooR5TnqjZ2QbpBcz08+edUONCsp6DjMEOUOm36QZkXdTbiZqpu/5LDn6Qfh
J2/6KS+j6iN9BGFWtAPFCvIC5b1cYQYDwigua5oTlSWqiy9fI02qZsJLqmag
6CT595fHSVrW7XQ2X6xMVB2D8VYiJOmnajpGkJf6GmXHQgguhPST1W1PsaKi
Gag7jBDBg8Usb7qB5iR1ZR5Ov9SwI8zyou0n/Gyuo/IjDfKiGyhOUBY6zon1
esMIBhRlRfOiujRwTWDRiUZaT6S5Zu6OqDsJPf7iqm6ms9Ua5wRlx1Q8kuC6
aRl5oeOgoOrYBZwCN23HCsrS2B1RdDgg+ANvXU9xoqrhrtwfv6QwvOj6geal
+QqnxX6ONO8HihfUhbE54LQ4UQwHLflSnC/N7RF3BdaS8gcnkrbenSwbHScp
V18Iv/szDgrqjYF4F4GMrG8OOCcoNpYANoCssjC2R8tGp7GYwLYfOEFdmjtc
Ey/4xYKhsCTOtfUe58QPR9j/BxTjuzc=
            "]}, Pattern}]}, {
        GraphHighlight -> {46, 10, 64, 1, 37, 55, 28, 19}}]]}, 
      TagBox[GraphicsGroupBox[GraphicsComplexBox[CompressedData["
1:eJw9kHsw2wcAx3/JJuo85tFWbdRzpTSh5rGS+f4oxaxo5jyq2ypFu7qjNHM3
1XqtTvWiuu16mFePrul5xmPXRldFy5RaI60Oo0hKZkHqkYQQ6+52+9597vPf
54+vNTuFlUAlCIJ8y78+URNidp6rwSSl5/Q7fqtwMYh834VHJS8XFmYNvadC
Q7ORtSRkExk+9KEs6RbYA05FjOcEWZ2yFBOetokQE5NpdZsC+2uzpS0XNMjk
32LV8DX42FXCpH1HkA3BRZ8wLOSQ3Cu26GmlkI9iYwby7FagPHKMSToQZNlB
jzrldSo59E2UbmSjHM3dFcq542okB7OCxm028LWq1jNKi0I68ctzOYurqL56
63GQcB2EVc2dISFBHo02EY0UbIBxwc3X5r4C+QaBVUbsVbzLXZ46+AuF7Bvq
EYlml5E7UkBP1N3EtX22hsWfz8LrkEbXsYtCmpKR7rqeGqiid1P1muZBm1tk
mj4lSFFQbI9J1AIyAow5N79UYLrPUvBB6BoUvYJLM+0aaByZjtU0FSpKM+nh
OnJ0Lkp0J9kbOF+uk1rpo0CodmC1Q/g6njmKJVHsl3BNdvqrxW8T/fZmIqMe
KWo99rHPzmnwgl7uTGvZQv326wdmv3Xj3iGJbb6XCrtFxtMLjFkw61GUeUKN
+IjBJ+32M1DsteINOLxBzoH+ZKGVAjM2OeZG0atgjdlmD1xZwOnggNmV9BmI
74y36RmqkP+tacu4/iukPU5s2Lq4BELmZ1Mw0AY3s/i/6e7r8GOl2ldsbINT
wfZO+FGMzlFxkw9nG4OjtYuMHWNw2GmV5Bu2jJ5G2sm4bSmUhUFahbkqyPq4
gXEFCzAU1rV/pnyNunLLxCa+HIyM+sN+MStwI6sopf4rYJkXsoriRTAuEd4V
hCrhXGzbG+gphp87hd89rIYsnBdR9hGVFPBGd/H9xXiSHmfcYqYGV5T7w8tB
OaosGXk3HZV4kJf/NFh/CuGf+lc+L17CyTXvmf0/yzE2MbdJKZEjmpfbHnZ7
Bo3eagOtcimE43pdSTtV+L5OYL4YMg/mRPoEl74Kqt12ihd7FAz7h6TeDoKk
NVV1yuLX0FbLWVxyHYaFvrbk3IF13F2h9w5XDMDt1G3nqT1SjAyb/M4LmcSH
lLBT0qNvMHYm+Kx79jDyu/VzJHZjoFl2FF9Sj6D1WF9s+QspKi96dMrapXhG
JUZ2fdGBja4yU27HEgxGPNssH/0BaVqkxOrtT631EeIbWWsg5NKgyCNeaNF/
ePVX3jz+DLg2zUgT4kZiXRtnagHEf7uemmm9RzANWf9lG50ECer5PyU0nJlG
c2eDbK9agJKi49qk4SC+up89es5bCpdRfmlSshBhqRTile/U/x3XhiuhESYr
+Ac6z/Ho
         "], {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
           ArrowBox[CompressedData["
1:eJwVxUUBJIkBAMBtmmZmZmZm0HAS1sDZjZwknyr/77///AX//Pnzn//x/wEQ
gAAYQIAfgAIYgAMEwAMioAMW4AMxkAMN0AMrsAMfCIEwiIA/EAUxEAcJkAQF
UAIN0AYDMAELsAUHcAMPCIYQ6AehEAYREAlREA+JkAyZkAOFUAqVUAeN0Akj
8A9GYQwmYQqmYQGWYAXWYQt24QjO4Aqe4Av5ISiCIRRCIwwiIjKiIgZiIx7i
IzFSIzNy/9Af9qN/zI/9ST/lp/3Mn/MLfskv/zW/5fegGMqgLMqhMqqiFuqi
IZqiBdqiPbqiL8ZiHKZgGmZjHhZhGVZiHTZgG7ZjH07gJE7hNM7gLM7hPC7g
Om7iPh7hOV7jPb7gO/4SJEERNMEQLMERPCEQImEQFhEQMVEQDTEQK3EQH0mR
NMmQLMmRAimSEqmTJmmTIZmQJdmSI7mRJ0VTDMVSHCVSEiVTBmVRDuVTEZVS
FdVRE3XRDM3SHC3RMq3QJm3TLh3QMZ3ROV3TM30zLMMxMqMwKmMxDuMxIZMw
BdMwPbMwD8uxCquyGmuzLhuxKVuyLTuwK7uzL6dyGudwHhdzGVdxHTdyG3dw
Hy/wIi/xMq/wKq/xOm/wPh/yOV/xPT/zO/8IoiAJsqAIqqAJumAIphAIkVAI
tTAIi3AIryiJsqiIqqiJhmiKluiLoRiLpdiIo7iKp/hJsqRIqqRJpmRJthRI
kZRIuVRJrTRJm3TJiqzKmmzJtuzIoRzLqVzItdzJvTzLt6IqmmIrjuIqkZIo
mVIqjTIoi7Irj6qpjuqqnhqrqVqprTqqq3qor+ZqnpZomVZrnTZpm3Zqn27o
pm7ptu7oru7pvh7ouV7qvT7pu34bpmEZtuEYruEZvhEYoVEYlTEYs3EYj2mZ
tumYrumZgRmakZmbpVmbo7mYp/latuVYruVZoRVZsVVYldVYvTVZq3VZn+3Y
ru3ZkR3biV3atd3agz3bm73bt+M6nhM7iZM6ldM4nTM6i3M4j+u5iZu6mVu7
rTu5q3u6r5d6mdd4nTd7m3d5nx/4oR/5sZ/4qZ/5uV/4vT/6u38FYRAFcZAE
aZAFeVAEZTAEU3AEdxiFcZiEaZiFRViGVdiHYziHZ/hEcZREaZRFZVRFdTRE
U7REe3RFb5zEaZzFVVzHTTzGc7zGR3zHX5ImWVInTdImU7IkW3ImT5qlTdqm
XTqna3qlb9ZmXbZkW3ZnX17kZV7ldd7kbd7lfT7ke34WZVEVddEUbdEVfTEU
Y3EUV1mVddmUbdmVQzmWU7mXZ3lXddVUbdVVYzVVc3VUV/XUTd3WXT3Vc73U
Z33Xb9M2XTM3S7M2V/M0X9u1S7u2W3u3b7d2W/d0Xz/0Yz/1c7/0a7/1e38M
4zAN87AM67AN+3AM5ziN87iM67iNx3iO1zRPy7RO23RO13TPy7zO23zN9/ws
67It9/Is77qtz/qu3/Zu337s537t9/7s7/4d53Ed9/Ec7/Gd13mfz/me33Vf
z/Ve3/3c7/097/O9338Bu7C7XQ==
            "], 0.025250458087772487`]}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
            DiskBox[1, 0.025250458087772487]}, 
           DiskBox[2, 0.025250458087772487], DiskBox[3, 0.025250458087772487],
            DiskBox[4, 0.025250458087772487], 
           DiskBox[5, 0.025250458087772487], DiskBox[6, 0.025250458087772487],
            DiskBox[7, 0.025250458087772487], 
           DiskBox[8, 0.025250458087772487], DiskBox[9, 0.025250458087772487], 
           {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
            DiskBox[10, 0.025250458087772487]}, 
           DiskBox[11, 0.025250458087772487], 
           DiskBox[12, 0.025250458087772487], 
           DiskBox[13, 0.025250458087772487], 
           DiskBox[14, 0.025250458087772487], 
           DiskBox[15, 0.025250458087772487], 
           DiskBox[16, 0.025250458087772487], 
           DiskBox[17, 0.025250458087772487], 
           DiskBox[18, 0.025250458087772487], 
           {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
            DiskBox[19, 0.025250458087772487]}, 
           DiskBox[20, 0.025250458087772487], 
           DiskBox[21, 0.025250458087772487], 
           DiskBox[22, 0.025250458087772487], 
           DiskBox[23, 0.025250458087772487], 
           DiskBox[24, 0.025250458087772487], 
           DiskBox[25, 0.025250458087772487], 
           DiskBox[26, 0.025250458087772487], 
           DiskBox[27, 0.025250458087772487], 
           {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
            DiskBox[28, 0.025250458087772487]}, 
           DiskBox[29, 0.025250458087772487], 
           DiskBox[30, 0.025250458087772487], 
           DiskBox[31, 0.025250458087772487], 
           DiskBox[32, 0.025250458087772487], 
           DiskBox[33, 0.025250458087772487], 
           DiskBox[34, 0.025250458087772487], 
           DiskBox[35, 0.025250458087772487], 
           DiskBox[36, 0.025250458087772487], 
           {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
            DiskBox[37, 0.025250458087772487]}, 
           DiskBox[38, 0.025250458087772487], 
           DiskBox[39, 0.025250458087772487], 
           DiskBox[40, 0.025250458087772487], 
           DiskBox[41, 0.025250458087772487], 
           DiskBox[42, 0.025250458087772487], 
           DiskBox[43, 0.025250458087772487], 
           DiskBox[44, 0.025250458087772487], 
           DiskBox[45, 0.025250458087772487], 
           {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
            DiskBox[46, 0.025250458087772487]}, 
           DiskBox[47, 0.025250458087772487], 
           DiskBox[48, 0.025250458087772487], 
           DiskBox[49, 0.025250458087772487], 
           DiskBox[50, 0.025250458087772487], 
           DiskBox[51, 0.025250458087772487], 
           DiskBox[52, 0.025250458087772487], 
           DiskBox[53, 0.025250458087772487], 
           DiskBox[54, 0.025250458087772487], 
           {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
            DiskBox[55, 0.025250458087772487]}, 
           DiskBox[56, 0.025250458087772487], 
           DiskBox[57, 0.025250458087772487], 
           DiskBox[58, 0.025250458087772487], 
           DiskBox[59, 0.025250458087772487], 
           DiskBox[60, 0.025250458087772487], 
           DiskBox[61, 0.025250458087772487], 
           DiskBox[62, 0.025250458087772487], 
           DiskBox[63, 0.025250458087772487], 
           {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
            DiskBox[64, 0.025250458087772487]}}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    FormatType->TraditionalForm,
    FrameTicks->None], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 
        19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 
        53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64}, {Null, 
         SparseArray[
         Automatic, {64, 64}, 0, {
          1, {{0, 21, 42, 63, 84, 105, 126, 147, 168, 189, 212, 235, 258, 281,
             304, 327, 348, 369, 392, 417, 442, 467, 492, 515, 536, 557, 580, 
            605, 632, 659, 684, 707, 728, 749, 772, 797, 824, 851, 876, 899, 
            920, 941, 964, 989, 1014, 1039, 1064, 1087, 1108, 1129, 1152, 
            1175, 1198, 1221, 1244, 1267, 1288, 1309, 1330, 1351, 1372, 1393, 
            1414, 1435, 1456}, CompressedData["
1:eJw1lGeygtoWhA8oWUBFwJxQDOQgOY3hDeFO4E3tDvH21uKXVV/jWr27utbl
n///7x/67+/vX+bvj8IvPZkyLMcL4kLb7C/3lx/l5UCNUFqutoer/Q7ioqLo
LxSl2ULTd0fr4YRJTdETAqWZvFwZm/3p9nTTBnAKOJMVTTe3h/Pl7n1aAhmO
lxV1Zax3x6v98rPuC1leUee6uT9Zj3cQ5f0PcurcWB/Ot6cTxgUs0ViMP88X
y83ucnt5UVaSL4WRatv99f7247wa8H9B/OKlttrsDpbtBElRYypeRLC20rf7
4+X2cMO0wS7gGfBKN3aH0/X+fMEvHBAsw5ph7o9ny377Udb9YsHwuWGuD6fb
wwnivOxHqprr4/n+dMOkqBCjIMIB/r/ebC/Wy40+ZUfDm7QY6e56e3txVvXU
hCHJLr98u9tfrLvjJ3k90FMWg/E+Iuz2h+vNfrlBWjQThsNCCCsI+8PRuj/e
Xhh92ilLUiaCDovH081+On6clR3D/ZLCjvXxdL4/3CDJq57lR2qezvbTC9Oi
HqipIC2WMIIB58v15URp2dKMCIvaZqTW240/VTdhBUkmUW+//GrdXo6XZHVP
TTlxpmAyHkoU63Z/u36U5s1AM7wkq9gJaQ/pdrcdL4g/RdlO2JlCQifKATbt
h+uHSVZ1U05Wf6lhz9l+PL0gzeue4ZX5SE+Ppx9+imagGAE93WxhBgOer3eU
lA3NiugpvryM1InTqp1wkoJOk9SvX/523Cj51N2UF2Yqio3JeCxRHNeL06xs
eooR5TnqjZ2QbpBcz08+edUONCsp6DjMEOUOm36QZkXdTbiZqpu/5LDn6Qfh
J2/6KS+j6iN9BGFWtAPFCvIC5b1cYQYDwigua5oTlSWqiy9fI02qZsJLqmag
6CT595fHSVrW7XQ2X6xMVB2D8VYiJOmnajpGkJf6GmXHQgguhPST1W1PsaKi
Gag7jBDBg8Usb7qB5iR1ZR5Ov9SwI8zyou0n/Gyuo/IjDfKiGyhOUBY6zon1
esMIBhRlRfOiujRwTWDRiUZaT6S5Zu6OqDsJPf7iqm6ms9Ua5wRlx1Q8kuC6
aRl5oeOgoOrYBZwCN23HCsrS2B1RdDgg+ANvXU9xoqrhrtwfv6QwvOj6geal
+QqnxX6ONO8HihfUhbE54LQ4UQwHLflSnC/N7RF3BdaS8gcnkrbenSwbHScp
V18Iv/szDgrqjYF4F4GMrG8OOCcoNpYANoCssjC2R8tGp7GYwLYfOEFdmjtc
Ey/4xYKhsCTOtfUe58QPR9j/BxTjuzc=
            "]}, Pattern}]}, {
        GraphHighlight -> {50, 10, 34, 26, 42, 58, 2, 18}}]]}, 
      TagBox[GraphicsGroupBox[GraphicsComplexBox[CompressedData["
1:eJw9kHsw2wcAx3/JJuo85tFWbdRzpTSh5rGS+f4oxaxo5jyq2ypFu7qjNHM3
1XqtTvWiuu16mFePrul5xmPXRldFy5RaI60Oo0hKZkHqkYQQ6+52+9597vPf
54+vNTuFlUAlCIJ8y78+URNidp6rwSSl5/Q7fqtwMYh834VHJS8XFmYNvadC
Q7ORtSRkExk+9KEs6RbYA05FjOcEWZ2yFBOetokQE5NpdZsC+2uzpS0XNMjk
32LV8DX42FXCpH1HkA3BRZ8wLOSQ3Cu26GmlkI9iYwby7FagPHKMSToQZNlB
jzrldSo59E2UbmSjHM3dFcq542okB7OCxm028LWq1jNKi0I68ctzOYurqL56
63GQcB2EVc2dISFBHo02EY0UbIBxwc3X5r4C+QaBVUbsVbzLXZ46+AuF7Bvq
EYlml5E7UkBP1N3EtX22hsWfz8LrkEbXsYtCmpKR7rqeGqiid1P1muZBm1tk
mj4lSFFQbI9J1AIyAow5N79UYLrPUvBB6BoUvYJLM+0aaByZjtU0FSpKM+nh
OnJ0Lkp0J9kbOF+uk1rpo0CodmC1Q/g6njmKJVHsl3BNdvqrxW8T/fZmIqMe
KWo99rHPzmnwgl7uTGvZQv326wdmv3Xj3iGJbb6XCrtFxtMLjFkw61GUeUKN
+IjBJ+32M1DsteINOLxBzoH+ZKGVAjM2OeZG0atgjdlmD1xZwOnggNmV9BmI
74y36RmqkP+tacu4/iukPU5s2Lq4BELmZ1Mw0AY3s/i/6e7r8GOl2ldsbINT
wfZO+FGMzlFxkw9nG4OjtYuMHWNw2GmV5Bu2jJ5G2sm4bSmUhUFahbkqyPq4
gXEFCzAU1rV/pnyNunLLxCa+HIyM+sN+MStwI6sopf4rYJkXsoriRTAuEd4V
hCrhXGzbG+gphp87hd89rIYsnBdR9hGVFPBGd/H9xXiSHmfcYqYGV5T7w8tB
OaosGXk3HZV4kJf/NFh/CuGf+lc+L17CyTXvmf0/yzE2MbdJKZEjmpfbHnZ7
Bo3eagOtcimE43pdSTtV+L5OYL4YMg/mRPoEl74Kqt12ihd7FAz7h6TeDoKk
NVV1yuLX0FbLWVxyHYaFvrbk3IF13F2h9w5XDMDt1G3nqT1SjAyb/M4LmcSH
lLBT0qNvMHYm+Kx79jDyu/VzJHZjoFl2FF9Sj6D1WF9s+QspKi96dMrapXhG
JUZ2fdGBja4yU27HEgxGPNssH/0BaVqkxOrtT631EeIbWWsg5NKgyCNeaNF/
ePVX3jz+DLg2zUgT4kZiXRtnagHEf7uemmm9RzANWf9lG50ECer5PyU0nJlG
c2eDbK9agJKi49qk4SC+up89es5bCpdRfmlSshBhqRTile/U/x3XhiuhESYr
+Ac6z/Ho
         "], {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
           ArrowBox[CompressedData["
1:eJwVxUUBJIkBAMBtmmZmZmZm0HAS1sDZjZwknyr/77///AX//Pnzn//x/wEQ
gAAYQIAfgAIYgAMEwAMioAMW4AMxkAMN0AMrsAMfCIEwiIA/EAUxEAcJkAQF
UAIN0AYDMAELsAUHcAMPCIYQ6AehEAYREAlREA+JkAyZkAOFUAqVUAeN0Akj
8A9GYQwmYQqmYQGWYAXWYQt24QjO4Aqe4Av5ISiCIRRCIwwiIjKiIgZiIx7i
IzFSIzNy/9Af9qN/zI/9ST/lp/3Mn/MLfskv/zW/5fegGMqgLMqhMqqiFuqi
IZqiBdqiPbqiL8ZiHKZgGmZjHhZhGVZiHTZgG7ZjH07gJE7hNM7gLM7hPC7g
Om7iPh7hOV7jPb7gO/4SJEERNMEQLMERPCEQImEQFhEQMVEQDTEQK3EQH0mR
NMmQLMmRAimSEqmTJmmTIZmQJdmSI7mRJ0VTDMVSHCVSEiVTBmVRDuVTEZVS
FdVRE3XRDM3SHC3RMq3QJm3TLh3QMZ3ROV3TM30zLMMxMqMwKmMxDuMxIZMw
BdMwPbMwD8uxCquyGmuzLhuxKVuyLTuwK7uzL6dyGudwHhdzGVdxHTdyG3dw
Hy/wIi/xMq/wKq/xOm/wPh/yOV/xPT/zO/8IoiAJsqAIqqAJumAIphAIkVAI
tTAIi3AIryiJsqiIqqiJhmiKluiLoRiLpdiIo7iKp/hJsqRIqqRJpmRJthRI
kZRIuVRJrTRJm3TJiqzKmmzJtuzIoRzLqVzItdzJvTzLt6IqmmIrjuIqkZIo
mVIqjTIoi7Irj6qpjuqqnhqrqVqprTqqq3qor+ZqnpZomVZrnTZpm3Zqn27o
pm7ptu7oru7pvh7ouV7qvT7pu34bpmEZtuEYruEZvhEYoVEYlTEYs3EYj2mZ
tumYrumZgRmakZmbpVmbo7mYp/latuVYruVZoRVZsVVYldVYvTVZq3VZn+3Y
ru3ZkR3biV3atd3agz3bm73bt+M6nhM7iZM6ldM4nTM6i3M4j+u5iZu6mVu7
rTu5q3u6r5d6mdd4nTd7m3d5nx/4oR/5sZ/4qZ/5uV/4vT/6u38FYRAFcZAE
aZAFeVAEZTAEU3AEdxiFcZiEaZiFRViGVdiHYziHZ/hEcZREaZRFZVRFdTRE
U7REe3RFb5zEaZzFVVzHTTzGc7zGR3zHX5ImWVInTdImU7IkW3ImT5qlTdqm
XTqna3qlb9ZmXbZkW3ZnX17kZV7ldd7kbd7lfT7ke34WZVEVddEUbdEVfTEU
Y3EUV1mVddmUbdmVQzmWU7mXZ3lXddVUbdVVYzVVc3VUV/XUTd3WXT3Vc73U
Z33Xb9M2XTM3S7M2V/M0X9u1S7u2W3u3b7d2W/d0Xz/0Yz/1c7/0a7/1e38M
4zAN87AM67AN+3AM5ziN87iM67iNx3iO1zRPy7RO23RO13TPy7zO23zN9/ws
67It9/Is77qtz/qu3/Zu337s537t9/7s7/4d53Ed9/Ec7/Gd13mfz/me33Vf
z/Ve3/3c7/097/O9338Bu7C7XQ==
            "], 0.025250458087772487`]}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           DiskBox[1, 0.025250458087772487], 
           {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
            DiskBox[2, 0.025250458087772487]}, 
           DiskBox[3, 0.025250458087772487], DiskBox[4, 0.025250458087772487],
            DiskBox[5, 0.025250458087772487], 
           DiskBox[6, 0.025250458087772487], DiskBox[7, 0.025250458087772487],
            DiskBox[8, 0.025250458087772487], 
           DiskBox[9, 0.025250458087772487], 
           {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
            DiskBox[10, 0.025250458087772487]}, 
           DiskBox[11, 0.025250458087772487], 
           DiskBox[12, 0.025250458087772487], 
           DiskBox[13, 0.025250458087772487], 
           DiskBox[14, 0.025250458087772487], 
           DiskBox[15, 0.025250458087772487], 
           DiskBox[16, 0.025250458087772487], 
           DiskBox[17, 0.025250458087772487], 
           {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
            DiskBox[18, 0.025250458087772487]}, 
           DiskBox[19, 0.025250458087772487], 
           DiskBox[20, 0.025250458087772487], 
           DiskBox[21, 0.025250458087772487], 
           DiskBox[22, 0.025250458087772487], 
           DiskBox[23, 0.025250458087772487], 
           DiskBox[24, 0.025250458087772487], 
           DiskBox[25, 0.025250458087772487], 
           {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
            DiskBox[26, 0.025250458087772487]}, 
           DiskBox[27, 0.025250458087772487], 
           DiskBox[28, 0.025250458087772487], 
           DiskBox[29, 0.025250458087772487], 
           DiskBox[30, 0.025250458087772487], 
           DiskBox[31, 0.025250458087772487], 
           DiskBox[32, 0.025250458087772487], 
           DiskBox[33, 0.025250458087772487], 
           {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
            DiskBox[34, 0.025250458087772487]}, 
           DiskBox[35, 0.025250458087772487], 
           DiskBox[36, 0.025250458087772487], 
           DiskBox[37, 0.025250458087772487], 
           DiskBox[38, 0.025250458087772487], 
           DiskBox[39, 0.025250458087772487], 
           DiskBox[40, 0.025250458087772487], 
           DiskBox[41, 0.025250458087772487], 
           {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
            DiskBox[42, 0.025250458087772487]}, 
           DiskBox[43, 0.025250458087772487], 
           DiskBox[44, 0.025250458087772487], 
           DiskBox[45, 0.025250458087772487], 
           DiskBox[46, 0.025250458087772487], 
           DiskBox[47, 0.025250458087772487], 
           DiskBox[48, 0.025250458087772487], 
           DiskBox[49, 0.025250458087772487], 
           {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
            DiskBox[50, 0.025250458087772487]}, 
           DiskBox[51, 0.025250458087772487], 
           DiskBox[52, 0.025250458087772487], 
           DiskBox[53, 0.025250458087772487], 
           DiskBox[54, 0.025250458087772487], 
           DiskBox[55, 0.025250458087772487], 
           DiskBox[56, 0.025250458087772487], 
           DiskBox[57, 0.025250458087772487], 
           {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
            DiskBox[58, 0.025250458087772487]}, 
           DiskBox[59, 0.025250458087772487], 
           DiskBox[60, 0.025250458087772487], 
           DiskBox[61, 0.025250458087772487], 
           DiskBox[62, 0.025250458087772487], 
           DiskBox[63, 0.025250458087772487], 
           DiskBox[64, 0.025250458087772487]}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    FormatType->TraditionalForm,
    FrameTicks->None], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 
        19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 
        53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64}, {Null, 
         SparseArray[
         Automatic, {64, 64}, 0, {
          1, {{0, 21, 42, 63, 84, 105, 126, 147, 168, 189, 212, 235, 258, 281,
             304, 327, 348, 369, 392, 417, 442, 467, 492, 515, 536, 557, 580, 
            605, 632, 659, 684, 707, 728, 749, 772, 797, 824, 851, 876, 899, 
            920, 941, 964, 989, 1014, 1039, 1064, 1087, 1108, 1129, 1152, 
            1175, 1198, 1221, 1244, 1267, 1288, 1309, 1330, 1351, 1372, 1393, 
            1414, 1435, 1456}, CompressedData["
1:eJw1lGeygtoWhA8oWUBFwJxQDOQgOY3hDeFO4E3tDvH21uKXVV/jWr27utbl
n///7x/67+/vX+bvj8IvPZkyLMcL4kLb7C/3lx/l5UCNUFqutoer/Q7ioqLo
LxSl2ULTd0fr4YRJTdETAqWZvFwZm/3p9nTTBnAKOJMVTTe3h/Pl7n1aAhmO
lxV1Zax3x6v98rPuC1leUee6uT9Zj3cQ5f0PcurcWB/Ot6cTxgUs0ViMP88X
y83ucnt5UVaSL4WRatv99f7247wa8H9B/OKlttrsDpbtBElRYypeRLC20rf7
4+X2cMO0wS7gGfBKN3aH0/X+fMEvHBAsw5ph7o9ny377Udb9YsHwuWGuD6fb
wwnivOxHqprr4/n+dMOkqBCjIMIB/r/ebC/Wy40+ZUfDm7QY6e56e3txVvXU
hCHJLr98u9tfrLvjJ3k90FMWg/E+Iuz2h+vNfrlBWjQThsNCCCsI+8PRuj/e
Xhh92ilLUiaCDovH081+On6clR3D/ZLCjvXxdL4/3CDJq57lR2qezvbTC9Oi
HqipIC2WMIIB58v15URp2dKMCIvaZqTW240/VTdhBUkmUW+//GrdXo6XZHVP
TTlxpmAyHkoU63Z/u36U5s1AM7wkq9gJaQ/pdrcdL4g/RdlO2JlCQifKATbt
h+uHSVZ1U05Wf6lhz9l+PL0gzeue4ZX5SE+Ppx9+imagGAE93WxhBgOer3eU
lA3NiugpvryM1InTqp1wkoJOk9SvX/523Cj51N2UF2Yqio3JeCxRHNeL06xs
eooR5TnqjZ2QbpBcz08+edUONCsp6DjMEOUOm36QZkXdTbiZqpu/5LDn6Qfh
J2/6KS+j6iN9BGFWtAPFCvIC5b1cYQYDwigua5oTlSWqiy9fI02qZsJLqmag
6CT595fHSVrW7XQ2X6xMVB2D8VYiJOmnajpGkJf6GmXHQgguhPST1W1PsaKi
Gag7jBDBg8Usb7qB5iR1ZR5Ov9SwI8zyou0n/Gyuo/IjDfKiGyhOUBY6zon1
esMIBhRlRfOiujRwTWDRiUZaT6S5Zu6OqDsJPf7iqm6ms9Ua5wRlx1Q8kuC6
aRl5oeOgoOrYBZwCN23HCsrS2B1RdDgg+ANvXU9xoqrhrtwfv6QwvOj6geal
+QqnxX6ONO8HihfUhbE54LQ4UQwHLflSnC/N7RF3BdaS8gcnkrbenSwbHScp
V18Iv/szDgrqjYF4F4GMrG8OOCcoNpYANoCssjC2R8tGp7GYwLYfOEFdmjtc
Ey/4xYKhsCTOtfUe58QPR9j/BxTjuzc=
            "]}, Pattern}]}, {
        GraphHighlight -> {43, 35, 11, 59, 27, 51, 19, 3}}]]}, 
      TagBox[GraphicsGroupBox[GraphicsComplexBox[CompressedData["
1:eJw9kHsw2wcAx3/JJuo85tFWbdRzpTSh5rGS+f4oxaxo5jyq2ypFu7qjNHM3
1XqtTvWiuu16mFePrul5xmPXRldFy5RaI60Oo0hKZkHqkYQQ6+52+9597vPf
54+vNTuFlUAlCIJ8y78+URNidp6rwSSl5/Q7fqtwMYh834VHJS8XFmYNvadC
Q7ORtSRkExk+9KEs6RbYA05FjOcEWZ2yFBOetokQE5NpdZsC+2uzpS0XNMjk
32LV8DX42FXCpH1HkA3BRZ8wLOSQ3Cu26GmlkI9iYwby7FagPHKMSToQZNlB
jzrldSo59E2UbmSjHM3dFcq542okB7OCxm028LWq1jNKi0I68ctzOYurqL56
63GQcB2EVc2dISFBHo02EY0UbIBxwc3X5r4C+QaBVUbsVbzLXZ46+AuF7Bvq
EYlml5E7UkBP1N3EtX22hsWfz8LrkEbXsYtCmpKR7rqeGqiid1P1muZBm1tk
mj4lSFFQbI9J1AIyAow5N79UYLrPUvBB6BoUvYJLM+0aaByZjtU0FSpKM+nh
OnJ0Lkp0J9kbOF+uk1rpo0CodmC1Q/g6njmKJVHsl3BNdvqrxW8T/fZmIqMe
KWo99rHPzmnwgl7uTGvZQv326wdmv3Xj3iGJbb6XCrtFxtMLjFkw61GUeUKN
+IjBJ+32M1DsteINOLxBzoH+ZKGVAjM2OeZG0atgjdlmD1xZwOnggNmV9BmI
74y36RmqkP+tacu4/iukPU5s2Lq4BELmZ1Mw0AY3s/i/6e7r8GOl2ldsbINT
wfZO+FGMzlFxkw9nG4OjtYuMHWNw2GmV5Bu2jJ5G2sm4bSmUhUFahbkqyPq4
gXEFCzAU1rV/pnyNunLLxCa+HIyM+sN+MStwI6sopf4rYJkXsoriRTAuEd4V
hCrhXGzbG+gphp87hd89rIYsnBdR9hGVFPBGd/H9xXiSHmfcYqYGV5T7w8tB
OaosGXk3HZV4kJf/NFh/CuGf+lc+L17CyTXvmf0/yzE2MbdJKZEjmpfbHnZ7
Bo3eagOtcimE43pdSTtV+L5OYL4YMg/mRPoEl74Kqt12ihd7FAz7h6TeDoKk
NVV1yuLX0FbLWVxyHYaFvrbk3IF13F2h9w5XDMDt1G3nqT1SjAyb/M4LmcSH
lLBT0qNvMHYm+Kx79jDyu/VzJHZjoFl2FF9Sj6D1WF9s+QspKi96dMrapXhG
JUZ2fdGBja4yU27HEgxGPNssH/0BaVqkxOrtT631EeIbWWsg5NKgyCNeaNF/
ePVX3jz+DLg2zUgT4kZiXRtnagHEf7uemmm9RzANWf9lG50ECer5PyU0nJlG
c2eDbK9agJKi49qk4SC+up89es5bCpdRfmlSshBhqRTile/U/x3XhiuhESYr
+Ac6z/Ho
         "], {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
           ArrowBox[CompressedData["
1:eJwVxUUBJIkBAMBtmmZmZmZm0HAS1sDZjZwknyr/77///AX//Pnzn//x/wEQ
gAAYQIAfgAIYgAMEwAMioAMW4AMxkAMN0AMrsAMfCIEwiIA/EAUxEAcJkAQF
UAIN0AYDMAELsAUHcAMPCIYQ6AehEAYREAlREA+JkAyZkAOFUAqVUAeN0Akj
8A9GYQwmYQqmYQGWYAXWYQt24QjO4Aqe4Av5ISiCIRRCIwwiIjKiIgZiIx7i
IzFSIzNy/9Af9qN/zI/9ST/lp/3Mn/MLfskv/zW/5fegGMqgLMqhMqqiFuqi
IZqiBdqiPbqiL8ZiHKZgGmZjHhZhGVZiHTZgG7ZjH07gJE7hNM7gLM7hPC7g
Om7iPh7hOV7jPb7gO/4SJEERNMEQLMERPCEQImEQFhEQMVEQDTEQK3EQH0mR
NMmQLMmRAimSEqmTJmmTIZmQJdmSI7mRJ0VTDMVSHCVSEiVTBmVRDuVTEZVS
FdVRE3XRDM3SHC3RMq3QJm3TLh3QMZ3ROV3TM30zLMMxMqMwKmMxDuMxIZMw
BdMwPbMwD8uxCquyGmuzLhuxKVuyLTuwK7uzL6dyGudwHhdzGVdxHTdyG3dw
Hy/wIi/xMq/wKq/xOm/wPh/yOV/xPT/zO/8IoiAJsqAIqqAJumAIphAIkVAI
tTAIi3AIryiJsqiIqqiJhmiKluiLoRiLpdiIo7iKp/hJsqRIqqRJpmRJthRI
kZRIuVRJrTRJm3TJiqzKmmzJtuzIoRzLqVzItdzJvTzLt6IqmmIrjuIqkZIo
mVIqjTIoi7Irj6qpjuqqnhqrqVqprTqqq3qor+ZqnpZomVZrnTZpm3Zqn27o
pm7ptu7oru7pvh7ouV7qvT7pu34bpmEZtuEYruEZvhEYoVEYlTEYs3EYj2mZ
tumYrumZgRmakZmbpVmbo7mYp/latuVYruVZoRVZsVVYldVYvTVZq3VZn+3Y
ru3ZkR3biV3atd3agz3bm73bt+M6nhM7iZM6ldM4nTM6i3M4j+u5iZu6mVu7
rTu5q3u6r5d6mdd4nTd7m3d5nx/4oR/5sZ/4qZ/5uV/4vT/6u38FYRAFcZAE
aZAFeVAEZTAEU3AEdxiFcZiEaZiFRViGVdiHYziHZ/hEcZREaZRFZVRFdTRE
U7REe3RFb5zEaZzFVVzHTTzGc7zGR3zHX5ImWVInTdImU7IkW3ImT5qlTdqm
XTqna3qlb9ZmXbZkW3ZnX17kZV7ldd7kbd7lfT7ke34WZVEVddEUbdEVfTEU
Y3EUV1mVddmUbdmVQzmWU7mXZ3lXddVUbdVVYzVVc3VUV/XUTd3WXT3Vc73U
Z33Xb9M2XTM3S7M2V/M0X9u1S7u2W3u3b7d2W/d0Xz/0Yz/1c7/0a7/1e38M
4zAN87AM67AN+3AM5ziN87iM67iNx3iO1zRPy7RO23RO13TPy7zO23zN9/ws
67It9/Is77qtz/qu3/Zu337s537t9/7s7/4d53Ed9/Ec7/Gd13mfz/me33Vf
z/Ve3/3c7/097/O9338Bu7C7XQ==
            "], 0.025250458087772487`]}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           DiskBox[1, 0.025250458087772487], DiskBox[2, 0.025250458087772487], 
           {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
            DiskBox[3, 0.025250458087772487]}, 
           DiskBox[4, 0.025250458087772487], DiskBox[5, 0.025250458087772487],
            DiskBox[6, 0.025250458087772487], 
           DiskBox[7, 0.025250458087772487], DiskBox[8, 0.025250458087772487],
            DiskBox[9, 0.025250458087772487], 
           DiskBox[10, 0.025250458087772487], 
           {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
            DiskBox[11, 0.025250458087772487]}, 
           DiskBox[12, 0.025250458087772487], 
           DiskBox[13, 0.025250458087772487], 
           DiskBox[14, 0.025250458087772487], 
           DiskBox[15, 0.025250458087772487], 
           DiskBox[16, 0.025250458087772487], 
           DiskBox[17, 0.025250458087772487], 
           DiskBox[18, 0.025250458087772487], 
           {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
            DiskBox[19, 0.025250458087772487]}, 
           DiskBox[20, 0.025250458087772487], 
           DiskBox[21, 0.025250458087772487], 
           DiskBox[22, 0.025250458087772487], 
           DiskBox[23, 0.025250458087772487], 
           DiskBox[24, 0.025250458087772487], 
           DiskBox[25, 0.025250458087772487], 
           DiskBox[26, 0.025250458087772487], 
           {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
            DiskBox[27, 0.025250458087772487]}, 
           DiskBox[28, 0.025250458087772487], 
           DiskBox[29, 0.025250458087772487], 
           DiskBox[30, 0.025250458087772487], 
           DiskBox[31, 0.025250458087772487], 
           DiskBox[32, 0.025250458087772487], 
           DiskBox[33, 0.025250458087772487], 
           DiskBox[34, 0.025250458087772487], 
           {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
            DiskBox[35, 0.025250458087772487]}, 
           DiskBox[36, 0.025250458087772487], 
           DiskBox[37, 0.025250458087772487], 
           DiskBox[38, 0.025250458087772487], 
           DiskBox[39, 0.025250458087772487], 
           DiskBox[40, 0.025250458087772487], 
           DiskBox[41, 0.025250458087772487], 
           DiskBox[42, 0.025250458087772487], 
           {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
            DiskBox[43, 0.025250458087772487]}, 
           DiskBox[44, 0.025250458087772487], 
           DiskBox[45, 0.025250458087772487], 
           DiskBox[46, 0.025250458087772487], 
           DiskBox[47, 0.025250458087772487], 
           DiskBox[48, 0.025250458087772487], 
           DiskBox[49, 0.025250458087772487], 
           DiskBox[50, 0.025250458087772487], 
           {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
            DiskBox[51, 0.025250458087772487]}, 
           DiskBox[52, 0.025250458087772487], 
           DiskBox[53, 0.025250458087772487], 
           DiskBox[54, 0.025250458087772487], 
           DiskBox[55, 0.025250458087772487], 
           DiskBox[56, 0.025250458087772487], 
           DiskBox[57, 0.025250458087772487], 
           DiskBox[58, 0.025250458087772487], 
           {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
            DiskBox[59, 0.025250458087772487]}, 
           DiskBox[60, 0.025250458087772487], 
           DiskBox[61, 0.025250458087772487], 
           DiskBox[62, 0.025250458087772487], 
           DiskBox[63, 0.025250458087772487], 
           DiskBox[64, 0.025250458087772487]}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    FormatType->TraditionalForm,
    FrameTicks->None], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 
        19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 
        53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64}, {Null, 
         SparseArray[
         Automatic, {64, 64}, 0, {
          1, {{0, 21, 42, 63, 84, 105, 126, 147, 168, 189, 212, 235, 258, 281,
             304, 327, 348, 369, 392, 417, 442, 467, 492, 515, 536, 557, 580, 
            605, 632, 659, 684, 707, 728, 749, 772, 797, 824, 851, 876, 899, 
            920, 941, 964, 989, 1014, 1039, 1064, 1087, 1108, 1129, 1152, 
            1175, 1198, 1221, 1244, 1267, 1288, 1309, 1330, 1351, 1372, 1393, 
            1414, 1435, 1456}, CompressedData["
1:eJw1lGeygtoWhA8oWUBFwJxQDOQgOY3hDeFO4E3tDvH21uKXVV/jWr27utbl
n///7x/67+/vX+bvj8IvPZkyLMcL4kLb7C/3lx/l5UCNUFqutoer/Q7ioqLo
LxSl2ULTd0fr4YRJTdETAqWZvFwZm/3p9nTTBnAKOJMVTTe3h/Pl7n1aAhmO
lxV1Zax3x6v98rPuC1leUee6uT9Zj3cQ5f0PcurcWB/Ot6cTxgUs0ViMP88X
y83ucnt5UVaSL4WRatv99f7247wa8H9B/OKlttrsDpbtBElRYypeRLC20rf7
4+X2cMO0wS7gGfBKN3aH0/X+fMEvHBAsw5ph7o9ny377Udb9YsHwuWGuD6fb
wwnivOxHqprr4/n+dMOkqBCjIMIB/r/ebC/Wy40+ZUfDm7QY6e56e3txVvXU
hCHJLr98u9tfrLvjJ3k90FMWg/E+Iuz2h+vNfrlBWjQThsNCCCsI+8PRuj/e
Xhh92ilLUiaCDovH081+On6clR3D/ZLCjvXxdL4/3CDJq57lR2qezvbTC9Oi
HqipIC2WMIIB58v15URp2dKMCIvaZqTW240/VTdhBUkmUW+//GrdXo6XZHVP
TTlxpmAyHkoU63Z/u36U5s1AM7wkq9gJaQ/pdrcdL4g/RdlO2JlCQifKATbt
h+uHSVZ1U05Wf6lhz9l+PL0gzeue4ZX5SE+Ppx9+imagGAE93WxhBgOer3eU
lA3NiugpvryM1InTqp1wkoJOk9SvX/523Cj51N2UF2Yqio3JeCxRHNeL06xs
eooR5TnqjZ2QbpBcz08+edUONCsp6DjMEOUOm36QZkXdTbiZqpu/5LDn6Qfh
J2/6KS+j6iN9BGFWtAPFCvIC5b1cYQYDwigua5oTlSWqiy9fI02qZsJLqmag
6CT595fHSVrW7XQ2X6xMVB2D8VYiJOmnajpGkJf6GmXHQgguhPST1W1PsaKi
Gag7jBDBg8Usb7qB5iR1ZR5Ov9SwI8zyou0n/Gyuo/IjDfKiGyhOUBY6zon1
esMIBhRlRfOiujRwTWDRiUZaT6S5Zu6OqDsJPf7iqm6ms9Ua5wRlx1Q8kuC6
aRl5oeOgoOrYBZwCN23HCsrS2B1RdDgg+ANvXU9xoqrhrtwfv6QwvOj6geal
+QqnxX6ONO8HihfUhbE54LQ4UQwHLflSnC/N7RF3BdaS8gcnkrbenSwbHScp
V18Iv/szDgrqjYF4F4GMrG8OOCcoNpYANoCssjC2R8tGp7GYwLYfOEFdmjtc
Ey/4xYKhsCTOtfUe58QPR9j/BxTjuzc=
            "]}, Pattern}]}, {
        GraphHighlight -> {60, 52, 20, 28, 12, 44, 36, 4}}]]}, 
      TagBox[GraphicsGroupBox[GraphicsComplexBox[CompressedData["
1:eJw9kHsw2wcAx3/JJuo85tFWbdRzpTSh5rGS+f4oxaxo5jyq2ypFu7qjNHM3
1XqtTvWiuu16mFePrul5xmPXRldFy5RaI60Oo0hKZkHqkYQQ6+52+9597vPf
54+vNTuFlUAlCIJ8y78+URNidp6rwSSl5/Q7fqtwMYh834VHJS8XFmYNvadC
Q7ORtSRkExk+9KEs6RbYA05FjOcEWZ2yFBOetokQE5NpdZsC+2uzpS0XNMjk
32LV8DX42FXCpH1HkA3BRZ8wLOSQ3Cu26GmlkI9iYwby7FagPHKMSToQZNlB
jzrldSo59E2UbmSjHM3dFcq542okB7OCxm028LWq1jNKi0I68ctzOYurqL56
63GQcB2EVc2dISFBHo02EY0UbIBxwc3X5r4C+QaBVUbsVbzLXZ46+AuF7Bvq
EYlml5E7UkBP1N3EtX22hsWfz8LrkEbXsYtCmpKR7rqeGqiid1P1muZBm1tk
mj4lSFFQbI9J1AIyAow5N79UYLrPUvBB6BoUvYJLM+0aaByZjtU0FSpKM+nh
OnJ0Lkp0J9kbOF+uk1rpo0CodmC1Q/g6njmKJVHsl3BNdvqrxW8T/fZmIqMe
KWo99rHPzmnwgl7uTGvZQv326wdmv3Xj3iGJbb6XCrtFxtMLjFkw61GUeUKN
+IjBJ+32M1DsteINOLxBzoH+ZKGVAjM2OeZG0atgjdlmD1xZwOnggNmV9BmI
74y36RmqkP+tacu4/iukPU5s2Lq4BELmZ1Mw0AY3s/i/6e7r8GOl2ldsbINT
wfZO+FGMzlFxkw9nG4OjtYuMHWNw2GmV5Bu2jJ5G2sm4bSmUhUFahbkqyPq4
gXEFCzAU1rV/pnyNunLLxCa+HIyM+sN+MStwI6sopf4rYJkXsoriRTAuEd4V
hCrhXGzbG+gphp87hd89rIYsnBdR9hGVFPBGd/H9xXiSHmfcYqYGV5T7w8tB
OaosGXk3HZV4kJf/NFh/CuGf+lc+L17CyTXvmf0/yzE2MbdJKZEjmpfbHnZ7
Bo3eagOtcimE43pdSTtV+L5OYL4YMg/mRPoEl74Kqt12ihd7FAz7h6TeDoKk
NVV1yuLX0FbLWVxyHYaFvrbk3IF13F2h9w5XDMDt1G3nqT1SjAyb/M4LmcSH
lLBT0qNvMHYm+Kx79jDyu/VzJHZjoFl2FF9Sj6D1WF9s+QspKi96dMrapXhG
JUZ2fdGBja4yU27HEgxGPNssH/0BaVqkxOrtT631EeIbWWsg5NKgyCNeaNF/
ePVX3jz+DLg2zUgT4kZiXRtnagHEf7uemmm9RzANWf9lG50ECer5PyU0nJlG
c2eDbK9agJKi49qk4SC+up89es5bCpdRfmlSshBhqRTile/U/x3XhiuhESYr
+Ac6z/Ho
         "], {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
           ArrowBox[CompressedData["
1:eJwVxUUBJIkBAMBtmmZmZmZm0HAS1sDZjZwknyr/77///AX//Pnzn//x/wEQ
gAAYQIAfgAIYgAMEwAMioAMW4AMxkAMN0AMrsAMfCIEwiIA/EAUxEAcJkAQF
UAIN0AYDMAELsAUHcAMPCIYQ6AehEAYREAlREA+JkAyZkAOFUAqVUAeN0Akj
8A9GYQwmYQqmYQGWYAXWYQt24QjO4Aqe4Av5ISiCIRRCIwwiIjKiIgZiIx7i
IzFSIzNy/9Af9qN/zI/9ST/lp/3Mn/MLfskv/zW/5fegGMqgLMqhMqqiFuqi
IZqiBdqiPbqiL8ZiHKZgGmZjHhZhGVZiHTZgG7ZjH07gJE7hNM7gLM7hPC7g
Om7iPh7hOV7jPb7gO/4SJEERNMEQLMERPCEQImEQFhEQMVEQDTEQK3EQH0mR
NMmQLMmRAimSEqmTJmmTIZmQJdmSI7mRJ0VTDMVSHCVSEiVTBmVRDuVTEZVS
FdVRE3XRDM3SHC3RMq3QJm3TLh3QMZ3ROV3TM30zLMMxMqMwKmMxDuMxIZMw
BdMwPbMwD8uxCquyGmuzLhuxKVuyLTuwK7uzL6dyGudwHhdzGVdxHTdyG3dw
Hy/wIi/xMq/wKq/xOm/wPh/yOV/xPT/zO/8IoiAJsqAIqqAJumAIphAIkVAI
tTAIi3AIryiJsqiIqqiJhmiKluiLoRiLpdiIo7iKp/hJsqRIqqRJpmRJthRI
kZRIuVRJrTRJm3TJiqzKmmzJtuzIoRzLqVzItdzJvTzLt6IqmmIrjuIqkZIo
mVIqjTIoi7Irj6qpjuqqnhqrqVqprTqqq3qor+ZqnpZomVZrnTZpm3Zqn27o
pm7ptu7oru7pvh7ouV7qvT7pu34bpmEZtuEYruEZvhEYoVEYlTEYs3EYj2mZ
tumYrumZgRmakZmbpVmbo7mYp/latuVYruVZoRVZsVVYldVYvTVZq3VZn+3Y
ru3ZkR3biV3atd3agz3bm73bt+M6nhM7iZM6ldM4nTM6i3M4j+u5iZu6mVu7
rTu5q3u6r5d6mdd4nTd7m3d5nx/4oR/5sZ/4qZ/5uV/4vT/6u38FYRAFcZAE
aZAFeVAEZTAEU3AEdxiFcZiEaZiFRViGVdiHYziHZ/hEcZREaZRFZVRFdTRE
U7REe3RFb5zEaZzFVVzHTTzGc7zGR3zHX5ImWVInTdImU7IkW3ImT5qlTdqm
XTqna3qlb9ZmXbZkW3ZnX17kZV7ldd7kbd7lfT7ke34WZVEVddEUbdEVfTEU
Y3EUV1mVddmUbdmVQzmWU7mXZ3lXddVUbdVVYzVVc3VUV/XUTd3WXT3Vc73U
Z33Xb9M2XTM3S7M2V/M0X9u1S7u2W3u3b7d2W/d0Xz/0Yz/1c7/0a7/1e38M
4zAN87AM67AN+3AM5ziN87iM67iNx3iO1zRPy7RO23RO13TPy7zO23zN9/ws
67It9/Is77qtz/qu3/Zu337s537t9/7s7/4d53Ed9/Ec7/Gd13mfz/me33Vf
z/Ve3/3c7/097/O9338Bu7C7XQ==
            "], 0.025250458087772487`]}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           DiskBox[1, 0.025250458087772487], DiskBox[2, 0.025250458087772487],
            DiskBox[3, 0.025250458087772487], 
           {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
            DiskBox[4, 0.025250458087772487]}, 
           DiskBox[5, 0.025250458087772487], DiskBox[6, 0.025250458087772487],
            DiskBox[7, 0.025250458087772487], 
           DiskBox[8, 0.025250458087772487], DiskBox[9, 0.025250458087772487],
            DiskBox[10, 0.025250458087772487], 
           DiskBox[11, 0.025250458087772487], 
           {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
            DiskBox[12, 0.025250458087772487]}, 
           DiskBox[13, 0.025250458087772487], 
           DiskBox[14, 0.025250458087772487], 
           DiskBox[15, 0.025250458087772487], 
           DiskBox[16, 0.025250458087772487], 
           DiskBox[17, 0.025250458087772487], 
           DiskBox[18, 0.025250458087772487], 
           DiskBox[19, 0.025250458087772487], 
           {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
            DiskBox[20, 0.025250458087772487]}, 
           DiskBox[21, 0.025250458087772487], 
           DiskBox[22, 0.025250458087772487], 
           DiskBox[23, 0.025250458087772487], 
           DiskBox[24, 0.025250458087772487], 
           DiskBox[25, 0.025250458087772487], 
           DiskBox[26, 0.025250458087772487], 
           DiskBox[27, 0.025250458087772487], 
           {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
            DiskBox[28, 0.025250458087772487]}, 
           DiskBox[29, 0.025250458087772487], 
           DiskBox[30, 0.025250458087772487], 
           DiskBox[31, 0.025250458087772487], 
           DiskBox[32, 0.025250458087772487], 
           DiskBox[33, 0.025250458087772487], 
           DiskBox[34, 0.025250458087772487], 
           DiskBox[35, 0.025250458087772487], 
           {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
            DiskBox[36, 0.025250458087772487]}, 
           DiskBox[37, 0.025250458087772487], 
           DiskBox[38, 0.025250458087772487], 
           DiskBox[39, 0.025250458087772487], 
           DiskBox[40, 0.025250458087772487], 
           DiskBox[41, 0.025250458087772487], 
           DiskBox[42, 0.025250458087772487], 
           DiskBox[43, 0.025250458087772487], 
           {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
            DiskBox[44, 0.025250458087772487]}, 
           DiskBox[45, 0.025250458087772487], 
           DiskBox[46, 0.025250458087772487], 
           DiskBox[47, 0.025250458087772487], 
           DiskBox[48, 0.025250458087772487], 
           DiskBox[49, 0.025250458087772487], 
           DiskBox[50, 0.025250458087772487], 
           DiskBox[51, 0.025250458087772487], 
           {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
            DiskBox[52, 0.025250458087772487]}, 
           DiskBox[53, 0.025250458087772487], 
           DiskBox[54, 0.025250458087772487], 
           DiskBox[55, 0.025250458087772487], 
           DiskBox[56, 0.025250458087772487], 
           DiskBox[57, 0.025250458087772487], 
           DiskBox[58, 0.025250458087772487], 
           DiskBox[59, 0.025250458087772487], 
           {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
            DiskBox[60, 0.025250458087772487]}, 
           DiskBox[61, 0.025250458087772487], 
           DiskBox[62, 0.025250458087772487], 
           DiskBox[63, 0.025250458087772487], 
           DiskBox[64, 0.025250458087772487]}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    FormatType->TraditionalForm,
    FrameTicks->None], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 
        19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 
        53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64}, {Null, 
         SparseArray[
         Automatic, {64, 64}, 0, {
          1, {{0, 21, 42, 63, 84, 105, 126, 147, 168, 189, 212, 235, 258, 281,
             304, 327, 348, 369, 392, 417, 442, 467, 492, 515, 536, 557, 580, 
            605, 632, 659, 684, 707, 728, 749, 772, 797, 824, 851, 876, 899, 
            920, 941, 964, 989, 1014, 1039, 1064, 1087, 1108, 1129, 1152, 
            1175, 1198, 1221, 1244, 1267, 1288, 1309, 1330, 1351, 1372, 1393, 
            1414, 1435, 1456}, CompressedData["
1:eJw1lGeygtoWhA8oWUBFwJxQDOQgOY3hDeFO4E3tDvH21uKXVV/jWr27utbl
n///7x/67+/vX+bvj8IvPZkyLMcL4kLb7C/3lx/l5UCNUFqutoer/Q7ioqLo
LxSl2ULTd0fr4YRJTdETAqWZvFwZm/3p9nTTBnAKOJMVTTe3h/Pl7n1aAhmO
lxV1Zax3x6v98rPuC1leUee6uT9Zj3cQ5f0PcurcWB/Ot6cTxgUs0ViMP88X
y83ucnt5UVaSL4WRatv99f7247wa8H9B/OKlttrsDpbtBElRYypeRLC20rf7
4+X2cMO0wS7gGfBKN3aH0/X+fMEvHBAsw5ph7o9ny377Udb9YsHwuWGuD6fb
wwnivOxHqprr4/n+dMOkqBCjIMIB/r/ebC/Wy40+ZUfDm7QY6e56e3txVvXU
hCHJLr98u9tfrLvjJ3k90FMWg/E+Iuz2h+vNfrlBWjQThsNCCCsI+8PRuj/e
Xhh92ilLUiaCDovH081+On6clR3D/ZLCjvXxdL4/3CDJq57lR2qezvbTC9Oi
HqipIC2WMIIB58v15URp2dKMCIvaZqTW240/VTdhBUkmUW+//GrdXo6XZHVP
TTlxpmAyHkoU63Z/u36U5s1AM7wkq9gJaQ/pdrcdL4g/RdlO2JlCQifKATbt
h+uHSVZ1U05Wf6lhz9l+PL0gzeue4ZX5SE+Ppx9+imagGAE93WxhBgOer3eU
lA3NiugpvryM1InTqp1wkoJOk9SvX/523Cj51N2UF2Yqio3JeCxRHNeL06xs
eooR5TnqjZ2QbpBcz08+edUONCsp6DjMEOUOm36QZkXdTbiZqpu/5LDn6Qfh
J2/6KS+j6iN9BGFWtAPFCvIC5b1cYQYDwigua5oTlSWqiy9fI02qZsJLqmag
6CT595fHSVrW7XQ2X6xMVB2D8VYiJOmnajpGkJf6GmXHQgguhPST1W1PsaKi
Gag7jBDBg8Usb7qB5iR1ZR5Ov9SwI8zyou0n/Gyuo/IjDfKiGyhOUBY6zon1
esMIBhRlRfOiujRwTWDRiUZaT6S5Zu6OqDsJPf7iqm6ms9Ua5wRlx1Q8kuC6
aRl5oeOgoOrYBZwCN23HCsrS2B1RdDgg+ANvXU9xoqrhrtwfv6QwvOj6geal
+QqnxX6ONO8HihfUhbE54LQ4UQwHLflSnC/N7RF3BdaS8gcnkrbenSwbHScp
V18Iv/szDgrqjYF4F4GMrG8OOCcoNpYANoCssjC2R8tGp7GYwLYfOEFdmjtc
Ey/4xYKhsCTOtfUe58QPR9j/BxTjuzc=
            "]}, Pattern}]}, {
        GraphHighlight -> {29, 21, 13, 5, 37, 53, 61, 45}}]]}, 
      TagBox[GraphicsGroupBox[GraphicsComplexBox[CompressedData["
1:eJw9kHsw2wcAx3/JJuo85tFWbdRzpTSh5rGS+f4oxaxo5jyq2ypFu7qjNHM3
1XqtTvWiuu16mFePrul5xmPXRldFy5RaI60Oo0hKZkHqkYQQ6+52+9597vPf
54+vNTuFlUAlCIJ8y78+URNidp6rwSSl5/Q7fqtwMYh834VHJS8XFmYNvadC
Q7ORtSRkExk+9KEs6RbYA05FjOcEWZ2yFBOetokQE5NpdZsC+2uzpS0XNMjk
32LV8DX42FXCpH1HkA3BRZ8wLOSQ3Cu26GmlkI9iYwby7FagPHKMSToQZNlB
jzrldSo59E2UbmSjHM3dFcq542okB7OCxm028LWq1jNKi0I68ctzOYurqL56
63GQcB2EVc2dISFBHo02EY0UbIBxwc3X5r4C+QaBVUbsVbzLXZ46+AuF7Bvq
EYlml5E7UkBP1N3EtX22hsWfz8LrkEbXsYtCmpKR7rqeGqiid1P1muZBm1tk
mj4lSFFQbI9J1AIyAow5N79UYLrPUvBB6BoUvYJLM+0aaByZjtU0FSpKM+nh
OnJ0Lkp0J9kbOF+uk1rpo0CodmC1Q/g6njmKJVHsl3BNdvqrxW8T/fZmIqMe
KWo99rHPzmnwgl7uTGvZQv326wdmv3Xj3iGJbb6XCrtFxtMLjFkw61GUeUKN
+IjBJ+32M1DsteINOLxBzoH+ZKGVAjM2OeZG0atgjdlmD1xZwOnggNmV9BmI
74y36RmqkP+tacu4/iukPU5s2Lq4BELmZ1Mw0AY3s/i/6e7r8GOl2ldsbINT
wfZO+FGMzlFxkw9nG4OjtYuMHWNw2GmV5Bu2jJ5G2sm4bSmUhUFahbkqyPq4
gXEFCzAU1rV/pnyNunLLxCa+HIyM+sN+MStwI6sopf4rYJkXsoriRTAuEd4V
hCrhXGzbG+gphp87hd89rIYsnBdR9hGVFPBGd/H9xXiSHmfcYqYGV5T7w8tB
OaosGXk3HZV4kJf/NFh/CuGf+lc+L17CyTXvmf0/yzE2MbdJKZEjmpfbHnZ7
Bo3eagOtcimE43pdSTtV+L5OYL4YMg/mRPoEl74Kqt12ihd7FAz7h6TeDoKk
NVV1yuLX0FbLWVxyHYaFvrbk3IF13F2h9w5XDMDt1G3nqT1SjAyb/M4LmcSH
lLBT0qNvMHYm+Kx79jDyu/VzJHZjoFl2FF9Sj6D1WF9s+QspKi96dMrapXhG
JUZ2fdGBja4yU27HEgxGPNssH/0BaVqkxOrtT631EeIbWWsg5NKgyCNeaNF/
ePVX3jz+DLg2zUgT4kZiXRtnagHEf7uemmm9RzANWf9lG50ECer5PyU0nJlG
c2eDbK9agJKi49qk4SC+up89es5bCpdRfmlSshBhqRTile/U/x3XhiuhESYr
+Ac6z/Ho
         "], {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
           ArrowBox[CompressedData["
1:eJwVxUUBJIkBAMBtmmZmZmZm0HAS1sDZjZwknyr/77///AX//Pnzn//x/wEQ
gAAYQIAfgAIYgAMEwAMioAMW4AMxkAMN0AMrsAMfCIEwiIA/EAUxEAcJkAQF
UAIN0AYDMAELsAUHcAMPCIYQ6AehEAYREAlREA+JkAyZkAOFUAqVUAeN0Akj
8A9GYQwmYQqmYQGWYAXWYQt24QjO4Aqe4Av5ISiCIRRCIwwiIjKiIgZiIx7i
IzFSIzNy/9Af9qN/zI/9ST/lp/3Mn/MLfskv/zW/5fegGMqgLMqhMqqiFuqi
IZqiBdqiPbqiL8ZiHKZgGmZjHhZhGVZiHTZgG7ZjH07gJE7hNM7gLM7hPC7g
Om7iPh7hOV7jPb7gO/4SJEERNMEQLMERPCEQImEQFhEQMVEQDTEQK3EQH0mR
NMmQLMmRAimSEqmTJmmTIZmQJdmSI7mRJ0VTDMVSHCVSEiVTBmVRDuVTEZVS
FdVRE3XRDM3SHC3RMq3QJm3TLh3QMZ3ROV3TM30zLMMxMqMwKmMxDuMxIZMw
BdMwPbMwD8uxCquyGmuzLhuxKVuyLTuwK7uzL6dyGudwHhdzGVdxHTdyG3dw
Hy/wIi/xMq/wKq/xOm/wPh/yOV/xPT/zO/8IoiAJsqAIqqAJumAIphAIkVAI
tTAIi3AIryiJsqiIqqiJhmiKluiLoRiLpdiIo7iKp/hJsqRIqqRJpmRJthRI
kZRIuVRJrTRJm3TJiqzKmmzJtuzIoRzLqVzItdzJvTzLt6IqmmIrjuIqkZIo
mVIqjTIoi7Irj6qpjuqqnhqrqVqprTqqq3qor+ZqnpZomVZrnTZpm3Zqn27o
pm7ptu7oru7pvh7ouV7qvT7pu34bpmEZtuEYruEZvhEYoVEYlTEYs3EYj2mZ
tumYrumZgRmakZmbpVmbo7mYp/latuVYruVZoRVZsVVYldVYvTVZq3VZn+3Y
ru3ZkR3biV3atd3agz3bm73bt+M6nhM7iZM6ldM4nTM6i3M4j+u5iZu6mVu7
rTu5q3u6r5d6mdd4nTd7m3d5nx/4oR/5sZ/4qZ/5uV/4vT/6u38FYRAFcZAE
aZAFeVAEZTAEU3AEdxiFcZiEaZiFRViGVdiHYziHZ/hEcZREaZRFZVRFdTRE
U7REe3RFb5zEaZzFVVzHTTzGc7zGR3zHX5ImWVInTdImU7IkW3ImT5qlTdqm
XTqna3qlb9ZmXbZkW3ZnX17kZV7ldd7kbd7lfT7ke34WZVEVddEUbdEVfTEU
Y3EUV1mVddmUbdmVQzmWU7mXZ3lXddVUbdVVYzVVc3VUV/XUTd3WXT3Vc73U
Z33Xb9M2XTM3S7M2V/M0X9u1S7u2W3u3b7d2W/d0Xz/0Yz/1c7/0a7/1e38M
4zAN87AM67AN+3AM5ziN87iM67iNx3iO1zRPy7RO23RO13TPy7zO23zN9/ws
67It9/Is77qtz/qu3/Zu337s537t9/7s7/4d53Ed9/Ec7/Gd13mfz/me33Vf
z/Ve3/3c7/097/O9338Bu7C7XQ==
            "], 0.025250458087772487`]}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           DiskBox[1, 0.025250458087772487], DiskBox[2, 0.025250458087772487],
            DiskBox[3, 0.025250458087772487], 
           DiskBox[4, 0.025250458087772487], 
           {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
            DiskBox[5, 0.025250458087772487]}, 
           DiskBox[6, 0.025250458087772487], DiskBox[7, 0.025250458087772487],
            DiskBox[8, 0.025250458087772487], 
           DiskBox[9, 0.025250458087772487], 
           DiskBox[10, 0.025250458087772487], 
           DiskBox[11, 0.025250458087772487], 
           DiskBox[12, 0.025250458087772487], 
           {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
            DiskBox[13, 0.025250458087772487]}, 
           DiskBox[14, 0.025250458087772487], 
           DiskBox[15, 0.025250458087772487], 
           DiskBox[16, 0.025250458087772487], 
           DiskBox[17, 0.025250458087772487], 
           DiskBox[18, 0.025250458087772487], 
           DiskBox[19, 0.025250458087772487], 
           DiskBox[20, 0.025250458087772487], 
           {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
            DiskBox[21, 0.025250458087772487]}, 
           DiskBox[22, 0.025250458087772487], 
           DiskBox[23, 0.025250458087772487], 
           DiskBox[24, 0.025250458087772487], 
           DiskBox[25, 0.025250458087772487], 
           DiskBox[26, 0.025250458087772487], 
           DiskBox[27, 0.025250458087772487], 
           DiskBox[28, 0.025250458087772487], 
           {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
            DiskBox[29, 0.025250458087772487]}, 
           DiskBox[30, 0.025250458087772487], 
           DiskBox[31, 0.025250458087772487], 
           DiskBox[32, 0.025250458087772487], 
           DiskBox[33, 0.025250458087772487], 
           DiskBox[34, 0.025250458087772487], 
           DiskBox[35, 0.025250458087772487], 
           DiskBox[36, 0.025250458087772487], 
           {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
            DiskBox[37, 0.025250458087772487]}, 
           DiskBox[38, 0.025250458087772487], 
           DiskBox[39, 0.025250458087772487], 
           DiskBox[40, 0.025250458087772487], 
           DiskBox[41, 0.025250458087772487], 
           DiskBox[42, 0.025250458087772487], 
           DiskBox[43, 0.025250458087772487], 
           DiskBox[44, 0.025250458087772487], 
           {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
            DiskBox[45, 0.025250458087772487]}, 
           DiskBox[46, 0.025250458087772487], 
           DiskBox[47, 0.025250458087772487], 
           DiskBox[48, 0.025250458087772487], 
           DiskBox[49, 0.025250458087772487], 
           DiskBox[50, 0.025250458087772487], 
           DiskBox[51, 0.025250458087772487], 
           DiskBox[52, 0.025250458087772487], 
           {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
            DiskBox[53, 0.025250458087772487]}, 
           DiskBox[54, 0.025250458087772487], 
           DiskBox[55, 0.025250458087772487], 
           DiskBox[56, 0.025250458087772487], 
           DiskBox[57, 0.025250458087772487], 
           DiskBox[58, 0.025250458087772487], 
           DiskBox[59, 0.025250458087772487], 
           DiskBox[60, 0.025250458087772487], 
           {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
            DiskBox[61, 0.025250458087772487]}, 
           DiskBox[62, 0.025250458087772487], 
           DiskBox[63, 0.025250458087772487], 
           DiskBox[64, 0.025250458087772487]}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    FormatType->TraditionalForm,
    FrameTicks->None], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 
        19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 
        53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64}, {Null, 
         SparseArray[
         Automatic, {64, 64}, 0, {
          1, {{0, 21, 42, 63, 84, 105, 126, 147, 168, 189, 212, 235, 258, 281,
             304, 327, 348, 369, 392, 417, 442, 467, 492, 515, 536, 557, 580, 
            605, 632, 659, 684, 707, 728, 749, 772, 797, 824, 851, 876, 899, 
            920, 941, 964, 989, 1014, 1039, 1064, 1087, 1108, 1129, 1152, 
            1175, 1198, 1221, 1244, 1267, 1288, 1309, 1330, 1351, 1372, 1393, 
            1414, 1435, 1456}, CompressedData["
1:eJw1lGeygtoWhA8oWUBFwJxQDOQgOY3hDeFO4E3tDvH21uKXVV/jWr27utbl
n///7x/67+/vX+bvj8IvPZkyLMcL4kLb7C/3lx/l5UCNUFqutoer/Q7ioqLo
LxSl2ULTd0fr4YRJTdETAqWZvFwZm/3p9nTTBnAKOJMVTTe3h/Pl7n1aAhmO
lxV1Zax3x6v98rPuC1leUee6uT9Zj3cQ5f0PcurcWB/Ot6cTxgUs0ViMP88X
y83ucnt5UVaSL4WRatv99f7247wa8H9B/OKlttrsDpbtBElRYypeRLC20rf7
4+X2cMO0wS7gGfBKN3aH0/X+fMEvHBAsw5ph7o9ny377Udb9YsHwuWGuD6fb
wwnivOxHqprr4/n+dMOkqBCjIMIB/r/ebC/Wy40+ZUfDm7QY6e56e3txVvXU
hCHJLr98u9tfrLvjJ3k90FMWg/E+Iuz2h+vNfrlBWjQThsNCCCsI+8PRuj/e
Xhh92ilLUiaCDovH081+On6clR3D/ZLCjvXxdL4/3CDJq57lR2qezvbTC9Oi
HqipIC2WMIIB58v15URp2dKMCIvaZqTW240/VTdhBUkmUW+//GrdXo6XZHVP
TTlxpmAyHkoU63Z/u36U5s1AM7wkq9gJaQ/pdrcdL4g/RdlO2JlCQifKATbt
h+uHSVZ1U05Wf6lhz9l+PL0gzeue4ZX5SE+Ppx9+imagGAE93WxhBgOer3eU
lA3NiugpvryM1InTqp1wkoJOk9SvX/523Cj51N2UF2Yqio3JeCxRHNeL06xs
eooR5TnqjZ2QbpBcz08+edUONCsp6DjMEOUOm36QZkXdTbiZqpu/5LDn6Qfh
J2/6KS+j6iN9BGFWtAPFCvIC5b1cYQYDwigua5oTlSWqiy9fI02qZsJLqmag
6CT595fHSVrW7XQ2X6xMVB2D8VYiJOmnajpGkJf6GmXHQgguhPST1W1PsaKi
Gag7jBDBg8Usb7qB5iR1ZR5Ov9SwI8zyou0n/Gyuo/IjDfKiGyhOUBY6zon1
esMIBhRlRfOiujRwTWDRiUZaT6S5Zu6OqDsJPf7iqm6ms9Ua5wRlx1Q8kuC6
aRl5oeOgoOrYBZwCN23HCsrS2B1RdDgg+ANvXU9xoqrhrtwfv6QwvOj6geal
+QqnxX6ONO8HihfUhbE54LQ4UQwHLflSnC/N7RF3BdaS8gcnkrbenSwbHScp
V18Iv/szDgrqjYF4F4GMrG8OOCcoNpYANoCssjC2R8tGp7GYwLYfOEFdmjtc
Ey/4xYKhsCTOtfUe58QPR9j/BxTjuzc=
            "]}, Pattern}]}, {
        GraphHighlight -> {46, 62, 6, 54, 38, 22, 14, 30}}]]}, 
      TagBox[GraphicsGroupBox[GraphicsComplexBox[CompressedData["
1:eJw9kHsw2wcAx3/JJuo85tFWbdRzpTSh5rGS+f4oxaxo5jyq2ypFu7qjNHM3
1XqtTvWiuu16mFePrul5xmPXRldFy5RaI60Oo0hKZkHqkYQQ6+52+9597vPf
54+vNTuFlUAlCIJ8y78+URNidp6rwSSl5/Q7fqtwMYh834VHJS8XFmYNvadC
Q7ORtSRkExk+9KEs6RbYA05FjOcEWZ2yFBOetokQE5NpdZsC+2uzpS0XNMjk
32LV8DX42FXCpH1HkA3BRZ8wLOSQ3Cu26GmlkI9iYwby7FagPHKMSToQZNlB
jzrldSo59E2UbmSjHM3dFcq542okB7OCxm028LWq1jNKi0I68ctzOYurqL56
63GQcB2EVc2dISFBHo02EY0UbIBxwc3X5r4C+QaBVUbsVbzLXZ46+AuF7Bvq
EYlml5E7UkBP1N3EtX22hsWfz8LrkEbXsYtCmpKR7rqeGqiid1P1muZBm1tk
mj4lSFFQbI9J1AIyAow5N79UYLrPUvBB6BoUvYJLM+0aaByZjtU0FSpKM+nh
OnJ0Lkp0J9kbOF+uk1rpo0CodmC1Q/g6njmKJVHsl3BNdvqrxW8T/fZmIqMe
KWo99rHPzmnwgl7uTGvZQv326wdmv3Xj3iGJbb6XCrtFxtMLjFkw61GUeUKN
+IjBJ+32M1DsteINOLxBzoH+ZKGVAjM2OeZG0atgjdlmD1xZwOnggNmV9BmI
74y36RmqkP+tacu4/iukPU5s2Lq4BELmZ1Mw0AY3s/i/6e7r8GOl2ldsbINT
wfZO+FGMzlFxkw9nG4OjtYuMHWNw2GmV5Bu2jJ5G2sm4bSmUhUFahbkqyPq4
gXEFCzAU1rV/pnyNunLLxCa+HIyM+sN+MStwI6sopf4rYJkXsoriRTAuEd4V
hCrhXGzbG+gphp87hd89rIYsnBdR9hGVFPBGd/H9xXiSHmfcYqYGV5T7w8tB
OaosGXk3HZV4kJf/NFh/CuGf+lc+L17CyTXvmf0/yzE2MbdJKZEjmpfbHnZ7
Bo3eagOtcimE43pdSTtV+L5OYL4YMg/mRPoEl74Kqt12ihd7FAz7h6TeDoKk
NVV1yuLX0FbLWVxyHYaFvrbk3IF13F2h9w5XDMDt1G3nqT1SjAyb/M4LmcSH
lLBT0qNvMHYm+Kx79jDyu/VzJHZjoFl2FF9Sj6D1WF9s+QspKi96dMrapXhG
JUZ2fdGBja4yU27HEgxGPNssH/0BaVqkxOrtT631EeIbWWsg5NKgyCNeaNF/
ePVX3jz+DLg2zUgT4kZiXRtnagHEf7uemmm9RzANWf9lG50ECer5PyU0nJlG
c2eDbK9agJKi49qk4SC+up89es5bCpdRfmlSshBhqRTile/U/x3XhiuhESYr
+Ac6z/Ho
         "], {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
           ArrowBox[CompressedData["
1:eJwVxUUBJIkBAMBtmmZmZmZm0HAS1sDZjZwknyr/77///AX//Pnzn//x/wEQ
gAAYQIAfgAIYgAMEwAMioAMW4AMxkAMN0AMrsAMfCIEwiIA/EAUxEAcJkAQF
UAIN0AYDMAELsAUHcAMPCIYQ6AehEAYREAlREA+JkAyZkAOFUAqVUAeN0Akj
8A9GYQwmYQqmYQGWYAXWYQt24QjO4Aqe4Av5ISiCIRRCIwwiIjKiIgZiIx7i
IzFSIzNy/9Af9qN/zI/9ST/lp/3Mn/MLfskv/zW/5fegGMqgLMqhMqqiFuqi
IZqiBdqiPbqiL8ZiHKZgGmZjHhZhGVZiHTZgG7ZjH07gJE7hNM7gLM7hPC7g
Om7iPh7hOV7jPb7gO/4SJEERNMEQLMERPCEQImEQFhEQMVEQDTEQK3EQH0mR
NMmQLMmRAimSEqmTJmmTIZmQJdmSI7mRJ0VTDMVSHCVSEiVTBmVRDuVTEZVS
FdVRE3XRDM3SHC3RMq3QJm3TLh3QMZ3ROV3TM30zLMMxMqMwKmMxDuMxIZMw
BdMwPbMwD8uxCquyGmuzLhuxKVuyLTuwK7uzL6dyGudwHhdzGVdxHTdyG3dw
Hy/wIi/xMq/wKq/xOm/wPh/yOV/xPT/zO/8IoiAJsqAIqqAJumAIphAIkVAI
tTAIi3AIryiJsqiIqqiJhmiKluiLoRiLpdiIo7iKp/hJsqRIqqRJpmRJthRI
kZRIuVRJrTRJm3TJiqzKmmzJtuzIoRzLqVzItdzJvTzLt6IqmmIrjuIqkZIo
mVIqjTIoi7Irj6qpjuqqnhqrqVqprTqqq3qor+ZqnpZomVZrnTZpm3Zqn27o
pm7ptu7oru7pvh7ouV7qvT7pu34bpmEZtuEYruEZvhEYoVEYlTEYs3EYj2mZ
tumYrumZgRmakZmbpVmbo7mYp/latuVYruVZoRVZsVVYldVYvTVZq3VZn+3Y
ru3ZkR3biV3atd3agz3bm73bt+M6nhM7iZM6ldM4nTM6i3M4j+u5iZu6mVu7
rTu5q3u6r5d6mdd4nTd7m3d5nx/4oR/5sZ/4qZ/5uV/4vT/6u38FYRAFcZAE
aZAFeVAEZTAEU3AEdxiFcZiEaZiFRViGVdiHYziHZ/hEcZREaZRFZVRFdTRE
U7REe3RFb5zEaZzFVVzHTTzGc7zGR3zHX5ImWVInTdImU7IkW3ImT5qlTdqm
XTqna3qlb9ZmXbZkW3ZnX17kZV7ldd7kbd7lfT7ke34WZVEVddEUbdEVfTEU
Y3EUV1mVddmUbdmVQzmWU7mXZ3lXddVUbdVVYzVVc3VUV/XUTd3WXT3Vc73U
Z33Xb9M2XTM3S7M2V/M0X9u1S7u2W3u3b7d2W/d0Xz/0Yz/1c7/0a7/1e38M
4zAN87AM67AN+3AM5ziN87iM67iNx3iO1zRPy7RO23RO13TPy7zO23zN9/ws
67It9/Is77qtz/qu3/Zu337s537t9/7s7/4d53Ed9/Ec7/Gd13mfz/me33Vf
z/Ve3/3c7/097/O9338Bu7C7XQ==
            "], 0.025250458087772487`]}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           DiskBox[1, 0.025250458087772487], DiskBox[2, 0.025250458087772487],
            DiskBox[3, 0.025250458087772487], 
           DiskBox[4, 0.025250458087772487], DiskBox[5, 0.025250458087772487], 
           {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
            DiskBox[6, 0.025250458087772487]}, 
           DiskBox[7, 0.025250458087772487], DiskBox[8, 0.025250458087772487],
            DiskBox[9, 0.025250458087772487], 
           DiskBox[10, 0.025250458087772487], 
           DiskBox[11, 0.025250458087772487], 
           DiskBox[12, 0.025250458087772487], 
           DiskBox[13, 0.025250458087772487], 
           {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
            DiskBox[14, 0.025250458087772487]}, 
           DiskBox[15, 0.025250458087772487], 
           DiskBox[16, 0.025250458087772487], 
           DiskBox[17, 0.025250458087772487], 
           DiskBox[18, 0.025250458087772487], 
           DiskBox[19, 0.025250458087772487], 
           DiskBox[20, 0.025250458087772487], 
           DiskBox[21, 0.025250458087772487], 
           {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
            DiskBox[22, 0.025250458087772487]}, 
           DiskBox[23, 0.025250458087772487], 
           DiskBox[24, 0.025250458087772487], 
           DiskBox[25, 0.025250458087772487], 
           DiskBox[26, 0.025250458087772487], 
           DiskBox[27, 0.025250458087772487], 
           DiskBox[28, 0.025250458087772487], 
           DiskBox[29, 0.025250458087772487], 
           {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
            DiskBox[30, 0.025250458087772487]}, 
           DiskBox[31, 0.025250458087772487], 
           DiskBox[32, 0.025250458087772487], 
           DiskBox[33, 0.025250458087772487], 
           DiskBox[34, 0.025250458087772487], 
           DiskBox[35, 0.025250458087772487], 
           DiskBox[36, 0.025250458087772487], 
           DiskBox[37, 0.025250458087772487], 
           {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
            DiskBox[38, 0.025250458087772487]}, 
           DiskBox[39, 0.025250458087772487], 
           DiskBox[40, 0.025250458087772487], 
           DiskBox[41, 0.025250458087772487], 
           DiskBox[42, 0.025250458087772487], 
           DiskBox[43, 0.025250458087772487], 
           DiskBox[44, 0.025250458087772487], 
           DiskBox[45, 0.025250458087772487], 
           {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
            DiskBox[46, 0.025250458087772487]}, 
           DiskBox[47, 0.025250458087772487], 
           DiskBox[48, 0.025250458087772487], 
           DiskBox[49, 0.025250458087772487], 
           DiskBox[50, 0.025250458087772487], 
           DiskBox[51, 0.025250458087772487], 
           DiskBox[52, 0.025250458087772487], 
           DiskBox[53, 0.025250458087772487], 
           {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
            DiskBox[54, 0.025250458087772487]}, 
           DiskBox[55, 0.025250458087772487], 
           DiskBox[56, 0.025250458087772487], 
           DiskBox[57, 0.025250458087772487], 
           DiskBox[58, 0.025250458087772487], 
           DiskBox[59, 0.025250458087772487], 
           DiskBox[60, 0.025250458087772487], 
           DiskBox[61, 0.025250458087772487], 
           {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
            DiskBox[62, 0.025250458087772487]}, 
           DiskBox[63, 0.025250458087772487], 
           DiskBox[64, 0.025250458087772487]}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    FormatType->TraditionalForm,
    FrameTicks->None], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 
        19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 
        53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64}, {Null, 
         SparseArray[
         Automatic, {64, 64}, 0, {
          1, {{0, 21, 42, 63, 84, 105, 126, 147, 168, 189, 212, 235, 258, 281,
             304, 327, 348, 369, 392, 417, 442, 467, 492, 515, 536, 557, 580, 
            605, 632, 659, 684, 707, 728, 749, 772, 797, 824, 851, 876, 899, 
            920, 941, 964, 989, 1014, 1039, 1064, 1087, 1108, 1129, 1152, 
            1175, 1198, 1221, 1244, 1267, 1288, 1309, 1330, 1351, 1372, 1393, 
            1414, 1435, 1456}, CompressedData["
1:eJw1lGeygtoWhA8oWUBFwJxQDOQgOY3hDeFO4E3tDvH21uKXVV/jWr27utbl
n///7x/67+/vX+bvj8IvPZkyLMcL4kLb7C/3lx/l5UCNUFqutoer/Q7ioqLo
LxSl2ULTd0fr4YRJTdETAqWZvFwZm/3p9nTTBnAKOJMVTTe3h/Pl7n1aAhmO
lxV1Zax3x6v98rPuC1leUee6uT9Zj3cQ5f0PcurcWB/Ot6cTxgUs0ViMP88X
y83ucnt5UVaSL4WRatv99f7247wa8H9B/OKlttrsDpbtBElRYypeRLC20rf7
4+X2cMO0wS7gGfBKN3aH0/X+fMEvHBAsw5ph7o9ny377Udb9YsHwuWGuD6fb
wwnivOxHqprr4/n+dMOkqBCjIMIB/r/ebC/Wy40+ZUfDm7QY6e56e3txVvXU
hCHJLr98u9tfrLvjJ3k90FMWg/E+Iuz2h+vNfrlBWjQThsNCCCsI+8PRuj/e
Xhh92ilLUiaCDovH081+On6clR3D/ZLCjvXxdL4/3CDJq57lR2qezvbTC9Oi
HqipIC2WMIIB58v15URp2dKMCIvaZqTW240/VTdhBUkmUW+//GrdXo6XZHVP
TTlxpmAyHkoU63Z/u36U5s1AM7wkq9gJaQ/pdrcdL4g/RdlO2JlCQifKATbt
h+uHSVZ1U05Wf6lhz9l+PL0gzeue4ZX5SE+Ppx9+imagGAE93WxhBgOer3eU
lA3NiugpvryM1InTqp1wkoJOk9SvX/523Cj51N2UF2Yqio3JeCxRHNeL06xs
eooR5TnqjZ2QbpBcz08+edUONCsp6DjMEOUOm36QZkXdTbiZqpu/5LDn6Qfh
J2/6KS+j6iN9BGFWtAPFCvIC5b1cYQYDwigua5oTlSWqiy9fI02qZsJLqmag
6CT595fHSVrW7XQ2X6xMVB2D8VYiJOmnajpGkJf6GmXHQgguhPST1W1PsaKi
Gag7jBDBg8Usb7qB5iR1ZR5Ov9SwI8zyou0n/Gyuo/IjDfKiGyhOUBY6zon1
esMIBhRlRfOiujRwTWDRiUZaT6S5Zu6OqDsJPf7iqm6ms9Ua5wRlx1Q8kuC6
aRl5oeOgoOrYBZwCN23HCsrS2B1RdDgg+ANvXU9xoqrhrtwfv6QwvOj6geal
+QqnxX6ONO8HihfUhbE54LQ4UQwHLflSnC/N7RF3BdaS8gcnkrbenSwbHScp
V18Iv/szDgrqjYF4F4GMrG8OOCcoNpYANoCssjC2R8tGp7GYwLYfOEFdmjtc
Ey/4xYKhsCTOtfUe58QPR9j/BxTjuzc=
            "]}, Pattern}]}, {
        GraphHighlight -> {47, 63, 23, 39, 55, 7, 15, 31}}]]}, 
      TagBox[GraphicsGroupBox[GraphicsComplexBox[CompressedData["
1:eJw9kHsw2wcAx3/JJuo85tFWbdRzpTSh5rGS+f4oxaxo5jyq2ypFu7qjNHM3
1XqtTvWiuu16mFePrul5xmPXRldFy5RaI60Oo0hKZkHqkYQQ6+52+9597vPf
54+vNTuFlUAlCIJ8y78+URNidp6rwSSl5/Q7fqtwMYh834VHJS8XFmYNvadC
Q7ORtSRkExk+9KEs6RbYA05FjOcEWZ2yFBOetokQE5NpdZsC+2uzpS0XNMjk
32LV8DX42FXCpH1HkA3BRZ8wLOSQ3Cu26GmlkI9iYwby7FagPHKMSToQZNlB
jzrldSo59E2UbmSjHM3dFcq542okB7OCxm028LWq1jNKi0I68ctzOYurqL56
63GQcB2EVc2dISFBHo02EY0UbIBxwc3X5r4C+QaBVUbsVbzLXZ46+AuF7Bvq
EYlml5E7UkBP1N3EtX22hsWfz8LrkEbXsYtCmpKR7rqeGqiid1P1muZBm1tk
mj4lSFFQbI9J1AIyAow5N79UYLrPUvBB6BoUvYJLM+0aaByZjtU0FSpKM+nh
OnJ0Lkp0J9kbOF+uk1rpo0CodmC1Q/g6njmKJVHsl3BNdvqrxW8T/fZmIqMe
KWo99rHPzmnwgl7uTGvZQv326wdmv3Xj3iGJbb6XCrtFxtMLjFkw61GUeUKN
+IjBJ+32M1DsteINOLxBzoH+ZKGVAjM2OeZG0atgjdlmD1xZwOnggNmV9BmI
74y36RmqkP+tacu4/iukPU5s2Lq4BELmZ1Mw0AY3s/i/6e7r8GOl2ldsbINT
wfZO+FGMzlFxkw9nG4OjtYuMHWNw2GmV5Bu2jJ5G2sm4bSmUhUFahbkqyPq4
gXEFCzAU1rV/pnyNunLLxCa+HIyM+sN+MStwI6sopf4rYJkXsoriRTAuEd4V
hCrhXGzbG+gphp87hd89rIYsnBdR9hGVFPBGd/H9xXiSHmfcYqYGV5T7w8tB
OaosGXk3HZV4kJf/NFh/CuGf+lc+L17CyTXvmf0/yzE2MbdJKZEjmpfbHnZ7
Bo3eagOtcimE43pdSTtV+L5OYL4YMg/mRPoEl74Kqt12ihd7FAz7h6TeDoKk
NVV1yuLX0FbLWVxyHYaFvrbk3IF13F2h9w5XDMDt1G3nqT1SjAyb/M4LmcSH
lLBT0qNvMHYm+Kx79jDyu/VzJHZjoFl2FF9Sj6D1WF9s+QspKi96dMrapXhG
JUZ2fdGBja4yU27HEgxGPNssH/0BaVqkxOrtT631EeIbWWsg5NKgyCNeaNF/
ePVX3jz+DLg2zUgT4kZiXRtnagHEf7uemmm9RzANWf9lG50ECer5PyU0nJlG
c2eDbK9agJKi49qk4SC+up89es5bCpdRfmlSshBhqRTile/U/x3XhiuhESYr
+Ac6z/Ho
         "], {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
           ArrowBox[CompressedData["
1:eJwVxUUBJIkBAMBtmmZmZmZm0HAS1sDZjZwknyr/77///AX//Pnzn//x/wEQ
gAAYQIAfgAIYgAMEwAMioAMW4AMxkAMN0AMrsAMfCIEwiIA/EAUxEAcJkAQF
UAIN0AYDMAELsAUHcAMPCIYQ6AehEAYREAlREA+JkAyZkAOFUAqVUAeN0Akj
8A9GYQwmYQqmYQGWYAXWYQt24QjO4Aqe4Av5ISiCIRRCIwwiIjKiIgZiIx7i
IzFSIzNy/9Af9qN/zI/9ST/lp/3Mn/MLfskv/zW/5fegGMqgLMqhMqqiFuqi
IZqiBdqiPbqiL8ZiHKZgGmZjHhZhGVZiHTZgG7ZjH07gJE7hNM7gLM7hPC7g
Om7iPh7hOV7jPb7gO/4SJEERNMEQLMERPCEQImEQFhEQMVEQDTEQK3EQH0mR
NMmQLMmRAimSEqmTJmmTIZmQJdmSI7mRJ0VTDMVSHCVSEiVTBmVRDuVTEZVS
FdVRE3XRDM3SHC3RMq3QJm3TLh3QMZ3ROV3TM30zLMMxMqMwKmMxDuMxIZMw
BdMwPbMwD8uxCquyGmuzLhuxKVuyLTuwK7uzL6dyGudwHhdzGVdxHTdyG3dw
Hy/wIi/xMq/wKq/xOm/wPh/yOV/xPT/zO/8IoiAJsqAIqqAJumAIphAIkVAI
tTAIi3AIryiJsqiIqqiJhmiKluiLoRiLpdiIo7iKp/hJsqRIqqRJpmRJthRI
kZRIuVRJrTRJm3TJiqzKmmzJtuzIoRzLqVzItdzJvTzLt6IqmmIrjuIqkZIo
mVIqjTIoi7Irj6qpjuqqnhqrqVqprTqqq3qor+ZqnpZomVZrnTZpm3Zqn27o
pm7ptu7oru7pvh7ouV7qvT7pu34bpmEZtuEYruEZvhEYoVEYlTEYs3EYj2mZ
tumYrumZgRmakZmbpVmbo7mYp/latuVYruVZoRVZsVVYldVYvTVZq3VZn+3Y
ru3ZkR3biV3atd3agz3bm73bt+M6nhM7iZM6ldM4nTM6i3M4j+u5iZu6mVu7
rTu5q3u6r5d6mdd4nTd7m3d5nx/4oR/5sZ/4qZ/5uV/4vT/6u38FYRAFcZAE
aZAFeVAEZTAEU3AEdxiFcZiEaZiFRViGVdiHYziHZ/hEcZREaZRFZVRFdTRE
U7REe3RFb5zEaZzFVVzHTTzGc7zGR3zHX5ImWVInTdImU7IkW3ImT5qlTdqm
XTqna3qlb9ZmXbZkW3ZnX17kZV7ldd7kbd7lfT7ke34WZVEVddEUbdEVfTEU
Y3EUV1mVddmUbdmVQzmWU7mXZ3lXddVUbdVVYzVVc3VUV/XUTd3WXT3Vc73U
Z33Xb9M2XTM3S7M2V/M0X9u1S7u2W3u3b7d2W/d0Xz/0Yz/1c7/0a7/1e38M
4zAN87AM67AN+3AM5ziN87iM67iNx3iO1zRPy7RO23RO13TPy7zO23zN9/ws
67It9/Is77qtz/qu3/Zu337s537t9/7s7/4d53Ed9/Ec7/Gd13mfz/me33Vf
z/Ve3/3c7/097/O9338Bu7C7XQ==
            "], 0.025250458087772487`]}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           DiskBox[1, 0.025250458087772487], DiskBox[2, 0.025250458087772487],
            DiskBox[3, 0.025250458087772487], 
           DiskBox[4, 0.025250458087772487], DiskBox[5, 0.025250458087772487],
            DiskBox[6, 0.025250458087772487], 
           {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
            DiskBox[7, 0.025250458087772487]}, 
           DiskBox[8, 0.025250458087772487], DiskBox[9, 0.025250458087772487],
            DiskBox[10, 0.025250458087772487], 
           DiskBox[11, 0.025250458087772487], 
           DiskBox[12, 0.025250458087772487], 
           DiskBox[13, 0.025250458087772487], 
           DiskBox[14, 0.025250458087772487], 
           {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
            DiskBox[15, 0.025250458087772487]}, 
           DiskBox[16, 0.025250458087772487], 
           DiskBox[17, 0.025250458087772487], 
           DiskBox[18, 0.025250458087772487], 
           DiskBox[19, 0.025250458087772487], 
           DiskBox[20, 0.025250458087772487], 
           DiskBox[21, 0.025250458087772487], 
           DiskBox[22, 0.025250458087772487], 
           {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
            DiskBox[23, 0.025250458087772487]}, 
           DiskBox[24, 0.025250458087772487], 
           DiskBox[25, 0.025250458087772487], 
           DiskBox[26, 0.025250458087772487], 
           DiskBox[27, 0.025250458087772487], 
           DiskBox[28, 0.025250458087772487], 
           DiskBox[29, 0.025250458087772487], 
           DiskBox[30, 0.025250458087772487], 
           {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
            DiskBox[31, 0.025250458087772487]}, 
           DiskBox[32, 0.025250458087772487], 
           DiskBox[33, 0.025250458087772487], 
           DiskBox[34, 0.025250458087772487], 
           DiskBox[35, 0.025250458087772487], 
           DiskBox[36, 0.025250458087772487], 
           DiskBox[37, 0.025250458087772487], 
           DiskBox[38, 0.025250458087772487], 
           {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
            DiskBox[39, 0.025250458087772487]}, 
           DiskBox[40, 0.025250458087772487], 
           DiskBox[41, 0.025250458087772487], 
           DiskBox[42, 0.025250458087772487], 
           DiskBox[43, 0.025250458087772487], 
           DiskBox[44, 0.025250458087772487], 
           DiskBox[45, 0.025250458087772487], 
           DiskBox[46, 0.025250458087772487], 
           {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
            DiskBox[47, 0.025250458087772487]}, 
           DiskBox[48, 0.025250458087772487], 
           DiskBox[49, 0.025250458087772487], 
           DiskBox[50, 0.025250458087772487], 
           DiskBox[51, 0.025250458087772487], 
           DiskBox[52, 0.025250458087772487], 
           DiskBox[53, 0.025250458087772487], 
           DiskBox[54, 0.025250458087772487], 
           {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
            DiskBox[55, 0.025250458087772487]}, 
           DiskBox[56, 0.025250458087772487], 
           DiskBox[57, 0.025250458087772487], 
           DiskBox[58, 0.025250458087772487], 
           DiskBox[59, 0.025250458087772487], 
           DiskBox[60, 0.025250458087772487], 
           DiskBox[61, 0.025250458087772487], 
           DiskBox[62, 0.025250458087772487], 
           {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
            DiskBox[63, 0.025250458087772487]}, 
           DiskBox[64, 0.025250458087772487]}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    FormatType->TraditionalForm,
    FrameTicks->None], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 
        19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 
        53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64}, {Null, 
         SparseArray[
         Automatic, {64, 64}, 0, {
          1, {{0, 21, 42, 63, 84, 105, 126, 147, 168, 189, 212, 235, 258, 281,
             304, 327, 348, 369, 392, 417, 442, 467, 492, 515, 536, 557, 580, 
            605, 632, 659, 684, 707, 728, 749, 772, 797, 824, 851, 876, 899, 
            920, 941, 964, 989, 1014, 1039, 1064, 1087, 1108, 1129, 1152, 
            1175, 1198, 1221, 1244, 1267, 1288, 1309, 1330, 1351, 1372, 1393, 
            1414, 1435, 1456}, CompressedData["
1:eJw1lGeygtoWhA8oWUBFwJxQDOQgOY3hDeFO4E3tDvH21uKXVV/jWr27utbl
n///7x/67+/vX+bvj8IvPZkyLMcL4kLb7C/3lx/l5UCNUFqutoer/Q7ioqLo
LxSl2ULTd0fr4YRJTdETAqWZvFwZm/3p9nTTBnAKOJMVTTe3h/Pl7n1aAhmO
lxV1Zax3x6v98rPuC1leUee6uT9Zj3cQ5f0PcurcWB/Ot6cTxgUs0ViMP88X
y83ucnt5UVaSL4WRatv99f7247wa8H9B/OKlttrsDpbtBElRYypeRLC20rf7
4+X2cMO0wS7gGfBKN3aH0/X+fMEvHBAsw5ph7o9ny377Udb9YsHwuWGuD6fb
wwnivOxHqprr4/n+dMOkqBCjIMIB/r/ebC/Wy40+ZUfDm7QY6e56e3txVvXU
hCHJLr98u9tfrLvjJ3k90FMWg/E+Iuz2h+vNfrlBWjQThsNCCCsI+8PRuj/e
Xhh92ilLUiaCDovH081+On6clR3D/ZLCjvXxdL4/3CDJq57lR2qezvbTC9Oi
HqipIC2WMIIB58v15URp2dKMCIvaZqTW240/VTdhBUkmUW+//GrdXo6XZHVP
TTlxpmAyHkoU63Z/u36U5s1AM7wkq9gJaQ/pdrcdL4g/RdlO2JlCQifKATbt
h+uHSVZ1U05Wf6lhz9l+PL0gzeue4ZX5SE+Ppx9+imagGAE93WxhBgOer3eU
lA3NiugpvryM1InTqp1wkoJOk9SvX/523Cj51N2UF2Yqio3JeCxRHNeL06xs
eooR5TnqjZ2QbpBcz08+edUONCsp6DjMEOUOm36QZkXdTbiZqpu/5LDn6Qfh
J2/6KS+j6iN9BGFWtAPFCvIC5b1cYQYDwigua5oTlSWqiy9fI02qZsJLqmag
6CT595fHSVrW7XQ2X6xMVB2D8VYiJOmnajpGkJf6GmXHQgguhPST1W1PsaKi
Gag7jBDBg8Usb7qB5iR1ZR5Ov9SwI8zyou0n/Gyuo/IjDfKiGyhOUBY6zon1
esMIBhRlRfOiujRwTWDRiUZaT6S5Zu6OqDsJPf7iqm6ms9Ua5wRlx1Q8kuC6
aRl5oeOgoOrYBZwCN23HCsrS2B1RdDgg+ANvXU9xoqrhrtwfv6QwvOj6geal
+QqnxX6ONO8HihfUhbE54LQ4UQwHLflSnC/N7RF3BdaS8gcnkrbenSwbHScp
V18Iv/szDgrqjYF4F4GMrG8OOCcoNpYANoCssjC2R8tGp7GYwLYfOEFdmjtc
Ey/4xYKhsCTOtfUe58QPR9j/BxTjuzc=
            "]}, Pattern}]}, {
        GraphHighlight -> {29, 50, 57, 43, 22, 15, 8, 36}}]]}, 
      TagBox[GraphicsGroupBox[GraphicsComplexBox[CompressedData["
1:eJw9kHsw2wcAx3/JJuo85tFWbdRzpTSh5rGS+f4oxaxo5jyq2ypFu7qjNHM3
1XqtTvWiuu16mFePrul5xmPXRldFy5RaI60Oo0hKZkHqkYQQ6+52+9597vPf
54+vNTuFlUAlCIJ8y78+URNidp6rwSSl5/Q7fqtwMYh834VHJS8XFmYNvadC
Q7ORtSRkExk+9KEs6RbYA05FjOcEWZ2yFBOetokQE5NpdZsC+2uzpS0XNMjk
32LV8DX42FXCpH1HkA3BRZ8wLOSQ3Cu26GmlkI9iYwby7FagPHKMSToQZNlB
jzrldSo59E2UbmSjHM3dFcq542okB7OCxm028LWq1jNKi0I68ctzOYurqL56
63GQcB2EVc2dISFBHo02EY0UbIBxwc3X5r4C+QaBVUbsVbzLXZ46+AuF7Bvq
EYlml5E7UkBP1N3EtX22hsWfz8LrkEbXsYtCmpKR7rqeGqiid1P1muZBm1tk
mj4lSFFQbI9J1AIyAow5N79UYLrPUvBB6BoUvYJLM+0aaByZjtU0FSpKM+nh
OnJ0Lkp0J9kbOF+uk1rpo0CodmC1Q/g6njmKJVHsl3BNdvqrxW8T/fZmIqMe
KWo99rHPzmnwgl7uTGvZQv326wdmv3Xj3iGJbb6XCrtFxtMLjFkw61GUeUKN
+IjBJ+32M1DsteINOLxBzoH+ZKGVAjM2OeZG0atgjdlmD1xZwOnggNmV9BmI
74y36RmqkP+tacu4/iukPU5s2Lq4BELmZ1Mw0AY3s/i/6e7r8GOl2ldsbINT
wfZO+FGMzlFxkw9nG4OjtYuMHWNw2GmV5Bu2jJ5G2sm4bSmUhUFahbkqyPq4
gXEFCzAU1rV/pnyNunLLxCa+HIyM+sN+MStwI6sopf4rYJkXsoriRTAuEd4V
hCrhXGzbG+gphp87hd89rIYsnBdR9hGVFPBGd/H9xXiSHmfcYqYGV5T7w8tB
OaosGXk3HZV4kJf/NFh/CuGf+lc+L17CyTXvmf0/yzE2MbdJKZEjmpfbHnZ7
Bo3eagOtcimE43pdSTtV+L5OYL4YMg/mRPoEl74Kqt12ihd7FAz7h6TeDoKk
NVV1yuLX0FbLWVxyHYaFvrbk3IF13F2h9w5XDMDt1G3nqT1SjAyb/M4LmcSH
lLBT0qNvMHYm+Kx79jDyu/VzJHZjoFl2FF9Sj6D1WF9s+QspKi96dMrapXhG
JUZ2fdGBja4yU27HEgxGPNssH/0BaVqkxOrtT631EeIbWWsg5NKgyCNeaNF/
ePVX3jz+DLg2zUgT4kZiXRtnagHEf7uemmm9RzANWf9lG50ECer5PyU0nJlG
c2eDbK9agJKi49qk4SC+up89es5bCpdRfmlSshBhqRTile/U/x3XhiuhESYr
+Ac6z/Ho
         "], {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
           ArrowBox[CompressedData["
1:eJwVxUUBJIkBAMBtmmZmZmZm0HAS1sDZjZwknyr/77///AX//Pnzn//x/wEQ
gAAYQIAfgAIYgAMEwAMioAMW4AMxkAMN0AMrsAMfCIEwiIA/EAUxEAcJkAQF
UAIN0AYDMAELsAUHcAMPCIYQ6AehEAYREAlREA+JkAyZkAOFUAqVUAeN0Akj
8A9GYQwmYQqmYQGWYAXWYQt24QjO4Aqe4Av5ISiCIRRCIwwiIjKiIgZiIx7i
IzFSIzNy/9Af9qN/zI/9ST/lp/3Mn/MLfskv/zW/5fegGMqgLMqhMqqiFuqi
IZqiBdqiPbqiL8ZiHKZgGmZjHhZhGVZiHTZgG7ZjH07gJE7hNM7gLM7hPC7g
Om7iPh7hOV7jPb7gO/4SJEERNMEQLMERPCEQImEQFhEQMVEQDTEQK3EQH0mR
NMmQLMmRAimSEqmTJmmTIZmQJdmSI7mRJ0VTDMVSHCVSEiVTBmVRDuVTEZVS
FdVRE3XRDM3SHC3RMq3QJm3TLh3QMZ3ROV3TM30zLMMxMqMwKmMxDuMxIZMw
BdMwPbMwD8uxCquyGmuzLhuxKVuyLTuwK7uzL6dyGudwHhdzGVdxHTdyG3dw
Hy/wIi/xMq/wKq/xOm/wPh/yOV/xPT/zO/8IoiAJsqAIqqAJumAIphAIkVAI
tTAIi3AIryiJsqiIqqiJhmiKluiLoRiLpdiIo7iKp/hJsqRIqqRJpmRJthRI
kZRIuVRJrTRJm3TJiqzKmmzJtuzIoRzLqVzItdzJvTzLt6IqmmIrjuIqkZIo
mVIqjTIoi7Irj6qpjuqqnhqrqVqprTqqq3qor+ZqnpZomVZrnTZpm3Zqn27o
pm7ptu7oru7pvh7ouV7qvT7pu34bpmEZtuEYruEZvhEYoVEYlTEYs3EYj2mZ
tumYrumZgRmakZmbpVmbo7mYp/latuVYruVZoRVZsVVYldVYvTVZq3VZn+3Y
ru3ZkR3biV3atd3agz3bm73bt+M6nhM7iZM6ldM4nTM6i3M4j+u5iZu6mVu7
rTu5q3u6r5d6mdd4nTd7m3d5nx/4oR/5sZ/4qZ/5uV/4vT/6u38FYRAFcZAE
aZAFeVAEZTAEU3AEdxiFcZiEaZiFRViGVdiHYziHZ/hEcZREaZRFZVRFdTRE
U7REe3RFb5zEaZzFVVzHTTzGc7zGR3zHX5ImWVInTdImU7IkW3ImT5qlTdqm
XTqna3qlb9ZmXbZkW3ZnX17kZV7ldd7kbd7lfT7ke34WZVEVddEUbdEVfTEU
Y3EUV1mVddmUbdmVQzmWU7mXZ3lXddVUbdVVYzVVc3VUV/XUTd3WXT3Vc73U
Z33Xb9M2XTM3S7M2V/M0X9u1S7u2W3u3b7d2W/d0Xz/0Yz/1c7/0a7/1e38M
4zAN87AM67AN+3AM5ziN87iM67iNx3iO1zRPy7RO23RO13TPy7zO23zN9/ws
67It9/Is77qtz/qu3/Zu337s537t9/7s7/4d53Ed9/Ec7/Gd13mfz/me33Vf
z/Ve3/3c7/097/O9338Bu7C7XQ==
            "], 0.025250458087772487`]}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           DiskBox[1, 0.025250458087772487], DiskBox[2, 0.025250458087772487],
            DiskBox[3, 0.025250458087772487], 
           DiskBox[4, 0.025250458087772487], DiskBox[5, 0.025250458087772487],
            DiskBox[6, 0.025250458087772487], 
           DiskBox[7, 0.025250458087772487], 
           {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
            DiskBox[8, 0.025250458087772487]}, 
           DiskBox[9, 0.025250458087772487], 
           DiskBox[10, 0.025250458087772487], 
           DiskBox[11, 0.025250458087772487], 
           DiskBox[12, 0.025250458087772487], 
           DiskBox[13, 0.025250458087772487], 
           DiskBox[14, 0.025250458087772487], 
           {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
            DiskBox[15, 0.025250458087772487]}, 
           DiskBox[16, 0.025250458087772487], 
           DiskBox[17, 0.025250458087772487], 
           DiskBox[18, 0.025250458087772487], 
           DiskBox[19, 0.025250458087772487], 
           DiskBox[20, 0.025250458087772487], 
           DiskBox[21, 0.025250458087772487], 
           {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
            DiskBox[22, 0.025250458087772487]}, 
           DiskBox[23, 0.025250458087772487], 
           DiskBox[24, 0.025250458087772487], 
           DiskBox[25, 0.025250458087772487], 
           DiskBox[26, 0.025250458087772487], 
           DiskBox[27, 0.025250458087772487], 
           DiskBox[28, 0.025250458087772487], 
           {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
            DiskBox[29, 0.025250458087772487]}, 
           DiskBox[30, 0.025250458087772487], 
           DiskBox[31, 0.025250458087772487], 
           DiskBox[32, 0.025250458087772487], 
           DiskBox[33, 0.025250458087772487], 
           DiskBox[34, 0.025250458087772487], 
           DiskBox[35, 0.025250458087772487], 
           {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
            DiskBox[36, 0.025250458087772487]}, 
           DiskBox[37, 0.025250458087772487], 
           DiskBox[38, 0.025250458087772487], 
           DiskBox[39, 0.025250458087772487], 
           DiskBox[40, 0.025250458087772487], 
           DiskBox[41, 0.025250458087772487], 
           DiskBox[42, 0.025250458087772487], 
           {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
            DiskBox[43, 0.025250458087772487]}, 
           DiskBox[44, 0.025250458087772487], 
           DiskBox[45, 0.025250458087772487], 
           DiskBox[46, 0.025250458087772487], 
           DiskBox[47, 0.025250458087772487], 
           DiskBox[48, 0.025250458087772487], 
           DiskBox[49, 0.025250458087772487], 
           {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
            DiskBox[50, 0.025250458087772487]}, 
           DiskBox[51, 0.025250458087772487], 
           DiskBox[52, 0.025250458087772487], 
           DiskBox[53, 0.025250458087772487], 
           DiskBox[54, 0.025250458087772487], 
           DiskBox[55, 0.025250458087772487], 
           DiskBox[56, 0.025250458087772487], 
           {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
            DiskBox[57, 0.025250458087772487]}, 
           DiskBox[58, 0.025250458087772487], 
           DiskBox[59, 0.025250458087772487], 
           DiskBox[60, 0.025250458087772487], 
           DiskBox[61, 0.025250458087772487], 
           DiskBox[62, 0.025250458087772487], 
           DiskBox[63, 0.025250458087772487], 
           DiskBox[64, 0.025250458087772487]}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    FormatType->TraditionalForm,
    FrameTicks->None], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 
        19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 
        53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64}, {Null, 
         SparseArray[
         Automatic, {64, 64}, 0, {
          1, {{0, 21, 42, 63, 84, 105, 126, 147, 168, 189, 212, 235, 258, 281,
             304, 327, 348, 369, 392, 417, 442, 467, 492, 515, 536, 557, 580, 
            605, 632, 659, 684, 707, 728, 749, 772, 797, 824, 851, 876, 899, 
            920, 941, 964, 989, 1014, 1039, 1064, 1087, 1108, 1129, 1152, 
            1175, 1198, 1221, 1244, 1267, 1288, 1309, 1330, 1351, 1372, 1393, 
            1414, 1435, 1456}, CompressedData["
1:eJw1lGeygtoWhA8oWUBFwJxQDOQgOY3hDeFO4E3tDvH21uKXVV/jWr27utbl
n///7x/67+/vX+bvj8IvPZkyLMcL4kLb7C/3lx/l5UCNUFqutoer/Q7ioqLo
LxSl2ULTd0fr4YRJTdETAqWZvFwZm/3p9nTTBnAKOJMVTTe3h/Pl7n1aAhmO
lxV1Zax3x6v98rPuC1leUee6uT9Zj3cQ5f0PcurcWB/Ot6cTxgUs0ViMP88X
y83ucnt5UVaSL4WRatv99f7247wa8H9B/OKlttrsDpbtBElRYypeRLC20rf7
4+X2cMO0wS7gGfBKN3aH0/X+fMEvHBAsw5ph7o9ny377Udb9YsHwuWGuD6fb
wwnivOxHqprr4/n+dMOkqBCjIMIB/r/ebC/Wy40+ZUfDm7QY6e56e3txVvXU
hCHJLr98u9tfrLvjJ3k90FMWg/E+Iuz2h+vNfrlBWjQThsNCCCsI+8PRuj/e
Xhh92ilLUiaCDovH081+On6clR3D/ZLCjvXxdL4/3CDJq57lR2qezvbTC9Oi
HqipIC2WMIIB58v15URp2dKMCIvaZqTW240/VTdhBUkmUW+//GrdXo6XZHVP
TTlxpmAyHkoU63Z/u36U5s1AM7wkq9gJaQ/pdrcdL4g/RdlO2JlCQifKATbt
h+uHSVZ1U05Wf6lhz9l+PL0gzeue4ZX5SE+Ppx9+imagGAE93WxhBgOer3eU
lA3NiugpvryM1InTqp1wkoJOk9SvX/523Cj51N2UF2Yqio3JeCxRHNeL06xs
eooR5TnqjZ2QbpBcz08+edUONCsp6DjMEOUOm36QZkXdTbiZqpu/5LDn6Qfh
J2/6KS+j6iN9BGFWtAPFCvIC5b1cYQYDwigua5oTlSWqiy9fI02qZsJLqmag
6CT595fHSVrW7XQ2X6xMVB2D8VYiJOmnajpGkJf6GmXHQgguhPST1W1PsaKi
Gag7jBDBg8Usb7qB5iR1ZR5Ov9SwI8zyou0n/Gyuo/IjDfKiGyhOUBY6zon1
esMIBhRlRfOiujRwTWDRiUZaT6S5Zu6OqDsJPf7iqm6ms9Ua5wRlx1Q8kuC6
aRl5oeOgoOrYBZwCN23HCsrS2B1RdDgg+ANvXU9xoqrhrtwfv6QwvOj6geal
+QqnxX6ONO8HihfUhbE54LQ4UQwHLflSnC/N7RF3BdaS8gcnkrbenSwbHScp
V18Iv/szDgrqjYF4F4GMrG8OOCcoNpYANoCssjC2R8tGp7GYwLYfOEFdmjtc
Ey/4xYKhsCTOtfUe58QPR9j/BxTjuzc=
            "]}, Pattern}]}, {
        GraphHighlight -> {24, 56, 40, 48, 64, 16, 32, 8}}]]}, 
      TagBox[GraphicsGroupBox[GraphicsComplexBox[CompressedData["
1:eJw9kHsw2wcAx3/JJuo85tFWbdRzpTSh5rGS+f4oxaxo5jyq2ypFu7qjNHM3
1XqtTvWiuu16mFePrul5xmPXRldFy5RaI60Oo0hKZkHqkYQQ6+52+9597vPf
54+vNTuFlUAlCIJ8y78+URNidp6rwSSl5/Q7fqtwMYh834VHJS8XFmYNvadC
Q7ORtSRkExk+9KEs6RbYA05FjOcEWZ2yFBOetokQE5NpdZsC+2uzpS0XNMjk
32LV8DX42FXCpH1HkA3BRZ8wLOSQ3Cu26GmlkI9iYwby7FagPHKMSToQZNlB
jzrldSo59E2UbmSjHM3dFcq542okB7OCxm028LWq1jNKi0I68ctzOYurqL56
63GQcB2EVc2dISFBHo02EY0UbIBxwc3X5r4C+QaBVUbsVbzLXZ46+AuF7Bvq
EYlml5E7UkBP1N3EtX22hsWfz8LrkEbXsYtCmpKR7rqeGqiid1P1muZBm1tk
mj4lSFFQbI9J1AIyAow5N79UYLrPUvBB6BoUvYJLM+0aaByZjtU0FSpKM+nh
OnJ0Lkp0J9kbOF+uk1rpo0CodmC1Q/g6njmKJVHsl3BNdvqrxW8T/fZmIqMe
KWo99rHPzmnwgl7uTGvZQv326wdmv3Xj3iGJbb6XCrtFxtMLjFkw61GUeUKN
+IjBJ+32M1DsteINOLxBzoH+ZKGVAjM2OeZG0atgjdlmD1xZwOnggNmV9BmI
74y36RmqkP+tacu4/iukPU5s2Lq4BELmZ1Mw0AY3s/i/6e7r8GOl2ldsbINT
wfZO+FGMzlFxkw9nG4OjtYuMHWNw2GmV5Bu2jJ5G2sm4bSmUhUFahbkqyPq4
gXEFCzAU1rV/pnyNunLLxCa+HIyM+sN+MStwI6sopf4rYJkXsoriRTAuEd4V
hCrhXGzbG+gphp87hd89rIYsnBdR9hGVFPBGd/H9xXiSHmfcYqYGV5T7w8tB
OaosGXk3HZV4kJf/NFh/CuGf+lc+L17CyTXvmf0/yzE2MbdJKZEjmpfbHnZ7
Bo3eagOtcimE43pdSTtV+L5OYL4YMg/mRPoEl74Kqt12ihd7FAz7h6TeDoKk
NVV1yuLX0FbLWVxyHYaFvrbk3IF13F2h9w5XDMDt1G3nqT1SjAyb/M4LmcSH
lLBT0qNvMHYm+Kx79jDyu/VzJHZjoFl2FF9Sj6D1WF9s+QspKi96dMrapXhG
JUZ2fdGBja4yU27HEgxGPNssH/0BaVqkxOrtT631EeIbWWsg5NKgyCNeaNF/
ePVX3jz+DLg2zUgT4kZiXRtnagHEf7uemmm9RzANWf9lG50ECer5PyU0nJlG
c2eDbK9agJKi49qk4SC+up89es5bCpdRfmlSshBhqRTile/U/x3XhiuhESYr
+Ac6z/Ho
         "], {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
           ArrowBox[CompressedData["
1:eJwVxUUBJIkBAMBtmmZmZmZm0HAS1sDZjZwknyr/77///AX//Pnzn//x/wEQ
gAAYQIAfgAIYgAMEwAMioAMW4AMxkAMN0AMrsAMfCIEwiIA/EAUxEAcJkAQF
UAIN0AYDMAELsAUHcAMPCIYQ6AehEAYREAlREA+JkAyZkAOFUAqVUAeN0Akj
8A9GYQwmYQqmYQGWYAXWYQt24QjO4Aqe4Av5ISiCIRRCIwwiIjKiIgZiIx7i
IzFSIzNy/9Af9qN/zI/9ST/lp/3Mn/MLfskv/zW/5fegGMqgLMqhMqqiFuqi
IZqiBdqiPbqiL8ZiHKZgGmZjHhZhGVZiHTZgG7ZjH07gJE7hNM7gLM7hPC7g
Om7iPh7hOV7jPb7gO/4SJEERNMEQLMERPCEQImEQFhEQMVEQDTEQK3EQH0mR
NMmQLMmRAimSEqmTJmmTIZmQJdmSI7mRJ0VTDMVSHCVSEiVTBmVRDuVTEZVS
FdVRE3XRDM3SHC3RMq3QJm3TLh3QMZ3ROV3TM30zLMMxMqMwKmMxDuMxIZMw
BdMwPbMwD8uxCquyGmuzLhuxKVuyLTuwK7uzL6dyGudwHhdzGVdxHTdyG3dw
Hy/wIi/xMq/wKq/xOm/wPh/yOV/xPT/zO/8IoiAJsqAIqqAJumAIphAIkVAI
tTAIi3AIryiJsqiIqqiJhmiKluiLoRiLpdiIo7iKp/hJsqRIqqRJpmRJthRI
kZRIuVRJrTRJm3TJiqzKmmzJtuzIoRzLqVzItdzJvTzLt6IqmmIrjuIqkZIo
mVIqjTIoi7Irj6qpjuqqnhqrqVqprTqqq3qor+ZqnpZomVZrnTZpm3Zqn27o
pm7ptu7oru7pvh7ouV7qvT7pu34bpmEZtuEYruEZvhEYoVEYlTEYs3EYj2mZ
tumYrumZgRmakZmbpVmbo7mYp/latuVYruVZoRVZsVVYldVYvTVZq3VZn+3Y
ru3ZkR3biV3atd3agz3bm73bt+M6nhM7iZM6ldM4nTM6i3M4j+u5iZu6mVu7
rTu5q3u6r5d6mdd4nTd7m3d5nx/4oR/5sZ/4qZ/5uV/4vT/6u38FYRAFcZAE
aZAFeVAEZTAEU3AEdxiFcZiEaZiFRViGVdiHYziHZ/hEcZREaZRFZVRFdTRE
U7REe3RFb5zEaZzFVVzHTTzGc7zGR3zHX5ImWVInTdImU7IkW3ImT5qlTdqm
XTqna3qlb9ZmXbZkW3ZnX17kZV7ldd7kbd7lfT7ke34WZVEVddEUbdEVfTEU
Y3EUV1mVddmUbdmVQzmWU7mXZ3lXddVUbdVVYzVVc3VUV/XUTd3WXT3Vc73U
Z33Xb9M2XTM3S7M2V/M0X9u1S7u2W3u3b7d2W/d0Xz/0Yz/1c7/0a7/1e38M
4zAN87AM67AN+3AM5ziN87iM67iNx3iO1zRPy7RO23RO13TPy7zO23zN9/ws
67It9/Is77qtz/qu3/Zu337s537t9/7s7/4d53Ed9/Ec7/Gd13mfz/me33Vf
z/Ve3/3c7/097/O9338Bu7C7XQ==
            "], 0.025250458087772487`]}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           DiskBox[1, 0.025250458087772487], DiskBox[2, 0.025250458087772487],
            DiskBox[3, 0.025250458087772487], 
           DiskBox[4, 0.025250458087772487], DiskBox[5, 0.025250458087772487],
            DiskBox[6, 0.025250458087772487], 
           DiskBox[7, 0.025250458087772487], 
           {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
            DiskBox[8, 0.025250458087772487]}, 
           DiskBox[9, 0.025250458087772487], 
           DiskBox[10, 0.025250458087772487], 
           DiskBox[11, 0.025250458087772487], 
           DiskBox[12, 0.025250458087772487], 
           DiskBox[13, 0.025250458087772487], 
           DiskBox[14, 0.025250458087772487], 
           DiskBox[15, 0.025250458087772487], 
           {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
            DiskBox[16, 0.025250458087772487]}, 
           DiskBox[17, 0.025250458087772487], 
           DiskBox[18, 0.025250458087772487], 
           DiskBox[19, 0.025250458087772487], 
           DiskBox[20, 0.025250458087772487], 
           DiskBox[21, 0.025250458087772487], 
           DiskBox[22, 0.025250458087772487], 
           DiskBox[23, 0.025250458087772487], 
           {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
            DiskBox[24, 0.025250458087772487]}, 
           DiskBox[25, 0.025250458087772487], 
           DiskBox[26, 0.025250458087772487], 
           DiskBox[27, 0.025250458087772487], 
           DiskBox[28, 0.025250458087772487], 
           DiskBox[29, 0.025250458087772487], 
           DiskBox[30, 0.025250458087772487], 
           DiskBox[31, 0.025250458087772487], 
           {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
            DiskBox[32, 0.025250458087772487]}, 
           DiskBox[33, 0.025250458087772487], 
           DiskBox[34, 0.025250458087772487], 
           DiskBox[35, 0.025250458087772487], 
           DiskBox[36, 0.025250458087772487], 
           DiskBox[37, 0.025250458087772487], 
           DiskBox[38, 0.025250458087772487], 
           DiskBox[39, 0.025250458087772487], 
           {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
            DiskBox[40, 0.025250458087772487]}, 
           DiskBox[41, 0.025250458087772487], 
           DiskBox[42, 0.025250458087772487], 
           DiskBox[43, 0.025250458087772487], 
           DiskBox[44, 0.025250458087772487], 
           DiskBox[45, 0.025250458087772487], 
           DiskBox[46, 0.025250458087772487], 
           DiskBox[47, 0.025250458087772487], 
           {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
            DiskBox[48, 0.025250458087772487]}, 
           DiskBox[49, 0.025250458087772487], 
           DiskBox[50, 0.025250458087772487], 
           DiskBox[51, 0.025250458087772487], 
           DiskBox[52, 0.025250458087772487], 
           DiskBox[53, 0.025250458087772487], 
           DiskBox[54, 0.025250458087772487], 
           DiskBox[55, 0.025250458087772487], 
           {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
            DiskBox[56, 0.025250458087772487]}, 
           DiskBox[57, 0.025250458087772487], 
           DiskBox[58, 0.025250458087772487], 
           DiskBox[59, 0.025250458087772487], 
           DiskBox[60, 0.025250458087772487], 
           DiskBox[61, 0.025250458087772487], 
           DiskBox[62, 0.025250458087772487], 
           DiskBox[63, 0.025250458087772487], 
           {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
            DiskBox[64, 0.025250458087772487]}}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    FormatType->TraditionalForm,
    FrameTicks->None], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 
        19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 
        53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64}, {Null, 
         SparseArray[
         Automatic, {64, 64}, 0, {
          1, {{0, 21, 42, 63, 84, 105, 126, 147, 168, 189, 212, 235, 258, 281,
             304, 327, 348, 369, 392, 417, 442, 467, 492, 515, 536, 557, 580, 
            605, 632, 659, 684, 707, 728, 749, 772, 797, 824, 851, 876, 899, 
            920, 941, 964, 989, 1014, 1039, 1064, 1087, 1108, 1129, 1152, 
            1175, 1198, 1221, 1244, 1267, 1288, 1309, 1330, 1351, 1372, 1393, 
            1414, 1435, 1456}, CompressedData["
1:eJw1lGeygtoWhA8oWUBFwJxQDOQgOY3hDeFO4E3tDvH21uKXVV/jWr27utbl
n///7x/67+/vX+bvj8IvPZkyLMcL4kLb7C/3lx/l5UCNUFqutoer/Q7ioqLo
LxSl2ULTd0fr4YRJTdETAqWZvFwZm/3p9nTTBnAKOJMVTTe3h/Pl7n1aAhmO
lxV1Zax3x6v98rPuC1leUee6uT9Zj3cQ5f0PcurcWB/Ot6cTxgUs0ViMP88X
y83ucnt5UVaSL4WRatv99f7247wa8H9B/OKlttrsDpbtBElRYypeRLC20rf7
4+X2cMO0wS7gGfBKN3aH0/X+fMEvHBAsw5ph7o9ny377Udb9YsHwuWGuD6fb
wwnivOxHqprr4/n+dMOkqBCjIMIB/r/ebC/Wy40+ZUfDm7QY6e56e3txVvXU
hCHJLr98u9tfrLvjJ3k90FMWg/E+Iuz2h+vNfrlBWjQThsNCCCsI+8PRuj/e
Xhh92ilLUiaCDovH081+On6clR3D/ZLCjvXxdL4/3CDJq57lR2qezvbTC9Oi
HqipIC2WMIIB58v15URp2dKMCIvaZqTW240/VTdhBUkmUW+//GrdXo6XZHVP
TTlxpmAyHkoU63Z/u36U5s1AM7wkq9gJaQ/pdrcdL4g/RdlO2JlCQifKATbt
h+uHSVZ1U05Wf6lhz9l+PL0gzeue4ZX5SE+Ppx9+imagGAE93WxhBgOer3eU
lA3NiugpvryM1InTqp1wkoJOk9SvX/523Cj51N2UF2Yqio3JeCxRHNeL06xs
eooR5TnqjZ2QbpBcz08+edUONCsp6DjMEOUOm36QZkXdTbiZqpu/5LDn6Qfh
J2/6KS+j6iN9BGFWtAPFCvIC5b1cYQYDwigua5oTlSWqiy9fI02qZsJLqmag
6CT595fHSVrW7XQ2X6xMVB2D8VYiJOmnajpGkJf6GmXHQgguhPST1W1PsaKi
Gag7jBDBg8Usb7qB5iR1ZR5Ov9SwI8zyou0n/Gyuo/IjDfKiGyhOUBY6zon1
esMIBhRlRfOiujRwTWDRiUZaT6S5Zu6OqDsJPf7iqm6ms9Ua5wRlx1Q8kuC6
aRl5oeOgoOrYBZwCN23HCsrS2B1RdDgg+ANvXU9xoqrhrtwfv6QwvOj6geal
+QqnxX6ONO8HihfUhbE54LQ4UQwHLflSnC/N7RF3BdaS8gcnkrbenSwbHScp
V18Iv/szDgrqjYF4F4GMrG8OOCcoNpYANoCssjC2R8tGp7GYwLYfOEFdmjtc
Ey/4xYKhsCTOtfUe58QPR9j/BxTjuzc=
            "]}, Pattern}]}, {
        GraphHighlight -> {10, 13, 16, 9, 11, 12, 15, 14}}]]}, 
      TagBox[GraphicsGroupBox[GraphicsComplexBox[CompressedData["
1:eJw9kHsw2wcAx3/JJuo85tFWbdRzpTSh5rGS+f4oxaxo5jyq2ypFu7qjNHM3
1XqtTvWiuu16mFePrul5xmPXRldFy5RaI60Oo0hKZkHqkYQQ6+52+9597vPf
54+vNTuFlUAlCIJ8y78+URNidp6rwSSl5/Q7fqtwMYh834VHJS8XFmYNvadC
Q7ORtSRkExk+9KEs6RbYA05FjOcEWZ2yFBOetokQE5NpdZsC+2uzpS0XNMjk
32LV8DX42FXCpH1HkA3BRZ8wLOSQ3Cu26GmlkI9iYwby7FagPHKMSToQZNlB
jzrldSo59E2UbmSjHM3dFcq542okB7OCxm028LWq1jNKi0I68ctzOYurqL56
63GQcB2EVc2dISFBHo02EY0UbIBxwc3X5r4C+QaBVUbsVbzLXZ46+AuF7Bvq
EYlml5E7UkBP1N3EtX22hsWfz8LrkEbXsYtCmpKR7rqeGqiid1P1muZBm1tk
mj4lSFFQbI9J1AIyAow5N79UYLrPUvBB6BoUvYJLM+0aaByZjtU0FSpKM+nh
OnJ0Lkp0J9kbOF+uk1rpo0CodmC1Q/g6njmKJVHsl3BNdvqrxW8T/fZmIqMe
KWo99rHPzmnwgl7uTGvZQv326wdmv3Xj3iGJbb6XCrtFxtMLjFkw61GUeUKN
+IjBJ+32M1DsteINOLxBzoH+ZKGVAjM2OeZG0atgjdlmD1xZwOnggNmV9BmI
74y36RmqkP+tacu4/iukPU5s2Lq4BELmZ1Mw0AY3s/i/6e7r8GOl2ldsbINT
wfZO+FGMzlFxkw9nG4OjtYuMHWNw2GmV5Bu2jJ5G2sm4bSmUhUFahbkqyPq4
gXEFCzAU1rV/pnyNunLLxCa+HIyM+sN+MStwI6sopf4rYJkXsoriRTAuEd4V
hCrhXGzbG+gphp87hd89rIYsnBdR9hGVFPBGd/H9xXiSHmfcYqYGV5T7w8tB
OaosGXk3HZV4kJf/NFh/CuGf+lc+L17CyTXvmf0/yzE2MbdJKZEjmpfbHnZ7
Bo3eagOtcimE43pdSTtV+L5OYL4YMg/mRPoEl74Kqt12ihd7FAz7h6TeDoKk
NVV1yuLX0FbLWVxyHYaFvrbk3IF13F2h9w5XDMDt1G3nqT1SjAyb/M4LmcSH
lLBT0qNvMHYm+Kx79jDyu/VzJHZjoFl2FF9Sj6D1WF9s+QspKi96dMrapXhG
JUZ2fdGBja4yU27HEgxGPNssH/0BaVqkxOrtT631EeIbWWsg5NKgyCNeaNF/
ePVX3jz+DLg2zUgT4kZiXRtnagHEf7uemmm9RzANWf9lG50ECer5PyU0nJlG
c2eDbK9agJKi49qk4SC+up89es5bCpdRfmlSshBhqRTile/U/x3XhiuhESYr
+Ac6z/Ho
         "], {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
           ArrowBox[CompressedData["
1:eJwVxUUBJIkBAMBtmmZmZmZm0HAS1sDZjZwknyr/77///AX//Pnzn//x/wEQ
gAAYQIAfgAIYgAMEwAMioAMW4AMxkAMN0AMrsAMfCIEwiIA/EAUxEAcJkAQF
UAIN0AYDMAELsAUHcAMPCIYQ6AehEAYREAlREA+JkAyZkAOFUAqVUAeN0Akj
8A9GYQwmYQqmYQGWYAXWYQt24QjO4Aqe4Av5ISiCIRRCIwwiIjKiIgZiIx7i
IzFSIzNy/9Af9qN/zI/9ST/lp/3Mn/MLfskv/zW/5fegGMqgLMqhMqqiFuqi
IZqiBdqiPbqiL8ZiHKZgGmZjHhZhGVZiHTZgG7ZjH07gJE7hNM7gLM7hPC7g
Om7iPh7hOV7jPb7gO/4SJEERNMEQLMERPCEQImEQFhEQMVEQDTEQK3EQH0mR
NMmQLMmRAimSEqmTJmmTIZmQJdmSI7mRJ0VTDMVSHCVSEiVTBmVRDuVTEZVS
FdVRE3XRDM3SHC3RMq3QJm3TLh3QMZ3ROV3TM30zLMMxMqMwKmMxDuMxIZMw
BdMwPbMwD8uxCquyGmuzLhuxKVuyLTuwK7uzL6dyGudwHhdzGVdxHTdyG3dw
Hy/wIi/xMq/wKq/xOm/wPh/yOV/xPT/zO/8IoiAJsqAIqqAJumAIphAIkVAI
tTAIi3AIryiJsqiIqqiJhmiKluiLoRiLpdiIo7iKp/hJsqRIqqRJpmRJthRI
kZRIuVRJrTRJm3TJiqzKmmzJtuzIoRzLqVzItdzJvTzLt6IqmmIrjuIqkZIo
mVIqjTIoi7Irj6qpjuqqnhqrqVqprTqqq3qor+ZqnpZomVZrnTZpm3Zqn27o
pm7ptu7oru7pvh7ouV7qvT7pu34bpmEZtuEYruEZvhEYoVEYlTEYs3EYj2mZ
tumYrumZgRmakZmbpVmbo7mYp/latuVYruVZoRVZsVVYldVYvTVZq3VZn+3Y
ru3ZkR3biV3atd3agz3bm73bt+M6nhM7iZM6ldM4nTM6i3M4j+u5iZu6mVu7
rTu5q3u6r5d6mdd4nTd7m3d5nx/4oR/5sZ/4qZ/5uV/4vT/6u38FYRAFcZAE
aZAFeVAEZTAEU3AEdxiFcZiEaZiFRViGVdiHYziHZ/hEcZREaZRFZVRFdTRE
U7REe3RFb5zEaZzFVVzHTTzGc7zGR3zHX5ImWVInTdImU7IkW3ImT5qlTdqm
XTqna3qlb9ZmXbZkW3ZnX17kZV7ldd7kbd7lfT7ke34WZVEVddEUbdEVfTEU
Y3EUV1mVddmUbdmVQzmWU7mXZ3lXddVUbdVVYzVVc3VUV/XUTd3WXT3Vc73U
Z33Xb9M2XTM3S7M2V/M0X9u1S7u2W3u3b7d2W/d0Xz/0Yz/1c7/0a7/1e38M
4zAN87AM67AN+3AM5ziN87iM67iNx3iO1zRPy7RO23RO13TPy7zO23zN9/ws
67It9/Is77qtz/qu3/Zu337s537t9/7s7/4d53Ed9/Ec7/Gd13mfz/me33Vf
z/Ve3/3c7/097/O9338Bu7C7XQ==
            "], 0.025250458087772487`]}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           DiskBox[1, 0.025250458087772487], DiskBox[2, 0.025250458087772487],
            DiskBox[3, 0.025250458087772487], 
           DiskBox[4, 0.025250458087772487], DiskBox[5, 0.025250458087772487],
            DiskBox[6, 0.025250458087772487], 
           DiskBox[7, 0.025250458087772487], DiskBox[8, 0.025250458087772487], 
           {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
            DiskBox[9, 0.025250458087772487]}, 
           {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
            DiskBox[10, 0.025250458087772487]}, 
           {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
            DiskBox[11, 0.025250458087772487]}, 
           {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
            DiskBox[12, 0.025250458087772487]}, 
           {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
            DiskBox[13, 0.025250458087772487]}, 
           {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
            DiskBox[14, 0.025250458087772487]}, 
           {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
            DiskBox[15, 0.025250458087772487]}, 
           {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
            DiskBox[16, 0.025250458087772487]}, 
           DiskBox[17, 0.025250458087772487], 
           DiskBox[18, 0.025250458087772487], 
           DiskBox[19, 0.025250458087772487], 
           DiskBox[20, 0.025250458087772487], 
           DiskBox[21, 0.025250458087772487], 
           DiskBox[22, 0.025250458087772487], 
           DiskBox[23, 0.025250458087772487], 
           DiskBox[24, 0.025250458087772487], 
           DiskBox[25, 0.025250458087772487], 
           DiskBox[26, 0.025250458087772487], 
           DiskBox[27, 0.025250458087772487], 
           DiskBox[28, 0.025250458087772487], 
           DiskBox[29, 0.025250458087772487], 
           DiskBox[30, 0.025250458087772487], 
           DiskBox[31, 0.025250458087772487], 
           DiskBox[32, 0.025250458087772487], 
           DiskBox[33, 0.025250458087772487], 
           DiskBox[34, 0.025250458087772487], 
           DiskBox[35, 0.025250458087772487], 
           DiskBox[36, 0.025250458087772487], 
           DiskBox[37, 0.025250458087772487], 
           DiskBox[38, 0.025250458087772487], 
           DiskBox[39, 0.025250458087772487], 
           DiskBox[40, 0.025250458087772487], 
           DiskBox[41, 0.025250458087772487], 
           DiskBox[42, 0.025250458087772487], 
           DiskBox[43, 0.025250458087772487], 
           DiskBox[44, 0.025250458087772487], 
           DiskBox[45, 0.025250458087772487], 
           DiskBox[46, 0.025250458087772487], 
           DiskBox[47, 0.025250458087772487], 
           DiskBox[48, 0.025250458087772487], 
           DiskBox[49, 0.025250458087772487], 
           DiskBox[50, 0.025250458087772487], 
           DiskBox[51, 0.025250458087772487], 
           DiskBox[52, 0.025250458087772487], 
           DiskBox[53, 0.025250458087772487], 
           DiskBox[54, 0.025250458087772487], 
           DiskBox[55, 0.025250458087772487], 
           DiskBox[56, 0.025250458087772487], 
           DiskBox[57, 0.025250458087772487], 
           DiskBox[58, 0.025250458087772487], 
           DiskBox[59, 0.025250458087772487], 
           DiskBox[60, 0.025250458087772487], 
           DiskBox[61, 0.025250458087772487], 
           DiskBox[62, 0.025250458087772487], 
           DiskBox[63, 0.025250458087772487], 
           DiskBox[64, 0.025250458087772487]}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    FormatType->TraditionalForm,
    FrameTicks->None], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 
        19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 
        53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64}, {Null, 
         SparseArray[
         Automatic, {64, 64}, 0, {
          1, {{0, 21, 42, 63, 84, 105, 126, 147, 168, 189, 212, 235, 258, 281,
             304, 327, 348, 369, 392, 417, 442, 467, 492, 515, 536, 557, 580, 
            605, 632, 659, 684, 707, 728, 749, 772, 797, 824, 851, 876, 899, 
            920, 941, 964, 989, 1014, 1039, 1064, 1087, 1108, 1129, 1152, 
            1175, 1198, 1221, 1244, 1267, 1288, 1309, 1330, 1351, 1372, 1393, 
            1414, 1435, 1456}, CompressedData["
1:eJw1lGeygtoWhA8oWUBFwJxQDOQgOY3hDeFO4E3tDvH21uKXVV/jWr27utbl
n///7x/67+/vX+bvj8IvPZkyLMcL4kLb7C/3lx/l5UCNUFqutoer/Q7ioqLo
LxSl2ULTd0fr4YRJTdETAqWZvFwZm/3p9nTTBnAKOJMVTTe3h/Pl7n1aAhmO
lxV1Zax3x6v98rPuC1leUee6uT9Zj3cQ5f0PcurcWB/Ot6cTxgUs0ViMP88X
y83ucnt5UVaSL4WRatv99f7247wa8H9B/OKlttrsDpbtBElRYypeRLC20rf7
4+X2cMO0wS7gGfBKN3aH0/X+fMEvHBAsw5ph7o9ny377Udb9YsHwuWGuD6fb
wwnivOxHqprr4/n+dMOkqBCjIMIB/r/ebC/Wy40+ZUfDm7QY6e56e3txVvXU
hCHJLr98u9tfrLvjJ3k90FMWg/E+Iuz2h+vNfrlBWjQThsNCCCsI+8PRuj/e
Xhh92ilLUiaCDovH081+On6clR3D/ZLCjvXxdL4/3CDJq57lR2qezvbTC9Oi
HqipIC2WMIIB58v15URp2dKMCIvaZqTW240/VTdhBUkmUW+//GrdXo6XZHVP
TTlxpmAyHkoU63Z/u36U5s1AM7wkq9gJaQ/pdrcdL4g/RdlO2JlCQifKATbt
h+uHSVZ1U05Wf6lhz9l+PL0gzeue4ZX5SE+Ppx9+imagGAE93WxhBgOer3eU
lA3NiugpvryM1InTqp1wkoJOk9SvX/523Cj51N2UF2Yqio3JeCxRHNeL06xs
eooR5TnqjZ2QbpBcz08+edUONCsp6DjMEOUOm36QZkXdTbiZqpu/5LDn6Qfh
J2/6KS+j6iN9BGFWtAPFCvIC5b1cYQYDwigua5oTlSWqiy9fI02qZsJLqmag
6CT595fHSVrW7XQ2X6xMVB2D8VYiJOmnajpGkJf6GmXHQgguhPST1W1PsaKi
Gag7jBDBg8Usb7qB5iR1ZR5Ov9SwI8zyou0n/Gyuo/IjDfKiGyhOUBY6zon1
esMIBhRlRfOiujRwTWDRiUZaT6S5Zu6OqDsJPf7iqm6ms9Ua5wRlx1Q8kuC6
aRl5oeOgoOrYBZwCN23HCsrS2B1RdDgg+ANvXU9xoqrhrtwfv6QwvOj6geal
+QqnxX6ONO8HihfUhbE54LQ4UQwHLflSnC/N7RF3BdaS8gcnkrbenSwbHScp
V18Iv/szDgrqjYF4F4GMrG8OOCcoNpYANoCssjC2R8tGp7GYwLYfOEFdmjtc
Ey/4xYKhsCTOtfUe58QPR9j/BxTjuzc=
            "]}, Pattern}]}, {
        GraphHighlight -> {24, 21, 20, 23, 22, 17, 19, 18}}]]}, 
      TagBox[GraphicsGroupBox[GraphicsComplexBox[CompressedData["
1:eJw9kHsw2wcAx3/JJuo85tFWbdRzpTSh5rGS+f4oxaxo5jyq2ypFu7qjNHM3
1XqtTvWiuu16mFePrul5xmPXRldFy5RaI60Oo0hKZkHqkYQQ6+52+9597vPf
54+vNTuFlUAlCIJ8y78+URNidp6rwSSl5/Q7fqtwMYh834VHJS8XFmYNvadC
Q7ORtSRkExk+9KEs6RbYA05FjOcEWZ2yFBOetokQE5NpdZsC+2uzpS0XNMjk
32LV8DX42FXCpH1HkA3BRZ8wLOSQ3Cu26GmlkI9iYwby7FagPHKMSToQZNlB
jzrldSo59E2UbmSjHM3dFcq542okB7OCxm028LWq1jNKi0I68ctzOYurqL56
63GQcB2EVc2dISFBHo02EY0UbIBxwc3X5r4C+QaBVUbsVbzLXZ46+AuF7Bvq
EYlml5E7UkBP1N3EtX22hsWfz8LrkEbXsYtCmpKR7rqeGqiid1P1muZBm1tk
mj4lSFFQbI9J1AIyAow5N79UYLrPUvBB6BoUvYJLM+0aaByZjtU0FSpKM+nh
OnJ0Lkp0J9kbOF+uk1rpo0CodmC1Q/g6njmKJVHsl3BNdvqrxW8T/fZmIqMe
KWo99rHPzmnwgl7uTGvZQv326wdmv3Xj3iGJbb6XCrtFxtMLjFkw61GUeUKN
+IjBJ+32M1DsteINOLxBzoH+ZKGVAjM2OeZG0atgjdlmD1xZwOnggNmV9BmI
74y36RmqkP+tacu4/iukPU5s2Lq4BELmZ1Mw0AY3s/i/6e7r8GOl2ldsbINT
wfZO+FGMzlFxkw9nG4OjtYuMHWNw2GmV5Bu2jJ5G2sm4bSmUhUFahbkqyPq4
gXEFCzAU1rV/pnyNunLLxCa+HIyM+sN+MStwI6sopf4rYJkXsoriRTAuEd4V
hCrhXGzbG+gphp87hd89rIYsnBdR9hGVFPBGd/H9xXiSHmfcYqYGV5T7w8tB
OaosGXk3HZV4kJf/NFh/CuGf+lc+L17CyTXvmf0/yzE2MbdJKZEjmpfbHnZ7
Bo3eagOtcimE43pdSTtV+L5OYL4YMg/mRPoEl74Kqt12ihd7FAz7h6TeDoKk
NVV1yuLX0FbLWVxyHYaFvrbk3IF13F2h9w5XDMDt1G3nqT1SjAyb/M4LmcSH
lLBT0qNvMHYm+Kx79jDyu/VzJHZjoFl2FF9Sj6D1WF9s+QspKi96dMrapXhG
JUZ2fdGBja4yU27HEgxGPNssH/0BaVqkxOrtT631EeIbWWsg5NKgyCNeaNF/
ePVX3jz+DLg2zUgT4kZiXRtnagHEf7uemmm9RzANWf9lG50ECer5PyU0nJlG
c2eDbK9agJKi49qk4SC+up89es5bCpdRfmlSshBhqRTile/U/x3XhiuhESYr
+Ac6z/Ho
         "], {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
           ArrowBox[CompressedData["
1:eJwVxUUBJIkBAMBtmmZmZmZm0HAS1sDZjZwknyr/77///AX//Pnzn//x/wEQ
gAAYQIAfgAIYgAMEwAMioAMW4AMxkAMN0AMrsAMfCIEwiIA/EAUxEAcJkAQF
UAIN0AYDMAELsAUHcAMPCIYQ6AehEAYREAlREA+JkAyZkAOFUAqVUAeN0Akj
8A9GYQwmYQqmYQGWYAXWYQt24QjO4Aqe4Av5ISiCIRRCIwwiIjKiIgZiIx7i
IzFSIzNy/9Af9qN/zI/9ST/lp/3Mn/MLfskv/zW/5fegGMqgLMqhMqqiFuqi
IZqiBdqiPbqiL8ZiHKZgGmZjHhZhGVZiHTZgG7ZjH07gJE7hNM7gLM7hPC7g
Om7iPh7hOV7jPb7gO/4SJEERNMEQLMERPCEQImEQFhEQMVEQDTEQK3EQH0mR
NMmQLMmRAimSEqmTJmmTIZmQJdmSI7mRJ0VTDMVSHCVSEiVTBmVRDuVTEZVS
FdVRE3XRDM3SHC3RMq3QJm3TLh3QMZ3ROV3TM30zLMMxMqMwKmMxDuMxIZMw
BdMwPbMwD8uxCquyGmuzLhuxKVuyLTuwK7uzL6dyGudwHhdzGVdxHTdyG3dw
Hy/wIi/xMq/wKq/xOm/wPh/yOV/xPT/zO/8IoiAJsqAIqqAJumAIphAIkVAI
tTAIi3AIryiJsqiIqqiJhmiKluiLoRiLpdiIo7iKp/hJsqRIqqRJpmRJthRI
kZRIuVRJrTRJm3TJiqzKmmzJtuzIoRzLqVzItdzJvTzLt6IqmmIrjuIqkZIo
mVIqjTIoi7Irj6qpjuqqnhqrqVqprTqqq3qor+ZqnpZomVZrnTZpm3Zqn27o
pm7ptu7oru7pvh7ouV7qvT7pu34bpmEZtuEYruEZvhEYoVEYlTEYs3EYj2mZ
tumYrumZgRmakZmbpVmbo7mYp/latuVYruVZoRVZsVVYldVYvTVZq3VZn+3Y
ru3ZkR3biV3atd3agz3bm73bt+M6nhM7iZM6ldM4nTM6i3M4j+u5iZu6mVu7
rTu5q3u6r5d6mdd4nTd7m3d5nx/4oR/5sZ/4qZ/5uV/4vT/6u38FYRAFcZAE
aZAFeVAEZTAEU3AEdxiFcZiEaZiFRViGVdiHYziHZ/hEcZREaZRFZVRFdTRE
U7REe3RFb5zEaZzFVVzHTTzGc7zGR3zHX5ImWVInTdImU7IkW3ImT5qlTdqm
XTqna3qlb9ZmXbZkW3ZnX17kZV7ldd7kbd7lfT7ke34WZVEVddEUbdEVfTEU
Y3EUV1mVddmUbdmVQzmWU7mXZ3lXddVUbdVVYzVVc3VUV/XUTd3WXT3Vc73U
Z33Xb9M2XTM3S7M2V/M0X9u1S7u2W3u3b7d2W/d0Xz/0Yz/1c7/0a7/1e38M
4zAN87AM67AN+3AM5ziN87iM67iNx3iO1zRPy7RO23RO13TPy7zO23zN9/ws
67It9/Is77qtz/qu3/Zu337s537t9/7s7/4d53Ed9/Ec7/Gd13mfz/me33Vf
z/Ve3/3c7/097/O9338Bu7C7XQ==
            "], 0.025250458087772487`]}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           DiskBox[1, 0.025250458087772487], DiskBox[2, 0.025250458087772487],
            DiskBox[3, 0.025250458087772487], 
           DiskBox[4, 0.025250458087772487], DiskBox[5, 0.025250458087772487],
            DiskBox[6, 0.025250458087772487], 
           DiskBox[7, 0.025250458087772487], DiskBox[8, 0.025250458087772487],
            DiskBox[9, 0.025250458087772487], 
           DiskBox[10, 0.025250458087772487], 
           DiskBox[11, 0.025250458087772487], 
           DiskBox[12, 0.025250458087772487], 
           DiskBox[13, 0.025250458087772487], 
           DiskBox[14, 0.025250458087772487], 
           DiskBox[15, 0.025250458087772487], 
           DiskBox[16, 0.025250458087772487], 
           {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
            DiskBox[17, 0.025250458087772487]}, 
           {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
            DiskBox[18, 0.025250458087772487]}, 
           {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
            DiskBox[19, 0.025250458087772487]}, 
           {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
            DiskBox[20, 0.025250458087772487]}, 
           {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
            DiskBox[21, 0.025250458087772487]}, 
           {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
            DiskBox[22, 0.025250458087772487]}, 
           {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
            DiskBox[23, 0.025250458087772487]}, 
           {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
            DiskBox[24, 0.025250458087772487]}, 
           DiskBox[25, 0.025250458087772487], 
           DiskBox[26, 0.025250458087772487], 
           DiskBox[27, 0.025250458087772487], 
           DiskBox[28, 0.025250458087772487], 
           DiskBox[29, 0.025250458087772487], 
           DiskBox[30, 0.025250458087772487], 
           DiskBox[31, 0.025250458087772487], 
           DiskBox[32, 0.025250458087772487], 
           DiskBox[33, 0.025250458087772487], 
           DiskBox[34, 0.025250458087772487], 
           DiskBox[35, 0.025250458087772487], 
           DiskBox[36, 0.025250458087772487], 
           DiskBox[37, 0.025250458087772487], 
           DiskBox[38, 0.025250458087772487], 
           DiskBox[39, 0.025250458087772487], 
           DiskBox[40, 0.025250458087772487], 
           DiskBox[41, 0.025250458087772487], 
           DiskBox[42, 0.025250458087772487], 
           DiskBox[43, 0.025250458087772487], 
           DiskBox[44, 0.025250458087772487], 
           DiskBox[45, 0.025250458087772487], 
           DiskBox[46, 0.025250458087772487], 
           DiskBox[47, 0.025250458087772487], 
           DiskBox[48, 0.025250458087772487], 
           DiskBox[49, 0.025250458087772487], 
           DiskBox[50, 0.025250458087772487], 
           DiskBox[51, 0.025250458087772487], 
           DiskBox[52, 0.025250458087772487], 
           DiskBox[53, 0.025250458087772487], 
           DiskBox[54, 0.025250458087772487], 
           DiskBox[55, 0.025250458087772487], 
           DiskBox[56, 0.025250458087772487], 
           DiskBox[57, 0.025250458087772487], 
           DiskBox[58, 0.025250458087772487], 
           DiskBox[59, 0.025250458087772487], 
           DiskBox[60, 0.025250458087772487], 
           DiskBox[61, 0.025250458087772487], 
           DiskBox[62, 0.025250458087772487], 
           DiskBox[63, 0.025250458087772487], 
           DiskBox[64, 0.025250458087772487]}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    FormatType->TraditionalForm,
    FrameTicks->None], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 
        19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 
        53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64}, {Null, 
         SparseArray[
         Automatic, {64, 64}, 0, {
          1, {{0, 21, 42, 63, 84, 105, 126, 147, 168, 189, 212, 235, 258, 281,
             304, 327, 348, 369, 392, 417, 442, 467, 492, 515, 536, 557, 580, 
            605, 632, 659, 684, 707, 728, 749, 772, 797, 824, 851, 876, 899, 
            920, 941, 964, 989, 1014, 1039, 1064, 1087, 1108, 1129, 1152, 
            1175, 1198, 1221, 1244, 1267, 1288, 1309, 1330, 1351, 1372, 1393, 
            1414, 1435, 1456}, CompressedData["
1:eJw1lGeygtoWhA8oWUBFwJxQDOQgOY3hDeFO4E3tDvH21uKXVV/jWr27utbl
n///7x/67+/vX+bvj8IvPZkyLMcL4kLb7C/3lx/l5UCNUFqutoer/Q7ioqLo
LxSl2ULTd0fr4YRJTdETAqWZvFwZm/3p9nTTBnAKOJMVTTe3h/Pl7n1aAhmO
lxV1Zax3x6v98rPuC1leUee6uT9Zj3cQ5f0PcurcWB/Ot6cTxgUs0ViMP88X
y83ucnt5UVaSL4WRatv99f7247wa8H9B/OKlttrsDpbtBElRYypeRLC20rf7
4+X2cMO0wS7gGfBKN3aH0/X+fMEvHBAsw5ph7o9ny377Udb9YsHwuWGuD6fb
wwnivOxHqprr4/n+dMOkqBCjIMIB/r/ebC/Wy40+ZUfDm7QY6e56e3txVvXU
hCHJLr98u9tfrLvjJ3k90FMWg/E+Iuz2h+vNfrlBWjQThsNCCCsI+8PRuj/e
Xhh92ilLUiaCDovH081+On6clR3D/ZLCjvXxdL4/3CDJq57lR2qezvbTC9Oi
HqipIC2WMIIB58v15URp2dKMCIvaZqTW240/VTdhBUkmUW+//GrdXo6XZHVP
TTlxpmAyHkoU63Z/u36U5s1AM7wkq9gJaQ/pdrcdL4g/RdlO2JlCQifKATbt
h+uHSVZ1U05Wf6lhz9l+PL0gzeue4ZX5SE+Ppx9+imagGAE93WxhBgOer3eU
lA3NiugpvryM1InTqp1wkoJOk9SvX/523Cj51N2UF2Yqio3JeCxRHNeL06xs
eooR5TnqjZ2QbpBcz08+edUONCsp6DjMEOUOm36QZkXdTbiZqpu/5LDn6Qfh
J2/6KS+j6iN9BGFWtAPFCvIC5b1cYQYDwigua5oTlSWqiy9fI02qZsJLqmag
6CT595fHSVrW7XQ2X6xMVB2D8VYiJOmnajpGkJf6GmXHQgguhPST1W1PsaKi
Gag7jBDBg8Usb7qB5iR1ZR5Ov9SwI8zyou0n/Gyuo/IjDfKiGyhOUBY6zon1
esMIBhRlRfOiujRwTWDRiUZaT6S5Zu6OqDsJPf7iqm6ms9Ua5wRlx1Q8kuC6
aRl5oeOgoOrYBZwCN23HCsrS2B1RdDgg+ANvXU9xoqrhrtwfv6QwvOj6geal
+QqnxX6ONO8HihfUhbE54LQ4UQwHLflSnC/N7RF3BdaS8gcnkrbenSwbHScp
V18Iv/szDgrqjYF4F4GMrG8OOCcoNpYANoCssjC2R8tGp7GYwLYfOEFdmjtc
Ey/4xYKhsCTOtfUe58QPR9j/BxTjuzc=
            "]}, Pattern}]}, {
        GraphHighlight -> {29, 25, 32, 26, 28, 27, 31, 30}}]]}, 
      TagBox[GraphicsGroupBox[GraphicsComplexBox[CompressedData["
1:eJw9kHsw2wcAx3/JJuo85tFWbdRzpTSh5rGS+f4oxaxo5jyq2ypFu7qjNHM3
1XqtTvWiuu16mFePrul5xmPXRldFy5RaI60Oo0hKZkHqkYQQ6+52+9597vPf
54+vNTuFlUAlCIJ8y78+URNidp6rwSSl5/Q7fqtwMYh834VHJS8XFmYNvadC
Q7ORtSRkExk+9KEs6RbYA05FjOcEWZ2yFBOetokQE5NpdZsC+2uzpS0XNMjk
32LV8DX42FXCpH1HkA3BRZ8wLOSQ3Cu26GmlkI9iYwby7FagPHKMSToQZNlB
jzrldSo59E2UbmSjHM3dFcq542okB7OCxm028LWq1jNKi0I68ctzOYurqL56
63GQcB2EVc2dISFBHo02EY0UbIBxwc3X5r4C+QaBVUbsVbzLXZ46+AuF7Bvq
EYlml5E7UkBP1N3EtX22hsWfz8LrkEbXsYtCmpKR7rqeGqiid1P1muZBm1tk
mj4lSFFQbI9J1AIyAow5N79UYLrPUvBB6BoUvYJLM+0aaByZjtU0FSpKM+nh
OnJ0Lkp0J9kbOF+uk1rpo0CodmC1Q/g6njmKJVHsl3BNdvqrxW8T/fZmIqMe
KWo99rHPzmnwgl7uTGvZQv326wdmv3Xj3iGJbb6XCrtFxtMLjFkw61GUeUKN
+IjBJ+32M1DsteINOLxBzoH+ZKGVAjM2OeZG0atgjdlmD1xZwOnggNmV9BmI
74y36RmqkP+tacu4/iukPU5s2Lq4BELmZ1Mw0AY3s/i/6e7r8GOl2ldsbINT
wfZO+FGMzlFxkw9nG4OjtYuMHWNw2GmV5Bu2jJ5G2sm4bSmUhUFahbkqyPq4
gXEFCzAU1rV/pnyNunLLxCa+HIyM+sN+MStwI6sopf4rYJkXsoriRTAuEd4V
hCrhXGzbG+gphp87hd89rIYsnBdR9hGVFPBGd/H9xXiSHmfcYqYGV5T7w8tB
OaosGXk3HZV4kJf/NFh/CuGf+lc+L17CyTXvmf0/yzE2MbdJKZEjmpfbHnZ7
Bo3eagOtcimE43pdSTtV+L5OYL4YMg/mRPoEl74Kqt12ihd7FAz7h6TeDoKk
NVV1yuLX0FbLWVxyHYaFvrbk3IF13F2h9w5XDMDt1G3nqT1SjAyb/M4LmcSH
lLBT0qNvMHYm+Kx79jDyu/VzJHZjoFl2FF9Sj6D1WF9s+QspKi96dMrapXhG
JUZ2fdGBja4yU27HEgxGPNssH/0BaVqkxOrtT631EeIbWWsg5NKgyCNeaNF/
ePVX3jz+DLg2zUgT4kZiXRtnagHEf7uemmm9RzANWf9lG50ECer5PyU0nJlG
c2eDbK9agJKi49qk4SC+up89es5bCpdRfmlSshBhqRTile/U/x3XhiuhESYr
+Ac6z/Ho
         "], {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
           ArrowBox[CompressedData["
1:eJwVxUUBJIkBAMBtmmZmZmZm0HAS1sDZjZwknyr/77///AX//Pnzn//x/wEQ
gAAYQIAfgAIYgAMEwAMioAMW4AMxkAMN0AMrsAMfCIEwiIA/EAUxEAcJkAQF
UAIN0AYDMAELsAUHcAMPCIYQ6AehEAYREAlREA+JkAyZkAOFUAqVUAeN0Akj
8A9GYQwmYQqmYQGWYAXWYQt24QjO4Aqe4Av5ISiCIRRCIwwiIjKiIgZiIx7i
IzFSIzNy/9Af9qN/zI/9ST/lp/3Mn/MLfskv/zW/5fegGMqgLMqhMqqiFuqi
IZqiBdqiPbqiL8ZiHKZgGmZjHhZhGVZiHTZgG7ZjH07gJE7hNM7gLM7hPC7g
Om7iPh7hOV7jPb7gO/4SJEERNMEQLMERPCEQImEQFhEQMVEQDTEQK3EQH0mR
NMmQLMmRAimSEqmTJmmTIZmQJdmSI7mRJ0VTDMVSHCVSEiVTBmVRDuVTEZVS
FdVRE3XRDM3SHC3RMq3QJm3TLh3QMZ3ROV3TM30zLMMxMqMwKmMxDuMxIZMw
BdMwPbMwD8uxCquyGmuzLhuxKVuyLTuwK7uzL6dyGudwHhdzGVdxHTdyG3dw
Hy/wIi/xMq/wKq/xOm/wPh/yOV/xPT/zO/8IoiAJsqAIqqAJumAIphAIkVAI
tTAIi3AIryiJsqiIqqiJhmiKluiLoRiLpdiIo7iKp/hJsqRIqqRJpmRJthRI
kZRIuVRJrTRJm3TJiqzKmmzJtuzIoRzLqVzItdzJvTzLt6IqmmIrjuIqkZIo
mVIqjTIoi7Irj6qpjuqqnhqrqVqprTqqq3qor+ZqnpZomVZrnTZpm3Zqn27o
pm7ptu7oru7pvh7ouV7qvT7pu34bpmEZtuEYruEZvhEYoVEYlTEYs3EYj2mZ
tumYrumZgRmakZmbpVmbo7mYp/latuVYruVZoRVZsVVYldVYvTVZq3VZn+3Y
ru3ZkR3biV3atd3agz3bm73bt+M6nhM7iZM6ldM4nTM6i3M4j+u5iZu6mVu7
rTu5q3u6r5d6mdd4nTd7m3d5nx/4oR/5sZ/4qZ/5uV/4vT/6u38FYRAFcZAE
aZAFeVAEZTAEU3AEdxiFcZiEaZiFRViGVdiHYziHZ/hEcZREaZRFZVRFdTRE
U7REe3RFb5zEaZzFVVzHTTzGc7zGR3zHX5ImWVInTdImU7IkW3ImT5qlTdqm
XTqna3qlb9ZmXbZkW3ZnX17kZV7ldd7kbd7lfT7ke34WZVEVddEUbdEVfTEU
Y3EUV1mVddmUbdmVQzmWU7mXZ3lXddVUbdVVYzVVc3VUV/XUTd3WXT3Vc73U
Z33Xb9M2XTM3S7M2V/M0X9u1S7u2W3u3b7d2W/d0Xz/0Yz/1c7/0a7/1e38M
4zAN87AM67AN+3AM5ziN87iM67iNx3iO1zRPy7RO23RO13TPy7zO23zN9/ws
67It9/Is77qtz/qu3/Zu337s537t9/7s7/4d53Ed9/Ec7/Gd13mfz/me33Vf
z/Ve3/3c7/097/O9338Bu7C7XQ==
            "], 0.025250458087772487`]}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           DiskBox[1, 0.025250458087772487], DiskBox[2, 0.025250458087772487],
            DiskBox[3, 0.025250458087772487], 
           DiskBox[4, 0.025250458087772487], DiskBox[5, 0.025250458087772487],
            DiskBox[6, 0.025250458087772487], 
           DiskBox[7, 0.025250458087772487], DiskBox[8, 0.025250458087772487],
            DiskBox[9, 0.025250458087772487], 
           DiskBox[10, 0.025250458087772487], 
           DiskBox[11, 0.025250458087772487], 
           DiskBox[12, 0.025250458087772487], 
           DiskBox[13, 0.025250458087772487], 
           DiskBox[14, 0.025250458087772487], 
           DiskBox[15, 0.025250458087772487], 
           DiskBox[16, 0.025250458087772487], 
           DiskBox[17, 0.025250458087772487], 
           DiskBox[18, 0.025250458087772487], 
           DiskBox[19, 0.025250458087772487], 
           DiskBox[20, 0.025250458087772487], 
           DiskBox[21, 0.025250458087772487], 
           DiskBox[22, 0.025250458087772487], 
           DiskBox[23, 0.025250458087772487], 
           DiskBox[24, 0.025250458087772487], 
           {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
            DiskBox[25, 0.025250458087772487]}, 
           {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
            DiskBox[26, 0.025250458087772487]}, 
           {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
            DiskBox[27, 0.025250458087772487]}, 
           {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
            DiskBox[28, 0.025250458087772487]}, 
           {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
            DiskBox[29, 0.025250458087772487]}, 
           {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
            DiskBox[30, 0.025250458087772487]}, 
           {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
            DiskBox[31, 0.025250458087772487]}, 
           {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
            DiskBox[32, 0.025250458087772487]}, 
           DiskBox[33, 0.025250458087772487], 
           DiskBox[34, 0.025250458087772487], 
           DiskBox[35, 0.025250458087772487], 
           DiskBox[36, 0.025250458087772487], 
           DiskBox[37, 0.025250458087772487], 
           DiskBox[38, 0.025250458087772487], 
           DiskBox[39, 0.025250458087772487], 
           DiskBox[40, 0.025250458087772487], 
           DiskBox[41, 0.025250458087772487], 
           DiskBox[42, 0.025250458087772487], 
           DiskBox[43, 0.025250458087772487], 
           DiskBox[44, 0.025250458087772487], 
           DiskBox[45, 0.025250458087772487], 
           DiskBox[46, 0.025250458087772487], 
           DiskBox[47, 0.025250458087772487], 
           DiskBox[48, 0.025250458087772487], 
           DiskBox[49, 0.025250458087772487], 
           DiskBox[50, 0.025250458087772487], 
           DiskBox[51, 0.025250458087772487], 
           DiskBox[52, 0.025250458087772487], 
           DiskBox[53, 0.025250458087772487], 
           DiskBox[54, 0.025250458087772487], 
           DiskBox[55, 0.025250458087772487], 
           DiskBox[56, 0.025250458087772487], 
           DiskBox[57, 0.025250458087772487], 
           DiskBox[58, 0.025250458087772487], 
           DiskBox[59, 0.025250458087772487], 
           DiskBox[60, 0.025250458087772487], 
           DiskBox[61, 0.025250458087772487], 
           DiskBox[62, 0.025250458087772487], 
           DiskBox[63, 0.025250458087772487], 
           DiskBox[64, 0.025250458087772487]}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    FormatType->TraditionalForm,
    FrameTicks->None], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 
        19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 
        53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64}, {Null, 
         SparseArray[
         Automatic, {64, 64}, 0, {
          1, {{0, 21, 42, 63, 84, 105, 126, 147, 168, 189, 212, 235, 258, 281,
             304, 327, 348, 369, 392, 417, 442, 467, 492, 515, 536, 557, 580, 
            605, 632, 659, 684, 707, 728, 749, 772, 797, 824, 851, 876, 899, 
            920, 941, 964, 989, 1014, 1039, 1064, 1087, 1108, 1129, 1152, 
            1175, 1198, 1221, 1244, 1267, 1288, 1309, 1330, 1351, 1372, 1393, 
            1414, 1435, 1456}, CompressedData["
1:eJw1lGeygtoWhA8oWUBFwJxQDOQgOY3hDeFO4E3tDvH21uKXVV/jWr27utbl
n///7x/67+/vX+bvj8IvPZkyLMcL4kLb7C/3lx/l5UCNUFqutoer/Q7ioqLo
LxSl2ULTd0fr4YRJTdETAqWZvFwZm/3p9nTTBnAKOJMVTTe3h/Pl7n1aAhmO
lxV1Zax3x6v98rPuC1leUee6uT9Zj3cQ5f0PcurcWB/Ot6cTxgUs0ViMP88X
y83ucnt5UVaSL4WRatv99f7247wa8H9B/OKlttrsDpbtBElRYypeRLC20rf7
4+X2cMO0wS7gGfBKN3aH0/X+fMEvHBAsw5ph7o9ny377Udb9YsHwuWGuD6fb
wwnivOxHqprr4/n+dMOkqBCjIMIB/r/ebC/Wy40+ZUfDm7QY6e56e3txVvXU
hCHJLr98u9tfrLvjJ3k90FMWg/E+Iuz2h+vNfrlBWjQThsNCCCsI+8PRuj/e
Xhh92ilLUiaCDovH081+On6clR3D/ZLCjvXxdL4/3CDJq57lR2qezvbTC9Oi
HqipIC2WMIIB58v15URp2dKMCIvaZqTW240/VTdhBUkmUW+//GrdXo6XZHVP
TTlxpmAyHkoU63Z/u36U5s1AM7wkq9gJaQ/pdrcdL4g/RdlO2JlCQifKATbt
h+uHSVZ1U05Wf6lhz9l+PL0gzeue4ZX5SE+Ppx9+imagGAE93WxhBgOer3eU
lA3NiugpvryM1InTqp1wkoJOk9SvX/523Cj51N2UF2Yqio3JeCxRHNeL06xs
eooR5TnqjZ2QbpBcz08+edUONCsp6DjMEOUOm36QZkXdTbiZqpu/5LDn6Qfh
J2/6KS+j6iN9BGFWtAPFCvIC5b1cYQYDwigua5oTlSWqiy9fI02qZsJLqmag
6CT595fHSVrW7XQ2X6xMVB2D8VYiJOmnajpGkJf6GmXHQgguhPST1W1PsaKi
Gag7jBDBg8Usb7qB5iR1ZR5Ov9SwI8zyou0n/Gyuo/IjDfKiGyhOUBY6zon1
esMIBhRlRfOiujRwTWDRiUZaT6S5Zu6OqDsJPf7iqm6ms9Ua5wRlx1Q8kuC6
aRl5oeOgoOrYBZwCN23HCsrS2B1RdDgg+ANvXU9xoqrhrtwfv6QwvOj6geal
+QqnxX6ONO8HihfUhbE54LQ4UQwHLflSnC/N7RF3BdaS8gcnkrbenSwbHScp
V18Iv/szDgrqjYF4F4GMrG8OOCcoNpYANoCssjC2R8tGp7GYwLYfOEFdmjtc
Ey/4xYKhsCTOtfUe58QPR9j/BxTjuzc=
            "]}, Pattern}]}, {
        GraphHighlight -> {40, 37, 34, 39, 35, 38, 33, 36}}]]}, 
      TagBox[GraphicsGroupBox[GraphicsComplexBox[CompressedData["
1:eJw9kHsw2wcAx3/JJuo85tFWbdRzpTSh5rGS+f4oxaxo5jyq2ypFu7qjNHM3
1XqtTvWiuu16mFePrul5xmPXRldFy5RaI60Oo0hKZkHqkYQQ6+52+9597vPf
54+vNTuFlUAlCIJ8y78+URNidp6rwSSl5/Q7fqtwMYh834VHJS8XFmYNvadC
Q7ORtSRkExk+9KEs6RbYA05FjOcEWZ2yFBOetokQE5NpdZsC+2uzpS0XNMjk
32LV8DX42FXCpH1HkA3BRZ8wLOSQ3Cu26GmlkI9iYwby7FagPHKMSToQZNlB
jzrldSo59E2UbmSjHM3dFcq542okB7OCxm028LWq1jNKi0I68ctzOYurqL56
63GQcB2EVc2dISFBHo02EY0UbIBxwc3X5r4C+QaBVUbsVbzLXZ46+AuF7Bvq
EYlml5E7UkBP1N3EtX22hsWfz8LrkEbXsYtCmpKR7rqeGqiid1P1muZBm1tk
mj4lSFFQbI9J1AIyAow5N79UYLrPUvBB6BoUvYJLM+0aaByZjtU0FSpKM+nh
OnJ0Lkp0J9kbOF+uk1rpo0CodmC1Q/g6njmKJVHsl3BNdvqrxW8T/fZmIqMe
KWo99rHPzmnwgl7uTGvZQv326wdmv3Xj3iGJbb6XCrtFxtMLjFkw61GUeUKN
+IjBJ+32M1DsteINOLxBzoH+ZKGVAjM2OeZG0atgjdlmD1xZwOnggNmV9BmI
74y36RmqkP+tacu4/iukPU5s2Lq4BELmZ1Mw0AY3s/i/6e7r8GOl2ldsbINT
wfZO+FGMzlFxkw9nG4OjtYuMHWNw2GmV5Bu2jJ5G2sm4bSmUhUFahbkqyPq4
gXEFCzAU1rV/pnyNunLLxCa+HIyM+sN+MStwI6sopf4rYJkXsoriRTAuEd4V
hCrhXGzbG+gphp87hd89rIYsnBdR9hGVFPBGd/H9xXiSHmfcYqYGV5T7w8tB
OaosGXk3HZV4kJf/NFh/CuGf+lc+L17CyTXvmf0/yzE2MbdJKZEjmpfbHnZ7
Bo3eagOtcimE43pdSTtV+L5OYL4YMg/mRPoEl74Kqt12ihd7FAz7h6TeDoKk
NVV1yuLX0FbLWVxyHYaFvrbk3IF13F2h9w5XDMDt1G3nqT1SjAyb/M4LmcSH
lLBT0qNvMHYm+Kx79jDyu/VzJHZjoFl2FF9Sj6D1WF9s+QspKi96dMrapXhG
JUZ2fdGBja4yU27HEgxGPNssH/0BaVqkxOrtT631EeIbWWsg5NKgyCNeaNF/
ePVX3jz+DLg2zUgT4kZiXRtnagHEf7uemmm9RzANWf9lG50ECer5PyU0nJlG
c2eDbK9agJKi49qk4SC+up89es5bCpdRfmlSshBhqRTile/U/x3XhiuhESYr
+Ac6z/Ho
         "], {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
           ArrowBox[CompressedData["
1:eJwVxUUBJIkBAMBtmmZmZmZm0HAS1sDZjZwknyr/77///AX//Pnzn//x/wEQ
gAAYQIAfgAIYgAMEwAMioAMW4AMxkAMN0AMrsAMfCIEwiIA/EAUxEAcJkAQF
UAIN0AYDMAELsAUHcAMPCIYQ6AehEAYREAlREA+JkAyZkAOFUAqVUAeN0Akj
8A9GYQwmYQqmYQGWYAXWYQt24QjO4Aqe4Av5ISiCIRRCIwwiIjKiIgZiIx7i
IzFSIzNy/9Af9qN/zI/9ST/lp/3Mn/MLfskv/zW/5fegGMqgLMqhMqqiFuqi
IZqiBdqiPbqiL8ZiHKZgGmZjHhZhGVZiHTZgG7ZjH07gJE7hNM7gLM7hPC7g
Om7iPh7hOV7jPb7gO/4SJEERNMEQLMERPCEQImEQFhEQMVEQDTEQK3EQH0mR
NMmQLMmRAimSEqmTJmmTIZmQJdmSI7mRJ0VTDMVSHCVSEiVTBmVRDuVTEZVS
FdVRE3XRDM3SHC3RMq3QJm3TLh3QMZ3ROV3TM30zLMMxMqMwKmMxDuMxIZMw
BdMwPbMwD8uxCquyGmuzLhuxKVuyLTuwK7uzL6dyGudwHhdzGVdxHTdyG3dw
Hy/wIi/xMq/wKq/xOm/wPh/yOV/xPT/zO/8IoiAJsqAIqqAJumAIphAIkVAI
tTAIi3AIryiJsqiIqqiJhmiKluiLoRiLpdiIo7iKp/hJsqRIqqRJpmRJthRI
kZRIuVRJrTRJm3TJiqzKmmzJtuzIoRzLqVzItdzJvTzLt6IqmmIrjuIqkZIo
mVIqjTIoi7Irj6qpjuqqnhqrqVqprTqqq3qor+ZqnpZomVZrnTZpm3Zqn27o
pm7ptu7oru7pvh7ouV7qvT7pu34bpmEZtuEYruEZvhEYoVEYlTEYs3EYj2mZ
tumYrumZgRmakZmbpVmbo7mYp/latuVYruVZoRVZsVVYldVYvTVZq3VZn+3Y
ru3ZkR3biV3atd3agz3bm73bt+M6nhM7iZM6ldM4nTM6i3M4j+u5iZu6mVu7
rTu5q3u6r5d6mdd4nTd7m3d5nx/4oR/5sZ/4qZ/5uV/4vT/6u38FYRAFcZAE
aZAFeVAEZTAEU3AEdxiFcZiEaZiFRViGVdiHYziHZ/hEcZREaZRFZVRFdTRE
U7REe3RFb5zEaZzFVVzHTTzGc7zGR3zHX5ImWVInTdImU7IkW3ImT5qlTdqm
XTqna3qlb9ZmXbZkW3ZnX17kZV7ldd7kbd7lfT7ke34WZVEVddEUbdEVfTEU
Y3EUV1mVddmUbdmVQzmWU7mXZ3lXddVUbdVVYzVVc3VUV/XUTd3WXT3Vc73U
Z33Xb9M2XTM3S7M2V/M0X9u1S7u2W3u3b7d2W/d0Xz/0Yz/1c7/0a7/1e38M
4zAN87AM67AN+3AM5ziN87iM67iNx3iO1zRPy7RO23RO13TPy7zO23zN9/ws
67It9/Is77qtz/qu3/Zu337s537t9/7s7/4d53Ed9/Ec7/Gd13mfz/me33Vf
z/Ve3/3c7/097/O9338Bu7C7XQ==
            "], 0.025250458087772487`]}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           DiskBox[1, 0.025250458087772487], DiskBox[2, 0.025250458087772487],
            DiskBox[3, 0.025250458087772487], 
           DiskBox[4, 0.025250458087772487], DiskBox[5, 0.025250458087772487],
            DiskBox[6, 0.025250458087772487], 
           DiskBox[7, 0.025250458087772487], DiskBox[8, 0.025250458087772487],
            DiskBox[9, 0.025250458087772487], 
           DiskBox[10, 0.025250458087772487], 
           DiskBox[11, 0.025250458087772487], 
           DiskBox[12, 0.025250458087772487], 
           DiskBox[13, 0.025250458087772487], 
           DiskBox[14, 0.025250458087772487], 
           DiskBox[15, 0.025250458087772487], 
           DiskBox[16, 0.025250458087772487], 
           DiskBox[17, 0.025250458087772487], 
           DiskBox[18, 0.025250458087772487], 
           DiskBox[19, 0.025250458087772487], 
           DiskBox[20, 0.025250458087772487], 
           DiskBox[21, 0.025250458087772487], 
           DiskBox[22, 0.025250458087772487], 
           DiskBox[23, 0.025250458087772487], 
           DiskBox[24, 0.025250458087772487], 
           DiskBox[25, 0.025250458087772487], 
           DiskBox[26, 0.025250458087772487], 
           DiskBox[27, 0.025250458087772487], 
           DiskBox[28, 0.025250458087772487], 
           DiskBox[29, 0.025250458087772487], 
           DiskBox[30, 0.025250458087772487], 
           DiskBox[31, 0.025250458087772487], 
           DiskBox[32, 0.025250458087772487], 
           {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
            DiskBox[33, 0.025250458087772487]}, 
           {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
            DiskBox[34, 0.025250458087772487]}, 
           {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
            DiskBox[35, 0.025250458087772487]}, 
           {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
            DiskBox[36, 0.025250458087772487]}, 
           {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
            DiskBox[37, 0.025250458087772487]}, 
           {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
            DiskBox[38, 0.025250458087772487]}, 
           {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
            DiskBox[39, 0.025250458087772487]}, 
           {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
            DiskBox[40, 0.025250458087772487]}, 
           DiskBox[41, 0.025250458087772487], 
           DiskBox[42, 0.025250458087772487], 
           DiskBox[43, 0.025250458087772487], 
           DiskBox[44, 0.025250458087772487], 
           DiskBox[45, 0.025250458087772487], 
           DiskBox[46, 0.025250458087772487], 
           DiskBox[47, 0.025250458087772487], 
           DiskBox[48, 0.025250458087772487], 
           DiskBox[49, 0.025250458087772487], 
           DiskBox[50, 0.025250458087772487], 
           DiskBox[51, 0.025250458087772487], 
           DiskBox[52, 0.025250458087772487], 
           DiskBox[53, 0.025250458087772487], 
           DiskBox[54, 0.025250458087772487], 
           DiskBox[55, 0.025250458087772487], 
           DiskBox[56, 0.025250458087772487], 
           DiskBox[57, 0.025250458087772487], 
           DiskBox[58, 0.025250458087772487], 
           DiskBox[59, 0.025250458087772487], 
           DiskBox[60, 0.025250458087772487], 
           DiskBox[61, 0.025250458087772487], 
           DiskBox[62, 0.025250458087772487], 
           DiskBox[63, 0.025250458087772487], 
           DiskBox[64, 0.025250458087772487]}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    FormatType->TraditionalForm,
    FrameTicks->None], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 
        19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 
        53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64}, {Null, 
         SparseArray[
         Automatic, {64, 64}, 0, {
          1, {{0, 21, 42, 63, 84, 105, 126, 147, 168, 189, 212, 235, 258, 281,
             304, 327, 348, 369, 392, 417, 442, 467, 492, 515, 536, 557, 580, 
            605, 632, 659, 684, 707, 728, 749, 772, 797, 824, 851, 876, 899, 
            920, 941, 964, 989, 1014, 1039, 1064, 1087, 1108, 1129, 1152, 
            1175, 1198, 1221, 1244, 1267, 1288, 1309, 1330, 1351, 1372, 1393, 
            1414, 1435, 1456}, CompressedData["
1:eJw1lGeygtoWhA8oWUBFwJxQDOQgOY3hDeFO4E3tDvH21uKXVV/jWr27utbl
n///7x/67+/vX+bvj8IvPZkyLMcL4kLb7C/3lx/l5UCNUFqutoer/Q7ioqLo
LxSl2ULTd0fr4YRJTdETAqWZvFwZm/3p9nTTBnAKOJMVTTe3h/Pl7n1aAhmO
lxV1Zax3x6v98rPuC1leUee6uT9Zj3cQ5f0PcurcWB/Ot6cTxgUs0ViMP88X
y83ucnt5UVaSL4WRatv99f7247wa8H9B/OKlttrsDpbtBElRYypeRLC20rf7
4+X2cMO0wS7gGfBKN3aH0/X+fMEvHBAsw5ph7o9ny377Udb9YsHwuWGuD6fb
wwnivOxHqprr4/n+dMOkqBCjIMIB/r/ebC/Wy40+ZUfDm7QY6e56e3txVvXU
hCHJLr98u9tfrLvjJ3k90FMWg/E+Iuz2h+vNfrlBWjQThsNCCCsI+8PRuj/e
Xhh92ilLUiaCDovH081+On6clR3D/ZLCjvXxdL4/3CDJq57lR2qezvbTC9Oi
HqipIC2WMIIB58v15URp2dKMCIvaZqTW240/VTdhBUkmUW+//GrdXo6XZHVP
TTlxpmAyHkoU63Z/u36U5s1AM7wkq9gJaQ/pdrcdL4g/RdlO2JlCQifKATbt
h+uHSVZ1U05Wf6lhz9l+PL0gzeue4ZX5SE+Ppx9+imagGAE93WxhBgOer3eU
lA3NiugpvryM1InTqp1wkoJOk9SvX/523Cj51N2UF2Yqio3JeCxRHNeL06xs
eooR5TnqjZ2QbpBcz08+edUONCsp6DjMEOUOm36QZkXdTbiZqpu/5LDn6Qfh
J2/6KS+j6iN9BGFWtAPFCvIC5b1cYQYDwigua5oTlSWqiy9fI02qZsJLqmag
6CT595fHSVrW7XQ2X6xMVB2D8VYiJOmnajpGkJf6GmXHQgguhPST1W1PsaKi
Gag7jBDBg8Usb7qB5iR1ZR5Ov9SwI8zyou0n/Gyuo/IjDfKiGyhOUBY6zon1
esMIBhRlRfOiujRwTWDRiUZaT6S5Zu6OqDsJPf7iqm6ms9Ua5wRlx1Q8kuC6
aRl5oeOgoOrYBZwCN23HCsrS2B1RdDgg+ANvXU9xoqrhrtwfv6QwvOj6geal
+QqnxX6ONO8HihfUhbE54LQ4UQwHLflSnC/N7RF3BdaS8gcnkrbenSwbHScp
V18Iv/szDgrqjYF4F4GMrG8OOCcoNpYANoCssjC2R8tGp7GYwLYfOEFdmjtc
Ey/4xYKhsCTOtfUe58QPR9j/BxTjuzc=
            "]}, Pattern}]}, {
        GraphHighlight -> {47, 46, 43, 48, 42, 44, 45, 41}}]]}, 
      TagBox[GraphicsGroupBox[GraphicsComplexBox[CompressedData["
1:eJw9kHsw2wcAx3/JJuo85tFWbdRzpTSh5rGS+f4oxaxo5jyq2ypFu7qjNHM3
1XqtTvWiuu16mFePrul5xmPXRldFy5RaI60Oo0hKZkHqkYQQ6+52+9597vPf
54+vNTuFlUAlCIJ8y78+URNidp6rwSSl5/Q7fqtwMYh834VHJS8XFmYNvadC
Q7ORtSRkExk+9KEs6RbYA05FjOcEWZ2yFBOetokQE5NpdZsC+2uzpS0XNMjk
32LV8DX42FXCpH1HkA3BRZ8wLOSQ3Cu26GmlkI9iYwby7FagPHKMSToQZNlB
jzrldSo59E2UbmSjHM3dFcq542okB7OCxm028LWq1jNKi0I68ctzOYurqL56
63GQcB2EVc2dISFBHo02EY0UbIBxwc3X5r4C+QaBVUbsVbzLXZ46+AuF7Bvq
EYlml5E7UkBP1N3EtX22hsWfz8LrkEbXsYtCmpKR7rqeGqiid1P1muZBm1tk
mj4lSFFQbI9J1AIyAow5N79UYLrPUvBB6BoUvYJLM+0aaByZjtU0FSpKM+nh
OnJ0Lkp0J9kbOF+uk1rpo0CodmC1Q/g6njmKJVHsl3BNdvqrxW8T/fZmIqMe
KWo99rHPzmnwgl7uTGvZQv326wdmv3Xj3iGJbb6XCrtFxtMLjFkw61GUeUKN
+IjBJ+32M1DsteINOLxBzoH+ZKGVAjM2OeZG0atgjdlmD1xZwOnggNmV9BmI
74y36RmqkP+tacu4/iukPU5s2Lq4BELmZ1Mw0AY3s/i/6e7r8GOl2ldsbINT
wfZO+FGMzlFxkw9nG4OjtYuMHWNw2GmV5Bu2jJ5G2sm4bSmUhUFahbkqyPq4
gXEFCzAU1rV/pnyNunLLxCa+HIyM+sN+MStwI6sopf4rYJkXsoriRTAuEd4V
hCrhXGzbG+gphp87hd89rIYsnBdR9hGVFPBGd/H9xXiSHmfcYqYGV5T7w8tB
OaosGXk3HZV4kJf/NFh/CuGf+lc+L17CyTXvmf0/yzE2MbdJKZEjmpfbHnZ7
Bo3eagOtcimE43pdSTtV+L5OYL4YMg/mRPoEl74Kqt12ihd7FAz7h6TeDoKk
NVV1yuLX0FbLWVxyHYaFvrbk3IF13F2h9w5XDMDt1G3nqT1SjAyb/M4LmcSH
lLBT0qNvMHYm+Kx79jDyu/VzJHZjoFl2FF9Sj6D1WF9s+QspKi96dMrapXhG
JUZ2fdGBja4yU27HEgxGPNssH/0BaVqkxOrtT631EeIbWWsg5NKgyCNeaNF/
ePVX3jz+DLg2zUgT4kZiXRtnagHEf7uemmm9RzANWf9lG50ECer5PyU0nJlG
c2eDbK9agJKi49qk4SC+up89es5bCpdRfmlSshBhqRTile/U/x3XhiuhESYr
+Ac6z/Ho
         "], {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
           ArrowBox[CompressedData["
1:eJwVxUUBJIkBAMBtmmZmZmZm0HAS1sDZjZwknyr/77///AX//Pnzn//x/wEQ
gAAYQIAfgAIYgAMEwAMioAMW4AMxkAMN0AMrsAMfCIEwiIA/EAUxEAcJkAQF
UAIN0AYDMAELsAUHcAMPCIYQ6AehEAYREAlREA+JkAyZkAOFUAqVUAeN0Akj
8A9GYQwmYQqmYQGWYAXWYQt24QjO4Aqe4Av5ISiCIRRCIwwiIjKiIgZiIx7i
IzFSIzNy/9Af9qN/zI/9ST/lp/3Mn/MLfskv/zW/5fegGMqgLMqhMqqiFuqi
IZqiBdqiPbqiL8ZiHKZgGmZjHhZhGVZiHTZgG7ZjH07gJE7hNM7gLM7hPC7g
Om7iPh7hOV7jPb7gO/4SJEERNMEQLMERPCEQImEQFhEQMVEQDTEQK3EQH0mR
NMmQLMmRAimSEqmTJmmTIZmQJdmSI7mRJ0VTDMVSHCVSEiVTBmVRDuVTEZVS
FdVRE3XRDM3SHC3RMq3QJm3TLh3QMZ3ROV3TM30zLMMxMqMwKmMxDuMxIZMw
BdMwPbMwD8uxCquyGmuzLhuxKVuyLTuwK7uzL6dyGudwHhdzGVdxHTdyG3dw
Hy/wIi/xMq/wKq/xOm/wPh/yOV/xPT/zO/8IoiAJsqAIqqAJumAIphAIkVAI
tTAIi3AIryiJsqiIqqiJhmiKluiLoRiLpdiIo7iKp/hJsqRIqqRJpmRJthRI
kZRIuVRJrTRJm3TJiqzKmmzJtuzIoRzLqVzItdzJvTzLt6IqmmIrjuIqkZIo
mVIqjTIoi7Irj6qpjuqqnhqrqVqprTqqq3qor+ZqnpZomVZrnTZpm3Zqn27o
pm7ptu7oru7pvh7ouV7qvT7pu34bpmEZtuEYruEZvhEYoVEYlTEYs3EYj2mZ
tumYrumZgRmakZmbpVmbo7mYp/latuVYruVZoRVZsVVYldVYvTVZq3VZn+3Y
ru3ZkR3biV3atd3agz3bm73bt+M6nhM7iZM6ldM4nTM6i3M4j+u5iZu6mVu7
rTu5q3u6r5d6mdd4nTd7m3d5nx/4oR/5sZ/4qZ/5uV/4vT/6u38FYRAFcZAE
aZAFeVAEZTAEU3AEdxiFcZiEaZiFRViGVdiHYziHZ/hEcZREaZRFZVRFdTRE
U7REe3RFb5zEaZzFVVzHTTzGc7zGR3zHX5ImWVInTdImU7IkW3ImT5qlTdqm
XTqna3qlb9ZmXbZkW3ZnX17kZV7ldd7kbd7lfT7ke34WZVEVddEUbdEVfTEU
Y3EUV1mVddmUbdmVQzmWU7mXZ3lXddVUbdVVYzVVc3VUV/XUTd3WXT3Vc73U
Z33Xb9M2XTM3S7M2V/M0X9u1S7u2W3u3b7d2W/d0Xz/0Yz/1c7/0a7/1e38M
4zAN87AM67AN+3AM5ziN87iM67iNx3iO1zRPy7RO23RO13TPy7zO23zN9/ws
67It9/Is77qtz/qu3/Zu337s537t9/7s7/4d53Ed9/Ec7/Gd13mfz/me33Vf
z/Ve3/3c7/097/O9338Bu7C7XQ==
            "], 0.025250458087772487`]}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           DiskBox[1, 0.025250458087772487], DiskBox[2, 0.025250458087772487],
            DiskBox[3, 0.025250458087772487], 
           DiskBox[4, 0.025250458087772487], DiskBox[5, 0.025250458087772487],
            DiskBox[6, 0.025250458087772487], 
           DiskBox[7, 0.025250458087772487], DiskBox[8, 0.025250458087772487],
            DiskBox[9, 0.025250458087772487], 
           DiskBox[10, 0.025250458087772487], 
           DiskBox[11, 0.025250458087772487], 
           DiskBox[12, 0.025250458087772487], 
           DiskBox[13, 0.025250458087772487], 
           DiskBox[14, 0.025250458087772487], 
           DiskBox[15, 0.025250458087772487], 
           DiskBox[16, 0.025250458087772487], 
           DiskBox[17, 0.025250458087772487], 
           DiskBox[18, 0.025250458087772487], 
           DiskBox[19, 0.025250458087772487], 
           DiskBox[20, 0.025250458087772487], 
           DiskBox[21, 0.025250458087772487], 
           DiskBox[22, 0.025250458087772487], 
           DiskBox[23, 0.025250458087772487], 
           DiskBox[24, 0.025250458087772487], 
           DiskBox[25, 0.025250458087772487], 
           DiskBox[26, 0.025250458087772487], 
           DiskBox[27, 0.025250458087772487], 
           DiskBox[28, 0.025250458087772487], 
           DiskBox[29, 0.025250458087772487], 
           DiskBox[30, 0.025250458087772487], 
           DiskBox[31, 0.025250458087772487], 
           DiskBox[32, 0.025250458087772487], 
           DiskBox[33, 0.025250458087772487], 
           DiskBox[34, 0.025250458087772487], 
           DiskBox[35, 0.025250458087772487], 
           DiskBox[36, 0.025250458087772487], 
           DiskBox[37, 0.025250458087772487], 
           DiskBox[38, 0.025250458087772487], 
           DiskBox[39, 0.025250458087772487], 
           DiskBox[40, 0.025250458087772487], 
           {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
            DiskBox[41, 0.025250458087772487]}, 
           {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
            DiskBox[42, 0.025250458087772487]}, 
           {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
            DiskBox[43, 0.025250458087772487]}, 
           {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
            DiskBox[44, 0.025250458087772487]}, 
           {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
            DiskBox[45, 0.025250458087772487]}, 
           {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
            DiskBox[46, 0.025250458087772487]}, 
           {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
            DiskBox[47, 0.025250458087772487]}, 
           {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
            DiskBox[48, 0.025250458087772487]}, 
           DiskBox[49, 0.025250458087772487], 
           DiskBox[50, 0.025250458087772487], 
           DiskBox[51, 0.025250458087772487], 
           DiskBox[52, 0.025250458087772487], 
           DiskBox[53, 0.025250458087772487], 
           DiskBox[54, 0.025250458087772487], 
           DiskBox[55, 0.025250458087772487], 
           DiskBox[56, 0.025250458087772487], 
           DiskBox[57, 0.025250458087772487], 
           DiskBox[58, 0.025250458087772487], 
           DiskBox[59, 0.025250458087772487], 
           DiskBox[60, 0.025250458087772487], 
           DiskBox[61, 0.025250458087772487], 
           DiskBox[62, 0.025250458087772487], 
           DiskBox[63, 0.025250458087772487], 
           DiskBox[64, 0.025250458087772487]}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    FormatType->TraditionalForm,
    FrameTicks->None], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 
        19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 
        53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64}, {Null, 
         SparseArray[
         Automatic, {64, 64}, 0, {
          1, {{0, 21, 42, 63, 84, 105, 126, 147, 168, 189, 212, 235, 258, 281,
             304, 327, 348, 369, 392, 417, 442, 467, 492, 515, 536, 557, 580, 
            605, 632, 659, 684, 707, 728, 749, 772, 797, 824, 851, 876, 899, 
            920, 941, 964, 989, 1014, 1039, 1064, 1087, 1108, 1129, 1152, 
            1175, 1198, 1221, 1244, 1267, 1288, 1309, 1330, 1351, 1372, 1393, 
            1414, 1435, 1456}, CompressedData["
1:eJw1lGeygtoWhA8oWUBFwJxQDOQgOY3hDeFO4E3tDvH21uKXVV/jWr27utbl
n///7x/67+/vX+bvj8IvPZkyLMcL4kLb7C/3lx/l5UCNUFqutoer/Q7ioqLo
LxSl2ULTd0fr4YRJTdETAqWZvFwZm/3p9nTTBnAKOJMVTTe3h/Pl7n1aAhmO
lxV1Zax3x6v98rPuC1leUee6uT9Zj3cQ5f0PcurcWB/Ot6cTxgUs0ViMP88X
y83ucnt5UVaSL4WRatv99f7247wa8H9B/OKlttrsDpbtBElRYypeRLC20rf7
4+X2cMO0wS7gGfBKN3aH0/X+fMEvHBAsw5ph7o9ny377Udb9YsHwuWGuD6fb
wwnivOxHqprr4/n+dMOkqBCjIMIB/r/ebC/Wy40+ZUfDm7QY6e56e3txVvXU
hCHJLr98u9tfrLvjJ3k90FMWg/E+Iuz2h+vNfrlBWjQThsNCCCsI+8PRuj/e
Xhh92ilLUiaCDovH081+On6clR3D/ZLCjvXxdL4/3CDJq57lR2qezvbTC9Oi
HqipIC2WMIIB58v15URp2dKMCIvaZqTW240/VTdhBUkmUW+//GrdXo6XZHVP
TTlxpmAyHkoU63Z/u36U5s1AM7wkq9gJaQ/pdrcdL4g/RdlO2JlCQifKATbt
h+uHSVZ1U05Wf6lhz9l+PL0gzeue4ZX5SE+Ppx9+imagGAE93WxhBgOer3eU
lA3NiugpvryM1InTqp1wkoJOk9SvX/523Cj51N2UF2Yqio3JeCxRHNeL06xs
eooR5TnqjZ2QbpBcz08+edUONCsp6DjMEOUOm36QZkXdTbiZqpu/5LDn6Qfh
J2/6KS+j6iN9BGFWtAPFCvIC5b1cYQYDwigua5oTlSWqiy9fI02qZsJLqmag
6CT595fHSVrW7XQ2X6xMVB2D8VYiJOmnajpGkJf6GmXHQgguhPST1W1PsaKi
Gag7jBDBg8Usb7qB5iR1ZR5Ov9SwI8zyou0n/Gyuo/IjDfKiGyhOUBY6zon1
esMIBhRlRfOiujRwTWDRiUZaT6S5Zu6OqDsJPf7iqm6ms9Ua5wRlx1Q8kuC6
aRl5oeOgoOrYBZwCN23HCsrS2B1RdDgg+ANvXU9xoqrhrtwfv6QwvOj6geal
+QqnxX6ONO8HihfUhbE54LQ4UQwHLflSnC/N7RF3BdaS8gcnkrbenSwbHScp
V18Iv/szDgrqjYF4F4GMrG8OOCcoNpYANoCssjC2R8tGp7GYwLYfOEFdmjtc
Ey/4xYKhsCTOtfUe58QPR9j/BxTjuzc=
            "]}, Pattern}]}, {
        GraphHighlight -> {50, 52, 56, 54, 53, 55, 51, 49}}]]}, 
      TagBox[GraphicsGroupBox[GraphicsComplexBox[CompressedData["
1:eJw9kHsw2wcAx3/JJuo85tFWbdRzpTSh5rGS+f4oxaxo5jyq2ypFu7qjNHM3
1XqtTvWiuu16mFePrul5xmPXRldFy5RaI60Oo0hKZkHqkYQQ6+52+9597vPf
54+vNTuFlUAlCIJ8y78+URNidp6rwSSl5/Q7fqtwMYh834VHJS8XFmYNvadC
Q7ORtSRkExk+9KEs6RbYA05FjOcEWZ2yFBOetokQE5NpdZsC+2uzpS0XNMjk
32LV8DX42FXCpH1HkA3BRZ8wLOSQ3Cu26GmlkI9iYwby7FagPHKMSToQZNlB
jzrldSo59E2UbmSjHM3dFcq542okB7OCxm028LWq1jNKi0I68ctzOYurqL56
63GQcB2EVc2dISFBHo02EY0UbIBxwc3X5r4C+QaBVUbsVbzLXZ46+AuF7Bvq
EYlml5E7UkBP1N3EtX22hsWfz8LrkEbXsYtCmpKR7rqeGqiid1P1muZBm1tk
mj4lSFFQbI9J1AIyAow5N79UYLrPUvBB6BoUvYJLM+0aaByZjtU0FSpKM+nh
OnJ0Lkp0J9kbOF+uk1rpo0CodmC1Q/g6njmKJVHsl3BNdvqrxW8T/fZmIqMe
KWo99rHPzmnwgl7uTGvZQv326wdmv3Xj3iGJbb6XCrtFxtMLjFkw61GUeUKN
+IjBJ+32M1DsteINOLxBzoH+ZKGVAjM2OeZG0atgjdlmD1xZwOnggNmV9BmI
74y36RmqkP+tacu4/iukPU5s2Lq4BELmZ1Mw0AY3s/i/6e7r8GOl2ldsbINT
wfZO+FGMzlFxkw9nG4OjtYuMHWNw2GmV5Bu2jJ5G2sm4bSmUhUFahbkqyPq4
gXEFCzAU1rV/pnyNunLLxCa+HIyM+sN+MStwI6sopf4rYJkXsoriRTAuEd4V
hCrhXGzbG+gphp87hd89rIYsnBdR9hGVFPBGd/H9xXiSHmfcYqYGV5T7w8tB
OaosGXk3HZV4kJf/NFh/CuGf+lc+L17CyTXvmf0/yzE2MbdJKZEjmpfbHnZ7
Bo3eagOtcimE43pdSTtV+L5OYL4YMg/mRPoEl74Kqt12ihd7FAz7h6TeDoKk
NVV1yuLX0FbLWVxyHYaFvrbk3IF13F2h9w5XDMDt1G3nqT1SjAyb/M4LmcSH
lLBT0qNvMHYm+Kx79jDyu/VzJHZjoFl2FF9Sj6D1WF9s+QspKi96dMrapXhG
JUZ2fdGBja4yU27HEgxGPNssH/0BaVqkxOrtT631EeIbWWsg5NKgyCNeaNF/
ePVX3jz+DLg2zUgT4kZiXRtnagHEf7uemmm9RzANWf9lG50ECer5PyU0nJlG
c2eDbK9agJKi49qk4SC+up89es5bCpdRfmlSshBhqRTile/U/x3XhiuhESYr
+Ac6z/Ho
         "], {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
           ArrowBox[CompressedData["
1:eJwVxUUBJIkBAMBtmmZmZmZm0HAS1sDZjZwknyr/77///AX//Pnzn//x/wEQ
gAAYQIAfgAIYgAMEwAMioAMW4AMxkAMN0AMrsAMfCIEwiIA/EAUxEAcJkAQF
UAIN0AYDMAELsAUHcAMPCIYQ6AehEAYREAlREA+JkAyZkAOFUAqVUAeN0Akj
8A9GYQwmYQqmYQGWYAXWYQt24QjO4Aqe4Av5ISiCIRRCIwwiIjKiIgZiIx7i
IzFSIzNy/9Af9qN/zI/9ST/lp/3Mn/MLfskv/zW/5fegGMqgLMqhMqqiFuqi
IZqiBdqiPbqiL8ZiHKZgGmZjHhZhGVZiHTZgG7ZjH07gJE7hNM7gLM7hPC7g
Om7iPh7hOV7jPb7gO/4SJEERNMEQLMERPCEQImEQFhEQMVEQDTEQK3EQH0mR
NMmQLMmRAimSEqmTJmmTIZmQJdmSI7mRJ0VTDMVSHCVSEiVTBmVRDuVTEZVS
FdVRE3XRDM3SHC3RMq3QJm3TLh3QMZ3ROV3TM30zLMMxMqMwKmMxDuMxIZMw
BdMwPbMwD8uxCquyGmuzLhuxKVuyLTuwK7uzL6dyGudwHhdzGVdxHTdyG3dw
Hy/wIi/xMq/wKq/xOm/wPh/yOV/xPT/zO/8IoiAJsqAIqqAJumAIphAIkVAI
tTAIi3AIryiJsqiIqqiJhmiKluiLoRiLpdiIo7iKp/hJsqRIqqRJpmRJthRI
kZRIuVRJrTRJm3TJiqzKmmzJtuzIoRzLqVzItdzJvTzLt6IqmmIrjuIqkZIo
mVIqjTIoi7Irj6qpjuqqnhqrqVqprTqqq3qor+ZqnpZomVZrnTZpm3Zqn27o
pm7ptu7oru7pvh7ouV7qvT7pu34bpmEZtuEYruEZvhEYoVEYlTEYs3EYj2mZ
tumYrumZgRmakZmbpVmbo7mYp/latuVYruVZoRVZsVVYldVYvTVZq3VZn+3Y
ru3ZkR3biV3atd3agz3bm73bt+M6nhM7iZM6ldM4nTM6i3M4j+u5iZu6mVu7
rTu5q3u6r5d6mdd4nTd7m3d5nx/4oR/5sZ/4qZ/5uV/4vT/6u38FYRAFcZAE
aZAFeVAEZTAEU3AEdxiFcZiEaZiFRViGVdiHYziHZ/hEcZREaZRFZVRFdTRE
U7REe3RFb5zEaZzFVVzHTTzGc7zGR3zHX5ImWVInTdImU7IkW3ImT5qlTdqm
XTqna3qlb9ZmXbZkW3ZnX17kZV7ldd7kbd7lfT7ke34WZVEVddEUbdEVfTEU
Y3EUV1mVddmUbdmVQzmWU7mXZ3lXddVUbdVVYzVVc3VUV/XUTd3WXT3Vc73U
Z33Xb9M2XTM3S7M2V/M0X9u1S7u2W3u3b7d2W/d0Xz/0Yz/1c7/0a7/1e38M
4zAN87AM67AN+3AM5ziN87iM67iNx3iO1zRPy7RO23RO13TPy7zO23zN9/ws
67It9/Is77qtz/qu3/Zu337s537t9/7s7/4d53Ed9/Ec7/Gd13mfz/me33Vf
z/Ve3/3c7/097/O9338Bu7C7XQ==
            "], 0.025250458087772487`]}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           DiskBox[1, 0.025250458087772487], DiskBox[2, 0.025250458087772487],
            DiskBox[3, 0.025250458087772487], 
           DiskBox[4, 0.025250458087772487], DiskBox[5, 0.025250458087772487],
            DiskBox[6, 0.025250458087772487], 
           DiskBox[7, 0.025250458087772487], DiskBox[8, 0.025250458087772487],
            DiskBox[9, 0.025250458087772487], 
           DiskBox[10, 0.025250458087772487], 
           DiskBox[11, 0.025250458087772487], 
           DiskBox[12, 0.025250458087772487], 
           DiskBox[13, 0.025250458087772487], 
           DiskBox[14, 0.025250458087772487], 
           DiskBox[15, 0.025250458087772487], 
           DiskBox[16, 0.025250458087772487], 
           DiskBox[17, 0.025250458087772487], 
           DiskBox[18, 0.025250458087772487], 
           DiskBox[19, 0.025250458087772487], 
           DiskBox[20, 0.025250458087772487], 
           DiskBox[21, 0.025250458087772487], 
           DiskBox[22, 0.025250458087772487], 
           DiskBox[23, 0.025250458087772487], 
           DiskBox[24, 0.025250458087772487], 
           DiskBox[25, 0.025250458087772487], 
           DiskBox[26, 0.025250458087772487], 
           DiskBox[27, 0.025250458087772487], 
           DiskBox[28, 0.025250458087772487], 
           DiskBox[29, 0.025250458087772487], 
           DiskBox[30, 0.025250458087772487], 
           DiskBox[31, 0.025250458087772487], 
           DiskBox[32, 0.025250458087772487], 
           DiskBox[33, 0.025250458087772487], 
           DiskBox[34, 0.025250458087772487], 
           DiskBox[35, 0.025250458087772487], 
           DiskBox[36, 0.025250458087772487], 
           DiskBox[37, 0.025250458087772487], 
           DiskBox[38, 0.025250458087772487], 
           DiskBox[39, 0.025250458087772487], 
           DiskBox[40, 0.025250458087772487], 
           DiskBox[41, 0.025250458087772487], 
           DiskBox[42, 0.025250458087772487], 
           DiskBox[43, 0.025250458087772487], 
           DiskBox[44, 0.025250458087772487], 
           DiskBox[45, 0.025250458087772487], 
           DiskBox[46, 0.025250458087772487], 
           DiskBox[47, 0.025250458087772487], 
           DiskBox[48, 0.025250458087772487], 
           {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
            DiskBox[49, 0.025250458087772487]}, 
           {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
            DiskBox[50, 0.025250458087772487]}, 
           {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
            DiskBox[51, 0.025250458087772487]}, 
           {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
            DiskBox[52, 0.025250458087772487]}, 
           {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
            DiskBox[53, 0.025250458087772487]}, 
           {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
            DiskBox[54, 0.025250458087772487]}, 
           {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
            DiskBox[55, 0.025250458087772487]}, 
           {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
            DiskBox[56, 0.025250458087772487]}, 
           DiskBox[57, 0.025250458087772487], 
           DiskBox[58, 0.025250458087772487], 
           DiskBox[59, 0.025250458087772487], 
           DiskBox[60, 0.025250458087772487], 
           DiskBox[61, 0.025250458087772487], 
           DiskBox[62, 0.025250458087772487], 
           DiskBox[63, 0.025250458087772487], 
           DiskBox[64, 0.025250458087772487]}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    FormatType->TraditionalForm,
    FrameTicks->None], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 
        19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 
        53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64}, {Null, 
         SparseArray[
         Automatic, {64, 64}, 0, {
          1, {{0, 21, 42, 63, 84, 105, 126, 147, 168, 189, 212, 235, 258, 281,
             304, 327, 348, 369, 392, 417, 442, 467, 492, 515, 536, 557, 580, 
            605, 632, 659, 684, 707, 728, 749, 772, 797, 824, 851, 876, 899, 
            920, 941, 964, 989, 1014, 1039, 1064, 1087, 1108, 1129, 1152, 
            1175, 1198, 1221, 1244, 1267, 1288, 1309, 1330, 1351, 1372, 1393, 
            1414, 1435, 1456}, CompressedData["
1:eJw1lGeygtoWhA8oWUBFwJxQDOQgOY3hDeFO4E3tDvH21uKXVV/jWr27utbl
n///7x/67+/vX+bvj8IvPZkyLMcL4kLb7C/3lx/l5UCNUFqutoer/Q7ioqLo
LxSl2ULTd0fr4YRJTdETAqWZvFwZm/3p9nTTBnAKOJMVTTe3h/Pl7n1aAhmO
lxV1Zax3x6v98rPuC1leUee6uT9Zj3cQ5f0PcurcWB/Ot6cTxgUs0ViMP88X
y83ucnt5UVaSL4WRatv99f7247wa8H9B/OKlttrsDpbtBElRYypeRLC20rf7
4+X2cMO0wS7gGfBKN3aH0/X+fMEvHBAsw5ph7o9ny377Udb9YsHwuWGuD6fb
wwnivOxHqprr4/n+dMOkqBCjIMIB/r/ebC/Wy40+ZUfDm7QY6e56e3txVvXU
hCHJLr98u9tfrLvjJ3k90FMWg/E+Iuz2h+vNfrlBWjQThsNCCCsI+8PRuj/e
Xhh92ilLUiaCDovH081+On6clR3D/ZLCjvXxdL4/3CDJq57lR2qezvbTC9Oi
HqipIC2WMIIB58v15URp2dKMCIvaZqTW240/VTdhBUkmUW+//GrdXo6XZHVP
TTlxpmAyHkoU63Z/u36U5s1AM7wkq9gJaQ/pdrcdL4g/RdlO2JlCQifKATbt
h+uHSVZ1U05Wf6lhz9l+PL0gzeue4ZX5SE+Ppx9+imagGAE93WxhBgOer3eU
lA3NiugpvryM1InTqp1wkoJOk9SvX/523Cj51N2UF2Yqio3JeCxRHNeL06xs
eooR5TnqjZ2QbpBcz08+edUONCsp6DjMEOUOm36QZkXdTbiZqpu/5LDn6Qfh
J2/6KS+j6iN9BGFWtAPFCvIC5b1cYQYDwigua5oTlSWqiy9fI02qZsJLqmag
6CT595fHSVrW7XQ2X6xMVB2D8VYiJOmnajpGkJf6GmXHQgguhPST1W1PsaKi
Gag7jBDBg8Usb7qB5iR1ZR5Ov9SwI8zyou0n/Gyuo/IjDfKiGyhOUBY6zon1
esMIBhRlRfOiujRwTWDRiUZaT6S5Zu6OqDsJPf7iqm6ms9Ua5wRlx1Q8kuC6
aRl5oeOgoOrYBZwCN23HCsrS2B1RdDgg+ANvXU9xoqrhrtwfv6QwvOj6geal
+QqnxX6ONO8HihfUhbE54LQ4UQwHLflSnC/N7RF3BdaS8gcnkrbenSwbHScp
V18Iv/szDgrqjYF4F4GMrG8OOCcoNpYANoCssjC2R8tGp7GYwLYfOEFdmjtc
Ey/4xYKhsCTOtfUe58QPR9j/BxTjuzc=
            "]}, Pattern}]}, {
        GraphHighlight -> {60, 63, 57, 64, 62, 59, 58, 61}}]]}, 
      TagBox[GraphicsGroupBox[GraphicsComplexBox[CompressedData["
1:eJw9kHsw2wcAx3/JJuo85tFWbdRzpTSh5rGS+f4oxaxo5jyq2ypFu7qjNHM3
1XqtTvWiuu16mFePrul5xmPXRldFy5RaI60Oo0hKZkHqkYQQ6+52+9597vPf
54+vNTuFlUAlCIJ8y78+URNidp6rwSSl5/Q7fqtwMYh834VHJS8XFmYNvadC
Q7ORtSRkExk+9KEs6RbYA05FjOcEWZ2yFBOetokQE5NpdZsC+2uzpS0XNMjk
32LV8DX42FXCpH1HkA3BRZ8wLOSQ3Cu26GmlkI9iYwby7FagPHKMSToQZNlB
jzrldSo59E2UbmSjHM3dFcq542okB7OCxm028LWq1jNKi0I68ctzOYurqL56
63GQcB2EVc2dISFBHo02EY0UbIBxwc3X5r4C+QaBVUbsVbzLXZ46+AuF7Bvq
EYlml5E7UkBP1N3EtX22hsWfz8LrkEbXsYtCmpKR7rqeGqiid1P1muZBm1tk
mj4lSFFQbI9J1AIyAow5N79UYLrPUvBB6BoUvYJLM+0aaByZjtU0FSpKM+nh
OnJ0Lkp0J9kbOF+uk1rpo0CodmC1Q/g6njmKJVHsl3BNdvqrxW8T/fZmIqMe
KWo99rHPzmnwgl7uTGvZQv326wdmv3Xj3iGJbb6XCrtFxtMLjFkw61GUeUKN
+IjBJ+32M1DsteINOLxBzoH+ZKGVAjM2OeZG0atgjdlmD1xZwOnggNmV9BmI
74y36RmqkP+tacu4/iukPU5s2Lq4BELmZ1Mw0AY3s/i/6e7r8GOl2ldsbINT
wfZO+FGMzlFxkw9nG4OjtYuMHWNw2GmV5Bu2jJ5G2sm4bSmUhUFahbkqyPq4
gXEFCzAU1rV/pnyNunLLxCa+HIyM+sN+MStwI6sopf4rYJkXsoriRTAuEd4V
hCrhXGzbG+gphp87hd89rIYsnBdR9hGVFPBGd/H9xXiSHmfcYqYGV5T7w8tB
OaosGXk3HZV4kJf/NFh/CuGf+lc+L17CyTXvmf0/yzE2MbdJKZEjmpfbHnZ7
Bo3eagOtcimE43pdSTtV+L5OYL4YMg/mRPoEl74Kqt12ihd7FAz7h6TeDoKk
NVV1yuLX0FbLWVxyHYaFvrbk3IF13F2h9w5XDMDt1G3nqT1SjAyb/M4LmcSH
lLBT0qNvMHYm+Kx79jDyu/VzJHZjoFl2FF9Sj6D1WF9s+QspKi96dMrapXhG
JUZ2fdGBja4yU27HEgxGPNssH/0BaVqkxOrtT631EeIbWWsg5NKgyCNeaNF/
ePVX3jz+DLg2zUgT4kZiXRtnagHEf7uemmm9RzANWf9lG50ECer5PyU0nJlG
c2eDbK9agJKi49qk4SC+up89es5bCpdRfmlSshBhqRTile/U/x3XhiuhESYr
+Ac6z/Ho
         "], {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
           ArrowBox[CompressedData["
1:eJwVxUUBJIkBAMBtmmZmZmZm0HAS1sDZjZwknyr/77///AX//Pnzn//x/wEQ
gAAYQIAfgAIYgAMEwAMioAMW4AMxkAMN0AMrsAMfCIEwiIA/EAUxEAcJkAQF
UAIN0AYDMAELsAUHcAMPCIYQ6AehEAYREAlREA+JkAyZkAOFUAqVUAeN0Akj
8A9GYQwmYQqmYQGWYAXWYQt24QjO4Aqe4Av5ISiCIRRCIwwiIjKiIgZiIx7i
IzFSIzNy/9Af9qN/zI/9ST/lp/3Mn/MLfskv/zW/5fegGMqgLMqhMqqiFuqi
IZqiBdqiPbqiL8ZiHKZgGmZjHhZhGVZiHTZgG7ZjH07gJE7hNM7gLM7hPC7g
Om7iPh7hOV7jPb7gO/4SJEERNMEQLMERPCEQImEQFhEQMVEQDTEQK3EQH0mR
NMmQLMmRAimSEqmTJmmTIZmQJdmSI7mRJ0VTDMVSHCVSEiVTBmVRDuVTEZVS
FdVRE3XRDM3SHC3RMq3QJm3TLh3QMZ3ROV3TM30zLMMxMqMwKmMxDuMxIZMw
BdMwPbMwD8uxCquyGmuzLhuxKVuyLTuwK7uzL6dyGudwHhdzGVdxHTdyG3dw
Hy/wIi/xMq/wKq/xOm/wPh/yOV/xPT/zO/8IoiAJsqAIqqAJumAIphAIkVAI
tTAIi3AIryiJsqiIqqiJhmiKluiLoRiLpdiIo7iKp/hJsqRIqqRJpmRJthRI
kZRIuVRJrTRJm3TJiqzKmmzJtuzIoRzLqVzItdzJvTzLt6IqmmIrjuIqkZIo
mVIqjTIoi7Irj6qpjuqqnhqrqVqprTqqq3qor+ZqnpZomVZrnTZpm3Zqn27o
pm7ptu7oru7pvh7ouV7qvT7pu34bpmEZtuEYruEZvhEYoVEYlTEYs3EYj2mZ
tumYrumZgRmakZmbpVmbo7mYp/latuVYruVZoRVZsVVYldVYvTVZq3VZn+3Y
ru3ZkR3biV3atd3agz3bm73bt+M6nhM7iZM6ldM4nTM6i3M4j+u5iZu6mVu7
rTu5q3u6r5d6mdd4nTd7m3d5nx/4oR/5sZ/4qZ/5uV/4vT/6u38FYRAFcZAE
aZAFeVAEZTAEU3AEdxiFcZiEaZiFRViGVdiHYziHZ/hEcZREaZRFZVRFdTRE
U7REe3RFb5zEaZzFVVzHTTzGc7zGR3zHX5ImWVInTdImU7IkW3ImT5qlTdqm
XTqna3qlb9ZmXbZkW3ZnX17kZV7ldd7kbd7lfT7ke34WZVEVddEUbdEVfTEU
Y3EUV1mVddmUbdmVQzmWU7mXZ3lXddVUbdVVYzVVc3VUV/XUTd3WXT3Vc73U
Z33Xb9M2XTM3S7M2V/M0X9u1S7u2W3u3b7d2W/d0Xz/0Yz/1c7/0a7/1e38M
4zAN87AM67AN+3AM5ziN87iM67iNx3iO1zRPy7RO23RO13TPy7zO23zN9/ws
67It9/Is77qtz/qu3/Zu337s537t9/7s7/4d53Ed9/Ec7/Gd13mfz/me33Vf
z/Ve3/3c7/097/O9338Bu7C7XQ==
            "], 0.025250458087772487`]}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           DiskBox[1, 0.025250458087772487], DiskBox[2, 0.025250458087772487],
            DiskBox[3, 0.025250458087772487], 
           DiskBox[4, 0.025250458087772487], DiskBox[5, 0.025250458087772487],
            DiskBox[6, 0.025250458087772487], 
           DiskBox[7, 0.025250458087772487], DiskBox[8, 0.025250458087772487],
            DiskBox[9, 0.025250458087772487], 
           DiskBox[10, 0.025250458087772487], 
           DiskBox[11, 0.025250458087772487], 
           DiskBox[12, 0.025250458087772487], 
           DiskBox[13, 0.025250458087772487], 
           DiskBox[14, 0.025250458087772487], 
           DiskBox[15, 0.025250458087772487], 
           DiskBox[16, 0.025250458087772487], 
           DiskBox[17, 0.025250458087772487], 
           DiskBox[18, 0.025250458087772487], 
           DiskBox[19, 0.025250458087772487], 
           DiskBox[20, 0.025250458087772487], 
           DiskBox[21, 0.025250458087772487], 
           DiskBox[22, 0.025250458087772487], 
           DiskBox[23, 0.025250458087772487], 
           DiskBox[24, 0.025250458087772487], 
           DiskBox[25, 0.025250458087772487], 
           DiskBox[26, 0.025250458087772487], 
           DiskBox[27, 0.025250458087772487], 
           DiskBox[28, 0.025250458087772487], 
           DiskBox[29, 0.025250458087772487], 
           DiskBox[30, 0.025250458087772487], 
           DiskBox[31, 0.025250458087772487], 
           DiskBox[32, 0.025250458087772487], 
           DiskBox[33, 0.025250458087772487], 
           DiskBox[34, 0.025250458087772487], 
           DiskBox[35, 0.025250458087772487], 
           DiskBox[36, 0.025250458087772487], 
           DiskBox[37, 0.025250458087772487], 
           DiskBox[38, 0.025250458087772487], 
           DiskBox[39, 0.025250458087772487], 
           DiskBox[40, 0.025250458087772487], 
           DiskBox[41, 0.025250458087772487], 
           DiskBox[42, 0.025250458087772487], 
           DiskBox[43, 0.025250458087772487], 
           DiskBox[44, 0.025250458087772487], 
           DiskBox[45, 0.025250458087772487], 
           DiskBox[46, 0.025250458087772487], 
           DiskBox[47, 0.025250458087772487], 
           DiskBox[48, 0.025250458087772487], 
           DiskBox[49, 0.025250458087772487], 
           DiskBox[50, 0.025250458087772487], 
           DiskBox[51, 0.025250458087772487], 
           DiskBox[52, 0.025250458087772487], 
           DiskBox[53, 0.025250458087772487], 
           DiskBox[54, 0.025250458087772487], 
           DiskBox[55, 0.025250458087772487], 
           DiskBox[56, 0.025250458087772487], 
           {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
            DiskBox[57, 0.025250458087772487]}, 
           {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
            DiskBox[58, 0.025250458087772487]}, 
           {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
            DiskBox[59, 0.025250458087772487]}, 
           {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
            DiskBox[60, 0.025250458087772487]}, 
           {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
            DiskBox[61, 0.025250458087772487]}, 
           {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
            DiskBox[62, 0.025250458087772487]}, 
           {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
            DiskBox[63, 0.025250458087772487]}, 
           {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
            DiskBox[64, 0.025250458087772487]}}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    FormatType->TraditionalForm,
    FrameTicks->None]}], "}"}]], "Output",
 CellChangeTimes->{3.877294137203499*^9},
 CellLabel->
  "Out[165]=",ExpressionUUID->"adfb77b8-0ae7-4747-b402-90ff3bf9fa85"]
}, Open  ]],

Cell["\<\
The book says 310 maximal cliques which is different from the answer from \
GraphData, so I\[CloseCurlyQuote]m confused.\
\>", "Text",
 CellChangeTimes->{{3.8772948037861357`*^9, 
  3.877294823676857*^9}},ExpressionUUID->"adb3d760-cca3-48fd-8ad2-\
2e8229999d72"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Exercise 130", "Section",
 CellChangeTimes->{{3.877294314324028*^9, 
  3.8772943191308928`*^9}},ExpressionUUID->"410ca4b5-d5c8-45a6-bf48-\
407abc865d99"],

Cell["How many maximal cliques are in a complete k-partite graph?", "Text",
 CellChangeTimes->{{3.8772943200371494`*^9, 
  3.877294333778349*^9}},ExpressionUUID->"0ab7ef0c-6d7b-4fa2-8869-\
cbbf03a56165"],

Cell["I will try FindSequenceFunction.", "Text",
 CellChangeTimes->{{3.877294336372097*^9, 
  3.877294342429043*^9}},ExpressionUUID->"2a67a265-5a3a-4df1-851a-\
986de5cee6fc"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Names", "[", 
  RowBox[{"\"\<*clique*\>\"", ",", 
   RowBox[{"IgnoreCase", "->", "True"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8772943479366236`*^9, 3.877294359487074*^9}, {
  3.877294425220257*^9, 3.877294427416042*^9}},
 CellLabel->
  "In[167]:=",ExpressionUUID->"0d2eb06d-7ac9-4804-bf31-c2f184494298"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"FindClique\"\>", ",", "\<\"FindKClique\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.877294359955736*^9, 3.877294428025416*^9},
 CellLabel->
  "Out[167]=",ExpressionUUID->"065c5c03-42ac-4229-ba26-b48a531f90bf"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Information", "/@", 
  RowBox[{"Names", "[", 
   RowBox[{"\"\<*clique*\>\"", ",", 
    RowBox[{"IgnoreCase", "->", "True"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8772944317190604`*^9, 3.8772944334474363`*^9}},
 CellLabel->
  "In[168]:=",ExpressionUUID->"2d7a2e06-d8da-44b3-a360-7b33d1efba61"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/FindClique",
                ButtonNote->"paclet:ref/FindClique"],
               "\"paclet:ref/FindClique\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"FindClique\\\", \\\"[\\\", \
StyleBox[\\\"g\\\", \\\"TI\\\"], \\\"]\\\"}]\\) finds a largest clique in the \
graph \\!\\(\\*StyleBox[\\\"g\\\", \
\\\"TI\\\"]\\).\\n\\!\\(\\*RowBox[{\\\"FindClique\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"g\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"n\\\", \
\\\"TI\\\"]}], \\\"]\\\"}]\\) finds a clique containing at most \
\\!\\(\\*StyleBox[\\\"n\\\", \\\"TI\\\"]\\) \
vertices.\\n\\!\\(\\*RowBox[{\\\"FindClique\\\", \\\"[\\\", RowBox[{StyleBox[\
\\\"g\\\", \\\"TI\\\"], \\\",\\\", StyleBox[RowBox[{\\\"{\\\", \\\"n\\\", \
\\\"}\\\"}], \\\"TI\\\"]}], \\\"]\\\"}]\\) finds a clique containing exactly \
\\!\\(\\*StyleBox[\\\"n\\\", \\\"TI\\\"]\\) \
vertices.\\n\\!\\(\\*RowBox[{\\\"FindClique\\\", \\\"[\\\", RowBox[{StyleBox[\
\\\"g\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"n\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"n\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) finds a \
clique containing between \\!\\(\\*SubscriptBox[StyleBox[\\\"n\\\", \
\\\"TI\\\"], StyleBox[\\\"min\\\", \\\"TI\\\"]]\\) and \
\\!\\(\\*SubscriptBox[StyleBox[\\\"n\\\", \\\"TI\\\"], StyleBox[\\\"max\\\", \
\\\"TI\\\"]]\\) vertices.\\n\\!\\(\\*RowBox[{\\\"FindClique\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"g\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"nspec\\\", \
\\\"TI\\\"], \\\",\\\", StyleBox[\\\"s\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) \
finds at most \\!\\(\\*StyleBox[\\\"s\\\", \\\"TI\\\"]\\) \
cliques.\\n\\!\\(\\*RowBox[{\\\"FindClique\\\", \\\"[\\\", RowBox[{RowBox[{\\\
\"{\\\", RowBox[{StyleBox[\\\"g\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"v\\\
\", \\\"TI\\\"]}], \\\"}\\\"}], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \
\\\"TR\\\"]}], \\\"]\\\"}]\\) finds cliques that include the vertex \
\\!\\(\\*StyleBox[\\\"v\\\", \\\"TI\\\"]\\) \
only.\\n\\!\\(\\*RowBox[{\\\"FindClique\\\", \\\"[\\\", RowBox[{RowBox[{\\\"{\
\\\", RowBox[{RowBox[{StyleBox[\\\"v\\\", \\\"TI\\\"], \\\"\[Rule]\\\", \
StyleBox[\\\"w\\\", \\\"TI\\\"]}], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \
\\\"TR\\\"]}], \\\"}\\\"}], \\\",\\\", \\\"\[Ellipsis]\\\"}], \\\"]\\\"}]\\) \
uses rules \\!\\(\\*RowBox[{StyleBox[\\\"v\\\", \\\"TI\\\"], \\\"\[Rule]\\\", \
StyleBox[\\\"w\\\", \\\"TI\\\"]}]\\) to specify the graph \
\\!\\(\\*StyleBox[\\\"g\\\", \\\"TI\\\"]\\).\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", "paclet:ref/FindClique", 
                    "paclet:ref/FindClique", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/FindClique.\
html"], None}, "http://reference.wolfram.com/language/ref/FindClique.html", 
                    "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", "Protected", "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`FindClique\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/FindClique",
                ButtonNote->"paclet:ref/FindClique"],
               "\"paclet:ref/FindClique\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"FindClique\\\", \\\"[\\\", \
StyleBox[\\\"g\\\", \\\"TI\\\"], \\\"]\\\"}]\\) finds a largest clique in the \
graph \\!\\(\\*StyleBox[\\\"g\\\", \
\\\"TI\\\"]\\).\\n\\!\\(\\*RowBox[{\\\"FindClique\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"g\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"n\\\", \
\\\"TI\\\"]}], \\\"]\\\"}]\\) finds a clique containing at most \
\\!\\(\\*StyleBox[\\\"n\\\", \\\"TI\\\"]\\) \
vertices.\\n\\!\\(\\*RowBox[{\\\"FindClique\\\", \\\"[\\\", RowBox[{StyleBox[\
\\\"g\\\", \\\"TI\\\"], \\\",\\\", StyleBox[RowBox[{\\\"{\\\", \\\"n\\\", \
\\\"}\\\"}], \\\"TI\\\"]}], \\\"]\\\"}]\\) finds a clique containing exactly \
\\!\\(\\*StyleBox[\\\"n\\\", \\\"TI\\\"]\\) \
vertices.\\n\\!\\(\\*RowBox[{\\\"FindClique\\\", \\\"[\\\", RowBox[{StyleBox[\
\\\"g\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"n\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"n\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) finds a \
clique containing between \\!\\(\\*SubscriptBox[StyleBox[\\\"n\\\", \
\\\"TI\\\"], StyleBox[\\\"min\\\", \\\"TI\\\"]]\\) and \
\\!\\(\\*SubscriptBox[StyleBox[\\\"n\\\", \\\"TI\\\"], StyleBox[\\\"max\\\", \
\\\"TI\\\"]]\\) vertices.\\n\\!\\(\\*RowBox[{\\\"FindClique\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"g\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"nspec\\\", \
\\\"TI\\\"], \\\",\\\", StyleBox[\\\"s\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) \
finds at most \\!\\(\\*StyleBox[\\\"s\\\", \\\"TI\\\"]\\) \
cliques.\\n\\!\\(\\*RowBox[{\\\"FindClique\\\", \\\"[\\\", RowBox[{RowBox[{\\\
\"{\\\", RowBox[{StyleBox[\\\"g\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"v\\\
\", \\\"TI\\\"]}], \\\"}\\\"}], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \
\\\"TR\\\"]}], \\\"]\\\"}]\\) finds cliques that include the vertex \
\\!\\(\\*StyleBox[\\\"v\\\", \\\"TI\\\"]\\) \
only.\\n\\!\\(\\*RowBox[{\\\"FindClique\\\", \\\"[\\\", RowBox[{RowBox[{\\\"{\
\\\", RowBox[{RowBox[{StyleBox[\\\"v\\\", \\\"TI\\\"], \\\"\[Rule]\\\", \
StyleBox[\\\"w\\\", \\\"TI\\\"]}], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \
\\\"TR\\\"]}], \\\"}\\\"}], \\\",\\\", \\\"\[Ellipsis]\\\"}], \\\"]\\\"}]\\) \
uses rules \\!\\(\\*RowBox[{StyleBox[\\\"v\\\", \\\"TI\\\"], \\\"\[Rule]\\\", \
StyleBox[\\\"w\\\", \\\"TI\\\"]}]\\) to specify the graph \
\\!\\(\\*StyleBox[\\\"g\\\", \\\"TI\\\"]\\).\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"FindClique\", \"[\", StyleBox[\"g\", \"TI\"], \
\"]\"}]\) finds a largest clique in the graph \!\(\*StyleBox[\"g\", \
\"TI\"]\).\n\!\(\*RowBox[{\"FindClique\", \"[\", RowBox[{StyleBox[\"g\", \"TI\
\"], \",\", StyleBox[\"n\", \"TI\"]}], \"]\"}]\) finds a clique containing at \
most \!\(\*StyleBox[\"n\", \"TI\"]\) vertices.\n\!\(\*RowBox[{\"FindClique\", \
\"[\", RowBox[{StyleBox[\"g\", \"TI\"], \",\", StyleBox[RowBox[{\"{\", \"n\", \
\"}\"}], \"TI\"]}], \"]\"}]\) finds a clique containing exactly \
\!\(\*StyleBox[\"n\", \"TI\"]\) vertices.\n\!\(\*RowBox[{\"FindClique\", \
\"[\", RowBox[{StyleBox[\"g\", \"TI\"], \",\", RowBox[{\"{\", \
RowBox[{SubscriptBox[StyleBox[\"n\", \"TI\"], StyleBox[\"min\", \"TI\"]], \",\
\", SubscriptBox[StyleBox[\"n\", \"TI\"], StyleBox[\"max\", \"TI\"]]}], \
\"}\"}]}], \"]\"}]\) finds a clique containing between \
\!\(\*SubscriptBox[StyleBox[\"n\", \"TI\"], StyleBox[\"min\", \"TI\"]]\) and \
\!\(\*SubscriptBox[StyleBox[\"n\", \"TI\"], StyleBox[\"max\", \"TI\"]]\) \
vertices.\n\!\(\*RowBox[{\"FindClique\", \"[\", RowBox[{StyleBox[\"g\", \
\"TI\"], \",\", StyleBox[\"nspec\", \"TI\"], \",\", StyleBox[\"s\", \
\"TI\"]}], \"]\"}]\) finds at most \!\(\*StyleBox[\"s\", \"TI\"]\) cliques.\n\
\!\(\*RowBox[{\"FindClique\", \"[\", RowBox[{RowBox[{\"{\", RowBox[{StyleBox[\
\"g\", \"TI\"], \",\", StyleBox[\"v\", \"TI\"]}], \"}\"}], \",\", StyleBox[\"\
\[Ellipsis]\", \"TR\"]}], \"]\"}]\) finds cliques that include the vertex \
\!\(\*StyleBox[\"v\", \"TI\"]\) only.\n\!\(\*RowBox[{\"FindClique\", \"[\", \
RowBox[{RowBox[{\"{\", RowBox[{RowBox[{StyleBox[\"v\", \"TI\"], \"\[Rule]\", \
StyleBox[\"w\", \"TI\"]}], \",\", StyleBox[\"\[Ellipsis]\", \"TR\"]}], \
\"}\"}], \",\", \"\[Ellipsis]\"}], \"]\"}]\) uses rules \
\!\(\*RowBox[{StyleBox[\"v\", \"TI\"], \"\[Rule]\", StyleBox[\"w\", \"TI\"]}]\
\) to specify the graph \!\(\*StyleBox[\"g\", \"TI\"]\).", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/FindClique", "Web" -> 
        "http://reference.wolfram.com/language/ref/FindClique.html"|>, 
      "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, "Options" -> None, "Attributes" -> {Protected}, 
      "FullName" -> "System`FindClique"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/FindKClique",
                ButtonNote->"paclet:ref/FindKClique"],
               "\"paclet:ref/FindKClique\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"FindKClique\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"g\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"k\\\", \
\\\"TI\\\"]}], \\\"]\\\"}]\\) finds a largest \\!\\(\\*StyleBox[\\\"k\\\", \\\
\"TI\\\"]\\)-clique in the graph \\!\\(\\*StyleBox[\\\"g\\\", \\\"TI\\\"]\\).\
\\n\\!\\(\\*RowBox[{\\\"FindKClique\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"g\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"k\\\", \
\\\"TI\\\"], \\\",\\\", StyleBox[\\\"n\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) \
finds a \\!\\(\\*StyleBox[\\\"k\\\", \\\"TI\\\"]\\)-clique containing at most \
\\!\\(\\*StyleBox[\\\"n\\\", \\\"TI\\\"]\\) \
vertices.\\n\\!\\(\\*RowBox[{\\\"FindKClique\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"g\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"k\\\", \
\\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", StyleBox[\\\"n\\\", \\\"TI\\\"], \
\\\"}\\\"}]}], \\\"]\\\"}]\\) finds a \\!\\(\\*StyleBox[\\\"k\\\", \
\\\"TI\\\"]\\)-clique containing exactly \\!\\(\\*StyleBox[\\\"n\\\", \
\\\"TI\\\"]\\) vertices.\\n\\!\\(\\*RowBox[{\\\"FindKClique\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"g\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"k\\\", \
\\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"n\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"n\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) finds a \
\\!\\(\\*StyleBox[\\\"k\\\", \\\"TI\\\"]\\)-clique containing between \
\\!\\(\\*SubscriptBox[StyleBox[\\\"n\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]]\\) and \\!\\(\\*SubscriptBox[StyleBox[\\\"n\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]]\\) \
vertices.\\n\\!\\(\\*RowBox[{\\\"FindKClique\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"g\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"k\\\", \
\\\"TI\\\"], \\\",\\\", StyleBox[\\\"nspec\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"s\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) finds at most \
\\!\\(\\*StyleBox[\\\"s\\\", \\\"TI\\\"]\\) \\!\\(\\*StyleBox[\\\"k\\\", \
\\\"TI\\\"]\\)-cliques.\\n\\!\\(\\*RowBox[{\\\"FindKClique\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{StyleBox[\\\"g\\\", \\\"TI\\\"], \
\\\",\\\", StyleBox[\\\"v\\\", \\\"TI\\\"]}], \\\"}\\\"}], \\\",\\\", \
StyleBox[\\\"k\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \
\\\"TR\\\"]}], \\\"]\\\"}]\\) finds \\!\\(\\*StyleBox[\\\"k\\\", \
\\\"TI\\\"]\\)-cliques that include the vertex \\!\\(\\*StyleBox[\\\"v\\\", \
\\\"TI\\\"]\\) only.\\n\\!\\(\\*RowBox[{\\\"FindKClique\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{RowBox[{StyleBox[\\\"v\\\", \\\"TI\\\"], \
\\\"\[Rule]\\\", StyleBox[\\\"w\\\", \\\"TI\\\"]}], \\\",\\\", StyleBox[\\\"\
\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\"}], \\\",\\\", StyleBox[\\\"\
\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"]\\\"}]\\) uses rules \
\\!\\(\\*RowBox[{StyleBox[\\\"v\\\", \\\"TI\\\"], \\\"\[Rule]\\\", \
StyleBox[\\\"w\\\", \\\"TI\\\"]}]\\) to specify the graph \
\\!\\(\\*StyleBox[\\\"g\\\", \\\"TI\\\"]\\).\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", "paclet:ref/FindKClique", 
                    "paclet:ref/FindKClique", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/FindKClique.\
html"], None}, "http://reference.wolfram.com/language/ref/FindKClique.html", 
                    "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", "Protected", "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`FindKClique\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/FindKClique",
                ButtonNote->"paclet:ref/FindKClique"],
               "\"paclet:ref/FindKClique\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"FindKClique\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"g\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"k\\\", \
\\\"TI\\\"]}], \\\"]\\\"}]\\) finds a largest \\!\\(\\*StyleBox[\\\"k\\\", \\\
\"TI\\\"]\\)-clique in the graph \\!\\(\\*StyleBox[\\\"g\\\", \\\"TI\\\"]\\).\
\\n\\!\\(\\*RowBox[{\\\"FindKClique\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"g\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"k\\\", \
\\\"TI\\\"], \\\",\\\", StyleBox[\\\"n\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) \
finds a \\!\\(\\*StyleBox[\\\"k\\\", \\\"TI\\\"]\\)-clique containing at most \
\\!\\(\\*StyleBox[\\\"n\\\", \\\"TI\\\"]\\) \
vertices.\\n\\!\\(\\*RowBox[{\\\"FindKClique\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"g\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"k\\\", \
\\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", StyleBox[\\\"n\\\", \\\"TI\\\"], \
\\\"}\\\"}]}], \\\"]\\\"}]\\) finds a \\!\\(\\*StyleBox[\\\"k\\\", \
\\\"TI\\\"]\\)-clique containing exactly \\!\\(\\*StyleBox[\\\"n\\\", \
\\\"TI\\\"]\\) vertices.\\n\\!\\(\\*RowBox[{\\\"FindKClique\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"g\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"k\\\", \
\\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"n\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"n\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) finds a \
\\!\\(\\*StyleBox[\\\"k\\\", \\\"TI\\\"]\\)-clique containing between \
\\!\\(\\*SubscriptBox[StyleBox[\\\"n\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]]\\) and \\!\\(\\*SubscriptBox[StyleBox[\\\"n\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]]\\) \
vertices.\\n\\!\\(\\*RowBox[{\\\"FindKClique\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"g\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"k\\\", \
\\\"TI\\\"], \\\",\\\", StyleBox[\\\"nspec\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"s\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) finds at most \
\\!\\(\\*StyleBox[\\\"s\\\", \\\"TI\\\"]\\) \\!\\(\\*StyleBox[\\\"k\\\", \
\\\"TI\\\"]\\)-cliques.\\n\\!\\(\\*RowBox[{\\\"FindKClique\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{StyleBox[\\\"g\\\", \\\"TI\\\"], \
\\\",\\\", StyleBox[\\\"v\\\", \\\"TI\\\"]}], \\\"}\\\"}], \\\",\\\", \
StyleBox[\\\"k\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \
\\\"TR\\\"]}], \\\"]\\\"}]\\) finds \\!\\(\\*StyleBox[\\\"k\\\", \
\\\"TI\\\"]\\)-cliques that include the vertex \\!\\(\\*StyleBox[\\\"v\\\", \
\\\"TI\\\"]\\) only.\\n\\!\\(\\*RowBox[{\\\"FindKClique\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{RowBox[{StyleBox[\\\"v\\\", \\\"TI\\\"], \
\\\"\[Rule]\\\", StyleBox[\\\"w\\\", \\\"TI\\\"]}], \\\",\\\", StyleBox[\\\"\
\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\"}], \\\",\\\", StyleBox[\\\"\
\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"]\\\"}]\\) uses rules \
\\!\\(\\*RowBox[{StyleBox[\\\"v\\\", \\\"TI\\\"], \\\"\[Rule]\\\", \
StyleBox[\\\"w\\\", \\\"TI\\\"]}]\\) to specify the graph \
\\!\\(\\*StyleBox[\\\"g\\\", \\\"TI\\\"]\\).\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"FindKClique\", \"[\", RowBox[{StyleBox[\"g\", \"TI\"], \
\",\", StyleBox[\"k\", \"TI\"]}], \"]\"}]\) finds a largest \
\!\(\*StyleBox[\"k\", \"TI\"]\)-clique in the graph \!\(\*StyleBox[\"g\", \
\"TI\"]\).\n\!\(\*RowBox[{\"FindKClique\", \"[\", RowBox[{StyleBox[\"g\", \
\"TI\"], \",\", StyleBox[\"k\", \"TI\"], \",\", StyleBox[\"n\", \"TI\"]}], \
\"]\"}]\) finds a \!\(\*StyleBox[\"k\", \"TI\"]\)-clique containing at most \
\!\(\*StyleBox[\"n\", \"TI\"]\) vertices.\n\!\(\*RowBox[{\"FindKClique\", \"[\
\", RowBox[{StyleBox[\"g\", \"TI\"], \",\", StyleBox[\"k\", \"TI\"], \",\", \
RowBox[{\"{\", StyleBox[\"n\", \"TI\"], \"}\"}]}], \"]\"}]\) finds a \
\!\(\*StyleBox[\"k\", \"TI\"]\)-clique containing exactly \
\!\(\*StyleBox[\"n\", \"TI\"]\) vertices.\n\!\(\*RowBox[{\"FindKClique\", \"[\
\", RowBox[{StyleBox[\"g\", \"TI\"], \",\", StyleBox[\"k\", \"TI\"], \",\", \
RowBox[{\"{\", RowBox[{SubscriptBox[StyleBox[\"n\", \"TI\"], \
StyleBox[\"min\", \"TI\"]], \",\", SubscriptBox[StyleBox[\"n\", \"TI\"], \
StyleBox[\"max\", \"TI\"]]}], \"}\"}]}], \"]\"}]\) finds a \!\(\*StyleBox[\"k\
\", \"TI\"]\)-clique containing between \!\(\*SubscriptBox[StyleBox[\"n\", \
\"TI\"], StyleBox[\"min\", \"TI\"]]\) and \!\(\*SubscriptBox[StyleBox[\"n\", \
\"TI\"], StyleBox[\"max\", \"TI\"]]\) vertices.\n\
\!\(\*RowBox[{\"FindKClique\", \"[\", RowBox[{StyleBox[\"g\", \"TI\"], \",\", \
StyleBox[\"k\", \"TI\"], \",\", StyleBox[\"nspec\", \"TI\"], \",\", StyleBox[\
\"s\", \"TI\"]}], \"]\"}]\) finds at most \!\(\*StyleBox[\"s\", \"TI\"]\) \
\!\(\*StyleBox[\"k\", \"TI\"]\)-cliques.\n\!\(\*RowBox[{\"FindKClique\", \
\"[\", RowBox[{RowBox[{\"{\", RowBox[{StyleBox[\"g\", \"TI\"], \",\", \
StyleBox[\"v\", \"TI\"]}], \"}\"}], \",\", StyleBox[\"k\", \"TI\"], \",\", \
StyleBox[\"\[Ellipsis]\", \"TR\"]}], \"]\"}]\) finds \!\(\*StyleBox[\"k\", \
\"TI\"]\)-cliques that include the vertex \!\(\*StyleBox[\"v\", \"TI\"]\) \
only.\n\!\(\*RowBox[{\"FindKClique\", \"[\", RowBox[{RowBox[{\"{\", \
RowBox[{RowBox[{StyleBox[\"v\", \"TI\"], \"\[Rule]\", StyleBox[\"w\", \
\"TI\"]}], \",\", StyleBox[\"\[Ellipsis]\", \"TR\"]}], \"}\"}], \",\", \
StyleBox[\"\[Ellipsis]\", \"TR\"]}], \"]\"}]\) uses rules \
\!\(\*RowBox[{StyleBox[\"v\", \"TI\"], \"\[Rule]\", StyleBox[\"w\", \"TI\"]}]\
\) to specify the graph \!\(\*StyleBox[\"g\", \"TI\"]\).", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/FindKClique", "Web" -> 
        "http://reference.wolfram.com/language/ref/FindKClique.html"|>, 
      "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, "Options" -> None, "Attributes" -> {Protected}, 
      "FullName" -> "System`FindKClique"|>, True]]}], "}"}]], "Output",
 CellChangeTimes->{3.8772944340411344`*^9},
 CellLabel->
  "Out[168]=",ExpressionUUID->"2f1ea1fa-e973-4507-9db8-5a634a7fd2dc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"CompleteGraph", "[", "#", "]"}], "&"}], "/@", 
  RowBox[{"Range", "[", "9", "]"}]}]], "Input",
 CellChangeTimes->{{3.877294494718156*^9, 3.8772945064666386`*^9}},
 CellLabel->
  "In[169]:=",ExpressionUUID->"fbf242bb-759b-498b-a5c1-6c33917d0738"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1}, {}, {
        GraphLayout -> {"CircularEmbedding", "OptimalOrder" -> False}}]]}, 
      TagBox[GraphicsGroupBox[GraphicsComplexBox[{{0., 0.}}, {{}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           DiskBox[1, 0.004014598540145964]}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    FormatType->TraditionalForm,
    FrameTicks->None,
    PlotRangePadding->0.1], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2}, {Null, 
         SparseArray[
         Automatic, {2, 2}, 0, {1, {{0, 1, 2}, {{2}, {1}}}, Pattern}]}, {
        GraphLayout -> {"CircularEmbedding", "OptimalOrder" -> False}}]]}, 
      TagBox[GraphicsGroupBox[GraphicsComplexBox[{{1., 0.}, {-1., 0.}}, {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
           {Arrowheads[0.], ArrowBox[{1, 2}, 0.02261146496815286]}}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           DiskBox[1, 0.02261146496815286], 
           DiskBox[2, 0.02261146496815286]}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    FormatType->TraditionalForm,
    FrameTicks->None], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3}, {Null, 
         SparseArray[
         Automatic, {3, 3}, 0, {
          1, {{0, 2, 4, 6}, {{2}, {3}, {1}, {3}, {1}, {2}}}, Pattern}]}, {
        GraphLayout -> {"CircularEmbedding", "OptimalOrder" -> False}}]]}, 
      TagBox[
       GraphicsGroupBox[
        GraphicsComplexBox[{{-0.8660254037844384, -0.49999999999999933`}, {
         0.8660254037844389, -0.5000000000000012}, {1.8369701987210297`*^-16, 
         1.}}, {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
           ArrowBox[{{1, 2}, {1, 3}, {2, 3}}, 0.020399597244776385`]}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           DiskBox[1, 0.020399597244776385], DiskBox[2, 0.020399597244776385],
            DiskBox[3, 0.020399597244776385]}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    FormatType->TraditionalForm,
    FrameTicks->None], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4}, {Null, 
         SparseArray[
         Automatic, {4, 4}, 0, {
          1, {{0, 3, 6, 9, 12}, {{2}, {3}, {4}, {1}, {3}, {4}, {1}, {2}, {
            4}, {1}, {2}, {3}}}, Pattern}]}, {
        GraphLayout -> "StarEmbedding"}]]}, 
      TagBox[
       GraphicsGroupBox[
        GraphicsComplexBox[{{0., 0.}, {
         0.8660254037844389, -0.5000000000000012}, {1.8369701987210297`*^-16, 
         1.}, {-0.8660254037844386, -0.49999999999999917`}}, {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
           ArrowBox[{{1, 2}, {1, 3}, {1, 4}, {2, 3}, {2, 4}, {3, 4}}, 
            0.020399597244776413`]}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           DiskBox[1, 0.020399597244776413], DiskBox[2, 0.020399597244776413],
            DiskBox[3, 0.020399597244776413], 
           DiskBox[4, 0.020399597244776413]}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    FormatType->TraditionalForm,
    FrameTicks->None], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4, 5}, {Null, 
         SparseArray[
         Automatic, {5, 5}, 0, {
          1, {{0, 4, 8, 12, 16, 20}, {{2}, {3}, {4}, {5}, {1}, {3}, {4}, {
            5}, {1}, {2}, {4}, {5}, {1}, {2}, {3}, {5}, {1}, {2}, {3}, {4}}}, 
           Pattern}]}, {
        GraphLayout -> {"CircularEmbedding", "OptimalOrder" -> False}}]]}, 
      TagBox[
       GraphicsGroupBox[
        GraphicsComplexBox[{{-0.9510565162951538, 
         0.3090169943749484}, {-0.5877852522924726, -0.8090169943749468}, {
         0.5877852522924738, -0.8090169943749481}, {0.9510565162951533, 
         0.30901699437494634`}, {-7.044813998280222*^-16, 1.}}, {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
           ArrowBox[{{1, 2}, {1, 3}, {1, 4}, {1, 5}, {2, 3}, {2, 4}, {2, 5}, {
            3, 4}, {3, 5}, {4, 5}}, 0.021812234931106983`]}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           DiskBox[1, 0.021812234931106983], DiskBox[2, 0.021812234931106983],
            DiskBox[3, 0.021812234931106983], 
           DiskBox[4, 0.021812234931106983], 
           DiskBox[5, 0.021812234931106983]}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    FormatType->TraditionalForm,
    FrameTicks->None], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4, 5, 6}, {Null, 
         SparseArray[
         Automatic, {6, 6}, 0, {
          1, {{0, 5, 10, 15, 20, 25, 30}, {{2}, {3}, {4}, {5}, {6}, {1}, {
            3}, {4}, {5}, {6}, {1}, {2}, {4}, {5}, {6}, {1}, {2}, {3}, {5}, {
            6}, {1}, {2}, {3}, {4}, {6}, {1}, {2}, {3}, {4}, {5}}}, 
           Pattern}]}, {
        GraphLayout -> {"CircularEmbedding", "OptimalOrder" -> False}}]]}, 
      TagBox[
       GraphicsGroupBox[
        GraphicsComplexBox[{{-0.8660254037844389, 
         0.5000000000000008}, {-0.8660254037844384, -0.49999999999999933`}, {
         3.8285686989269494`*^-16, -1.}, {
         0.8660254037844389, -0.5000000000000012}, {0.8660254037844386, 
         0.4999999999999993}, {1.8369701987210297`*^-16, 1.}}, {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
           ArrowBox[{{1, 2}, {1, 3}, {1, 4}, {1, 5}, {1, 6}, {2, 3}, {2, 4}, {
            2, 5}, {2, 6}, {3, 4}, {3, 5}, {3, 6}, {4, 5}, {4, 6}, {5, 6}}, 
            0.02261146496815286]}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           DiskBox[1, 0.02261146496815286], DiskBox[2, 0.02261146496815286], 
           DiskBox[3, 0.02261146496815286], DiskBox[4, 0.02261146496815286], 
           DiskBox[5, 0.02261146496815286], 
           DiskBox[6, 0.02261146496815286]}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    FormatType->TraditionalForm,
    FrameTicks->None], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4, 5, 6, 7}, {Null, 
         SparseArray[
         Automatic, {7, 7}, 0, {
          1, {{0, 6, 12, 18, 24, 30, 36, 42}, {{2}, {3}, {4}, {5}, {6}, {7}, {
            1}, {3}, {4}, {5}, {6}, {7}, {1}, {2}, {4}, {5}, {6}, {7}, {1}, {
            2}, {3}, {5}, {6}, {7}, {1}, {2}, {3}, {4}, {6}, {7}, {1}, {2}, {
            3}, {4}, {5}, {7}, {1}, {2}, {3}, {4}, {5}, {6}}}, Pattern}]}, {
        GraphLayout -> {"CircularEmbedding", "OptimalOrder" -> False}}]]}, 
      TagBox[
       GraphicsGroupBox[
        GraphicsComplexBox[{{-0.7818314824680302, 
         0.6234898018587343}, {-0.9749279121818235, -0.22252093395631342`}, \
{-0.43388373911755757`, -0.9009688679024187}, {
         0.43388373911755884`, -0.9009688679024196}, {
         0.9749279121818237, -0.2225209339563155}, {0.7818314824680294, 
         0.6234898018587326}, {-7.044813998280222*^-16, 1.}}, {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
           ArrowBox[{{1, 2}, {1, 3}, {1, 4}, {1, 5}, {1, 6}, {1, 7}, {2, 3}, {
            2, 4}, {2, 5}, {2, 6}, {2, 7}, {3, 4}, {3, 5}, {3, 6}, {3, 7}, {4,
             5}, {4, 6}, {4, 7}, {5, 6}, {5, 7}, {6, 7}}, 
            0.02220329551621769]}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           DiskBox[1, 0.02220329551621769], DiskBox[2, 0.02220329551621769], 
           DiskBox[3, 0.02220329551621769], DiskBox[4, 0.02220329551621769], 
           DiskBox[5, 0.02220329551621769], DiskBox[6, 0.02220329551621769], 
           DiskBox[7, 0.02220329551621769]}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    FormatType->TraditionalForm,
    FrameTicks->None], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4, 5, 6, 7, 8}, {Null, 
         SparseArray[
         Automatic, {8, 8}, 0, {
          1, {{0, 7, 14, 21, 28, 35, 42, 49, 56}, {{2}, {3}, {4}, {5}, {6}, {
            7}, {8}, {1}, {3}, {4}, {5}, {6}, {7}, {8}, {1}, {2}, {4}, {5}, {
            6}, {7}, {8}, {1}, {2}, {3}, {5}, {6}, {7}, {8}, {1}, {2}, {3}, {
            4}, {6}, {7}, {8}, {1}, {2}, {3}, {4}, {5}, {7}, {8}, {1}, {2}, {
            3}, {4}, {5}, {6}, {8}, {1}, {2}, {3}, {4}, {5}, {6}, {7}}}, 
           Pattern}]}, {
        GraphLayout -> {"CircularEmbedding", "OptimalOrder" -> False}}]]}, 
      TagBox[
       GraphicsGroupBox[
        GraphicsComplexBox[{{-0.707106781186548, 0.7071067811865482}, {-1., 
         1.0106430996148606`*^-15}, {-0.7071067811865471, \
-0.7071067811865468}, {6.049014748177263*^-16, -1.}, {
         0.7071067811865481, -0.7071067811865483}, {
         1., -1.133107779529596*^-15}, {0.707106781186547, 
         0.7071067811865467}, {-7.044813998280222*^-16, 1.}}, {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
           ArrowBox[{{1, 2}, {1, 3}, {1, 4}, {1, 5}, {1, 6}, {1, 7}, {1, 8}, {
            2, 3}, {2, 4}, {2, 5}, {2, 6}, {2, 7}, {2, 8}, {3, 4}, {3, 5}, {3,
             6}, {3, 7}, {3, 8}, {4, 5}, {4, 6}, {4, 7}, {4, 8}, {5, 6}, {5, 
            7}, {5, 8}, {6, 7}, {6, 8}, {7, 8}}, 0.02261146496815286]}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           DiskBox[1, 0.02261146496815286], DiskBox[2, 0.02261146496815286], 
           DiskBox[3, 0.02261146496815286], DiskBox[4, 0.02261146496815286], 
           DiskBox[5, 0.02261146496815286], DiskBox[6, 0.02261146496815286], 
           DiskBox[7, 0.02261146496815286], 
           DiskBox[8, 0.02261146496815286]}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    FormatType->TraditionalForm,
    FrameTicks->None], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9}, {Null, 
         SparseArray[
         Automatic, {9, 9}, 0, {
          1, {{0, 8, 16, 24, 32, 40, 48, 56, 64, 72}, {{2}, {3}, {4}, {5}, {
            6}, {7}, {8}, {9}, {1}, {3}, {4}, {5}, {6}, {7}, {8}, {9}, {1}, {
            2}, {4}, {5}, {6}, {7}, {8}, {9}, {1}, {2}, {3}, {5}, {6}, {7}, {
            8}, {9}, {1}, {2}, {3}, {4}, {6}, {7}, {8}, {9}, {1}, {2}, {3}, {
            4}, {5}, {7}, {8}, {9}, {1}, {2}, {3}, {4}, {5}, {6}, {8}, {9}, {
            1}, {2}, {3}, {4}, {5}, {6}, {7}, {9}, {1}, {2}, {3}, {4}, {5}, {
            6}, {7}, {8}}}, Pattern}]}, {
        GraphLayout -> {"CircularEmbedding", "OptimalOrder" -> False}}]]}, 
      TagBox[
       GraphicsGroupBox[
        GraphicsComplexBox[{{-0.6427876096865398, 
         0.7660444431189786}, {-0.9848077530122081, 
         0.17364817766693114`}, {-0.8660254037844384, -0.49999999999999933`}, \
{-0.34202014332566844`, -0.9396926207859079}, {
         0.3420201433256691, -0.9396926207859085}, {
         0.8660254037844389, -0.5000000000000012}, {0.984807753012208, 
         0.17364817766692903`}, {0.6427876096865388, 
         0.7660444431189772}, {-7.044813998280222*^-16, 1.}}, {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
           ArrowBox[{{1, 2}, {1, 3}, {1, 4}, {1, 5}, {1, 6}, {1, 7}, {1, 8}, {
            1, 9}, {2, 3}, {2, 4}, {2, 5}, {2, 6}, {2, 7}, {2, 8}, {2, 9}, {3,
             4}, {3, 5}, {3, 6}, {3, 7}, {3, 8}, {3, 9}, {4, 5}, {4, 6}, {4, 
            7}, {4, 8}, {4, 9}, {5, 6}, {5, 7}, {5, 8}, {5, 9}, {6, 7}, {6, 
            8}, {6, 9}, {7, 8}, {7, 9}, {8, 9}}, 0.022364449578799767`]}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           DiskBox[1, 0.022364449578799767], DiskBox[2, 0.022364449578799767],
            DiskBox[3, 0.022364449578799767], 
           DiskBox[4, 0.022364449578799767], DiskBox[5, 0.022364449578799767],
            DiskBox[6, 0.022364449578799767], 
           DiskBox[7, 0.022364449578799767], DiskBox[8, 0.022364449578799767],
            DiskBox[9, 0.022364449578799767]}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    FormatType->TraditionalForm,
    FrameTicks->None]}], "}"}]], "Output",
 CellChangeTimes->{3.8772945070447936`*^9},
 CellLabel->
  "Out[169]=",ExpressionUUID->"8cec84b7-d4cd-48c7-ba05-7b99150a683c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindClique", "[", 
  RowBox[{
   RowBox[{"CompleteGraph", "[", "5", "]"}], ",", "Infinity", ",", "All"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.877294627306889*^9, 3.877294636687121*^9}},
 CellLabel->
  "In[170]:=",ExpressionUUID->"db06c2f6-3c9e-4b7f-a124-bba7c80d8095"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5"}], "}"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.877294636937006*^9},
 CellLabel->
  "Out[170]=",ExpressionUUID->"af7492ac-6070-4491-b8f5-45c4982d795a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FindClique", "[", 
    RowBox[{
     RowBox[{"CompleteGraph", "[", "#", "]"}], ",", "Infinity", ",", "All"}], 
    "]"}], "&"}], "/@", 
  RowBox[{"Range", "[", "7", "]"}]}]], "Input",
 CellChangeTimes->{{3.877294627306889*^9, 3.877294645425558*^9}},
 CellLabel->
  "In[171]:=",ExpressionUUID->"8b5f955a-f43b-4e77-b011-f08f40d6e863"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"{", "1", "}"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2", ",", "3"}], "}"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5"}], "}"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6"}], "}"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{
     "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7"}], "}"}],
     "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.8772946457223415`*^9},
 CellLabel->
  "Out[171]=",ExpressionUUID->"f9984f35-43c8-4ab4-aac5-a1630823d3da"]
}, Open  ]],

Cell["I looks like a complete graph has just one maximal clique.", "Text",
 CellChangeTimes->{{3.877294658972374*^9, 
  3.8772946759591494`*^9}},ExpressionUUID->"ba0bd8df-e948-4cad-acc2-\
2122616a2527"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Exercise 132", "Section",
 CellChangeTimes->{{3.8772949087116594`*^9, 
  3.8772949397601748`*^9}},ExpressionUUID->"609ed06e-1b90-49b4-8a17-\
96e8b9a30ef4"],

Cell["\<\
I tried to finish entering a graph manually and it was taking too much time \
so I gave up.\
\>", "Text",
 CellChangeTimes->{{3.877296567045127*^9, 
  3.8772965837886343`*^9}},ExpressionUUID->"63fa2dd0-915a-4e99-b571-\
63a9125b99d2"],

Cell["\<\
There\[CloseCurlyQuote]s a picture of a graph and I\[CloseCurlyQuote]m asked \
to determine several properties.\
\>", "Text",
 CellChangeTimes->{{3.877294919241468*^9, 
  3.877294931305483*^9}},ExpressionUUID->"377a34d1-d433-4e0c-8f64-\
0fff6954e370"],

Cell["\<\
I was trying to be careful as I entered the graph into Mathematica not to \
duplicate an edge, but then I realized that if I duplicated an edge I could \
just use SimpleGraph to get the underlying graph.\
\>", "Text",
 CellChangeTimes->{{3.8772957299252014`*^9, 
  3.8772957632654963`*^9}},ExpressionUUID->"f87a13db-07e1-455e-9aa4-\
bc6fde075322"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SimpleGraph", "@", 
  RowBox[{"Graph", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"AA", "<->", "b"}], ",", 
      RowBox[{"AA", "<->", "fSharp"}], ",", 
      RowBox[{"AA", "<->", "cSharp"}], ",", 
      RowBox[{"AA", "<->", "DD"}], ",", 
      RowBox[{"AA", "<->", "EE"}], ",", 
      RowBox[{"DD", "<->", "fSharp"}], ",", 
      RowBox[{"DD", "<->", "b"}], ",", 
      RowBox[{"DD", "<->", "e"}], ",", 
      RowBox[{"DD", "<->", "GG"}], ",", 
      RowBox[{"GG", "<->", "e"}], ",", 
      RowBox[{"GG", "<->", "b"}], ",", 
      RowBox[{"GG", "<->", "a"}], ",", 
      RowBox[{"GG", "<->", "CC"}], ",", 
      RowBox[{"CC", "<->", "e"}], ",", 
      RowBox[{"CC", "<->", "a"}], ",", 
      RowBox[{"CC", "<->", "d"}], ",", 
      RowBox[{"CC", "<->", "FF"}], ",", 
      RowBox[{"FF", "<->", "a"}], ",", 
      RowBox[{"FF", "<->", "d"}], ",", 
      RowBox[{"FF", "<->", "g"}], ",", 
      RowBox[{"FF", "<->", "BFlat"}], ",", 
      RowBox[{"BFlat", "<->", "d"}], ",", 
      RowBox[{"BFlat", "<->", "c"}], ",", 
      RowBox[{"BFlat", "<->", "g"}], ",", 
      RowBox[{"BFlat", "<->", "EFlat"}], ",", 
      RowBox[{"EFlat", "<->", "AFlat"}], ",", 
      RowBox[{"EFlat", "<->", "f"}], ",", 
      RowBox[{"EFlat", "<->", "c"}], ",", 
      RowBox[{"EFlat", "<->", "g"}], ",", 
      RowBox[{"AFlat", "<->", "c"}], ",", 
      RowBox[{"AFlat", "<->", "f"}], ",", 
      RowBox[{"AFlat", "<->", "BFlat"}], ",", 
      RowBox[{"AFlat", "<->", "DFlat"}], ",", 
      RowBox[{"DFlat", "<->", "f"}], ",", 
      RowBox[{"DFlat", "<->", "bFlat"}], ",", 
      RowBox[{"DFlat", "<->", "eFlat"}], ",", 
      RowBox[{"DFlat", "<->", "GFlat"}], ",", 
      RowBox[{"GFlat", "<->", "eFlat"}], ",", 
      RowBox[{"GFlat", "<->", "bFlat"}], ",", 
      RowBox[{"GFlat", "<->", "dFlat"}], ",", 
      RowBox[{"GFlat", "<->", "BB"}], ",", 
      RowBox[{"GFlat", "<->", "gSharp"}], ",", 
      RowBox[{"BB", "<->", "EE"}], ",", 
      RowBox[{"EE", "<->", "cSharp"}], ",", 
      RowBox[{"EE", "<->", "fSharp"}], ",", 
      RowBox[{"EE", "<->", "gSharp"}], ",", 
      RowBox[{"gSharp", "<->", "BB"}], ",", 
      RowBox[{"gSharp", "<->", "cSharp"}], ",", 
      RowBox[{"cSharp", "<->", "fSharp"}], ",", 
      RowBox[{"cSharp", "<->", "BB"}], ",", 
      RowBox[{"AFlat", "<->", "DFlat"}], ",", 
      RowBox[{"DFlat", "<->", "f"}]}], "}"}], ",", 
    RowBox[{"VertexLabels", "->", "Automatic"}], ",", 
    RowBox[{"ImageSize", "->", "Large"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.877294951447693*^9, 3.8772957225265017`*^9}, {
  3.877295768202996*^9, 3.877295886823377*^9}, {3.877295927495015*^9, 
  3.877295948677072*^9}, {3.8772960128416758`*^9, 3.877296046716498*^9}, {
  3.8772961296405725`*^9, 3.8772963022233295`*^9}, {3.8772963401256137`*^9, 
  3.87729637488032*^9}, {3.8772964507695804`*^9, 3.877296455604946*^9}, {
  3.8772964966098485`*^9, 3.8772965271484137`*^9}},
 CellLabel->
  "In[227]:=",ExpressionUUID->"c500c54c-b97e-4932-af51-c6641b6cf93d"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{$CellContext`AA, $CellContext`b, $CellContext`fSharp, \
$CellContext`cSharp, $CellContext`DD, $CellContext`EE, $CellContext`e, \
$CellContext`GG, $CellContext`a, $CellContext`CC, $CellContext`d, \
$CellContext`FF, $CellContext`g, $CellContext`BFlat, $CellContext`c, \
$CellContext`EFlat, $CellContext`AFlat, $CellContext`f, $CellContext`DFlat, \
$CellContext`bFlat, $CellContext`eFlat, $CellContext`GFlat, \
$CellContext`dFlat, $CellContext`BB, $CellContext`gSharp}, {
      Null, {{5, 7}, {6, 4}, {5, 2}, {14, 11}, {14, 16}, {5, 8}, {8, 7}, {8, 
       2}, {16, 17}, {17, 14}, {8, 9}, {17, 19}, {19, 20}, {19, 21}, {6, 
       25}, {25, 4}, {24, 6}, {25, 24}, {4, 24}, {19, 22}, {22, 21}, {22, 
       20}, {22, 24}, {22, 25}, {16, 18}, {17, 18}, {19, 18}, {12, 9}, {12, 
       11}, {12, 14}, {5, 3}, {6, 3}, {4, 3}, {22, 23}, {14, 15}, {16, 15}, {
       17, 15}, {8, 10}, {10, 7}, {10, 9}, {10, 11}, {10, 12}, {12, 13}, {14, 
       13}, {16, 13}, {1, 2}, {1, 3}, {1, 4}, {1, 5}, {1, 6}}}, {
      ImageSize -> Large, VertexLabels -> {Automatic}}]]}, 
    TagBox[GraphicsGroupBox[{
       {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
        ArrowBox[CompressedData["
1:eJxTTMoPSmVmYGAwAmImKJZlurgiVYrLwezmlg11LQIOZUJHknadZ3QQntS/
pr5KyAFdvm6rxrQ3P3gcjpQbHzhTK4Ahr3vwf+N5MQEHt8c75CvZuDHk/wc7
Wr07yeSwY1FDyK/fmPpbHqu+fiso6FAy+cjxc9E8GO5B148un5TM9TXm/hf7
yke26sHT+THci+4+dHl089Hl0d2Hbh4h+XVSKhPTwgUd8hZstLfSZMGQ11rr
mr1qopDDh++7VO9vZMFwzyrLBt/yg5/sa9+HS1izC2LIo/sf3T3o9qPLo9uP
bh+6+ejyZTvelv389Mj+WFnQPbPZnBjqE1gm7b/recl+0syM7UmC3Bjy6PrR
1ROST1A4x5tgesU++dCn1CPbGDHUM0CBMlPVx1/ymPLo+tHVE5LfYGj50Trh
sX1M9BrB1qiP9ujqD+i6rFJQOGz/9vZ/GWGxTxjy6PrR1ROSP+cbf+ffrff2
X3Lrf9u8uY2h3iMn+KVT8jP7B9LWx4Rf7MGQJ6R/ml5wusqPn/YeK8LFufSv
YZiHrh9dHl0/unpC8pWzTvWxNjHAwx1dPSF5p76WZeKGnA5T2AOFz7rdwFCP
Lo/O3+zEs3D9GmA6bix1P235EEO+SV/GSG6LgMOJPBtvD8OTGPLZ7qq2YcnA
fGKbpLbh0mcM89Dl0c1Dl0fnszjPvbtvqqiDQ1j9naDbrzHk0fM/ujx6/kdX
jy4PAA85t2k=
         "], 0.045267318140094756`]}, 
       {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
        0.7]}], {
         DiskBox[{3.262889212492395, 4.129389534986606}, 
          0.045267318140094756], 
         InsetBox["AA", 
          Offset[{2, 2}, {3.30815653063249, 4.1746568531267005}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{2.226429721459051, 4.619627662909369}, 
          0.045267318140094756], 
         InsetBox["b", Offset[{2, 2}, {2.271697039599146, 4.664894981049463}],
           ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{3.62154500304922, 4.122851374760959}, 0.045267318140094756],
          InsetBox["fSharp", 
          Offset[{2, 2}, {3.6668123211893144, 4.168118692901054}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{4.022275954470655, 3.3781607130335116}, 
          0.045267318140094756], 
         InsetBox["cSharp", 
          Offset[{2, 2}, {4.06754327261075, 3.4234280311736063}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{2.3485989142595822, 4.246072121001525}, 
          0.045267318140094756], 
         InsetBox["DD", Offset[{2, 2}, {2.393866232399677, 4.29133943914162}],
           ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{4.267509149730248, 3.5448279959550124}, 
          0.045267318140094756], 
         InsetBox["EE", 
          Offset[{2, 2}, {4.312776467870343, 3.590095314095107}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{1.1722329165819283, 4.25706136738506}, 
          0.045267318140094756], 
         InsetBox["e", Offset[{2, 2}, {1.217500234722023, 4.302328685525155}],
           ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{1.304532010259401, 3.9488890710602473}, 
          0.045267318140094756], 
         InsetBox["GG", 
          Offset[{2, 2}, {1.3497993283994956, 3.994156389200342}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.2857584353260503, 3.383489067916522}, 
          0.045267318140094756], 
         InsetBox["a", 
          Offset[{2, 2}, {0.33102575346614505, 3.428756386056617}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.5921599695991648, 3.2007882470050815}, 
          0.045267318140094756], 
         InsetBox["CC", 
          Offset[{2, 2}, {0.6374272877392596, 3.246055565145176}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0., 2.140615355049037}, 0.045267318140094756], 
         InsetBox["d", 
          Offset[{2, 2}, {0.045267318140094756, 2.185882673189132}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.31575776432192093, 2.2142417874058977}, 
          0.045267318140094756], 
         InsetBox["FF", 
          Offset[{2, 2}, {0.3610250824620157, 2.2595091055459924}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.14941795648370082, 1.1303893215933798}, 
          0.045267318140094756], 
         InsetBox["g", 
          Offset[{2, 2}, {0.1946852746237956, 1.1756566397334745}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.6054973327059567, 1.0845995607721397}, 
          0.045267318140094756], 
         InsetBox["BFlat", 
          Offset[{2, 2}, {0.6507646508460515, 1.1298668789122344}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.6996168667932432, 0.1129162177049774}, 
          0.045267318140094756], 
         InsetBox["c", 
          Offset[{2, 2}, {0.744884184933338, 0.15818353584507217}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.9954828552385437, 0.43629383621529816}, 
          0.045267318140094756], 
         InsetBox["EFlat", 
          Offset[{2, 2}, {1.0407501733786384, 0.48156115435539293}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{1.6230815921907484, 0.3466210582688558}, 
          0.045267318140094756], 
         InsetBox["AFlat", 
          Offset[{2, 2}, {1.668348910330843, 0.3918883764089506}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{2.063487163122144, 0.}, 0.045267318140094756], 
         InsetBox["f", 
          Offset[{2, 2}, {2.1087544812622387, 0.045267318140094756}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{3.1489708909228122, 0.3793213547361287}, 
          0.045267318140094756], 
         InsetBox["DFlat", 
          Offset[{2, 2}, {3.194238209062907, 0.4245886728762235}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{3.959319360911047, 0.5383049388583849}, 
          0.045267318140094756], 
         InsetBox["bFlat", 
          Offset[{2, 2}, {4.004586679051142, 0.5835722569984797}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{4.175896437616645, 0.19681647943149572}, 
          0.045267318140094756], 
         InsetBox["eFlat", 
          Offset[{2, 2}, {4.22116375575674, 0.2420837975715905}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{4.347008662605599, 1.2389375209203002}, 
          0.045267318140094756], 
         InsetBox["GFlat", 
          Offset[{2, 2}, {4.392275980745693, 1.2842048390603948}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{5.396235907290933, 0.8705229097929035}, 
          0.045267318140094756], 
         InsetBox["dFlat", 
          Offset[{2, 2}, {5.441503225431028, 0.9157902279329982}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{4.335352199391009, 2.5201306320268975}, 
          0.045267318140094756], 
         InsetBox["BB", 
          Offset[{2, 2}, {4.380619517531104, 2.565397950166992}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{4.6422516595151055, 2.586851401108099}, 
          0.045267318140094756], 
         InsetBox["gSharp", 
          Offset[{2, 2}, {4.6875189776552, 2.6321187192481936}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None,
  ImageSize->Large]], "Output",
 CellChangeTimes->{{3.877295599913986*^9, 3.8772956932221823`*^9}, 
   3.877295773722824*^9, {3.8772958097214437`*^9, 3.8772958877452602`*^9}, {
   3.8772959358375835`*^9, 3.8772959493020725`*^9}, {3.8772960209978886`*^9, 
   3.877296047325884*^9}, {3.8772961378957834`*^9, 3.877296222208112*^9}, {
   3.8772962557222815`*^9, 3.8772963027232714`*^9}, {3.877296356996866*^9, 
   3.8772963753959246`*^9}, 3.8772964561049557`*^9, {3.8772965009753165`*^9, 
   3.877296529351532*^9}},
 CellLabel->
  "Out[227]=",ExpressionUUID->"5d08dabe-f247-4d30-ba17-903cce7f604e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SimpleGraphQ", "[", 
  RowBox[{"SimpleGraph", "@", 
   RowBox[{"Graph", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"AA", "<->", "b"}], ",", 
       RowBox[{"AA", "<->", "fSharp"}], ",", 
       RowBox[{"AA", "<->", "cSharp"}], ",", 
       RowBox[{"AA", "<->", "DD"}], ",", 
       RowBox[{"AA", "<->", "EE"}], ",", 
       RowBox[{"DD", "<->", "fSharp"}], ",", 
       RowBox[{"DD", "<->", "b"}], ",", 
       RowBox[{"DD", "<->", "e"}], ",", 
       RowBox[{"DD", "<->", "GG"}], ",", 
       RowBox[{"GG", "<->", "e"}], ",", 
       RowBox[{"GG", "<->", "b"}], ",", 
       RowBox[{"GG", "<->", "a"}], ",", 
       RowBox[{"GG", "<->", "CC"}], ",", 
       RowBox[{"CC", "<->", "e"}], ",", 
       RowBox[{"CC", "<->", "a"}], ",", 
       RowBox[{"CC", "<->", "d"}], ",", 
       RowBox[{"CC", "<->", "FF"}], ",", 
       RowBox[{"FF", "<->", "a"}], ",", 
       RowBox[{"FF", "<->", "d"}], ",", 
       RowBox[{"FF", "<->", "g"}], ",", 
       RowBox[{"FF", "<->", "bFlat"}], ",", 
       RowBox[{"bFlat", "<->", "d"}], ",", 
       RowBox[{"bFlat", "<->", "c"}], ",", 
       RowBox[{"bFlat", "<->", "g"}], ",", 
       RowBox[{"bFlat", "<->", "eFlat"}], ",", 
       RowBox[{"eFlat", "<->", "aFlat"}], ",", 
       RowBox[{"eFlat", "<->", "f"}], ",", 
       RowBox[{"eFlat", "<->", "c"}], ",", 
       RowBox[{"eFlat", "<->", "g"}], ",", 
       RowBox[{"aFlat", "<->", "c"}], ",", 
       RowBox[{"aFlat", "<->", "f"}], ",", 
       RowBox[{"aFlat", "<->", "bFlat"}], ",", 
       RowBox[{"aFlat", "<->", "dFlat"}], ",", 
       RowBox[{"dFlat", "<->", "f"}], ",", 
       RowBox[{"dFlat", "<->", "bFlat"}], ",", 
       RowBox[{"dFlat", "<->", "eFlat"}], ",", 
       RowBox[{"dFlat", "<->", "gFlat"}], ",", 
       RowBox[{"gFlat", "<->", "eFlat"}], ",", 
       RowBox[{"gFlat", "<->", "bFlat"}], ",", 
       RowBox[{"gFlat", "<->", "dFlat"}]}], "}"}], ",", 
     RowBox[{"VertexLabels", "->", "Automatic"}], ",", 
     RowBox[{"GraphLayout", "->", "\"\<TutteEmbedding\>\""}]}], "]"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.877295712793771*^9, 3.877295715055145*^9}, 
   3.8772957838887434`*^9},
 CellLabel->
  "In[206]:=",ExpressionUUID->"144c216e-4eec-459c-b8cb-6b9c7a3e24ad"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.877295715352023*^9, 3.877295784263728*^9},
 CellLabel->
  "Out[206]=",ExpressionUUID->"a3933051-4522-4c5d-945f-a134feca6e51"]
}, Open  ]],

Cell["Order", "Subsection",
 CellChangeTimes->{{3.8772949421361685`*^9, 
  3.8772949437455263`*^9}},ExpressionUUID->"8eb13114-4c86-4d3b-962c-\
8135621b54b8"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Conclusion", "Section",
 CellChangeTimes->{{3.8772965883626127`*^9, 
  3.8772965893781853`*^9}},ExpressionUUID->"c310a8cd-efa0-4c5a-ad55-\
fef8ab42b558"],

Cell["\<\
I was able to solve several exercises in TAOCP with Mathematica.\
\>", "Text",
 CellChangeTimes->{{3.877296591393773*^9, 
  3.8772966082178755`*^9}},ExpressionUUID->"ad7be681-670c-47a3-8f2d-\
8545ce125453"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1152., 585.6},
WindowMargins->{{
  Automatic, -5.399999999999864}, {-5.399999999999977, Automatic}},
TaggingRules-><|"TryRealOnly" -> False|>,
FrontEndVersion->"13.1 for Microsoft Windows (64-bit) (June 16, 2022)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"2e899b20-85b9-4c0a-b2ba-717454a9e1ad"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 265, 6, 160, "Title",ExpressionUUID->"23510547-758b-498e-b1cc-e16255078060"],
Cell[CellGroupData[{
Cell[870, 32, 205, 4, 67, "Section",ExpressionUUID->"783978e7-073d-4de7-9da9-d53f65d84f32"],
Cell[1078, 38, 623, 21, 35, "Text",ExpressionUUID->"1718777a-80ef-41ee-8c05-ea49fce358d0"],
Cell[CellGroupData[{
Cell[1726, 63, 319, 7, 28, "Input",ExpressionUUID->"40010bc4-9a5f-4c45-b130-903a55ab4dd1"],
Cell[2048, 72, 13350, 259, 435, "Output",ExpressionUUID->"9d99222e-1df7-4e0f-a40d-2b77e6b80e7b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[15435, 336, 349, 8, 28, "Input",ExpressionUUID->"be6251f1-0ee4-4389-baf0-97cda980040c"],
Cell[15787, 346, 9255, 188, 238, "Output",ExpressionUUID->"ff418fd0-2a66-4eec-9dd1-cf077bfa9ddc"]
}, Open  ]],
Cell[25057, 537, 261, 6, 35, "Text",ExpressionUUID->"8abb2d9f-436a-4acb-afb8-bb830e53cf1c"],
Cell[CellGroupData[{
Cell[25343, 547, 1370, 31, 105, "Input",ExpressionUUID->"c296a6bb-835b-44f6-9738-15538067f2a0"],
Cell[26716, 580, 258, 5, 32, "Output",ExpressionUUID->"194ed91e-4132-47db-903b-b7d1d71701d1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[27011, 590, 219, 3, 28, "Input",ExpressionUUID->"f33d7c4d-e620-4981-8a8d-cf95f6e51fc8"],
Cell[27233, 595, 424, 7, 32, "Output",ExpressionUUID->"74ca0031-7808-428f-bcfd-d3a80d263b5e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[27694, 607, 251, 4, 28, "Input",ExpressionUUID->"62ec24f5-e44f-42bd-a014-eb7440fcda52"],
Cell[27948, 613, 86582, 1936, 957, "Output",ExpressionUUID->"1a8c2dc9-e46e-4dba-8237-f2e211f6d507"]
}, Open  ]],
Cell[CellGroupData[{
Cell[114567, 2554, 476, 11, 28, "Input",ExpressionUUID->"42ce2d0c-9e75-4309-9e36-2a1a9de9cdf5"],
Cell[115046, 2567, 196, 4, 32, "Output",ExpressionUUID->"53fa4aca-a6aa-47ec-9840-b50f5450581e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[115279, 2576, 440, 10, 28, "Input",ExpressionUUID->"6252ebcd-9cc8-4c3e-a834-d1fc4d4f6881"],
Cell[115722, 2588, 173, 3, 32, "Output",ExpressionUUID->"eeaa6233-e9fa-4e19-be20-588d31a66dc4"]
}, Open  ]],
Cell[115910, 2594, 283, 6, 35, "Text",ExpressionUUID->"e333f069-bd4f-468e-a05d-f5f4ffb5ddc9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[116230, 2605, 158, 3, 67, "Section",ExpressionUUID->"938282ed-1f4e-4651-ae92-d9e0412a1a09"],
Cell[116391, 2610, 215, 5, 35, "Text",ExpressionUUID->"820b0c65-ea86-4609-97e2-2dcd236a42f3"],
Cell[116609, 2617, 258, 6, 35, "Text",ExpressionUUID->"484a6962-18fa-415f-8235-48e8737599e9"],
Cell[CellGroupData[{
Cell[116892, 2627, 227, 3, 28, "Input",ExpressionUUID->"ae69387c-831a-493e-b651-bb03f11a6aaf"],
Cell[117122, 2632, 1928, 35, 359, "Output",ExpressionUUID->"b8c4ae9e-920e-47eb-a8dd-8639ff565ada"]
}, Open  ]],
Cell[CellGroupData[{
Cell[119087, 2672, 792, 20, 28, "Input",ExpressionUUID->"0ba47069-28dd-4b7f-a0ea-9192e9c48baa"],
Cell[119882, 2694, 1877, 33, 331, "Output",ExpressionUUID->"17a44d1b-43c2-4d87-a606-ef93daeb5d8c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[121796, 2732, 948, 23, 48, "Input",ExpressionUUID->"564178b2-11a3-477b-aa16-af52dbf8c1e7"],
Cell[122747, 2757, 154, 2, 32, "Output",ExpressionUUID->"5d52baf7-fc6a-425e-8b7e-9a703c0055a1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[122938, 2764, 1060, 25, 48, "Input",ExpressionUUID->"8f2327e6-cc7b-4d2a-8bdd-f327feae0186"],
Cell[124001, 2791, 650, 16, 32, "Output",ExpressionUUID->"474dc61a-a62b-4976-a34b-01345dde26ff"]
}, Open  ]],
Cell[CellGroupData[{
Cell[124688, 2812, 272, 5, 28, "Input",ExpressionUUID->"ba127e6f-8c6a-4047-b352-6a213255dd03"],
Cell[124963, 2819, 15812, 497, 491, "Output",ExpressionUUID->"3ae698b1-8bc4-4448-9258-1a6936d2a340"]
}, Open  ]],
Cell[CellGroupData[{
Cell[140812, 3321, 308, 6, 28, "Input",ExpressionUUID->"c90720f0-425c-4ca6-a6ab-c08c27da366a"],
Cell[141123, 3329, 152, 2, 32, "Output",ExpressionUUID->"7c10de78-8e13-481e-9928-258ca71eae9d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[141312, 3336, 476, 11, 28, "Input",ExpressionUUID->"7670efde-f0cf-4dee-b663-78a320dbfa58"],
Cell[141791, 3349, 26659, 494, 611, "Output",ExpressionUUID->"5f2b1e88-edf2-4ff4-92ec-0fbc50cbea75"]
}, Open  ]],
Cell[CellGroupData[{
Cell[168487, 3848, 790, 20, 28, "Input",ExpressionUUID->"da2a7170-bc92-4504-ad48-55e8a67d7bd0"],
Cell[169280, 3870, 1857, 33, 276, "Output",ExpressionUUID->"18133ce4-440a-4836-b382-4b74a4fa1799"]
}, Open  ]],
Cell[CellGroupData[{
Cell[171174, 3908, 992, 24, 48, "Input",ExpressionUUID->"7ea04af8-14ba-4287-a623-2ae9a4f6d5b5"],
Cell[172169, 3934, 4080, 83, 405, "Output",ExpressionUUID->"c4e412d6-25fe-4e64-99d7-7b897f7855e1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[176286, 4022, 1105, 26, 48, "Input",ExpressionUUID->"6e4ff799-4678-4e8c-8802-a6ef4878bb83"],
Cell[177394, 4050, 155, 2, 32, "Output",ExpressionUUID->"81bb6ad9-1a2a-4631-ba62-831c0535f6d9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[177586, 4057, 2882, 53, 103, "Input",ExpressionUUID->"9d928a54-75f4-44d1-bfb9-26049db1a431"],
Cell[180471, 4112, 671, 16, 32, "Output",ExpressionUUID->"a3be9754-8553-4fdb-8542-926e02b4bbbe"]
}, Open  ]],
Cell[181157, 4131, 2863, 54, 103, "Input",ExpressionUUID->"ca12cb99-8dd5-4902-bf0d-7172bcb4600a"],
Cell[CellGroupData[{
Cell[184045, 4189, 2899, 55, 93, "Input",ExpressionUUID->"3d80461f-8d40-491b-9921-92e330c551fc"],
Cell[186947, 4246, 650, 16, 32, "Output",ExpressionUUID->"405a1890-997e-4fad-b532-0f00ab30920f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[187634, 4267, 2052, 38, 104, "Input",ExpressionUUID->"c989af07-f08b-4a6e-8725-5c31aa4e7d0f"],
Cell[189689, 4307, 648, 16, 32, "Output",ExpressionUUID->"3e9aa0bb-0222-443c-984c-7c853f7c1fbb"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[190386, 4329, 209, 4, 67, "Section",ExpressionUUID->"e5619394-c8c3-4629-a93d-5d930f6dd6db"],
Cell[190598, 4335, 219, 4, 35, "Text",ExpressionUUID->"0a3d45db-3116-47d7-bcfc-bb6646137ec2"],
Cell[CellGroupData[{
Cell[190842, 4343, 230, 3, 28, "Input",ExpressionUUID->"68f857c8-c32c-41a1-9aff-e48c4530d5f1"],
Cell[191075, 4348, 2342, 41, 359, "Output",ExpressionUUID->"536746bb-c59f-43df-ab08-a9d2f64ff638"]
}, Open  ]],
Cell[CellGroupData[{
Cell[193454, 4394, 278, 5, 28, "Input",ExpressionUUID->"eeebe44a-c32f-47df-adab-b6fa20859b16"],
Cell[193735, 4401, 149, 2, 32, "Output",ExpressionUUID->"14e92b70-915c-47cd-b351-0726cf04ed75"]
}, Open  ]],
Cell[193899, 4406, 167, 3, 35, "Text",ExpressionUUID->"57109d7a-30b7-4484-b397-28b280a05647"]
}, Open  ]],
Cell[CellGroupData[{
Cell[194103, 4414, 160, 3, 67, "Section",ExpressionUUID->"e74b2402-53dc-4f2b-865a-ddb7cbabe3e8"],
Cell[194266, 4419, 279, 6, 35, "Text",ExpressionUUID->"15b27fb6-0ee4-4fe5-b35b-253275c10ebe"],
Cell[CellGroupData[{
Cell[194570, 4429, 234, 3, 28, "Input",ExpressionUUID->"c4f3f6e7-518c-4bde-8712-df1a757a5fbb"],
Cell[194807, 4434, 6504, 95, 205, "Output",ExpressionUUID->"a5b9312c-1215-4851-87e7-0d1d75df1fb0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[201348, 4534, 273, 5, 28, "Input",ExpressionUUID->"12e32225-583e-444b-8383-69620b503cf5"],
Cell[201624, 4541, 152, 2, 32, "Output",ExpressionUUID->"02d1e6da-806d-416a-b544-a16619606e66"]
}, Open  ]],
Cell[CellGroupData[{
Cell[201813, 4548, 333, 6, 28, "Input",ExpressionUUID->"058dbe4c-21a5-4af4-beab-b1d0f1d666ce"],
Cell[202149, 4556, 175, 2, 32, "Output",ExpressionUUID->"68930ea9-c25f-4ae7-94d2-aa2577a05a07"]
}, Open  ]],
Cell[202339, 4561, 185, 3, 35, "Text",ExpressionUUID->"98bbe57f-8ece-485d-b111-911b3b9d25b3"],
Cell[CellGroupData[{
Cell[202549, 4568, 284, 5, 28, "Input",ExpressionUUID->"c2230d97-da35-44f3-a993-3f93dca4fdee"],
Cell[202836, 4575, 693, 11, 32, "Output",ExpressionUUID->"880bcbd5-10ef-4fa9-9f5c-82a35e1bffc0"]
}, Open  ]],
Cell[203544, 4589, 203, 3, 35, "Text",ExpressionUUID->"7cf7c94c-addf-47da-875a-d27a9491605a"],
Cell[CellGroupData[{
Cell[203772, 4596, 234, 3, 28, "Input",ExpressionUUID->"c0254b0e-358c-4976-ad5f-4f8650e53a66"],
Cell[204009, 4601, 40914, 747, 117, "Output",ExpressionUUID->"044e32cf-c194-4f4d-85db-44594355477b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[244960, 5353, 269, 4, 28, "Input",ExpressionUUID->"fec78320-b90e-4726-8f44-d2d9a8d7d13f"],
Cell[245232, 5359, 22135, 433, 96, "Output",ExpressionUUID->"ea4ffc2b-e99b-45d5-b390-69ee881abe42"]
}, Open  ]],
Cell[CellGroupData[{
Cell[267404, 5797, 284, 5, 28, "Input",ExpressionUUID->"cce883ae-2892-4521-a4b6-d5d2346c62ad"],
Cell[267691, 5804, 10860, 172, 205, "Output",ExpressionUUID->"0d2f4930-86c1-4d62-80da-87d5c2e6bb56"]
}, Open  ]],
Cell[CellGroupData[{
Cell[278588, 5981, 340, 6, 28, "Input",ExpressionUUID->"add4b26e-094f-48bc-b33e-d319ca88f570"],
Cell[278931, 5989, 10890, 171, 318, "Output",ExpressionUUID->"b1772741-29a2-4760-b65a-5703f55ffbca"]
}, Open  ]],
Cell[CellGroupData[{
Cell[289858, 6165, 389, 7, 28, "Input",ExpressionUUID->"435bffee-dc2c-4f22-b693-f2c464a0f8ef"],
Cell[290250, 6174, 10058, 158, 565, "Output",ExpressionUUID->"9a1035e2-9305-484c-91f6-cd6ce7ad7add"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[300357, 6338, 160, 3, 67, "Section",ExpressionUUID->"e409150f-59fd-4580-a52a-1449698f85e6"],
Cell[300520, 6343, 575, 14, 58, "Text",ExpressionUUID->"a3d90864-4c79-45cf-a794-8469ba49adff"],
Cell[301098, 6359, 327, 7, 35, "Text",ExpressionUUID->"61a7e904-7694-4a46-a59d-f4a264c02944"],
Cell[CellGroupData[{
Cell[301450, 6370, 230, 3, 28, "Input",ExpressionUUID->"b95c413d-4f63-468e-b246-75e871c98fdf"],
Cell[301683, 6375, 12879, 336, 527, "Output",ExpressionUUID->"a4311c77-bbdd-4ff6-b96f-d4739efd11d9"]
}, Open  ]],
Cell[314577, 6714, 347, 7, 58, "Text",ExpressionUUID->"189a61b3-c919-476a-825a-df4b796a31d4"],
Cell[314927, 6723, 177, 3, 35, "Text",ExpressionUUID->"94031fed-a0f2-4409-9bf2-0d22e1b51424"],
Cell[315107, 6728, 234, 6, 35, "Text",ExpressionUUID->"98e13d10-fc96-4aeb-865b-08686a7e713c"],
Cell[CellGroupData[{
Cell[315366, 6738, 278, 5, 28, "Input",ExpressionUUID->"25cd1a7e-51ff-47c3-b89e-94feee82959f"],
Cell[315647, 6745, 827, 14, 71, "Output",ExpressionUUID->"030fbd2d-c7eb-45c7-b269-abb1e03c9d3d"]
}, Open  ]],
Cell[316489, 6762, 310, 6, 28, "Input",ExpressionUUID->"a9048f6b-2126-4139-aaf3-c9b453c23804"],
Cell[316802, 6770, 74023, 1645, 791, "Input",ExpressionUUID->"414bbd95-dd0c-4eb6-989e-715c2287b2ee"],
Cell[390828, 8417, 144, 3, 35, "Text",ExpressionUUID->"885da1b7-ec20-4681-9388-981e6dd608fb"],
Cell[390975, 8422, 185, 3, 35, "Text",ExpressionUUID->"e9d5fcc8-224d-4e70-b9d1-7526d892abf7"],
Cell[391163, 8427, 228, 5, 35, "Text",ExpressionUUID->"55bdd4b6-fae6-45f4-9b59-f36f824428cf"],
Cell[391394, 8434, 171, 3, 35, "Text",ExpressionUUID->"7d9dd67b-8750-46ff-9df4-789f6ee357e6"],
Cell[CellGroupData[{
Cell[391590, 8441, 181, 2, 28, "Input",ExpressionUUID->"57500bd9-84cf-4ad1-9c2e-245b04ae8106"],
Cell[391774, 8445, 242, 3, 32, "Output",ExpressionUUID->"cc92e0ac-9ee6-446b-b6ed-aaffb1097b1e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[392053, 8453, 562, 12, 28, "Input",ExpressionUUID->"6e016324-642a-4fd2-b5cb-83d4070cbdcc"],
Cell[392618, 8467, 736, 14, 28, "Message",ExpressionUUID->"4d4342f0-b094-402d-bbd9-dd489551e27c"],
Cell[393357, 8483, 978, 18, 28, "Message",ExpressionUUID->"48347a54-3901-44ec-8b09-b13915addccd"],
Cell[394338, 8503, 12974, 338, 527, "Output",ExpressionUUID->"3cff55b4-e29f-49de-b316-f78bf7deeb13"]
}, Open  ]],
Cell[407327, 8844, 173, 3, 35, "Text",ExpressionUUID->"3dbfdf04-c32d-45c2-bd70-e8ef9abdb1e8"],
Cell[CellGroupData[{
Cell[407525, 8851, 185, 3, 28, "Input",ExpressionUUID->"d8b2b882-c9d5-4a8d-997d-34330bd4c81f"],
Cell[407713, 8856, 217, 4, 32, "Output",ExpressionUUID->"fc84b8c3-5fb7-4262-9d79-65b856288cb2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[407967, 8865, 424, 11, 28, "Input",ExpressionUUID->"c0617d92-db9d-4e6c-b5d8-2ed52384b76e"],
Cell[408394, 8878, 12828, 335, 527, "Output",ExpressionUUID->"96d0ace4-14c1-4345-ae06-415e861e2e4b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[421259, 9218, 342, 8, 28, "Input",ExpressionUUID->"5cb61c99-53fe-4f39-99f3-eb202971dc3b"],
Cell[421604, 9228, 5271, 118, 161, "Output",ExpressionUUID->"6a3a79a4-16f1-47ed-96c4-db23190de81d"]
}, Open  ]],
Cell[426890, 9349, 357, 7, 35, "Text",ExpressionUUID->"8752c286-d44b-4d79-ab3a-60bb8632c2c9"],
Cell[CellGroupData[{
Cell[427272, 9360, 313, 7, 28, "Input",ExpressionUUID->"acff18d1-f0bb-4db5-8e88-a52c3b4b211e"],
Cell[427588, 9369, 395, 9, 48, "Output",ExpressionUUID->"9171d3cc-30d9-4057-86b8-fc8469c9a6b5"]
}, Open  ]],
Cell[427998, 9381, 163, 3, 35, "Text",ExpressionUUID->"74f1443b-f222-4632-89da-8375acc48b39"],
Cell[CellGroupData[{
Cell[428186, 9388, 575, 15, 48, "Input",ExpressionUUID->"ec1b8255-5e39-4d2a-a2b8-a3c442dbf5ee"],
Cell[428764, 9405, 8937, 190, 330, "Output",ExpressionUUID->"24c7bf87-b294-45a6-9bfb-2c433f3f72f5"]
}, Open  ]],
Cell[437716, 9598, 239, 6, 35, "Text",ExpressionUUID->"45209bc5-3461-4f30-99ae-6a99236e5f06"],
Cell[CellGroupData[{
Cell[437980, 9608, 529, 13, 28, "Input",ExpressionUUID->"d695de83-647f-48af-8c97-10c6317055ee"],
Cell[438512, 9623, 158, 3, 32, "Output",ExpressionUUID->"9ff98f65-8867-4469-943f-09043c9140df"]
}, Open  ]],
Cell[438685, 9629, 172, 3, 35, "Text",ExpressionUUID->"4ae28b62-d8a0-4e92-8784-84c1c90da898"]
}, Open  ]],
Cell[CellGroupData[{
Cell[438894, 9637, 158, 3, 53, "Section",ExpressionUUID->"33369eb3-9cd0-47d2-a752-7cb124f348ce"],
Cell[439055, 9642, 416, 12, 35, "Text",ExpressionUUID->"a9a222df-7ecd-486a-a00b-ca074d19a8fd"],
Cell[439474, 9656, 856, 17, 104, "Text",ExpressionUUID->"f3d28020-c60e-4e1d-8eae-29fe5dd5869a"],
Cell[CellGroupData[{
Cell[440355, 9677, 260, 5, 28, "Input",ExpressionUUID->"c0065f40-8f93-4fc4-903c-0267079122bb"],
Cell[440618, 9684, 1387, 28, 281, "Output",ExpressionUUID->"dcafa96e-6936-4a6c-920c-eec84694bad6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[442042, 9717, 304, 7, 28, "Input",ExpressionUUID->"50d5083b-5788-4dee-ad8b-6c6b2a059989"],
Cell[442349, 9726, 157, 3, 32, "Output",ExpressionUUID->"fa2442f8-08b6-4100-ab76-be112cbb2ee2"]
}, Open  ]],
Cell[442521, 9732, 169, 3, 35, "Text",ExpressionUUID->"1c107692-04c0-46cf-8dd1-d5ee81d75a06"],
Cell[CellGroupData[{
Cell[442715, 9739, 307, 7, 28, "Input",ExpressionUUID->"9eaf23ec-eca2-4fe2-bc53-736a0ce3d511"],
Cell[443025, 9748, 1565, 32, 360, "Output",ExpressionUUID->"dce7fa63-1880-466b-a89e-bb0696d194d2"]
}, Open  ]],
Cell[444605, 9783, 184, 3, 35, "Text",ExpressionUUID->"48a8488d-7969-4ab0-af14-6b1f65c70793"],
Cell[CellGroupData[{
Cell[444814, 9790, 340, 7, 28, "Input",ExpressionUUID->"ae4e1d27-f231-4541-ba2b-e96bdeb7ba2b"],
Cell[445157, 9799, 1393, 29, 449, "Output",ExpressionUUID->"ad1d7570-00f2-41b0-893a-03c67e361a3c"]
}, Open  ]],
Cell[446565, 9831, 177, 3, 35, "Text",ExpressionUUID->"44228eec-957e-4ec4-a610-7594b28b2021"],
Cell[CellGroupData[{
Cell[446767, 9838, 510, 12, 28, "Input",ExpressionUUID->"7f97ce75-5056-4771-ae3b-943c9572f108"],
Cell[447280, 9852, 152, 2, 32, "Output",ExpressionUUID->"673502ea-03b3-4b78-a39e-b70217bf5adc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[447469, 9859, 373, 9, 28, "Input",ExpressionUUID->"d71a1fba-1209-40ff-94a2-cde151c2351d"],
Cell[447845, 9870, 181, 2, 32, "Output",ExpressionUUID->"b540e48b-5f41-452e-9d08-cd34cc92c0ed"]
}, Open  ]],
Cell[448041, 9875, 237, 6, 35, "Text",ExpressionUUID->"e9a4c995-5048-44d5-a9de-104acb0e7de4"],
Cell[CellGroupData[{
Cell[448303, 9885, 424, 10, 28, "Input",ExpressionUUID->"12d474c3-9ba0-446e-a9b3-8afba3b1444a"],
Cell[448730, 9897, 239, 5, 32, "Output",ExpressionUUID->"70d66686-13f0-4aa3-8035-42c817b0029b"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[449018, 9908, 211, 4, 53, "Section",ExpressionUUID->"377503dc-bb07-46f9-a0ab-12dbe0c29f66"],
Cell[449232, 9914, 271, 6, 35, "Text",ExpressionUUID->"47d420ef-5a8d-4348-bf4a-36c88b991660"],
Cell[449506, 9922, 236, 6, 35, "Text",ExpressionUUID->"215a8f8d-aea0-4776-8145-0c72bf939508"],
Cell[449745, 9930, 1112, 26, 81, "Text",ExpressionUUID->"5b64afe6-0e78-4dbd-be66-7d091315dad9"],
Cell[450860, 9958, 193, 3, 35, "Text",ExpressionUUID->"cafe51bf-aa24-4b2a-8e73-4cd0246e721e"],
Cell[CellGroupData[{
Cell[451078, 9965, 227, 3, 28, "Input",ExpressionUUID->"93ca2f3d-00f8-4220-b918-d4db072ee393"],
Cell[451308, 9970, 5999, 149, 218, "Output",ExpressionUUID->"2e614366-50ec-467d-81a0-81189b6c4417"]
}, Open  ]],
Cell[457322, 10122, 221, 5, 35, "Text",ExpressionUUID->"03c63fde-dc74-4443-9a24-9048c1976a1f"],
Cell[CellGroupData[{
Cell[457568, 10131, 423, 11, 28, "Input",ExpressionUUID->"14dd17ba-a133-45d6-b7a0-fe3396b23626"],
Cell[457994, 10144, 179, 3, 32, "Output",ExpressionUUID->"2f790999-b6e4-4bcd-a70c-8254c63902ed"]
}, Open  ]],
Cell[458188, 10150, 216, 5, 35, "Text",ExpressionUUID->"45f81a84-f31e-4002-b38e-1dafd6c5f705"],
Cell[CellGroupData[{
Cell[458429, 10159, 298, 7, 28, "Input",ExpressionUUID->"28e363e5-1324-4a6f-b605-7af679803b20"],
Cell[458730, 10168, 3175, 93, 109, "Output",ExpressionUUID->"930053cf-f9a3-4be7-8086-534f4f34397d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[461942, 10266, 255, 5, 28, "Input",ExpressionUUID->"d1c2c8da-1d85-4d18-9a2a-b55111cd6529"],
Cell[462200, 10273, 21978, 431, 96, "Output",ExpressionUUID->"6e94e1de-68e6-44dc-b301-3a237a6c4634"]
}, Open  ]],
Cell[CellGroupData[{
Cell[484215, 10709, 549, 14, 28, "Input",ExpressionUUID->"aeadbf1d-9541-45aa-821c-6a669d2a69f8"],
Cell[484767, 10725, 979686, 16515, 1394, "Output",ExpressionUUID->"3815054d-73a8-4752-a56a-71d3df128503"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1464502, 27246, 207, 4, 67, "Section",ExpressionUUID->"f1bc55f5-93ab-49f2-b390-f07aee86b611"],
Cell[1464712, 27252, 214, 5, 35, "Text",ExpressionUUID->"f79feb40-2901-4509-aaf8-353661a4db93"],
Cell[CellGroupData[{
Cell[1464951, 27261, 220, 3, 28, "Input",ExpressionUUID->"910be229-4d4f-4ff1-a286-5c9a56490152"],
Cell[1465174, 27266, 68934, 1075, 144, "Output",ExpressionUUID->"a1dc6434-a3c9-4742-b456-af4bb8bb6c52"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1534145, 28346, 461, 11, 28, "Input",ExpressionUUID->"303caaf0-74dc-4399-8303-227a670faebb"],
Cell[1534609, 28359, 339, 8, 32, "Output",ExpressionUUID->"5e32a026-ee15-46c8-9582-a7107b9902c3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1534985, 28372, 449, 11, 28, "Input",ExpressionUUID->"5c825c4e-9563-4e37-b7c1-33c8bf5349d0"],
Cell[1535437, 28385, 4493, 93, 235, "Output",ExpressionUUID->"f0507648-818c-49d1-901b-4e1df90d970e"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1539979, 28484, 156, 3, 67, "Section",ExpressionUUID->"354a2f1d-a401-4d09-8e85-ef0248855455"],
Cell[1540138, 28489, 219, 5, 35, "Text",ExpressionUUID->"1cf32807-d185-4d5d-97d2-aad3d730ca39"],
Cell[CellGroupData[{
Cell[1540382, 28498, 224, 3, 28, "Input",ExpressionUUID->"28369a05-1173-4d48-bd5a-fc8aac88a770"],
Cell[1540609, 28503, 1789, 42, 106, "Output",ExpressionUUID->"b83e6fcd-e56e-4aff-8eb1-f43bfa9e7aee"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1542435, 28550, 258, 4, 28, "Input",ExpressionUUID->"4b200441-4b13-41f0-9b23-e60214709564"],
Cell[1542696, 28556, 196, 4, 32, "Output",ExpressionUUID->"0065c3ef-2fd3-4ded-add8-cd69efb19562"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1542929, 28565, 294, 6, 28, "Input",ExpressionUUID->"cd24b0c8-15ae-48b8-958b-7cfeedd15082"],
Cell[1543226, 28573, 1362, 28, 449, "Output",ExpressionUUID->"ff7b27a7-d05e-4911-85c0-3547ff41078d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1544625, 28606, 345, 7, 28, "Input",ExpressionUUID->"7ed3cc3a-b6ad-464b-ab48-4187a203de9a"],
Cell[1544973, 28615, 150, 2, 32, "Output",ExpressionUUID->"3eaa9459-ee9d-4549-9a22-718657a52747"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1545160, 28622, 344, 7, 28, "Input",ExpressionUUID->"fb1bae3e-609c-4119-9216-a064b3252ff4"],
Cell[1545507, 28631, 148, 2, 32, "Output",ExpressionUUID->"5c21ff97-9c94-4e87-b7eb-8144dd3ed1b7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1545692, 28638, 348, 7, 28, "Input",ExpressionUUID->"4044093e-b462-489d-9f2a-cde03454ec09"],
Cell[1546043, 28647, 313, 9, 32, "Output",ExpressionUUID->"4c5e4e53-fe93-4a56-9181-841a00e1e1b6"]
}, Open  ]],
Cell[1546371, 28659, 320, 8, 28, "Input",ExpressionUUID->"beaaf159-1c42-40b5-8db1-64f9943bccc6"],
Cell[CellGroupData[{
Cell[1546716, 28671, 235, 3, 28, "Input",ExpressionUUID->"71f244f9-856d-4517-8928-325ead1d19cf"],
Cell[1546954, 28676, 63808, 1870, 1802, "Output",ExpressionUUID->"9a109a45-6d6a-4bec-89d7-ab3b49b4190b"]
}, Open  ]],
Cell[1610777, 30549, 394, 8, 58, "Text",ExpressionUUID->"e9844d4c-856b-4fc0-aa21-8d315d9932d1"],
Cell[CellGroupData[{
Cell[1611196, 30561, 272, 5, 28, "Input",ExpressionUUID->"1028a19d-f42c-46e1-a73d-3de3f44f8e9b"],
Cell[1611471, 30568, 195, 4, 32, "Output",ExpressionUUID->"c1a979e2-f71f-48e0-be8c-9bf98c709169"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1611703, 30577, 361, 7, 28, "Input",ExpressionUUID->"ca829a6a-42f7-4144-b847-917228996db5"],
Cell[1612067, 30586, 468, 14, 35, "Output",ExpressionUUID->"a279f7a6-d507-4638-97df-e6a367e9bf7e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1612572, 30605, 360, 7, 28, "Input",ExpressionUUID->"aef146b1-3cea-496e-9993-64b5f9a80a31"],
Cell[1612935, 30614, 223, 5, 48, "Output",ExpressionUUID->"f6b3c50e-bf5b-4994-8922-947228ec27c0"]
}, Open  ]],
Cell[1613173, 30622, 203, 3, 35, "Text",ExpressionUUID->"ec61c2df-38b8-4bb3-b3db-aca3c5b0b3a2"],
Cell[CellGroupData[{
Cell[1613401, 30629, 269, 5, 28, "Input",ExpressionUUID->"0428e6a9-6ca0-415a-9f1a-52234171135e"],
Cell[1613673, 30636, 1181, 25, 37, "Output",ExpressionUUID->"53514229-7c2f-4ed4-a534-92414e8c9b9d"]
}, Open  ]],
Cell[1614869, 30664, 531, 9, 81, "Text",ExpressionUUID->"2136cab5-779a-471d-b761-c8830496c1f4"],
Cell[CellGroupData[{
Cell[1615425, 30677, 323, 7, 28, "Input",ExpressionUUID->"7df10eea-6922-4d76-9882-a81b18921fb3"],
Cell[1615751, 30686, 149, 2, 32, "Output",ExpressionUUID->"4820c5b4-7adf-4a33-adb1-6e626d91a283"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1615937, 30693, 320, 7, 28, "Input",ExpressionUUID->"f28405fc-cf3f-4f36-b02a-ba8d28f8bf1b"],
Cell[1616260, 30702, 149, 2, 32, "Output",ExpressionUUID->"ea7b832a-4746-4bb5-8b26-1b242f5cb256"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1616446, 30709, 356, 8, 28, "Input",ExpressionUUID->"9cce0704-70b3-41bc-83d9-683692b4b73e"],
Cell[1616805, 30719, 291, 7, 32, "Output",ExpressionUUID->"a1af7349-8a77-43de-8395-06b6302b7a33"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1617133, 30731, 326, 7, 28, "Input",ExpressionUUID->"c64c4620-96c8-426d-9386-6d7dbe4e2552"],
Cell[1617462, 30740, 175, 2, 32, "Output",ExpressionUUID->"622789cf-fb89-48b9-b89e-0196d13760e7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1617674, 30747, 330, 7, 28, "Input",ExpressionUUID->"30ee2c3a-0972-413c-bc7e-f75e9f86033e"],
Cell[1618007, 30756, 151, 2, 32, "Output",ExpressionUUID->"80c12f11-d2f2-40aa-8a84-0f0763b2af16"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1618195, 30763, 333, 7, 28, "Input",ExpressionUUID->"29eaa051-1bfe-40a5-8d8c-d23d3d96b832"],
Cell[1618531, 30772, 149, 2, 32, "Output",ExpressionUUID->"6fb5acb4-e4d4-4c51-b577-33ba1b0a2be7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1618717, 30779, 328, 7, 28, "Input",ExpressionUUID->"de81d85f-5b4d-4677-9680-e191995ec50b"],
Cell[1619048, 30788, 216, 4, 32, "Output",ExpressionUUID->"f556dd74-5ddb-4109-b04e-d0502250d626"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1619301, 30797, 324, 7, 28, "Input",ExpressionUUID->"d51ff694-92bb-426f-9ad3-d8530ab5d748"],
Cell[1619628, 30806, 206, 4, 32, "Output",ExpressionUUID->"ac3e4e8f-f7bd-44ce-8b82-f31b45978744"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1619871, 30815, 336, 7, 28, "Input",ExpressionUUID->"95d90286-82e6-4840-9e6e-829695f899a3"],
Cell[1620210, 30824, 398, 12, 32, "Output",ExpressionUUID->"f082d83a-e90c-4aff-807d-06999669c2fb"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1620657, 30842, 207, 4, 53, "Section",ExpressionUUID->"67a58b19-40ae-417d-968b-b901f68d626f"],
Cell[1620867, 30848, 516, 15, 36, "Text",ExpressionUUID->"c0fdfbc3-1860-4f21-a211-587ed6684195"],
Cell[1621386, 30865, 217, 4, 35, "Text",ExpressionUUID->"7c4811d2-7337-49a0-8bb1-b2cb12f71f7b"],
Cell[CellGroupData[{
Cell[1621628, 30873, 452, 11, 28, "Input",ExpressionUUID->"1349628f-66ca-41d6-adea-7383af8535ff"],
Cell[1622083, 30886, 303, 6, 32, "Output",ExpressionUUID->"9df0e0d9-971a-49ce-8005-bd2b7638e772"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1622423, 30897, 553, 12, 28, "Input",ExpressionUUID->"43e3f69c-3d4f-4d18-9009-732f78e7e74e"],
Cell[1622979, 30911, 1625, 36, 46, "Output",ExpressionUUID->"795543b1-7254-4797-89c1-eca9d40247c7"]
}, Open  ]],
Cell[1624619, 30950, 186, 3, 35, "Text",ExpressionUUID->"1ffa4959-f0ab-432c-822d-9743351b8210"],
Cell[CellGroupData[{
Cell[1624830, 30957, 646, 15, 28, "Input",ExpressionUUID->"9034293d-9f6e-42f7-9b66-92562bbdb4da"],
Cell[1625479, 30974, 155, 2, 32, "Output",ExpressionUUID->"ac858c79-3c38-4045-9fd5-73f76ff00b25"]
}, Open  ]],
Cell[1625649, 30979, 175, 3, 35, "Text",ExpressionUUID->"64881d5b-4592-41b3-80f3-4f374c4456d4"],
Cell[CellGroupData[{
Cell[1625849, 30986, 608, 13, 28, "Input",ExpressionUUID->"6de05800-1782-4f20-b5aa-04eb6febc276"],
Cell[1626460, 31001, 1627, 36, 46, "Output",ExpressionUUID->"811959e2-429c-4278-b033-1c2c59bc54a1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1628124, 31042, 606, 13, 28, "Input",ExpressionUUID->"e670d664-7c5b-408e-a6f7-aa8ea3ab9ea1"],
Cell[1628733, 31057, 1605, 36, 46, "Output",ExpressionUUID->"ef6df065-5190-476b-bb77-4e7d02cd433b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1630375, 31098, 660, 14, 28, "Input",ExpressionUUID->"095587c7-bb08-4a78-bf90-f3541a17f686"],
Cell[1631038, 31114, 1609, 36, 46, "Output",ExpressionUUID->"14a51cfd-cf6a-43e0-a4ec-023e7e0ee75d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1632684, 31155, 660, 14, 28, "Input",ExpressionUUID->"beca19e1-2c37-401e-a274-d463a331a39c"],
Cell[1633347, 31171, 1613, 36, 46, "Output",ExpressionUUID->"72bb6f36-5f0f-4612-b0e8-2cfd34268160"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1634997, 31212, 708, 14, 28, "Input",ExpressionUUID->"49c6b5f2-a6c4-4216-9a1c-1814931707ec"],
Cell[1635708, 31228, 1611, 36, 46, "Output",ExpressionUUID->"b5167aca-e27c-491e-b167-32ac80e556ce"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1637356, 31269, 373, 7, 28, "Input",ExpressionUUID->"2b0eee8b-83b7-4560-ac32-e48e0d4318d0"],
Cell[1637732, 31278, 359, 9, 35, "Output",ExpressionUUID->"6b881edc-99ef-4d2e-9231-0efa1f71cb1b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1638128, 31292, 351, 7, 28, "Input",ExpressionUUID->"27a11994-fc15-44cf-b29b-6b5ee2287007"],
Cell[1638482, 31301, 305, 7, 35, "Output",ExpressionUUID->"d5f28e7b-4674-4975-80ff-1b7164950720"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1638824, 31313, 392, 8, 28, "Input",ExpressionUUID->"237ec3cf-5b9d-43af-90a7-c1c1dde06516"],
Cell[1639219, 31323, 270, 6, 32, "Output",ExpressionUUID->"665fa158-f585-4c59-844e-61016d1abb8d"]
}, Open  ]],
Cell[1639504, 31332, 486, 15, 35, "Text",ExpressionUUID->"5e808a11-199e-4021-9917-8ac06cb22318"],
Cell[CellGroupData[{
Cell[1640015, 31351, 1697, 37, 42, "Input",ExpressionUUID->"578d6c60-2d17-45fa-aba7-f4ad2c586950"],
Cell[1641715, 31390, 446, 10, 69, "Output",ExpressionUUID->"dec131f5-7278-4fd4-977f-d5f8dc0786c6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1642198, 31405, 1764, 39, 42, "Input",ExpressionUUID->"c404acc8-c121-451b-9dc3-65da08c8e0d8"],
Cell[1643965, 31446, 1613, 36, 46, "Output",ExpressionUUID->"c8302f3a-9426-49fc-a17d-faf383cad76d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1645615, 31487, 1830, 40, 42, "Input",ExpressionUUID->"32f70458-727e-4a75-b18c-75a6c6ed812f"],
Cell[1647448, 31529, 1117, 30, 36, "Output",ExpressionUUID->"ae3f1645-fb4d-4b96-936f-195fcf892611"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1648602, 31564, 1898, 41, 42, "Input",ExpressionUUID->"3acaef4d-5ffb-4e6f-b4f2-9363fc3c5f8f"],
Cell[1650503, 31607, 949, 26, 36, "Output",ExpressionUUID->"eeeb552d-cccf-48ab-937d-9141a2cc8b73"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1651489, 31638, 1962, 42, 42, "Input",ExpressionUUID->"e492ccf9-3661-49ac-92d6-c7f6ddd9bb40"],
Cell[1653454, 31682, 505, 13, 36, "Output",ExpressionUUID->"8e8211aa-2068-451e-a818-aea76dd84bb8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1653996, 31700, 2023, 43, 42, "Input",ExpressionUUID->"ae3655b1-ee90-470a-a27f-feffd9d2f5a2"],
Cell[1656022, 31745, 222, 4, 32, "Output",ExpressionUUID->"248c558c-9308-4d4c-af67-52311751dc1d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1656281, 31754, 886, 22, 48, "Input",ExpressionUUID->"df843fcb-e0d2-45e5-84ba-23fd071fc2b6"],
Cell[1657170, 31778, 675, 17, 32, "Output",ExpressionUUID->"eca5992c-ec7e-4dd4-a3ff-0870a51a21f7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1657882, 31800, 936, 23, 67, "Input",ExpressionUUID->"6cedfb15-cda9-43cf-a239-18868df4fdba"],
Cell[1658821, 31825, 615, 16, 32, "Output",ExpressionUUID->"35097751-9197-45e2-957b-98607a3c59ce"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1659473, 31846, 1053, 25, 86, "Input",ExpressionUUID->"99b98f0d-d9a7-43ba-bc74-159994098ead"],
Cell[1660529, 31873, 844, 26, 48, "Output",ExpressionUUID->"ffe37911-1ca9-404b-8b8a-d3876e7d6311"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1661410, 31904, 1828, 40, 42, "Input",ExpressionUUID->"8d39bc1a-1598-43ea-a82d-0292cc31d3b1"],
Cell[1663241, 31946, 947, 26, 36, "Output",ExpressionUUID->"2a887b7b-48ea-4709-a066-6e870cf92dd5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1664225, 31977, 1959, 42, 42, "Input",ExpressionUUID->"90c8a528-96f9-4d3e-b442-a8698a961341"],
Cell[1666187, 32021, 559, 15, 36, "Output",ExpressionUUID->"4c87465e-5c47-4590-86f9-bbf9603c671c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1666783, 32041, 2025, 43, 42, "Input",ExpressionUUID->"e2d57575-295e-4d70-95a9-f19c6320910d"],
Cell[1668811, 32086, 518, 14, 36, "Output",ExpressionUUID->"ed273602-9d70-451b-9ca2-d00d605efe89"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1669366, 32105, 2099, 45, 42, "Input",ExpressionUUID->"6af6fba6-b764-41ce-acc8-b072c7a241d8"],
Cell[1671468, 32152, 183, 3, 33, "Output",ExpressionUUID->"a5521c15-6707-4002-a7df-c15016e0815f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1671688, 32160, 2202, 48, 42, "Input",ExpressionUUID->"2f794451-773f-47c5-a825-ef70f5fe3ab2"],
Cell[1673893, 32210, 152, 2, 32, "Output",ExpressionUUID->"66d8db49-659e-40ec-8c6e-632b3a425210"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1674082, 32217, 1044, 25, 86, "Input",ExpressionUUID->"68fa68d6-80e6-487c-a7c4-d36172b1e715"],
Cell[1675129, 32244, 244, 5, 32, "Output",ExpressionUUID->"4d781340-761e-42a7-b503-e492b6b15a2c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1675410, 32254, 989, 24, 105, "Input",ExpressionUUID->"fdbeb15b-a175-46c9-9883-8f8242976b8a"],
Cell[1676402, 32280, 305, 8, 35, "Output",ExpressionUUID->"6306fb82-d768-42cd-83eb-c14b1de36357"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1676744, 32293, 1187, 28, 105, "Input",ExpressionUUID->"54034afd-3035-487b-97ad-04e2b001a61c"],
Cell[1677934, 32323, 355, 8, 35, "Output",ExpressionUUID->"b19306fc-7a38-4a91-a6c5-ca0060b12515"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1678326, 32336, 296, 8, 31, "Input",ExpressionUUID->"1659805b-c40d-4328-b4e7-21e7c959b2cb"],
Cell[1678625, 32346, 246, 6, 32, "Output",ExpressionUUID->"388702a0-c21e-4d93-a3c1-1bb34bc736bc"]
}, Open  ]],
Cell[1678886, 32355, 1471, 43, 61, "Text",ExpressionUUID->"890979e1-f072-4a7f-bdbd-58da38819f0c"],
Cell[1680360, 32400, 1050, 28, 37, "Input",ExpressionUUID->"c412be7f-c730-4f04-8fe1-e09a8ba2328d"],
Cell[1681413, 32430, 359, 7, 35, "Text",ExpressionUUID->"051024ee-94ea-4803-ad4e-d5e2ffe8a705"],
Cell[CellGroupData[{
Cell[1681797, 32441, 415, 10, 31, "Input",ExpressionUUID->"0f425208-6338-4e8c-900a-1865b57a5855"],
Cell[1682215, 32453, 175, 2, 32, "Output",ExpressionUUID->"7cbeabae-b1be-4d60-bd72-ccf6b5f8f2a8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1682427, 32460, 1007, 31, 28, "Input",ExpressionUUID->"38e021cb-655e-4370-8d20-6a56e0ce44e6"],
Cell[1683437, 32493, 273, 5, 32, "Output",ExpressionUUID->"221c43aa-99ef-4f55-abf5-ab9952b0809d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1683747, 32503, 1274, 33, 37, "Input",ExpressionUUID->"f6645bfa-4437-47ab-a392-9298d0f52158"],
Cell[1685024, 32538, 1669, 37, 46, "Output",ExpressionUUID->"07304862-7fea-4bfb-b2e7-f2659d4a5c32"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1686730, 32580, 480, 11, 28, "Input",ExpressionUUID->"2141e7bc-9d0e-4599-981c-9bdad3e139fe"],
Cell[1687213, 32593, 1615, 36, 46, "Output",ExpressionUUID->"fccd8364-c904-40d0-9ecc-5a2743b120de"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1688865, 32634, 1538, 41, 56, "Input",ExpressionUUID->"6d420f23-ac99-4e5f-a6b3-8c2d6767fa4b"],
Cell[1690406, 32677, 154, 2, 32, "Output",ExpressionUUID->"27184d93-c198-4dc6-8ba2-9cedc6ebd2fd"]
}, Open  ]],
Cell[1690575, 32682, 244, 6, 35, "Text",ExpressionUUID->"2e18bc08-127f-4232-b257-e1610a064b7d"],
Cell[1690822, 32690, 201, 3, 35, "Text",ExpressionUUID->"cbd000dd-4736-4d86-b186-f022896786ed"],
Cell[CellGroupData[{
Cell[1691048, 32697, 382, 10, 31, "Input",ExpressionUUID->"7c44c7d9-3345-4b3a-afb0-65dbdffeb24c"],
Cell[1691433, 32709, 459, 13, 35, "Output",ExpressionUUID->"4f61518c-f850-40c1-b8f0-cd4a952e05a5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1691929, 32727, 422, 11, 31, "Input",ExpressionUUID->"daffd5bf-0a9e-47ec-a19e-bee749048ec1"],
Cell[1692354, 32740, 195, 4, 32, "Output",ExpressionUUID->"3944c680-64e8-4803-bb60-f078d73c070a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1692586, 32749, 1048, 33, 45, "Input",ExpressionUUID->"21e79cf1-def2-425a-9d9c-8d331dcc3da4"],
Cell[1693637, 32784, 1192, 41, 48, "Output",ExpressionUUID->"44c87d0d-948c-437c-af67-33fdb11d2be9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1694866, 32830, 1185, 36, 45, "Input",ExpressionUUID->"983e1826-7573-4280-bab1-9d88cf1c7206"],
Cell[1696054, 32868, 533, 16, 62, "Output",ExpressionUUID->"11fb042a-ac01-44b3-bba2-20773039dae6"]
}, Open  ]],
Cell[1696602, 32887, 1699, 45, 84, "Input",ExpressionUUID->"6977914b-3425-4870-ab85-f3c04878e61c"],
Cell[1698304, 32934, 174, 3, 35, "Text",ExpressionUUID->"fa2fba8e-6611-4257-bc00-2b3c077448e2"],
Cell[CellGroupData[{
Cell[1698503, 32941, 228, 3, 28, "Input",ExpressionUUID->"93d096fa-7d93-4f5d-91bb-7300a7e1cd81"],
Cell[1698734, 32946, 1619, 36, 46, "Output",ExpressionUUID->"8f563507-b2d7-46b4-814b-6564563550d6"]
}, Open  ]],
Cell[1700368, 32985, 181, 3, 35, "Text",ExpressionUUID->"737c74d3-4c43-47e6-afac-1bc086643129"],
Cell[CellGroupData[{
Cell[1700574, 32992, 456, 11, 28, "Input",ExpressionUUID->"d36b4710-5d26-45aa-886f-19530be6d143"],
Cell[1701033, 33005, 1621, 36, 46, "Output",ExpressionUUID->"f60e8b43-e458-40dd-8a20-9153334b7bba"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1702691, 33046, 573, 14, 28, "Input",ExpressionUUID->"c28ab46b-fcba-4543-a35d-663695d9c30f"],
Cell[1703267, 33062, 156, 3, 32, "Output",ExpressionUUID->"15ac9481-059a-47ec-8a62-22a25055fb81"]
}, Open  ]],
Cell[1703438, 33068, 466, 14, 36, "Text",ExpressionUUID->"0aec37f0-a3cc-4729-8089-8bc8b8702efc"],
Cell[1703907, 33084, 1743, 48, 84, "Input",ExpressionUUID->"8101aa2a-7f98-42e5-b9b5-cd2ae5e0c253"],
Cell[1705653, 33134, 476, 14, 35, "Text",ExpressionUUID->"01e4b662-ea90-44d0-b429-0a885d5a2444"],
Cell[CellGroupData[{
Cell[1706154, 33152, 256, 5, 28, "Input",ExpressionUUID->"8f803f6f-6121-4879-8d93-5d965f9d5a2f"],
Cell[1706413, 33159, 156, 3, 32, "Output",ExpressionUUID->"0c23b221-61b5-4f2b-9bec-1c548c3d413a"]
}, Open  ]],
Cell[1706584, 33165, 165, 3, 35, "Text",ExpressionUUID->"b9d527b0-c86b-44c4-9dcc-93abff7bc51c"],
Cell[CellGroupData[{
Cell[1706774, 33172, 261, 6, 28, "Input",ExpressionUUID->"941e20c6-9427-45dd-9d32-31e6d323cde8"],
Cell[1707038, 33180, 158, 3, 32, "Output",ExpressionUUID->"78c03926-3972-497e-b378-929cc604c966"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1707233, 33188, 525, 14, 28, "Input",ExpressionUUID->"7d016c03-0020-41c6-9ff6-d6e7e68a32cb"],
Cell[1707761, 33204, 158, 3, 32, "Output",ExpressionUUID->"e8586b9a-7a03-4aa5-96f2-537c186f52c0"]
}, Open  ]],
Cell[1707934, 33210, 181, 3, 35, "Text",ExpressionUUID->"ac80fab1-150a-4880-94f1-f85672d0b53f"],
Cell[1708118, 33215, 175, 3, 35, "Text",ExpressionUUID->"a9737c95-db1a-441c-9e12-68c18c57c352"],
Cell[1708296, 33220, 1229, 44, 51, "Text",ExpressionUUID->"778b5eac-b972-419c-914e-a4e0038c3106"],
Cell[1709528, 33266, 683, 11, 81, "Text",ExpressionUUID->"0e7c0785-dd94-4b26-bad4-d8cb0636fa26"],
Cell[1710214, 33279, 771, 20, 58, "Text",ExpressionUUID->"8a044780-93d2-4903-b3c5-9aed69ba0fc0"]
}, Closed]],
Cell[CellGroupData[{
Cell[1711022, 33304, 151, 3, 53, "Section",ExpressionUUID->"7a87d8a7-cdb7-408f-abe0-643ca3585807"],
Cell[1711176, 33309, 439, 8, 58, "Text",ExpressionUUID->"63a55643-8e16-4428-a404-6274316d209c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1711652, 33322, 160, 3, 67, "Section",ExpressionUUID->"df451ef9-e7d5-4b97-9de5-8af05ed10031"],
Cell[1711815, 33327, 396, 13, 35, "Text",ExpressionUUID->"04c4bdd2-0e07-43a8-9636-fe2ea98a8409"],
Cell[1712214, 33342, 226, 5, 35, "Text",ExpressionUUID->"857d67a4-1006-4bfd-b7af-09df5a256abe"],
Cell[CellGroupData[{
Cell[1712465, 33351, 294, 6, 28, "Input",ExpressionUUID->"1636022f-83f2-420a-8c18-58adf08e7fcc"],
Cell[1712762, 33359, 2607, 47, 359, "Output",ExpressionUUID->"4839fc3e-5f72-43e1-b723-1ecb87b6fdf2"]
}, Open  ]],
Cell[1715384, 33409, 186, 3, 35, "Text",ExpressionUUID->"23f9a789-bc9b-49bf-a6f3-365ff71df1ac"],
Cell[CellGroupData[{
Cell[1715595, 33416, 339, 7, 28, "Input",ExpressionUUID->"38cae460-1922-4633-85bb-e92293a27acd"],
Cell[1715937, 33425, 2082, 39, 331, "Output",ExpressionUUID->"a02fafb6-1616-44b0-9b61-b10401f5f41f"]
}, Open  ]],
Cell[1718034, 33467, 193, 3, 35, "Text",ExpressionUUID->"adabd828-5d1e-4c51-b004-5a861872cf39"],
Cell[CellGroupData[{
Cell[1718252, 33474, 450, 10, 28, "Input",ExpressionUUID->"1c037a8b-e36f-4b99-b08e-6afd69ee809a"],
Cell[1718705, 33486, 155, 3, 32, "Output",ExpressionUUID->"34a5c2d0-a12e-4a08-a0f7-aa3e690ca44f"]
}, Open  ]],
Cell[1718875, 33492, 422, 13, 35, "Text",ExpressionUUID->"89ed7285-7597-4038-a6c3-0d798465e151"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1719334, 33510, 160, 3, 67, "Section",ExpressionUUID->"9b42627c-9014-4c84-a31f-2e537cd4d2da"],
Cell[1719497, 33515, 407, 13, 35, "Text",ExpressionUUID->"e6b938bb-c17e-4861-bb6d-5330253ba6fa"],
Cell[1719907, 33530, 185, 3, 35, "Text",ExpressionUUID->"8463d93f-95c4-4007-aff0-d1c47bb44b8b"],
Cell[CellGroupData[{
Cell[1720117, 33537, 315, 7, 28, "Input",ExpressionUUID->"db1c366f-2b19-488a-a1d2-4740ebf39774"],
Cell[1720435, 33546, 1503664, 25621, 7129, "Output",ExpressionUUID->"2b5192e4-2e25-44b1-9df3-af7c32a57c12"]
}, Open  ]],
Cell[3224114, 59170, 537, 11, 48, "Input",ExpressionUUID->"7bb5ee4f-05bd-436a-b26b-2368d6356f35"],
Cell[CellGroupData[{
Cell[3224676, 59185, 353, 8, 28, "Input",ExpressionUUID->"0958d33a-fa9c-451e-b207-d46c340d2a4d"],
Cell[3225032, 59195, 182, 3, 32, "Output",ExpressionUUID->"4932b8b0-74dc-4465-8caa-6938121147c4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3225251, 59203, 234, 6, 28, "Input",ExpressionUUID->"566f1510-5226-4d4f-beb5-2f9fbb8d2385"],
Cell[3225488, 59211, 2050, 37, 355, "Output",ExpressionUUID->"60853acc-7e56-4cd3-82af-4010b0f04205"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3227575, 59253, 345, 8, 28, "Input",ExpressionUUID->"676fd549-2ed8-4749-8e34-8a533459d74a"],
Cell[3227923, 59263, 2523, 44, 355, "Output",ExpressionUUID->"f3ef97f8-4fdf-49a3-934a-a7ac4c999acf"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3230483, 59312, 552, 14, 28, "Input",ExpressionUUID->"a0338716-74bc-41d9-9a71-8196b5d9ae83"],
Cell[3231038, 59328, 181, 3, 32, "Output",ExpressionUUID->"b6551e57-6ad5-4008-bc67-2ccae7ca3361"]
}, Open  ]],
Cell[3231234, 59334, 475, 14, 35, "Text",ExpressionUUID->"b22b14eb-da45-4f34-a5fd-0babfdf85212"],
Cell[3231712, 59350, 351, 7, 35, "Text",ExpressionUUID->"1a4d2670-64cb-466a-99d2-3625320a2e40"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3232100, 59362, 156, 3, 67, "Section",ExpressionUUID->"3400f2a2-d291-4791-9e98-1142e6e6452c"],
Cell[3232259, 59367, 205, 3, 35, "Text",ExpressionUUID->"b43455b2-aa89-4d07-801e-45a33054b78b"],
Cell[CellGroupData[{
Cell[3232489, 59374, 281, 6, 28, "Input",ExpressionUUID->"1fff6cc0-7205-4e0f-a897-8a9aee17f64c"],
Cell[3232773, 59382, 155, 3, 32, "Output",ExpressionUUID->"eb4dac2e-648b-4c6e-a287-49afd7b03369"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3232965, 59390, 282, 6, 28, "Input",ExpressionUUID->"7c978bb0-2956-47de-9843-4cd016bbea2f"],
Cell[3233250, 59398, 152, 3, 32, "Output",ExpressionUUID->"55e46fc5-d41a-47a2-948b-a0d55a58ac4e"]
}, Open  ]],
Cell[3233417, 59404, 162, 3, 35, "Text",ExpressionUUID->"92e6a2c8-ce46-407e-b75e-d8150be4ed00"],
Cell[CellGroupData[{
Cell[3233604, 59411, 368, 8, 28, "Input",ExpressionUUID->"fd687cd5-a61d-4f75-bafb-9b6ff4f6bc42"],
Cell[3233975, 59421, 3458, 64, 567, "Output",ExpressionUUID->"7726f266-a336-4ba6-9cc2-400e8906babd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3237470, 59490, 271, 5, 28, "Input",ExpressionUUID->"4c475ab8-4e7b-4f9d-9cf1-f575e37def0e"],
Cell[3237744, 59497, 22130, 434, 96, "Output",ExpressionUUID->"10349eb7-b623-48c3-a063-4dc55e2a243a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3259911, 59936, 389, 9, 28, "Input",ExpressionUUID->"5968dcde-7b5e-4312-925f-3b89cb02059a"],
Cell[3260303, 59947, 5048, 88, 565, "Output",ExpressionUUID->"9ae9ae6a-499d-4baa-8bb5-190842b00f5c"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[3265400, 60041, 155, 3, 67, "Section",ExpressionUUID->"9f57d2dc-786d-4dd6-adb7-54a3812532cc"],
Cell[3265558, 60046, 848, 26, 35, "Text",ExpressionUUID->"0dda2f10-7a04-4b04-9a40-6b40da344d98"],
Cell[CellGroupData[{
Cell[3266431, 60076, 243, 5, 28, "Input",ExpressionUUID->"56fdb04f-419e-4f4d-9af3-106b8586a53c"],
Cell[3266677, 60083, 20042, 387, 654, "Output",ExpressionUUID->"16c866fb-0b5b-4e2a-9ded-ab4a7b6da2fa"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3286756, 60475, 261, 5, 28, "Input",ExpressionUUID->"b6424514-4963-4d53-8fd7-48113cd5ed58"],
Cell[3287020, 60482, 1348, 35, 32, "Output",ExpressionUUID->"f03940e6-f9aa-4cd2-a6f4-1e46fb41fa90"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3288405, 60522, 298, 6, 28, "Input",ExpressionUUID->"8fadd81b-6cad-4ca7-be03-9e5e3f2c426e"],
Cell[3288706, 60530, 155, 3, 32, "Output",ExpressionUUID->"78734cd1-f373-4567-b102-aca93eb073a1"]
}, Open  ]],
Cell[3288876, 60536, 174, 3, 35, "Text",ExpressionUUID->"1f9245b9-bddf-412d-a456-e22c41f01bd5"],
Cell[CellGroupData[{
Cell[3289075, 60543, 298, 7, 28, "Input",ExpressionUUID->"b778bb10-a686-42ac-b2d8-dbf4ef18b68c"],
Cell[3289376, 60552, 9527, 223, 185, "Output",ExpressionUUID->"ee4b4841-5b65-4738-94fb-3b440e149466"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3298940, 60780, 330, 8, 28, "Input",ExpressionUUID->"860b8b87-2b15-4fe7-abb0-a9c58f98cdcc"],
Cell[3299273, 60790, 154, 3, 32, "Output",ExpressionUUID->"5eecdc57-95a5-4be1-bff6-41a9c90ad0d2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3299464, 60798, 511, 13, 28, "Input",ExpressionUUID->"223ba7d8-cfc9-4e88-8113-e728aa322fd3"],
Cell[3299978, 60813, 423, 9, 32, "Output",ExpressionUUID->"9e14761b-de8b-4f16-9b67-183b3a9f3b29"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3300438, 60827, 510, 13, 28, "Input",ExpressionUUID->"595553f5-f3cd-4e9f-bc1d-8da19da6ba94"],
Cell[3300951, 60842, 1647, 37, 46, "Output",ExpressionUUID->"c1aebe95-dbe9-426e-96eb-53638c75061e"]
}, Open  ]],
Cell[3302613, 60882, 220, 4, 35, "Text",ExpressionUUID->"5712bb4d-0426-4714-a142-a71833804867"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3302870, 60891, 158, 3, 67, "Section",ExpressionUUID->"d3562d19-498f-4e21-a474-a2a46ab6f918"],
Cell[3303031, 60896, 418, 12, 35, "Text",ExpressionUUID->"864a8031-aa54-412c-8ac4-e6b8e4818a77"],
Cell[3303452, 60910, 262, 5, 35, "Text",ExpressionUUID->"0d3a7ff9-ea46-4977-9a30-218cc451c83f"],
Cell[CellGroupData[{
Cell[3303739, 60919, 319, 7, 28, "Input",ExpressionUUID->"9af18d7d-f29e-4703-99ed-62593c45ceca"],
Cell[3304061, 60928, 1227, 26, 37, "Output",ExpressionUUID->"9e62960c-c71e-4ffa-8adf-2ddf732e5cf7"]
}, Open  ]],
Cell[3305303, 60957, 566, 15, 58, "Text",ExpressionUUID->"eed58341-fe43-4dec-ab46-3c146b928039"],
Cell[CellGroupData[{
Cell[3305894, 60976, 329, 7, 28, "Input",ExpressionUUID->"6126f726-5452-4c18-8f9d-e935f1190db7"],
Cell[3306226, 60985, 1066, 23, 123, "Output",ExpressionUUID->"d4e520ba-73cf-4568-b212-bcee31114c26"]
}, Open  ]],
Cell[3307307, 61011, 375, 8, 58, "Text",ExpressionUUID->"35504b3b-881e-4fbf-a174-7189501297f5"],
Cell[CellGroupData[{
Cell[3307707, 61023, 455, 10, 28, "Input",ExpressionUUID->"c03e372c-501d-46dc-a007-cd570db632f1"],
Cell[3308165, 61035, 1298, 27, 37, "Output",ExpressionUUID->"3640a98b-ab89-4dd2-8de0-76495c95650a"]
}, Open  ]],
Cell[3309478, 61065, 649, 16, 81, "Text",ExpressionUUID->"863d7b98-7bd3-44c0-aafd-ad0c42c9edb7"],
Cell[3310130, 61083, 274, 6, 58, "Text",ExpressionUUID->"4fdef808-6e45-4317-bf66-7a491db07a8a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3310441, 61094, 159, 3, 67, "Section",ExpressionUUID->"d5e6f787-64c8-4cbf-a77b-46b5cfffbc46"],
Cell[3310603, 61099, 221, 5, 35, "Text",ExpressionUUID->"093c2604-e706-4b07-9a5a-04bbee4f069f"],
Cell[CellGroupData[{
Cell[3310849, 61108, 280, 6, 28, "Input",ExpressionUUID->"73e6179c-f327-43e2-92a3-26df0deea4ff"],
Cell[3311132, 61116, 153, 3, 32, "Output",ExpressionUUID->"34c399f6-e9f7-4541-b43b-6abf0cf8cade"]
}, Open  ]],
Cell[3311300, 61122, 158, 3, 35, "Text",ExpressionUUID->"21427d86-43b3-45c7-9695-b6c22684e61c"],
Cell[CellGroupData[{
Cell[3311483, 61129, 386, 8, 48, "Input",ExpressionUUID->"af22e6f9-caf1-4f16-8737-eb749250baa8"],
Cell[3311872, 61139, 3362, 61, 566, "Output",ExpressionUUID->"d9525913-48a7-46bf-a887-7f4ffb1f2c88"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[3315283, 61206, 182, 3, 67, "Section",ExpressionUUID->"37e57f09-bcd6-4d61-a703-05acf21eb6d6"],
Cell[3315468, 61211, 203, 3, 35, "Text",ExpressionUUID->"47a7c21a-0b4b-456a-9764-ab03b8887884"],
Cell[CellGroupData[{
Cell[3315696, 61218, 333, 8, 28, "Input",ExpressionUUID->"b737730a-918a-4c74-9889-4536dd42d6dd"],
Cell[3316032, 61228, 8495, 144, 360, "Output",ExpressionUUID->"65830de9-9105-4593-847f-a499a5afc24b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3324564, 61377, 432, 11, 28, "Input",ExpressionUUID->"069e893e-66a8-4aeb-8990-f0aaf484199a"],
Cell[3324999, 61390, 2642, 77, 185, "Output",ExpressionUUID->"c44bbe5d-30d8-4244-b9f8-a6b26c6f54da"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3327678, 61472, 678, 20, 48, "Input",ExpressionUUID->"2ce2a1bf-fa50-47a2-923d-e7ab90f2692b"],
Cell[3328359, 61494, 168743, 3072, 1806, "Output",ExpressionUUID->"adfb77b8-0ae7-4747-b402-90ff3bf9fa85"]
}, Open  ]],
Cell[3497117, 64569, 272, 6, 58, "Text",ExpressionUUID->"adb3d760-cca3-48fd-8ad2-2e8229999d72"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3497426, 64580, 159, 3, 67, "Section",ExpressionUUID->"410ca4b5-d5c8-45a6-bf48-407abc865d99"],
Cell[3497588, 64585, 203, 3, 35, "Text",ExpressionUUID->"0ab7ef0c-6d7b-4fa2-8869-cbbf03a56165"],
Cell[3497794, 64590, 174, 3, 35, "Text",ExpressionUUID->"2a67a265-5a3a-4df1-851a-986de5cee6fc"],
Cell[CellGroupData[{
Cell[3497993, 64597, 333, 7, 28, "Input",ExpressionUUID->"0d2eb06d-7ac9-4804-bf31-c2f184494298"],
Cell[3498329, 64606, 255, 5, 32, "Output",ExpressionUUID->"065c5c03-42ac-4229-ba26-b48a531f90bf"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3498621, 64616, 322, 7, 28, "Input",ExpressionUUID->"2d7a2e06-d8da-44b3-a360-7b33d1efba61"],
Cell[3498946, 64625, 39047, 787, 685, "Output",ExpressionUUID->"2f1ea1fa-e973-4507-9db8-5a634a7fd2dc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3538030, 65417, 292, 7, 28, "Input",ExpressionUUID->"fbf242bb-759b-498b-a5c1-6c33917d0738"],
Cell[3538325, 65426, 13892, 269, 435, "Output",ExpressionUUID->"8cec84b7-d4cd-48c7-ba05-7b99150a683c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3552254, 65700, 298, 7, 28, "Input",ExpressionUUID->"db06c2f6-3c9e-4b7f-a124-bba7c80d8095"],
Cell[3552555, 65709, 255, 7, 32, "Output",ExpressionUUID->"af7492ac-6070-4491-b8f5-45c4982d795a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3552847, 65721, 379, 10, 28, "Input",ExpressionUUID->"8b5f955a-f43b-4e77-b011-f08f40d6e863"],
Cell[3553229, 65733, 915, 28, 32, "Output",ExpressionUUID->"f9984f35-43c8-4ab4-aac5-a1630823d3da"]
}, Open  ]],
Cell[3554159, 65764, 202, 3, 35, "Text",ExpressionUUID->"ba0bd8df-e948-4cad-acc2-2122616a2527"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3554398, 65772, 161, 3, 67, "Section",ExpressionUUID->"609ed06e-1b90-49b4-8a17-96e8b9a30ef4"],
Cell[3554562, 65777, 243, 6, 35, "Text",ExpressionUUID->"63fa2dd0-915a-4e99-b571-63a9125b99d2"],
Cell[3554808, 65785, 261, 6, 35, "Text",ExpressionUUID->"377a34d1-d433-4e0c-8f64-0fff6954e370"],
Cell[3555072, 65793, 357, 7, 58, "Text",ExpressionUUID->"f87a13db-07e1-455e-9aa4-bc6fde075322"],
Cell[CellGroupData[{
Cell[3555454, 65804, 3007, 67, 124, "Input",ExpressionUUID->"c500c54c-b97e-4932-af51-c6641b6cf93d"],
Cell[3558464, 65873, 9277, 196, 504, "Output",ExpressionUUID->"5d08dabe-f247-4d30-ba17-903cce7f604e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3567778, 66074, 2244, 53, 124, "Input",ExpressionUUID->"144c216e-4eec-459c-b8cb-6b9c7a3e24ad"],
Cell[3570025, 66129, 178, 3, 32, "Output",ExpressionUUID->"a3933051-4522-4c5d-945f-a134feca6e51"]
}, Open  ]],
Cell[3570218, 66135, 157, 3, 54, "Subsection",ExpressionUUID->"8eb13114-4c86-4d3b-962c-8135621b54b8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3570412, 66143, 159, 3, 67, "Section",ExpressionUUID->"c310a8cd-efa0-4c5a-ad55-fef8ab42b558"],
Cell[3570574, 66148, 216, 5, 35, "Text",ExpressionUUID->"ad7be681-670c-47a3-8f2d-8545ce125453"]
}, Open  ]]
}, Open  ]]
}
]
*)

