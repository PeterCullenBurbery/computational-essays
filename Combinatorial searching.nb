(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   1714168,      32957]
NotebookOptionsPosition[   1682647,      32438]
NotebookOutlinePosition[   1683126,      32456]
CellTagsIndexPosition[   1683083,      32453]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["\<\
Working through the chapter Combinatorial Searching in \
Knuth\[CloseCurlyQuote]s TAOCP\
\>", "Title",
 CellChangeTimes->{{3.8772759098064613`*^9, 3.8772759265192275`*^9}, 
   3.877275960935297*^9},ExpressionUUID->"23510547-758b-498e-b1cc-\
e16255078060"],

Cell[CellGroupData[{

Cell["Exercise 41", "Section",
 CellChangeTimes->{{3.877274117817298*^9, 3.877274124038843*^9}, {
  3.877275875577175*^9, 
  3.877275876915882*^9}},ExpressionUUID->"783978e7-073d-4de7-9da9-\
d53f65d84f32"],

Cell[TextData[{
 "For what integers n do we have ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["K", "n"], "=", 
    SubscriptBox["P", "n"]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "df7ffc7b-f5d8-45a5-8b0c-78240d08d598"],
 "? ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["K", "n"], "=", 
    SubscriptBox["C", "n"]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "c69a11ef-0864-4777-a487-53a0d3e0ceee"],
 "?"
}], "Text",
 CellChangeTimes->{{3.877274127889776*^9, 
  3.877274151984803*^9}},ExpressionUUID->"1718777a-80ef-41ee-8c05-\
ea49fce358d0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"CompleteGraph", "[", "i", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "9"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8772741551067743`*^9, 3.8772741731893764`*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"40010bc4-9a5f-4c45-b130-903a55ab4dd1"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1}, {}, {
        GraphLayout -> {"CircularEmbedding", "OptimalOrder" -> False}}]]}, 
      TagBox[GraphicsGroupBox[GraphicsComplexBox[{{0., 0.}}, {{}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           DiskBox[1, 0.004014598540145964]}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->"NetworkGraphics",
    FormatType->TraditionalForm,
    FrameTicks->None,
    PlotRangePadding->0.1], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2}, {Null, 
         SparseArray[
         Automatic, {2, 2}, 0, {1, {{0, 1, 2}, {{2}, {1}}}, Pattern}]}, {
        GraphLayout -> {"CircularEmbedding", "OptimalOrder" -> False}}]]}, 
      TagBox[GraphicsGroupBox[GraphicsComplexBox[{{1., 0.}, {-1., 0.}}, {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
           {Arrowheads[0.], ArrowBox[{1, 2}, 0.02261146496815286]}}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           DiskBox[1, 0.02261146496815286], 
           DiskBox[2, 0.02261146496815286]}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->"NetworkGraphics",
    FormatType->TraditionalForm,
    FrameTicks->None], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3}, {Null, 
         SparseArray[
         Automatic, {3, 3}, 0, {
          1, {{0, 2, 4, 6}, {{2}, {3}, {1}, {3}, {1}, {2}}}, Pattern}]}, {
        GraphLayout -> {"CircularEmbedding", "OptimalOrder" -> False}}]]}, 
      TagBox[
       GraphicsGroupBox[
        GraphicsComplexBox[{{-0.8660254037844384, -0.49999999999999933`}, {
         0.8660254037844389, -0.5000000000000012}, {1.8369701987210297`*^-16, 
         1.}}, {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
           ArrowBox[{{1, 2}, {1, 3}, {2, 3}}, 0.020399597244776385`]}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           DiskBox[1, 0.020399597244776385], DiskBox[2, 0.020399597244776385],
            DiskBox[3, 0.020399597244776385]}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->"NetworkGraphics",
    FormatType->TraditionalForm,
    FrameTicks->None], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4}, {Null, 
         SparseArray[
         Automatic, {4, 4}, 0, {
          1, {{0, 3, 6, 9, 12}, {{2}, {3}, {4}, {1}, {3}, {4}, {1}, {2}, {
            4}, {1}, {2}, {3}}}, Pattern}]}, {
        GraphLayout -> "StarEmbedding"}]]}, 
      TagBox[
       GraphicsGroupBox[
        GraphicsComplexBox[{{0., 0.}, {
         0.8660254037844389, -0.5000000000000012}, {1.8369701987210297`*^-16, 
         1.}, {-0.8660254037844386, -0.49999999999999917`}}, {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
           ArrowBox[{{1, 2}, {1, 3}, {1, 4}, {2, 3}, {2, 4}, {3, 4}}, 
            0.020399597244776413`]}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           DiskBox[1, 0.020399597244776413], DiskBox[2, 0.020399597244776413],
            DiskBox[3, 0.020399597244776413], 
           DiskBox[4, 0.020399597244776413]}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->"NetworkGraphics",
    FormatType->TraditionalForm,
    FrameTicks->None], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4, 5}, {Null, 
         SparseArray[
         Automatic, {5, 5}, 0, {
          1, {{0, 4, 8, 12, 16, 20}, {{2}, {3}, {4}, {5}, {1}, {3}, {4}, {
            5}, {1}, {2}, {4}, {5}, {1}, {2}, {3}, {5}, {1}, {2}, {3}, {4}}}, 
           Pattern}]}, {
        GraphLayout -> {"CircularEmbedding", "OptimalOrder" -> False}}]]}, 
      TagBox[
       GraphicsGroupBox[
        GraphicsComplexBox[{{-0.9510565162951538, 
         0.3090169943749484}, {-0.5877852522924726, -0.8090169943749468}, {
         0.5877852522924738, -0.8090169943749481}, {0.9510565162951533, 
         0.30901699437494634`}, {-7.044813998280222*^-16, 1.}}, {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
           ArrowBox[{{1, 2}, {1, 3}, {1, 4}, {1, 5}, {2, 3}, {2, 4}, {2, 5}, {
            3, 4}, {3, 5}, {4, 5}}, 0.021812234931106983`]}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           DiskBox[1, 0.021812234931106983], DiskBox[2, 0.021812234931106983],
            DiskBox[3, 0.021812234931106983], 
           DiskBox[4, 0.021812234931106983], 
           DiskBox[5, 0.021812234931106983]}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->"NetworkGraphics",
    FormatType->TraditionalForm,
    FrameTicks->None], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4, 5, 6}, {Null, 
         SparseArray[
         Automatic, {6, 6}, 0, {
          1, {{0, 5, 10, 15, 20, 25, 30}, {{2}, {3}, {4}, {5}, {6}, {1}, {
            3}, {4}, {5}, {6}, {1}, {2}, {4}, {5}, {6}, {1}, {2}, {3}, {5}, {
            6}, {1}, {2}, {3}, {4}, {6}, {1}, {2}, {3}, {4}, {5}}}, 
           Pattern}]}, {
        GraphLayout -> {"CircularEmbedding", "OptimalOrder" -> False}}]]}, 
      TagBox[
       GraphicsGroupBox[
        GraphicsComplexBox[{{-0.8660254037844389, 
         0.5000000000000008}, {-0.8660254037844384, -0.49999999999999933`}, {
         3.8285686989269494`*^-16, -1.}, {
         0.8660254037844389, -0.5000000000000012}, {0.8660254037844386, 
         0.4999999999999993}, {1.8369701987210297`*^-16, 1.}}, {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
           ArrowBox[{{1, 2}, {1, 3}, {1, 4}, {1, 5}, {1, 6}, {2, 3}, {2, 4}, {
            2, 5}, {2, 6}, {3, 4}, {3, 5}, {3, 6}, {4, 5}, {4, 6}, {5, 6}}, 
            0.02261146496815286]}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           DiskBox[1, 0.02261146496815286], DiskBox[2, 0.02261146496815286], 
           DiskBox[3, 0.02261146496815286], DiskBox[4, 0.02261146496815286], 
           DiskBox[5, 0.02261146496815286], 
           DiskBox[6, 0.02261146496815286]}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->"NetworkGraphics",
    FormatType->TraditionalForm,
    FrameTicks->None], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4, 5, 6, 7}, {Null, 
         SparseArray[
         Automatic, {7, 7}, 0, {
          1, {{0, 6, 12, 18, 24, 30, 36, 42}, {{2}, {3}, {4}, {5}, {6}, {7}, {
            1}, {3}, {4}, {5}, {6}, {7}, {1}, {2}, {4}, {5}, {6}, {7}, {1}, {
            2}, {3}, {5}, {6}, {7}, {1}, {2}, {3}, {4}, {6}, {7}, {1}, {2}, {
            3}, {4}, {5}, {7}, {1}, {2}, {3}, {4}, {5}, {6}}}, Pattern}]}, {
        GraphLayout -> {"CircularEmbedding", "OptimalOrder" -> False}}]]}, 
      TagBox[
       GraphicsGroupBox[
        GraphicsComplexBox[{{-0.7818314824680302, 
         0.6234898018587343}, {-0.9749279121818235, -0.22252093395631342`}, \
{-0.43388373911755757`, -0.9009688679024187}, {
         0.43388373911755884`, -0.9009688679024196}, {
         0.9749279121818237, -0.2225209339563155}, {0.7818314824680294, 
         0.6234898018587326}, {-7.044813998280222*^-16, 1.}}, {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
           ArrowBox[{{1, 2}, {1, 3}, {1, 4}, {1, 5}, {1, 6}, {1, 7}, {2, 3}, {
            2, 4}, {2, 5}, {2, 6}, {2, 7}, {3, 4}, {3, 5}, {3, 6}, {3, 7}, {4,
             5}, {4, 6}, {4, 7}, {5, 6}, {5, 7}, {6, 7}}, 
            0.02220329551621769]}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           DiskBox[1, 0.02220329551621769], DiskBox[2, 0.02220329551621769], 
           DiskBox[3, 0.02220329551621769], DiskBox[4, 0.02220329551621769], 
           DiskBox[5, 0.02220329551621769], DiskBox[6, 0.02220329551621769], 
           DiskBox[7, 0.02220329551621769]}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->"NetworkGraphics",
    FormatType->TraditionalForm,
    FrameTicks->None], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4, 5, 6, 7, 8}, {Null, 
         SparseArray[
         Automatic, {8, 8}, 0, {
          1, {{0, 7, 14, 21, 28, 35, 42, 49, 56}, {{2}, {3}, {4}, {5}, {6}, {
            7}, {8}, {1}, {3}, {4}, {5}, {6}, {7}, {8}, {1}, {2}, {4}, {5}, {
            6}, {7}, {8}, {1}, {2}, {3}, {5}, {6}, {7}, {8}, {1}, {2}, {3}, {
            4}, {6}, {7}, {8}, {1}, {2}, {3}, {4}, {5}, {7}, {8}, {1}, {2}, {
            3}, {4}, {5}, {6}, {8}, {1}, {2}, {3}, {4}, {5}, {6}, {7}}}, 
           Pattern}]}, {
        GraphLayout -> {"CircularEmbedding", "OptimalOrder" -> False}}]]}, 
      TagBox[
       GraphicsGroupBox[
        GraphicsComplexBox[{{-0.707106781186548, 0.7071067811865482}, {-1., 
         1.0106430996148606`*^-15}, {-0.7071067811865471, \
-0.7071067811865468}, {6.049014748177263*^-16, -1.}, {
         0.7071067811865481, -0.7071067811865483}, {
         1., -1.133107779529596*^-15}, {0.707106781186547, 
         0.7071067811865467}, {-7.044813998280222*^-16, 1.}}, {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
           ArrowBox[{{1, 2}, {1, 3}, {1, 4}, {1, 5}, {1, 6}, {1, 7}, {1, 8}, {
            2, 3}, {2, 4}, {2, 5}, {2, 6}, {2, 7}, {2, 8}, {3, 4}, {3, 5}, {3,
             6}, {3, 7}, {3, 8}, {4, 5}, {4, 6}, {4, 7}, {4, 8}, {5, 6}, {5, 
            7}, {5, 8}, {6, 7}, {6, 8}, {7, 8}}, 0.02261146496815286]}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           DiskBox[1, 0.02261146496815286], DiskBox[2, 0.02261146496815286], 
           DiskBox[3, 0.02261146496815286], DiskBox[4, 0.02261146496815286], 
           DiskBox[5, 0.02261146496815286], DiskBox[6, 0.02261146496815286], 
           DiskBox[7, 0.02261146496815286], 
           DiskBox[8, 0.02261146496815286]}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->"NetworkGraphics",
    FormatType->TraditionalForm,
    FrameTicks->None], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9}, {Null, 
         SparseArray[
         Automatic, {9, 9}, 0, {
          1, {{0, 8, 16, 24, 32, 40, 48, 56, 64, 72}, {{2}, {3}, {4}, {5}, {
            6}, {7}, {8}, {9}, {1}, {3}, {4}, {5}, {6}, {7}, {8}, {9}, {1}, {
            2}, {4}, {5}, {6}, {7}, {8}, {9}, {1}, {2}, {3}, {5}, {6}, {7}, {
            8}, {9}, {1}, {2}, {3}, {4}, {6}, {7}, {8}, {9}, {1}, {2}, {3}, {
            4}, {5}, {7}, {8}, {9}, {1}, {2}, {3}, {4}, {5}, {6}, {8}, {9}, {
            1}, {2}, {3}, {4}, {5}, {6}, {7}, {9}, {1}, {2}, {3}, {4}, {5}, {
            6}, {7}, {8}}}, Pattern}]}, {
        GraphLayout -> {"CircularEmbedding", "OptimalOrder" -> False}}]]}, 
      TagBox[
       GraphicsGroupBox[
        GraphicsComplexBox[{{-0.6427876096865398, 
         0.7660444431189786}, {-0.9848077530122081, 
         0.17364817766693114`}, {-0.8660254037844384, -0.49999999999999933`}, \
{-0.34202014332566844`, -0.9396926207859079}, {
         0.3420201433256691, -0.9396926207859085}, {
         0.8660254037844389, -0.5000000000000012}, {0.984807753012208, 
         0.17364817766692903`}, {0.6427876096865388, 
         0.7660444431189772}, {-7.044813998280222*^-16, 1.}}, {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
           ArrowBox[{{1, 2}, {1, 3}, {1, 4}, {1, 5}, {1, 6}, {1, 7}, {1, 8}, {
            1, 9}, {2, 3}, {2, 4}, {2, 5}, {2, 6}, {2, 7}, {2, 8}, {2, 9}, {3,
             4}, {3, 5}, {3, 6}, {3, 7}, {3, 8}, {3, 9}, {4, 5}, {4, 6}, {4, 
            7}, {4, 8}, {4, 9}, {5, 6}, {5, 7}, {5, 8}, {5, 9}, {6, 7}, {6, 
            8}, {6, 9}, {7, 8}, {7, 9}, {8, 9}}, 0.022364449578799767`]}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           DiskBox[1, 0.022364449578799767], DiskBox[2, 0.022364449578799767],
            DiskBox[3, 0.022364449578799767], 
           DiskBox[4, 0.022364449578799767], DiskBox[5, 0.022364449578799767],
            DiskBox[6, 0.022364449578799767], 
           DiskBox[7, 0.022364449578799767], DiskBox[8, 0.022364449578799767],
            DiskBox[9, 0.022364449578799767]}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->"NetworkGraphics",
    FormatType->TraditionalForm,
    FrameTicks->None]}], "}"}]], "Output",
 CellChangeTimes->{{3.877274160716116*^9, 3.87727417368928*^9}},
 CellLabel->"Out[2]=",ExpressionUUID->"9d99222e-1df7-4e0f-a40d-2b77e6b80e7b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"PathGraph", "[", 
    RowBox[{"Range", "[", "i", "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "9"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8772741551067743`*^9, 3.8772741859855766`*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"be6251f1-0ee4-4389-baf0-97cda980040c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1}, {}]]}, 
      TagBox[GraphicsGroupBox[GraphicsComplexBox[{{0., 0.}}, {{}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           DiskBox[1, 0.004014598540145964]}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->"NetworkGraphics",
    FormatType->TraditionalForm,
    FrameTicks->None,
    PlotRangePadding->0.1], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2}, {Null, {{1, 2}}}]]}, 
      TagBox[GraphicsGroupBox[GraphicsComplexBox[{{1., 0.}, {-1., 0.}}, {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
           {Arrowheads[0.], ArrowBox[{1, 2}, 0.02261146496815286]}}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           DiskBox[1, 0.02261146496815286], 
           DiskBox[2, 0.02261146496815286]}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->"NetworkGraphics",
    FormatType->TraditionalForm,
    FrameTicks->None], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3}, {Null, {{1, 2}, {2, 3}}}]]}, 
      TagBox[
       GraphicsGroupBox[
        GraphicsComplexBox[{{0., 3.6739403974420594`*^-16}, {1., 
         2.4492935982947064`*^-16}, {2., 0.}}, {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
           ArrowBox[{{1, 2}, {2, 3}}, 0.02261146496815286]}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           DiskBox[1, 0.02261146496815286], DiskBox[2, 0.02261146496815286], 
           DiskBox[3, 0.02261146496815286]}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->"NetworkGraphics",
    FormatType->TraditionalForm,
    FrameTicks->None], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4}, {Null, {{1, 2}, {2, 3}, {3, 4}}}]]}, 
      TagBox[
       GraphicsGroupBox[
        GraphicsComplexBox[{{0., 6.123233995736766*^-16}, {1., 
         4.898587196589413*^-16}, {2., 2.4492935982947064`*^-16}, {3., 0.}}, {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
           ArrowBox[{{1, 2}, {2, 3}, {3, 4}}, 0.030239520958083826`]}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           DiskBox[1, 0.030239520958083826], DiskBox[2, 0.030239520958083826],
            DiskBox[3, 0.030239520958083826], 
           DiskBox[4, 0.030239520958083826]}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->"NetworkGraphics",
    FormatType->TraditionalForm,
    FrameTicks->None], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4, 5}, {Null, {{1, 2}, {2, 3}, {3, 4}, {4, 5}}}]]}, 
      TagBox[
       GraphicsGroupBox[
        GraphicsComplexBox[{{0., 7.347880794884119*^-16}, {1., 
         6.123233995736766*^-16}, {2., 4.898587196589413*^-16}, {3., 
         2.4492935982947064`*^-16}, {4., 0.}}, {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
           ArrowBox[{{1, 2}, {2, 3}, {3, 4}, {4, 5}}, 0.03700564971751412]}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           DiskBox[1, 0.03700564971751412], DiskBox[2, 0.03700564971751412], 
           DiskBox[3, 0.03700564971751412], DiskBox[4, 0.03700564971751412], 
           DiskBox[5, 0.03700564971751412]}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->"NetworkGraphics",
    FormatType->TraditionalForm,
    FrameTicks->None], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4, 5, 6}, {
        Null, {{1, 2}, {2, 3}, {3, 4}, {4, 5}, {5, 6}}}]]}, 
      TagBox[
       GraphicsGroupBox[
        GraphicsComplexBox[{{0., 9.797174393178826*^-16}, {1., 
         8.572527594031472*^-16}, {2., 7.347880794884119*^-16}, {3., 
         4.898587196589412*^-16}, {4., 2.449293598294706*^-16}, {5., 0.}}, {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
           ArrowBox[{{1, 2}, {2, 3}, {3, 4}, {4, 5}, {5, 6}}, 
            0.043048128342245986`]}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           DiskBox[1, 0.043048128342245986], DiskBox[2, 0.043048128342245986],
            DiskBox[3, 0.043048128342245986], 
           DiskBox[4, 0.043048128342245986], DiskBox[5, 0.043048128342245986],
            DiskBox[6, 0.043048128342245986]}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->"NetworkGraphics",
    FormatType->TraditionalForm,
    FrameTicks->None], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4, 5, 6, 7}, {
        Null, {{1, 2}, {2, 3}, {3, 4}, {4, 5}, {5, 6}, {6, 7}}}]]}, 
      TagBox[
       GraphicsGroupBox[
        GraphicsComplexBox[{{0., 1.102182119232618*^-15}, {1., 
         9.797174393178826*^-16}, {2., 8.572527594031472*^-16}, {3., 
         7.347880794884119*^-16}, {4., 4.898587196589412*^-16}, {5., 
         2.449293598294706*^-16}, {6., 0.}}, {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
           ArrowBox[{{1, 2}, {2, 3}, {3, 4}, {4, 5}, {5, 6}, {6, 7}}, 
            0.04847715736040609]}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           DiskBox[1, 0.04847715736040609], DiskBox[2, 0.04847715736040609], 
           DiskBox[3, 0.04847715736040609], DiskBox[4, 0.04847715736040609], 
           DiskBox[5, 0.04847715736040609], DiskBox[6, 0.04847715736040609], 
           DiskBox[7, 0.04847715736040609]}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->"NetworkGraphics",
    FormatType->TraditionalForm,
    FrameTicks->None], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4, 5, 6, 7, 8}, {
        Null, {{1, 2}, {2, 3}, {3, 4}, {4, 5}, {5, 6}, {6, 7}, {7, 8}}}]]}, 
      TagBox[
       GraphicsGroupBox[
        GraphicsComplexBox[{{0., 1.3471114790620886`*^-15}, {1., 
         1.2246467991473533`*^-15}, {2., 1.102182119232618*^-15}, {3., 
         9.797174393178826*^-16}, {4., 7.347880794884119*^-16}, {5., 
         4.898587196589413*^-16}, {6., 2.449293598294707*^-16}, {7., 0.}}, {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
           ArrowBox[{{1, 2}, {2, 3}, {3, 4}, {4, 5}, {5, 6}, {6, 7}, {7, 8}}, 
            0.05338164251207729]}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           DiskBox[1, 0.05338164251207729], DiskBox[2, 0.05338164251207729], 
           DiskBox[3, 0.05338164251207729], DiskBox[4, 0.05338164251207729], 
           DiskBox[5, 0.05338164251207729], DiskBox[6, 0.05338164251207729], 
           DiskBox[7, 0.05338164251207729], 
           DiskBox[8, 0.05338164251207729]}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->"NetworkGraphics",
    FormatType->TraditionalForm,
    FrameTicks->None], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9}, {
        Null, {{1, 2}, {2, 3}, {3, 4}, {4, 5}, {5, 6}, {6, 7}, {7, 8}, {8, 
         9}}}]]}, 
      TagBox[
       GraphicsGroupBox[
        GraphicsComplexBox[{{0., 1.4695761589768238`*^-15}, {1., 
         1.3471114790620886`*^-15}, {2., 1.2246467991473533`*^-15}, {3., 
         1.102182119232618*^-15}, {4., 9.797174393178826*^-16}, {5., 
         7.347880794884119*^-16}, {6., 4.898587196589413*^-16}, {7., 
         2.449293598294707*^-16}, {8., 0.}}, {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
           ArrowBox[{{1, 2}, {2, 3}, {3, 4}, {4, 5}, {5, 6}, {6, 7}, {7, 8}, {
            8, 9}}, 0.05783410138248847]}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           DiskBox[1, 0.05783410138248847], DiskBox[2, 0.05783410138248847], 
           DiskBox[3, 0.05783410138248847], DiskBox[4, 0.05783410138248847], 
           DiskBox[5, 0.05783410138248847], DiskBox[6, 0.05783410138248847], 
           DiskBox[7, 0.05783410138248847], DiskBox[8, 0.05783410138248847], 
           DiskBox[9, 0.05783410138248847]}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->"NetworkGraphics",
    FormatType->TraditionalForm,
    FrameTicks->None]}], "}"}]], "Output",
 CellChangeTimes->{3.8772741863917255`*^9},
 CellLabel->"Out[3]=",ExpressionUUID->"ff418fd0-2a66-4eec-9dd1-cf077bfa9ddc"]
}, Open  ]],

Cell["\<\
I\[CloseCurlyQuote]ll use the new isomorphism functionality introduced in \
recent releases of Mathematica:\
\>", "Text",
 CellChangeTimes->{{3.8772757902827063`*^9, 
  3.8772758030482655`*^9}},ExpressionUUID->"8abb2d9f-436a-4acb-afb8-\
bb830e53cf1c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindGraphIsomorphism", "[", 
  RowBox[{
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1}, {}]]}, 
      TagBox[GraphicsGroupBox[GraphicsComplexBox[{{0., 0.}}, {{}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           DiskBox[1, 0.004014598540145964]}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->"NetworkGraphics",
    FormatType->TraditionalForm,
    FrameTicks->None,
    PlotRangePadding->0.1], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1}, {}, {
        GraphLayout -> {"CircularEmbedding", "OptimalOrder" -> False}}]]}, 
      TagBox[GraphicsGroupBox[GraphicsComplexBox[{{0., 0.}}, {{}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           DiskBox[1, 0.004014598540145964]}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->"NetworkGraphics",
    FormatType->TraditionalForm,
    FrameTicks->None,
    PlotRangePadding->0.1]}], "]"}]], "Input",
 CellChangeTimes->{{3.877274210658759*^9, 3.877274232275937*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"c296a6bb-835b-44f6-9738-15538067f2a0"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\[LeftAssociation]", 
   RowBox[{"1", "\[Rule]", "1"}], "\[RightAssociation]"}], "}"}]], "Output",
 CellChangeTimes->{3.877274233057017*^9},
 CellLabel->"Out[5]=",ExpressionUUID->"194ed91e-4132-47db-903b-b7d1d71701d1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Names", "[", "\"\<*Isom*\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.8772742541981115`*^9, 3.8772742850209923`*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"f33d7c4d-e620-4981-8a8d-cf95f6e51fc8"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"FindGraphIsomorphism\"\>", ",", "\<\"FindIsomers\"\>", 
   ",", "\<\"FindIsomorphicSubgraph\"\>", 
   ",", "\<\"FindSubgraphIsomorphism\"\>", ",", "\<\"IsomorphicGraphQ\"\>", 
   ",", "\<\"IsomorphicSubgraphQ\"\>"}], "}"}]], "Output",
 CellChangeTimes->{{3.8772742590360775`*^9, 3.877274285505273*^9}},
 CellLabel->"Out[8]=",ExpressionUUID->"74ca0031-7808-428f-bcfd-d3a80d263b5e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Information", "/@", 
  RowBox[{"Names", "[", "\"\<*Isom*\>\"", "]"}]}]], "Input",
 CellChangeTimes->{{3.877274262161058*^9, 3.8772742889272203`*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"62ec24f5-e44f-42bd-a014-eb7440fcda52"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/FindGraphIsomorphism",
                ButtonNote->"paclet:ref/FindGraphIsomorphism"],
               "\"paclet:ref/FindGraphIsomorphism\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"FindGraphIsomorphism\\\", \\\
\"[\\\", RowBox[{SubscriptBox[StyleBox[\\\"g\\\", \\\"TI\\\"], StyleBox[\\\"1\
\\\", \\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"g\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]]}], \\\"]\\\"}]\\) finds an isomorphism that \
maps the graph \\!\\(\\*SubscriptBox[StyleBox[\\\"g\\\", \\\"TI\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]]\\) to \\!\\(\\*SubscriptBox[StyleBox[\\\"g\\\
\", \\\"TI\\\"], StyleBox[\\\"2\\\", \\\"TR\\\"]]\\) by renaming vertices.\\n\
\\!\\(\\*RowBox[{\\\"FindGraphIsomorphism\\\", \\\"[\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"g\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"g\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"n\\\", \
\\\"TI\\\"]}], \\\"]\\\"}]\\) finds at most \\!\\(\\*StyleBox[\\\"n\\\", \
\\\"TI\\\"]\\) isomorphisms. \
\\n\\!\\(\\*RowBox[{\\\"FindGraphIsomorphism\\\", \\\"[\\\", RowBox[{RowBox[{\
\\\"{\\\", RowBox[{RowBox[{StyleBox[\\\"v\\\", \\\"TI\\\"], \\\"\[Rule]\\\", \
StyleBox[\\\"w\\\", \\\"TI\\\"]}], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \
\\\"TR\\\"]}], \\\"}\\\"}], \\\",\\\", \\\"\[Ellipsis]\\\"}], \\\"]\\\"}]\\) \
uses rules \\!\\(\\*RowBox[{StyleBox[\\\"v\\\", \\\"TI\\\"], \\\"\[Rule]\\\", \
StyleBox[\\\"w\\\", \\\"TI\\\"]}]\\) to specify the graph \
\\!\\(\\*StyleBox[\\\"g\\\", \\\"TI\\\"]\\).\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", 
                    "paclet:ref/FindGraphIsomorphism", 
                    "paclet:ref/FindGraphIsomorphism", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/\
FindGraphIsomorphism.html"], None}, 
                    "http://reference.wolfram.com/language/ref/\
FindGraphIsomorphism.html", "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Options\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Options\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Options", "Tooltip"]& ], 
                    RowBox[{"Method", "\[Rule]", "Automatic"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", 
                    RowBox[{"Protected", ",", "ReadProtected"}], "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`FindGraphIsomorphism\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/FindGraphIsomorphism",
                ButtonNote->"paclet:ref/FindGraphIsomorphism"],
               "\"paclet:ref/FindGraphIsomorphism\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"FindGraphIsomorphism\\\", \\\
\"[\\\", RowBox[{SubscriptBox[StyleBox[\\\"g\\\", \\\"TI\\\"], StyleBox[\\\"1\
\\\", \\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"g\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]]}], \\\"]\\\"}]\\) finds an isomorphism that \
maps the graph \\!\\(\\*SubscriptBox[StyleBox[\\\"g\\\", \\\"TI\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]]\\) to \\!\\(\\*SubscriptBox[StyleBox[\\\"g\\\
\", \\\"TI\\\"], StyleBox[\\\"2\\\", \\\"TR\\\"]]\\) by renaming vertices.\\n\
\\!\\(\\*RowBox[{\\\"FindGraphIsomorphism\\\", \\\"[\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"g\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"g\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"n\\\", \
\\\"TI\\\"]}], \\\"]\\\"}]\\) finds at most \\!\\(\\*StyleBox[\\\"n\\\", \
\\\"TI\\\"]\\) isomorphisms. \
\\n\\!\\(\\*RowBox[{\\\"FindGraphIsomorphism\\\", \\\"[\\\", RowBox[{RowBox[{\
\\\"{\\\", RowBox[{RowBox[{StyleBox[\\\"v\\\", \\\"TI\\\"], \\\"\[Rule]\\\", \
StyleBox[\\\"w\\\", \\\"TI\\\"]}], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \
\\\"TR\\\"]}], \\\"}\\\"}], \\\",\\\", \\\"\[Ellipsis]\\\"}], \\\"]\\\"}]\\) \
uses rules \\!\\(\\*RowBox[{StyleBox[\\\"v\\\", \\\"TI\\\"], \\\"\[Rule]\\\", \
StyleBox[\\\"w\\\", \\\"TI\\\"]}]\\) to specify the graph \
\\!\\(\\*StyleBox[\\\"g\\\", \\\"TI\\\"]\\).\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"FindGraphIsomorphism\", \"[\", \
RowBox[{SubscriptBox[StyleBox[\"g\", \"TI\"], StyleBox[\"1\", \"TR\"]], \
\",\", SubscriptBox[StyleBox[\"g\", \"TI\"], StyleBox[\"2\", \"TR\"]]}], \
\"]\"}]\) finds an isomorphism that maps the graph \
\!\(\*SubscriptBox[StyleBox[\"g\", \"TI\"], StyleBox[\"1\", \"TR\"]]\) to \
\!\(\*SubscriptBox[StyleBox[\"g\", \"TI\"], StyleBox[\"2\", \"TR\"]]\) by \
renaming vertices.\n\!\(\*RowBox[{\"FindGraphIsomorphism\", \"[\", \
RowBox[{SubscriptBox[StyleBox[\"g\", \"TI\"], StyleBox[\"1\", \"TR\"]], \
\",\", SubscriptBox[StyleBox[\"g\", \"TI\"], StyleBox[\"2\", \"TR\"]], \",\", \
StyleBox[\"n\", \"TI\"]}], \"]\"}]\) finds at most \!\(\*StyleBox[\"n\", \"TI\
\"]\) isomorphisms. \n\!\(\*RowBox[{\"FindGraphIsomorphism\", \"[\", \
RowBox[{RowBox[{\"{\", RowBox[{RowBox[{StyleBox[\"v\", \"TI\"], \"\[Rule]\", \
StyleBox[\"w\", \"TI\"]}], \",\", StyleBox[\"\[Ellipsis]\", \"TR\"]}], \
\"}\"}], \",\", \"\[Ellipsis]\"}], \"]\"}]\) uses rules \
\!\(\*RowBox[{StyleBox[\"v\", \"TI\"], \"\[Rule]\", StyleBox[\"w\", \"TI\"]}]\
\) to specify the graph \!\(\*StyleBox[\"g\", \"TI\"]\).", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/FindGraphIsomorphism", "Web" -> 
        "http://reference.wolfram.com/language/ref/FindGraphIsomorphism.html"|>\
, "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, "SubValues" -> 
      None, "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> 
      None, "Options" -> {Method -> Automatic}, 
      "Attributes" -> {Protected, ReadProtected}, "FullName" -> 
      "System`FindGraphIsomorphism"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/FindIsomers",
                ButtonNote->"paclet:ref/FindIsomers"],
               "\"paclet:ref/FindIsomers\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"FindIsomers\\\", \\\"[\\\", \
StyleBox[\\\"chem\\\", \\\"TI\\\"], \\\"]\\\"}]\\) returns a list of \
molecules with the same chemical formula as \\!\\(\\*StyleBox[\\\"chem\\\", \
\\\"TI\\\"]\\).\\n\\!\\(\\*RowBox[{\\\"FindIsomers\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"chem\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"form\\\", \
\\\"TI\\\"]}], \\\"]\\\"}]\\) finds isomers of \
\\!\\(\\*StyleBox[\\\"chem\\\", \\\"TI\\\"]\\) and returns them in the given \
form.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", "paclet:ref/FindIsomers", 
                    "paclet:ref/FindIsomers", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/FindIsomers.\
html"], None}, "http://reference.wolfram.com/language/ref/FindIsomers.html", 
                    "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", 
                    RowBox[{"Protected", ",", "ReadProtected"}], "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`FindIsomers\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/FindIsomers",
                ButtonNote->"paclet:ref/FindIsomers"],
               "\"paclet:ref/FindIsomers\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"FindIsomers\\\", \\\"[\\\", \
StyleBox[\\\"chem\\\", \\\"TI\\\"], \\\"]\\\"}]\\) returns a list of \
molecules with the same chemical formula as \\!\\(\\*StyleBox[\\\"chem\\\", \
\\\"TI\\\"]\\).\\n\\!\\(\\*RowBox[{\\\"FindIsomers\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"chem\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"form\\\", \
\\\"TI\\\"]}], \\\"]\\\"}]\\) finds isomers of \
\\!\\(\\*StyleBox[\\\"chem\\\", \\\"TI\\\"]\\) and returns them in the given \
form.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"FindIsomers\", \"[\", StyleBox[\"chem\", \"TI\"], \
\"]\"}]\) returns a list of molecules with the same chemical formula as \
\!\(\*StyleBox[\"chem\", \"TI\"]\).\n\!\(\*RowBox[{\"FindIsomers\", \"[\", \
RowBox[{StyleBox[\"chem\", \"TI\"], \",\", StyleBox[\"form\", \"TI\"]}], \
\"]\"}]\) finds isomers of \!\(\*StyleBox[\"chem\", \"TI\"]\) and returns \
them in the given form.", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/FindIsomers", "Web" -> 
        "http://reference.wolfram.com/language/ref/FindIsomers.html"|>, 
      "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, "Options" -> None, 
      "Attributes" -> {Protected, ReadProtected}, "FullName" -> 
      "System`FindIsomers"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/FindIsomorphicSubgraph",
                ButtonNote->"paclet:ref/FindIsomorphicSubgraph"],
               "\"paclet:ref/FindIsomorphicSubgraph\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"FindIsomorphicSubgraph\\\", \
\\\"[\\\", RowBox[{SubscriptBox[StyleBox[\\\"g\\\", \\\"TI\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"g\\\", \
\\\"TI\\\"], StyleBox[\\\"2\\\", \\\"TR\\\"]]}], \\\"]\\\"}]\\) finds a \
subgraph of \\!\\(\\*SubscriptBox[StyleBox[\\\"g\\\", \\\"TI\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]]\\) that is isomorphic to \
\\!\\(\\*SubscriptBox[StyleBox[\\\"g\\\", \\\"TI\\\"], StyleBox[\\\"2\\\", \\\
\"TR\\\"]]\\).\\n\\!\\(\\*RowBox[{\\\"FindIsomorphicSubgraph\\\", \\\"[\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"g\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"g\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"n\\\", \
\\\"TI\\\"]}], \\\"]\\\"}]\\) finds at most \\!\\(\\*StyleBox[\\\"n\\\", \
\\\"TI\\\"]\\) subgraphs.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", 
                    "paclet:ref/FindIsomorphicSubgraph", 
                    "paclet:ref/FindIsomorphicSubgraph", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/\
FindIsomorphicSubgraph.html"], None}, 
                    "http://reference.wolfram.com/language/ref/\
FindIsomorphicSubgraph.html", "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", 
                    RowBox[{"Protected", ",", "ReadProtected"}], "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`FindIsomorphicSubgraph\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/FindIsomorphicSubgraph",
                ButtonNote->"paclet:ref/FindIsomorphicSubgraph"],
               "\"paclet:ref/FindIsomorphicSubgraph\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"FindIsomorphicSubgraph\\\", \
\\\"[\\\", RowBox[{SubscriptBox[StyleBox[\\\"g\\\", \\\"TI\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"g\\\", \
\\\"TI\\\"], StyleBox[\\\"2\\\", \\\"TR\\\"]]}], \\\"]\\\"}]\\) finds a \
subgraph of \\!\\(\\*SubscriptBox[StyleBox[\\\"g\\\", \\\"TI\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]]\\) that is isomorphic to \
\\!\\(\\*SubscriptBox[StyleBox[\\\"g\\\", \\\"TI\\\"], StyleBox[\\\"2\\\", \\\
\"TR\\\"]]\\).\\n\\!\\(\\*RowBox[{\\\"FindIsomorphicSubgraph\\\", \\\"[\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"g\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"g\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"n\\\", \
\\\"TI\\\"]}], \\\"]\\\"}]\\) finds at most \\!\\(\\*StyleBox[\\\"n\\\", \
\\\"TI\\\"]\\) subgraphs.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"FindIsomorphicSubgraph\", \"[\", \
RowBox[{SubscriptBox[StyleBox[\"g\", \"TI\"], StyleBox[\"1\", \"TR\"]], \
\",\", SubscriptBox[StyleBox[\"g\", \"TI\"], StyleBox[\"2\", \"TR\"]]}], \
\"]\"}]\) finds a subgraph of \!\(\*SubscriptBox[StyleBox[\"g\", \"TI\"], \
StyleBox[\"1\", \"TR\"]]\) that is isomorphic to \!\(\*SubscriptBox[StyleBox[\
\"g\", \"TI\"], StyleBox[\"2\", \"TR\"]]\).\n\
\!\(\*RowBox[{\"FindIsomorphicSubgraph\", \"[\", \
RowBox[{SubscriptBox[StyleBox[\"g\", \"TI\"], StyleBox[\"1\", \"TR\"]], \
\",\", SubscriptBox[StyleBox[\"g\", \"TI\"], StyleBox[\"2\", \"TR\"]], \",\", \
StyleBox[\"n\", \"TI\"]}], \"]\"}]\) finds at most \!\(\*StyleBox[\"n\", \"TI\
\"]\) subgraphs.", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/FindIsomorphicSubgraph", "Web" -> 
        "http://reference.wolfram.com/language/ref/FindIsomorphicSubgraph.\
html"|>, "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, "Options" -> None, 
      "Attributes" -> {Protected, ReadProtected}, "FullName" -> 
      "System`FindIsomorphicSubgraph"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/FindSubgraphIsomorphism",
                ButtonNote->"paclet:ref/FindSubgraphIsomorphism"],
               "\"paclet:ref/FindSubgraphIsomorphism\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"FindSubgraphIsomorphism\\\", \
\\\"[\\\", RowBox[{SubscriptBox[StyleBox[\\\"g\\\", \\\"TI\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"g\\\", \
\\\"TI\\\"], StyleBox[\\\"2\\\", \\\"TR\\\"]]}], \\\"]\\\"}]\\) finds a \
subgraph isomorphism that maps the graph \\!\\(\\*SubscriptBox[StyleBox[\\\"g\
\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \\\"TR\\\"]]\\) to a subgraph of \
\\!\\(\\*SubscriptBox[StyleBox[\\\"g\\\", \\\"TI\\\"], StyleBox[\\\"2\\\", \\\
\"TR\\\"]]\\) by renaming \
vertices.\\n\\!\\(\\*RowBox[{\\\"FindSubgraphIsomorphism\\\", \\\"[\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"g\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"g\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"n\\\", \
\\\"TI\\\"]}], \\\"]\\\"}]\\) finds at most \\!\\(\\*StyleBox[\\\"n\\\", \
\\\"TI\\\"]\\) subgraph isomorphisms.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", 
                    "paclet:ref/FindSubgraphIsomorphism", 
                    "paclet:ref/FindSubgraphIsomorphism", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/\
FindSubgraphIsomorphism.html"], None}, 
                    "http://reference.wolfram.com/language/ref/\
FindSubgraphIsomorphism.html", "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", 
                    RowBox[{"Protected", ",", "ReadProtected"}], "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`FindSubgraphIsomorphism\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/FindSubgraphIsomorphism",
                ButtonNote->"paclet:ref/FindSubgraphIsomorphism"],
               "\"paclet:ref/FindSubgraphIsomorphism\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"FindSubgraphIsomorphism\\\", \
\\\"[\\\", RowBox[{SubscriptBox[StyleBox[\\\"g\\\", \\\"TI\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"g\\\", \
\\\"TI\\\"], StyleBox[\\\"2\\\", \\\"TR\\\"]]}], \\\"]\\\"}]\\) finds a \
subgraph isomorphism that maps the graph \\!\\(\\*SubscriptBox[StyleBox[\\\"g\
\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \\\"TR\\\"]]\\) to a subgraph of \
\\!\\(\\*SubscriptBox[StyleBox[\\\"g\\\", \\\"TI\\\"], StyleBox[\\\"2\\\", \\\
\"TR\\\"]]\\) by renaming \
vertices.\\n\\!\\(\\*RowBox[{\\\"FindSubgraphIsomorphism\\\", \\\"[\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"g\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"g\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"n\\\", \
\\\"TI\\\"]}], \\\"]\\\"}]\\) finds at most \\!\\(\\*StyleBox[\\\"n\\\", \
\\\"TI\\\"]\\) subgraph isomorphisms.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"FindSubgraphIsomorphism\", \"[\", \
RowBox[{SubscriptBox[StyleBox[\"g\", \"TI\"], StyleBox[\"1\", \"TR\"]], \
\",\", SubscriptBox[StyleBox[\"g\", \"TI\"], StyleBox[\"2\", \"TR\"]]}], \
\"]\"}]\) finds a subgraph isomorphism that maps the graph \
\!\(\*SubscriptBox[StyleBox[\"g\", \"TI\"], StyleBox[\"1\", \"TR\"]]\) to a \
subgraph of \!\(\*SubscriptBox[StyleBox[\"g\", \"TI\"], StyleBox[\"2\", \
\"TR\"]]\) by renaming vertices.\n\!\(\*RowBox[{\"FindSubgraphIsomorphism\", \
\"[\", RowBox[{SubscriptBox[StyleBox[\"g\", \"TI\"], StyleBox[\"1\", \
\"TR\"]], \",\", SubscriptBox[StyleBox[\"g\", \"TI\"], StyleBox[\"2\", \
\"TR\"]], \",\", StyleBox[\"n\", \"TI\"]}], \"]\"}]\) finds at most \
\!\(\*StyleBox[\"n\", \"TI\"]\) subgraph isomorphisms.", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/FindSubgraphIsomorphism", "Web" -> 
        "http://reference.wolfram.com/language/ref/FindSubgraphIsomorphism.\
html"|>, "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, "Options" -> None, 
      "Attributes" -> {Protected, ReadProtected}, "FullName" -> 
      "System`FindSubgraphIsomorphism"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/IsomorphicGraphQ",
                ButtonNote->"paclet:ref/IsomorphicGraphQ"],
               "\"paclet:ref/IsomorphicGraphQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"IsomorphicGraphQ\\\", \
\\\"[\\\", RowBox[{SubscriptBox[StyleBox[\\\"g\\\", \\\"TI\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"g\\\", \
\\\"TI\\\"], StyleBox[\\\"2\\\", \\\"TR\\\"]]}], \\\"]\\\"}]\\) yields True \
if the graphs \\!\\(\\*SubscriptBox[StyleBox[\\\"g\\\", \\\"TI\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]]\\) and \
\\!\\(\\*SubscriptBox[StyleBox[\\\"g\\\", \\\"TI\\\"], StyleBox[\\\"2\\\", \\\
\"TR\\\"]]\\) are isomorphic, and False otherwise.\"\>", 
               "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", 
                    "paclet:ref/IsomorphicGraphQ", 
                    "paclet:ref/IsomorphicGraphQ", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/\
IsomorphicGraphQ.html"], None}, 
                    "http://reference.wolfram.com/language/ref/\
IsomorphicGraphQ.html", "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", 
                    RowBox[{"Protected", ",", "ReadProtected"}], "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`IsomorphicGraphQ\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/IsomorphicGraphQ",
                ButtonNote->"paclet:ref/IsomorphicGraphQ"],
               "\"paclet:ref/IsomorphicGraphQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"IsomorphicGraphQ\\\", \
\\\"[\\\", RowBox[{SubscriptBox[StyleBox[\\\"g\\\", \\\"TI\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"g\\\", \
\\\"TI\\\"], StyleBox[\\\"2\\\", \\\"TR\\\"]]}], \\\"]\\\"}]\\) yields True \
if the graphs \\!\\(\\*SubscriptBox[StyleBox[\\\"g\\\", \\\"TI\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]]\\) and \
\\!\\(\\*SubscriptBox[StyleBox[\\\"g\\\", \\\"TI\\\"], StyleBox[\\\"2\\\", \\\
\"TR\\\"]]\\) are isomorphic, and False otherwise.\"\>", 
               "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"IsomorphicGraphQ\", \"[\", \
RowBox[{SubscriptBox[StyleBox[\"g\", \"TI\"], StyleBox[\"1\", \"TR\"]], \
\",\", SubscriptBox[StyleBox[\"g\", \"TI\"], StyleBox[\"2\", \"TR\"]]}], \
\"]\"}]\) yields True if the graphs \!\(\*SubscriptBox[StyleBox[\"g\", \
\"TI\"], StyleBox[\"1\", \"TR\"]]\) and \!\(\*SubscriptBox[StyleBox[\"g\", \
\"TI\"], StyleBox[\"2\", \"TR\"]]\) are isomorphic, and False otherwise.", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/IsomorphicGraphQ", "Web" -> 
        "http://reference.wolfram.com/language/ref/IsomorphicGraphQ.html"|>, 
      "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, "Options" -> None, 
      "Attributes" -> {Protected, ReadProtected}, "FullName" -> 
      "System`IsomorphicGraphQ"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/IsomorphicSubgraphQ",
                ButtonNote->"paclet:ref/IsomorphicSubgraphQ"],
               "\"paclet:ref/IsomorphicSubgraphQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"IsomorphicSubgraphQ\\\", \
\\\"[\\\", RowBox[{SubscriptBox[StyleBox[\\\"g\\\", \\\"TI\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"g\\\", \
\\\"TI\\\"], StyleBox[\\\"2\\\", \\\"TR\\\"]]}], \\\"]\\\"}]\\) yields True \
if the graph \\!\\(\\*SubscriptBox[StyleBox[\\\"g\\\", \\\"TI\\\"], StyleBox[\
\\\"1\\\", \\\"TR\\\"]]\\) is isomorphic to a subgraph of the graph \
\\!\\(\\*SubscriptBox[StyleBox[\\\"g\\\", \\\"TI\\\"], StyleBox[\\\"2\\\", \\\
\"TR\\\"]]\\).\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", 
                    "paclet:ref/IsomorphicSubgraphQ", 
                    "paclet:ref/IsomorphicSubgraphQ", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/\
IsomorphicSubgraphQ.html"], None}, 
                    "http://reference.wolfram.com/language/ref/\
IsomorphicSubgraphQ.html", "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", 
                    RowBox[{"Protected", ",", "ReadProtected"}], "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`IsomorphicSubgraphQ\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/IsomorphicSubgraphQ",
                ButtonNote->"paclet:ref/IsomorphicSubgraphQ"],
               "\"paclet:ref/IsomorphicSubgraphQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"IsomorphicSubgraphQ\\\", \
\\\"[\\\", RowBox[{SubscriptBox[StyleBox[\\\"g\\\", \\\"TI\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"g\\\", \
\\\"TI\\\"], StyleBox[\\\"2\\\", \\\"TR\\\"]]}], \\\"]\\\"}]\\) yields True \
if the graph \\!\\(\\*SubscriptBox[StyleBox[\\\"g\\\", \\\"TI\\\"], StyleBox[\
\\\"1\\\", \\\"TR\\\"]]\\) is isomorphic to a subgraph of the graph \
\\!\\(\\*SubscriptBox[StyleBox[\\\"g\\\", \\\"TI\\\"], StyleBox[\\\"2\\\", \\\
\"TR\\\"]]\\).\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"IsomorphicSubgraphQ\", \"[\", \
RowBox[{SubscriptBox[StyleBox[\"g\", \"TI\"], StyleBox[\"1\", \"TR\"]], \
\",\", SubscriptBox[StyleBox[\"g\", \"TI\"], StyleBox[\"2\", \"TR\"]]}], \
\"]\"}]\) yields True if the graph \!\(\*SubscriptBox[StyleBox[\"g\", \
\"TI\"], StyleBox[\"1\", \"TR\"]]\) is isomorphic to a subgraph of the graph \
\!\(\*SubscriptBox[StyleBox[\"g\", \"TI\"], StyleBox[\"2\", \"TR\"]]\).", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/IsomorphicSubgraphQ", "Web" -> 
        "http://reference.wolfram.com/language/ref/IsomorphicSubgraphQ.html"|>\
, "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, "SubValues" -> 
      None, "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> 
      None, "Options" -> None, "Attributes" -> {Protected, ReadProtected}, 
      "FullName" -> "System`IsomorphicSubgraphQ"|>, True]]}], "}"}]], "Output",
 CellChangeTimes->{3.877274289505316*^9},
 CellLabel->"Out[9]=",ExpressionUUID->"1a8c2dc9-e46e-4dba-8237-f2e211f6d507"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Select", "[", 
   RowBox[{
    RowBox[{"IsomorphicGraphQ", "[", 
     RowBox[{
      RowBox[{"CompleteGraph", "[", "#", "]"}], ",", 
      RowBox[{"PathGraph", "[", 
       RowBox[{"Range", "[", "#", "]"}], "]"}]}], "]"}], "&"}], "]"}], "[", 
  RowBox[{"Range", "[", "10", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.877274303564019*^9, 3.877274320418649*^9}},
 CellLabel->"In[10]:=",ExpressionUUID->"42ce2d0c-9e75-4309-9e36-2a1a9de9cdf5"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "2"}], "}"}]], "Output",
 CellChangeTimes->{3.8772743207154894`*^9},
 CellLabel->"Out[10]=",ExpressionUUID->"53fa4aca-a6aa-47ec-9840-b50f5450581e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Select", "[", 
   RowBox[{
    RowBox[{"IsomorphicGraphQ", "[", 
     RowBox[{
      RowBox[{"CompleteGraph", "[", "#", "]"}], ",", 
      RowBox[{"CycleGraph", "[", "#", "]"}]}], "]"}], "&"}], "]"}], "[", 
  RowBox[{"Range", "[", "10", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.877274303564019*^9, 3.877274330891815*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"6252ebcd-9cc8-4c3e-a834-d1fc4d4f6881"],

Cell[BoxData[
 RowBox[{"{", "3", "}"}]], "Output",
 CellChangeTimes->{3.8772743311106453`*^9},
 CellLabel->"Out[11]=",ExpressionUUID->"eeaa6233-e9fa-4e19-be20-588d31a66dc4"]
}, Open  ]],

Cell["\<\
Donald Knuth lists 0 as an answer as well in addition to 3, but I don\
\[CloseCurlyQuote]t think the 0 graph exists or makes sense.\
\>", "Text",
 CellChangeTimes->{{3.877275807910864*^9, 
  3.8772758250092363`*^9}},ExpressionUUID->"e333f069-bd4f-468e-a05d-\
f5f4ffb5ddc9"]
}, Closed]],

Cell[CellGroupData[{

Cell["Exercise 43", "Section",
 CellChangeTimes->{{3.877275830845109*^9, 
  3.8772758351894455`*^9}},ExpressionUUID->"938282ed-1f4e-4651-ae92-\
d9e0412a1a09"],

Cell["\<\
Are any of the following graphs the same as the Petersen graph?\
\>", "Text",
 CellChangeTimes->{{3.8772758372509813`*^9, 
  3.877275844998804*^9}},ExpressionUUID->"820b0c65-ea86-4609-97e2-\
2dcd236a42f3"],

Cell["\<\
I have a hard copy edition of the Art of Computer Programming that I am using \
to answer this exercise.\
\>", "Text",
 CellChangeTimes->{{3.8772758488362427`*^9, 
  3.8772758662677903`*^9}},ExpressionUUID->"484a6962-18fa-415f-8235-\
48e8737599e9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GraphData", "[", "\"\<PetersenGraph\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.877274344995186*^9, 3.877274348026516*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"ae69387c-831a-493e-b651-bb03f11a6aaf"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10}, {Null, 
       SparseArray[
       Automatic, {10, 10}, 0, {
        1, {{0, 3, 6, 9, 12, 15, 18, 21, 24, 27, 30}, {{3}, {4}, {6}, {4}, {
          5}, {7}, {1}, {5}, {8}, {1}, {2}, {9}, {2}, {3}, {10}, {1}, {7}, {
          10}, {2}, {6}, {8}, {3}, {7}, {9}, {4}, {8}, {10}, {5}, {6}, {9}}}, 
         Pattern}]}, {
      VertexCoordinates -> {{0., 1.}, {-0.951, 0.309}, {-0.588, -0.809}, {
        0.588, -0.809}, {0.951, 0.309}, {0., 2.}, {-1.902, 
        0.618}, {-1.176, -1.618}, {1.176, -1.618}, {1.902, 0.618}}}]]}, 
    TagBox[
     GraphicsGroupBox[
      GraphicsComplexBox[{{0., 1.}, {-0.951, 0.309}, {-0.588, -0.809}, {
       0.588, -0.809}, {0.951, 0.309}, {0., 2.}, {-1.902, 
       0.618}, {-1.176, -1.618}, {1.176, -1.618}, {1.902, 0.618}}, {
        {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
         ArrowBox[{{1, 3}, {1, 4}, {1, 6}, {2, 4}, {2, 5}, {2, 7}, {3, 5}, {3,
           8}, {4, 9}, {5, 10}, {6, 7}, {6, 10}, {7, 8}, {8, 9}, {9, 10}}, 
          0.03574040219378426]}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         DiskBox[1, 0.03574040219378426], DiskBox[2, 0.03574040219378426], 
         DiskBox[3, 0.03574040219378426], DiskBox[4, 0.03574040219378426], 
         DiskBox[5, 0.03574040219378426], DiskBox[6, 0.03574040219378426], 
         DiskBox[7, 0.03574040219378426], DiskBox[8, 0.03574040219378426], 
         DiskBox[9, 0.03574040219378426], DiskBox[10, 0.03574040219378426]}}]],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->"NetworkGraphics",
  FormatType->TraditionalForm,
  FrameTicks->None]], "Output",
 CellChangeTimes->{3.877274373343834*^9},
 CellLabel->"Out[12]=",ExpressionUUID->"b8c4ae9e-920e-47eb-a8dd-8639ff565ada"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graph", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"1", "<->", "2"}], ",", 
    RowBox[{"2", "<->", "3"}], ",", 
    RowBox[{"3", "<->", "4"}], ",", 
    RowBox[{"4", "<->", "5"}], ",", 
    RowBox[{"5", "<->", "6"}], ",", 
    RowBox[{"6", "<->", "7"}], ",", 
    RowBox[{"7", "<->", "8"}], ",", 
    RowBox[{"8", "<->", "9"}], ",", 
    RowBox[{"1", "<->", "5"}], ",", 
    RowBox[{"9", "<->", "1"}], ",", 
    RowBox[{"2", "<->", "7"}], ",", 
    RowBox[{"3", "<->", "10"}], ",", 
    RowBox[{"9", "<->", "10"}], ",", 
    RowBox[{"6", "<->", "10"}], ",", 
    RowBox[{"4", "<->", "8"}]}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.8772746868569603`*^9, 3.8772748474773893`*^9}},
 CellLabel->"In[21]:=",ExpressionUUID->"0ba47069-28dd-4b7f-a0ea-9192e9c48baa"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10}, {
      Null, {{1, 2}, {2, 3}, {3, 4}, {4, 5}, {5, 6}, {6, 7}, {7, 8}, {8, 9}, {
       1, 5}, {9, 1}, {2, 7}, {3, 10}, {9, 10}, {6, 10}, {4, 8}}}]]}, 
    TagBox[
     GraphicsGroupBox[
      GraphicsComplexBox[{{0., 1.0714731189507671`}, {0.3706958880924952, 
       1.7141375644230792`}, {1.6082208551636819`, 1.71368843968694}, {
       1.9784489811569967`, 1.0704879817334916`}, {0.9894208183159837, 
       1.587319584799415}, {0.9901647331452087, 0.9297319681375992}, {
       0.42041274999437916`, 0.6004652212908816}, {1.360278663808465, 0.}, {
       0.6179234211635735, 0.0011966682806978657`}, {1.5586409833626957`, 
       0.5998675723414539}}, {
        {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
         ArrowBox[{{1, 2}, {1, 5}, {1, 9}, {2, 3}, {2, 7}, {3, 4}, {3, 10}, {
          4, 5}, {4, 8}, {5, 6}, {6, 7}, {6, 10}, {7, 8}, {8, 9}, {9, 10}}, 
          0.022436361377092706`]}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         DiskBox[1, 0.022436361377092706], DiskBox[2, 0.022436361377092706], 
         DiskBox[3, 0.022436361377092706], DiskBox[4, 0.022436361377092706], 
         DiskBox[5, 0.022436361377092706], DiskBox[6, 0.022436361377092706], 
         DiskBox[7, 0.022436361377092706], DiskBox[8, 0.022436361377092706], 
         DiskBox[9, 0.022436361377092706], 
         DiskBox[10, 0.022436361377092706]}}]],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->"NetworkGraphics",
  FormatType->TraditionalForm,
  FrameTicks->None]], "Output",
 CellChangeTimes->{{3.8772747411104736`*^9, 3.8772748478211737`*^9}},
 CellLabel->"Out[21]=",ExpressionUUID->"17a44d1b-43c2-4d87-a606-ef93daeb5d8c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"IsomorphicGraphQ", "[", 
  RowBox[{
   RowBox[{"Graph", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"1", "<->", "2"}], ",", 
      RowBox[{"2", "<->", "3"}], ",", 
      RowBox[{"3", "<->", "4"}], ",", 
      RowBox[{"4", "<->", "5"}], ",", 
      RowBox[{"5", "<->", "6"}], ",", 
      RowBox[{"6", "<->", "7"}], ",", 
      RowBox[{"7", "<->", "8"}], ",", 
      RowBox[{"8", "<->", "9"}], ",", 
      RowBox[{"1", "<->", "5"}], ",", 
      RowBox[{"9", "<->", "1"}], ",", 
      RowBox[{"2", "<->", "7"}], ",", 
      RowBox[{"3", "<->", "10"}], ",", 
      RowBox[{"9", "<->", "10"}], ",", 
      RowBox[{"6", "<->", "10"}], ",", 
      RowBox[{"4", "<->", "8"}]}], "}"}], "]"}], ",", 
   RowBox[{"GraphData", "[", "\"\<PetersenGraph\>\"", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.877274855622608*^9, 3.8772748624784994`*^9}},
 CellLabel->"In[23]:=",ExpressionUUID->"564178b2-11a3-477b-aa16-af52dbf8c1e7"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.8772748627441235`*^9},
 CellLabel->"Out[23]=",ExpressionUUID->"5d52baf7-fc6a-425e-8b7e-9a703c0055a1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindGraphIsomorphism", "[", 
  RowBox[{
   RowBox[{"Graph", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"1", "<->", "2"}], ",", 
      RowBox[{"2", "<->", "3"}], ",", 
      RowBox[{"3", "<->", "4"}], ",", 
      RowBox[{"4", "<->", "5"}], ",", 
      RowBox[{"5", "<->", "6"}], ",", 
      RowBox[{"6", "<->", "7"}], ",", 
      RowBox[{"7", "<->", "8"}], ",", 
      RowBox[{"8", "<->", "9"}], ",", 
      RowBox[{"1", "<->", "5"}], ",", 
      RowBox[{"9", "<->", "1"}], ",", 
      RowBox[{"2", "<->", "7"}], ",", 
      RowBox[{"3", "<->", "10"}], ",", 
      RowBox[{"9", "<->", "10"}], ",", 
      RowBox[{"6", "<->", "10"}], ",", 
      RowBox[{"4", "<->", "8"}]}], "}"}], "]"}], ",", 
   RowBox[{"GraphData", "[", "\"\<PetersenGraph\>\"", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8772743553576913`*^9, 3.8772743618783526`*^9}, {
  3.8772746710312505`*^9, 3.8772746725156255`*^9}, {3.8772749072379513`*^9, 
  3.8772749125815153`*^9}},
 CellLabel->"In[24]:=",ExpressionUUID->"8f2327e6-cc7b-4d2a-8bdd-f327feae0186"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\[LeftAssociation]", 
   RowBox[{
    RowBox[{"1", "\[Rule]", "1"}], ",", 
    RowBox[{"2", "\[Rule]", "4"}], ",", 
    RowBox[{"3", "\[Rule]", "2"}], ",", 
    RowBox[{"4", "\[Rule]", "5"}], ",", 
    RowBox[{"5", "\[Rule]", "3"}], ",", 
    RowBox[{"6", "\[Rule]", "8"}], ",", 
    RowBox[{"7", "\[Rule]", "9"}], ",", 
    RowBox[{"8", "\[Rule]", "10"}], ",", 
    RowBox[{"9", "\[Rule]", "6"}], ",", 
    RowBox[{"10", "\[Rule]", "7"}]}], "\[RightAssociation]"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.8772749128626776`*^9},
 CellLabel->"Out[24]=",ExpressionUUID->"474dc61a-a62b-4976-a34b-01345dde26ff"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GraphData", "[", 
  RowBox[{"\"\<PetersenGraph\>\"", ",", "\"\<Embeddings\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8772749180359607`*^9, 3.877274923864066*^9}},
 CellLabel->"In[26]:=",ExpressionUUID->"ba127e6f-8c6a-4047-b352-6a213255dd03"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0.`", ",", "1.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.951`"}], ",", "0.309`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.588`"}], ",", 
       RowBox[{"-", "0.809`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.588`", ",", 
       RowBox[{"-", "0.809`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.951`", ",", "0.309`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.`", ",", "2.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1.902`"}], ",", "0.618`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1.176`"}], ",", 
       RowBox[{"-", "1.618`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1.176`", ",", 
       RowBox[{"-", "1.618`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1.902`", ",", "0.618`"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0.323`", ",", "0.975`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.037`", ",", "0.789`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.037`", ",", "0.186`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.323`", ",", "0.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.5`", ",", "0.487`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1.287`", ",", "0.975`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1.`", ",", "0.789`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1.`", ",", "0.186`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1.287`", ",", "0.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1.464`", ",", "0.487`"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0.4483544303797468`", ",", 
       RowBox[{"-", "0.269957805907173`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.6048101265822785`", ",", 
       RowBox[{"-", "0.3389873417721519`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.5863291139240506`", ",", 
       RowBox[{"-", "0.5090295358649789`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.5863291139240506`", ",", 
       RowBox[{"-", "0.030911392405063295`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.8624472573839662`", ",", 
       RowBox[{"-", "0.5090295358649789`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.7243037974683544`", ",", 
       RowBox[{"-", "0.13198312236286922`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.7243037974683544`", ",", 
       RowBox[{"-", "0.269957805907173`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.8437974683544304`", ",", 
       RowBox[{"-", "0.3389873417721519`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.8624472573839662`", ",", 
       RowBox[{"-", "0.030911392405063295`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1.`", ",", 
       RowBox[{"-", "0.269957805907173`"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0.4483544303797468`", ",", 
       RowBox[{"-", "0.269957805907173`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.6064978902953587`", ",", 
       RowBox[{"-", "0.14565400843881857`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.529113924050633`", ",", 
       RowBox[{"-", "0.07479324894514768`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.529113924050633`", ",", 
       RowBox[{"-", "0.46514767932489454`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.8421097046413502`", ",", 
       RowBox[{"-", "0.14565400843881857`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1.`", ",", 
       RowBox[{"-", "0.269957805907173`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.919831223628692`", ",", 
       RowBox[{"-", "0.07479324894514768`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.7243037974683544`", ",", "0.006065822784810127`"}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"0.7243037974683544`", ",", 
       RowBox[{"-", "0.5459915611814347`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.919831223628692`", ",", 
       RowBox[{"-", "0.46514767932489454`"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0.454406779661017`", ",", 
       RowBox[{"-", "0.22296610169491526`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.6325423728813558`", ",", 
       RowBox[{"-", "0.5316101694915254`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.5492372881355932`", ",", 
       RowBox[{"-", "0.05873728813559322`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.4873728813559322`", ",", 
       RowBox[{"-", "0.4096610169491525`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.8221186440677966`", ",", 
       RowBox[{"-", "0.5316101694915254`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1.`", ",", 
       RowBox[{"-", "0.22296610169491526`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.9059322033898305`", ",", 
       RowBox[{"-", "0.05873728813559322`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.7273728813559321`", ",", "0.006091525423728813`"}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"0.7273728813559321`", ",", 
       RowBox[{"-", "0.2711016949152542`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.9677966101694915`", ",", 
       RowBox[{"-", "0.4096610169491525`"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0.6022515527950311`", ",", 
       RowBox[{"-", "0.5418478260869565`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.7347049689440993`", ",", 
       RowBox[{"-", "0.3123447204968944`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.6684782608695652`", ",", 
       RowBox[{"-", "0.6565993788819876`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.6684782608695652`", ",", 
       RowBox[{"-", "0.42709627329192545`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.8672360248447204`", ",", 
       RowBox[{"-", "0.3123447204968944`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.9999999999999999`", ",", 
       RowBox[{"-", "0.5418478260869565`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.9332298136645962`", ",", 
       RowBox[{"-", "0.6565993788819876`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.8012422360248447`", ",", 
       RowBox[{"-", "0.6565993788819876`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.8012422360248447`", ",", 
       RowBox[{"-", "0.5035714285714286`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.9332298136645962`", ",", 
       RowBox[{"-", "0.42709627329192545`"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "0"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"2", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"6", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"6", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"5", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"6", ",", "6"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "6"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "6"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "5"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       SqrtBox[
        FractionBox["2", 
         RowBox[{"5", "+", 
          SqrtBox["5"]}]]], ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        FractionBox["1", "2"], " ", 
        SqrtBox[
         RowBox[{"1", "-", 
          FractionBox["2", 
           SqrtBox["5"]]}]]}], ",", 
       FractionBox["1", "2"]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         FractionBox["1", "2"]}], " ", 
        SqrtBox[
         RowBox[{
          FractionBox["1", "10"], " ", 
          RowBox[{"(", 
           RowBox[{"5", "+", 
            SqrtBox["5"]}], ")"}]}]]}], ",", 
       RowBox[{
        FractionBox["1", "4"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          SqrtBox["5"]}], ")"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         FractionBox["1", "2"]}], " ", 
        SqrtBox[
         RowBox[{
          FractionBox["1", "10"], " ", 
          RowBox[{"(", 
           RowBox[{"5", "+", 
            SqrtBox["5"]}], ")"}]}]]}], ",", 
       RowBox[{
        FractionBox["1", "4"], " ", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          SqrtBox["5"]}], ")"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        FractionBox["1", "2"], " ", 
        SqrtBox[
         RowBox[{"1", "-", 
          FractionBox["2", 
           SqrtBox["5"]]}]]}], ",", 
       RowBox[{"-", 
        FractionBox["1", "2"]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", 
       SqrtBox[
        RowBox[{
         FractionBox["1", "10"], " ", 
         RowBox[{"(", 
          RowBox[{"5", "+", 
           SqrtBox["5"]}], ")"}]}]]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        FractionBox["1", "4"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "-", 
          SqrtBox["5"]}], ")"}]}], ",", 
       RowBox[{
        FractionBox["1", "2"], " ", 
        SqrtBox[
         RowBox[{
          FractionBox["1", "10"], " ", 
          RowBox[{"(", 
           RowBox[{"5", "-", 
            SqrtBox["5"]}], ")"}]}]]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "2"]}], ",", 
       RowBox[{
        RowBox[{"-", 
         FractionBox["1", "2"]}], " ", 
        SqrtBox[
         RowBox[{"1", "+", 
          FractionBox["2", 
           SqrtBox["5"]]}]]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["1", "2"], ",", 
       RowBox[{
        RowBox[{"-", 
         FractionBox["1", "2"]}], " ", 
        SqrtBox[
         RowBox[{"1", "+", 
          FractionBox["2", 
           SqrtBox["5"]]}]]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        FractionBox["1", "4"], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          SqrtBox["5"]}], ")"}]}], ",", 
       RowBox[{
        FractionBox["1", "2"], " ", 
        SqrtBox[
         RowBox[{
          FractionBox["1", "10"], " ", 
          RowBox[{"(", 
           RowBox[{"5", "-", 
            SqrtBox["5"]}], ")"}]}]]}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0.5353024564670038`", ",", "0.9588896176713285`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.3281636798341197`", ",", "0.6772739775299917`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.5353024564670038`", ",", "0.4701352008971077`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.07060491293400757`", ",", "0.6212047479000488`"}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"0.3281636798341197`", ",", "0.2629964242642236`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1.`", ",", "0.6212047479000488`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.7424412330998879`", ",", "0.6772739775299917`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.7424412330998879`", ",", "0.2629964242642236`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.24791181420490352`", ",", "0.07459649632074725`"}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"0.8226930987291041`", ",", "0.07459649632074725`"}], "}"}]}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       SqrtBox[
        RowBox[{
         FractionBox["5", "8"], "-", 
         FractionBox[
          SqrtBox["5"], "8"]}]], ",", 
       RowBox[{
        FractionBox["1", "4"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "-", 
          SqrtBox["5"]}], ")"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       SqrtBox[
        RowBox[{
         FractionBox["1", "2"], " ", 
         RowBox[{"(", 
          RowBox[{"5", "-", 
           SqrtBox["5"]}], ")"}]}]], ",", 
       RowBox[{
        FractionBox["1", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "-", 
          SqrtBox["5"]}], ")"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       SqrtBox[
        RowBox[{
         FractionBox["5", "8"], "+", 
         FractionBox[
          SqrtBox["5"], "8"]}]], ",", 
       RowBox[{
        FractionBox["1", "4"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          SqrtBox["5"]}], ")"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         FractionBox["1", "2"]}], " ", 
        SqrtBox[
         RowBox[{
          FractionBox["1", "2"], " ", 
          RowBox[{"(", 
           RowBox[{"5", "-", 
            SqrtBox["5"]}], ")"}]}]]}], ",", 
       RowBox[{
        FractionBox["1", "4"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "-", 
          SqrtBox["5"]}], ")"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         FractionBox["1", "2"]}], " ", 
        SqrtBox[
         RowBox[{
          FractionBox["1", "2"], " ", 
          RowBox[{"(", 
           RowBox[{"5", "+", 
            SqrtBox["5"]}], ")"}]}]]}], ",", 
       RowBox[{
        FractionBox["1", "4"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          SqrtBox["5"]}], ")"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", 
        SqrtBox[
         RowBox[{
          FractionBox["1", "2"], " ", 
          RowBox[{"(", 
           RowBox[{"5", "+", 
            SqrtBox["5"]}], ")"}]}]]}], ",", 
       RowBox[{
        FractionBox["1", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          SqrtBox["5"]}], ")"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       SqrtBox[
        RowBox[{
         FractionBox["1", "2"], " ", 
         RowBox[{"(", 
          RowBox[{"5", "+", 
           SqrtBox["5"]}], ")"}]}]], ",", 
       RowBox[{
        FractionBox["1", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          SqrtBox["5"]}], ")"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", 
        SqrtBox[
         RowBox[{
          FractionBox["1", "2"], " ", 
          RowBox[{"(", 
           RowBox[{"5", "-", 
            SqrtBox["5"]}], ")"}]}]]}], ",", 
       RowBox[{
        FractionBox["1", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "-", 
          SqrtBox["5"]}], ")"}]}]}], "}"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.8772750462400465`*^9},
 CellLabel->"Out[26]=",ExpressionUUID->"3ae698b1-8bc4-4448-9258-1a6936d2a340"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "[", 
  RowBox[{"GraphData", "[", 
   RowBox[{"\"\<PetersenGraph\>\"", ",", "\"\<Embeddings\>\""}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8772750471590967`*^9, 3.8772750481746364`*^9}},
 CellLabel->"In[27]:=",ExpressionUUID->"c90720f0-425c-4ca6-a6ab-c08c27da366a"],

Cell[BoxData["11"], "Output",
 CellChangeTimes->{3.8772750484246435`*^9},
 CellLabel->"Out[27]=",ExpressionUUID->"7c10de78-8e13-481e-9928-258ca71eae9d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Graph", "[", 
    RowBox[{
     RowBox[{"GraphData", "[", "\"\<PetersenGraph\>\"", "]"}], ",", 
     RowBox[{"VertexCoordinates", "->", "#"}]}], "]"}], "&"}], "/@", 
  RowBox[{"GraphData", "[", 
   RowBox[{"\"\<PetersenGraph\>\"", ",", "\"\<Embeddings\>\""}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.8772750522216015`*^9, 3.877275082832396*^9}},
 CellLabel->"In[28]:=",ExpressionUUID->"7670efde-f0cf-4dee-b663-78a320dbfa58"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10}, {Null, 
         SparseArray[
         Automatic, {10, 10}, 0, {
          1, {{0, 3, 6, 9, 12, 15, 18, 21, 24, 27, 30}, {{3}, {4}, {6}, {4}, {
            5}, {7}, {1}, {5}, {8}, {1}, {2}, {9}, {2}, {3}, {10}, {1}, {7}, {
            10}, {2}, {6}, {8}, {3}, {7}, {9}, {4}, {8}, {10}, {5}, {6}, {
            9}}}, Pattern}]}, {
        GraphLayout -> {"Dimension" -> 2}, 
         VertexCoordinates -> {{0., 1.}, {-0.951, 0.309}, {-0.588, -0.809}, {
          0.588, -0.809}, {0.951, 0.309}, {0., 2.}, {-1.902, 
          0.618}, {-1.176, -1.618}, {1.176, -1.618}, {1.902, 0.618}}}]]}, 
      TagBox[
       GraphicsGroupBox[
        GraphicsComplexBox[{{0., 1.}, {-0.951, 0.309}, {-0.588, -0.809}, {
         0.588, -0.809}, {0.951, 0.309}, {0., 2.}, {-1.902, 
         0.618}, {-1.176, -1.618}, {1.176, -1.618}, {1.902, 0.618}}, {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
           ArrowBox[{{1, 3}, {1, 4}, {1, 6}, {2, 4}, {2, 5}, {2, 7}, {3, 5}, {
            3, 8}, {4, 9}, {5, 10}, {6, 7}, {6, 10}, {7, 8}, {8, 9}, {9, 10}},
             0.03574040219378426]}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           DiskBox[1, 0.03574040219378426], DiskBox[2, 0.03574040219378426], 
           DiskBox[3, 0.03574040219378426], DiskBox[4, 0.03574040219378426], 
           DiskBox[5, 0.03574040219378426], DiskBox[6, 0.03574040219378426], 
           DiskBox[7, 0.03574040219378426], DiskBox[8, 0.03574040219378426], 
           DiskBox[9, 0.03574040219378426], 
           DiskBox[10, 0.03574040219378426]}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->"NetworkGraphics",
    FormatType->TraditionalForm,
    FrameTicks->None], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10}, {Null, 
         SparseArray[
         Automatic, {10, 10}, 0, {
          1, {{0, 3, 6, 9, 12, 15, 18, 21, 24, 27, 30}, {{3}, {4}, {6}, {4}, {
            5}, {7}, {1}, {5}, {8}, {1}, {2}, {9}, {2}, {3}, {10}, {1}, {7}, {
            10}, {2}, {6}, {8}, {3}, {7}, {9}, {4}, {8}, {10}, {5}, {6}, {
            9}}}, Pattern}]}, {
        GraphLayout -> {"Dimension" -> 2}, 
         VertexCoordinates -> {{0.323, 0.975}, {0.037, 0.789}, {0.037, 
          0.186}, {0.323, 0.}, {0.5, 0.487}, {1.287, 0.975}, {1., 0.789}, {1.,
           0.186}, {1.287, 0.}, {1.464, 0.487}}}]]}, 
      TagBox[
       GraphicsGroupBox[
        GraphicsComplexBox[{{0.323, 0.975}, {0.037, 0.789}, {0.037, 0.186}, {
         0.323, 0.}, {0.5, 0.487}, {1.287, 0.975}, {1., 0.789}, {1., 0.186}, {
         1.287, 0.}, {1.464, 0.487}}, {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
           ArrowBox[{{1, 3}, {1, 4}, {1, 6}, {2, 4}, {2, 5}, {2, 7}, {3, 5}, {
            3, 8}, {4, 9}, {5, 10}, {6, 7}, {6, 10}, {7, 8}, {8, 9}, {9, 10}},
             0.017786077874000106`]}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           DiskBox[1, 0.017786077874000106], DiskBox[2, 0.017786077874000106],
            DiskBox[3, 0.017786077874000106], 
           DiskBox[4, 0.017786077874000106], DiskBox[5, 0.017786077874000106],
            DiskBox[6, 0.017786077874000106], 
           DiskBox[7, 0.017786077874000106], DiskBox[8, 0.017786077874000106],
            DiskBox[9, 0.017786077874000106], 
           DiskBox[10, 0.017786077874000106]}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->"NetworkGraphics",
    FormatType->TraditionalForm,
    FrameTicks->None], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10}, {Null, 
         SparseArray[
         Automatic, {10, 10}, 0, {
          1, {{0, 3, 6, 9, 12, 15, 18, 21, 24, 27, 30}, {{3}, {4}, {6}, {4}, {
            5}, {7}, {1}, {5}, {8}, {1}, {2}, {9}, {2}, {3}, {10}, {1}, {7}, {
            10}, {2}, {6}, {8}, {3}, {7}, {9}, {4}, {8}, {10}, {5}, {6}, {
            9}}}, Pattern}]}, {
        GraphLayout -> {"Dimension" -> 2}, 
         VertexCoordinates -> {{0.4483544303797468, -0.269957805907173}, {
          0.6048101265822785, -0.3389873417721519}, {
          0.5863291139240506, -0.5090295358649789}, {
          0.5863291139240506, -0.030911392405063295`}, {
          0.8624472573839662, -0.5090295358649789}, {
          0.7243037974683544, -0.13198312236286922`}, {
          0.7243037974683544, -0.269957805907173}, {
          0.8437974683544304, -0.3389873417721519}, {
          0.8624472573839662, -0.030911392405063295`}, {
          1., -0.269957805907173}}}]]}, 
      TagBox[
       GraphicsGroupBox[
        GraphicsComplexBox[{{0.4483544303797468, -0.269957805907173}, {
         0.6048101265822785, -0.3389873417721519}, {
         0.5863291139240506, -0.5090295358649789}, {
         0.5863291139240506, -0.030911392405063295`}, {
         0.8624472573839662, -0.5090295358649789}, {
         0.7243037974683544, -0.13198312236286922`}, {
         0.7243037974683544, -0.269957805907173}, {
         0.8437974683544304, -0.3389873417721519}, {
         0.8624472573839662, -0.030911392405063295`}, {
         1., -0.269957805907173}}, {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
           ArrowBox[{{1, 3}, {1, 4}, {1, 6}, {2, 4}, {2, 5}, {2, 7}, {3, 5}, {
            3, 8}, {4, 9}, {5, 10}, {6, 7}, {6, 10}, {7, 8}, {8, 9}, {9, 10}},
             0.007022448101265823]}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           DiskBox[1, 0.007022448101265823], DiskBox[2, 0.007022448101265823],
            DiskBox[3, 0.007022448101265823], 
           DiskBox[4, 0.007022448101265823], DiskBox[5, 0.007022448101265823],
            DiskBox[6, 0.007022448101265823], 
           DiskBox[7, 0.007022448101265823], DiskBox[8, 0.007022448101265823],
            DiskBox[9, 0.007022448101265823], 
           DiskBox[10, 0.007022448101265823]}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->"NetworkGraphics",
    FormatType->TraditionalForm,
    FrameTicks->None], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10}, {Null, 
         SparseArray[
         Automatic, {10, 10}, 0, {
          1, {{0, 3, 6, 9, 12, 15, 18, 21, 24, 27, 30}, {{3}, {4}, {6}, {4}, {
            5}, {7}, {1}, {5}, {8}, {1}, {2}, {9}, {2}, {3}, {10}, {1}, {7}, {
            10}, {2}, {6}, {8}, {3}, {7}, {9}, {4}, {8}, {10}, {5}, {6}, {
            9}}}, Pattern}]}, {
        GraphLayout -> {"Dimension" -> 2}, 
         VertexCoordinates -> {{0.4483544303797468, -0.269957805907173}, {
          0.6064978902953587, -0.14565400843881857`}, {
          0.529113924050633, -0.07479324894514768}, {
          0.529113924050633, -0.46514767932489454`}, {
          0.8421097046413502, -0.14565400843881857`}, {
          1., -0.269957805907173}, {
          0.919831223628692, -0.07479324894514768}, {0.7243037974683544, 
          0.006065822784810127}, {0.7243037974683544, -0.5459915611814347}, {
          0.919831223628692, -0.46514767932489454`}}}]]}, 
      TagBox[
       GraphicsGroupBox[
        GraphicsComplexBox[{{0.4483544303797468, -0.269957805907173}, {
         0.6064978902953587, -0.14565400843881857`}, {
         0.529113924050633, -0.07479324894514768}, {
         0.529113924050633, -0.46514767932489454`}, {
         0.8421097046413502, -0.14565400843881857`}, {
         1., -0.269957805907173}, {0.919831223628692, -0.07479324894514768}, {
         0.7243037974683544, 0.006065822784810127}, {
         0.7243037974683544, -0.5459915611814347}, {
         0.919831223628692, -0.46514767932489454`}}, {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
           ArrowBox[{{1, 3}, {1, 4}, {1, 6}, {2, 4}, {2, 5}, {2, 7}, {3, 5}, {
            3, 8}, {4, 9}, {5, 10}, {6, 7}, {6, 10}, {7, 8}, {8, 9}, {9, 10}},
             0.007027690497890296]}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           DiskBox[1, 0.007027690497890296], DiskBox[2, 0.007027690497890296],
            DiskBox[3, 0.007027690497890296], 
           DiskBox[4, 0.007027690497890296], DiskBox[5, 0.007027690497890296],
            DiskBox[6, 0.007027690497890296], 
           DiskBox[7, 0.007027690497890296], DiskBox[8, 0.007027690497890296],
            DiskBox[9, 0.007027690497890296], 
           DiskBox[10, 0.007027690497890296]}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->"NetworkGraphics",
    FormatType->TraditionalForm,
    FrameTicks->None], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10}, {Null, 
         SparseArray[
         Automatic, {10, 10}, 0, {
          1, {{0, 3, 6, 9, 12, 15, 18, 21, 24, 27, 30}, {{3}, {4}, {6}, {4}, {
            5}, {7}, {1}, {5}, {8}, {1}, {2}, {9}, {2}, {3}, {10}, {1}, {7}, {
            10}, {2}, {6}, {8}, {3}, {7}, {9}, {4}, {8}, {10}, {5}, {6}, {
            9}}}, Pattern}]}, {
        GraphLayout -> {"Dimension" -> 2}, 
         VertexCoordinates -> {{0.454406779661017, -0.22296610169491526`}, {
          0.6325423728813558, -0.5316101694915254}, {
          0.5492372881355932, -0.05873728813559322}, {
          0.4873728813559322, -0.4096610169491525}, {
          0.8221186440677966, -0.5316101694915254}, {
          1., -0.22296610169491526`}, {
          0.9059322033898305, -0.05873728813559322}, {0.7273728813559321, 
          0.006091525423728813}, {0.7273728813559321, -0.2711016949152542}, {
          0.9677966101694915, -0.4096610169491525}}}]]}, 
      TagBox[
       GraphicsGroupBox[
        GraphicsComplexBox[{{0.454406779661017, -0.22296610169491526`}, {
         0.6325423728813558, -0.5316101694915254}, {
         0.5492372881355932, -0.05873728813559322}, {
         0.4873728813559322, -0.4096610169491525}, {
         0.8221186440677966, -0.5316101694915254}, {
         1., -0.22296610169491526`}, {
         0.9059322033898305, -0.05873728813559322}, {0.7273728813559321, 
         0.006091525423728813}, {0.7273728813559321, -0.2711016949152542}, {
         0.9677966101694915, -0.4096610169491525}}, {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
           ArrowBox[{{1, 3}, {1, 4}, {1, 6}, {2, 4}, {2, 5}, {2, 7}, {3, 5}, {
            3, 8}, {4, 9}, {5, 10}, {6, 7}, {6, 10}, {7, 8}, {8, 9}, {9, 10}},
             0.006945401694915254]}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           DiskBox[1, 0.006945401694915254], DiskBox[2, 0.006945401694915254],
            DiskBox[3, 0.006945401694915254], 
           DiskBox[4, 0.006945401694915254], DiskBox[5, 0.006945401694915254],
            DiskBox[6, 0.006945401694915254], 
           DiskBox[7, 0.006945401694915254], DiskBox[8, 0.006945401694915254],
            DiskBox[9, 0.006945401694915254], 
           DiskBox[10, 0.006945401694915254]}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->"NetworkGraphics",
    FormatType->TraditionalForm,
    FrameTicks->None], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10}, {Null, 
         SparseArray[
         Automatic, {10, 10}, 0, {
          1, {{0, 3, 6, 9, 12, 15, 18, 21, 24, 27, 30}, {{3}, {4}, {6}, {4}, {
            5}, {7}, {1}, {5}, {8}, {1}, {2}, {9}, {2}, {3}, {10}, {1}, {7}, {
            10}, {2}, {6}, {8}, {3}, {7}, {9}, {4}, {8}, {10}, {5}, {6}, {
            9}}}, Pattern}]}, {
        GraphLayout -> {"Dimension" -> 2}, 
         VertexCoordinates -> {{0.6022515527950311, -0.5418478260869565}, {
          0.7347049689440993, -0.3123447204968944}, {
          0.6684782608695652, -0.6565993788819876}, {
          0.6684782608695652, -0.42709627329192545`}, {
          0.8672360248447204, -0.3123447204968944}, {
          0.9999999999999999, -0.5418478260869565}, {
          0.9332298136645962, -0.6565993788819876}, {
          0.8012422360248447, -0.6565993788819876}, {
          0.8012422360248447, -0.5035714285714286}, {
          0.9332298136645962, -0.42709627329192545`}}}]]}, 
      TagBox[
       GraphicsGroupBox[
        GraphicsComplexBox[{{0.6022515527950311, -0.5418478260869565}, {
         0.7347049689440993, -0.3123447204968944}, {
         0.6684782608695652, -0.6565993788819876}, {
         0.6684782608695652, -0.42709627329192545`}, {
         0.8672360248447204, -0.3123447204968944}, {
         0.9999999999999999, -0.5418478260869565}, {
         0.9332298136645962, -0.6565993788819876}, {
         0.8012422360248447, -0.6565993788819876}, {
         0.8012422360248447, -0.5035714285714286}, {
         0.9332298136645962, -0.42709627329192545`}}, {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
           ArrowBox[{{1, 3}, {1, 4}, {1, 6}, {2, 4}, {2, 5}, {2, 7}, {3, 5}, {
            3, 8}, {4, 9}, {5, 10}, {6, 7}, {6, 10}, {7, 8}, {8, 9}, {9, 10}},
             0.005063337732919253]}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           DiskBox[1, 0.005063337732919253], DiskBox[2, 0.005063337732919253],
            DiskBox[3, 0.005063337732919253], 
           DiskBox[4, 0.005063337732919253], DiskBox[5, 0.005063337732919253],
            DiskBox[6, 0.005063337732919253], 
           DiskBox[7, 0.005063337732919253], DiskBox[8, 0.005063337732919253],
            DiskBox[9, 0.005063337732919253], 
           DiskBox[10, 0.005063337732919253]}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->"NetworkGraphics",
    FormatType->TraditionalForm,
    FrameTicks->None], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10}, {Null, 
         SparseArray[
         Automatic, {10, 10}, 0, {
          1, {{0, 3, 6, 9, 12, 15, 18, 21, 24, 27, 30}, {{3}, {4}, {6}, {4}, {
            5}, {7}, {1}, {5}, {8}, {1}, {2}, {9}, {2}, {3}, {10}, {1}, {7}, {
            10}, {2}, {6}, {8}, {3}, {7}, {9}, {4}, {8}, {10}, {5}, {6}, {
            9}}}, Pattern}]}, {
        GraphLayout -> {"Dimension" -> 2}, 
         VertexCoordinates -> {{0, 0}, {1, 3}, {0, 4}, {1, 1}, {4, 4}, {2, 
          0}, {2, 2}, {3, 3}, {3, 1}, {4, 0}}}]]}, 
      TagBox[
       GraphicsGroupBox[
        GraphicsComplexBox[{{0., 0.}, {1., 3.}, {0., 4.}, {1., 1.}, {4., 
         4.}, {2., 0.}, {2., 2.}, {3., 3.}, {3., 1.}, {4., 0.}}, {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
           ArrowBox[{{1, 3}, {1, 4}, {1, 6}, {2, 4}, {2, 5}, {2, 7}, {3, 5}, {
            3, 8}, {4, 9}, {5, 10}, {6, 7}, {6, 10}, {7, 8}, {8, 9}, {9, 10}},
             0.03700564971751412]}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           DiskBox[1, 0.03700564971751412], DiskBox[2, 0.03700564971751412], 
           DiskBox[3, 0.03700564971751412], DiskBox[4, 0.03700564971751412], 
           DiskBox[5, 0.03700564971751412], DiskBox[6, 0.03700564971751412], 
           DiskBox[7, 0.03700564971751412], DiskBox[8, 0.03700564971751412], 
           DiskBox[9, 0.03700564971751412], 
           DiskBox[10, 0.03700564971751412]}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->"NetworkGraphics",
    FormatType->TraditionalForm,
    FrameTicks->None], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10}, {Null, 
         SparseArray[
         Automatic, {10, 10}, 0, {
          1, {{0, 3, 6, 9, 12, 15, 18, 21, 24, 27, 30}, {{3}, {4}, {6}, {4}, {
            5}, {7}, {1}, {5}, {8}, {1}, {2}, {9}, {2}, {3}, {10}, {1}, {7}, {
            10}, {2}, {6}, {8}, {3}, {7}, {9}, {4}, {8}, {10}, {5}, {6}, {
            9}}}, Pattern}]}, {
        GraphLayout -> {"Dimension" -> 2}, 
         VertexCoordinates -> {{2, 2}, {6, 4}, {4, 2}, {2, 4}, {6, 2}, {5, 
          5}, {6, 6}, {4, 6}, {2, 6}, {3, 5}}}]]}, 
      TagBox[
       GraphicsGroupBox[
        GraphicsComplexBox[{{2., 2.}, {6., 4.}, {4., 2.}, {2., 4.}, {6., 
         2.}, {5., 5.}, {6., 6.}, {4., 6.}, {2., 6.}, {3., 5.}}, {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
           ArrowBox[{{1, 3}, {1, 4}, {1, 6}, {2, 4}, {2, 5}, {2, 7}, {3, 5}, {
            3, 8}, {4, 9}, {5, 10}, {6, 7}, {6, 10}, {7, 8}, {8, 9}, {9, 10}},
             0.03700564971751412]}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           DiskBox[1, 0.03700564971751412], DiskBox[2, 0.03700564971751412], 
           DiskBox[3, 0.03700564971751412], DiskBox[4, 0.03700564971751412], 
           DiskBox[5, 0.03700564971751412], DiskBox[6, 0.03700564971751412], 
           DiskBox[7, 0.03700564971751412], DiskBox[8, 0.03700564971751412], 
           DiskBox[9, 0.03700564971751412], 
           DiskBox[10, 0.03700564971751412]}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->"NetworkGraphics",
    FormatType->TraditionalForm,
    FrameTicks->None], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10}, {Null, 
         SparseArray[
         Automatic, {10, 10}, 0, {
          1, {{0, 3, 6, 9, 12, 15, 18, 21, 24, 27, 30}, {{3}, {4}, {6}, {4}, {
            5}, {7}, {1}, {5}, {8}, {1}, {2}, {9}, {2}, {3}, {10}, {1}, {7}, {
            10}, {2}, {6}, {8}, {3}, {7}, {9}, {4}, {8}, {10}, {5}, {6}, {
            9}}}, Pattern}]}, {
        GraphLayout -> {"Dimension" -> 2}, 
         VertexCoordinates -> {{(2/(5 + 5^Rational[1, 2]))^Rational[1, 2], 
            0}, {Rational[1, 2] (1 - 2 5^Rational[-1, 2])^Rational[1, 2], 
            Rational[1, 2]}, {
           Rational[-1, 2] (Rational[1, 10] (5 + 5^Rational[1, 2]))^
             Rational[1, 2], Rational[1, 4] (-1 + 5^Rational[1, 2])}, {
           Rational[-1, 2] (Rational[1, 10] (5 + 5^Rational[1, 2]))^
             Rational[1, 2], Rational[1, 4] (1 - 5^Rational[1, 2])}, {
           Rational[1, 2] (1 - 2 5^Rational[-1, 2])^Rational[1, 2], 
            Rational[-1, 2]}, {
           0, (Rational[1, 10] (5 + 5^Rational[1, 2]))^Rational[1, 2]}, {
           Rational[1, 4] (-1 - 5^Rational[1, 2]), 
            Rational[1, 2] (Rational[1, 10] (5 - 5^Rational[1, 2]))^
             Rational[1, 2]}, {
            Rational[-1, 2], 
            Rational[-1, 2] (1 + 2 5^Rational[-1, 2])^Rational[1, 2]}, {
            Rational[1, 2], 
            Rational[-1, 2] (1 + 2 5^Rational[-1, 2])^Rational[1, 2]}, {
           Rational[1, 4] (1 + 5^Rational[1, 2]), 
            Rational[1, 2] (Rational[1, 10] (5 - 5^Rational[1, 2]))^
             Rational[1, 2]}}}]]}, 
      TagBox[
       GraphicsGroupBox[
        GraphicsComplexBox[{{0.5257311121191336, 0.}, {0.16245984811645317`, 
         0.5}, {-0.42532540417602, 
         0.30901699437494745`}, {-0.42532540417602, -0.30901699437494745`}, {
         0.16245984811645317`, -0.5}, {0., 
         0.85065080835204}, {-0.8090169943749475, 
         0.2628655560595668}, {-0.5, -0.6881909602355868}, {
         0.5, -0.6881909602355868}, {0.8090169943749475, 
         0.2628655560595668}}, {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
           ArrowBox[{{1, 3}, {1, 4}, {1, 6}, {2, 4}, {2, 5}, {2, 7}, {3, 5}, {
            3, 8}, {4, 9}, {5, 10}, {6, 7}, {6, 10}, {7, 8}, {8, 9}, {9, 10}},
             0.019434941751084317`]}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           DiskBox[1, 0.019434941751084317], DiskBox[2, 0.019434941751084317],
            DiskBox[3, 0.019434941751084317], 
           DiskBox[4, 0.019434941751084317], DiskBox[5, 0.019434941751084317],
            DiskBox[6, 0.019434941751084317], 
           DiskBox[7, 0.019434941751084317], DiskBox[8, 0.019434941751084317],
            DiskBox[9, 0.019434941751084317], 
           DiskBox[10, 0.019434941751084317]}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->"NetworkGraphics",
    FormatType->TraditionalForm,
    FrameTicks->None], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10}, {Null, 
         SparseArray[
         Automatic, {10, 10}, 0, {
          1, {{0, 3, 6, 9, 12, 15, 18, 21, 24, 27, 30}, {{3}, {4}, {6}, {4}, {
            5}, {7}, {1}, {5}, {8}, {1}, {2}, {9}, {2}, {3}, {10}, {1}, {7}, {
            10}, {2}, {6}, {8}, {3}, {7}, {9}, {4}, {8}, {10}, {5}, {6}, {
            9}}}, Pattern}]}, {
        GraphLayout -> {"Dimension" -> 2}, 
         VertexCoordinates -> {{0.5353024564670038, 0.9588896176713285}, {
          0.3281636798341197, 0.6772739775299917}, {0.5353024564670038, 
          0.4701352008971077}, {0.07060491293400757, 0.6212047479000488}, {
          0.3281636798341197, 0.2629964242642236}, {1., 0.6212047479000488}, {
          0.7424412330998879, 0.6772739775299917}, {0.7424412330998879, 
          0.2629964242642236}, {0.24791181420490352`, 0.07459649632074725}, {
          0.8226930987291041, 0.07459649632074725}}}]]}, 
      TagBox[
       GraphicsGroupBox[
        GraphicsComplexBox[{{0.5353024564670038, 0.9588896176713285}, {
         0.3281636798341197, 0.6772739775299917}, {0.5353024564670038, 
         0.4701352008971077}, {0.07060491293400757, 0.6212047479000488}, {
         0.3281636798341197, 0.2629964242642236}, {1., 0.6212047479000488}, {
         0.7424412330998879, 0.6772739775299917}, {0.7424412330998879, 
         0.2629964242642236}, {0.24791181420490352`, 0.07459649632074725}, {
         0.8226930987291041, 0.07459649632074725}}, {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
           ArrowBox[{{1, 3}, {1, 4}, {1, 6}, {2, 4}, {2, 5}, {2, 7}, {3, 5}, {
            3, 8}, {4, 9}, {5, 10}, {6, 7}, {6, 10}, {7, 8}, {8, 9}, {9, 10}},
             0.011831199458350082`]}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           DiskBox[1, 0.011831199458350082], DiskBox[2, 0.011831199458350082],
            DiskBox[3, 0.011831199458350082], 
           DiskBox[4, 0.011831199458350082], DiskBox[5, 0.011831199458350082],
            DiskBox[6, 0.011831199458350082], 
           DiskBox[7, 0.011831199458350082], DiskBox[8, 0.011831199458350082],
            DiskBox[9, 0.011831199458350082], 
           DiskBox[10, 0.011831199458350082]}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->"NetworkGraphics",
    FormatType->TraditionalForm,
    FrameTicks->None], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10}, {Null, 
         SparseArray[
         Automatic, {10, 10}, 0, {
          1, {{0, 3, 6, 9, 12, 15, 18, 21, 24, 27, 30}, {{3}, {4}, {6}, {4}, {
            5}, {7}, {1}, {5}, {8}, {1}, {2}, {9}, {2}, {3}, {10}, {1}, {7}, {
            10}, {2}, {6}, {8}, {3}, {7}, {9}, {4}, {8}, {10}, {5}, {6}, {
            9}}}, Pattern}]}, {
        GraphLayout -> {"Dimension" -> 2}, 
         VertexCoordinates -> {{(Rational[5, 8] + 
             Rational[-1, 8] 5^Rational[1, 2])^Rational[1, 2], 
            Rational[1, 4] (-1 - 5^Rational[1, 2])}, {0, 
           1}, {(Rational[1, 2] (5 - 5^Rational[1, 2]))^Rational[1, 2], 
            Rational[1, 2] (-1 - 5^Rational[1, 2])}, {(Rational[5, 8] + 
             Rational[1, 8] 5^Rational[1, 2])^Rational[1, 2], 
            Rational[1, 4] (-1 + 5^Rational[1, 2])}, {0, 2}, {
           Rational[-1, 2] (Rational[1, 2] (5 - 5^Rational[1, 2]))^
             Rational[1, 2], Rational[1, 4] (-1 - 5^Rational[1, 2])}, {
           Rational[-1, 2] (Rational[1, 2] (5 + 5^Rational[1, 2]))^
             Rational[1, 2], 
            Rational[1, 4] (-1 + 
             5^Rational[1, 2])}, {-(Rational[1, 2] (5 + 5^Rational[1, 2]))^
             Rational[1, 2], 
            Rational[1, 2] (-1 + 5^Rational[1, 2])}, {(
             Rational[1, 2] (5 + 5^Rational[1, 2]))^Rational[1, 2], 
            Rational[1, 2] (-1 + 
             5^Rational[1, 2])}, {-(Rational[1, 2] (5 - 5^Rational[1, 2]))^
             Rational[1, 2], Rational[1, 2] (-1 - 5^Rational[1, 2])}}}]]}, 
      TagBox[
       GraphicsGroupBox[
        GraphicsComplexBox[{{0.5877852522924731, -0.8090169943749475}, {0., 
         1.}, {1.1755705045849463`, -1.618033988749895}, {0.9510565162951535, 
         0.30901699437494745`}, {0., 
         2.}, {-0.5877852522924731, -0.8090169943749475}, \
{-0.9510565162951535, 0.30901699437494745`}, {-1.902113032590307, 
         0.6180339887498949}, {1.902113032590307, 
         0.6180339887498949}, {-1.1755705045849463`, -1.618033988749895}}, {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
           ArrowBox[{{1, 3}, {1, 4}, {1, 6}, {2, 4}, {2, 5}, {2, 7}, {3, 5}, {
            3, 8}, {4, 9}, {5, 10}, {6, 7}, {6, 10}, {7, 8}, {8, 9}, {9, 10}},
             0.03574187784409402]}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           DiskBox[1, 0.03574187784409402], DiskBox[2, 0.03574187784409402], 
           DiskBox[3, 0.03574187784409402], DiskBox[4, 0.03574187784409402], 
           DiskBox[5, 0.03574187784409402], DiskBox[6, 0.03574187784409402], 
           DiskBox[7, 0.03574187784409402], DiskBox[8, 0.03574187784409402], 
           DiskBox[9, 0.03574187784409402], 
           DiskBox[10, 0.03574187784409402]}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->"NetworkGraphics",
    FormatType->TraditionalForm,
    FrameTicks->None]}], "}"}]], "Output",
 CellChangeTimes->{3.8772750832385836`*^9},
 CellLabel->"Out[28]=",ExpressionUUID->"5f2b1e88-edf2-4ff4-92ec-0fbc50cbea75"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graph", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"1", "<->", "2"}], ",", 
    RowBox[{"2", "<->", "3"}], ",", 
    RowBox[{"3", "<->", "4"}], ",", 
    RowBox[{"4", "<->", "5"}], ",", 
    RowBox[{"5", "<->", "6"}], ",", 
    RowBox[{"6", "<->", "1"}], ",", 
    RowBox[{"1", "<->", "7"}], ",", 
    RowBox[{"3", "<->", "7"}], ",", 
    RowBox[{"5", "<->", "7"}], ",", 
    RowBox[{"2", "<->", "8"}], ",", 
    RowBox[{"4", "<->", "9"}], ",", 
    RowBox[{"6", "<->", "10"}], ",", 
    RowBox[{"8", "<->", "9"}], ",", 
    RowBox[{"9", "<->", "10"}], ",", 
    RowBox[{"8", "<->", "10"}]}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.877275339522806*^9, 3.8772753396634264`*^9}},
 CellLabel->"In[42]:=",ExpressionUUID->"da2a7170-bc92-4504-ad48-55e8a67d7bd0"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10}, {
      Null, {{1, 2}, {2, 3}, {3, 4}, {4, 5}, {5, 6}, {6, 1}, {1, 7}, {3, 7}, {
       5, 7}, {2, 8}, {4, 9}, {6, 10}, {8, 9}, {9, 10}, {8, 10}}}]]}, 
    TagBox[
     GraphicsGroupBox[
      GraphicsComplexBox[{{1.9671526222809765`, 0.15933874831737238`}, {
       1.0975338020014784`, 0.}, {1.7670671121341712`, 0.9112292035310907}, {
       1.0988220344561788`, 1.8238622315805233`}, {1.9680261403086112`, 
       1.6622923187166894`}, {1.1670543901370138`, 0.9113626329493014}, {
       2.5831162917795245`, 0.9103917748751637}, {0., 0.3394084658421136}, {
       0.0007147226678090313, 1.4834437949644885`}, {0.02308778666949629, 
       0.9110855393061247}}, {
        {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
         ArrowBox[{{1, 2}, {1, 6}, {1, 7}, {2, 3}, {2, 8}, {3, 4}, {3, 7}, {4,
           5}, {4, 9}, {5, 6}, {5, 7}, {6, 10}, {8, 9}, {8, 10}, {9, 10}}, 
          0.027173388425058828`]}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         DiskBox[1, 0.027173388425058828], DiskBox[2, 0.027173388425058828], 
         DiskBox[3, 0.027173388425058828], DiskBox[4, 0.027173388425058828], 
         DiskBox[5, 0.027173388425058828], DiskBox[6, 0.027173388425058828], 
         DiskBox[7, 0.027173388425058828], DiskBox[8, 0.027173388425058828], 
         DiskBox[9, 0.027173388425058828], 
         DiskBox[10, 0.027173388425058828]}}]],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->"NetworkGraphics",
  FormatType->TraditionalForm,
  FrameTicks->None]], "Output",
 CellChangeTimes->{3.877275340442646*^9},
 CellLabel->"Out[42]=",ExpressionUUID->"18133ce4-440a-4836-b382-4b74a4fa1799"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graph", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"1", "<->", "2"}], ",", 
     RowBox[{"2", "<->", "3"}], ",", 
     RowBox[{"3", "<->", "4"}], ",", 
     RowBox[{"4", "<->", "5"}], ",", 
     RowBox[{"5", "<->", "6"}], ",", 
     RowBox[{"6", "<->", "1"}], ",", 
     RowBox[{"1", "<->", "7"}], ",", 
     RowBox[{"3", "<->", "7"}], ",", 
     RowBox[{"5", "<->", "7"}], ",", 
     RowBox[{"2", "<->", "8"}], ",", 
     RowBox[{"4", "<->", "9"}], ",", 
     RowBox[{"6", "<->", "10"}], ",", 
     RowBox[{"8", "<->", "9"}], ",", 
     RowBox[{"9", "<->", "10"}], ",", 
     RowBox[{"8", "<->", "10"}]}], "}"}], ",", 
   RowBox[{"GraphLayout", "->", "\"\<CircularEmbedding\>\""}], ",", 
   RowBox[{"VertexLabels", "->", "Automatic"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8772751293738527`*^9, 3.8772752603436813`*^9}, {
  3.877275301487045*^9, 3.8772753296731*^9}},
 CellLabel->"In[41]:=",ExpressionUUID->"7ea04af8-14ba-4287-a623-2ae9a4f6d5b5"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10}, {
      Null, {{1, 2}, {2, 3}, {3, 4}, {4, 5}, {5, 6}, {6, 1}, {1, 7}, {3, 7}, {
       5, 7}, {2, 8}, {4, 9}, {6, 10}, {8, 9}, {9, 10}, {8, 10}}}, {
      GraphLayout -> "CircularEmbedding", VertexLabels -> {Automatic}}]]}, 
    TagBox[GraphicsGroupBox[{
       {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
        ArrowBox[CompressedData["
1:eJxTTMoPSmVmYGDgB2ImKE6OKmVRPv9o/9ov02eXP35pXxt7Y83GxJN7GMDg
gz26fCSEb78IykeXZwx1EebLf7c/8aW++ftjlzHM+xsClre3wSHPBNFvnwyR
34+uHmr/fqj9GPLo9qOr/wdRv98Oaj66fH3JXEvr00dtoO7BpR7uf3R5HPbD
1adA+eug9qH7F91+dHl0/ejq0eUB43XuVw==
         "], 0.02261146496815286]}, 
       {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
        0.7]}], {
         DiskBox[{-0.5877852522924737, 0.809016994374948}, 
          0.02261146496815286], 
         InsetBox["1", 
          Offset[{-1.4530850560107222, 2.}, \
{-0.602644690572911, 0.8294692565724991}], ImageScaled[{0.8632712640026805, 0.}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-7.044813998280222*^-16, 1.}, 0.02261146496815286], 
         InsetBox["2", 
          Offset[{-1.4089627996560444*^-15, 2.}, \
{-7.204107563209488*^-16, 1.0226114649681528}], ImageScaled[{0.5000000000000003, 0.}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.9510565162951533, 0.30901699437494634}, 
          0.02261146496815286], 
         InsetBox["3", 
          Offset[{1.9999999999999998, 0.6498393924658105}, \
{0.9731146393297004, 0.3161841130107994}], ImageScaled[{5.551115123125783*^-17, 0.33754015188354736}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-0.5877852522924726, -0.8090169943749468}, 
          0.02261146496815286], 
         InsetBox["4", 
          Offset[{-1.4530850560107216, -2.}, \
{-0.6026446905729099, -0.8294692565724979}], ImageScaled[{0.8632712640026804, 1.}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-0.9510565162951534, -0.30901699437494645}, 
          0.02261146496815286], 
         InsetBox["5", 
          Offset[{-2., -0.6498393924658107}, \
{-0.9731146393297005, -0.3161841130107995}], ImageScaled[{1., 0.6624598481164526}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.5877852522924726, 0.8090169943749468}, 
          0.02261146496815286], 
         InsetBox["6", 
          Offset[{1.4530850560107216, 2.}, \
{0.6026446905729099, 0.8294692565724979}], ImageScaled[{0.1367287359973196, 0.}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-0.9510565162951538, 0.3090169943749484}, 
          0.02261146496815286], 
         InsetBox["7", 
          Offset[{-2., 0.6498393924658146}, \
{-0.9731146393297009, 0.3161841130108015}], ImageScaled[{1., 0.33754015188354636}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.9510565162951539, -0.3090169943749485}, 
          0.02261146496815286], 
         InsetBox["8", 
          Offset[{2., -0.6498393924658148}, \
{0.973114639329701, -0.3161841130108016}], ImageScaled[{0., 0.6624598481164536}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{6.049014748177263*^-16, -1.}, 0.02261146496815286], 
         InsetBox["9", 
          Offset[{1.2098029496354525*^-15, -2.}, \
{6.185791833247513*^-16, -1.0226114649681528}], ImageScaled[{0.4999999999999997, 1.}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.5877852522924738, -0.8090169943749481}, 
          0.02261146496815286], 
         InsetBox["10", 
          Offset[{1.4530850560107222, -2.}, \
{0.602644690572911, -0.8294692565724993}], ImageScaled[{0.13672873599731944, 1.}],
          BaseStyle->"Graphics"]}}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->"NetworkGraphics",
  FormatType->TraditionalForm,
  FrameTicks->None]], "Output",
 CellChangeTimes->{{3.8772751512609415`*^9, 3.87727526062488*^9}, {
  3.8772753040494537`*^9, 3.8772753300636683`*^9}},
 CellLabel->"Out[41]=",ExpressionUUID->"c4e412d6-25fe-4e64-99d7-7b897f7855e1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"IsomorphicGraphQ", "[", 
  RowBox[{
   RowBox[{"Graph", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"1", "<->", "2"}], ",", 
       RowBox[{"2", "<->", "3"}], ",", 
       RowBox[{"3", "<->", "4"}], ",", 
       RowBox[{"4", "<->", "5"}], ",", 
       RowBox[{"5", "<->", "6"}], ",", 
       RowBox[{"6", "<->", "1"}], ",", 
       RowBox[{"1", "<->", "7"}], ",", 
       RowBox[{"3", "<->", "7"}], ",", 
       RowBox[{"5", "<->", "7"}], ",", 
       RowBox[{"2", "<->", "8"}], ",", 
       RowBox[{"4", "<->", "9"}], ",", 
       RowBox[{"6", "<->", "10"}], ",", 
       RowBox[{"8", "<->", "9"}], ",", 
       RowBox[{"9", "<->", "10"}], ",", 
       RowBox[{"8", "<->", "10"}]}], "}"}], ",", 
     RowBox[{"GraphLayout", "->", "\"\<CircularEmbedding\>\""}], ",", 
     RowBox[{"VertexLabels", "->", "Automatic"}]}], "]"}], ",", 
   RowBox[{"GraphData", "[", "\"\<PetersenGraph\>\"", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.877275346942771*^9, 3.877275352955202*^9}},
 CellLabel->"In[43]:=",ExpressionUUID->"6e4ff799-4678-4e8c-8802-a6ef4878bb83"],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{3.8772753532206836`*^9},
 CellLabel->"Out[43]=",ExpressionUUID->"81bb6ad9-1a2a-4631-ba62-831c0535f6d9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindGraphIsomorphism", "[", 
  RowBox[{
   RowBox[{"GraphData", "[", "\"\<PetersenGraph\>\"", "]"}], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10}, {Null, 
         SparseArray[
         Automatic, {10, 10}, 0, {
          1, {{0, 3, 6, 9, 12, 15, 18, 21, 24, 27, 30}, {{3}, {4}, {6}, {4}, {
            5}, {7}, {1}, {5}, {8}, {1}, {2}, {9}, {2}, {3}, {10}, {1}, {7}, {
            10}, {2}, {6}, {8}, {3}, {7}, {9}, {4}, {8}, {10}, {5}, {6}, {
            9}}}, Pattern}]}, {
        GraphLayout -> {"Dimension" -> 2}, 
         VertexCoordinates -> {{0.454406779661017, -0.22296610169491526`}, {
          0.6325423728813558, -0.5316101694915254}, {
          0.5492372881355932, -0.05873728813559322}, {
          0.4873728813559322, -0.4096610169491525}, {
          0.8221186440677966, -0.5316101694915254}, {
          1., -0.22296610169491526`}, {
          0.9059322033898305, -0.05873728813559322}, {0.7273728813559321, 
          0.006091525423728813}, {0.7273728813559321, -0.2711016949152542}, {
          0.9677966101694915, -0.4096610169491525}}}]]}, 
      TagBox[
       GraphicsGroupBox[
        GraphicsComplexBox[{{0.454406779661017, -0.22296610169491526`}, {
         0.6325423728813558, -0.5316101694915254}, {
         0.5492372881355932, -0.05873728813559322}, {
         0.4873728813559322, -0.4096610169491525}, {
         0.8221186440677966, -0.5316101694915254}, {
         1., -0.22296610169491526`}, {
         0.9059322033898305, -0.05873728813559322}, {0.7273728813559321, 
         0.006091525423728813}, {0.7273728813559321, -0.2711016949152542}, {
         0.9677966101694915, -0.4096610169491525}}, {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
           ArrowBox[{{1, 3}, {1, 4}, {1, 6}, {2, 4}, {2, 5}, {2, 7}, {3, 5}, {
            3, 8}, {4, 9}, {5, 10}, {6, 7}, {6, 10}, {7, 8}, {8, 9}, {9, 10}},
             0.006945401694915254]}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           DiskBox[1, 0.006945401694915254], DiskBox[2, 0.006945401694915254],
            DiskBox[3, 0.006945401694915254], 
           DiskBox[4, 0.006945401694915254], DiskBox[5, 0.006945401694915254],
            DiskBox[6, 0.006945401694915254], 
           DiskBox[7, 0.006945401694915254], DiskBox[8, 0.006945401694915254],
            DiskBox[9, 0.006945401694915254], 
           DiskBox[10, 0.006945401694915254]}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->"NetworkGraphics",
    FormatType->TraditionalForm,
    FrameTicks->None]}], "]"}]], "Input",
 CellChangeTimes->{{3.8772754426379685`*^9, 3.8772754653816485`*^9}},
 CellLabel->"In[45]:=",ExpressionUUID->"9d928a54-75f4-44d1-bfb9-26049db1a431"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\[LeftAssociation]", 
   RowBox[{
    RowBox[{"1", "\[Rule]", "1"}], ",", 
    RowBox[{"2", "\[Rule]", "2"}], ",", 
    RowBox[{"3", "\[Rule]", "3"}], ",", 
    RowBox[{"4", "\[Rule]", "4"}], ",", 
    RowBox[{"5", "\[Rule]", "5"}], ",", 
    RowBox[{"6", "\[Rule]", "6"}], ",", 
    RowBox[{"7", "\[Rule]", "7"}], ",", 
    RowBox[{"8", "\[Rule]", "8"}], ",", 
    RowBox[{"9", "\[Rule]", "9"}], ",", 
    RowBox[{"10", "\[Rule]", "10"}]}], "\[RightAssociation]"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.87727546158552*^9, 3.877275465662798*^9}},
 CellLabel->"Out[45]=",ExpressionUUID->"a3be9754-8553-4fdb-8542-926e02b4bbbe"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"FindGraphIsomorphism", "[", 
  RowBox[{
   RowBox[{"GraphData", "[", "\"\<PetersenGraph\>\"", "]"}], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10}, {Null, 
         SparseArray[
         Automatic, {10, 10}, 0, {
          1, {{0, 3, 6, 9, 12, 15, 18, 21, 24, 27, 30}, {{3}, {4}, {6}, {4}, {
            5}, {7}, {1}, {5}, {8}, {1}, {2}, {9}, {2}, {3}, {10}, {1}, {7}, {
            10}, {2}, {6}, {8}, {3}, {7}, {9}, {4}, {8}, {10}, {5}, {6}, {
            9}}}, Pattern}]}, {
        GraphLayout -> {"Dimension" -> 2}, 
         VertexCoordinates -> {{0.454406779661017, -0.22296610169491526`}, {
          0.6325423728813558, -0.5316101694915254}, {
          0.5492372881355932, -0.05873728813559322}, {
          0.4873728813559322, -0.4096610169491525}, {
          0.8221186440677966, -0.5316101694915254}, {
          1., -0.22296610169491526`}, {
          0.9059322033898305, -0.05873728813559322}, {0.7273728813559321, 
          0.006091525423728813}, {0.7273728813559321, -0.2711016949152542}, {
          0.9677966101694915, -0.4096610169491525}}}]]}, 
      TagBox[
       GraphicsGroupBox[
        GraphicsComplexBox[{{0.454406779661017, -0.22296610169491526`}, {
         0.6325423728813558, -0.5316101694915254}, {
         0.5492372881355932, -0.05873728813559322}, {
         0.4873728813559322, -0.4096610169491525}, {
         0.8221186440677966, -0.5316101694915254}, {
         1., -0.22296610169491526`}, {
         0.9059322033898305, -0.05873728813559322}, {0.7273728813559321, 
         0.006091525423728813}, {0.7273728813559321, -0.2711016949152542}, {
         0.9677966101694915, -0.4096610169491525}}, {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
           ArrowBox[{{1, 3}, {1, 4}, {1, 6}, {2, 4}, {2, 5}, {2, 7}, {3, 5}, {
            3, 8}, {4, 9}, {5, 10}, {6, 7}, {6, 10}, {7, 8}, {8, 9}, {9, 10}},
             0.006945401694915254]}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           DiskBox[1, 0.006945401694915254], DiskBox[2, 0.006945401694915254],
            DiskBox[3, 0.006945401694915254], 
           DiskBox[4, 0.006945401694915254], DiskBox[5, 0.006945401694915254],
            DiskBox[6, 0.006945401694915254], 
           DiskBox[7, 0.006945401694915254], DiskBox[8, 0.006945401694915254],
            DiskBox[9, 0.006945401694915254], 
           DiskBox[10, 0.006945401694915254]}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->"NetworkGraphics",
    FormatType->TraditionalForm,
    FrameTicks->None]}], "]"}]], "Input",
 CellChangeTimes->{{3.8772754426379685`*^9, 
  3.8772754687053423`*^9}},ExpressionUUID->"ca12cb99-8dd5-4902-bf0d-\
7172bcb4600a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindGraphIsomorphism", "[", 
  RowBox[{
   RowBox[{"GraphData", "[", "\"\<PetersenGraph\>\"", "]"}], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10}, {Null, 
         SparseArray[
         Automatic, {10, 10}, 0, {
          1, {{0, 3, 6, 9, 12, 15, 18, 21, 24, 27, 30}, {{3}, {4}, {6}, {4}, {
            5}, {7}, {1}, {5}, {8}, {1}, {2}, {9}, {2}, {3}, {10}, {1}, {7}, {
            10}, {2}, {6}, {8}, {3}, {7}, {9}, {4}, {8}, {10}, {5}, {6}, {
            9}}}, Pattern}]}, {
        GraphLayout -> {"Dimension" -> 2}, 
         VertexCoordinates -> {{0.4483544303797468, -0.269957805907173}, {
          0.6048101265822785, -0.3389873417721519}, {
          0.5863291139240506, -0.5090295358649789}, {
          0.5863291139240506, -0.030911392405063295`}, {
          0.8624472573839662, -0.5090295358649789}, {
          0.7243037974683544, -0.13198312236286922`}, {
          0.7243037974683544, -0.269957805907173}, {
          0.8437974683544304, -0.3389873417721519}, {
          0.8624472573839662, -0.030911392405063295`}, {
          1., -0.269957805907173}}}]]}, 
      TagBox[
       GraphicsGroupBox[
        GraphicsComplexBox[{{0.4483544303797468, -0.269957805907173}, {
         0.6048101265822785, -0.3389873417721519}, {
         0.5863291139240506, -0.5090295358649789}, {
         0.5863291139240506, -0.030911392405063295`}, {
         0.8624472573839662, -0.5090295358649789}, {
         0.7243037974683544, -0.13198312236286922`}, {
         0.7243037974683544, -0.269957805907173}, {
         0.8437974683544304, -0.3389873417721519}, {
         0.8624472573839662, -0.030911392405063295`}, {
         1., -0.269957805907173}}, {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
           ArrowBox[{{1, 3}, {1, 4}, {1, 6}, {2, 4}, {2, 5}, {2, 7}, {3, 5}, {
            3, 8}, {4, 9}, {5, 10}, {6, 7}, {6, 10}, {7, 8}, {8, 9}, {9, 10}},
             0.007022448101265823]}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           DiskBox[1, 0.007022448101265823], DiskBox[2, 0.007022448101265823],
            DiskBox[3, 0.007022448101265823], 
           DiskBox[4, 0.007022448101265823], DiskBox[5, 0.007022448101265823],
            DiskBox[6, 0.007022448101265823], 
           DiskBox[7, 0.007022448101265823], DiskBox[8, 0.007022448101265823],
            DiskBox[9, 0.007022448101265823], 
           DiskBox[10, 0.007022448101265823]}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->"NetworkGraphics",
    FormatType->TraditionalForm,
    FrameTicks->None]}], "]"}]], "Input",
 CellChangeTimes->{{3.8772754426379685`*^9, 3.877275486116083*^9}},
 CellLabel->"In[46]:=",ExpressionUUID->"3d80461f-8d40-491b-9921-92e330c551fc"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\[LeftAssociation]", 
   RowBox[{
    RowBox[{"1", "\[Rule]", "1"}], ",", 
    RowBox[{"2", "\[Rule]", "2"}], ",", 
    RowBox[{"3", "\[Rule]", "3"}], ",", 
    RowBox[{"4", "\[Rule]", "4"}], ",", 
    RowBox[{"5", "\[Rule]", "5"}], ",", 
    RowBox[{"6", "\[Rule]", "6"}], ",", 
    RowBox[{"7", "\[Rule]", "7"}], ",", 
    RowBox[{"8", "\[Rule]", "8"}], ",", 
    RowBox[{"9", "\[Rule]", "9"}], ",", 
    RowBox[{"10", "\[Rule]", "10"}]}], "\[RightAssociation]"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.8772754871004596`*^9},
 CellLabel->"Out[46]=",ExpressionUUID->"405a1890-997e-4fad-b532-0f00ab30920f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindGraphIsomorphism", "[", 
  RowBox[{
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10}, {Null, 
         SparseArray[
         Automatic, {10, 10}, 0, {
          1, {{0, 3, 6, 9, 12, 15, 18, 21, 24, 27, 30}, {{3}, {4}, {6}, {4}, {
            5}, {7}, {1}, {5}, {8}, {1}, {2}, {9}, {2}, {3}, {10}, {1}, {7}, {
            10}, {2}, {6}, {8}, {3}, {7}, {9}, {4}, {8}, {10}, {5}, {6}, {
            9}}}, Pattern}]}, {
        GraphLayout -> {"Dimension" -> 2}, 
         VertexCoordinates -> {{2, 2}, {6, 4}, {4, 2}, {2, 4}, {6, 2}, {5, 
          5}, {6, 6}, {4, 6}, {2, 6}, {3, 5}}}]]}, 
      TagBox[
       GraphicsGroupBox[
        GraphicsComplexBox[{{2., 2.}, {6., 4.}, {4., 2.}, {2., 4.}, {6., 
         2.}, {5., 5.}, {6., 6.}, {4., 6.}, {2., 6.}, {3., 5.}}, {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
           ArrowBox[{{1, 3}, {1, 4}, {1, 6}, {2, 4}, {2, 5}, {2, 7}, {3, 5}, {
            3, 8}, {4, 9}, {5, 10}, {6, 7}, {6, 10}, {7, 8}, {8, 9}, {9, 10}},
             0.03700564971751412]}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           DiskBox[1, 0.03700564971751412], DiskBox[2, 0.03700564971751412], 
           DiskBox[3, 0.03700564971751412], DiskBox[4, 0.03700564971751412], 
           DiskBox[5, 0.03700564971751412], DiskBox[6, 0.03700564971751412], 
           DiskBox[7, 0.03700564971751412], DiskBox[8, 0.03700564971751412], 
           DiskBox[9, 0.03700564971751412], 
           DiskBox[10, 0.03700564971751412]}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->"NetworkGraphics",
    FormatType->TraditionalForm,
    FrameTicks->None], ",", 
   RowBox[{"GraphData", "[", "\"\<PetersenGraph\>\"", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8772754426379685`*^9, 3.8772755069856696`*^9}},
 CellLabel->"In[47]:=",ExpressionUUID->"c989af07-f08b-4a6e-8725-5c31aa4e7d0f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\[LeftAssociation]", 
   RowBox[{
    RowBox[{"1", "\[Rule]", "1"}], ",", 
    RowBox[{"2", "\[Rule]", "2"}], ",", 
    RowBox[{"3", "\[Rule]", "3"}], ",", 
    RowBox[{"4", "\[Rule]", "4"}], ",", 
    RowBox[{"5", "\[Rule]", "5"}], ",", 
    RowBox[{"6", "\[Rule]", "6"}], ",", 
    RowBox[{"7", "\[Rule]", "7"}], ",", 
    RowBox[{"8", "\[Rule]", "8"}], ",", 
    RowBox[{"9", "\[Rule]", "9"}], ",", 
    RowBox[{"10", "\[Rule]", "10"}]}], "\[RightAssociation]"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.877275507282531*^9},
 CellLabel->"Out[47]=",ExpressionUUID->"3e9aa0bb-0222-443c-984c-7c853f7c1fbb"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Exercise 44", "Section",
 CellChangeTimes->{{3.877275537921226*^9, 3.8772755394107227`*^9}, {
  3.8772759012737303`*^9, 
  3.877275902586233*^9}},ExpressionUUID->"e5619394-c8c3-4629-a93d-\
5d930f6dd6db"],

Cell["How many symmetries does Chv\[AGrave]tal\[CloseCurlyQuote]s graph \
have?", "Text",
 CellChangeTimes->{{3.8772755408639307`*^9, 
  3.8772755541195683`*^9}},ExpressionUUID->"0a3d45db-3116-47d7-bcfc-\
bb6646137ec2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GraphData", "[", "\"\<ChvatalGraph\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.8772755203491106`*^9, 3.8772755229585557`*^9}},
 CellLabel->"In[49]:=",ExpressionUUID->"68f857c8-c32c-41a1-9aff-e48c4530d5f1"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12}, {Null, 
       SparseArray[
       Automatic, {12, 12}, 0, {
        1, {{0, 4, 8, 12, 16, 20, 24, 28, 32, 36, 40, 44, 48}, {{7}, {10}, {
          11}, {12}, {3}, {6}, {8}, {11}, {2}, {7}, {9}, {12}, {8}, {10}, {
          11}, {12}, {6}, {9}, {11}, {12}, {2}, {5}, {7}, {10}, {1}, {3}, {
          6}, {8}, {2}, {4}, {7}, {9}, {3}, {5}, {8}, {10}, {1}, {4}, {6}, {
          9}, {1}, {2}, {4}, {5}, {1}, {3}, {4}, {5}}}, Pattern}]}, {
      VertexCoordinates -> {{-0.9511, 0.309}, {-0.5878, -0.809}, {
         0.5878, -0.809}, {0.9511, 0.309}, {0, 1.}, {-1.9021, 
         0.618}, {-1.1756, -1.618}, {1.1756, -1.618}, {1.9021, 0.618}, {
         0, 2.}, {-0.3, 0}, {0.3, 0}}}]]}, 
    TagBox[
     GraphicsGroupBox[
      GraphicsComplexBox[{{-0.9511, 0.309}, {-0.5878, -0.809}, {
       0.5878, -0.809}, {0.9511, 0.309}, {0., 1.}, {-1.9021, 
       0.618}, {-1.1756, -1.618}, {1.1756, -1.618}, {1.9021, 0.618}, {0., 
       2.}, {-0.3, 0.}, {0.3, 0.}}, {
        {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
         ArrowBox[{{1, 7}, {1, 10}, {1, 11}, {1, 12}, {2, 3}, {2, 6}, {2, 
          8}, {2, 11}, {3, 7}, {3, 9}, {3, 12}, {4, 8}, {4, 10}, {4, 11}, {4, 
          12}, {5, 6}, {5, 9}, {5, 11}, {5, 12}, {6, 7}, {6, 10}, {7, 8}, {8, 
          9}, {9, 10}}, 0.03574170770443663]}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         DiskBox[1, 0.03574170770443663], DiskBox[2, 0.03574170770443663], 
         DiskBox[3, 0.03574170770443663], DiskBox[4, 0.03574170770443663], 
         DiskBox[5, 0.03574170770443663], DiskBox[6, 0.03574170770443663], 
         DiskBox[7, 0.03574170770443663], DiskBox[8, 0.03574170770443663], 
         DiskBox[9, 0.03574170770443663], DiskBox[10, 0.03574170770443663], 
         DiskBox[11, 0.03574170770443663], 
         DiskBox[12, 0.03574170770443663]}}]],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->"NetworkGraphics",
  FormatType->TraditionalForm,
  FrameTicks->None]], "Output",
 CellChangeTimes->{{3.8772755233490777`*^9, 3.8772755351817937`*^9}},
 CellLabel->"Out[49]=",ExpressionUUID->"536746bb-c59f-43df-ab08-a9d2f64ff638"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GraphData", "[", 
  RowBox[{"\"\<ChvatalGraph\>\"", ",", "\"\<AutomorphismCount\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8772759752610645`*^9, 3.877275978404583*^9}},
 CellLabel->"In[50]:=",ExpressionUUID->"eeebe44a-c32f-47df-adab-b6fa20859b16"],

Cell[BoxData["8"], "Output",
 CellChangeTimes->{3.877275978639002*^9},
 CellLabel->"Out[50]=",ExpressionUUID->"14e92b70-915c-47cd-b351-0726cf04ed75"]
}, Open  ]],

Cell["There are 8 symmetries.", "Text",
 CellChangeTimes->{{3.877275981524312*^9, 
  3.8772759865613174`*^9}},ExpressionUUID->"57109d7a-30b7-4484-b397-\
28b280a05647"]
}, Closed]],

Cell[CellGroupData[{

Cell["Exercise 45", "Section",
 CellChangeTimes->{{3.8772760333797874`*^9, 
  3.8772760415795135`*^9}},ExpressionUUID->"e74b2402-53dc-4f2b-865a-\
ddb7cbabe3e8"],

Cell["\<\
Find an easy way to 4-color the planar graph (17). Would 3 colors suffice?\
\>", "Text",
 CellChangeTimes->{{3.877276042990881*^9, 3.8772760465193834`*^9}, {
  3.8772760893803616`*^9, 
  3.8772761017694054`*^9}},ExpressionUUID->"15b27fb6-0ee4-4fe5-b35b-\
253275c10ebe"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GraphData", "[", "\"\<ContiguousUSAGraph\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.8772760651577616`*^9, 3.877276067987266*^9}},
 CellLabel->"In[51]:=",ExpressionUUID->"c4f3f6e7-518c-4bde-8712-df1a757a5fbb"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
       20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37,
       38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49}, {Null, 
       SparseArray[
       Automatic, {49, 49}, 0, {
        1, {{0, 4, 6, 11, 15, 23, 29, 32, 40, 46, 50, 54, 57, 61, 66, 71, 75, 
          81, 85, 91, 97, 100, 105, 110, 112, 114, 119, 125, 128, 131, 137, 
          141, 143, 149, 154, 158, 164, 168, 174, 178, 180, 184, 191, 194, 
          199, 204, 207, 210, 211, 214}, {{2}, {3}, {4}, {5}, {1}, {3}, {1}, {
          2}, {5}, {31}, {32}, {1}, {5}, {6}, {7}, {1}, {3}, {4}, {6}, {8}, {
          27}, {31}, {42}, {4}, {5}, {7}, {8}, {9}, {10}, {4}, {6}, {10}, {
          5}, {6}, {9}, {18}, {19}, {33}, {34}, {42}, {6}, {8}, {10}, {13}, {
          17}, {18}, {6}, {7}, {9}, {13}, {12}, {13}, {14}, {15}, {11}, {
          14}, {16}, {9}, {10}, {11}, {17}, {11}, {12}, {15}, {16}, {38}, {
          11}, {14}, {17}, {20}, {38}, {12}, {14}, {38}, {40}, {9}, {13}, {
          15}, {18}, {19}, {20}, {8}, {9}, {17}, {19}, {8}, {17}, {18}, {
          20}, {33}, {36}, {15}, {17}, {19}, {36}, {38}, {39}, {22}, {23}, {
          24}, {21}, {23}, {24}, {46}, {47}, {21}, {22}, {29}, {30}, {47}, {
          21}, {22}, {26}, {27}, {25}, {27}, {28}, {30}, {45}, {5}, {25}, {
          26}, {31}, {42}, {45}, {26}, {29}, {30}, {23}, {28}, {30}, {23}, {
          26}, {28}, {29}, {44}, {45}, {3}, {5}, {27}, {32}, {3}, {31}, {8}, {
          19}, {34}, {35}, {36}, {37}, {8}, {33}, {37}, {41}, {42}, {33}, {
          36}, {37}, {49}, {19}, {20}, {33}, {35}, {39}, {49}, {33}, {34}, {
          35}, {43}, {14}, {15}, {16}, {20}, {39}, {40}, {20}, {36}, {38}, {
          49}, {16}, {38}, {34}, {42}, {43}, {44}, {5}, {8}, {27}, {34}, {
          41}, {44}, {45}, {37}, {41}, {44}, {30}, {41}, {42}, {43}, {45}, {
          26}, {27}, {30}, {42}, {44}, {22}, {47}, {48}, {22}, {23}, {46}, {
          46}, {35}, {36}, {39}}}, Pattern}]}, {
      VertexCoordinates -> {{7, 1}, {8, 0}, {8, 1}, {6, 1}, {7, 2}, {5, 2}, {
        5, 1}, {5, 3}, {4, 2}, {4, 1}, {2, 2}, {0, 3}, {3, 2}, {1, 3}, {2, 
        3}, {1, 4}, {3, 3}, {4, 3}, {4, 4}, {3, 4}, {11, 4}, {11, 5}, {10, 
        5}, {12, 4}, {9, 2}, {9, 3}, {8, 2}, {10, 3}, {10, 4}, {9, 4}, {9, 
        1}, {9, 0}, {5, 4}, {6, 4}, {5, 5}, {4, 5}, {6, 5}, {2, 4}, {3, 5}, {
        1, 5}, {7, 4}, {7, 3}, {7, 5}, {8, 4}, {8, 3}, {11, 6}, {10, 6}, {12, 
        6}, {4, 6}}}]]}, 
    TagBox[GraphicsGroupBox[GraphicsComplexBox[CompressedData["
1:eJx1kjEOgzAMRa1OGTNkYGAwKEKsPUFzhh6hEjNX5wgUhd+KJ2IJWc//m9iB
4bO+l4eZPb/PkWv0pebtVbMXu4RD78DqtzOnBssvDmeO8Ef4DbpC/QG6+lgP
0CPqnIfcqk8N1p4ZPMM/Yk6xznHoGbqY7yNr7995dp1L/g6cyr0vwc/vzvtq
/Qc9/OIAlt/hd/h1/5org2fwf+8dO2soag==
       "], {
        {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
         ArrowBox[{{1, 2}, {1, 3}, {1, 4}, {1, 5}, {2, 3}, {3, 5}, {3, 31}, {
          3, 32}, {4, 5}, {4, 6}, {4, 7}, {5, 6}, {5, 8}, {5, 27}, {5, 31}, {
          5, 42}, {6, 7}, {6, 8}, {6, 9}, {6, 10}, {7, 10}, {8, 9}, {8, 18}, {
          8, 19}, {8, 33}, {8, 34}, {8, 42}, {9, 10}, {9, 13}, {9, 17}, {9, 
          18}, {10, 13}, {11, 12}, {11, 13}, {11, 14}, {11, 15}, {12, 14}, {
          12, 16}, {13, 17}, {14, 15}, {14, 16}, {14, 38}, {15, 17}, {15, 
          20}, {15, 38}, {16, 38}, {16, 40}, {17, 18}, {17, 19}, {17, 20}, {
          18, 19}, {19, 20}, {19, 33}, {19, 36}, {20, 36}, {20, 38}, {20, 
          39}, {21, 22}, {21, 23}, {21, 24}, {22, 23}, {22, 24}, {22, 46}, {
          22, 47}, {23, 29}, {23, 30}, {23, 47}, {25, 26}, {25, 27}, {26, 
          27}, {26, 28}, {26, 30}, {26, 45}, {27, 31}, {27, 42}, {27, 45}, {
          28, 29}, {28, 30}, {29, 30}, {30, 44}, {30, 45}, {31, 32}, {33, 
          34}, {33, 35}, {33, 36}, {33, 37}, {34, 37}, {34, 41}, {34, 42}, {
          35, 36}, {35, 37}, {35, 49}, {36, 39}, {36, 49}, {37, 43}, {38, 
          39}, {38, 40}, {39, 49}, {41, 42}, {41, 43}, {41, 44}, {42, 44}, {
          42, 45}, {43, 44}, {44, 45}, {46, 47}, {46, 48}}, 
          0.07217898832684824]}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         DiskBox[1, 0.07217898832684824], DiskBox[2, 0.07217898832684824], 
         DiskBox[3, 0.07217898832684824], DiskBox[4, 0.07217898832684824], 
         DiskBox[5, 0.07217898832684824], DiskBox[6, 0.07217898832684824], 
         DiskBox[7, 0.07217898832684824], DiskBox[8, 0.07217898832684824], 
         DiskBox[9, 0.07217898832684824], DiskBox[10, 0.07217898832684824], 
         DiskBox[11, 0.07217898832684824], DiskBox[12, 0.07217898832684824], 
         DiskBox[13, 0.07217898832684824], DiskBox[14, 0.07217898832684824], 
         DiskBox[15, 0.07217898832684824], DiskBox[16, 0.07217898832684824], 
         DiskBox[17, 0.07217898832684824], DiskBox[18, 0.07217898832684824], 
         DiskBox[19, 0.07217898832684824], DiskBox[20, 0.07217898832684824], 
         DiskBox[21, 0.07217898832684824], DiskBox[22, 0.07217898832684824], 
         DiskBox[23, 0.07217898832684824], DiskBox[24, 0.07217898832684824], 
         DiskBox[25, 0.07217898832684824], DiskBox[26, 0.07217898832684824], 
         DiskBox[27, 0.07217898832684824], DiskBox[28, 0.07217898832684824], 
         DiskBox[29, 0.07217898832684824], DiskBox[30, 0.07217898832684824], 
         DiskBox[31, 0.07217898832684824], DiskBox[32, 0.07217898832684824], 
         DiskBox[33, 0.07217898832684824], DiskBox[34, 0.07217898832684824], 
         DiskBox[35, 0.07217898832684824], DiskBox[36, 0.07217898832684824], 
         DiskBox[37, 0.07217898832684824], DiskBox[38, 0.07217898832684824], 
         DiskBox[39, 0.07217898832684824], DiskBox[40, 0.07217898832684824], 
         DiskBox[41, 0.07217898832684824], DiskBox[42, 0.07217898832684824], 
         DiskBox[43, 0.07217898832684824], DiskBox[44, 0.07217898832684824], 
         DiskBox[45, 0.07217898832684824], DiskBox[46, 0.07217898832684824], 
         DiskBox[47, 0.07217898832684824], DiskBox[48, 0.07217898832684824], 
         DiskBox[49, 0.07217898832684824]}}]],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->"NetworkGraphics",
  FormatType->TraditionalForm,
  FrameTicks->None]], "Output",
 CellChangeTimes->{3.877276076270897*^9},
 CellLabel->"Out[51]=",ExpressionUUID->"a5b9312c-1215-4851-87e7-0d1d75df1fb0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"VertexCount", "[", 
  RowBox[{"GraphData", "[", "\"\<ContiguousUSAGraph\>\"", "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.877276069565404*^9, 3.877276071690259*^9}},
 CellLabel->"In[52]:=",ExpressionUUID->"12e32225-583e-444b-8383-69620b503cf5"],

Cell[BoxData["49"], "Output",
 CellChangeTimes->{3.8772760765209017`*^9},
 CellLabel->"Out[52]=",ExpressionUUID->"02d1e6da-806d-416a-b544-a16619606e66"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GraphData", "[", 
  RowBox[{"\"\<ContiguousUSAGraph\>\"", ",", "\"\<ChromaticNumber\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8772761123166723`*^9, 3.8772761137038326`*^9}, {
  3.877276177160389*^9, 3.877276192768671*^9}},
 CellLabel->"In[54]:=",ExpressionUUID->"058dbe4c-21a5-4af4-beab-b1d0f1d666ce"],

Cell[BoxData["4"], "Output",
 CellChangeTimes->{{3.877276187812787*^9, 3.8772761929718394`*^9}},
 CellLabel->"Out[54]=",ExpressionUUID->"68930ea9-c25f-4ae7-94d2-aa2577a05a07"]
}, Open  ]],

Cell["The minimum number of colors possible is 4.", "Text",
 CellChangeTimes->{{3.877276197133191*^9, 
  3.877276205347638*^9}},ExpressionUUID->"98bbe57f-8ece-485d-b111-\
911b3b9d25b3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindVertexColoring", "[", 
  RowBox[{"GraphData", "[", "\"\<ContiguousUSAGraph\>\"", "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8772762066444416`*^9, 3.8772762171749787`*^9}},
 CellLabel->"In[55]:=",ExpressionUUID->"c2230d97-da35-44f3-a993-3f93dca4fdee"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "3", ",", "1", ",", "2", ",", "2", ",", "1", ",", "3", ",", "1", ",", "2", 
   ",", "1", ",", "2", ",", "2", ",", "4", ",", "3", ",", "3", ",", "1", ",", 
   "1", ",", "2", ",", "3", ",", "1", ",", "3", ",", "3", ",", "2", ",", "1", 
   ",", "1", ",", "1", ",", "3", ",", "2", ",", "1", ",", "3", ",", "2", ",", 
   "3", ",", "1", ",", "3", ",", "1", ",", "1", ",", "2", ",", "2", ",", "2", 
   ",", "1", ",", "3", ",", "2", ",", "3", ",", "1", ",", "4", ",", "1", ",", 
   "1", ",", "3", ",", "2", ",", "3"}], "}"}]], "Output",
 CellChangeTimes->{3.8772762183419757`*^9},
 CellLabel->"Out[55]=",ExpressionUUID->"880bcbd5-10ef-4fa9-9f5c-82a35e1bffc0"]
}, Open  ]],

Cell["I can use a resource function I created to color a graph:", "Text",
 CellChangeTimes->{{3.8772762210894947`*^9, 
  3.8772762306108437`*^9}},ExpressionUUID->"7cf7c94c-addf-47da-875a-\
d27a9491605a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ResourceSearch", "[", "\"\<*color*graph*\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.877276232563897*^9, 3.8772762635145736`*^9}},
 CellLabel->"In[57]:=",ExpressionUUID->"c0254b0e-358c-4976-ad5f-4f8650e53a66"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> {<|
       "Name" -> "ColorGraphEdges", "ResourceType" -> "Function", 
        "ResourceObject" -> 
        ResourceObject[<|
          "Name" -> "ColorGraphEdges", "ShortName" -> "ColorGraphEdges", 
           "UUID" -> "bc9940b2-bf6e-4421-aa7f-5f59a15d314b", "ResourceType" -> 
           "Function", "Version" -> "1.0.0", "Description" -> 
           "Color the edges of a graph so no edges incident to each other \
have the same color", "RepositoryLocation" -> 
           URL["https://www.wolframcloud.com/obj/resourcesystem/api/1.0"], 
           "SymbolName" -> 
           "FunctionRepository`$c48a7ef4e1574db5871291a16ac0ea5d`\
ColorGraphEdges"|>], "Description" -> 
        "Color the edges of a graph so no edges incident to each other have \
the same color", "Location" -> URL["https://resources.wolframcloud.com"], 
        "DocumentationLink" -> 
        URL["https://resources.wolframcloud.com/FunctionRepository/resources/\
ColorGraphEdges"]|>, <|
       "Name" -> "ColorGraphVertices", "ResourceType" -> "Function", 
        "ResourceObject" -> 
        ResourceObject[<|
          "Name" -> "ColorGraphVertices", "ShortName" -> "ColorGraphVertices",
            "UUID" -> "d3137161-1d52-44a8-a00d-801ae32c4e37", "ResourceType" -> 
           "Function", "Version" -> "1.0.0", "Description" -> 
           "Color the vertices in a graph with no adjacent vertices sharing a \
color", "RepositoryLocation" -> 
           URL["https://www.wolframcloud.com/obj/resourcesystem/api/1.0"], 
           "SymbolName" -> 
           "FunctionRepository`$055e89d946aa47f28a60e5055fc8d298`\
ColorGraphVertices"|>], "Description" -> 
        "Color the vertices in a graph with no adjacent vertices sharing a \
color", "Location" -> URL["https://resources.wolframcloud.com"], 
        "DocumentationLink" -> 
        URL["https://resources.wolframcloud.com/FunctionRepository/resources/\
ColorGraphVertices"]|>}, "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "Name"} -> 
        1, {All, "ResourceType"} -> 1, {All, "ResourceObject"} -> 
        1, {All, "Description"} -> 1, {All, "Location"} -> 
        1, {All, "DocumentationLink"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "Name" -> TypeSystem`PackageScope`AtomShape[201.60000000000002`], 
            "ResourceType" -> 
            TypeSystem`PackageScope`AtomShape[89.60000000000001], 
            "ResourceObject" -> TypeSystem`PackageScope`AtomShape[60], 
            "Description" -> TypeSystem`PackageScope`AtomShape[560.], 
            "Location" -> TypeSystem`PackageScope`AtomShape[60], 
            "DocumentationLink" -> TypeSystem`PackageScope`AtomShape[60]|>], 
          DirectedInfinity[1], 6, {All}]], 2, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{
        "Name", "ResourceType", "ResourceObject", "Description", "Location", 
         "DocumentationLink"}, {
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[ResourceObject], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[URL], 
         TypeSystem`Atom[URL]}], 2], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "Name"} -> 
        1, {All, "ResourceType"} -> 1, {All, "ResourceObject"} -> 
        1, {All, "Description"} -> 1, {All, "Location"} -> 
        1, {All, "DocumentationLink"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "Name" -> TypeSystem`PackageScope`AtomShape[201.60000000000002`], 
            "ResourceType" -> 
            TypeSystem`PackageScope`AtomShape[89.60000000000001], 
            "ResourceObject" -> TypeSystem`PackageScope`AtomShape[60], 
            "Description" -> TypeSystem`PackageScope`AtomShape[560.], 
            "Location" -> TypeSystem`PackageScope`AtomShape[60], 
            "DocumentationLink" -> TypeSystem`PackageScope`AtomShape[60]|>], 
          DirectedInfinity[1], 6, {All}]], 2, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{
        "Name", "ResourceType", "ResourceObject", "Description", "Location", 
         "DocumentationLink"}, {
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[ResourceObject], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[URL], 
         TypeSystem`Atom[URL]}], 2], "Path" -> {}, "DisplayedRowCount" -> 2, 
     "DisplayedColumnCount" -> 6, "DataRowCount" -> 2, "DataColumnCount" -> 6,
      "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Name", 
                  Style[
                  "Name", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Name"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Name"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["ResourceType", 
                  Style[
                  "ResourceType", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "ResourceType"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "ResourceType"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["ResourceObject", 
                  Style[
                  "ResourceObject", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "ResourceObject"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "ResourceObject"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Description", 
                  Style[
                  "Description", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Description"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Description"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Location", 
                  Style[
                  "Location", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Location"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Location"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["DocumentationLink", 
                  Style[
                  "DocumentationLink", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "DocumentationLink"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "DocumentationLink"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation["ColorGraphEdges", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{201.60000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Function", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["ResourceType"]}, "Item", False], "Mouse"], 
              ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                
                TemplateBox[{
                 "\"ResourceObject\"", "\"[\"", "\"\\\"\"", 
                  "\"ColorGraphEdges\"", "\"\\\"\"", "\"]\""}, "RowDefault"]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["ResourceObject"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
              "Color the edges of a graph so no edges incident to each other \
have the same color", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Description"]}, "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Hyperlink["https://resources.wolframcloud.com", 
                URL["https://resources.wolframcloud.com"]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Location"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Hyperlink[
               "https://resources.wolframcloud.com/FunctionReposit...", 
                URL[
                "https://resources.wolframcloud.com/FunctionRepository/\
resources/ColorGraphEdges"]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["DocumentationLink"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["ColorGraphVertices", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{201.60000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Function", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["ResourceType"]}, "Item", False], "Mouse"], 
              ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                
                TemplateBox[{
                 "\"ResourceObject\"", "\"[\"", "\"\\\"\"", 
                  "\"ColorGraphVertices\"", "\"\\\"\"", "\"]\""}, 
                 "RowDefault"]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["ResourceObject"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
              "Color the vertices in a graph with no adjacent vertices \
sharing a color", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Description"]}, "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Hyperlink["https://resources.wolframcloud.com", 
                URL["https://resources.wolframcloud.com"]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Location"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Hyperlink[
               "https://resources.wolframcloud.com/FunctionReposit...", 
                URL[
                "https://resources.wolframcloud.com/FunctionRepository/\
resources/ColorGraphVertices"]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["DocumentationLink"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{1664., {46.13403328722343, 51.86596671277657}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{1664., {46.13403328722343, 51.86596671277657}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.877276253656949*^9, 3.877276268648224*^9}},
 CellLabel->"Out[57]=",ExpressionUUID->"044e32cf-c194-4f4d-85db-44594355477b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PersistResourceFunction", "[", 
  RowBox[{"{", "\"\<ColorGraphVertices\>\"", "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.877276270971098*^9, 3.877276284047182*^9}},
 CellLabel->"In[58]:=",ExpressionUUID->"fec78320-b90e-4726-8f44-d2d9a8d7d13f"],

Cell[BoxData[
 RowBox[{"{", 
  InterpretationBox[
   RowBox[{
    TagBox["Success",
     "SummaryHead"], "[", 
    DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
     TemplateBox[{
       PaneSelectorBox[{False -> GridBox[{{
             PaneBox[
              ButtonBox[
               DynamicBox[
                FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
               ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
               BaseStyle -> {}, Evaluator -> Automatic, Method -> 
               "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
              Dynamic[{
                Automatic, 
                 3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])}]], 
             FrameBox[
              StyleBox["\"\[Checkmark]\"", 
               Directive[
                RGBColor[
                0.3607843137254902, 0.596078431372549, 0.3803921568627451], 
                25], StripOnInput -> False], ContentPadding -> False, 
              FrameStyle -> None, FrameMargins -> {{0, 0}, {0, 0}}, 
              StripOnInput -> False], 
             GridBox[{{
                RowBox[{
                  TagBox[
                   TemplateBox[{"\"Message\"", "\": \""}, "RowDefault"], 
                   "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                  TagBox[
                  "\"Successfully stored ColorGraphVertices as an \
initialization symbol.\"", "SummaryItem"]}]}, {
                RowBox[{
                  TagBox[
                   
                   TemplateBox[{"\"PersistenceLocation\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox[
                   InterpretationBox[
                    RowBox[{
                    TagBox["PersistenceLocation", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GraphicsBox[{
                    Thickness[0.04081632653061224], {
                    FaceForm[{
                    RGBColor[0.749, 0.749, 0.749], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGZigAFlBwht7oCLr7ihKGNir7nDlhNl++ZLKUHF
LaC0Ihr/hz2Mv6FksgRL2Dt7VPkH9jDzYHxU+2D8D/Yw/oHvwY+Xzr5jj2oe
DPxA5TfAzGFgiEqxvu/Pa+GAKm/hADMPxkexD843dYDxIe41dUA1z8wB1T4o
n0EVzvcx73RMeKqMJq/scN+/d3peEYIP8z8AUyhEVw==
                    "]]}, {
                    RGBColor[1., 1., 1.], 
                    Opacity[1.], 
                    CapForm["Round"], 
                    JoinForm["Round"], 
                    
                    JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIFIGYC4pASlen/AwwcGMBAxAHM/4Dg7zOYqSWx1dCh
1t40bpeniMP9B9yTVzYZOlhuOVG2T17KIWz+6rU34g0dKl+qGXLoyDkcv7O1
pUbA0OHF75UfL/UqOBx1Wpt576O+gwpb41RnbiWHP6ffnTx8SNchSSDCckuH
skOeScN2BydtB441MlEp1ipw/qdLvkkCEmoOZkBu0yJtiP7TGg6SasGsi4V0
Hc5/D3689LaGw6L0za+KTXUdWl8H7pBr1XXYd1BcLdhV10EeJDBP30Fo6d6D
4mm6UP8YOVx0ufHhC5cGnM/k28Lrv14Jzg8z0FopfEEJrr+oq+/Jp/tKcPPB
7mdShtv/oBCooEgF7r5lQOvULqvA3Q/jw/wHdn+QEtz/geunpHYoK8DDh69w
TfftF9Lw8Hs3dRNP4RopePiuSQgJUleQgoe/V8AfieJwSXj83BL65Hg+TQYe
f2D+MznU+EWKbwBI8b86
                    "], CurveClosed -> {1}]}}, AspectRatio -> Automatic, 
                    ImageSize -> {25., 25.}, 
                    PlotRange -> {{0., 24.5}, {0., 24.5}}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Local\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GraphicsBox[{
                    Thickness[0.04081632653061224], {
                    FaceForm[{
                    RGBColor[0.749, 0.749, 0.749], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGZigAFlBwht7oCLr7ihKGNir7nDlhNl++ZLKUHF
LaC0Ihr/hz2Mv6FksgRL2Dt7VPkH9jDzYHxU+2D8D/Yw/oHvwY+Xzr5jj2oe
DPxA5TfAzGFgiEqxvu/Pa+GAKm/hADMPxkexD843dYDxIe41dUA1z8wB1T4o
n0EVzvcx73RMeKqMJq/scN+/d3peEYIP8z8AUyhEVw==
                    "]]}, {
                    RGBColor[1., 1., 1.], 
                    Opacity[1.], 
                    CapForm["Round"], 
                    JoinForm["Round"], 
                    
                    JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIFIGYC4pASlen/AwwcGMBAxAHM/4Dg7zOYqSWx1dCh
1t40bpeniMP9B9yTVzYZOlhuOVG2T17KIWz+6rU34g0dKl+qGXLoyDkcv7O1
pUbA0OHF75UfL/UqOBx1Wpt576O+gwpb41RnbiWHP6ffnTx8SNchSSDCckuH
skOeScN2BydtB441MlEp1ipw/qdLvkkCEmoOZkBu0yJtiP7TGg6SasGsi4V0
Hc5/D3689LaGw6L0za+KTXUdWl8H7pBr1XXYd1BcLdhV10EeJDBP30Fo6d6D
4mm6UP8YOVx0ufHhC5cGnM/k28Lrv14Jzg8z0FopfEEJrr+oq+/Jp/tKcPPB
7mdShtv/oBCooEgF7r5lQOvULqvA3Q/jw/wHdn+QEtz/geunpHYoK8DDh69w
TfftF9Lw8Hs3dRNP4RopePiuSQgJUleQgoe/V8AfieJwSXj83BL65Hg+TQYe
f2D+MznU+EWKbwBI8b86
                    "], CurveClosed -> {1}]}}, AspectRatio -> Automatic, 
                    ImageSize -> {25., 25.}, 
                    PlotRange -> {{0., 24.5}, {0., 24.5}}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Local\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Base: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    "\"file:///C:/Users/Hannah/AppData/Roaming/Wolfram/\
Objects/Persistence\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                    PersistenceLocation[
                    "Local", 
                    "file:///C:/Users/Hannah/AppData/Roaming/Wolfram/Objects/\
Persistence", 
                    Hold[Persistence`Data`a16937289918179914857$7]], 
                    Selectable -> False, Editable -> False, 
                    SelectWithContents -> True], "SummaryItem"]}]}}, 
              GridBoxAlignment -> {
               "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
              False, GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {
               "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
              BaseStyle -> {
               ShowStringCharacters -> False, NumberMarks -> False, 
                PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
           AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {1, 1}], True -> GridBox[{{
             PaneBox[
              ButtonBox[
               DynamicBox[
                FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
               ButtonFunction :> (Typeset`open$$ = False), Appearance -> None,
                BaseStyle -> {}, Evaluator -> Automatic, Method -> 
               "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
              Dynamic[{
                Automatic, 
                 3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])}]], 
             FrameBox[
              StyleBox["\"\[Checkmark]\"", 
               Directive[
                RGBColor[
                0.3607843137254902, 0.596078431372549, 0.3803921568627451], 
                25], StripOnInput -> False], ContentPadding -> False, 
              FrameStyle -> None, FrameMargins -> {{0, 0}, {0, 0}}, 
              StripOnInput -> False], 
             GridBox[{{
                RowBox[{
                  TagBox[
                   TemplateBox[{"\"Message\"", "\": \""}, "RowDefault"], 
                   "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                  TagBox[
                  "\"Successfully stored ColorGraphVertices as an \
initialization symbol.\"", "SummaryItem"]}]}, {
                RowBox[{
                  TagBox[
                   
                   TemplateBox[{"\"PersistenceLocation\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox[
                   InterpretationBox[
                    RowBox[{
                    TagBox["PersistenceLocation", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GraphicsBox[{
                    Thickness[0.04081632653061224], {
                    FaceForm[{
                    RGBColor[0.749, 0.749, 0.749], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGZigAFlBwht7oCLr7ihKGNir7nDlhNl++ZLKUHF
LaC0Ihr/hz2Mv6FksgRL2Dt7VPkH9jDzYHxU+2D8D/Yw/oHvwY+Xzr5jj2oe
DPxA5TfAzGFgiEqxvu/Pa+GAKm/hADMPxkexD843dYDxIe41dUA1z8wB1T4o
n0EVzvcx73RMeKqMJq/scN+/d3peEYIP8z8AUyhEVw==
                    "]]}, {
                    RGBColor[1., 1., 1.], 
                    Opacity[1.], 
                    CapForm["Round"], 
                    JoinForm["Round"], 
                    
                    JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIFIGYC4pASlen/AwwcGMBAxAHM/4Dg7zOYqSWx1dCh
1t40bpeniMP9B9yTVzYZOlhuOVG2T17KIWz+6rU34g0dKl+qGXLoyDkcv7O1
pUbA0OHF75UfL/UqOBx1Wpt576O+gwpb41RnbiWHP6ffnTx8SNchSSDCckuH
skOeScN2BydtB441MlEp1ipw/qdLvkkCEmoOZkBu0yJtiP7TGg6SasGsi4V0
Hc5/D3689LaGw6L0za+KTXUdWl8H7pBr1XXYd1BcLdhV10EeJDBP30Fo6d6D
4mm6UP8YOVx0ufHhC5cGnM/k28Lrv14Jzg8z0FopfEEJrr+oq+/Jp/tKcPPB
7mdShtv/oBCooEgF7r5lQOvULqvA3Q/jw/wHdn+QEtz/geunpHYoK8DDh69w
TfftF9Lw8Hs3dRNP4RopePiuSQgJUleQgoe/V8AfieJwSXj83BL65Hg+TQYe
f2D+MznU+EWKbwBI8b86
                    "], CurveClosed -> {1}]}}, AspectRatio -> Automatic, 
                    ImageSize -> {25., 25.}, 
                    PlotRange -> {{0., 24.5}, {0., 24.5}}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Local\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GraphicsBox[{
                    Thickness[0.04081632653061224], {
                    FaceForm[{
                    RGBColor[0.749, 0.749, 0.749], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGZigAFlBwht7oCLr7ihKGNir7nDlhNl++ZLKUHF
LaC0Ihr/hz2Mv6FksgRL2Dt7VPkH9jDzYHxU+2D8D/Yw/oHvwY+Xzr5jj2oe
DPxA5TfAzGFgiEqxvu/Pa+GAKm/hADMPxkexD843dYDxIe41dUA1z8wB1T4o
n0EVzvcx73RMeKqMJq/scN+/d3peEYIP8z8AUyhEVw==
                    "]]}, {
                    RGBColor[1., 1., 1.], 
                    Opacity[1.], 
                    CapForm["Round"], 
                    JoinForm["Round"], 
                    
                    JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIFIGYC4pASlen/AwwcGMBAxAHM/4Dg7zOYqSWx1dCh
1t40bpeniMP9B9yTVzYZOlhuOVG2T17KIWz+6rU34g0dKl+qGXLoyDkcv7O1
pUbA0OHF75UfL/UqOBx1Wpt576O+gwpb41RnbiWHP6ffnTx8SNchSSDCckuH
skOeScN2BydtB441MlEp1ipw/qdLvkkCEmoOZkBu0yJtiP7TGg6SasGsi4V0
Hc5/D3689LaGw6L0za+KTXUdWl8H7pBr1XXYd1BcLdhV10EeJDBP30Fo6d6D
4mm6UP8YOVx0ufHhC5cGnM/k28Lrv14Jzg8z0FopfEEJrr+oq+/Jp/tKcPPB
7mdShtv/oBCooEgF7r5lQOvULqvA3Q/jw/wHdn+QEtz/geunpHYoK8DDh69w
TfftF9Lw8Hs3dRNP4RopePiuSQgJUleQgoe/V8AfieJwSXj83BL65Hg+TQYe
f2D+MznU+EWKbwBI8b86
                    "], CurveClosed -> {1}]}}, AspectRatio -> Automatic, 
                    ImageSize -> {25., 25.}, 
                    PlotRange -> {{0., 24.5}, {0., 24.5}}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Local\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Base: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    "\"file:///C:/Users/Hannah/AppData/Roaming/Wolfram/\
Objects/Persistence\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                    PersistenceLocation[
                    "Local", 
                    "file:///C:/Users/Hannah/AppData/Roaming/Wolfram/Objects/\
Persistence", 
                    Hold[Persistence`Data`a16937289918179914857$7]], 
                    Selectable -> False, Editable -> False, 
                    SelectWithContents -> True], "SummaryItem"]}]}, {
                RowBox[{
                  TagBox[
                   TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                   "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                  TagBox["\"InstalledResourceFunction\"", "SummaryItem"]}]}}, 
              GridBoxAlignment -> {
               "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
              False, GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {
               "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
              BaseStyle -> {
               ShowStringCharacters -> False, NumberMarks -> False, 
                PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
           AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {1, 1}]}, 
        Dynamic[Typeset`open$$], ImageSize -> Automatic]},
      "SummaryPanel"],
     DynamicModuleValues:>{}], "]"}],
   Success[
   "InstalledResourceFunction", <|
    "MessageTemplate" :> 
     "Successfully stored `symName` as an initialization symbol.", 
     "MessageParameters" -> <|"symName" -> "ColorGraphVertices"|>, 
     "PersistenceLocation" -> 
     PersistenceLocation[
      "Local", "file:///C:/Users/Hannah/AppData/Roaming/Wolfram/Objects/\
Persistence", 
       Hold[Persistence`Data`a16937289918179914857$7]]|>],
   Editable->False,
   SelectWithContents->True,
   Selectable->False], "}"}]], "Output",
 CellChangeTimes->{3.8772762852762136`*^9},
 CellLabel->"Out[58]=",ExpressionUUID->"ea4ffc2b-e99b-45d5-b390-69ee881abe42"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ColorGraphVertices", "[", 
  RowBox[{"GraphData", "[", "\"\<ContiguousUSAGraph\>\"", "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8772762855262437`*^9, 3.8772762910937986`*^9}},
 CellLabel->"In[59]:=",ExpressionUUID->"cce883ae-2892-4521-a4b6-d5d2346c62ad"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
       20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37,
       38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49}, {Null, 
       SparseArray[
       Automatic, {49, 49}, 0, {
        1, {{0, 4, 6, 11, 15, 23, 29, 32, 40, 46, 50, 54, 57, 61, 66, 71, 75, 
          81, 85, 91, 97, 100, 105, 110, 112, 114, 119, 125, 128, 131, 137, 
          141, 143, 149, 154, 158, 164, 168, 174, 178, 180, 184, 191, 194, 
          199, 204, 207, 210, 211, 214}, {{2}, {3}, {4}, {5}, {1}, {3}, {1}, {
          2}, {5}, {31}, {32}, {1}, {5}, {6}, {7}, {1}, {3}, {4}, {6}, {8}, {
          27}, {31}, {42}, {4}, {5}, {7}, {8}, {9}, {10}, {4}, {6}, {10}, {
          5}, {6}, {9}, {18}, {19}, {33}, {34}, {42}, {6}, {8}, {10}, {13}, {
          17}, {18}, {6}, {7}, {9}, {13}, {12}, {13}, {14}, {15}, {11}, {
          14}, {16}, {9}, {10}, {11}, {17}, {11}, {12}, {15}, {16}, {38}, {
          11}, {14}, {17}, {20}, {38}, {12}, {14}, {38}, {40}, {9}, {13}, {
          15}, {18}, {19}, {20}, {8}, {9}, {17}, {19}, {8}, {17}, {18}, {
          20}, {33}, {36}, {15}, {17}, {19}, {36}, {38}, {39}, {22}, {23}, {
          24}, {21}, {23}, {24}, {46}, {47}, {21}, {22}, {29}, {30}, {47}, {
          21}, {22}, {26}, {27}, {25}, {27}, {28}, {30}, {45}, {5}, {25}, {
          26}, {31}, {42}, {45}, {26}, {29}, {30}, {23}, {28}, {30}, {23}, {
          26}, {28}, {29}, {44}, {45}, {3}, {5}, {27}, {32}, {3}, {31}, {8}, {
          19}, {34}, {35}, {36}, {37}, {8}, {33}, {37}, {41}, {42}, {33}, {
          36}, {37}, {49}, {19}, {20}, {33}, {35}, {39}, {49}, {33}, {34}, {
          35}, {43}, {14}, {15}, {16}, {20}, {39}, {40}, {20}, {36}, {38}, {
          49}, {16}, {38}, {34}, {42}, {43}, {44}, {5}, {8}, {27}, {34}, {
          41}, {44}, {45}, {37}, {41}, {44}, {30}, {41}, {42}, {43}, {45}, {
          26}, {27}, {30}, {42}, {44}, {22}, {47}, {48}, {22}, {23}, {46}, {
          46}, {35}, {36}, {39}}}, Pattern}]}, {
      VertexStyle -> {
        48 -> RGBColor[0.97, 0.606, 0.081], 5 -> RGBColor[0.97, 0.606, 0.081],
          15 -> RGBColor[0.97, 0.606, 0.081], 22 -> 
         RGBColor[0.97, 0.606, 0.081], 9 -> RGBColor[0.97, 0.606, 0.081], 46 -> 
         RGBColor[0.34398, 0.49112, 0.89936], 36 -> 
         RGBColor[0.34398, 0.49112, 0.89936], 14 -> 
         RGBColor[0.91, 0.318, 0.243], 19 -> RGBColor[0.97, 0.606, 0.081], 6 -> 
         RGBColor[0.91, 0.318, 0.243], 26 -> RGBColor[0.448, 0.69232, 0.1538],
          18 -> RGBColor[0.91, 0.318, 0.243], 2 -> 
         RGBColor[0.97, 0.606, 0.081], 38 -> 
         RGBColor[0.34398, 0.49112, 0.89936], 12 -> 
         RGBColor[0.448, 0.69232, 0.1538], 17 -> 
         RGBColor[0.34398, 0.49112, 0.89936], 47 -> 
         RGBColor[0.91, 0.318, 0.243], 31 -> RGBColor[0.91, 0.318, 0.243], 34 -> 
         RGBColor[0.97, 0.606, 0.081], 7 -> RGBColor[0.97, 0.606, 0.081], 37 -> 
         RGBColor[0.34398, 0.49112, 0.89936], 39 -> 
         RGBColor[0.97, 0.606, 0.081], 10 -> 
         RGBColor[0.34398, 0.49112, 0.89936], 24 -> 
         RGBColor[0.34398, 0.49112, 0.89936], 44 -> 
         RGBColor[0.34398, 0.49112, 0.89936], 30 -> 
         RGBColor[0.91, 0.318, 0.243], 8 -> 
         RGBColor[0.34398, 0.49112, 0.89936], 33 -> 
         RGBColor[0.91, 0.318, 0.243], 11 -> 
         RGBColor[0.34398, 0.49112, 0.89936], 13 -> 
         RGBColor[0.91, 0.318, 0.243], 29 -> RGBColor[0.97, 0.606, 0.081], 1 -> 
         RGBColor[0.91, 0.318, 0.243], 43 -> RGBColor[0.97, 0.606, 0.081], 3 -> 
         RGBColor[0.34398, 0.49112, 0.89936], 21 -> 
         RGBColor[0.91, 0.318, 0.243], 27 -> 
         RGBColor[0.34398, 0.49112, 0.89936], 28 -> 
         RGBColor[0.34398, 0.49112, 0.89936], 25 -> 
         RGBColor[0.97, 0.606, 0.081], 4 -> 
         RGBColor[0.34398, 0.49112, 0.89936], 32 -> 
         RGBColor[0.97, 0.606, 0.081], 16 -> RGBColor[0.97, 0.606, 0.081], 49 -> 
         RGBColor[0.91, 0.318, 0.243], 42 -> RGBColor[0.91, 0.318, 0.243], 40 -> 
         RGBColor[0.91, 0.318, 0.243], 35 -> RGBColor[0.97, 0.606, 0.081], 41 -> 
         RGBColor[0.448, 0.69232, 0.1538], 45 -> RGBColor[0.97, 0.606, 0.081],
          20 -> RGBColor[0.91, 0.318, 0.243], 23 -> 
         RGBColor[0.34398, 0.49112, 0.89936]}, 
       VertexCoordinates -> {{7, 1}, {8, 0}, {8, 1}, {6, 1}, {7, 2}, {5, 2}, {
        5, 1}, {5, 3}, {4, 2}, {4, 1}, {2, 2}, {0, 3}, {3, 2}, {1, 3}, {2, 
        3}, {1, 4}, {3, 3}, {4, 3}, {4, 4}, {3, 4}, {11, 4}, {11, 5}, {10, 
        5}, {12, 4}, {9, 2}, {9, 3}, {8, 2}, {10, 3}, {10, 4}, {9, 4}, {9, 
        1}, {9, 0}, {5, 4}, {6, 4}, {5, 5}, {4, 5}, {6, 5}, {2, 4}, {3, 5}, {
        1, 5}, {7, 4}, {7, 3}, {7, 5}, {8, 4}, {8, 3}, {11, 6}, {10, 6}, {12, 
        6}, {4, 6}}}]]}, 
    TagBox[GraphicsGroupBox[GraphicsComplexBox[CompressedData["
1:eJx1kjEOgzAMRa1OGTNkYGAwKEKsPUFzhh6hEjNX5wgUhd+KJ2IJWc//m9iB
4bO+l4eZPb/PkWv0pebtVbMXu4RD78DqtzOnBssvDmeO8Ef4DbpC/QG6+lgP
0CPqnIfcqk8N1p4ZPMM/Yk6xznHoGbqY7yNr7995dp1L/g6cyr0vwc/vzvtq
/Qc9/OIAlt/hd/h1/5org2fwf+8dO2soag==
       "], {
        {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
         ArrowBox[{{1, 2}, {1, 3}, {1, 4}, {1, 5}, {2, 3}, {3, 5}, {3, 31}, {
          3, 32}, {4, 5}, {4, 6}, {4, 7}, {5, 6}, {5, 8}, {5, 27}, {5, 31}, {
          5, 42}, {6, 7}, {6, 8}, {6, 9}, {6, 10}, {7, 10}, {8, 9}, {8, 18}, {
          8, 19}, {8, 33}, {8, 34}, {8, 42}, {9, 10}, {9, 13}, {9, 17}, {9, 
          18}, {10, 13}, {11, 12}, {11, 13}, {11, 14}, {11, 15}, {12, 14}, {
          12, 16}, {13, 17}, {14, 15}, {14, 16}, {14, 38}, {15, 17}, {15, 
          20}, {15, 38}, {16, 38}, {16, 40}, {17, 18}, {17, 19}, {17, 20}, {
          18, 19}, {19, 20}, {19, 33}, {19, 36}, {20, 36}, {20, 38}, {20, 
          39}, {21, 22}, {21, 23}, {21, 24}, {22, 23}, {22, 24}, {22, 46}, {
          22, 47}, {23, 29}, {23, 30}, {23, 47}, {25, 26}, {25, 27}, {26, 
          27}, {26, 28}, {26, 30}, {26, 45}, {27, 31}, {27, 42}, {27, 45}, {
          28, 29}, {28, 30}, {29, 30}, {30, 44}, {30, 45}, {31, 32}, {33, 
          34}, {33, 35}, {33, 36}, {33, 37}, {34, 37}, {34, 41}, {34, 42}, {
          35, 36}, {35, 37}, {35, 49}, {36, 39}, {36, 49}, {37, 43}, {38, 
          39}, {38, 40}, {39, 49}, {41, 42}, {41, 43}, {41, 44}, {42, 44}, {
          42, 45}, {43, 44}, {44, 45}, {46, 47}, {46, 48}}, 
          0.07217898832684824]}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         {RGBColor[0.91, 0.318, 0.243], DiskBox[1, 0.07217898832684824]}, 
         {RGBColor[0.97, 0.606, 0.081], DiskBox[2, 0.07217898832684824]}, 
         {RGBColor[0.34398, 0.49112, 0.89936], 
          DiskBox[3, 0.07217898832684824]}, 
         {RGBColor[0.34398, 0.49112, 0.89936], 
          DiskBox[4, 0.07217898832684824]}, 
         {RGBColor[0.97, 0.606, 0.081], DiskBox[5, 0.07217898832684824]}, 
         {RGBColor[0.91, 0.318, 0.243], DiskBox[6, 0.07217898832684824]}, 
         {RGBColor[0.97, 0.606, 0.081], DiskBox[7, 0.07217898832684824]}, 
         {RGBColor[0.34398, 0.49112, 0.89936], 
          DiskBox[8, 0.07217898832684824]}, 
         {RGBColor[0.97, 0.606, 0.081], DiskBox[9, 0.07217898832684824]}, 
         {RGBColor[0.34398, 0.49112, 0.89936], 
          DiskBox[10, 0.07217898832684824]}, 
         {RGBColor[0.34398, 0.49112, 0.89936], 
          DiskBox[11, 0.07217898832684824]}, 
         {RGBColor[0.448, 0.69232, 0.1538], DiskBox[12, 0.07217898832684824]}, 
         {RGBColor[0.91, 0.318, 0.243], DiskBox[13, 0.07217898832684824]}, 
         {RGBColor[0.91, 0.318, 0.243], DiskBox[14, 0.07217898832684824]}, 
         {RGBColor[0.97, 0.606, 0.081], DiskBox[15, 0.07217898832684824]}, 
         {RGBColor[0.97, 0.606, 0.081], DiskBox[16, 0.07217898832684824]}, 
         {RGBColor[0.34398, 0.49112, 0.89936], 
          DiskBox[17, 0.07217898832684824]}, 
         {RGBColor[0.91, 0.318, 0.243], DiskBox[18, 0.07217898832684824]}, 
         {RGBColor[0.97, 0.606, 0.081], DiskBox[19, 0.07217898832684824]}, 
         {RGBColor[0.91, 0.318, 0.243], DiskBox[20, 0.07217898832684824]}, 
         {RGBColor[0.91, 0.318, 0.243], DiskBox[21, 0.07217898832684824]}, 
         {RGBColor[0.97, 0.606, 0.081], DiskBox[22, 0.07217898832684824]}, 
         {RGBColor[0.34398, 0.49112, 0.89936], 
          DiskBox[23, 0.07217898832684824]}, 
         {RGBColor[0.34398, 0.49112, 0.89936], 
          DiskBox[24, 0.07217898832684824]}, 
         {RGBColor[0.97, 0.606, 0.081], DiskBox[25, 0.07217898832684824]}, 
         {RGBColor[0.448, 0.69232, 0.1538], DiskBox[26, 0.07217898832684824]}, 
         {RGBColor[0.34398, 0.49112, 0.89936], 
          DiskBox[27, 0.07217898832684824]}, 
         {RGBColor[0.34398, 0.49112, 0.89936], 
          DiskBox[28, 0.07217898832684824]}, 
         {RGBColor[0.97, 0.606, 0.081], DiskBox[29, 0.07217898832684824]}, 
         {RGBColor[0.91, 0.318, 0.243], DiskBox[30, 0.07217898832684824]}, 
         {RGBColor[0.91, 0.318, 0.243], DiskBox[31, 0.07217898832684824]}, 
         {RGBColor[0.97, 0.606, 0.081], DiskBox[32, 0.07217898832684824]}, 
         {RGBColor[0.91, 0.318, 0.243], DiskBox[33, 0.07217898832684824]}, 
         {RGBColor[0.97, 0.606, 0.081], DiskBox[34, 0.07217898832684824]}, 
         {RGBColor[0.97, 0.606, 0.081], DiskBox[35, 0.07217898832684824]}, 
         {RGBColor[0.34398, 0.49112, 0.89936], 
          DiskBox[36, 0.07217898832684824]}, 
         {RGBColor[0.34398, 0.49112, 0.89936], 
          DiskBox[37, 0.07217898832684824]}, 
         {RGBColor[0.34398, 0.49112, 0.89936], 
          DiskBox[38, 0.07217898832684824]}, 
         {RGBColor[0.97, 0.606, 0.081], DiskBox[39, 0.07217898832684824]}, 
         {RGBColor[0.91, 0.318, 0.243], DiskBox[40, 0.07217898832684824]}, 
         {RGBColor[0.448, 0.69232, 0.1538], DiskBox[41, 0.07217898832684824]}, 
         {RGBColor[0.91, 0.318, 0.243], DiskBox[42, 0.07217898832684824]}, 
         {RGBColor[0.97, 0.606, 0.081], DiskBox[43, 0.07217898832684824]}, 
         {RGBColor[0.34398, 0.49112, 0.89936], 
          DiskBox[44, 0.07217898832684824]}, 
         {RGBColor[0.97, 0.606, 0.081], DiskBox[45, 0.07217898832684824]}, 
         {RGBColor[0.34398, 0.49112, 0.89936], 
          DiskBox[46, 0.07217898832684824]}, 
         {RGBColor[0.91, 0.318, 0.243], DiskBox[47, 0.07217898832684824]}, 
         {RGBColor[0.97, 0.606, 0.081], DiskBox[48, 0.07217898832684824]}, 
         {RGBColor[0.91, 0.318, 0.243], DiskBox[49, 0.07217898832684824]}}}]],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->"NetworkGraphics",
  FormatType->TraditionalForm,
  FrameTicks->None]], "Output",
 CellChangeTimes->{3.877276291390667*^9},
 CellLabel->"Out[59]=",ExpressionUUID->"0d2f4930-86c1-4d62-80da-87d5c2e6bb56"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ColorGraphVertices", "[", 
  RowBox[{
   RowBox[{"GraphData", "[", "\"\<ContiguousUSAGraph\>\"", "]"}], ",", 
   RowBox[{"ImageSize", "->", "Large"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8772762855262437`*^9, 3.877276303617014*^9}},
 CellLabel->"In[60]:=",ExpressionUUID->"add4b26e-094f-48bc-b33e-d319ca88f570"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
       20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37,
       38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49}, {Null, 
       SparseArray[
       Automatic, {49, 49}, 0, {
        1, {{0, 4, 6, 11, 15, 23, 29, 32, 40, 46, 50, 54, 57, 61, 66, 71, 75, 
          81, 85, 91, 97, 100, 105, 110, 112, 114, 119, 125, 128, 131, 137, 
          141, 143, 149, 154, 158, 164, 168, 174, 178, 180, 184, 191, 194, 
          199, 204, 207, 210, 211, 214}, {{2}, {3}, {4}, {5}, {1}, {3}, {1}, {
          2}, {5}, {31}, {32}, {1}, {5}, {6}, {7}, {1}, {3}, {4}, {6}, {8}, {
          27}, {31}, {42}, {4}, {5}, {7}, {8}, {9}, {10}, {4}, {6}, {10}, {
          5}, {6}, {9}, {18}, {19}, {33}, {34}, {42}, {6}, {8}, {10}, {13}, {
          17}, {18}, {6}, {7}, {9}, {13}, {12}, {13}, {14}, {15}, {11}, {
          14}, {16}, {9}, {10}, {11}, {17}, {11}, {12}, {15}, {16}, {38}, {
          11}, {14}, {17}, {20}, {38}, {12}, {14}, {38}, {40}, {9}, {13}, {
          15}, {18}, {19}, {20}, {8}, {9}, {17}, {19}, {8}, {17}, {18}, {
          20}, {33}, {36}, {15}, {17}, {19}, {36}, {38}, {39}, {22}, {23}, {
          24}, {21}, {23}, {24}, {46}, {47}, {21}, {22}, {29}, {30}, {47}, {
          21}, {22}, {26}, {27}, {25}, {27}, {28}, {30}, {45}, {5}, {25}, {
          26}, {31}, {42}, {45}, {26}, {29}, {30}, {23}, {28}, {30}, {23}, {
          26}, {28}, {29}, {44}, {45}, {3}, {5}, {27}, {32}, {3}, {31}, {8}, {
          19}, {34}, {35}, {36}, {37}, {8}, {33}, {37}, {41}, {42}, {33}, {
          36}, {37}, {49}, {19}, {20}, {33}, {35}, {39}, {49}, {33}, {34}, {
          35}, {43}, {14}, {15}, {16}, {20}, {39}, {40}, {20}, {36}, {38}, {
          49}, {16}, {38}, {34}, {42}, {43}, {44}, {5}, {8}, {27}, {34}, {
          41}, {44}, {45}, {37}, {41}, {44}, {30}, {41}, {42}, {43}, {45}, {
          26}, {27}, {30}, {42}, {44}, {22}, {47}, {48}, {22}, {23}, {46}, {
          46}, {35}, {36}, {39}}}, Pattern}]}, {
      GraphLayout -> {"Dimension" -> 2}, ImageSize -> Large, 
       VertexCoordinates -> {{7, 1}, {8, 0}, {8, 1}, {6, 1}, {7, 2}, {5, 2}, {
        5, 1}, {5, 3}, {4, 2}, {4, 1}, {2, 2}, {0, 3}, {3, 2}, {1, 3}, {2, 
        3}, {1, 4}, {3, 3}, {4, 3}, {4, 4}, {3, 4}, {11, 4}, {11, 5}, {10, 
        5}, {12, 4}, {9, 2}, {9, 3}, {8, 2}, {10, 3}, {10, 4}, {9, 4}, {9, 
        1}, {9, 0}, {5, 4}, {6, 4}, {5, 5}, {4, 5}, {6, 5}, {2, 4}, {3, 5}, {
        1, 5}, {7, 4}, {7, 3}, {7, 5}, {8, 4}, {8, 3}, {11, 6}, {10, 6}, {12, 
        6}, {4, 6}}, 
       VertexStyle -> {
        20 -> RGBColor[0.91, 0.318, 0.243], 3 -> 
         RGBColor[0.34398, 0.49112, 0.89936], 28 -> 
         RGBColor[0.97, 0.606, 0.081], 1 -> RGBColor[0.91, 0.318, 0.243], 23 -> 
         RGBColor[0.97, 0.606, 0.081], 2 -> RGBColor[0.97, 0.606, 0.081], 41 -> 
         RGBColor[0.34398, 0.49112, 0.89936], 43 -> 
         RGBColor[0.97, 0.606, 0.081], 14 -> RGBColor[0.91, 0.318, 0.243], 36 -> 
         RGBColor[0.34398, 0.49112, 0.89936], 13 -> 
         RGBColor[0.91, 0.318, 0.243], 49 -> RGBColor[0.91, 0.318, 0.243], 16 -> 
         RGBColor[0.97, 0.606, 0.081], 46 -> RGBColor[0.97, 0.606, 0.081], 15 -> 
         RGBColor[0.97, 0.606, 0.081], 47 -> RGBColor[0.91, 0.318, 0.243], 21 -> 
         RGBColor[0.91, 0.318, 0.243], 9 -> RGBColor[0.97, 0.606, 0.081], 40 -> 
         RGBColor[0.91, 0.318, 0.243], 33 -> RGBColor[0.91, 0.318, 0.243], 26 -> 
         RGBColor[0.91, 0.318, 0.243], 38 -> 
         RGBColor[0.34398, 0.49112, 0.89936], 4 -> 
         RGBColor[0.34398, 0.49112, 0.89936], 7 -> 
         RGBColor[0.97, 0.606, 0.081], 48 -> 
         RGBColor[0.34398, 0.49112, 0.89936], 5 -> 
         RGBColor[0.97, 0.606, 0.081], 12 -> RGBColor[0.448, 0.69232, 0.1538],
          6 -> RGBColor[0.91, 0.318, 0.243], 27 -> 
         RGBColor[0.34398, 0.49112, 0.89936], 42 -> 
         RGBColor[0.91, 0.318, 0.243], 44 -> RGBColor[0.448, 0.69232, 0.1538],
          22 -> RGBColor[0.34398, 0.49112, 0.89936], 31 -> 
         RGBColor[0.91, 0.318, 0.243], 35 -> RGBColor[0.97, 0.606, 0.081], 17 -> 
         RGBColor[0.34398, 0.49112, 0.89936], 19 -> 
         RGBColor[0.97, 0.606, 0.081], 10 -> 
         RGBColor[0.34398, 0.49112, 0.89936], 37 -> 
         RGBColor[0.34398, 0.49112, 0.89936], 45 -> 
         RGBColor[0.97, 0.606, 0.081], 18 -> RGBColor[0.91, 0.318, 0.243], 11 -> 
         RGBColor[0.34398, 0.49112, 0.89936], 30 -> 
         RGBColor[0.34398, 0.49112, 0.89936], 25 -> 
         RGBColor[0.97, 0.606, 0.081], 24 -> RGBColor[0.97, 0.606, 0.081], 32 -> 
         RGBColor[0.97, 0.606, 0.081], 39 -> RGBColor[0.97, 0.606, 0.081], 8 -> 
         RGBColor[0.34398, 0.49112, 0.89936], 29 -> 
         RGBColor[0.91, 0.318, 0.243], 34 -> 
         RGBColor[0.97, 0.606, 0.081]}}]]}, 
    TagBox[GraphicsGroupBox[GraphicsComplexBox[CompressedData["
1:eJx1kjEOgzAMRa1OGTNkYGAwKEKsPUFzhh6hEjNX5wgUhd+KJ2IJWc//m9iB
4bO+l4eZPb/PkWv0pebtVbMXu4RD78DqtzOnBssvDmeO8Ef4DbpC/QG6+lgP
0CPqnIfcqk8N1p4ZPMM/Yk6xznHoGbqY7yNr7995dp1L/g6cyr0vwc/vzvtq
/Qc9/OIAlt/hd/h1/5org2fwf+8dO2soag==
       "], {
        {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
         ArrowBox[{{1, 2}, {1, 3}, {1, 4}, {1, 5}, {2, 3}, {3, 5}, {3, 31}, {
          3, 32}, {4, 5}, {4, 6}, {4, 7}, {5, 6}, {5, 8}, {5, 27}, {5, 31}, {
          5, 42}, {6, 7}, {6, 8}, {6, 9}, {6, 10}, {7, 10}, {8, 9}, {8, 18}, {
          8, 19}, {8, 33}, {8, 34}, {8, 42}, {9, 10}, {9, 13}, {9, 17}, {9, 
          18}, {10, 13}, {11, 12}, {11, 13}, {11, 14}, {11, 15}, {12, 14}, {
          12, 16}, {13, 17}, {14, 15}, {14, 16}, {14, 38}, {15, 17}, {15, 
          20}, {15, 38}, {16, 38}, {16, 40}, {17, 18}, {17, 19}, {17, 20}, {
          18, 19}, {19, 20}, {19, 33}, {19, 36}, {20, 36}, {20, 38}, {20, 
          39}, {21, 22}, {21, 23}, {21, 24}, {22, 23}, {22, 24}, {22, 46}, {
          22, 47}, {23, 29}, {23, 30}, {23, 47}, {25, 26}, {25, 27}, {26, 
          27}, {26, 28}, {26, 30}, {26, 45}, {27, 31}, {27, 42}, {27, 45}, {
          28, 29}, {28, 30}, {29, 30}, {30, 44}, {30, 45}, {31, 32}, {33, 
          34}, {33, 35}, {33, 36}, {33, 37}, {34, 37}, {34, 41}, {34, 42}, {
          35, 36}, {35, 37}, {35, 49}, {36, 39}, {36, 49}, {37, 43}, {38, 
          39}, {38, 40}, {39, 49}, {41, 42}, {41, 43}, {41, 44}, {42, 44}, {
          42, 45}, {43, 44}, {44, 45}, {46, 47}, {46, 48}}, 
          0.07217898832684824]}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         {RGBColor[0.91, 0.318, 0.243], DiskBox[1, 0.07217898832684824]}, 
         {RGBColor[0.97, 0.606, 0.081], DiskBox[2, 0.07217898832684824]}, 
         {RGBColor[0.34398, 0.49112, 0.89936], 
          DiskBox[3, 0.07217898832684824]}, 
         {RGBColor[0.34398, 0.49112, 0.89936], 
          DiskBox[4, 0.07217898832684824]}, 
         {RGBColor[0.97, 0.606, 0.081], DiskBox[5, 0.07217898832684824]}, 
         {RGBColor[0.91, 0.318, 0.243], DiskBox[6, 0.07217898832684824]}, 
         {RGBColor[0.97, 0.606, 0.081], DiskBox[7, 0.07217898832684824]}, 
         {RGBColor[0.34398, 0.49112, 0.89936], 
          DiskBox[8, 0.07217898832684824]}, 
         {RGBColor[0.97, 0.606, 0.081], DiskBox[9, 0.07217898832684824]}, 
         {RGBColor[0.34398, 0.49112, 0.89936], 
          DiskBox[10, 0.07217898832684824]}, 
         {RGBColor[0.34398, 0.49112, 0.89936], 
          DiskBox[11, 0.07217898832684824]}, 
         {RGBColor[0.448, 0.69232, 0.1538], DiskBox[12, 0.07217898832684824]}, 
         {RGBColor[0.91, 0.318, 0.243], DiskBox[13, 0.07217898832684824]}, 
         {RGBColor[0.91, 0.318, 0.243], DiskBox[14, 0.07217898832684824]}, 
         {RGBColor[0.97, 0.606, 0.081], DiskBox[15, 0.07217898832684824]}, 
         {RGBColor[0.97, 0.606, 0.081], DiskBox[16, 0.07217898832684824]}, 
         {RGBColor[0.34398, 0.49112, 0.89936], 
          DiskBox[17, 0.07217898832684824]}, 
         {RGBColor[0.91, 0.318, 0.243], DiskBox[18, 0.07217898832684824]}, 
         {RGBColor[0.97, 0.606, 0.081], DiskBox[19, 0.07217898832684824]}, 
         {RGBColor[0.91, 0.318, 0.243], DiskBox[20, 0.07217898832684824]}, 
         {RGBColor[0.91, 0.318, 0.243], DiskBox[21, 0.07217898832684824]}, 
         {RGBColor[0.34398, 0.49112, 0.89936], 
          DiskBox[22, 0.07217898832684824]}, 
         {RGBColor[0.97, 0.606, 0.081], DiskBox[23, 0.07217898832684824]}, 
         {RGBColor[0.97, 0.606, 0.081], DiskBox[24, 0.07217898832684824]}, 
         {RGBColor[0.97, 0.606, 0.081], DiskBox[25, 0.07217898832684824]}, 
         {RGBColor[0.91, 0.318, 0.243], DiskBox[26, 0.07217898832684824]}, 
         {RGBColor[0.34398, 0.49112, 0.89936], 
          DiskBox[27, 0.07217898832684824]}, 
         {RGBColor[0.97, 0.606, 0.081], DiskBox[28, 0.07217898832684824]}, 
         {RGBColor[0.91, 0.318, 0.243], DiskBox[29, 0.07217898832684824]}, 
         {RGBColor[0.34398, 0.49112, 0.89936], 
          DiskBox[30, 0.07217898832684824]}, 
         {RGBColor[0.91, 0.318, 0.243], DiskBox[31, 0.07217898832684824]}, 
         {RGBColor[0.97, 0.606, 0.081], DiskBox[32, 0.07217898832684824]}, 
         {RGBColor[0.91, 0.318, 0.243], DiskBox[33, 0.07217898832684824]}, 
         {RGBColor[0.97, 0.606, 0.081], DiskBox[34, 0.07217898832684824]}, 
         {RGBColor[0.97, 0.606, 0.081], DiskBox[35, 0.07217898832684824]}, 
         {RGBColor[0.34398, 0.49112, 0.89936], 
          DiskBox[36, 0.07217898832684824]}, 
         {RGBColor[0.34398, 0.49112, 0.89936], 
          DiskBox[37, 0.07217898832684824]}, 
         {RGBColor[0.34398, 0.49112, 0.89936], 
          DiskBox[38, 0.07217898832684824]}, 
         {RGBColor[0.97, 0.606, 0.081], DiskBox[39, 0.07217898832684824]}, 
         {RGBColor[0.91, 0.318, 0.243], DiskBox[40, 0.07217898832684824]}, 
         {RGBColor[0.34398, 0.49112, 0.89936], 
          DiskBox[41, 0.07217898832684824]}, 
         {RGBColor[0.91, 0.318, 0.243], DiskBox[42, 0.07217898832684824]}, 
         {RGBColor[0.97, 0.606, 0.081], DiskBox[43, 0.07217898832684824]}, 
         {RGBColor[0.448, 0.69232, 0.1538], DiskBox[44, 0.07217898832684824]}, 
         {RGBColor[0.97, 0.606, 0.081], DiskBox[45, 0.07217898832684824]}, 
         {RGBColor[0.97, 0.606, 0.081], DiskBox[46, 0.07217898832684824]}, 
         {RGBColor[0.91, 0.318, 0.243], DiskBox[47, 0.07217898832684824]}, 
         {RGBColor[0.34398, 0.49112, 0.89936], 
          DiskBox[48, 0.07217898832684824]}, 
         {RGBColor[0.91, 0.318, 0.243], DiskBox[49, 0.07217898832684824]}}}]],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->"NetworkGraphics",
  FormatType->TraditionalForm,
  FrameTicks->None,
  ImageSize->Large]], "Output",
 CellChangeTimes->{3.877276303976385*^9},
 CellLabel->"Out[60]=",ExpressionUUID->"b1772741-29a2-4760-b65a-5703f55ffbca"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ColorGraphVertices", "[", 
  RowBox[{
   RowBox[{"GraphData", "[", "\"\<ContiguousUSAGraph\>\"", "]"}], ",", 
   RowBox[{"ImageSize", "->", "Full"}], ",", 
   RowBox[{"VertexSize", "->", "Large"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8772762855262437`*^9, 3.8772763548050184`*^9}},
 CellLabel->"In[63]:=",ExpressionUUID->"435bffee-dc2c-4f22-b693-f2c464a0f8ef"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
       20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37,
       38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49}, {Null, 
       SparseArray[
       Automatic, {49, 49}, 0, {
        1, {{0, 4, 6, 11, 15, 23, 29, 32, 40, 46, 50, 54, 57, 61, 66, 71, 75, 
          81, 85, 91, 97, 100, 105, 110, 112, 114, 119, 125, 128, 131, 137, 
          141, 143, 149, 154, 158, 164, 168, 174, 178, 180, 184, 191, 194, 
          199, 204, 207, 210, 211, 214}, {{2}, {3}, {4}, {5}, {1}, {3}, {1}, {
          2}, {5}, {31}, {32}, {1}, {5}, {6}, {7}, {1}, {3}, {4}, {6}, {8}, {
          27}, {31}, {42}, {4}, {5}, {7}, {8}, {9}, {10}, {4}, {6}, {10}, {
          5}, {6}, {9}, {18}, {19}, {33}, {34}, {42}, {6}, {8}, {10}, {13}, {
          17}, {18}, {6}, {7}, {9}, {13}, {12}, {13}, {14}, {15}, {11}, {
          14}, {16}, {9}, {10}, {11}, {17}, {11}, {12}, {15}, {16}, {38}, {
          11}, {14}, {17}, {20}, {38}, {12}, {14}, {38}, {40}, {9}, {13}, {
          15}, {18}, {19}, {20}, {8}, {9}, {17}, {19}, {8}, {17}, {18}, {
          20}, {33}, {36}, {15}, {17}, {19}, {36}, {38}, {39}, {22}, {23}, {
          24}, {21}, {23}, {24}, {46}, {47}, {21}, {22}, {29}, {30}, {47}, {
          21}, {22}, {26}, {27}, {25}, {27}, {28}, {30}, {45}, {5}, {25}, {
          26}, {31}, {42}, {45}, {26}, {29}, {30}, {23}, {28}, {30}, {23}, {
          26}, {28}, {29}, {44}, {45}, {3}, {5}, {27}, {32}, {3}, {31}, {8}, {
          19}, {34}, {35}, {36}, {37}, {8}, {33}, {37}, {41}, {42}, {33}, {
          36}, {37}, {49}, {19}, {20}, {33}, {35}, {39}, {49}, {33}, {34}, {
          35}, {43}, {14}, {15}, {16}, {20}, {39}, {40}, {20}, {36}, {38}, {
          49}, {16}, {38}, {34}, {42}, {43}, {44}, {5}, {8}, {27}, {34}, {
          41}, {44}, {45}, {37}, {41}, {44}, {30}, {41}, {42}, {43}, {45}, {
          26}, {27}, {30}, {42}, {44}, {22}, {47}, {48}, {22}, {23}, {46}, {
          46}, {35}, {36}, {39}}}, Pattern}]}, {
      GraphLayout -> {"Dimension" -> 2}, ImageSize -> Full, 
       VertexCoordinates -> {{7, 1}, {8, 0}, {8, 1}, {6, 1}, {7, 2}, {5, 2}, {
        5, 1}, {5, 3}, {4, 2}, {4, 1}, {2, 2}, {0, 3}, {3, 2}, {1, 3}, {2, 
        3}, {1, 4}, {3, 3}, {4, 3}, {4, 4}, {3, 4}, {11, 4}, {11, 5}, {10, 
        5}, {12, 4}, {9, 2}, {9, 3}, {8, 2}, {10, 3}, {10, 4}, {9, 4}, {9, 
        1}, {9, 0}, {5, 4}, {6, 4}, {5, 5}, {4, 5}, {6, 5}, {2, 4}, {3, 5}, {
        1, 5}, {7, 4}, {7, 3}, {7, 5}, {8, 4}, {8, 3}, {11, 6}, {10, 6}, {12, 
        6}, {4, 6}}, VertexSize -> {Large}, 
       VertexStyle -> {
        20 -> RGBColor[0.91, 0.318, 0.243], 3 -> RGBColor[0.97, 0.606, 0.081],
          28 -> RGBColor[0.34398, 0.49112, 0.89936], 1 -> 
         RGBColor[0.91, 0.318, 0.243], 23 -> 
         RGBColor[0.34398, 0.49112, 0.89936], 2 -> 
         RGBColor[0.34398, 0.49112, 0.89936], 41 -> 
         RGBColor[0.448, 0.69232, 0.1538], 43 -> 
         RGBColor[0.34398, 0.49112, 0.89936], 14 -> 
         RGBColor[0.91, 0.318, 0.243], 36 -> RGBColor[0.97, 0.606, 0.081], 13 -> 
         RGBColor[0.91, 0.318, 0.243], 49 -> RGBColor[0.91, 0.318, 0.243], 16 -> 
         RGBColor[0.34398, 0.49112, 0.89936], 46 -> 
         RGBColor[0.34398, 0.49112, 0.89936], 15 -> 
         RGBColor[0.34398, 0.49112, 0.89936], 47 -> 
         RGBColor[0.91, 0.318, 0.243], 21 -> RGBColor[0.91, 0.318, 0.243], 9 -> 
         RGBColor[0.34398, 0.49112, 0.89936], 40 -> 
         RGBColor[0.91, 0.318, 0.243], 33 -> RGBColor[0.91, 0.318, 0.243], 26 -> 
         RGBColor[0.448, 0.69232, 0.1538], 38 -> RGBColor[0.97, 0.606, 0.081],
          4 -> RGBColor[0.97, 0.606, 0.081], 7 -> 
         RGBColor[0.34398, 0.49112, 0.89936], 48 -> 
         RGBColor[0.97, 0.606, 0.081], 5 -> 
         RGBColor[0.34398, 0.49112, 0.89936], 12 -> 
         RGBColor[0.448, 0.69232, 0.1538], 6 -> RGBColor[0.91, 0.318, 0.243], 
         27 -> RGBColor[0.97, 0.606, 0.081], 42 -> 
         RGBColor[0.91, 0.318, 0.243], 44 -> RGBColor[0.97, 0.606, 0.081], 22 -> 
         RGBColor[0.97, 0.606, 0.081], 31 -> RGBColor[0.91, 0.318, 0.243], 35 -> 
         RGBColor[0.34398, 0.49112, 0.89936], 17 -> 
         RGBColor[0.97, 0.606, 0.081], 19 -> 
         RGBColor[0.34398, 0.49112, 0.89936], 10 -> 
         RGBColor[0.97, 0.606, 0.081], 37 -> RGBColor[0.97, 0.606, 0.081], 45 -> 
         RGBColor[0.34398, 0.49112, 0.89936], 18 -> 
         RGBColor[0.91, 0.318, 0.243], 11 -> RGBColor[0.97, 0.606, 0.081], 30 -> 
         RGBColor[0.91, 0.318, 0.243], 25 -> 
         RGBColor[0.34398, 0.49112, 0.89936], 24 -> 
         RGBColor[0.34398, 0.49112, 0.89936], 32 -> 
         RGBColor[0.34398, 0.49112, 0.89936], 39 -> 
         RGBColor[0.34398, 0.49112, 0.89936], 8 -> 
         RGBColor[0.97, 0.606, 0.081], 29 -> RGBColor[0.97, 0.606, 0.081], 34 -> 
         RGBColor[0.34398, 0.49112, 0.89936]}}]]}, 
    TagBox[GraphicsGroupBox[GraphicsComplexBox[CompressedData["
1:eJx1kjEOgzAMRa1OGTNkYGAwKEKsPUFzhh6hEjNX5wgUhd+KJ2IJWc//m9iB
4bO+l4eZPb/PkWv0pebtVbMXu4RD78DqtzOnBssvDmeO8Ef4DbpC/QG6+lgP
0CPqnIfcqk8N1p4ZPMM/Yk6xznHoGbqY7yNr7995dp1L/g6cyr0vwc/vzvtq
/Qc9/OIAlt/hd/h1/5org2fwf+8dO2soag==
       "], {
        {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
         ArrowBox[{{1, 2}, {1, 3}, {1, 4}, {1, 5}, {2, 3}, {3, 5}, {3, 31}, {
          3, 32}, {4, 5}, {4, 6}, {4, 7}, {5, 6}, {5, 8}, {5, 27}, {5, 31}, {
          5, 42}, {6, 7}, {6, 8}, {6, 9}, {6, 10}, {7, 10}, {8, 9}, {8, 18}, {
          8, 19}, {8, 33}, {8, 34}, {8, 42}, {9, 10}, {9, 13}, {9, 17}, {9, 
          18}, {10, 13}, {11, 12}, {11, 13}, {11, 14}, {11, 15}, {12, 14}, {
          12, 16}, {13, 17}, {14, 15}, {14, 16}, {14, 38}, {15, 17}, {15, 
          20}, {15, 38}, {16, 38}, {16, 40}, {17, 18}, {17, 19}, {17, 20}, {
          18, 19}, {19, 20}, {19, 33}, {19, 36}, {20, 36}, {20, 38}, {20, 
          39}, {21, 22}, {21, 23}, {21, 24}, {22, 23}, {22, 24}, {22, 46}, {
          22, 47}, {23, 29}, {23, 30}, {23, 47}, {25, 26}, {25, 27}, {26, 
          27}, {26, 28}, {26, 30}, {26, 45}, {27, 31}, {27, 42}, {27, 45}, {
          28, 29}, {28, 30}, {29, 30}, {30, 44}, {30, 45}, {31, 32}, {33, 
          34}, {33, 35}, {33, 36}, {33, 37}, {34, 37}, {34, 41}, {34, 42}, {
          35, 36}, {35, 37}, {35, 49}, {36, 39}, {36, 49}, {37, 43}, {38, 
          39}, {38, 40}, {39, 49}, {41, 42}, {41, 43}, {41, 44}, {42, 44}, {
          42, 45}, {43, 44}, {44, 45}, {46, 47}, {46, 48}}, 0.2]}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         {RGBColor[0.91, 0.318, 0.243], DiskBox[1, 0.2]}, 
         {RGBColor[0.34398, 0.49112, 0.89936], DiskBox[2, 0.2]}, 
         {RGBColor[0.97, 0.606, 0.081], DiskBox[3, 0.2]}, 
         {RGBColor[0.97, 0.606, 0.081], DiskBox[4, 0.2]}, 
         {RGBColor[0.34398, 0.49112, 0.89936], DiskBox[5, 0.2]}, 
         {RGBColor[0.91, 0.318, 0.243], DiskBox[6, 0.2]}, 
         {RGBColor[0.34398, 0.49112, 0.89936], DiskBox[7, 0.2]}, 
         {RGBColor[0.97, 0.606, 0.081], DiskBox[8, 0.2]}, 
         {RGBColor[0.34398, 0.49112, 0.89936], DiskBox[9, 0.2]}, 
         {RGBColor[0.97, 0.606, 0.081], DiskBox[10, 0.2]}, 
         {RGBColor[0.97, 0.606, 0.081], DiskBox[11, 0.2]}, 
         {RGBColor[0.448, 0.69232, 0.1538], DiskBox[12, 0.2]}, 
         {RGBColor[0.91, 0.318, 0.243], DiskBox[13, 0.2]}, 
         {RGBColor[0.91, 0.318, 0.243], DiskBox[14, 0.2]}, 
         {RGBColor[0.34398, 0.49112, 0.89936], DiskBox[15, 0.2]}, 
         {RGBColor[0.34398, 0.49112, 0.89936], DiskBox[16, 0.2]}, 
         {RGBColor[0.97, 0.606, 0.081], DiskBox[17, 0.2]}, 
         {RGBColor[0.91, 0.318, 0.243], DiskBox[18, 0.2]}, 
         {RGBColor[0.34398, 0.49112, 0.89936], DiskBox[19, 0.2]}, 
         {RGBColor[0.91, 0.318, 0.243], DiskBox[20, 0.2]}, 
         {RGBColor[0.91, 0.318, 0.243], DiskBox[21, 0.2]}, 
         {RGBColor[0.97, 0.606, 0.081], DiskBox[22, 0.2]}, 
         {RGBColor[0.34398, 0.49112, 0.89936], DiskBox[23, 0.2]}, 
         {RGBColor[0.34398, 0.49112, 0.89936], DiskBox[24, 0.2]}, 
         {RGBColor[0.34398, 0.49112, 0.89936], DiskBox[25, 0.2]}, 
         {RGBColor[0.448, 0.69232, 0.1538], DiskBox[26, 0.2]}, 
         {RGBColor[0.97, 0.606, 0.081], DiskBox[27, 0.2]}, 
         {RGBColor[0.34398, 0.49112, 0.89936], DiskBox[28, 0.2]}, 
         {RGBColor[0.97, 0.606, 0.081], DiskBox[29, 0.2]}, 
         {RGBColor[0.91, 0.318, 0.243], DiskBox[30, 0.2]}, 
         {RGBColor[0.91, 0.318, 0.243], DiskBox[31, 0.2]}, 
         {RGBColor[0.34398, 0.49112, 0.89936], DiskBox[32, 0.2]}, 
         {RGBColor[0.91, 0.318, 0.243], DiskBox[33, 0.2]}, 
         {RGBColor[0.34398, 0.49112, 0.89936], DiskBox[34, 0.2]}, 
         {RGBColor[0.34398, 0.49112, 0.89936], DiskBox[35, 0.2]}, 
         {RGBColor[0.97, 0.606, 0.081], DiskBox[36, 0.2]}, 
         {RGBColor[0.97, 0.606, 0.081], DiskBox[37, 0.2]}, 
         {RGBColor[0.97, 0.606, 0.081], DiskBox[38, 0.2]}, 
         {RGBColor[0.34398, 0.49112, 0.89936], DiskBox[39, 0.2]}, 
         {RGBColor[0.91, 0.318, 0.243], DiskBox[40, 0.2]}, 
         {RGBColor[0.448, 0.69232, 0.1538], DiskBox[41, 0.2]}, 
         {RGBColor[0.91, 0.318, 0.243], DiskBox[42, 0.2]}, 
         {RGBColor[0.34398, 0.49112, 0.89936], DiskBox[43, 0.2]}, 
         {RGBColor[0.97, 0.606, 0.081], DiskBox[44, 0.2]}, 
         {RGBColor[0.34398, 0.49112, 0.89936], DiskBox[45, 0.2]}, 
         {RGBColor[0.34398, 0.49112, 0.89936], DiskBox[46, 0.2]}, 
         {RGBColor[0.91, 0.318, 0.243], DiskBox[47, 0.2]}, 
         {RGBColor[0.97, 0.606, 0.081], DiskBox[48, 0.2]}, 
         {RGBColor[0.91, 0.318, 0.243], DiskBox[49, 0.2]}}}]],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->"NetworkGraphics",
  FormatType->TraditionalForm,
  FrameTicks->None,
  ImageSize->Full]], "Output",
 CellChangeTimes->{{3.8772763165599117`*^9, 3.8772763552113285`*^9}},
 CellLabel->"Out[63]=",ExpressionUUID->"9a1035e2-9305-484c-91f6-cd6ce7ad7add"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Exercise 46", "Section",
 CellChangeTimes->{{3.8772765392091026`*^9, 
  3.8772765432660956`*^9}},ExpressionUUID->"e409150f-59fd-4580-a52a-\
1449698f85e6"],

Cell[TextData[{
 "Let G with a graph with ",
 Cell[BoxData[
  FormBox[
   RowBox[{"n", ">=", "3"}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "1dd3a131-8f86-44e3-8bb2-1e4934573f28"],
 " vertices, defined by a planar diagram that is \
\[OpenCurlyDoubleQuote]maximal,\[CloseCurlyDoubleQuote] in the sense that no \
additional lines can be drawn between nonadjacent vertices without crossing \
an existing edge."
}], "Text",
 CellChangeTimes->{{3.877276545578627*^9, 
  3.8772765920774207`*^9}},ExpressionUUID->"a3d90864-4c79-45cf-a794-\
8469ba49adff"],

Cell["\<\
The graph data property I am looking for is \
\[OpenCurlyDoubleQuote]Triangulated\[CloseCurlyDoubleQuote] or \
\[OpenCurlyDoubleQuote]maximally planar\[CloseCurlyDoubleQuote].\
\>", "Text",
 CellChangeTimes->{{3.8772766166341753`*^9, 
  3.877276633907487*^9}},ExpressionUUID->"61a7e904-7694-4a46-a59d-\
f4a264c02944"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GraphData", "[", "\"\<Triangulated\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.8772766362512183`*^9, 3.8772766452649884`*^9}},
 CellLabel->"In[69]:=",ExpressionUUID->"b95c413d-4f63-468e-b246-75e871c98fdf"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\<\"Apollonian\"\>", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Apollonian\"\>", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Apollonian\"\>", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Apollonian\"\>", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Apollonian\"\>", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"11", ",", "1", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"11", ",", "1", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"11", ",", "2", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"11", ",", "2", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"11", ",", "3", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"11", ",", "3", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"12", ",", "1", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"12", ",", "1", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"13", ",", "1", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"13", ",", "1", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"13", ",", "1", ",", "3"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"13", ",", "2", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"13", ",", "2", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"14", ",", "1", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"14", ",", "1", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"14", ",", "2", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"14", ",", "2", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"14", ",", "3", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"14", ",", "3", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"14", ",", "4", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"14", ",", "4", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"15", ",", "1", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"15", ",", "1", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"15", ",", "1", ",", "3"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"15", ",", "2", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"15", ",", "2", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"15", ",", "3", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"15", ",", "3", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"15", ",", "4", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"15", ",", "4", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"15", ",", "5", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"15", ",", "5", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"15", ",", "6", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"15", ",", "6", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"16", ",", "1", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"16", ",", "1", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"16", ",", "2", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"16", ",", "2", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"16", ",", "3", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"16", ",", "3", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"16", ",", "4", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"16", ",", "4", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"16", ",", "5", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"16", ",", "5", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"16", ",", "6", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"16", ",", "6", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"16", ",", "7", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"16", ",", "7", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"16", ",", "8", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"16", ",", "8", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"16", ",", "9", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"16", ",", "9", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"17", ",", "1", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"17", ",", "1", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Dipyramid\"\>", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Dipyramid\"\>", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Dipyramid\"\>", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Dipyramid\"\>", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Dipyramid\"\>", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Dipyramid\"\>", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Dipyramid\"\>", ",", "10"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Dipyramid\"\>", ",", "11"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Dipyramid\"\>", ",", "12"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Dipyramid\"\>", ",", "13"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Dipyramid\"\>", ",", "14"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Dipyramid\"\>", ",", "15"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Dipyramid\"\>", ",", "16"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Dipyramid\"\>", ",", "17"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Dipyramid\"\>", ",", "18"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Dipyramid\"\>", ",", "19"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Dipyramid\"\>", ",", "20"}], "}"}], 
   ",", "\<\"DisdyakisDodecahedralGraph\"\>", 
   ",", "\<\"DisdyakisTriacontahedralGraph\"\>", ",", "\<\"ErreraGraph\"\>", 
   ",", "\<\"FritschGraph\"\>", ",", "\<\"GoldnerHararyGraph\"\>", 
   ",", "\<\"HeawoodFourColorGraph\"\>", ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Heptahedral\"\>", ",", "15"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Heptahedral\"\>", ",", "29"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Heptahedral\"\>", ",", "34"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Hexahedral\"\>", ",", "5"}], "}"}], 
   ",", "\<\"IcosahedralGraph\"\>", ",", 
   RowBox[{"{", 
    RowBox[{"\<\"JohnsonSkeleton\"\>", ",", "17"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"JohnsonSkeleton\"\>", ",", "84"}], "}"}], 
   ",", "\<\"KittellGraph\"\>", ",", "\<\"McGregorGraph\"\>", 
   ",", "\<\"MooreGraph\"\>", ",", "\<\"OctahedralGraph\"\>", 
   ",", "\<\"PentakisDodecahedralGraph\"\>", 
   ",", "\<\"PentakisIcosidodecahedralGraph\"\>", ",", "\<\"PoussinGraph\"\>",
    ",", 
   RowBox[{"{", 
    RowBox[{"\<\"SierpinskiTetrahedron\"\>", ",", "2"}], "}"}], 
   ",", "\<\"SmallTriakisOctahedralGraph\"\>", 
   ",", "\<\"TetrahedralGraph\"\>", ",", "\<\"TetrakisHexahedralGraph\"\>", 
   ",", "\<\"TriakisIcosahedralGraph\"\>", 
   ",", "\<\"TriakisTetrahedralGraph\"\>", ",", "\<\"TriangleGraph\"\>", ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Triangulated\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"8", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Triangulated\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"8", ",", "3"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Triangulated\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"8", ",", "4"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Triangulated\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"8", ",", "5"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Triangulated\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"8", ",", "6"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Triangulated\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"8", ",", "8"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Triangulated\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"8", ",", "9"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Triangulated\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"8", ",", "10"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Triangulated\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"8", ",", "11"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Triangulated\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"8", ",", "12"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Triangulated\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"8", ",", "14"}], "}"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.877276660534872*^9},
 CellLabel->"Out[69]=",ExpressionUUID->"a4311c77-bbdd-4ff6-b96f-d4739efd11d9"]
}, Open  ]],

Cell["\<\
Prove that the diagram partitions the plane into regions that each have \
exactly three vertices on their boundary. (One of these regions is the set of \
all points that lie outside the diagram.)\
\>", "Text",
 CellChangeTimes->{{3.8772766586200237`*^9, 
  3.877276690443962*^9}},ExpressionUUID->"189a61b3-c919-476a-825a-\
df4b796a31d4"],

Cell["Therefore G has exactly 3n-6 edges.", "Text",
 CellChangeTimes->{{3.877276692929628*^9, 
  3.877276701869949*^9}},ExpressionUUID->"94031fed-a0f2-4409-9bf2-\
0d22e1b51424"],

Cell["\<\
I think there\[CloseCurlyQuote]s a graph function that does something with a \
plane.\
\>", "Text",
 CellChangeTimes->{{3.877276724532607*^9, 
  3.87727673471801*^9}},ExpressionUUID->"98e13d10-fc96-4aeb-865b-\
08686a7e713c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Names", "[", 
  RowBox[{"\"\<*plan*\>\"", ",", 
   RowBox[{"IgnoreCase", "->", "True"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.877276716286641*^9, 3.8772767228840733`*^9}},
 CellLabel->"In[70]:=",ExpressionUUID->"25cd1a7e-51ff-47c3-b89e-94feee82959f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"ClipPlanes\"\>", ",", "\<\"ClipPlanesStyle\"\>", 
   ",", "\<\"CoplanarPoints\"\>", ",", "\<\"DualPlanarGraph\"\>", 
   ",", "\<\"ExoplanetData\"\>", ",", "\<\"FindPlanarColoring\"\>", 
   ",", "\<\"HalfPlane\"\>", ",", "\<\"Hyperplane\"\>", 
   ",", "\<\"InfinitePlane\"\>", ",", "\<\"MinorPlanetData\"\>", 
   ",", "\<\"PlanarAngle\"\>", ",", "\<\"PlanarFaceList\"\>", 
   ",", "\<\"PlanarGraph\"\>", ",", "\<\"PlanarGraphQ\"\>", 
   ",", "\<\"PlanckRadiationLaw\"\>", ",", "\<\"PlaneCurveData\"\>", 
   ",", "\<\"PlanetaryMoonData\"\>", ",", "\<\"PlanetData\"\>", 
   ",", "\<\"PlantData\"\>", ",", "\<\"PlotRangeClipPlanesStyle\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.8772767356803274`*^9},
 CellLabel->"Out[70]=",ExpressionUUID->"030fbd2d-c7eb-45c7-b269-abb1e03c9d3d"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Information", "/@", 
  RowBox[{"Names", "[", 
   RowBox[{"\"\<*plan*\>\"", ",", 
    RowBox[{"IgnoreCase", "->", "True"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.877276738449082*^9, 3.8772767400935*^9}},
 CellLabel->"In[71]:=",ExpressionUUID->"a9048f6b-2126-4139-aaf3-c9b453c23804"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/DualPlanarGraph",
                ButtonNote->"paclet:ref/DualPlanarGraph"],
               "\"paclet:ref/DualPlanarGraph\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"DualPlanarGraph\\\", \\\"[\\\
\", StyleBox[\\\"g\\\", \\\"TI\\\"], \\\"]\\\"}]\\) gives the dual of the \
planar graph \\!\\(\\*StyleBox[\\\"g\\\", \\\"TI\\\"]\\).\"\>", 
               "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", 
                    "paclet:ref/DualPlanarGraph", 
                    "paclet:ref/DualPlanarGraph", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/\
DualPlanarGraph.html"], None}, 
                    "http://reference.wolfram.com/language/ref/\
DualPlanarGraph.html", "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", 
                    RowBox[{"Protected", ",", "ReadProtected"}], "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`DualPlanarGraph\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/DualPlanarGraph",
                ButtonNote->"paclet:ref/DualPlanarGraph"],
               "\"paclet:ref/DualPlanarGraph\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"DualPlanarGraph\\\", \\\"[\\\
\", StyleBox[\\\"g\\\", \\\"TI\\\"], \\\"]\\\"}]\\) gives the dual of the \
planar graph \\!\\(\\*StyleBox[\\\"g\\\", \\\"TI\\\"]\\).\"\>", 
               "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"DualPlanarGraph\", \"[\", StyleBox[\"g\", \"TI\"], \"]\
\"}]\) gives the dual of the planar graph \!\(\*StyleBox[\"g\", \"TI\"]\).", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/DualPlanarGraph", "Web" -> 
        "http://reference.wolfram.com/language/ref/DualPlanarGraph.html"|>, 
      "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, "Options" -> None, 
      "Attributes" -> {Protected, ReadProtected}, "FullName" -> 
      "System`DualPlanarGraph"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/FindPlanarColoring",
                ButtonNote->"paclet:ref/FindPlanarColoring"],
               "\"paclet:ref/FindPlanarColoring\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"FindPlanarColoring\\\", \
\\\"[\\\", StyleBox[\\\"g\\\", \\\"TI\\\"], \\\"]\\\"}]\\) finds a coloring \
with minimal size for the faces of the planar graph \\!\\(\\*StyleBox[\\\"g\\\
\", \\\"TI\\\"]\\).\\n\\!\\(\\*RowBox[{\\\"FindPlanarColoring\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"g\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"c\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"c\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\
\"TR\\\"]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) finds a coloring \\!\\(\\*RowBox[{\
\\\"{\\\", RowBox[{SubscriptBox[StyleBox[\\\"c\\\", \\\"TI\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"c\\\", \
\\\"TI\\\"], StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\
\[Ellipsis]\\\", \\\"TR\\\"], \\\",\\\", SubscriptBox[StyleBox[\\\"c\\\", \
\\\"TI\\\"], StyleBox[\\\"k\\\", \\\"TI\\\"]]}], \\\"}\\\"}]\\) for the faces \
in the graph \\!\\(\\*StyleBox[\\\"g\\\", \\\"TI\\\"]\\).\"\>", 
               "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", 
                    "paclet:ref/FindPlanarColoring", 
                    "paclet:ref/FindPlanarColoring", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/\
FindPlanarColoring.html"], None}, 
                    "http://reference.wolfram.com/language/ref/\
FindPlanarColoring.html", "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Options\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Options\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Options", "Tooltip"]& ], 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Method", "\[Rule]", "Automatic"}], ",", 
                    RowBox[{
                    "PerformanceGoal", "\[RuleDelayed]", 
                    "$PerformanceGoal"}]}], "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", 
                    RowBox[{"Protected", ",", "ReadProtected"}], "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`FindPlanarColoring\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/FindPlanarColoring",
                ButtonNote->"paclet:ref/FindPlanarColoring"],
               "\"paclet:ref/FindPlanarColoring\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"FindPlanarColoring\\\", \
\\\"[\\\", StyleBox[\\\"g\\\", \\\"TI\\\"], \\\"]\\\"}]\\) finds a coloring \
with minimal size for the faces of the planar graph \\!\\(\\*StyleBox[\\\"g\\\
\", \\\"TI\\\"]\\).\\n\\!\\(\\*RowBox[{\\\"FindPlanarColoring\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"g\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"c\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"c\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\
\"TR\\\"]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) finds a coloring \\!\\(\\*RowBox[{\
\\\"{\\\", RowBox[{SubscriptBox[StyleBox[\\\"c\\\", \\\"TI\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"c\\\", \
\\\"TI\\\"], StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\
\[Ellipsis]\\\", \\\"TR\\\"], \\\",\\\", SubscriptBox[StyleBox[\\\"c\\\", \
\\\"TI\\\"], StyleBox[\\\"k\\\", \\\"TI\\\"]]}], \\\"}\\\"}]\\) for the faces \
in the graph \\!\\(\\*StyleBox[\\\"g\\\", \\\"TI\\\"]\\).\"\>", 
               "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"FindPlanarColoring\", \"[\", StyleBox[\"g\", \"TI\"], \
\"]\"}]\) finds a coloring with minimal size for the faces of the planar \
graph \!\(\*StyleBox[\"g\", \"TI\"]\).\n\!\(\*RowBox[{\"FindPlanarColoring\", \
\"[\", RowBox[{StyleBox[\"g\", \"TI\"], \",\", RowBox[{\"{\", \
RowBox[{SubscriptBox[StyleBox[\"c\", \"TI\"], StyleBox[\"1\", \"TR\"]], \
\",\", SubscriptBox[StyleBox[\"c\", \"TI\"], StyleBox[\"2\", \"TR\"]], \",\", \
StyleBox[\"\[Ellipsis]\", \"TR\"]}], \"}\"}]}], \"]\"}]\) finds a coloring \!\
\(\*RowBox[{\"{\", RowBox[{SubscriptBox[StyleBox[\"c\", \"TI\"], StyleBox[\"1\
\", \"TR\"]], \",\", SubscriptBox[StyleBox[\"c\", \"TI\"], StyleBox[\"2\", \
\"TR\"]], \",\", StyleBox[\"\[Ellipsis]\", \"TR\"], \",\", \
SubscriptBox[StyleBox[\"c\", \"TI\"], StyleBox[\"k\", \"TI\"]]}], \"}\"}]\) \
for the faces in the graph \!\(\*StyleBox[\"g\", \"TI\"]\).", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/FindPlanarColoring", "Web" -> 
        "http://reference.wolfram.com/language/ref/FindPlanarColoring.html"|>,
       "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, 
      "Options" -> {Method -> Automatic, PerformanceGoal :> $PerformanceGoal},
       "Attributes" -> {Protected, ReadProtected}, "FullName" -> 
      "System`FindPlanarColoring"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/PlanarFaceList",
                ButtonNote->"paclet:ref/PlanarFaceList"],
               "\"paclet:ref/PlanarFaceList\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"PlanarFaceList\\\", \
\\\"[\\\", StyleBox[\\\"g\\\", \\\"TI\\\"], \\\"]\\\"}]\\) gives the list of \
faces of the planar graph \\!\\(\\*StyleBox[\\\"g\\\", \\\"TI\\\"]\\).\"\>", 
               "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", 
                    "paclet:ref/PlanarFaceList", "paclet:ref/PlanarFaceList", 
                    "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/PlanarFaceList.\
html"], None}, 
                    "http://reference.wolfram.com/language/ref/PlanarFaceList.\
html", "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", 
                    RowBox[{"Protected", ",", "ReadProtected"}], "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`PlanarFaceList\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/PlanarFaceList",
                ButtonNote->"paclet:ref/PlanarFaceList"],
               "\"paclet:ref/PlanarFaceList\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"PlanarFaceList\\\", \
\\\"[\\\", StyleBox[\\\"g\\\", \\\"TI\\\"], \\\"]\\\"}]\\) gives the list of \
faces of the planar graph \\!\\(\\*StyleBox[\\\"g\\\", \\\"TI\\\"]\\).\"\>", 
               "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"PlanarFaceList\", \"[\", StyleBox[\"g\", \"TI\"], \
\"]\"}]\) gives the list of faces of the planar graph \!\(\*StyleBox[\"g\", \
\"TI\"]\).", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/PlanarFaceList", "Web" -> 
        "http://reference.wolfram.com/language/ref/PlanarFaceList.html"|>, 
      "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, "Options" -> None, 
      "Attributes" -> {Protected, ReadProtected}, "FullName" -> 
      "System`PlanarFaceList"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/PlanarGraph",
                ButtonNote->"paclet:ref/PlanarGraph"],
               "\"paclet:ref/PlanarGraph\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"PlanarGraph\\\", \\\"[\\\", \
RowBox[{\\\"{\\\", RowBox[{SubscriptBox[StyleBox[\\\"e\\\", \\\"TI\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"e\\\", \
\\\"TI\\\"], StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\
\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\"}], \\\"]\\\"}]\\) yields a planar \
graph with edges \\!\\(\\*SubscriptBox[StyleBox[\\\"e\\\", \\\"TI\\\"], \
StyleBox[\\\"j\\\", \\\"TI\\\"]]\\).\\n\\!\\(\\*RowBox[{\\\"PlanarGraph\\\", \
\\\"[\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"v\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"v\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\
\"TR\\\"]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"e\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"e\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\
\"TR\\\"]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) yields a planar graph with \
vertices \\!\\(\\*SubscriptBox[StyleBox[\\\"v\\\", \\\"TI\\\"], \
StyleBox[\\\"i\\\", \\\"TI\\\"]]\\) and edges \\!\\(\\*SubscriptBox[StyleBox[\
\\\"e\\\", \\\"TI\\\"], StyleBox[\\\"j\\\", \
\\\"TI\\\"]]\\).\\n\\!\\(\\*RowBox[{\\\"PlanarGraph\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"], \
\\\",\\\", RowBox[{SubscriptBox[StyleBox[\\\"w\\\", \\\"TI\\\"], \
StyleBox[\\\"i\\\", \\\"TI\\\"]], \\\"[\\\", SubscriptBox[StyleBox[\\\"v\\\", \
\\\"TI\\\"], StyleBox[\\\"i\\\", \\\"TI\\\"]], \\\"]\\\"}], \\\",\\\", \
StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\"}], \\\",\\\", RowBox[{\
\\\"{\\\", RowBox[{StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"], \\\",\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"w\\\", \\\"TI\\\"], StyleBox[\\\"j\\\", \
\\\"TI\\\"]], \\\"[\\\", SubscriptBox[StyleBox[\\\"e\\\", \\\"TI\\\"], \
StyleBox[\\\"j\\\", \\\"TI\\\"]], \\\"]\\\"}], \\\",\\\", StyleBox[\\\"\
\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) yields a planar \
graph with vertex and edge properties defined by the symbolic wrappers \\!\\(\
\\*SubscriptBox[StyleBox[\\\"w\\\", \\\"TI\\\"], StyleBox[\\\"k\\\", \\\"TI\\\
\"]]\\).\\n\\!\\(\\*RowBox[{\\\"PlanarGraph\\\", \\\"[\\\", \
RowBox[{\\\"{\\\", RowBox[{RowBox[{SubscriptBox[StyleBox[\\\"v\\\", \
\\\"TI\\\"], StyleBox[\\\"i\\\", \\\"TI\\\"]], \\\"\[Rule]\\\", \
SubscriptBox[StyleBox[\\\"v\\\", \\\"TI\\\"], StyleBox[\\\"j\\\", \
\\\"TI\\\"]]}], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\
\\\"}], \\\"]\\\"}]\\) uses rules \
\\!\\(\\*RowBox[{SubscriptBox[StyleBox[\\\"v\\\", \\\"TI\\\"], StyleBox[\\\"i\
\\\", \\\"TI\\\"]], \\\"\[Rule]\\\", SubscriptBox[StyleBox[\\\"v\\\", \
\\\"TI\\\"], StyleBox[\\\"j\\\", \\\"TI\\\"]]}]\\) to specify a planar graph.\
\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", "paclet:ref/PlanarGraph", 
                    "paclet:ref/PlanarGraph", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/PlanarGraph.\
html"], None}, "http://reference.wolfram.com/language/ref/PlanarGraph.html", 
                    "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", 
                    RowBox[{"Protected", ",", "ReadProtected"}], "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`PlanarGraph\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/PlanarGraph",
                ButtonNote->"paclet:ref/PlanarGraph"],
               "\"paclet:ref/PlanarGraph\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"PlanarGraph\\\", \\\"[\\\", \
RowBox[{\\\"{\\\", RowBox[{SubscriptBox[StyleBox[\\\"e\\\", \\\"TI\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"e\\\", \
\\\"TI\\\"], StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\
\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\"}], \\\"]\\\"}]\\) yields a planar \
graph with edges \\!\\(\\*SubscriptBox[StyleBox[\\\"e\\\", \\\"TI\\\"], \
StyleBox[\\\"j\\\", \\\"TI\\\"]]\\).\\n\\!\\(\\*RowBox[{\\\"PlanarGraph\\\", \
\\\"[\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"v\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"v\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\
\"TR\\\"]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"e\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"e\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\
\"TR\\\"]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) yields a planar graph with \
vertices \\!\\(\\*SubscriptBox[StyleBox[\\\"v\\\", \\\"TI\\\"], \
StyleBox[\\\"i\\\", \\\"TI\\\"]]\\) and edges \\!\\(\\*SubscriptBox[StyleBox[\
\\\"e\\\", \\\"TI\\\"], StyleBox[\\\"j\\\", \
\\\"TI\\\"]]\\).\\n\\!\\(\\*RowBox[{\\\"PlanarGraph\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"], \
\\\",\\\", RowBox[{SubscriptBox[StyleBox[\\\"w\\\", \\\"TI\\\"], \
StyleBox[\\\"i\\\", \\\"TI\\\"]], \\\"[\\\", SubscriptBox[StyleBox[\\\"v\\\", \
\\\"TI\\\"], StyleBox[\\\"i\\\", \\\"TI\\\"]], \\\"]\\\"}], \\\",\\\", \
StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\"}], \\\",\\\", RowBox[{\
\\\"{\\\", RowBox[{StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"], \\\",\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"w\\\", \\\"TI\\\"], StyleBox[\\\"j\\\", \
\\\"TI\\\"]], \\\"[\\\", SubscriptBox[StyleBox[\\\"e\\\", \\\"TI\\\"], \
StyleBox[\\\"j\\\", \\\"TI\\\"]], \\\"]\\\"}], \\\",\\\", StyleBox[\\\"\
\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) yields a planar \
graph with vertex and edge properties defined by the symbolic wrappers \\!\\(\
\\*SubscriptBox[StyleBox[\\\"w\\\", \\\"TI\\\"], StyleBox[\\\"k\\\", \\\"TI\\\
\"]]\\).\\n\\!\\(\\*RowBox[{\\\"PlanarGraph\\\", \\\"[\\\", \
RowBox[{\\\"{\\\", RowBox[{RowBox[{SubscriptBox[StyleBox[\\\"v\\\", \
\\\"TI\\\"], StyleBox[\\\"i\\\", \\\"TI\\\"]], \\\"\[Rule]\\\", \
SubscriptBox[StyleBox[\\\"v\\\", \\\"TI\\\"], StyleBox[\\\"j\\\", \
\\\"TI\\\"]]}], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\
\\\"}], \\\"]\\\"}]\\) uses rules \
\\!\\(\\*RowBox[{SubscriptBox[StyleBox[\\\"v\\\", \\\"TI\\\"], StyleBox[\\\"i\
\\\", \\\"TI\\\"]], \\\"\[Rule]\\\", SubscriptBox[StyleBox[\\\"v\\\", \
\\\"TI\\\"], StyleBox[\\\"j\\\", \\\"TI\\\"]]}]\\) to specify a planar graph.\
\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"PlanarGraph\", \"[\", RowBox[{\"{\", \
RowBox[{SubscriptBox[StyleBox[\"e\", \"TI\"], StyleBox[\"1\", \"TR\"]], \
\",\", SubscriptBox[StyleBox[\"e\", \"TI\"], StyleBox[\"2\", \"TR\"]], \",\", \
StyleBox[\"\[Ellipsis]\", \"TR\"]}], \"}\"}], \"]\"}]\) yields a planar graph \
with edges \!\(\*SubscriptBox[StyleBox[\"e\", \"TI\"], StyleBox[\"j\", \
\"TI\"]]\).\n\!\(\*RowBox[{\"PlanarGraph\", \"[\", RowBox[{RowBox[{\"{\", \
RowBox[{SubscriptBox[StyleBox[\"v\", \"TI\"], StyleBox[\"1\", \"TR\"]], \
\",\", SubscriptBox[StyleBox[\"v\", \"TI\"], StyleBox[\"2\", \"TR\"]], \",\", \
StyleBox[\"\[Ellipsis]\", \"TR\"]}], \"}\"}], \",\", RowBox[{\"{\", \
RowBox[{SubscriptBox[StyleBox[\"e\", \"TI\"], StyleBox[\"1\", \"TR\"]], \
\",\", SubscriptBox[StyleBox[\"e\", \"TI\"], StyleBox[\"2\", \"TR\"]], \",\", \
StyleBox[\"\[Ellipsis]\", \"TR\"]}], \"}\"}]}], \"]\"}]\) yields a planar \
graph with vertices \!\(\*SubscriptBox[StyleBox[\"v\", \"TI\"], \
StyleBox[\"i\", \"TI\"]]\) and edges \!\(\*SubscriptBox[StyleBox[\"e\", \
\"TI\"], StyleBox[\"j\", \"TI\"]]\).\n\!\(\*RowBox[{\"PlanarGraph\", \"[\", \
RowBox[{RowBox[{\"{\", RowBox[{StyleBox[\"\[Ellipsis]\", \"TR\"], \",\", \
RowBox[{SubscriptBox[StyleBox[\"w\", \"TI\"], StyleBox[\"i\", \"TI\"]], \
\"[\", SubscriptBox[StyleBox[\"v\", \"TI\"], StyleBox[\"i\", \"TI\"]], \
\"]\"}], \",\", StyleBox[\"\[Ellipsis]\", \"TR\"]}], \"}\"}], \",\", RowBox[{\
\"{\", RowBox[{StyleBox[\"\[Ellipsis]\", \"TR\"], \",\", \
RowBox[{SubscriptBox[StyleBox[\"w\", \"TI\"], StyleBox[\"j\", \"TI\"]], \
\"[\", SubscriptBox[StyleBox[\"e\", \"TI\"], StyleBox[\"j\", \"TI\"]], \
\"]\"}], \",\", StyleBox[\"\[Ellipsis]\", \"TR\"]}], \"}\"}]}], \"]\"}]\) \
yields a planar graph with vertex and edge properties defined by the symbolic \
wrappers \!\(\*SubscriptBox[StyleBox[\"w\", \"TI\"], StyleBox[\"k\", \"TI\"]]\
\).\n\!\(\*RowBox[{\"PlanarGraph\", \"[\", RowBox[{\"{\", \
RowBox[{RowBox[{SubscriptBox[StyleBox[\"v\", \"TI\"], StyleBox[\"i\", \
\"TI\"]], \"\[Rule]\", SubscriptBox[StyleBox[\"v\", \"TI\"], StyleBox[\"j\", \
\"TI\"]]}], \",\", StyleBox[\"\[Ellipsis]\", \"TR\"]}], \"}\"}], \"]\"}]\) \
uses rules \!\(\*RowBox[{SubscriptBox[StyleBox[\"v\", \"TI\"], \
StyleBox[\"i\", \"TI\"]], \"\[Rule]\", SubscriptBox[StyleBox[\"v\", \"TI\"], \
StyleBox[\"j\", \"TI\"]]}]\) to specify a planar graph.", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/PlanarGraph", "Web" -> 
        "http://reference.wolfram.com/language/ref/PlanarGraph.html"|>, 
      "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, "Options" -> None, 
      "Attributes" -> {Protected, ReadProtected}, "FullName" -> 
      "System`PlanarGraph"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/PlanarGraphQ",
                ButtonNote->"paclet:ref/PlanarGraphQ"],
               "\"paclet:ref/PlanarGraphQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"PlanarGraphQ\\\", \\\"[\\\", \
StyleBox[\\\"g\\\", \\\"TI\\\"], \\\"]\\\"}]\\) yields True if \
\\!\\(\\*StyleBox[\\\"g\\\", \\\"TI\\\"]\\) is a planar graph and False \
otherwise.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", "paclet:ref/PlanarGraphQ", 
                    "paclet:ref/PlanarGraphQ", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/PlanarGraphQ.\
html"], None}, "http://reference.wolfram.com/language/ref/PlanarGraphQ.html", 
                    "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", "Protected", "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`PlanarGraphQ\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/PlanarGraphQ",
                ButtonNote->"paclet:ref/PlanarGraphQ"],
               "\"paclet:ref/PlanarGraphQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"PlanarGraphQ\\\", \\\"[\\\", \
StyleBox[\\\"g\\\", \\\"TI\\\"], \\\"]\\\"}]\\) yields True if \
\\!\\(\\*StyleBox[\\\"g\\\", \\\"TI\\\"]\\) is a planar graph and False \
otherwise.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"PlanarGraphQ\", \"[\", StyleBox[\"g\", \"TI\"], \
\"]\"}]\) yields True if \!\(\*StyleBox[\"g\", \"TI\"]\) is a planar graph \
and False otherwise.", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/PlanarGraphQ", "Web" -> 
        "http://reference.wolfram.com/language/ref/PlanarGraphQ.html"|>, 
      "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, "Options" -> None, "Attributes" -> {Protected}, 
      "FullName" -> "System`PlanarGraphQ"|>, True]]}], "}"}]], "Input",
 CellChangeTimes->{{3.877276800313175*^9, 
  3.8772768330131865`*^9}},ExpressionUUID->"414bbd95-dd0c-4eb6-989e-\
715c2287b2ee"],

Cell["", "Text",
 CellChangeTimes->{{3.877276762892385*^9, 
  3.8772767633078165`*^9}},ExpressionUUID->"885da1b7-ec20-4681-9388-\
981e6dd608fb"],

Cell["Select graphs with at least three vertices:", "Text",
 CellChangeTimes->{{3.877276883796632*^9, 
  3.877276892106083*^9}},ExpressionUUID->"e9d5fcc8-224d-4e70-b9d1-\
7526d892abf7"],

Cell["\<\
I was running this in 13.2 but I got an error so I had to evaluate it in 13.1.\
\>", "Text",
 CellChangeTimes->{{3.877277262758216*^9, 
  3.877277275700404*^9}},ExpressionUUID->"55bdd4b6-fae6-45f4-9b59-\
f36f824428cf"],

Cell["This is the error in 13.2", "Text",
 CellChangeTimes->{{3.8772772824875727`*^9, 
  3.8772772859723616`*^9}},ExpressionUUID->"7d9dd67b-8750-46ff-9df4-\
789f6ee357e6"],

Cell[CellGroupData[{

Cell[BoxData["$Version"], "Input",
 CellChangeTimes->{{3.8772773005111084`*^9, 3.877277308987604*^9}},
 CellLabel->"In[78]:=",ExpressionUUID->"57500bd9-84cf-4ad1-9c2e-245b04ae8106"],

Cell[BoxData["\<\"13.2.0 for Microsoft Windows (64-bit) (November 6, \
2022)\"\>"], "Output",
 CellChangeTimes->{{3.8772773019260883`*^9, 3.8772773092531395`*^9}},
 CellLabel->"Out[78]=",ExpressionUUID->"cc92e0ac-9ee6-446b-b6ed-aaffb1097b1e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"triangulatedGraphsWithAtLastThreeVertices", "=", 
  RowBox[{
   RowBox[{"Select", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"VertexCount", "[", 
       RowBox[{"GraphData", "[", "#", "]"}], "]"}], ">=", "3"}], "&"}], "]"}],
    "[", 
   RowBox[{"GraphData", "[", "\"\<Triangulated\>\"", "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.877276843177566*^9, 3.8772768794496083`*^9}, {
   3.877276952258453*^9, 3.8772769596245546`*^9}, 3.877277200111591*^9},
 CellLabel->"In[76]:=",ExpressionUUID->"6e016324-642a-4fd2-b5cb-83d4070cbdcc"],

Cell[BoxData[
 TemplateBox[{
  "AdjacencyGraph", "matsq", 
   "\"Argument \\!\\(\\*RowBox[{\\\"If\\\", \\\"[\\\", \
RowBox[{RowBox[{RowBox[{\\\"{\\\", \\\"\\\\\\\"10\[Hyphen]graph \
12002618\\\\\\\"\\\", \\\"}\\\"}], \\\">\\\", \\\"100\\\"}], \\\",\\\", \
RowBox[{\\\"GraphLayout\\\", \\\"\[Rule]\\\", \\\"None\\\"}], \\\",\\\", \
RowBox[{\\\"Sequence\\\", \\\"@@\\\", RowBox[{\\\"{\\\", \\\"}\\\"}]}]}], \
\\\"]\\\"}]\\) at position \\!\\(\\*RowBox[{\\\"2\\\"}]\\) is not a non-empty \
square matrix.\"", 2, 76, 15, 16937289918179914857, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.877277239760353*^9},
 CellLabel->
  "During evaluation of \
In[76]:=",ExpressionUUID->"4d4342f0-b094-402d-bbd9-dd489551e27c"],

Cell[BoxData[
 TemplateBox[{
  "VertexCount", "graph", 
   "\"A graph object is expected at position \\!\\(\\*RowBox[{\\\"1\\\"}]\\) \
in \\!\\(\\*RowBox[{\\\"VertexCount\\\", \\\"[\\\", \
RowBox[{\\\"AdjacencyGraph\\\", \\\"[\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"10\\\", \\\",\\\", \\\"12002618\\\"}], \\\"}\\\
\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"If\\\", \\\"[\\\", \
RowBox[{RowBox[{RowBox[{\\\"{\\\", \\\"\\\\\\\"10\[Hyphen]graph \
12002618\\\\\\\"\\\", \\\"}\\\"}], \\\">\\\", \\\"100\\\"}], \\\",\\\", \
RowBox[{\\\"GraphLayout\\\", \\\"\[Rule]\\\", \\\"None\\\"}], \\\",\\\", \
RowBox[{\\\"Sequence\\\", \\\"@@\\\", RowBox[{\\\"{\\\", \\\"}\\\"}]}]}], \
\\\"]\\\"}]}], \\\"]\\\"}], \\\"]\\\"}]\\).\"", 2, 76, 16, 
   16937289918179914857, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8772772400103817`*^9},
 CellLabel->
  "During evaluation of \
In[76]:=",ExpressionUUID->"48347a54-3901-44ec-8b09-b13915addccd"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\<\"Apollonian\"\>", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Apollonian\"\>", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Apollonian\"\>", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Apollonian\"\>", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Apollonian\"\>", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"11", ",", "1", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"11", ",", "1", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"11", ",", "2", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"11", ",", "2", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"11", ",", "3", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"11", ",", "3", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"12", ",", "1", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"12", ",", "1", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"13", ",", "1", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"13", ",", "1", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"13", ",", "1", ",", "3"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"13", ",", "2", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"13", ",", "2", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"14", ",", "1", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"14", ",", "1", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"14", ",", "2", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"14", ",", "2", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"14", ",", "3", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"14", ",", "3", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"14", ",", "4", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"14", ",", "4", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"15", ",", "1", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"15", ",", "1", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"15", ",", "1", ",", "3"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"15", ",", "2", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"15", ",", "2", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"15", ",", "3", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"15", ",", "3", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"15", ",", "4", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"15", ",", "4", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"15", ",", "5", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"15", ",", "5", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"15", ",", "6", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"15", ",", "6", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"16", ",", "1", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"16", ",", "1", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"16", ",", "2", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"16", ",", "2", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"16", ",", "3", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"16", ",", "3", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"16", ",", "4", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"16", ",", "4", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"16", ",", "5", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"16", ",", "5", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"16", ",", "6", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"16", ",", "6", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"16", ",", "7", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"16", ",", "7", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"16", ",", "8", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"16", ",", "8", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"16", ",", "9", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"16", ",", "9", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"17", ",", "1", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"17", ",", "1", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Dipyramid\"\>", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Dipyramid\"\>", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Dipyramid\"\>", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Dipyramid\"\>", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Dipyramid\"\>", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Dipyramid\"\>", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Dipyramid\"\>", ",", "10"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Dipyramid\"\>", ",", "11"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Dipyramid\"\>", ",", "12"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Dipyramid\"\>", ",", "13"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Dipyramid\"\>", ",", "14"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Dipyramid\"\>", ",", "15"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Dipyramid\"\>", ",", "16"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Dipyramid\"\>", ",", "17"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Dipyramid\"\>", ",", "18"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Dipyramid\"\>", ",", "19"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Dipyramid\"\>", ",", "20"}], "}"}], 
   ",", "\<\"DisdyakisDodecahedralGraph\"\>", 
   ",", "\<\"DisdyakisTriacontahedralGraph\"\>", ",", "\<\"ErreraGraph\"\>", 
   ",", "\<\"FritschGraph\"\>", ",", "\<\"GoldnerHararyGraph\"\>", 
   ",", "\<\"HeawoodFourColorGraph\"\>", ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Heptahedral\"\>", ",", "15"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Heptahedral\"\>", ",", "29"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Heptahedral\"\>", ",", "34"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Hexahedral\"\>", ",", "5"}], "}"}], 
   ",", "\<\"IcosahedralGraph\"\>", ",", 
   RowBox[{"{", 
    RowBox[{"\<\"JohnsonSkeleton\"\>", ",", "17"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"JohnsonSkeleton\"\>", ",", "84"}], "}"}], 
   ",", "\<\"KittellGraph\"\>", ",", "\<\"McGregorGraph\"\>", 
   ",", "\<\"MooreGraph\"\>", ",", "\<\"OctahedralGraph\"\>", 
   ",", "\<\"PentakisDodecahedralGraph\"\>", 
   ",", "\<\"PentakisIcosidodecahedralGraph\"\>", ",", "\<\"PoussinGraph\"\>",
    ",", 
   RowBox[{"{", 
    RowBox[{"\<\"SierpinskiTetrahedron\"\>", ",", "2"}], "}"}], 
   ",", "\<\"SmallTriakisOctahedralGraph\"\>", 
   ",", "\<\"TetrahedralGraph\"\>", ",", "\<\"TetrakisHexahedralGraph\"\>", 
   ",", "\<\"TriakisIcosahedralGraph\"\>", 
   ",", "\<\"TriakisTetrahedralGraph\"\>", ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Triangulated\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"8", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Triangulated\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"8", ",", "3"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Triangulated\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"8", ",", "4"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Triangulated\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"8", ",", "5"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Triangulated\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"8", ",", "6"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Triangulated\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"8", ",", "8"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Triangulated\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"8", ",", "9"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Triangulated\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"8", ",", "10"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Triangulated\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"8", ",", "11"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Triangulated\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"8", ",", "12"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Triangulated\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"8", ",", "14"}], "}"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.877276847100373*^9, 3.877276856969674*^9}, 
   3.8772769166180716`*^9, 3.87727696383687*^9, 3.8772772016115847`*^9, 
   3.8772772403072176`*^9},
 CellLabel->"Out[76]=",ExpressionUUID->"3cff55b4-e29f-49de-b316-f78bf7deeb13"]
}, Open  ]],

Cell["This is the evaluation in 13.1", "Text",
 CellChangeTimes->{{3.8772772888630657`*^9, 
  3.87727729606645*^9}},ExpressionUUID->"3dbfdf04-c32d-45c2-bd70-\
e8ef9abdb1e8"],

Cell[CellGroupData[{

Cell[BoxData["$Version"], "Input",
 CellChangeTimes->{{3.877277328472952*^9, 3.8772773295636787`*^9}},
 CellLabel->
  "In[169]:=",ExpressionUUID->"d8b2b882-c9d5-4a8d-997d-34330bd4c81f"],

Cell[BoxData["\<\"13.1.0 for Microsoft Windows (64-bit) (June 16, \
2022)\"\>"], "Output",
 CellChangeTimes->{3.8772773298652487`*^9},
 CellLabel->
  "Out[169]=",ExpressionUUID->"fc84b8c3-5fb7-4262-9d79-65b856288cb2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"triangulatedGraphsWithAtLastThreeVertices", "=", 
  RowBox[{
   RowBox[{"Select", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"VertexCount", "[", 
       RowBox[{"GraphData", "[", "#", "]"}], "]"}], ">=", "3"}], "&"}], "]"}],
    "[", 
   RowBox[{"GraphData", "[", "\"\<Triangulated\>\"", "]"}], "]"}]}]], "Input",
 CellLabel->
  "In[170]:=",ExpressionUUID->"c0617d92-db9d-4e6c-b5d8-2ed52384b76e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\<\"Apollonian\"\>", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Apollonian\"\>", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Apollonian\"\>", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Apollonian\"\>", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Apollonian\"\>", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"11", ",", "1", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"11", ",", "1", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"11", ",", "2", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"11", ",", "2", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"11", ",", "3", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"11", ",", "3", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"12", ",", "1", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"12", ",", "1", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"13", ",", "1", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"13", ",", "1", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"13", ",", "1", ",", "3"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"13", ",", "2", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"13", ",", "2", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"14", ",", "1", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"14", ",", "1", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"14", ",", "2", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"14", ",", "2", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"14", ",", "3", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"14", ",", "3", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"14", ",", "4", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"14", ",", "4", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"15", ",", "1", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"15", ",", "1", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"15", ",", "1", ",", "3"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"15", ",", "2", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"15", ",", "2", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"15", ",", "3", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"15", ",", "3", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"15", ",", "4", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"15", ",", "4", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"15", ",", "5", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"15", ",", "5", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"15", ",", "6", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"15", ",", "6", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"16", ",", "1", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"16", ",", "1", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"16", ",", "2", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"16", ",", "2", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"16", ",", "3", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"16", ",", "3", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"16", ",", "4", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"16", ",", "4", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"16", ",", "5", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"16", ",", "5", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"16", ",", "6", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"16", ",", "6", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"16", ",", "7", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"16", ",", "7", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"16", ",", "8", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"16", ",", "8", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"16", ",", "9", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"16", ",", "9", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"17", ",", "1", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"17", ",", "1", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Dipyramid\"\>", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Dipyramid\"\>", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Dipyramid\"\>", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Dipyramid\"\>", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Dipyramid\"\>", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Dipyramid\"\>", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Dipyramid\"\>", ",", "10"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Dipyramid\"\>", ",", "11"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Dipyramid\"\>", ",", "12"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Dipyramid\"\>", ",", "13"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Dipyramid\"\>", ",", "14"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Dipyramid\"\>", ",", "15"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Dipyramid\"\>", ",", "16"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Dipyramid\"\>", ",", "17"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Dipyramid\"\>", ",", "18"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Dipyramid\"\>", ",", "19"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Dipyramid\"\>", ",", "20"}], "}"}], 
   ",", "\<\"DisdyakisDodecahedralGraph\"\>", 
   ",", "\<\"DisdyakisTriacontahedralGraph\"\>", ",", "\<\"ErreraGraph\"\>", 
   ",", "\<\"FritschGraph\"\>", ",", "\<\"GoldnerHararyGraph\"\>", 
   ",", "\<\"HeawoodFourColorGraph\"\>", ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Heptahedral\"\>", ",", "15"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Heptahedral\"\>", ",", "29"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Heptahedral\"\>", ",", "34"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Hexahedral\"\>", ",", "5"}], "}"}], 
   ",", "\<\"IcosahedralGraph\"\>", ",", 
   RowBox[{"{", 
    RowBox[{"\<\"JohnsonSkeleton\"\>", ",", "17"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"JohnsonSkeleton\"\>", ",", "84"}], "}"}], 
   ",", "\<\"KittellGraph\"\>", ",", "\<\"McGregorGraph\"\>", 
   ",", "\<\"MooreGraph\"\>", ",", "\<\"OctahedralGraph\"\>", 
   ",", "\<\"PentakisDodecahedralGraph\"\>", ",", "\<\"PoussinGraph\"\>", ",", 
   RowBox[{"{", 
    RowBox[{"\<\"SierpinskiTetrahedron\"\>", ",", "2"}], "}"}], 
   ",", "\<\"SmallTriakisOctahedralGraph\"\>", 
   ",", "\<\"TetrahedralGraph\"\>", ",", "\<\"TetrakisHexahedralGraph\"\>", 
   ",", "\<\"TriakisIcosahedralGraph\"\>", 
   ",", "\<\"TriakisTetrahedralGraph\"\>", ",", "\<\"TriangleGraph\"\>", ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Triangulated\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"8", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Triangulated\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"8", ",", "3"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Triangulated\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"8", ",", "4"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Triangulated\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"8", ",", "5"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Triangulated\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"8", ",", "6"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Triangulated\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"8", ",", "8"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Triangulated\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"8", ",", "9"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Triangulated\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"8", ",", "10"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Triangulated\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"8", ",", "11"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Triangulated\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"8", ",", "12"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Triangulated\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"8", ",", "14"}], "}"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.877277338771502*^9},
 CellLabel->
  "Out[170]=",ExpressionUUID->"96d0ace4-14c1-4345-ae06-415e861e2e4b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"PlanarFaceList", "[", 
    RowBox[{"GraphData", "[", "#", "]"}], "]"}], "&"}], "/@", 
  "triangulatedGraphsWithAtLastThreeVertices"}]], "Input",
 CellChangeTimes->{{3.8772773451200085`*^9, 3.877277362920165*^9}},
 CellLabel->
  "In[172]:=",ExpressionUUID->"5cb61c99-53fe-4f39-99f3-eb202971dc3b"],

Cell[BoxData[
 TemplateBox[<|"shortenedBoxes" -> TagBox[
     RowBox[{"{", 
       RowBox[{
         RowBox[{"{", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"1", ",", "3", ",", "6"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"1", ",", "4", ",", "5"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"1", ",", "5", ",", "2"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"1", ",", "6", ",", "4"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"2", ",", "4", ",", "7"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"2", ",", "5", ",", "4"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"2", ",", "7", ",", "3"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"3", ",", "4", ",", "6"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"3", ",", "7", ",", "4"}], "}"}]}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"1", ",", "3", ",", "11"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"1", ",", "4", ",", "9"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"1", ",", "5", ",", "8"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"1", ",", "6", ",", "12"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"1", ",", "8", ",", "2"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"1", ",", "9", ",", "5"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"1", ",", "11", ",", "6"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"1", ",", "12", ",", "4"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"2", ",", "4", ",", "15"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"2", ",", "5", ",", "10"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"2", ",", "7", ",", "14"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"2", ",", "8", ",", "5"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"2", ",", "10", ",", "4"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"2", ",", "14", ",", "3"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"2", ",", "15", ",", "7"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"3", ",", "4", ",", "13"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"3", ",", "6", ",", "11"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"3", ",", "7", ",", "16"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"3", ",", "13", ",", "6"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"3", ",", "14", ",", "7"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"3", ",", "16", ",", "4"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"4", ",", "5", ",", "9"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"4", ",", "6", ",", "13"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"4", ",", "7", ",", "15"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"4", ",", "10", ",", "5"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"4", ",", "12", ",", "6"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"4", ",", "16", ",", "7"}], "}"}]}], "}"}], ",", 
         TemplateBox[{"110"}, "OutputSizeLimit`Skeleton"], ",", 
         RowBox[{"{", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{"1", ",", "3", ",", "5"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"1", ",", "5", ",", "8"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"1", ",", "6", ",", "7"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"1", ",", "7", ",", "3"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"1", ",", "8", ",", "6"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"2", ",", "4", ",", "8"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"2", ",", "5", ",", "7"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"2", ",", "6", ",", "4"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"2", ",", "7", ",", "6"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"2", ",", "8", ",", "5"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"3", ",", "7", ",", "5"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"4", ",", "6", ",", "8"}], "}"}]}], "}"}]}], "}"}], 
     Short[#, 5]& ], "line" -> 172, "sessionID" -> 16937227258867162981, 
   "byteCount" -> 504188, "size" -> 5, "stored" -> False, "expr" -> 
   Missing["NotAvailable", "NewSessionID"], "wrap" -> OutputSizeLimit`Defer, 
   "version" -> 1|>,
  "OutputSizeLimitTemplate"]], "Output",
 CellChangeTimes->{{3.877277355147786*^9, 3.8772773640919437`*^9}},
 CellLabel->
  "Out[172]=",ExpressionUUID->"6a3a79a4-16f1-47ed-96c4-db23190de81d"]
}, Open  ]],

Cell["\<\
I am going to work on creating a function to make a planar coloring. I used \
the code from ColorGraphEdges to build a new function ColorPlanarGraphFaces.\
\>", "Text",
 CellChangeTimes->{{3.877277403925788*^9, 3.8772774141575017`*^9}, {
  3.877278382517707*^9, 
  3.8772784142357397`*^9}},ExpressionUUID->"8752c286-d44b-4d79-ab3a-\
60bb8632c2c9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
  "ResourceFunction", "[", "\"\<ResourceFunctionDefinitionViewer\>\"", "]"}], 
  "[", "\"\<ColorGraphEdges\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.877277417099618*^9, 3.877277447946751*^9}},
 CellLabel->
  "In[174]:=",ExpressionUUID->"acff18d1-f0bb-4db5-8e88-a52c3b4b211e"],

Cell[BoxData[
 TemplateBox[<|
  "obj" -> NotebookObject[
    "da61faaf-7c16-4c62-bf43-6497d32d8cb2", 
     "8971a45f-6f5b-4977-91b4-3313d7823126"], "label" -> 
   "\"Definitions: ColorGraphEdges\""|>,
  "NotebookObjectUUIDsUnsaved"]], "Output",
 CellChangeTimes->{{3.877277438981807*^9, 3.8772774547716923`*^9}},
 CellLabel->
  "Out[174]=",ExpressionUUID->"9171d3cc-30d9-4057-86b8-fc8469c9a6b5"]
}, Open  ]],

Cell["Here is an example:", "Text",
 CellChangeTimes->{{3.877278429789127*^9, 
  3.8772784321175575`*^9}},ExpressionUUID->"74f1443b-f222-4632-89da-\
8375acc48b39"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceFunction", "[", 
   RowBox[{
   "CloudObject", "[", 
    "\"\<https://www.wolframcloud.com/obj/burbery1/DeployedResources/Function/\
ColorPlanarGraphFaces\>\"", "]"}], "]"}], "[", 
  RowBox[{"GraphData", "[", 
   RowBox[{"{", 
    RowBox[{"\"\<ChromaticallyEquivalent\>\"", ",", 
     RowBox[{"{", 
      RowBox[{"16", ",", "6", ",", "1"}], "}"}]}], "}"}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.877278425577203*^9, 3.877278425577203*^9}},
 CellLabel->
  "In[191]:=",ExpressionUUID->"ec1b8255-5e39-4d2a-a2b8-a3c442dbf5ee"],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.97, 0.606, 0.081], 
    PolygonBox[
     NCache[{{0, Rational[1, 2] 3^Rational[1, 2]}, {Rational[1, 2], 0}, {
       Rational[-1, 2], 0}}, {{0, 0.8660254037844386}, {
       0.5, 0}, {-0.5, 0}}]]}, 
   {RGBColor[0.97, 0.606, 0.081], 
    PolygonBox[
     NCache[{{0, Rational[1, 2] 3^Rational[1, 2]}, {
       Rational[-1, 6], Rational[13, 30]}, {
       Rational[1, 6], Rational[13, 30]}}, {{
       0, 0.8660254037844386}, {-0.16666666666666666`, 
       0.43333333333333335`}, {0.16666666666666666`, 
       0.43333333333333335`}}]]}, 
   {RGBColor[0.91, 0.318, 0.243], 
    PolygonBox[
     NCache[{{0, Rational[1, 2] 3^Rational[1, 2]}, {
       Rational[1, 6], Rational[13, 30]}, {Rational[1, 2], 0}}, {{
       0, 0.8660254037844386}, {0.16666666666666666`, 0.43333333333333335`}, {
       0.5, 0}}]]}, 
   {RGBColor[0.34398, 0.49112, 0.89936], 
    PolygonBox[
     NCache[{{0, Rational[1, 2] 3^Rational[1, 2]}, {Rational[-1, 2], 0}, {
       Rational[-1, 6], Rational[13, 30]}}, {{
       0, 0.8660254037844386}, {-0.5, 0}, {-0.16666666666666666`, 
       0.43333333333333335`}}]]}, 
   {RGBColor[0.34398, 0.49112, 0.89936], 
    PolygonBox[
     NCache[{{Rational[1, 2], 0}, {Rational[1, 6], Rational[1, 10]}, {
       Rational[-1, 2], 0}}, {{0.5, 0}, {0.16666666666666666`, 
       0.1}, {-0.5, 0}}]]}, 
   {RGBColor[0.34398, 0.49112, 0.89936], 
    PolygonBox[
     NCache[{{Rational[1, 2], 0}, {Rational[1, 6], Rational[13, 30]}, {
       Rational[1, 6], Rational[29, 90]}}, {{0.5, 0}, {0.16666666666666666`, 
       0.43333333333333335`}, {0.16666666666666666`, 
       0.32222222222222224`}}]]}, 
   {RGBColor[0.97, 0.606, 0.081], 
    PolygonBox[
     NCache[{{Rational[1, 2], 0}, {Rational[1, 6], Rational[29, 90]}, {
       Rational[1, 6], Rational[1, 10]}}, {{0.5, 0}, {0.16666666666666666`, 
       0.32222222222222224`}, {0.16666666666666666`, 0.1}}]]}, 
   {RGBColor[0.91, 0.318, 0.243], 
    PolygonBox[
     NCache[{{Rational[1, 6], Rational[1, 10]}, {
       Rational[-1, 18], Rational[1, 10]}, {Rational[-1, 2], 0}}, {{
       0.16666666666666666`, 0.1}, {-0.05555555555555555, 0.1}, {-0.5, 0}}]]}, 
   {RGBColor[0.34398, 0.49112, 0.89936], 
    PolygonBox[
     NCache[{{Rational[1, 6], Rational[1, 10]}, {
       Rational[1, 6], Rational[29, 90]}, {
       Rational[1, 18], Rational[4, 15]}}, {{0.16666666666666666`, 0.1}, {
      0.16666666666666666`, 0.32222222222222224`}, {0.05555555555555555, 
      0.26666666666666666`}}]]}, 
   {RGBColor[0.91, 0.318, 0.243], 
    PolygonBox[
     NCache[{{Rational[1, 6], Rational[1, 10]}, {
       Rational[1, 18], Rational[4, 15]}, {
       Rational[1, 18], Rational[7, 45]}}, {{0.16666666666666666`, 0.1}, {
      0.05555555555555555, 0.26666666666666666`}, {0.05555555555555555, 
      0.15555555555555556`}}]]}, 
   {RGBColor[0.97, 0.606, 0.081], 
    PolygonBox[
     NCache[{{Rational[1, 6], Rational[1, 10]}, {
       Rational[1, 18], Rational[7, 45]}, {
       Rational[-1, 18], Rational[1, 10]}}, {{0.16666666666666666`, 0.1}, {
      0.05555555555555555, 0.15555555555555556`}, {-0.05555555555555555, 
      0.1}}]]}, 
   {RGBColor[0.97, 0.606, 0.081], 
    PolygonBox[
     NCache[{{Rational[-1, 18], Rational[1, 10]}, {
       Rational[-1, 6], Rational[1, 10]}, {
       Rational[-1, 2], 0}}, {{-0.05555555555555555, 
       0.1}, {-0.16666666666666666`, 0.1}, {-0.5, 0}}]]}, 
   {RGBColor[0.91, 0.318, 0.243], 
    PolygonBox[
     NCache[{{Rational[-1, 18], Rational[1, 10]}, {
       Rational[-1, 18], Rational[7, 45]}, {
       Rational[-1, 6], Rational[1, 10]}}, {{-0.05555555555555555, 
      0.1}, {-0.05555555555555555, 
      0.15555555555555556`}, {-0.16666666666666666`, 0.1}}]]}, 
   {RGBColor[0.34398, 0.49112, 0.89936], 
    PolygonBox[
     NCache[{{Rational[-1, 18], Rational[1, 10]}, {
       Rational[1, 18], Rational[7, 45]}, {
       Rational[-1, 18], Rational[7, 45]}}, {{-0.05555555555555555, 0.1}, {
      0.05555555555555555, 0.15555555555555556`}, {-0.05555555555555555, 
      0.15555555555555556`}}]]}, 
   {RGBColor[0.34398, 0.49112, 0.89936], 
    PolygonBox[
     NCache[{{Rational[-1, 6], Rational[1, 10]}, {
       Rational[-1, 6], Rational[19, 90]}, {
       Rational[-1, 2], 0}}, {{-0.16666666666666666`, 
       0.1}, {-0.16666666666666666`, 0.2111111111111111}, {-0.5, 0}}]]}, 
   {RGBColor[0.97, 0.606, 0.081], 
    PolygonBox[
     NCache[{{Rational[-1, 6], Rational[1, 10]}, {
       Rational[-1, 18], Rational[7, 45]}, {
       Rational[-1, 6], Rational[19, 90]}}, {{-0.16666666666666666`, 
      0.1}, {-0.05555555555555555, 
      0.15555555555555556`}, {-0.16666666666666666`, 0.2111111111111111}}]]}, 
   {RGBColor[0.97, 0.606, 0.081], 
    PolygonBox[
     NCache[{{Rational[-1, 6], Rational[19, 90]}, {
       Rational[-1, 6], Rational[29, 90]}, {
       Rational[-1, 2], 0}}, {{-0.16666666666666666`, 
       0.2111111111111111}, {-0.16666666666666666`, 
       0.32222222222222224`}, {-0.5, 0}}]]}, 
   {RGBColor[0.34398, 0.49112, 0.89936], 
    PolygonBox[
     NCache[{{Rational[-1, 6], Rational[19, 90]}, {
       Rational[-1, 18], Rational[4, 15]}, {
       Rational[-1, 6], Rational[29, 90]}}, {{-0.16666666666666666`, 
      0.2111111111111111}, {-0.05555555555555555, 
      0.26666666666666666`}, {-0.16666666666666666`, 
      0.32222222222222224`}}]]}, 
   {RGBColor[0.97, 0.606, 0.081], 
    PolygonBox[
     NCache[{{Rational[-1, 6], Rational[19, 90]}, {
       Rational[-1, 18], Rational[19, 90]}, {
       Rational[-1, 18], Rational[4, 15]}}, {{-0.16666666666666666`, 
      0.2111111111111111}, {-0.05555555555555555, 
      0.2111111111111111}, {-0.05555555555555555, 0.26666666666666666`}}]]}, 
   {RGBColor[0.34398, 0.49112, 0.89936], 
    PolygonBox[
     NCache[{{Rational[-1, 6], Rational[19, 90]}, {
       Rational[-1, 18], Rational[7, 45]}, {
       Rational[-1, 18], Rational[19, 90]}}, {{-0.16666666666666666`, 
      0.2111111111111111}, {-0.05555555555555555, 
      0.15555555555555556`}, {-0.05555555555555555, 0.2111111111111111}}]]}, 
   {RGBColor[0.91, 0.318, 0.243], 
    PolygonBox[
     NCache[{{Rational[-1, 6], Rational[29, 90]}, {
       Rational[-1, 6], Rational[13, 30]}, {
       Rational[-1, 2], 0}}, {{-0.16666666666666666`, 
       0.32222222222222224`}, {-0.16666666666666666`, 
       0.43333333333333335`}, {-0.5, 0}}]]}, 
   {RGBColor[0.34398, 0.49112, 0.89936], 
    PolygonBox[
     NCache[{{Rational[-1, 6], Rational[29, 90]}, {
       Rational[1, 6], Rational[13, 30]}, {
       Rational[-1, 6], Rational[13, 30]}}, {{-0.16666666666666666`, 
      0.32222222222222224`}, {0.16666666666666666`, 
      0.43333333333333335`}, {-0.16666666666666666`, 
      0.43333333333333335`}}]]}, 
   {RGBColor[0.97, 0.606, 0.081], 
    PolygonBox[
     NCache[{{Rational[-1, 6], Rational[29, 90]}, {
       Rational[1, 6], Rational[29, 90]}, {
       Rational[1, 6], Rational[13, 30]}}, {{-0.16666666666666666`, 
      0.32222222222222224`}, {0.16666666666666666`, 0.32222222222222224`}, {
      0.16666666666666666`, 0.43333333333333335`}}]]}, 
   {RGBColor[0.91, 0.318, 0.243], 
    PolygonBox[
     NCache[{{Rational[-1, 6], Rational[29, 90]}, {
       Rational[-1, 18], Rational[4, 15]}, {
       Rational[1, 6], Rational[29, 90]}}, {{-0.16666666666666666`, 
      0.32222222222222224`}, {-0.05555555555555555, 0.26666666666666666`}, {
      0.16666666666666666`, 0.32222222222222224`}}]]}, 
   {RGBColor[0.97, 0.606, 0.081], 
    PolygonBox[
     NCache[{{Rational[1, 6], Rational[29, 90]}, {
       Rational[-1, 18], Rational[4, 15]}, {
       Rational[1, 18], Rational[4, 15]}}, {{0.16666666666666666`, 
      0.32222222222222224`}, {-0.05555555555555555, 0.26666666666666666`}, {
      0.05555555555555555, 0.26666666666666666`}}]]}, 
   {RGBColor[0.91, 0.318, 0.243], 
    PolygonBox[
     NCache[{{Rational[-1, 18], Rational[4, 15]}, {
       Rational[-1, 18], Rational[19, 90]}, {
       Rational[1, 18], Rational[4, 15]}}, {{-0.05555555555555555, 
      0.26666666666666666`}, {-0.05555555555555555, 0.2111111111111111}, {
      0.05555555555555555, 0.26666666666666666`}}]]}, 
   {RGBColor[0.34398, 0.49112, 0.89936], 
    PolygonBox[
     NCache[{{Rational[1, 18], Rational[4, 15]}, {
       Rational[-1, 18], Rational[19, 90]}, {
       Rational[1, 18], Rational[7, 45]}}, {{0.05555555555555555, 
      0.26666666666666666`}, {-0.05555555555555555, 0.2111111111111111}, {
      0.05555555555555555, 0.15555555555555556`}}]]}, 
   {RGBColor[0.97, 0.606, 0.081], 
    PolygonBox[
     NCache[{{Rational[-1, 18], Rational[19, 90]}, {
       Rational[-1, 18], Rational[7, 45]}, {
       Rational[1, 18], Rational[7, 45]}}, {{-0.05555555555555555, 
      0.2111111111111111}, {-0.05555555555555555, 0.15555555555555556`}, {
      0.05555555555555555, 0.15555555555555556`}}]]}}]], "Output",
 CellChangeTimes->{3.87727842908604*^9},
 CellLabel->
  "Out[191]=",ExpressionUUID->"24c7bf87-b294-45a6-9bfb-2c433f3f72f5"]
}, Open  ]],

Cell["\<\
I can compare the number of vertices n with the number of edges which should \
be 3n-6.\
\>", "Text",
 CellChangeTimes->{{3.8772784707334576`*^9, 
  3.877278486530712*^9}},ExpressionUUID->"45209bc5-3461-4f30-99ae-\
6a99236e5f06"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AllTrue", "[", 
  RowBox[{"triangulatedGraphsWithAtLastThreeVertices", ",", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"3", 
       RowBox[{"VertexCount", "[", 
        RowBox[{"GraphData", "[", "#", "]"}], "]"}]}], "-", "6"}], "==", 
     RowBox[{"EdgeCount", "[", 
      RowBox[{"GraphData", "[", "#", "]"}], "]"}]}], "&"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.877278507547649*^9, 3.877278538718193*^9}},
 CellLabel->
  "In[192]:=",ExpressionUUID->"d695de83-647f-48af-8c97-10c6317055ee"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.8772785396399593`*^9},
 CellLabel->
  "Out[192]=",ExpressionUUID->"9ff98f65-8867-4469-943f-09043c9140df"]
}, Open  ]],

Cell["This is true for all graphs.", "Text",
 CellChangeTimes->{{3.877278544276946*^9, 
  3.8772785481406064`*^9}},ExpressionUUID->"4ae28b62-d8a0-4e92-8784-\
84c1c90da898"]
}, Closed]],

Cell[CellGroupData[{

Cell["Exercise 47", "Section",
 CellChangeTimes->{{3.8772785840906515`*^9, 
  3.877278585765384*^9}},ExpressionUUID->"33369eb3-9cd0-47d2-a752-\
7cb124f348ce"],

Cell[TextData[{
 "Prove that the complete bigraph ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["K", 
    RowBox[{"3", ",", "3"}]], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "d8df3d91-9747-4d03-9c85-665ea2247da0"],
 " isn\[CloseCurlyQuote]t planar."
}], "Text",
 CellChangeTimes->{{3.8772785873481145`*^9, 
  3.8772786022172804`*^9}},ExpressionUUID->"a9a222df-7ecd-486a-a00b-\
ca074d19a8fd"],

Cell[TextData[{
 "This is related to the famous three utilities problem. It is well-known \
that you connect three houses to each other so each one has water, gas, and \
electricity. This means the complete bipartite graph ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["K", 
    RowBox[{"3", ",", "3"}]], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "06f0acf5-cef3-4041-9cea-47d390146ad7"],
 " is not planar and cannot be embedded in the plane. This graph can however, \
be embedded on a torus. The toroidal embedding of this graph could be used to \
create a solution to the three utilities on a torus or donut or coffee cup or \
tire or other object that topologically homeomorphic to a torus."
}], "Text",
 CellChangeTimes->{{3.877278606262924*^9, 
  3.877278739477131*^9}},ExpressionUUID->"f3d28020-c60e-4e1d-8eae-\
29fe5dd5869a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CompleteGraph", "[", 
  RowBox[{"{", 
   RowBox[{"3", ",", "3"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.8772787430921993`*^9, 3.877278745996645*^9}},
 CellLabel->"In[79]:=",ExpressionUUID->"c0065f40-8f93-4fc4-903c-0267079122bb"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{1, 2, 3, 4, 5, 6}, {Null, 
       SparseArray[
       Automatic, {6, 6}, 0, {
        1, {{0, 3, 6, 9, 12, 15, 18}, {{4}, {5}, {6}, {4}, {5}, {6}, {4}, {
          5}, {6}, {1}, {2}, {3}, {1}, {2}, {3}, {1}, {2}, {3}}}, 
         Pattern}]}, {
      GraphLayout -> {"MultipartiteLayout", "VertexPartition" -> {3, 3}}}]]}, 
    TagBox[
     GraphicsGroupBox[
      GraphicsComplexBox[{{0., -0.35901699437494755`}, {0., 0.}, {0., 
       0.35901699437494755`}, {1., -0.35901699437494755`}, {1., 0.}, {1., 
       0.35901699437494755`}}, {
        {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
         ArrowBox[{{1, 4}, {1, 5}, {1, 6}, {2, 4}, {2, 5}, {2, 6}, {3, 4}, {3,
           5}, {3, 6}}, 0.01273]}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         DiskBox[1, 0.01273], DiskBox[2, 0.01273], DiskBox[3, 0.01273], 
         DiskBox[4, 0.01273], DiskBox[5, 0.01273], DiskBox[6, 0.01273]}}]],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->"NetworkGraphics",
  FormatType->TraditionalForm,
  FrameTicks->None]], "Output",
 CellChangeTimes->{3.877278746449697*^9, 3.8772789626724997`*^9},
 CellLabel->"Out[79]=",ExpressionUUID->"dcafa96e-6936-4a6c-920c-eec84694bad6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PlanarGraphQ", "[", 
  RowBox[{"CompleteGraph", "[", 
   RowBox[{"{", 
    RowBox[{"3", ",", "3"}], "}"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8772787475590277`*^9, 3.87727875023392*^9}},
 CellLabel->
  "In[194]:=",ExpressionUUID->"50d5083b-5788-4dee-ad8b-6c6b2a059989"],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{3.877278750530763*^9},
 CellLabel->
  "Out[194]=",ExpressionUUID->"fa2442f8-08b6-4100-ab76-be112cbb2ee2"]
}, Open  ]],

Cell["Find the canonical graph:", "Text",
 CellChangeTimes->{{3.8772788379042172`*^9, 
  3.877278840915589*^9}},ExpressionUUID->"1c107692-04c0-46cf-8dd1-\
d5ee81d75a06"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CanonicalGraph", "[", 
  RowBox[{"CompleteGraph", "[", 
   RowBox[{"{", 
    RowBox[{"3", ",", "3"}], "}"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.877278828932147*^9, 3.8772788343887463`*^9}},
 CellLabel->
  "In[195]:=",ExpressionUUID->"9eaf23ec-eca2-4fe2-bc53-736a0ce3d511"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{1, 2, 3, 4, 5, 6}, {Null, 
       SparseArray[
       Automatic, {6, 6}, 0, {
        1, {{0, 3, 6, 9, 12, 15, 18}, {{3}, {4}, {5}, {3}, {4}, {5}, {1}, {
          2}, {6}, {1}, {2}, {6}, {1}, {2}, {6}, {3}, {4}, {5}}}, 
         Pattern}]}]]}, 
    TagBox[
     GraphicsGroupBox[
      GraphicsComplexBox[{{0.7838865497975844, 0.7305948539476249}, {
       0.6766515978658769, 0.}, {0.0013338785384966467`, 
       1.0711569032415549`}, {1.5362714341317965`, 0.7293164161893542}, {0., 
       0.39203047432578986`}, {0.6792317594364689, 1.462177416117535}}, {
        {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
         ArrowBox[{{1, 3}, {1, 4}, {1, 5}, {2, 3}, {2, 4}, {2, 5}, {3, 6}, {4,
           6}, {5, 6}}, 0.018734289183135328`]}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         DiskBox[1, 0.018734289183135328], DiskBox[2, 0.018734289183135328], 
         DiskBox[3, 0.018734289183135328], DiskBox[4, 0.018734289183135328], 
         DiskBox[5, 0.018734289183135328], 
         DiskBox[6, 0.018734289183135328]}}]],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None]], "Output",
 CellChangeTimes->{3.8772788348729687`*^9},
 CellLabel->
  "Out[195]=",ExpressionUUID->"dce7fa63-1880-466b-a89e-bb0696d194d2"]
}, Open  ]],

Cell["Find the name of the graph data entry:", "Text",
 CellChangeTimes->{{3.8772790115716066`*^9, 
  3.8772790167042613`*^9}},ExpressionUUID->"48a8488d-7969-4ab0-af14-\
6b1f65c70793"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GraphData", "[", 
  RowBox[{"{", 
   RowBox[{"\"\<CompleteBipartite\>\"", ",", " ", 
    RowBox[{"{", 
     RowBox[{"3", ",", " ", "3"}], "}"}]}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.87727898201678*^9, 3.8772789917533712`*^9}},
 CellLabel->"In[80]:=",ExpressionUUID->"ae4e1d27-f231-4541-ba2b-e96bdeb7ba2b"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{1, 2, 3, 4, 5, 6}, {Null, 
       SparseArray[
       Automatic, {6, 6}, 0, {
        1, {{0, 3, 6, 9, 12, 15, 18}, {{4}, {5}, {6}, {4}, {5}, {6}, {4}, {
          5}, {6}, {1}, {2}, {3}, {1}, {2}, {3}, {1}, {2}, {3}}}, 
         Pattern}]}, {
      VertexCoordinates -> {{1, -1}, {1, 0}, {1, 1}, {2, -1}, {2, 0}, {2, 
        1}}}]]}, 
    TagBox[
     GraphicsGroupBox[
      GraphicsComplexBox[{{1., -1.}, {1., 0.}, {1., 1.}, {2., -1.}, {2., 
       0.}, {2., 1.}}, {
        {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
         ArrowBox[{{1, 4}, {1, 5}, {1, 6}, {2, 4}, {2, 5}, {2, 6}, {3, 4}, {3,
           5}, {3, 6}}, 0.02261146496815286]}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         DiskBox[1, 0.02261146496815286], DiskBox[2, 0.02261146496815286], 
         DiskBox[3, 0.02261146496815286], DiskBox[4, 0.02261146496815286], 
         DiskBox[5, 0.02261146496815286], DiskBox[6, 0.02261146496815286]}}]],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->"NetworkGraphics",
  FormatType->TraditionalForm,
  FrameTicks->None]], "Output",
 CellChangeTimes->{3.8772789924877357`*^9},
 CellLabel->"Out[80]=",ExpressionUUID->"ad1d7570-00f2-41b0-893a-03c67e361a3c"]
}, Open  ]],

Cell["Verify the graphs are isomorphic:", "Text",
 CellChangeTimes->{{3.8772790200639353`*^9, 
  3.877279025595178*^9}},ExpressionUUID->"44228eec-957e-4ec4-a610-\
7594b28b2021"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"IsomorphicGraphQ", "[", 
  RowBox[{
   RowBox[{"GraphData", "[", 
    RowBox[{"{", 
     RowBox[{"\"\<CompleteBipartite\>\"", ",", " ", 
      RowBox[{"{", 
       RowBox[{"3", ",", " ", "3"}], "}"}]}], "}"}], "]"}], ",", 
   RowBox[{"CompleteGraph", "[", 
    RowBox[{"{", 
     RowBox[{"3", ",", "3"}], "}"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8772789959784718`*^9, 3.8772790026653805`*^9}},
 CellLabel->"In[81]:=",ExpressionUUID->"7f97ce75-5056-4771-ae3b-943c9572f108"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.877279002915357*^9},
 CellLabel->"Out[81]=",ExpressionUUID->"673502ea-03b3-4b78-a39e-b70217bf5adc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GraphData", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\"\<CompleteBipartite\>\"", ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "3"}], "}"}]}], "}"}], ",", "\"\<Planar\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8772790288814898`*^9, 3.87727904994549*^9}},
 CellLabel->"In[83]:=",ExpressionUUID->"d71a1fba-1209-40ff-94a2-cde151c2351d"],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{{3.8772790452718287`*^9, 3.8772790508673735`*^9}},
 CellLabel->"Out[83]=",ExpressionUUID->"b540e48b-5f41-452e-9d08-cd34cc92c0ed"]
}, Open  ]],

Cell["\<\
The property apices is the list of vertices whose removal renders the graph \
planar:\
\>", "Text",
 CellChangeTimes->{{3.8772791064280567`*^9, 
  3.877279118849392*^9}},ExpressionUUID->"e9a4c995-5048-44d5-a9de-\
104acb0e7de4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GraphData", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\"\<CompleteBipartite\>\"", ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "3"}], "}"}]}], "}"}], ",", "\"\<Apices\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8772790288814898`*^9, 3.87727904994549*^9}, {
  3.877279120036894*^9, 3.8772791233262067`*^9}},
 CellLabel->"In[84]:=",ExpressionUUID->"12d474c3-9ba0-446e-a9b3-8afba3b1444a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.8772791236386223`*^9},
 CellLabel->"Out[84]=",ExpressionUUID->"70d66686-13f0-4aa3-8035-42c817b0029b"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Exercise 48", "Section",
 CellChangeTimes->{{3.8772791425286226`*^9, 3.8772791461379156`*^9}, {
  3.8772851941076603`*^9, 
  3.877285212640236*^9}},ExpressionUUID->"377503dc-bb07-46f9-a0ab-\
12dbe0c29f66"],

Cell["\<\
Complete the proof of Theorem B by showing that the stated procedure never \
the same color to two adjacent vertices.\
\>", "Text",
 CellChangeTimes->{{3.8772792251915474`*^9, 
  3.8772792447037334`*^9}},ExpressionUUID->"47d420ef-5a8d-4348-bf4a-\
36c88b991660"],

Cell["\<\
Theorem B: A graph is bipartite if and only if it contains no cycle of odd \
length.\
\>", "Text",
 CellChangeTimes->{{3.8772791754640355`*^9, 
  3.877279192930375*^9}},ExpressionUUID->"215a8f8d-aea0-4776-8145-\
0c72bf939508"],

Cell[TextData[{
 "Conversely, if a graph contains no odd cycles we can color its vertices \
with the two colors {0,1} by carrying out the following procedure: Begin with \
all vertices uncolored. If all neighbors of colored vertices are already \
colored, choose an uncolored vertex ",
 Cell[BoxData[
  FormBox["w", TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "ed4426f5-f2da-4c98-b748-cc6fb058e16e"],
 ", and color it 0. Otherwise choose a colored vertex ",
 Cell[BoxData[
  FormBox["u", TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "d749af6c-3b64-4208-bc1d-74fda51bf056"],
 " that has an uncolored neighbor ",
 Cell[BoxData[
  FormBox["v", TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "77a8a680-16b3-48e6-aafb-2e8b4476a262"],
 "; assign to ",
 Cell[BoxData[
  FormBox["v", TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "b6e509e9-a295-4b99-9997-d4e284103f55"],
 " the opposite color. Exercise 48 proves that a valid 2-coloring is \
eventually obtained."
}], "Text",
 CellChangeTimes->{{3.8772791964568996`*^9, 3.8772792084779935`*^9}, {
  3.877279294532379*^9, 
  3.877279386753459*^9}},ExpressionUUID->"5b64afe6-0e78-4dbd-be66-\
7d091315dad9"],

Cell["I will use examples to demonstrate a case for this.", "Text",
 CellChangeTimes->{{3.877279247313116*^9, 
  3.877279256709482*^9}},ExpressionUUID->"cafe51bf-aa24-4b2a-8e73-\
4cd0246e721e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GraphData", "[", "\"\<Bipartite\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.8772793911287394`*^9, 3.8772794161939983`*^9}},
 CellLabel->"In[86]:=",ExpressionUUID->"93ca2f3d-00f8-4220-b918-d4db072ee393"],

Cell[BoxData[
 TemplateBox[<|"shortenedBoxes" -> TagBox[
     RowBox[{"{", 
       RowBox[{
         RowBox[{"{", 
           RowBox[{"6", ",", "13"}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"6", ",", "24"}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"6", ",", "32"}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"6", ",", "99"}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"7", ",", "15"}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"7", ",", "17"}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"7", ",", "22"}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"7", ",", "26"}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"7", ",", "32"}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"7", ",", "34"}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"7", ",", "40"}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"7", ",", "46"}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"7", ",", "48"}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"7", ",", "50"}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"7", ",", "54"}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"7", ",", "63"}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"7", ",", "68"}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"7", ",", "77"}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"7", ",", "93"}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"7", ",", "109"}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"7", ",", "131"}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"7", ",", "163"}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"7", ",", "177"}], "}"}], ",", 
         TemplateBox[{"3103"}, "OutputSizeLimit`Skeleton"], ",", 
         RowBox[{"{", 
           RowBox[{"\"ZeroTwoBipartite\"", ",", 
             RowBox[{"{", 
               RowBox[{"7", ",", "17"}], "}"}]}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"\"ZeroTwoBipartite\"", ",", 
             RowBox[{"{", 
               RowBox[{"7", ",", "18"}], "}"}]}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"\"ZeroTwoBipartite\"", ",", 
             RowBox[{"{", 
               RowBox[{"7", ",", "19"}], "}"}]}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"\"ZeroTwoBipartite\"", ",", 
             RowBox[{"{", 
               RowBox[{"7", ",", "20"}], "}"}]}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"\"ZeroTwoBipartite\"", ",", 
             RowBox[{"{", 
               RowBox[{"7", ",", "21"}], "}"}]}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"\"ZeroTwoBipartite\"", ",", 
             RowBox[{"{", 
               RowBox[{"7", ",", "22"}], "}"}]}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"\"ZeroTwoBipartite\"", ",", 
             RowBox[{"{", 
               RowBox[{"7", ",", "23"}], "}"}]}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"\"ZeroTwoBipartite\"", ",", 
             RowBox[{"{", 
               RowBox[{"7", ",", "24"}], "}"}]}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"\"ZeroTwoBipartite\"", ",", 
             RowBox[{"{", 
               RowBox[{"7", ",", "25"}], "}"}]}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"\"ZeroTwoBipartite\"", ",", 
             RowBox[{"{", 
               RowBox[{"7", ",", "26"}], "}"}]}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"\"ZeroTwoBipartite\"", ",", 
             RowBox[{"{", 
               RowBox[{"7", ",", "27"}], "}"}]}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"\"ZeroTwoBipartite\"", ",", 
             RowBox[{"{", 
               RowBox[{"7", ",", "28"}], "}"}]}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"\"ZeroTwoBipartite\"", ",", 
             RowBox[{"{", 
               RowBox[{"7", ",", "29"}], "}"}]}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"\"ZeroTwoBipartite\"", ",", 
             RowBox[{"{", 
               RowBox[{"7", ",", "30"}], "}"}]}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"\"ZeroTwoBipartite\"", ",", 
             RowBox[{"{", 
               RowBox[{"7", ",", "31"}], "}"}]}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"\"ZeroTwoBipartite\"", ",", 
             RowBox[{"{", 
               RowBox[{"7", ",", "32"}], "}"}]}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"\"ZeroTwoBipartite\"", ",", 
             RowBox[{"{", 
               RowBox[{"7", ",", "33"}], "}"}]}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"\"ZeroTwoBipartite\"", ",", 
             RowBox[{"{", 
               RowBox[{"7", ",", "34"}], "}"}]}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"\"ZeroTwoBipartite\"", ",", 
             RowBox[{"{", 
               RowBox[{"7", ",", "35"}], "}"}]}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"\"ZeroTwoBipartite\"", ",", 
             RowBox[{"{", 
               RowBox[{"7", ",", "36"}], "}"}]}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"\"ZeroTwoBipartite\"", ",", 
             RowBox[{"{", 
               RowBox[{"7", ",", "37"}], "}"}]}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"\"ZeroTwoBipartite\"", ",", 
             RowBox[{"{", 
               RowBox[{"7", ",", "38"}], "}"}]}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"\"ZeroTwoBipartite\"", ",", 
             RowBox[{"{", 
               RowBox[{"7", ",", "39"}], "}"}]}], "}"}]}], "}"}], 
     Short[#, 8]& ], "line" -> 86, "sessionID" -> 16937289918179914857, 
   "byteCount" -> 655424, "size" -> 8, "stored" -> False, "expr" -> 
   Missing["NotAvailable", "NewSessionID"], "wrap" -> OutputSizeLimit`Defer, 
   "version" -> 1|>,
  "OutputSizeLimitTemplate"]], "Output",
 CellChangeTimes->{{3.8772794044921036`*^9, 3.877279416803255*^9}},
 CellLabel->"Out[86]=",ExpressionUUID->"2e614366-50ec-467d-81a0-81189b6c4417"]
}, Open  ]],

Cell["\<\
I will verify that all bipartite graphs have a chromatic number of two.\
\>", "Text",
 CellChangeTimes->{{3.877279458273652*^9, 
  3.877279472800804*^9}},ExpressionUUID->"03c63fde-dc74-4443-9a24-\
9048c1976a1f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AllTrue", "[", 
  RowBox[{
   RowBox[{"GraphData", "[", "\"\<Bipartite\>\"", "]"}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"GraphData", "[", 
      RowBox[{"#", ",", "\"\<ChromaticNumber\>\""}], "]"}], "==", "2"}], 
    "&"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.877279431312954*^9, 3.877279446877643*^9}},
 CellLabel->
  "In[196]:=",ExpressionUUID->"14dd17ba-a133-45d6-b7a0-fe3396b23626"],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{3.877279472066431*^9, 3.877279530601957*^9},
 CellLabel->
  "Out[196]=",ExpressionUUID->"2f790999-b6e4-4bcd-a70c-8254c63902ed"]
}, Open  ]],

Cell["\<\
I can color the vertices of a random sample of bipartite graphs:\
\>", "Text",
 CellChangeTimes->{{3.877284918355878*^9, 
  3.8772849388896923`*^9}},ExpressionUUID->"45f81a84-f31e-4002-b38e-\
1dafd6c5f705"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RandomSample", "[", 
  RowBox[{
   RowBox[{"GraphData", "[", "\"\<Bipartite\>\"", "]"}], ",", "30"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8772849408115635`*^9, 3.8772849485203056`*^9}},
 CellLabel->
  "In[105]:=",ExpressionUUID->"28e363e5-1324-4a6f-b605-7af679803b20"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Foster674A\"\>", ",", 
   RowBox[{"{", 
    RowBox[{"\<\"KayakPaddle\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "8", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Antelope\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"8", ",", "8"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Tree\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"12", ",", "295"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Giraffe\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"8", ",", "10"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Gear\"\>", ",", "16"}], "}"}], ",", "\<\"Foster554A\"\>", 
   ",", "\<\"3P3\"\>", ",", 
   RowBox[{"{", 
    RowBox[{"\<\"FibonacciCube\"\>", ",", "13"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Tree\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"12", ",", "164"}], "}"}]}], "}"}], ",", "\<\"2P2+K1\"\>", ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Tree\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"11", ",", "84"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Path\"\>", ",", "10"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CompleteBipartite\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"6", ",", "20"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CubicTransitive\"\>", ",", "68"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CompleteBipartite\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"8", ",", "9"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"HexagonalGrid\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "3"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Firecracker\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"7", ",", "3"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Tree\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"11", ",", "187"}], "}"}]}], "}"}], ",", "\<\"Foster936A\"\>", 
   ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CompleteBipartite\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"13", ",", "19"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"MongolianTent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "5"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CompleteBipartite\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"9", ",", "20"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"EdgeTransitive\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"18", ",", "3"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Tree\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"11", ",", "58"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Camel\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"6", ",", "10"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"GeneralizedPetersen\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"24", ",", "11"}], "}"}]}], "}"}], ",", "\<\"Foster194A\"\>", 
   ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Tree\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "64"}], "}"}]}], "}"}], ",", "\<\"Foster880A\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.8772849491139593`*^9},
 CellLabel->
  "Out[105]=",ExpressionUUID->"930053cf-f9a3-4be7-8086-534f4f34397d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PersistResourceFunction", "[", "\"\<ColorGraphVertices\>\"", 
  "]"}]], "Input",
 CellChangeTimes->{{3.877285007211071*^9, 3.8772850174950595`*^9}},
 CellLabel->
  "In[207]:=",ExpressionUUID->"d1c2c8da-1d85-4d18-9a2a-b55111cd6529"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["Success",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            FrameBox[
             StyleBox["\"\[Checkmark]\"", 
              Directive[
               RGBColor[
               0.3607843137254902, 0.596078431372549, 0.3803921568627451], 
               25], StripOnInput -> False], ContentPadding -> False, 
             FrameStyle -> None, FrameMargins -> {{0, 0}, {0, 0}}, 
             StripOnInput -> False], 
            GridBox[{{
               RowBox[{
                 TagBox[
                  TemplateBox[{"\"Message\"", "\": \""}, "RowDefault"], 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox[
                 "\"Successfully stored ColorGraphVertices as an \
initialization symbol.\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                  
                  TemplateBox[{"\"PersistenceLocation\"", "\": \""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  InterpretationBox[
                   RowBox[{
                    TagBox["PersistenceLocation", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GraphicsBox[{
                    Thickness[0.04081632653061224], {
                    FaceForm[{
                    RGBColor[0.749, 0.749, 0.749], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGZigAFlBwht7oCLr7ihKGNir7nDlhNl++ZLKUHF
LaC0Ihr/hz2Mv6FksgRL2Dt7VPkH9jDzYHxU+2D8D/Yw/oHvwY+Xzr5jj2oe
DPxA5TfAzGFgiEqxvu/Pa+GAKm/hADMPxkexD843dYDxIe41dUA1z8wB1T4o
n0EVzvcx73RMeKqMJq/scN+/d3peEYIP8z8AUyhEVw==
                    "]]}, {
                    RGBColor[1., 1., 1.], 
                    Opacity[1.], 
                    CapForm["Round"], 
                    JoinForm["Round"], 
                    
                    JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIFIGYC4pASlen/AwwcGMBAxAHM/4Dg7zOYqSWx1dCh
1t40bpeniMP9B9yTVzYZOlhuOVG2T17KIWz+6rU34g0dKl+qGXLoyDkcv7O1
pUbA0OHF75UfL/UqOBx1Wpt576O+gwpb41RnbiWHP6ffnTx8SNchSSDCckuH
skOeScN2BydtB441MlEp1ipw/qdLvkkCEmoOZkBu0yJtiP7TGg6SasGsi4V0
Hc5/D3689LaGw6L0za+KTXUdWl8H7pBr1XXYd1BcLdhV10EeJDBP30Fo6d6D
4mm6UP8YOVx0ufHhC5cGnM/k28Lrv14Jzg8z0FopfEEJrr+oq+/Jp/tKcPPB
7mdShtv/oBCooEgF7r5lQOvULqvA3Q/jw/wHdn+QEtz/geunpHYoK8DDh69w
TfftF9Lw8Hs3dRNP4RopePiuSQgJUleQgoe/V8AfieJwSXj83BL65Hg+TQYe
f2D+MznU+EWKbwBI8b86
                    "], CurveClosed -> {1}]}}, AspectRatio -> Automatic, 
                    ImageSize -> {25., 25.}, 
                    PlotRange -> {{0., 24.5}, {0., 24.5}}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Local\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GraphicsBox[{
                    Thickness[0.04081632653061224], {
                    FaceForm[{
                    RGBColor[0.749, 0.749, 0.749], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGZigAFlBwht7oCLr7ihKGNir7nDlhNl++ZLKUHF
LaC0Ihr/hz2Mv6FksgRL2Dt7VPkH9jDzYHxU+2D8D/Yw/oHvwY+Xzr5jj2oe
DPxA5TfAzGFgiEqxvu/Pa+GAKm/hADMPxkexD843dYDxIe41dUA1z8wB1T4o
n0EVzvcx73RMeKqMJq/scN+/d3peEYIP8z8AUyhEVw==
                    "]]}, {
                    RGBColor[1., 1., 1.], 
                    Opacity[1.], 
                    CapForm["Round"], 
                    JoinForm["Round"], 
                    
                    JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIFIGYC4pASlen/AwwcGMBAxAHM/4Dg7zOYqSWx1dCh
1t40bpeniMP9B9yTVzYZOlhuOVG2T17KIWz+6rU34g0dKl+qGXLoyDkcv7O1
pUbA0OHF75UfL/UqOBx1Wpt576O+gwpb41RnbiWHP6ffnTx8SNchSSDCckuH
skOeScN2BydtB441MlEp1ipw/qdLvkkCEmoOZkBu0yJtiP7TGg6SasGsi4V0
Hc5/D3689LaGw6L0za+KTXUdWl8H7pBr1XXYd1BcLdhV10EeJDBP30Fo6d6D
4mm6UP8YOVx0ufHhC5cGnM/k28Lrv14Jzg8z0FopfEEJrr+oq+/Jp/tKcPPB
7mdShtv/oBCooEgF7r5lQOvULqvA3Q/jw/wHdn+QEtz/geunpHYoK8DDh69w
TfftF9Lw8Hs3dRNP4RopePiuSQgJUleQgoe/V8AfieJwSXj83BL65Hg+TQYe
f2D+MznU+EWKbwBI8b86
                    "], CurveClosed -> {1}]}}, AspectRatio -> Automatic, 
                    ImageSize -> {25., 25.}, 
                    PlotRange -> {{0., 24.5}, {0., 24.5}}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Local\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Base: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    "\"file:///C:/Users/Hannah/AppData/Roaming/Wolfram/\
Objects/Persistence\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                   PersistenceLocation[
                   "Local", 
                    "file:///C:/Users/Hannah/AppData/Roaming/Wolfram/Objects/\
Persistence", 
                    Hold[Persistence`Data`a16937227258867162981$7]], 
                   Selectable -> False, Editable -> False, SelectWithContents -> 
                   True], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            FrameBox[
             StyleBox["\"\[Checkmark]\"", 
              Directive[
               RGBColor[
               0.3607843137254902, 0.596078431372549, 0.3803921568627451], 
               25], StripOnInput -> False], ContentPadding -> False, 
             FrameStyle -> None, FrameMargins -> {{0, 0}, {0, 0}}, 
             StripOnInput -> False], 
            GridBox[{{
               RowBox[{
                 TagBox[
                  TemplateBox[{"\"Message\"", "\": \""}, "RowDefault"], 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox[
                 "\"Successfully stored ColorGraphVertices as an \
initialization symbol.\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                  
                  TemplateBox[{"\"PersistenceLocation\"", "\": \""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  InterpretationBox[
                   RowBox[{
                    TagBox["PersistenceLocation", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GraphicsBox[{
                    Thickness[0.04081632653061224], {
                    FaceForm[{
                    RGBColor[0.749, 0.749, 0.749], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGZigAFlBwht7oCLr7ihKGNir7nDlhNl++ZLKUHF
LaC0Ihr/hz2Mv6FksgRL2Dt7VPkH9jDzYHxU+2D8D/Yw/oHvwY+Xzr5jj2oe
DPxA5TfAzGFgiEqxvu/Pa+GAKm/hADMPxkexD843dYDxIe41dUA1z8wB1T4o
n0EVzvcx73RMeKqMJq/scN+/d3peEYIP8z8AUyhEVw==
                    "]]}, {
                    RGBColor[1., 1., 1.], 
                    Opacity[1.], 
                    CapForm["Round"], 
                    JoinForm["Round"], 
                    
                    JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIFIGYC4pASlen/AwwcGMBAxAHM/4Dg7zOYqSWx1dCh
1t40bpeniMP9B9yTVzYZOlhuOVG2T17KIWz+6rU34g0dKl+qGXLoyDkcv7O1
pUbA0OHF75UfL/UqOBx1Wpt576O+gwpb41RnbiWHP6ffnTx8SNchSSDCckuH
skOeScN2BydtB441MlEp1ipw/qdLvkkCEmoOZkBu0yJtiP7TGg6SasGsi4V0
Hc5/D3689LaGw6L0za+KTXUdWl8H7pBr1XXYd1BcLdhV10EeJDBP30Fo6d6D
4mm6UP8YOVx0ufHhC5cGnM/k28Lrv14Jzg8z0FopfEEJrr+oq+/Jp/tKcPPB
7mdShtv/oBCooEgF7r5lQOvULqvA3Q/jw/wHdn+QEtz/geunpHYoK8DDh69w
TfftF9Lw8Hs3dRNP4RopePiuSQgJUleQgoe/V8AfieJwSXj83BL65Hg+TQYe
f2D+MznU+EWKbwBI8b86
                    "], CurveClosed -> {1}]}}, AspectRatio -> Automatic, 
                    ImageSize -> {25., 25.}, 
                    PlotRange -> {{0., 24.5}, {0., 24.5}}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Local\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GraphicsBox[{
                    Thickness[0.04081632653061224], {
                    FaceForm[{
                    RGBColor[0.749, 0.749, 0.749], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGZigAFlBwht7oCLr7ihKGNir7nDlhNl++ZLKUHF
LaC0Ihr/hz2Mv6FksgRL2Dt7VPkH9jDzYHxU+2D8D/Yw/oHvwY+Xzr5jj2oe
DPxA5TfAzGFgiEqxvu/Pa+GAKm/hADMPxkexD843dYDxIe41dUA1z8wB1T4o
n0EVzvcx73RMeKqMJq/scN+/d3peEYIP8z8AUyhEVw==
                    "]]}, {
                    RGBColor[1., 1., 1.], 
                    Opacity[1.], 
                    CapForm["Round"], 
                    JoinForm["Round"], 
                    
                    JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIFIGYC4pASlen/AwwcGMBAxAHM/4Dg7zOYqSWx1dCh
1t40bpeniMP9B9yTVzYZOlhuOVG2T17KIWz+6rU34g0dKl+qGXLoyDkcv7O1
pUbA0OHF75UfL/UqOBx1Wpt576O+gwpb41RnbiWHP6ffnTx8SNchSSDCckuH
skOeScN2BydtB441MlEp1ipw/qdLvkkCEmoOZkBu0yJtiP7TGg6SasGsi4V0
Hc5/D3689LaGw6L0za+KTXUdWl8H7pBr1XXYd1BcLdhV10EeJDBP30Fo6d6D
4mm6UP8YOVx0ufHhC5cGnM/k28Lrv14Jzg8z0FopfEEJrr+oq+/Jp/tKcPPB
7mdShtv/oBCooEgF7r5lQOvULqvA3Q/jw/wHdn+QEtz/geunpHYoK8DDh69w
TfftF9Lw8Hs3dRNP4RopePiuSQgJUleQgoe/V8AfieJwSXj83BL65Hg+TQYe
f2D+MznU+EWKbwBI8b86
                    "], CurveClosed -> {1}]}}, AspectRatio -> Automatic, 
                    ImageSize -> {25., 25.}, 
                    PlotRange -> {{0., 24.5}, {0., 24.5}}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Local\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Base: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    "\"file:///C:/Users/Hannah/AppData/Roaming/Wolfram/\
Objects/Persistence\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                   PersistenceLocation[
                   "Local", 
                    "file:///C:/Users/Hannah/AppData/Roaming/Wolfram/Objects/\
Persistence", 
                    Hold[Persistence`Data`a16937227258867162981$7]], 
                   Selectable -> False, Editable -> False, SelectWithContents -> 
                   True], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                  TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox["\"InstalledResourceFunction\"", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  Success[
  "InstalledResourceFunction", <|
   "MessageTemplate" :> 
    "Successfully stored `symName` as an initialization symbol.", 
    "MessageParameters" -> <|"symName" -> "ColorGraphVertices"|>, 
    "PersistenceLocation" -> 
    PersistenceLocation[
     "Local", "file:///C:/Users/Hannah/AppData/Roaming/Wolfram/Objects/\
Persistence", 
      Hold[Persistence`Data`a16937227258867162981$7]]|>],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.8772850215985017`*^9, 3.877285023113654*^9}},
 CellLabel->
  "Out[207]=",ExpressionUUID->"6e94e1de-68e6-44dc-b301-3a237a6c4634"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Select", "[", "GraphQ", "]"}], "[", 
  RowBox[{
   RowBox[{
    RowBox[{"ColorGraphVertices", "[", 
     RowBox[{"GraphData", "[", "#", "]"}], "]"}], "&"}], "/@", 
   RowBox[{"RandomSample", "[", 
    RowBox[{
     RowBox[{"GraphData", "[", "\"\<Bipartite\>\"", "]"}], ",", "30"}], 
    "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8772849534841337`*^9, 3.8772849614692492`*^9}, {
  3.877285039371483*^9, 3.877285045915614*^9}},
 CellLabel->
  "In[209]:=",ExpressionUUID->"aeadbf1d-9541-45aa-821c-6a669d2a69f8"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4, 5, 6, 7}, {Null, 
         SparseArray[
         Automatic, {7, 7}, 0, {
          1, {{0, 2, 4, 6, 6, 6, 9, 12}, {{6}, {7}, {6}, {7}, {6}, {7}, {1}, {
            2}, {3}, {1}, {2}, {3}}}, Pattern}]}, {
        VertexStyle -> {
          6 -> RGBColor[0.34398, 0.49112, 0.89936], 1 -> 
           RGBColor[0.97, 0.606, 0.081], 2 -> RGBColor[0.97, 0.606, 0.081], 3 -> 
           RGBColor[0.97, 0.606, 0.081], 4 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 7 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 5 -> 
           RGBColor[0.34398, 0.49112, 0.89936]}, 
         VertexCoordinates -> {{2., -1.}, {2., 0}, {2., 1.}, {1., -1.2}, {
           1.5, -1.2}, {1., -0.5}, {1., 0.5}}}]]}, 
      TagBox[
       GraphicsGroupBox[
        GraphicsComplexBox[{{2., -1.}, {2., 0.}, {2., 1.}, {1., -1.2}, {
         1.5, -1.2}, {1., -0.5}, {1., 0.5}}, {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
           ArrowBox[{{1, 6}, {1, 7}, {2, 6}, {2, 7}, {3, 6}, {3, 7}}, 
            0.024213836477987416`]}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[1, 0.024213836477987416]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[2, 0.024213836477987416]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[3, 0.024213836477987416]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[4, 0.024213836477987416]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[5, 0.024213836477987416]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[6, 0.024213836477987416]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[7, 0.024213836477987416]}}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    FormatType->TraditionalForm,
    FrameTicks->None], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 
        19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31}, {Null, 
         SparseArray[
         Automatic, {31, 31}, 0, {
          1, {{0, 2, 3, 4, 5, 9, 11, 12, 13, 14, 18, 20, 21, 22, 23, 27, 29, 
            30, 31, 32, 36, 38, 39, 40, 41, 45, 47, 48, 49, 50, 54, 60}, {{
            5}, {31}, {5}, {5}, {5}, {1}, {2}, {3}, {4}, {10}, {31}, {10}, {
            10}, {10}, {6}, {7}, {8}, {9}, {15}, {31}, {15}, {15}, {15}, {
            11}, {12}, {13}, {14}, {20}, {31}, {20}, {20}, {20}, {16}, {17}, {
            18}, {19}, {25}, {31}, {25}, {25}, {25}, {21}, {22}, {23}, {24}, {
            30}, {31}, {30}, {30}, {30}, {26}, {27}, {28}, {29}, {1}, {6}, {
            11}, {16}, {21}, {26}}}, Pattern}]}, {
        VertexStyle -> {
          18 -> RGBColor[0.97, 0.606, 0.081], 6 -> 
           RGBColor[0.97, 0.606, 0.081], 23 -> RGBColor[0.97, 0.606, 0.081], 
           22 -> RGBColor[0.97, 0.606, 0.081], 31 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 15 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 1 -> 
           RGBColor[0.97, 0.606, 0.081], 27 -> RGBColor[0.97, 0.606, 0.081], 
           20 -> RGBColor[0.34398, 0.49112, 0.89936], 24 -> 
           RGBColor[0.97, 0.606, 0.081], 9 -> RGBColor[0.97, 0.606, 0.081], 
           29 -> RGBColor[0.97, 0.606, 0.081], 13 -> 
           RGBColor[0.97, 0.606, 0.081], 2 -> RGBColor[0.97, 0.606, 0.081], 8 -> 
           RGBColor[0.97, 0.606, 0.081], 25 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 21 -> 
           RGBColor[0.97, 0.606, 0.081], 3 -> RGBColor[0.97, 0.606, 0.081], 
           30 -> RGBColor[0.34398, 0.49112, 0.89936], 4 -> 
           RGBColor[0.97, 0.606, 0.081], 11 -> RGBColor[0.97, 0.606, 0.081], 
           26 -> RGBColor[0.97, 0.606, 0.081], 10 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 19 -> 
           RGBColor[0.97, 0.606, 0.081], 7 -> RGBColor[0.97, 0.606, 0.081], 
           16 -> RGBColor[0.97, 0.606, 0.081], 17 -> 
           RGBColor[0.97, 0.606, 0.081], 28 -> RGBColor[0.97, 0.606, 0.081], 
           14 -> RGBColor[0.97, 0.606, 0.081], 12 -> 
           RGBColor[0.97, 0.606, 0.081], 5 -> 
           RGBColor[0.34398, 0.49112, 0.89936]}, 
         VertexCoordinates -> CompressedData["
1:eJxTTMoPSmViYGCQB2IQDQEP7BmwApg4jP6ARqPLw2gWBzSDHLDLw8zhwCEP
4wuhmSeAQx5mnggOeRhfCs08CRzyMPNkcMjD+Ipo5ingkIeZp4RDHsZXRTNP
BYc8zDw1HPIwvhiUz3EAADXYK00=
          "]}]]}, 
      TagBox[GraphicsGroupBox[GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGCQB2IQDQEP7BmwApg4jP6ARqPLw2gWBzSDHLDLw8zhwCEP
4wuhmSeAQx5mnggOeRhfCs08CRzyMPNkcMjD+Ipo5ingkIeZp4RDHsZXRTNP
BYc8zDw1HPIwvhiUz3EAADXYK00=
         "], {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
           ArrowBox[{{1, 5}, {1, 31}, {2, 5}, {3, 5}, {4, 5}, {6, 10}, {6, 
            31}, {7, 10}, {8, 10}, {9, 10}, {11, 15}, {11, 31}, {12, 15}, {13,
             15}, {14, 15}, {16, 20}, {16, 31}, {17, 20}, {18, 20}, {19, 
            20}, {21, 25}, {21, 31}, {22, 25}, {23, 25}, {24, 25}, {26, 30}, {
            26, 31}, {27, 30}, {28, 30}, {29, 30}}, 0.06902834008097165]}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[1, 0.06902834008097165]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[2, 0.06902834008097165]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[3, 0.06902834008097165]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[4, 0.06902834008097165]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[5, 0.06902834008097165]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[6, 0.06902834008097165]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[7, 0.06902834008097165]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[8, 0.06902834008097165]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[9, 0.06902834008097165]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[10, 0.06902834008097165]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[11, 0.06902834008097165]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[12, 0.06902834008097165]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[13, 0.06902834008097165]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[14, 0.06902834008097165]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[15, 0.06902834008097165]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[16, 0.06902834008097165]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[17, 0.06902834008097165]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[18, 0.06902834008097165]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[19, 0.06902834008097165]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[20, 0.06902834008097165]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[21, 0.06902834008097165]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[22, 0.06902834008097165]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[23, 0.06902834008097165]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[24, 0.06902834008097165]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[25, 0.06902834008097165]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[26, 0.06902834008097165]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[27, 0.06902834008097165]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[28, 0.06902834008097165]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[29, 0.06902834008097165]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[30, 0.06902834008097165]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[31, 0.06902834008097165]}}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    FormatType->TraditionalForm,
    FrameTicks->None], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12}, {Null, 
         SparseArray[
         Automatic, {12, 12}, 0, {
          1, {{0, 2, 4, 6, 8, 10, 13, 16, 17, 18, 20, 21, 22}, {{2}, {12}, {
            1}, {3}, {2}, {4}, {3}, {5}, {4}, {6}, {5}, {7}, {10}, {6}, {8}, {
            9}, {7}, {7}, {6}, {11}, {10}, {1}}}, Pattern}]}, {
        VertexStyle -> {
          6 -> RGBColor[0.34398, 0.49112, 0.89936], 1 -> 
           RGBColor[0.97, 0.606, 0.081], 9 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 2 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 8 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 3 -> 
           RGBColor[0.97, 0.606, 0.081], 4 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 11 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 10 -> 
           RGBColor[0.97, 0.606, 0.081], 7 -> RGBColor[0.97, 0.606, 0.081], 
           12 -> RGBColor[0.34398, 0.49112, 0.89936], 5 -> 
           RGBColor[0.97, 0.606, 0.081]}, 
         VertexCoordinates -> {{0, 0.851923233558217}, {
           0, 1.7038464671164344`}, {0, 2.5557697006746514`}, {
           0.9584136377529944, 3.407692934232869}, {1.9168272755059887`, 
           2.5557697006746514`}, {1.9168272755059887`, 1.7038464671164344`}, {
           1.277884850337326, 0.851923233558217}, {0.8519232335582172, 0}, {
           1.7038464671164344`, 0}, {2.555769700674652, 0.851923233558217}, {
           2.555769700674652, 0}, {0, 0}}}]]}, 
      TagBox[
       GraphicsGroupBox[
        GraphicsComplexBox[{{0., 0.851923233558217}, {0., 
         1.7038464671164344`}, {0., 2.5557697006746514`}, {0.9584136377529944,
          3.407692934232869}, {1.9168272755059887`, 2.5557697006746514`}, {
         1.9168272755059887`, 1.7038464671164344`}, {1.277884850337326, 
         0.851923233558217}, {0.8519232335582172, 0.}, {1.7038464671164344`, 
         0.}, {2.555769700674652, 0.851923233558217}, {2.555769700674652, 
         0.}, {0., 0.}}, {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
           ArrowBox[{{1, 2}, {1, 12}, {2, 3}, {3, 4}, {4, 5}, {5, 6}, {6, 
            7}, {6, 10}, {7, 8}, {7, 9}, {10, 11}}, 0.03309352946135968]}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[1, 0.03309352946135968]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[2, 0.03309352946135968]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[3, 0.03309352946135968]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[4, 0.03309352946135968]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[5, 0.03309352946135968]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[6, 0.03309352946135968]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[7, 0.03309352946135968]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[8, 0.03309352946135968]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[9, 0.03309352946135968]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[10, 0.03309352946135968]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[11, 0.03309352946135968]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[12, 0.03309352946135968]}}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    FormatType->TraditionalForm,
    FrameTicks->None], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[CompressedData["
1:eJwl1vO7EAYYBeDbzbZ5s23bvNl1s23btm2bW21xyHZbbotbbmvvffbD+5y/
4DvnCwrpFtw1TEBAwPLAgIDQFAFhCUd4IhCRSEQmClGJRnRiEJNYxCYOcYlH
fBKQkEQkJglJSUZyUpCSVASRmjSkJR3pyUBGMpGZLGQlG9nJQU5ykZs85CUf
+SlAQQpRmCIUpRjFKUFJSlGaMpSlHOWpQEUqUZkqVKUa1alBTWoRTG3qUJd6
1KcBDWlEY5rQlGY0pwUtCaEVrWlDW9rRng50pBOd6UJXutGdHvSkF73pQ1/6
0Z8BDGQQgxnCUIYxnBGMZBSjGcNYxjGeCUxkEpOZwlSmMZ0ZzGQWs5nDXOYx
nwUsZBGLWcJSlrGcFaxkFatZw1rWsZ4NbGQTm9nCVraxnR3sZBe72cNe9rGf
AxzkEIf5ju85wlF+4EeOcZwTnOQUp/mJn/mFXznDWc5xngtc5BKXucJVrnGd
G9zkFre5w13ucZ/f+J0HPOQRj3nCU57xnD/4kxe85BWvecNb/uJv3vGeD3zk
E5/5wlf+4V++EXr8YQgkLOEITwQiEonIRCEq0YhODGISi9jEIS7xiE8CEpKI
xCQhKclITgpSkoogUpOGtKQjPRnISCYyk4WsZCM7OchJLnKTh7zkIz8FKEgh
ClOEohSjOCUoSSlKU4aylKM8FahIJSpThapUozo1qEktgqlNHepSj/o0oCGN
aEwTmtKM5rSgJSG0ojVtaEs72tOBjnSiM10ILe9udKcHPelFb/rQl370ZwAD
GcRghjCUYQxnBCMZxWjGMJZxjGcCE5nEZKYwlWlMZwYzmcVs5jCXecxnAQtZ
xGKWsJRlLGcFK1nFatawlnWsZwMb2cRmtrCVbWxnBzvZxW72sJd97OcABznE
Yb7je45wlB/4kWMc5wQnOcVpfuJnfuFXznCWc5znAhe5xGWucJVrXOcGN7nF
be5wl3vc5zd+5wEPecRjnvCUZzznD/7kBS95xWve8Ja/+Jt3vOcDH/nEZ77w
lX/4l2+EDn8YAglLOMITgYhEIjJRiEo0ohODmMQiNnGISzzik4CEJCIxSUhK
MpKTgpSkIojUpCEt6UhPBjKSicxkISvZyE4OcpKL3OQhL/nITwEKUojCFKEo
xShOCUpSitKUoSzlKE8FKlKJylShKtWoTg1qUotgalOHutSjPg1oSCMa04Sm
NKM5LWhJCK1oTRva0o72dKAjnehMF7rSje70oCe96E0f+tKP/gxgIIMYzBCG
MozhjGAkoxjNGMYyjvFMYCKTmMwUpjKN6cxgJrOYzRzmMo/5LGAhi1jMEpay
LPD///M/Vj819w==
        "], {Null, 
         SparseArray[Automatic, {672, 672}, 0, {1, {CompressedData["
1:eJwl1QWXEFQQgNFl6ZbuWEG6u6S7pDuXzgWkke7uRnCRLkG6u7sbQVK6G/Gq
75z7B2bmOy8oOKRaxzABAQGhgQH/vbBEIDLRiEls4pGQJCQniNSkJQOZyUZO
8pCfQhShOKUoSwUqU5Ua1KYeDWlCM1rShvaE0IVu9KQP/RjIEIYzirFMYDLT
mMkc5jGfhSxhOatYwzo2soXt7GIvBzjMMU5yhvNc4io3uMUd7vOQJzznFW/5
wGe+EmjA4YlEVGIQi7gkIDHJSEkq0pCeTGQlB7nJR0EKU4ySlKE8lahCdWpR
lwY0JpgWtKYd/y68M13pQW/6MoDBDGMkYxjPJKYyg9nMJZQFLGYZK1nNWjaw
mW3sZA/7OcRRTnCac1zkCte5yW3u8RePecZL3vCeT/xNGPcajohEITrfEIf4
JCIpKfiW70hHRrKQnVzkpQDfU5QSlKYcFfmBatSkDvVpRFOa04q2dKATP9Kd
XvxEfwYxlBGMZhwTmcJ0ZvEzv/Ari1jKCn7jd9azia3sYDf7OMgRjnOKs1zg
Mtf4gz+5ywMe8ZQXvOYdH/kS+H/8YYlAZKIRk9jEIyFJSE4QqUlLBjKTjZzk
IT+FKEJxSlGWClSmKjWoTT0a0oRmtKQN7QmhC93oSR/6MZAhDGcUY5nAZKYx
kznMYz4LWcJyVrGGdWxkC9vZxV4OcJhjnOQM57nEVW5wizvc5yFPeM4r3vKB
z3wlMJz+iURUYhCLuCQgMclISSrSkJ5MZCUHuclHQQpTjJKUoTyVqEJ1alGX
BjQmmBa0ph0d6UxXetCbvgxgMMMYyRjGM4mpzGA2cwllAYtZxkpWs5YNbGYb
O9nDfg5xlBOc5hwXucJ1bnKbe/zFY57xkje85xN/Eya8/olIFKLzDXGITyKS
koJv+Y50ZCQL2clFXgrwPUUpQWnKUZEfqEZN6lCfRjSlOa1oSwc68SPd6cVP
9GcQQxnBaMYxkSlMZxY/8wu/soilrOA3fmc9m9jKDnazj4Mc4TinOMsFLnON
P/iTuzzgEU95wWve8ZEv4f//+MMSgchEIyaxiUdCkpCcIFKTlgxkJhs5yUN+
ClGE4pSiLBWoTFVqUJt6NKQJzWhJG9oTQhe60ZM+9GMgQxjOKMYygclMYyZz
mMd8FrKE5axiDevYyBa2s4u9HOAwxzjJGc5ziavc4BZ3uM9DnvCcV7zlA5/5
SmBE/ROJqMQgFnFJQGKSkZJUpCE9mchKDnKTj4IUphglKUN5KlGF6tSiLg1o
TDAtaE07OtKZrvSgN30ZwGCGMZIxjGcSU5nBbOYSygIWs4yVrGYtG9jMNnay
h/0c4ignOM05LnKF69zkH6PAVmU=
            "], CompressedData["
1:eJwtmXXcVkUUhHdXAYtGSkFCbFEERFQsQLERA1vABqTTBFSQVGkkBRsQxAAD
sRXsbsXA7m49jzN/zG/f7357d885c2b2vu9t3KNvlz4lpbS+Uko5Rj5vFNg4
6e8KgU38Oaakzfy5YmBTz988UMv3VA5s6TW2CNT2nCqB6p5TLVDTc6oGanif
OoHtvE+9wPbep25gB8dRP9DUcWwdaOY4tgps6zmNArt4TpNAc89pHNjVezUI
7Oj1twns5H0bBnZ2TrsFjnROLQJHO6fdA0c5pz0CnZ1Tq8AxzqlloIvr0iFw
iGtxcOBQ16hjoJPrcmDgMNelfeAI1+WgwOHea5/Aqd6rXeB077Vv4DTHvF/g
JMd5QOAUx79/4GTHs1fgBMewd6CrY2sbONHxtA4c63jaBI53PHsGjjNXPQK3
maszA0vM1VmBxeaK60vNFdeXmSvuvd08nRG42Tx1C9xqnroHbjFPXJ9mbrg+
w5xx7/Sknjg70CupJ84J9E7qiXMDFyT11nmBPkn9dH6gb1Kf9Qz0S+od7h2U
1DvcOySpd1h/cFLvcG//pN7h3oFJvcP6AzxnZmC251wXmOM5swJzvdfVgXne
69rAAu91TWC+63xJ4HrX+bLAQtf50sAi1/nywA2u7ZWBm1zzKwI3us6jAxNc
56sCE13nMYFJrvOIwFjXdlRgvGs+MjDONbwwsNw1vDhwh2t4UWCFuRgamGwu
hgemmothgSlJ/UXvXVnUU/Tk5UW9Rh9eUaQ/NHVVkebQ2ugiLaKvMUWaQC+d
snSAjg7O0gfaOSRLE+iuY5YO0GP7LH2gwQ5Z64yN9eYVrTMuxvlF64yPcUHR
OhN8nXUmej7rTPIc1p4Z4+yiPWfFOKdon+tinFsU4zRfJ/bpnk+8MzwHnY+I
8eoinY+K8doinY+M8ZoinV8S4+QinV8W49QinV8a45Qi/+pftAf+NbBoD/xr
QFEceAGHADmj/35FOeMLfYvqgsf1KsoHX7ugKB/8rndRzvjFeUV1wS96FtUF
vzi/qHbsdXYRd+x1bhG/7HVOEb+s08NzuPcsz2HNMz0HrzwjxqFFXtk9xuFF
XtktxmGu4akxXuganh7jxa7haTFeVOyF1LKoH0+klkU92JVaFnl3Z+Iq8u4u
xFLk3ccQo+ccaL643t58Mf8g80XMHcwXMR9sjoi5o7mDr/2K+h+ODijSCNzt
X6QRuNjHc+CinefAxb6eg772inFQkab2jnFIkdbaxji4SF97sGeRplqxT5HW
WrJ/keZaE3uRFtsQe5H+9iR29+Fu1MC914K83ZO7U4+i/1MTcuYataIWzKU+
5N/MfMJRU3MId9uaW/japaif0cauRT2MHpoX9TY62dGxwNdOjgWOdnYscLed
96fvt/f+9P0OjpG+b1SkL/ZqXKQp1m9SpDX2bVDUh8TZsKgPiX+boj4k5q3N
A/nUNw/kuZV5ILc6Rfpiv7pFmmK/ekVaY79a5ope3dL80J+1zRt9W7OoV/Gi
6kX9iV/VKOpb/KqK+SSmauaTmKqaT2KqXKQLNLl5kRbQ7RZFGkG3mxZpCq1u
VqQ1tLpJkb7QakXzi/4rmXc8okJRP/R03Zr6OnVr5usNzD33FnMJrxubS3jd
yHx38hx4au058NTGc+CSfv03q77UOrm+1DqbA2r9S8z5K6tGv8b4d1Zdfovx
n6x68X/Wgnv+n833P36Ipg9+z4oJvv7IigO+/syKD75+zMqLPvwpKy967+es
vOjJ7xwDGvrBMaCh7x0nGvo6Sw/0x7dZeqA/vsnSDP3xla/j4V/4Oh7+pe/F
wz/Pig8P/zQrbjz8s6x88PCPs+qCDj/Jqgs63JBVO3T4QVY+eN2HWXnibx9l
5YbvvZeVGx70flZu+M76rNxaeS9yO9Z7kdvx3ovc0PXbWXvQ9+9m7UGvv5MV
Bxp4LWtdfPD1rP3wwVez4sArX8rKGQ9/JStnPPzlrLrg4c9n+QU99kKWj9Bj
L2Z5Bz32XHx+K+t8fybGN7LO9GdjfDPrrF+bFTcaW5cVK7p6OisH9Pao90JX
j3t9dPWY90V7D2XphfgfztIReT2SpR3yXZ3lF+h0TZZfoNMHszwFnT5gHnlO
uM/88pxwvznlOWGlewO+7nVvwNEq9wbc3eV8OcPucb6cYXe7Jpxhd2bxgZ/c
kcUHPrMiiw+85fYYn8g655bF+FTW2bY8xiezzrwl1iBrLrXu2Gux9UgMi7L6
m/k3ZGmAdRZmaYD152d5Mc8/C7I8muef67O8m+cfnvdnx9+3ZT3vz4rxlqzn
/etivDXre8O8GG/O+t4wJ8Ybs743zI3xpiwvxUMru1Z8ruZaca2Ka8W8qubu
PffiGvctPfqg+5m+XOE60/d3uv7o4Q7XHA2sdt1qm/cn3BNrXNta7rd1rgs9
9rTrRe+tdR2X+e865oJ76pov7qnnvFa6duS1yvUlr3td3+WOu6LvJe5K5pq4
K7jf6MVPfB+9+LHXo183+BoaeNbX6PtnfB96QIuLPKeme4DrNdwDzK9u3tEz
OoR3dI4+6Q20jSanZfkV59WULI/ivJqa5V2cVzOyvA4eZ2Z5IPxOz/I9OJ3m
+jf2OtS/ideBo0a+d4nrzr1LzQ3rLzY3k503vnWNc8WrrnUN8LDxjp+zeqxz
5Kwe5xw5q8d4LvW5ymtQk9Feu4bns8fXXpM98OKxjgMvHhW4OksLI/wZvYz0
Z/RyaeDKLC1cFrg8Sy+XBK7I0gvrTXGu7ENdZnr/aa4HsRE38V7kdSYFLvY6
EwMXeq8Jgb6Bwf7cLzDEc/oEBvnegYFh/tw/MNzzBwSGen4Hc4FndTQXeFZ7
84Wv8Z3zBteZ76ULXWe+ly4yFwfEeIHrcGCgl+twUKC367B/oGeWd7QLnJfl
L/sFzs/yl0PMBz3byXzQs+wFZwscM3VCXx1du/+fv1xDNLiv88XL9na++N0+
rgl+1yZwSqBbYK/ASYHugbaBkwNnBFoHuvj6noHOvt4qcIzvbRE4LHBqoGXg
iMDpgT0ChwdOCzT3/3sEdve1swK7ee6ZgV38/3MDu/ra2YGdPfecwA6BIwPH
BnYKHB04LrBj4KjA8YFmvo/6buf1qO/2XgMOmgROcJ7bBrq6Fk0DJ7oWbbz2
INeEPYe4VuxD/23j+dS3kdekvo29Jhw08L70ckPHRi9v7djo93pZfYKG6mf1
D9raKquv0FNt34cu6/o+tFjHa6PRLc0TvNc0T/Bey1zOcjwtzF9D89TZ8bQ0
39WcGzHVcG7EVN25EdNm3g8+NvcecLCF94abSr6fNTfxuuy7qddi340Dlc13
xUBV810hUCWrJ4rzZ/2NnDP7ZteCvf5N0hgc8KN2O3PzT5LG4OPPpL3wl7+T
9sJT/kraC6/5LSk3vOSPpHzwm9+T8sRvfk7KB1/5JSlPfOXXpNzwnq+S8qGX
v07Kkx7/Jik3+vqHpHzQxI9JeaKJn5Jya+51vk2KhXW+S4qRdb5Piutzz0Hr
X/g6Wv/S8/GDj2L8JGnPDYHPkvb8OPBp0p7vJ2kdz383Set4/ntJWsfz30nq
U3zsraTexMfeTupZfOyN+Hxolhe86c94xOv+jC+8kjRSw9eS5lK3V5PmUs+X
kvRKn7+cpGP6/8UkfdPzzyV5AZp8Pskj0O0LSb6Abp9OqgW6fsb1QvvPJtUL
7a9N8m78aF2Sp+NTTyX5OP71eHz+MKkHnohxfVKfPBnjB0l98ohri1c86prj
IY+5zvjGSt+LP63ymvjTPV4HD1uT5AX400NJHoFvPZzkC3jVA+aSvludxDG9
+aB5pTfvTep19HFfkgbQx/1JfY8++P33TvcVv/ne5b7it+C73Xu3WRf05BJr
gb5dbI3Qt0udL7Eucx2I9XbnTj68G8A3yJF3A/gGdeDdAL5BHfjtG/9Fz/z2
jeeiYX77bmttX5/kY/Q2v5vjXfT/wiRPo/9nOxf6d65zoa/nOF/6fZ7nUO8F
nkO953vOw67PA67vCtd3g+uz2rUmd3oavZI7PY1eyZ2e/sY1fM4cUMPnzQE1
fME88Z6B/sYrec+ABvBQ3jOgAXxzpuOp7DnEUNVziA0v4/0KesPHeb+CJvFu
3q+gyUaeQzx4wgzHgydMdzx4Ar/7o216j9/90T+9x+/+6J/+5L0H2sCDeO+B
HvAd3nugE/xoguejz0leB91O9Ppodazj5Nwa7/g5t8Y5Zs620eZzfdJ7D/hE
P2PMJ/rh/QmaR+e8P0Hz6Jz3J2geLxhhztHLKPOMXkaafzTFuxr0g3fzrgb9
4N28q0E/Fd3PT5l7+nmduaef15p76nOP/6Y+K30P9Vnleyb7OnWc6uvUcYrv
pY68q3nEufGu5lHnxruax5zbUMfMvOGOmf8Nc8zc0y1JM2ire5KW0Bzv39AP
OuNdHxzAFe/6xprDHkl8wFsv1+7/51zX9P9nYdcRP+1jnjjneD8Hf5xt/cwZ
Zx4xo1XOeGJGq5zrxIxWOe/JHa1y1pI7+uSsJfcFSecx7/ngiTN3sPnjnOWd
H5xx/vZ3T+CBA9wreOBA9wc+yRzub+g5rMvzEXNYi2cocicfNEnu5IlWyZ3c
0PB/Y92dgA==
            "]}, Pattern}]}, {
        VertexStyle -> {
          183 -> RGBColor[0.97, 0.606, 0.081], 585 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 157 -> 
           RGBColor[0.97, 0.606, 0.081], 426 -> RGBColor[0.97, 0.606, 0.081], 
           367 -> RGBColor[0.97, 0.606, 0.081], 254 -> 
           RGBColor[0.97, 0.606, 0.081], 25 -> RGBColor[0.97, 0.606, 0.081], 
           395 -> RGBColor[0.34398, 0.49112, 0.89936], 586 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 55 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 452 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 105 -> 
           RGBColor[0.97, 0.606, 0.081], 90 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 27 -> 
           RGBColor[0.97, 0.606, 0.081], 442 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 15 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 348 -> 
           RGBColor[0.97, 0.606, 0.081], 358 -> RGBColor[0.97, 0.606, 0.081], 
           209 -> RGBColor[0.97, 0.606, 0.081], 469 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 233 -> 
           RGBColor[0.97, 0.606, 0.081], 539 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 98 -> 
           RGBColor[0.97, 0.606, 0.081], 420 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 328 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 38 -> 
           RGBColor[0.97, 0.606, 0.081], 484 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 325 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 102 -> 
           RGBColor[0.97, 0.606, 0.081], 99 -> RGBColor[0.97, 0.606, 0.081], 
           174 -> RGBColor[0.97, 0.606, 0.081], 472 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 473 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 578 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 398 -> 
           RGBColor[0.97, 0.606, 0.081], 71 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 384 -> 
           RGBColor[0.97, 0.606, 0.081], 600 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 41 -> 
           RGBColor[0.97, 0.606, 0.081], 536 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 644 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 558 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 114 -> 
           RGBColor[0.97, 0.606, 0.081], 515 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 282 -> 
           RGBColor[0.97, 0.606, 0.081], 553 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 433 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 377 -> 
           RGBColor[0.97, 0.606, 0.081], 260 -> RGBColor[0.97, 0.606, 0.081], 
           223 -> RGBColor[0.97, 0.606, 0.081], 479 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 385 -> 
           RGBColor[0.97, 0.606, 0.081], 172 -> RGBColor[0.97, 0.606, 0.081], 
           152 -> RGBColor[0.97, 0.606, 0.081], 292 -> 
           RGBColor[0.97, 0.606, 0.081], 504 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 294 -> 
           RGBColor[0.97, 0.606, 0.081], 165 -> RGBColor[0.97, 0.606, 0.081], 
           75 -> RGBColor[0.34398, 0.49112, 0.89936], 568 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 663 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 509 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 64 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 312 -> 
           RGBColor[0.97, 0.606, 0.081], 217 -> RGBColor[0.97, 0.606, 0.081], 
           491 -> RGBColor[0.34398, 0.49112, 0.89936], 192 -> 
           RGBColor[0.97, 0.606, 0.081], 609 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 63 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 593 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 410 -> 
           RGBColor[0.97, 0.606, 0.081], 589 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 371 -> 
           RGBColor[0.97, 0.606, 0.081], 85 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 575 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 512 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 261 -> 
           RGBColor[0.97, 0.606, 0.081], 160 -> RGBColor[0.97, 0.606, 0.081], 
           613 -> RGBColor[0.34398, 0.49112, 0.89936], 3 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 145 -> 
           RGBColor[0.97, 0.606, 0.081], 445 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 374 -> 
           RGBColor[0.97, 0.606, 0.081], 231 -> RGBColor[0.97, 0.606, 0.081], 
           147 -> RGBColor[0.97, 0.606, 0.081], 158 -> 
           RGBColor[0.97, 0.606, 0.081], 608 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 318 -> 
           RGBColor[0.97, 0.606, 0.081], 652 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 159 -> 
           RGBColor[0.97, 0.606, 0.081], 428 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 417 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 503 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 86 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 554 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 181 -> 
           RGBColor[0.97, 0.606, 0.081], 621 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 342 -> 
           RGBColor[0.97, 0.606, 0.081], 109 -> RGBColor[0.97, 0.606, 0.081], 
           94 -> RGBColor[0.34398, 0.49112, 0.89936], 61 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 532 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 84 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 245 -> 
           RGBColor[0.97, 0.606, 0.081], 477 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 368 -> 
           RGBColor[0.97, 0.606, 0.081], 76 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 516 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 21 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 169 -> 
           RGBColor[0.97, 0.606, 0.081], 642 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 281 -> 
           RGBColor[0.97, 0.606, 0.081], 241 -> RGBColor[0.97, 0.606, 0.081], 
           647 -> RGBColor[0.34398, 0.49112, 0.89936], 645 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 87 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 310 -> 
           RGBColor[0.97, 0.606, 0.081], 283 -> RGBColor[0.97, 0.606, 0.081], 
           148 -> RGBColor[0.97, 0.606, 0.081], 461 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 284 -> 
           RGBColor[0.97, 0.606, 0.081], 459 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 518 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 658 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 423 -> 
           RGBColor[0.97, 0.606, 0.081], 95 -> RGBColor[0.97, 0.606, 0.081], 
           304 -> RGBColor[0.97, 0.606, 0.081], 133 -> 
           RGBColor[0.97, 0.606, 0.081], 179 -> RGBColor[0.97, 0.606, 0.081], 
           651 -> RGBColor[0.34398, 0.49112, 0.89936], 243 -> 
           RGBColor[0.97, 0.606, 0.081], 654 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 401 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 441 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 72 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 513 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 595 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 431 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 525 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 251 -> 
           RGBColor[0.97, 0.606, 0.081], 218 -> RGBColor[0.97, 0.606, 0.081], 
           42 -> RGBColor[0.97, 0.606, 0.081], 583 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 617 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 498 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 390 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 103 -> 
           RGBColor[0.97, 0.606, 0.081], 272 -> RGBColor[0.97, 0.606, 0.081], 
           66 -> RGBColor[0.34398, 0.49112, 0.89936], 315 -> 
           RGBColor[0.97, 0.606, 0.081], 598 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 584 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 1 -> 
           RGBColor[0.97, 0.606, 0.081], 24 -> RGBColor[0.97, 0.606, 0.081], 
           54 -> RGBColor[0.34398, 0.49112, 0.89936], 597 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 376 -> 
           RGBColor[0.97, 0.606, 0.081], 662 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 603 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 502 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 329 -> 
           RGBColor[0.97, 0.606, 0.081], 612 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 255 -> 
           RGBColor[0.97, 0.606, 0.081], 200 -> RGBColor[0.97, 0.606, 0.081], 
           220 -> RGBColor[0.97, 0.606, 0.081], 458 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 190 -> 
           RGBColor[0.97, 0.606, 0.081], 471 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 639 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 387 -> 
           RGBColor[0.97, 0.606, 0.081], 596 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 146 -> 
           RGBColor[0.97, 0.606, 0.081], 666 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 262 -> 
           RGBColor[0.97, 0.606, 0.081], 295 -> RGBColor[0.97, 0.606, 0.081], 
           382 -> RGBColor[0.97, 0.606, 0.081], 389 -> 
           RGBColor[0.97, 0.606, 0.081], 208 -> RGBColor[0.97, 0.606, 0.081], 
           320 -> RGBColor[0.97, 0.606, 0.081], 212 -> 
           RGBColor[0.97, 0.606, 0.081], 4 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 7 -> 
           RGBColor[0.97, 0.606, 0.081], 534 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 404 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 354 -> 
           RGBColor[0.97, 0.606, 0.081], 287 -> RGBColor[0.97, 0.606, 0.081], 
           140 -> RGBColor[0.97, 0.606, 0.081], 408 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 660 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 571 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 205 -> 
           RGBColor[0.97, 0.606, 0.081], 411 -> RGBColor[0.97, 0.606, 0.081], 
           100 -> RGBColor[0.97, 0.606, 0.081], 520 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 379 -> 
           RGBColor[0.97, 0.606, 0.081], 123 -> RGBColor[0.97, 0.606, 0.081], 
           561 -> RGBColor[0.34398, 0.49112, 0.89936], 162 -> 
           RGBColor[0.97, 0.606, 0.081], 672 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 526 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 555 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 12 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 636 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 65 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 522 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 649 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 632 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 569 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 228 -> 
           RGBColor[0.97, 0.606, 0.081], 211 -> RGBColor[0.97, 0.606, 0.081], 
           280 -> RGBColor[0.97, 0.606, 0.081], 232 -> 
           RGBColor[0.97, 0.606, 0.081], 541 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 8 -> 
           RGBColor[0.97, 0.606, 0.081], 602 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 127 -> 
           RGBColor[0.97, 0.606, 0.081], 182 -> RGBColor[0.97, 0.606, 0.081], 
           438 -> RGBColor[0.34398, 0.49112, 0.89936], 519 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 619 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 136 -> 
           RGBColor[0.97, 0.606, 0.081], 273 -> RGBColor[0.97, 0.606, 0.081], 
           57 -> RGBColor[0.34398, 0.49112, 0.89936], 274 -> 
           RGBColor[0.97, 0.606, 0.081], 302 -> RGBColor[0.97, 0.606, 0.081], 
           74 -> RGBColor[0.34398, 0.49112, 0.89936], 464 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 352 -> 
           RGBColor[0.97, 0.606, 0.081], 184 -> RGBColor[0.97, 0.606, 0.081], 
           393 -> RGBColor[0.34398, 0.49112, 0.89936], 330 -> 
           RGBColor[0.97, 0.606, 0.081], 582 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 196 -> 
           RGBColor[0.97, 0.606, 0.081], 549 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 412 -> 
           RGBColor[0.97, 0.606, 0.081], 296 -> RGBColor[0.97, 0.606, 0.081], 
           451 -> RGBColor[0.34398, 0.49112, 0.89936], 177 -> 
           RGBColor[0.97, 0.606, 0.081], 497 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 457 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 587 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 634 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 345 -> 
           RGBColor[0.97, 0.606, 0.081], 298 -> RGBColor[0.97, 0.606, 0.081], 
           343 -> RGBColor[0.97, 0.606, 0.081], 604 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 551 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 344 -> 
           RGBColor[0.97, 0.606, 0.081], 635 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 113 -> 
           RGBColor[0.97, 0.606, 0.081], 259 -> RGBColor[0.97, 0.606, 0.081], 
           588 -> RGBColor[0.34398, 0.49112, 0.89936], 506 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 289 -> 
           RGBColor[0.97, 0.606, 0.081], 643 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 242 -> 
           RGBColor[0.97, 0.606, 0.081], 314 -> RGBColor[0.97, 0.606, 0.081], 
           219 -> RGBColor[0.97, 0.606, 0.081], 285 -> 
           RGBColor[0.97, 0.606, 0.081], 244 -> RGBColor[0.97, 0.606, 0.081], 
           37 -> RGBColor[0.97, 0.606, 0.081], 625 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 170 -> 
           RGBColor[0.97, 0.606, 0.081], 43 -> RGBColor[0.97, 0.606, 0.081], 
           276 -> RGBColor[0.97, 0.606, 0.081], 246 -> 
           RGBColor[0.97, 0.606, 0.081], 39 -> RGBColor[0.97, 0.606, 0.081], 
           124 -> RGBColor[0.97, 0.606, 0.081], 375 -> 
           RGBColor[0.97, 0.606, 0.081], 432 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 383 -> 
           RGBColor[0.97, 0.606, 0.081], 466 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 130 -> 
           RGBColor[0.97, 0.606, 0.081], 135 -> RGBColor[0.97, 0.606, 0.081], 
           106 -> RGBColor[0.97, 0.606, 0.081], 565 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 291 -> 
           RGBColor[0.97, 0.606, 0.081], 347 -> RGBColor[0.97, 0.606, 0.081], 
           483 -> RGBColor[0.34398, 0.49112, 0.89936], 556 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 668 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 657 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 307 -> 
           RGBColor[0.97, 0.606, 0.081], 424 -> RGBColor[0.97, 0.606, 0.081], 
           540 -> RGBColor[0.34398, 0.49112, 0.89936], 264 -> 
           RGBColor[0.97, 0.606, 0.081], 449 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 616 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 351 -> 
           RGBColor[0.97, 0.606, 0.081], 303 -> RGBColor[0.97, 0.606, 0.081], 
           11 -> RGBColor[0.34398, 0.49112, 0.89936], 58 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 397 -> 
           RGBColor[0.97, 0.606, 0.081], 153 -> RGBColor[0.97, 0.606, 0.081], 
           225 -> RGBColor[0.97, 0.606, 0.081], 360 -> 
           RGBColor[0.97, 0.606, 0.081], 670 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 529 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 51 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 630 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 194 -> 
           RGBColor[0.97, 0.606, 0.081], 48 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 533 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 265 -> 
           RGBColor[0.97, 0.606, 0.081], 478 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 20 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 33 -> 
           RGBColor[0.97, 0.606, 0.081], 168 -> RGBColor[0.97, 0.606, 0.081], 
           224 -> RGBColor[0.97, 0.606, 0.081], 547 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 388 -> 
           RGBColor[0.97, 0.606, 0.081], 391 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 524 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 335 -> 
           RGBColor[0.97, 0.606, 0.081], 489 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 115 -> 
           RGBColor[0.97, 0.606, 0.081], 476 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 173 -> 
           RGBColor[0.97, 0.606, 0.081], 271 -> RGBColor[0.97, 0.606, 0.081], 
           655 -> RGBColor[0.34398, 0.49112, 0.89936], 45 -> 
           RGBColor[0.97, 0.606, 0.081], 23 -> RGBColor[0.97, 0.606, 0.081], 
           402 -> RGBColor[0.34398, 0.49112, 0.89936], 22 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 626 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 615 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 341 -> 
           RGBColor[0.97, 0.606, 0.081], 313 -> RGBColor[0.97, 0.606, 0.081], 
           339 -> RGBColor[0.97, 0.606, 0.081], 195 -> 
           RGBColor[0.97, 0.606, 0.081], 2 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 118 -> 
           RGBColor[0.97, 0.606, 0.081], 60 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 373 -> 
           RGBColor[0.97, 0.606, 0.081], 620 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 270 -> 
           RGBColor[0.97, 0.606, 0.081], 455 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 669 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 16 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 139 -> 
           RGBColor[0.97, 0.606, 0.081], 293 -> RGBColor[0.97, 0.606, 0.081], 
           79 -> RGBColor[0.34398, 0.49112, 0.89936], 210 -> 
           RGBColor[0.97, 0.606, 0.081], 487 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 403 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 564 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 89 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 317 -> 
           RGBColor[0.97, 0.606, 0.081], 36 -> RGBColor[0.97, 0.606, 0.081], 
           409 -> RGBColor[0.97, 0.606, 0.081], 496 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 664 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 120 -> 
           RGBColor[0.97, 0.606, 0.081], 189 -> RGBColor[0.97, 0.606, 0.081], 
           247 -> RGBColor[0.97, 0.606, 0.081], 418 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 266 -> 
           RGBColor[0.97, 0.606, 0.081], 191 -> RGBColor[0.97, 0.606, 0.081], 
           311 -> RGBColor[0.97, 0.606, 0.081], 355 -> 
           RGBColor[0.97, 0.606, 0.081], 143 -> RGBColor[0.97, 0.606, 0.081], 
           416 -> RGBColor[0.34398, 0.49112, 0.89936], 614 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 226 -> 
           RGBColor[0.97, 0.606, 0.081], 527 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 576 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 308 -> 
           RGBColor[0.97, 0.606, 0.081], 239 -> RGBColor[0.97, 0.606, 0.081], 
           443 -> RGBColor[0.34398, 0.49112, 0.89936], 405 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 138 -> 
           RGBColor[0.97, 0.606, 0.081], 334 -> RGBColor[0.97, 0.606, 0.081], 
           607 -> RGBColor[0.34398, 0.49112, 0.89936], 131 -> 
           RGBColor[0.97, 0.606, 0.081], 665 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 117 -> 
           RGBColor[0.97, 0.606, 0.081], 171 -> RGBColor[0.97, 0.606, 0.081], 
           396 -> RGBColor[0.97, 0.606, 0.081], 52 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 305 -> 
           RGBColor[0.97, 0.606, 0.081], 128 -> RGBColor[0.97, 0.606, 0.081], 
           495 -> RGBColor[0.34398, 0.49112, 0.89936], 229 -> 
           RGBColor[0.97, 0.606, 0.081], 557 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 32 -> 
           RGBColor[0.97, 0.606, 0.081], 31 -> RGBColor[0.97, 0.606, 0.081], 
           453 -> RGBColor[0.34398, 0.49112, 0.89936], 336 -> 
           RGBColor[0.97, 0.606, 0.081], 68 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 73 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 82 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 35 -> 
           RGBColor[0.97, 0.606, 0.081], 88 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 50 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 606 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 523 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 19 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 316 -> 
           RGBColor[0.97, 0.606, 0.081], 406 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 610 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 380 -> 
           RGBColor[0.97, 0.606, 0.081], 327 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 493 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 17 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 590 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 346 -> 
           RGBColor[0.97, 0.606, 0.081], 421 -> RGBColor[0.97, 0.606, 0.081], 
           545 -> RGBColor[0.34398, 0.49112, 0.89936], 187 -> 
           RGBColor[0.97, 0.606, 0.081], 116 -> RGBColor[0.97, 0.606, 0.081], 
           278 -> RGBColor[0.97, 0.606, 0.081], 667 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 96 -> 
           RGBColor[0.97, 0.606, 0.081], 579 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 121 -> 
           RGBColor[0.97, 0.606, 0.081], 485 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 14 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 104 -> 
           RGBColor[0.97, 0.606, 0.081], 444 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 546 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 494 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 198 -> 
           RGBColor[0.97, 0.606, 0.081], 5 -> RGBColor[0.97, 0.606, 0.081], 
           646 -> RGBColor[0.34398, 0.49112, 0.89936], 216 -> 
           RGBColor[0.97, 0.606, 0.081], 381 -> RGBColor[0.97, 0.606, 0.081], 
           288 -> RGBColor[0.97, 0.606, 0.081], 258 -> 
           RGBColor[0.97, 0.606, 0.081], 594 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 166 -> 
           RGBColor[0.97, 0.606, 0.081], 34 -> RGBColor[0.97, 0.606, 0.081], 
           97 -> RGBColor[0.97, 0.606, 0.081], 132 -> 
           RGBColor[0.97, 0.606, 0.081], 279 -> RGBColor[0.97, 0.606, 0.081], 
           544 -> RGBColor[0.34398, 0.49112, 0.89936], 93 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 462 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 81 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 436 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 137 -> 
           RGBColor[0.97, 0.606, 0.081], 501 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 559 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 69 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 492 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 9 -> 
           RGBColor[0.97, 0.606, 0.081], 161 -> RGBColor[0.97, 0.606, 0.081], 
           481 -> RGBColor[0.34398, 0.49112, 0.89936], 319 -> 
           RGBColor[0.97, 0.606, 0.081], 414 -> RGBColor[0.97, 0.606, 0.081], 
           150 -> RGBColor[0.97, 0.606, 0.081], 13 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 357 -> 
           RGBColor[0.97, 0.606, 0.081], 650 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 510 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 627 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 622 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 628 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 624 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 30 -> 
           RGBColor[0.97, 0.606, 0.081], 230 -> RGBColor[0.97, 0.606, 0.081], 
           349 -> RGBColor[0.97, 0.606, 0.081], 640 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 629 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 641 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 372 -> 
           RGBColor[0.97, 0.606, 0.081], 235 -> RGBColor[0.97, 0.606, 0.081], 
           149 -> RGBColor[0.97, 0.606, 0.081], 366 -> 
           RGBColor[0.97, 0.606, 0.081], 671 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 413 -> 
           RGBColor[0.97, 0.606, 0.081], 203 -> RGBColor[0.97, 0.606, 0.081], 
           59 -> RGBColor[0.34398, 0.49112, 0.89936], 574 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 207 -> 
           RGBColor[0.97, 0.606, 0.081], 475 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 213 -> 
           RGBColor[0.97, 0.606, 0.081], 580 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 28 -> 
           RGBColor[0.97, 0.606, 0.081], 324 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 268 -> 
           RGBColor[0.97, 0.606, 0.081], 633 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 560 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 80 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 631 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 122 -> 
           RGBColor[0.97, 0.606, 0.081], 435 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 257 -> 
           RGBColor[0.97, 0.606, 0.081], 215 -> RGBColor[0.97, 0.606, 0.081], 
           332 -> RGBColor[0.97, 0.606, 0.081], 197 -> 
           RGBColor[0.97, 0.606, 0.081], 517 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 214 -> 
           RGBColor[0.97, 0.606, 0.081], 407 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 309 -> 
           RGBColor[0.97, 0.606, 0.081], 530 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 419 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 552 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 47 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 62 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 567 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 77 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 163 -> 
           RGBColor[0.97, 0.606, 0.081], 427 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 482 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 490 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 447 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 601 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 543 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 637 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 463 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 126 -> 
           RGBColor[0.97, 0.606, 0.081], 299 -> RGBColor[0.97, 0.606, 0.081], 
           392 -> RGBColor[0.34398, 0.49112, 0.89936], 237 -> 
           RGBColor[0.97, 0.606, 0.081], 297 -> RGBColor[0.97, 0.606, 0.081], 
           591 -> RGBColor[0.34398, 0.49112, 0.89936], 204 -> 
           RGBColor[0.97, 0.606, 0.081], 175 -> RGBColor[0.97, 0.606, 0.081], 
           521 -> RGBColor[0.34398, 0.49112, 0.89936], 605 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 592 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 446 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 548 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 577 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 448 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 450 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 180 -> 
           RGBColor[0.97, 0.606, 0.081], 350 -> RGBColor[0.97, 0.606, 0.081], 
           186 -> RGBColor[0.97, 0.606, 0.081], 531 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 415 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 514 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 101 -> 
           RGBColor[0.97, 0.606, 0.081], 119 -> RGBColor[0.97, 0.606, 0.081], 
           238 -> RGBColor[0.97, 0.606, 0.081], 422 -> 
           RGBColor[0.97, 0.606, 0.081], 249 -> RGBColor[0.97, 0.606, 0.081], 
           480 -> RGBColor[0.34398, 0.49112, 0.89936], 267 -> 
           RGBColor[0.97, 0.606, 0.081], 78 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 500 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 454 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 301 -> 
           RGBColor[0.97, 0.606, 0.081], 201 -> RGBColor[0.97, 0.606, 0.081], 
           440 -> RGBColor[0.34398, 0.49112, 0.89936], 236 -> 
           RGBColor[0.97, 0.606, 0.081], 253 -> RGBColor[0.97, 0.606, 0.081], 
           550 -> RGBColor[0.34398, 0.49112, 0.89936], 499 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 573 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 474 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 648 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 356 -> 
           RGBColor[0.97, 0.606, 0.081], 306 -> RGBColor[0.97, 0.606, 0.081], 
           227 -> RGBColor[0.97, 0.606, 0.081], 154 -> 
           RGBColor[0.97, 0.606, 0.081], 40 -> RGBColor[0.97, 0.606, 0.081], 
           221 -> RGBColor[0.97, 0.606, 0.081], 430 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 362 -> 
           RGBColor[0.97, 0.606, 0.081], 142 -> RGBColor[0.97, 0.606, 0.081], 
           505 -> RGBColor[0.34398, 0.49112, 0.89936], 107 -> 
           RGBColor[0.97, 0.606, 0.081], 156 -> RGBColor[0.97, 0.606, 0.081], 
           535 -> RGBColor[0.34398, 0.49112, 0.89936], 112 -> 
           RGBColor[0.97, 0.606, 0.081], 437 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 67 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 429 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 363 -> 
           RGBColor[0.97, 0.606, 0.081], 638 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 361 -> 
           RGBColor[0.97, 0.606, 0.081], 562 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 364 -> 
           RGBColor[0.97, 0.606, 0.081], 300 -> RGBColor[0.97, 0.606, 0.081], 
           618 -> RGBColor[0.34398, 0.49112, 0.89936], 321 -> 
           RGBColor[0.97, 0.606, 0.081], 56 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 141 -> 
           RGBColor[0.97, 0.606, 0.081], 10 -> RGBColor[0.97, 0.606, 0.081], 
           511 -> RGBColor[0.34398, 0.49112, 0.89936], 275 -> 
           RGBColor[0.97, 0.606, 0.081], 337 -> RGBColor[0.97, 0.606, 0.081], 
           206 -> RGBColor[0.97, 0.606, 0.081], 386 -> 
           RGBColor[0.97, 0.606, 0.081], 399 -> RGBColor[0.97, 0.606, 0.081], 
           359 -> RGBColor[0.97, 0.606, 0.081], 240 -> 
           RGBColor[0.97, 0.606, 0.081], 338 -> RGBColor[0.97, 0.606, 0.081], 
           611 -> RGBColor[0.34398, 0.49112, 0.89936], 164 -> 
           RGBColor[0.97, 0.606, 0.081], 234 -> RGBColor[0.97, 0.606, 0.081], 
           322 -> RGBColor[0.97, 0.606, 0.081], 286 -> 
           RGBColor[0.97, 0.606, 0.081], 394 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 340 -> 
           RGBColor[0.97, 0.606, 0.081], 53 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 563 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 425 -> 
           RGBColor[0.97, 0.606, 0.081], 155 -> RGBColor[0.97, 0.606, 0.081], 
           537 -> RGBColor[0.34398, 0.49112, 0.89936], 470 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 26 -> 
           RGBColor[0.97, 0.606, 0.081], 653 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 623 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 134 -> 
           RGBColor[0.97, 0.606, 0.081], 18 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 460 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 250 -> 
           RGBColor[0.97, 0.606, 0.081], 331 -> RGBColor[0.97, 0.606, 0.081], 
           542 -> RGBColor[0.34398, 0.49112, 0.89936], 659 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 538 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 507 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 29 -> 
           RGBColor[0.97, 0.606, 0.081], 661 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 378 -> 
           RGBColor[0.97, 0.606, 0.081], 129 -> RGBColor[0.97, 0.606, 0.081], 
           269 -> RGBColor[0.97, 0.606, 0.081], 193 -> 
           RGBColor[0.97, 0.606, 0.081], 199 -> RGBColor[0.97, 0.606, 0.081], 
           508 -> RGBColor[0.34398, 0.49112, 0.89936], 486 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 178 -> 
           RGBColor[0.97, 0.606, 0.081], 110 -> RGBColor[0.97, 0.606, 0.081], 
           222 -> RGBColor[0.97, 0.606, 0.081], 467 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 369 -> 
           RGBColor[0.97, 0.606, 0.081], 151 -> RGBColor[0.97, 0.606, 0.081], 
           656 -> RGBColor[0.34398, 0.49112, 0.89936], 353 -> 
           RGBColor[0.97, 0.606, 0.081], 326 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 365 -> 
           RGBColor[0.97, 0.606, 0.081], 167 -> RGBColor[0.97, 0.606, 0.081], 
           400 -> RGBColor[0.34398, 0.49112, 0.89936], 176 -> 
           RGBColor[0.97, 0.606, 0.081], 92 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 570 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 599 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 528 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 188 -> 
           RGBColor[0.97, 0.606, 0.081], 108 -> RGBColor[0.97, 0.606, 0.081], 
           572 -> RGBColor[0.34398, 0.49112, 0.89936], 46 -> 
           RGBColor[0.97, 0.606, 0.081], 434 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 468 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 125 -> 
           RGBColor[0.97, 0.606, 0.081], 277 -> RGBColor[0.97, 0.606, 0.081], 
           290 -> RGBColor[0.97, 0.606, 0.081], 49 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 83 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 111 -> 
           RGBColor[0.97, 0.606, 0.081], 465 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 333 -> 
           RGBColor[0.97, 0.606, 0.081], 456 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 439 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 202 -> 
           RGBColor[0.97, 0.606, 0.081], 185 -> RGBColor[0.97, 0.606, 0.081], 
           252 -> RGBColor[0.97, 0.606, 0.081], 370 -> 
           RGBColor[0.97, 0.606, 0.081], 256 -> RGBColor[0.97, 0.606, 0.081], 
           581 -> RGBColor[0.34398, 0.49112, 0.89936], 488 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 263 -> 
           RGBColor[0.97, 0.606, 0.081], 144 -> RGBColor[0.97, 0.606, 0.081], 
           566 -> RGBColor[0.34398, 0.49112, 0.89936], 70 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 44 -> 
           RGBColor[0.97, 0.606, 0.081], 248 -> RGBColor[0.97, 0.606, 0.081], 
           91 -> RGBColor[0.34398, 0.49112, 0.89936], 6 -> 
           RGBColor[0.97, 0.606, 0.081], 323 -> 
           RGBColor[0.34398, 0.49112, 0.89936]}, VertexCoordinates -> {{
            Sin[Rational[1, 672] Pi], -Cos[Rational[1, 672] Pi]}, {
            Sin[Rational[1, 224] Pi], -Cos[Rational[1, 224] Pi]}, {-
            Sin[Rational[1, 672] Pi], -Cos[Rational[1, 672] Pi]}, {
            Sin[Rational[43, 224] Pi], 
            Cos[Rational[43, 224] Pi]}, {
            Sin[Rational[25, 672] Pi], -Cos[Rational[25, 672] Pi]}, {
            Sin[Rational[127, 672] Pi], 
            Cos[Rational[127, 672] Pi]}, {
            Cos[Rational[67, 672] Pi], -Sin[Rational[67, 672] Pi]}, {
            Sin[Rational[5, 672] Pi], -Cos[Rational[5, 672] Pi]}, {
            Sin[Rational[131, 672] Pi], 
            Cos[Rational[131, 672] Pi]}, {-Sin[Rational[1, 224] Pi], -
            Cos[Rational[1, 224] Pi]}, {
            Sin[Rational[9, 224] Pi], -Cos[Rational[9, 224] Pi]}, {
            Cos[Rational[65, 672] Pi], -Sin[Rational[65, 672] Pi]}, {
            Sin[Rational[27, 224] Pi], 
            Cos[Rational[27, 224] Pi]}, {
            Cos[Rational[31, 672] Pi], 
            Sin[Rational[31, 672] Pi]}, {-Cos[Rational[25, 672] Pi], 
            Sin[Rational[25, 672] Pi]}, {
            Sin[Rational[65, 672] Pi], 
            Cos[Rational[65, 672] Pi]}, {
            Sin[Rational[1, 96] Pi], -Cos[Rational[1, 96] Pi]}, {-
            Sin[Rational[5, 672] Pi], -Cos[Rational[5, 672] Pi]}, {
            Sin[Rational[19, 96] Pi], 
            Cos[Rational[19, 96] Pi]}, {
            Sin[Rational[23, 672] Pi], -Cos[Rational[23, 672] Pi]}, {
            Sin[Rational[125, 672] Pi], 
            Cos[Rational[125, 672] Pi]}, {
            Cos[Rational[23, 224] Pi], -Sin[Rational[23, 224] Pi]}, {
            Cos[Rational[15, 224] Pi], 
            Sin[Rational[15, 224] Pi]}, {
            Sin[Rational[79, 672] Pi], 
            Cos[Rational[79, 672] Pi]}, {-Cos[Rational[11, 672] Pi], 
            Sin[Rational[11, 672] Pi]}, {
            Cos[Rational[11, 224] Pi], 
            Sin[Rational[11, 224] Pi]}, {
            Sin[Rational[67, 672] Pi], 
            Cos[Rational[67, 672] Pi]}, {-Cos[Rational[23, 672] Pi], 
            Sin[Rational[23, 672] Pi]}, {
            Cos[Rational[7, 32] Pi], -Sin[Rational[7, 32] Pi]}, {-
            Sin[Rational[17, 224] Pi], -Cos[Rational[17, 224] Pi]}, {-
            Sin[Rational[55, 224] Pi], 
            Cos[Rational[55, 224] Pi]}, {-Sin[Rational[13, 224] Pi], -
            Cos[Rational[13, 224] Pi]}, {
            Cos[Rational[53, 224] Pi], -Sin[Rational[53, 224] Pi]}, {-
            Cos[Rational[53, 224] Pi], 
            Sin[Rational[53, 224] Pi]}, {
            Cos[Rational[29, 672] Pi], 
            Sin[Rational[29, 672] Pi]}, {
            Sin[Rational[3, 32] Pi], 
            Cos[Rational[3, 32] Pi]}, {-Cos[Rational[9, 224] Pi], 
            Sin[Rational[9, 224] Pi]}, {
            Sin[Rational[29, 672] Pi], -Cos[Rational[29, 672] Pi]}, {
            Cos[Rational[3, 32] Pi], -Sin[Rational[3, 32] Pi]}, {
            Sin[Rational[83, 672] Pi], 
            Cos[Rational[83, 672] Pi]}, {
            Sin[Rational[1, 32] Pi], -Cos[Rational[1, 32] Pi]}, {
            Sin[Rational[41, 224] Pi], 
            Cos[Rational[41, 224] Pi]}, {
            Cos[Rational[71, 672] Pi], -Sin[Rational[71, 672] Pi]}, {
            Sin[Rational[3, 224] Pi], -Cos[Rational[3, 224] Pi]}, {
            Sin[Rational[45, 224] Pi], 
            Cos[Rational[45, 224] Pi]}, {-Sin[Rational[1, 96] Pi], -
            Cos[Rational[1, 96] Pi]}, {
            Cos[Rational[47, 672] Pi], 
            Sin[Rational[47, 672] Pi]}, {-Cos[Rational[3, 224] Pi], 
            Sin[Rational[3, 224] Pi]}, {-Sin[Rational[37, 224] Pi], 
            Cos[Rational[37, 224] Pi]}, {
            Sin[Rational[113, 672] Pi], 
            Cos[Rational[113, 672] Pi]}, {-Sin[Rational[107, 672] Pi], 
            Cos[Rational[107, 672] Pi]}, {
            Cos[Rational[27, 224] Pi], -Sin[Rational[27, 224] Pi]}, {-
            Sin[Rational[127, 672] Pi], 
            Cos[Rational[127, 672] Pi]}, {
            Cos[Rational[109, 672] Pi], -Sin[Rational[109, 672] Pi]}, {-
            Sin[Rational[89, 672] Pi], -Cos[Rational[89, 672] Pi]}, {
            Cos[Rational[5, 32] Pi], -Sin[Rational[5, 32] Pi]}, {-
            Sin[Rational[31, 224] Pi], -Cos[Rational[31, 224] Pi]}, {-
            Sin[Rational[41, 224] Pi], 
            Cos[Rational[41, 224] Pi]}, {-Sin[Rational[13, 224] Pi], 
            Cos[Rational[13, 224] Pi]}, {
            Sin[Rational[79, 672] Pi], -Cos[Rational[79, 672] Pi]}, {-
            Cos[Rational[5, 32] Pi], 
            Sin[Rational[5, 32] Pi]}, {
            Sin[Rational[71, 672] Pi], -Cos[Rational[71, 672] Pi]}, {-
            Sin[Rational[47, 672] Pi], 
            Cos[Rational[47, 672] Pi]}, {-Cos[Rational[113, 672] Pi], 
            Sin[Rational[113, 672] Pi]}, {-Sin[Rational[41, 672] Pi], -
            Cos[Rational[41, 672] Pi]}, {-Cos[Rational[23, 96] Pi], 
            Sin[Rational[23, 96] Pi]}, {
            Cos[Rational[157, 672] Pi], -Sin[Rational[157, 672] Pi]}, {
            Cos[Rational[149, 672] Pi], -Sin[Rational[149, 672] Pi]}, {-
            Sin[Rational[167, 672] Pi], 
            Cos[Rational[167, 672] Pi]}, {-Sin[Rational[7, 96] Pi], -
            Cos[Rational[7, 96] Pi]}, {
            Cos[Rational[145, 672] Pi], -Sin[Rational[145, 672] Pi]}, {-
            Sin[Rational[163, 672] Pi], 
            Cos[Rational[163, 672] Pi]}, {-Sin[Rational[53, 672] Pi], -
            Cos[Rational[53, 672] Pi]}, {-Sin[Rational[37, 672] Pi], -
            Cos[Rational[37, 672] Pi]}, {-Cos[Rational[157, 672] Pi], 
            Sin[Rational[157, 672] Pi]}, {
            Cos[Rational[23, 96] Pi], -Sin[Rational[23, 96] Pi]}, {
            Cos[Rational[43, 672] Pi], 
            Sin[Rational[43, 672] Pi]}, {-Cos[Rational[13, 672] Pi], 
            Sin[Rational[13, 672] Pi]}, {
            Sin[Rational[11, 96] Pi], 
            Cos[Rational[11, 96] Pi]}, {
            Cos[Rational[5, 96] Pi], 
            Sin[Rational[5, 96] Pi]}, {
            Sin[Rational[23, 224] Pi], 
            Cos[Rational[23, 224] Pi]}, {-Cos[Rational[1, 32] Pi], 
            Sin[Rational[1, 32] Pi]}, {
            Sin[Rational[11, 672] Pi], -Cos[Rational[11, 672] Pi]}, {-
            Sin[Rational[3, 224] Pi], -Cos[Rational[3, 224] Pi]}, {
            Sin[Rational[137, 672] Pi], 
            Cos[Rational[137, 672] Pi]}, {
            Sin[Rational[19, 672] Pi], -Cos[Rational[19, 672] Pi]}, {
            Sin[Rational[121, 672] Pi], 
            Cos[Rational[121, 672] Pi]}, {
            Cos[Rational[73, 672] Pi], -Sin[Rational[73, 672] Pi]}, {
            Sin[Rational[31, 672] Pi], -Cos[Rational[31, 672] Pi]}, {
            Sin[Rational[85, 672] Pi], 
            Cos[Rational[85, 672] Pi]}, {
            Cos[Rational[61, 672] Pi], -Sin[Rational[61, 672] Pi]}, {
            Cos[Rational[9, 224] Pi], 
            Sin[Rational[9, 224] Pi]}, {-Cos[Rational[29, 672] Pi], 
            Sin[Rational[29, 672] Pi]}, {
            Sin[Rational[61, 672] Pi], 
            Cos[Rational[61, 672] Pi]}, {-Sin[Rational[125, 672] Pi], 
            Cos[Rational[125, 672] Pi]}, {
            Cos[Rational[107, 672] Pi], -Sin[Rational[107, 672] Pi]}, {-
            Sin[Rational[13, 96] Pi], -Cos[Rational[13, 96] Pi]}, {
            Cos[Rational[79, 672] Pi], -Sin[Rational[79, 672] Pi]}, {
            Sin[Rational[115, 672] Pi], 
            Cos[Rational[115, 672] Pi]}, {-Sin[Rational[109, 672] Pi], 
            Cos[Rational[109, 672] Pi]}, {-Sin[Rational[37, 672] Pi], 
            Cos[Rational[37, 672] Pi]}, {
            Sin[Rational[27, 224] Pi], -Cos[Rational[27, 224] Pi]}, {-
            Cos[Rational[103, 672] Pi], 
            Sin[Rational[103, 672] Pi]}, {
            Sin[Rational[23, 224] Pi], -Cos[Rational[23, 224] Pi]}, {-
            Sin[Rational[7, 96] Pi], 
            Cos[Rational[7, 96] Pi]}, {-Cos[Rational[115, 672] Pi], 
            Sin[Rational[115, 672] Pi]}, {-Sin[Rational[41, 672] Pi], 
            Cos[Rational[41, 672] Pi]}, {
            Sin[Rational[11, 96] Pi], -Cos[Rational[11, 96] Pi]}, {-
            Cos[Rational[107, 672] Pi], 
            Sin[Rational[107, 672] Pi]}, {
            Sin[Rational[73, 672] Pi], -Cos[Rational[73, 672] Pi]}, {-
            Sin[Rational[15, 224] Pi], 
            Cos[Rational[15, 224] Pi]}, {-Cos[Rational[37, 224] Pi], 
            Sin[Rational[37, 224] Pi]}, {
            Cos[Rational[151, 672] Pi], -Sin[Rational[151, 672] Pi]}, {-
            Sin[Rational[47, 672] Pi], -Cos[Rational[47, 672] Pi]}, {-
            Cos[Rational[167, 672] Pi], 
            Sin[Rational[167, 672] Pi]}, {-Sin[Rational[43, 672] Pi], -
            Cos[Rational[43, 672] Pi]}, {
            Cos[Rational[155, 672] Pi], -Sin[Rational[155, 672] Pi]}, {-
            Cos[Rational[163, 672] Pi], 
            Sin[Rational[163, 672] Pi]}, {
            Cos[Rational[139, 672] Pi], -Sin[Rational[139, 672] Pi]}, {-
            Sin[Rational[157, 672] Pi], 
            Cos[Rational[157, 672] Pi]}, {-Sin[Rational[59, 672] Pi], -
            Cos[Rational[59, 672] Pi]}, {-Sin[Rational[31, 672] Pi], -
            Cos[Rational[31, 672] Pi]}, {-Cos[Rational[151, 672] Pi], 
            Sin[Rational[151, 672] Pi]}, {
            Cos[Rational[167, 672] Pi], -Sin[Rational[167, 672] Pi]}, {
            Cos[Rational[131, 672] Pi], -Sin[Rational[131, 672] Pi]}, {-
            Sin[Rational[149, 672] Pi], 
            Cos[Rational[149, 672] Pi]}, {-Sin[Rational[67, 672] Pi], -
            Cos[Rational[67, 672] Pi]}, {-Cos[Rational[23, 96] Pi], -
            Sin[Rational[23, 96] Pi]}, {
            Sin[Rational[31, 224] Pi], -Cos[Rational[31, 224] Pi]}, {-
            Cos[Rational[39, 224] Pi], -Sin[Rational[39, 224] Pi]}, {-
            Cos[Rational[5, 672] Pi], -Sin[Rational[5, 672] Pi]}, {-
            Cos[Rational[11, 96] Pi], -Sin[Rational[11, 96] Pi]}, {-
            Cos[Rational[41, 672] Pi], -Sin[Rational[41, 672] Pi]}, {-
            Sin[Rational[53, 224] Pi], -Cos[Rational[53, 224] Pi]}, {-
            Cos[Rational[19, 96] Pi], -Sin[Rational[19, 96] Pi]}, {
            Sin[Rational[167, 672] Pi], 
            Cos[Rational[167, 672] Pi]}, {
            Sin[Rational[17, 672] Pi], -Cos[Rational[17, 672] Pi]}, {
            Cos[Rational[25, 224] Pi], -Sin[Rational[25, 224] Pi]}, {
            Sin[Rational[17, 96] Pi], 
            Cos[Rational[17, 96] Pi]}, {
            Sin[Rational[13, 672] Pi], -Cos[Rational[13, 672] Pi]}, {-
            Sin[Rational[11, 672] Pi], -Cos[Rational[11, 672] Pi]}, {
            Sin[Rational[139, 672] Pi], 
            Cos[Rational[139, 672] Pi]}, {
            Sin[Rational[17, 224] Pi], 
            Cos[Rational[17, 224] Pi]}, {-Cos[Rational[13, 224] Pi], 
            Sin[Rational[13, 224] Pi]}, {
            Cos[Rational[17, 672] Pi], 
            Sin[Rational[17, 672] Pi]}, {
            Cos[Rational[25, 672] Pi], 
            Sin[Rational[25, 672] Pi]}, {
            Sin[Rational[59, 672] Pi], 
            Cos[Rational[59, 672] Pi]}, {-Cos[Rational[31, 672] Pi], 
            Sin[Rational[31, 672] Pi]}, {
            Cos[Rational[103, 672] Pi], -Sin[Rational[103, 672] Pi]}, {-
            Sin[Rational[121, 672] Pi], 
            Cos[Rational[121, 672] Pi]}, {-Sin[Rational[95, 672] Pi], -
            Cos[Rational[95, 672] Pi]}, {
            Cos[Rational[31, 224] Pi], 
            Sin[Rational[31, 224] Pi]}, {
            Sin[Rational[109, 672] Pi], -Cos[Rational[109, 672] Pi]}, {
            Cos[Rational[39, 224] Pi], 
            Sin[Rational[39, 224] Pi]}, {
            Cos[Rational[143, 672] Pi], -Sin[Rational[143, 672] Pi]}, {-
            Sin[Rational[23, 96] Pi], 
            Cos[Rational[23, 96] Pi]}, {-Sin[Rational[55, 672] Pi], -
            Cos[Rational[55, 672] Pi]}, {-Sin[Rational[5, 96] Pi], -
            Cos[Rational[5, 96] Pi]}, {
            Cos[Rational[163, 672] Pi], -Sin[Rational[163, 672] Pi]}, {-
            Cos[Rational[155, 672] Pi], 
            Sin[Rational[155, 672] Pi]}, {
            Cos[Rational[41, 672] Pi], 
            Sin[Rational[41, 672] Pi]}, {-Cos[Rational[5, 224] Pi], 
            Sin[Rational[5, 224] Pi]}, {
            Sin[Rational[25, 224] Pi], 
            Cos[Rational[25, 224] Pi]}, {
            Cos[Rational[37, 672] Pi], 
            Sin[Rational[37, 672] Pi]}, {-Cos[Rational[19, 672] Pi], 
            Sin[Rational[19, 672] Pi]}, {
            Sin[Rational[71, 672] Pi], 
            Cos[Rational[71, 672] Pi]}, {-Sin[Rational[43, 224] Pi], 
            Cos[Rational[43, 224] Pi]}, {-Sin[Rational[29, 224] Pi], -
            Cos[Rational[29, 224] Pi]}, {
            Cos[Rational[37, 224] Pi], -Sin[Rational[37, 224] Pi]}, {
            Cos[Rational[7, 96] Pi], 
            Sin[Rational[7, 96] Pi]}, {-Sin[Rational[113, 672] Pi], 
            Cos[Rational[113, 672] Pi]}, {-Cos[Rational[1, 96] Pi], 
            Sin[Rational[1, 96] Pi]}, {
            Sin[Rational[37, 224] Pi], 
            Cos[Rational[37, 224] Pi]}, {
            Cos[Rational[83, 672] Pi], -Sin[Rational[83, 672] Pi]}, {-
            Sin[Rational[5, 32] Pi], 
            Cos[Rational[5, 32] Pi]}, {
            Sin[Rational[11, 224] Pi], -Cos[Rational[11, 224] Pi]}, {
            Sin[Rational[29, 224] Pi], 
            Cos[Rational[29, 224] Pi]}, {
            Cos[Rational[59, 672] Pi], -Sin[Rational[59, 672] Pi]}, {-
            Cos[Rational[125, 672] Pi], -Sin[Rational[125, 672] Pi]}, {-
            Sin[Rational[167, 672] Pi], -Cos[Rational[167, 672] Pi]}, {
            Cos[Rational[23, 96] Pi], 
            Sin[Rational[23, 96] Pi]}, {
            Sin[Rational[55, 672] Pi], 
            Cos[Rational[55, 672] Pi]}, {
            Cos[Rational[1, 32] Pi], 
            Sin[Rational[1, 32] Pi]}, {-Cos[Rational[5, 96] Pi], 
            Sin[Rational[5, 96] Pi]}, {
            Cos[Rational[45, 224] Pi], -Sin[Rational[45, 224] Pi]}, {-
            Sin[Rational[3, 32] Pi], -Cos[Rational[3, 32] Pi]}, {-
            Sin[Rational[51, 224] Pi], 
            Cos[Rational[51, 224] Pi]}, {
            Cos[Rational[89, 672] Pi], 
            Sin[Rational[89, 672] Pi]}, {
            Cos[Rational[121, 672] Pi], 
            Sin[Rational[121, 672] Pi]}, {
            Sin[Rational[5, 32] Pi], -Cos[Rational[5, 32] Pi]}, {-
            Cos[Rational[55, 224] Pi], -Sin[Rational[55, 224] Pi]}, {
            Cos[Rational[157, 672] Pi], 
            Sin[Rational[157, 672] Pi]}, {-Cos[Rational[121, 672] Pi], -
            Sin[Rational[121, 672] Pi]}, {-Sin[Rational[9, 224] Pi], -
            Cos[Rational[9, 224] Pi]}, {
            Sin[Rational[55, 224] Pi], -Cos[Rational[55, 224] Pi]}, {-
            Cos[Rational[7, 32] Pi], 
            Sin[Rational[7, 32] Pi]}, {
            Sin[Rational[47, 672] Pi], 
            Cos[Rational[47, 672] Pi]}, {-Cos[Rational[43, 672] Pi], 
            Sin[Rational[43, 672] Pi]}, {
            Cos[Rational[13, 672] Pi], 
            Sin[Rational[13, 672] Pi]}, {-Sin[Rational[19, 96] Pi], 
            Cos[Rational[19, 96] Pi]}, {-Sin[Rational[83, 672] Pi], -
            Cos[Rational[83, 672] Pi]}, {
            Cos[Rational[115, 672] Pi], -Sin[Rational[115, 672] Pi]}, {-
            Cos[Rational[3, 224] Pi], -Sin[Rational[3, 224] Pi]}, {-
            Cos[Rational[15, 224] Pi], -Sin[Rational[15, 224] Pi]}, {-
            Cos[Rational[27, 224] Pi], -Sin[Rational[27, 224] Pi]}, {
            Cos[Rational[53, 672] Pi], 
            Sin[Rational[53, 672] Pi]}, {-Sin[Rational[33, 224] Pi], -
            Cos[Rational[33, 224] Pi]}, {-Sin[Rational[39, 224] Pi], 
            Cos[Rational[39, 224] Pi]}, {
            Cos[Rational[97, 672] Pi], 
            Sin[Rational[97, 672] Pi]}, {
            Cos[Rational[113, 672] Pi], 
            Sin[Rational[113, 672] Pi]}, {
            Sin[Rational[113, 672] Pi], -Cos[Rational[113, 672] Pi]}, {
            Sin[Rational[107, 672] Pi], 
            Cos[Rational[107, 672] Pi]}, {
            Cos[Rational[29, 224] Pi], -Sin[Rational[29, 224] Pi]}, {-
            Sin[Rational[101, 672] Pi], 
            Cos[Rational[101, 672] Pi]}, {-Cos[Rational[25, 224] Pi], 
            Sin[Rational[25, 224] Pi]}, {-Sin[Rational[3, 224] Pi], 
            Cos[Rational[3, 224] Pi]}, {
            Sin[Rational[19, 224] Pi], -Cos[Rational[19, 224] Pi]}, {
            Cos[Rational[9, 224] Pi], -Sin[Rational[9, 224] Pi]}, {
            Cos[Rational[149, 672] Pi], 
            Sin[Rational[149, 672] Pi]}, {-Sin[Rational[45, 224] Pi], -
            Cos[Rational[45, 224] Pi]}, {
            Cos[Rational[55, 224] Pi], 
            Sin[Rational[55, 224] Pi]}, {-Sin[Rational[163, 672] Pi], -
            Cos[Rational[163, 672] Pi]}, {-Cos[Rational[43, 224] Pi], -
            Sin[Rational[43, 224] Pi]}, {-Cos[Rational[47, 672] Pi], 
            Sin[Rational[47, 672] Pi]}, {
            Cos[Rational[3, 224] Pi], 
            Sin[Rational[3, 224] Pi]}, {
            Sin[Rational[43, 672] Pi], 
            Cos[Rational[43, 672] Pi]}, {
            Cos[Rational[85, 672] Pi], 
            Sin[Rational[85, 672] Pi]}, {
            Cos[Rational[125, 672] Pi], 
            Sin[Rational[125, 672] Pi]}, {
            Sin[Rational[101, 672] Pi], -Cos[Rational[101, 672] Pi]}, {
            Cos[Rational[61, 672] Pi], 
            Sin[Rational[61, 672] Pi]}, {
            Cos[Rational[5, 224] Pi], -Sin[Rational[5, 224] Pi]}, {-
            Sin[Rational[41, 224] Pi], -Cos[Rational[41, 224] Pi]}, {-
            Cos[Rational[7, 96] Pi], -Sin[Rational[7, 96] Pi]}, {-
            Cos[Rational[85, 672] Pi], -Sin[Rational[85, 672] Pi]}, {-
            Cos[Rational[13, 672] Pi], -Sin[Rational[13, 672] Pi]}, {-
            Cos[Rational[19, 224] Pi], -Sin[Rational[19, 224] Pi]}, {-
            Cos[Rational[1, 32] Pi], -Sin[Rational[1, 32] Pi]}, {-
            Cos[Rational[31, 224] Pi], -Sin[Rational[31, 224] Pi]}, {-
            Cos[Rational[53, 672] Pi], -Sin[Rational[53, 672] Pi]}, {-
            Cos[Rational[17, 672] Pi], -Sin[Rational[17, 672] Pi]}, {-
            Cos[Rational[89, 672] Pi], -Sin[Rational[89, 672] Pi]}, {
            Cos[Rational[19, 224] Pi], 
            Sin[Rational[19, 224] Pi]}, {-Sin[Rational[17, 96] Pi], -
            Cos[Rational[17, 96] Pi]}, {
            Cos[Rational[11, 672] Pi], -Sin[Rational[11, 672] Pi]}, {
            Cos[Rational[27, 224] Pi], 
            Sin[Rational[27, 224] Pi]}, {
            Cos[Rational[43, 224] Pi], 
            Sin[Rational[43, 224] Pi]}, {
            Sin[Rational[97, 672] Pi], -Cos[Rational[97, 672] Pi]}, {
            Sin[Rational[37, 672] Pi], -Cos[Rational[37, 672] Pi]}, {
            Cos[Rational[55, 672] Pi], -Sin[Rational[55, 672] Pi]}, {
            Sin[Rational[13, 96] Pi], 
            Cos[Rational[13, 96] Pi]}, {-Cos[Rational[11, 224] Pi], -
            Sin[Rational[11, 224] Pi]}, {-Cos[Rational[1, 224] Pi], 
            Sin[Rational[1, 224] Pi]}, {-Cos[Rational[23, 224] Pi], -
            Sin[Rational[23, 224] Pi]}, {-Cos[Rational[1, 672] Pi], -
            Sin[Rational[1, 672] Pi]}, {-Cos[Rational[73, 672] Pi], -
            Sin[Rational[73, 672] Pi]}, {-Cos[Rational[37, 672] Pi], -
            Sin[Rational[37, 672] Pi]}, {-Sin[Rational[155, 672] Pi], -
            Cos[Rational[155, 672] Pi]}, {-Cos[Rational[137, 672] Pi], -
            Sin[Rational[137, 672] Pi]}, {
            Sin[Rational[163, 672] Pi], 
            Cos[Rational[163, 672] Pi]}, {-Cos[Rational[25, 672] Pi], -
            Sin[Rational[25, 672] Pi]}, {-Cos[Rational[97, 672] Pi], -
            Sin[Rational[97, 672] Pi]}, {-Cos[Rational[61, 672] Pi], -
            Sin[Rational[61, 672] Pi]}, {
            Cos[Rational[19, 96] Pi], 
            Sin[Rational[19, 96] Pi]}, {
            Cos[Rational[11, 96] Pi], 
            Sin[Rational[11, 96] Pi]}, {-Sin[Rational[31, 224] Pi], 
            Cos[Rational[31, 224] Pi]}, {
            Cos[Rational[1, 224] Pi], -Sin[Rational[1, 224] Pi]}, {
            Sin[Rational[155, 672] Pi], 
            Cos[Rational[155, 672] Pi]}, {-Sin[Rational[37, 224] Pi], -
            Cos[Rational[37, 224] Pi]}, {-Cos[Rational[29, 672] Pi], -
            Sin[Rational[29, 672] Pi]}, {-Cos[Rational[101, 672] Pi], -
            Sin[Rational[101, 672] Pi]}, {-Cos[Rational[65, 672] Pi], -
            Sin[Rational[65, 672] Pi]}, {
            Cos[Rational[73, 672] Pi], 
            Sin[Rational[73, 672] Pi]}, {-Sin[Rational[89, 672] Pi], 
            Cos[Rational[89, 672] Pi]}, {
            Cos[Rational[137, 672] Pi], 
            Sin[Rational[137, 672] Pi]}, {
            Sin[Rational[5, 96] Pi], 
            Cos[Rational[5, 96] Pi]}, {-Cos[Rational[55, 672] Pi], 
            Sin[Rational[55, 672] Pi]}, {
            Cos[Rational[1, 672] Pi], 
            Sin[Rational[1, 672] Pi]}, {-Cos[Rational[47, 224] Pi], -
            Sin[Rational[47, 224] Pi]}, {
            Cos[Rational[13, 224] Pi], -Sin[Rational[13, 224] Pi]}, {-
            Sin[Rational[151, 672] Pi], -Cos[Rational[151, 672] Pi]}, {
            Cos[Rational[65, 672] Pi], 
            Sin[Rational[65, 672] Pi]}, {
            Cos[Rational[19, 672] Pi], -Sin[Rational[19, 672] Pi]}, {-
            Sin[Rational[127, 672] Pi], -Cos[Rational[127, 672] Pi]}, {-
            Cos[Rational[29, 224] Pi], 
            Sin[Rational[29, 224] Pi]}, {-Sin[Rational[1, 32] Pi], 
            Cos[Rational[1, 32] Pi]}, {-Sin[Rational[65, 672] Pi], 
            Cos[Rational[65, 672] Pi]}, {
            Cos[Rational[33, 224] Pi], -Sin[Rational[33, 224] Pi]}, {
            Sin[Rational[53, 672] Pi], -Cos[Rational[53, 672] Pi]}, {-
            Sin[Rational[5, 672] Pi], 
            Cos[Rational[5, 672] Pi]}, {
            Cos[Rational[51, 224] Pi], 
            Sin[Rational[51, 224] Pi]}, {-Sin[Rational[131, 672] Pi], -
            Cos[Rational[131, 672] Pi]}, {
            Cos[Rational[23, 672] Pi], -Sin[Rational[23, 672] Pi]}, {
            Cos[Rational[5, 672] Pi], 
            Sin[Rational[5, 672] Pi]}, {-Cos[Rational[17, 224] Pi], 
            Sin[Rational[17, 224] Pi]}, {
            Sin[Rational[13, 224] Pi], 
            Cos[Rational[13, 224] Pi]}, {
            Cos[Rational[31, 672] Pi], -Sin[Rational[31, 672] Pi]}, {-
            Sin[Rational[5, 224] Pi], -Cos[Rational[5, 224] Pi]}, {
            Sin[Rational[143, 672] Pi], 
            Cos[Rational[143, 672] Pi]}, {
            Cos[Rational[127, 672] Pi], -Sin[Rational[127, 672] Pi]}, {-
            Sin[Rational[145, 672] Pi], 
            Cos[Rational[145, 672] Pi]}, {-Sin[Rational[71, 672] Pi], -
            Cos[Rational[71, 672] Pi]}, {
            Cos[Rational[1, 96] Pi], -Sin[Rational[1, 96] Pi]}, {-
            Sin[Rational[115, 672] Pi], -Cos[Rational[115, 672] Pi]}, {
            Sin[Rational[53, 224] Pi], 
            Cos[Rational[53, 224] Pi]}, {
            Sin[Rational[1, 96] Pi], 
            Cos[Rational[1, 96] Pi]}, {-Cos[Rational[67, 672] Pi], 
            Sin[Rational[67, 672] Pi]}, {
            Sin[Rational[23, 672] Pi], 
            Cos[Rational[23, 672] Pi]}, {-Sin[Rational[13, 672] Pi], 
            Cos[Rational[13, 672] Pi]}, {-Cos[Rational[79, 672] Pi], 
            Sin[Rational[79, 672] Pi]}, {
            Sin[Rational[61, 672] Pi], -Cos[Rational[61, 672] Pi]}, {
            Sin[Rational[157, 672] Pi], -Cos[Rational[157, 672] Pi]}, {-
            Cos[Rational[139, 672] Pi], 
            Sin[Rational[139, 672] Pi]}, {
            Sin[Rational[47, 224] Pi], -Cos[Rational[47, 224] Pi]}, {
            Sin[Rational[9, 224] Pi], 
            Cos[Rational[9, 224] Pi]}, {-Cos[Rational[3, 32] Pi], 
            Sin[Rational[3, 32] Pi]}, {
            Sin[Rational[1, 224] Pi], 
            Cos[Rational[1, 224] Pi]}, {
            Sin[Rational[137, 672] Pi], -Cos[Rational[137, 672] Pi]}, {-
            Cos[Rational[45, 224] Pi], 
            Sin[Rational[45, 224] Pi]}, {
            Sin[Rational[51, 224] Pi], -Cos[Rational[51, 224] Pi]}, {-
            Cos[Rational[157, 672] Pi], -Sin[Rational[157, 672] Pi]}, {
            Sin[Rational[89, 672] Pi], -Cos[Rational[89, 672] Pi]}, {-
            Cos[Rational[113, 672] Pi], -Sin[Rational[113, 672] Pi]}, {-
            Sin[Rational[17, 224] Pi], 
            Cos[Rational[17, 224] Pi]}, {-Cos[Rational[39, 224] Pi], 
            Sin[Rational[39, 224] Pi]}, {
            Sin[Rational[67, 672] Pi], -Cos[Rational[67, 672] Pi]}, {
            Sin[Rational[83, 672] Pi], -Cos[Rational[83, 672] Pi]}, {-
            Cos[Rational[101, 672] Pi], 
            Sin[Rational[101, 672] Pi]}, {-Sin[Rational[5, 96] Pi], 
            Cos[Rational[5, 96] Pi]}, {
            Sin[Rational[5, 224] Pi], 
            Cos[Rational[5, 224] Pi]}, {
            Sin[Rational[11, 672] Pi], 
            Cos[Rational[11, 672] Pi]}, {-Cos[Rational[71, 672] Pi], 
            Sin[Rational[71, 672] Pi]}, {
            Sin[Rational[19, 672] Pi], 
            Cos[Rational[19, 672] Pi]}, {
            Cos[Rational[5, 96] Pi], -Sin[Rational[5, 96] Pi]}, {
            Sin[Rational[151, 672] Pi], 
            Cos[Rational[151, 672] Pi]}, {-Sin[Rational[107, 672] Pi], -
            Cos[Rational[107, 672] Pi]}, {-Sin[Rational[61, 672] Pi], 
            Cos[Rational[61, 672] Pi]}, {-Sin[Rational[17, 672] Pi], 
            Cos[Rational[17, 672] Pi]}, {-Cos[Rational[83, 672] Pi], 
            Sin[Rational[83, 672] Pi]}, {-Sin[Rational[19, 672] Pi], -
            Cos[Rational[19, 672] Pi]}, {-Sin[Rational[103, 672] Pi], -
            Cos[Rational[103, 672] Pi]}, {
            Sin[Rational[7, 32] Pi], 
            Cos[Rational[7, 32] Pi]}, {
            Sin[Rational[149, 672] Pi], -Cos[Rational[149, 672] Pi]}, {-
            Cos[Rational[131, 672] Pi], 
            Sin[Rational[131, 672] Pi]}, {
            Sin[Rational[19, 96] Pi], -Cos[Rational[19, 96] Pi]}, {
            Sin[Rational[43, 224] Pi], -Cos[Rational[43, 224] Pi]}, {
            Sin[Rational[145, 672] Pi], -Cos[Rational[145, 672] Pi]}, {-
            Cos[Rational[127, 672] Pi], 
            Sin[Rational[127, 672] Pi]}, {-Sin[Rational[137, 672] Pi], 
            Cos[Rational[137, 672] Pi]}, {
            Cos[Rational[17, 96] Pi], -Sin[Rational[17, 96] Pi]}, {-
            Sin[Rational[79, 672] Pi], -Cos[Rational[79, 672] Pi]}, {-
            Sin[Rational[19, 224] Pi], 
            Cos[Rational[19, 224] Pi]}, {-Cos[Rational[41, 224] Pi], 
            Sin[Rational[41, 224] Pi]}, {
            Sin[Rational[125, 672] Pi], -Cos[Rational[125, 672] Pi]}, {-
            Sin[Rational[47, 224] Pi], 
            Cos[Rational[47, 224] Pi]}, {-Sin[Rational[25, 224] Pi], -
            Cos[Rational[25, 224] Pi]}, {
            Cos[Rational[41, 224] Pi], -Sin[Rational[41, 224] Pi]}, {-
            Sin[Rational[23, 224] Pi], 
            Cos[Rational[23, 224] Pi]}, {-Sin[Rational[25, 672] Pi], 
            Cos[Rational[25, 672] Pi]}, {-Cos[Rational[13, 96] Pi], 
            Sin[Rational[13, 96] Pi]}, {-Sin[Rational[73, 672] Pi], 
            Cos[Rational[73, 672] Pi]}, {-Cos[Rational[95, 672] Pi], 
            Sin[Rational[95, 672] Pi]}, {-Sin[Rational[29, 672] Pi], 
            Cos[Rational[29, 672] Pi]}, {
            Cos[Rational[47, 224] Pi], 
            Sin[Rational[47, 224] Pi]}, {
            Cos[Rational[23, 224] Pi], 
            Sin[Rational[23, 224] Pi]}, {-Sin[Rational[85, 672] Pi], 
            Cos[Rational[85, 672] Pi]}, {
            Sin[Rational[41, 672] Pi], -Cos[Rational[41, 672] Pi]}, {
            Sin[Rational[95, 672] Pi], 
            Cos[Rational[95, 672] Pi]}, {
            Cos[Rational[17, 224] Pi], -Sin[Rational[17, 224] Pi]}, {
            Sin[Rational[103, 672] Pi], 
            Cos[Rational[103, 672] Pi]}, {
            Cos[Rational[13, 96] Pi], -Sin[Rational[13, 96] Pi]}, {-
            Sin[Rational[97, 672] Pi], 
            Cos[Rational[97, 672] Pi]}, {
            Sin[Rational[23, 96] Pi], -Cos[Rational[23, 96] Pi]}, {-
            Cos[Rational[143, 672] Pi], 
            Sin[Rational[143, 672] Pi]}, {-Sin[Rational[23, 672] Pi], -
            Cos[Rational[23, 672] Pi]}, {
            Cos[Rational[95, 672] Pi], -Sin[Rational[95, 672] Pi]}, {
            Sin[Rational[7, 96] Pi], -Cos[Rational[7, 96] Pi]}, {-
            Sin[Rational[1, 672] Pi], 
            Cos[Rational[1, 672] Pi]}, {-Cos[Rational[145, 672] Pi], -
            Sin[Rational[145, 672] Pi]}, {-Sin[Rational[7, 32] Pi], -
            Cos[Rational[7, 32] Pi]}, {
            Cos[Rational[43, 672] Pi], -Sin[Rational[43, 672] Pi]}, {-
            Sin[Rational[27, 224] Pi], 
            Cos[Rational[27, 224] Pi]}, {
            Cos[Rational[145, 672] Pi], 
            Sin[Rational[145, 672] Pi]}, {-Sin[Rational[139, 672] Pi], -
            Cos[Rational[139, 672] Pi]}, {
            Cos[Rational[101, 672] Pi], 
            Sin[Rational[101, 672] Pi]}, {
            Cos[Rational[109, 672] Pi], 
            Sin[Rational[109, 672] Pi]}, {
            Sin[Rational[39, 224] Pi], -Cos[Rational[39, 224] Pi]}, {-
            Sin[Rational[143, 672] Pi], -Cos[Rational[143, 672] Pi]}, {-
            Cos[Rational[5, 32] Pi], -Sin[Rational[5, 32] Pi]}, {-
            Cos[Rational[149, 672] Pi], -Sin[Rational[149, 672] Pi]}, {
            Sin[Rational[17, 96] Pi], -Cos[Rational[17, 96] Pi]}, {
            Cos[Rational[103, 672] Pi], 
            Sin[Rational[103, 672] Pi]}, {
            Cos[Rational[107, 672] Pi], 
            Sin[Rational[107, 672] Pi]}, {-Cos[Rational[151, 672] Pi], -
            Sin[Rational[151, 672] Pi]}, {-Sin[Rational[47, 224] Pi], -
            Cos[Rational[47, 224] Pi]}, {-Cos[Rational[107, 672] Pi], -
            Sin[Rational[107, 672] Pi]}, {
            Sin[Rational[33, 224] Pi], 
            Cos[Rational[33, 224] Pi]}, {
            Cos[Rational[47, 672] Pi], -Sin[Rational[47, 672] Pi]}, {
            Sin[Rational[15, 224] Pi], -Cos[Rational[15, 224] Pi]}, {
            Cos[Rational[5, 32] Pi], 
            Sin[Rational[5, 32] Pi]}, {-Sin[Rational[145, 672] Pi], -
            Cos[Rational[145, 672] Pi]}, {
            Cos[Rational[15, 224] Pi], -Sin[Rational[15, 224] Pi]}, {-
            Cos[Rational[7, 32] Pi], -Sin[Rational[7, 32] Pi]}, {
            Sin[Rational[97, 672] Pi], 
            Cos[Rational[97, 672] Pi]}, {
            Cos[Rational[7, 96] Pi], -Sin[Rational[7, 96] Pi]}, {
            Sin[Rational[43, 672] Pi], -Cos[Rational[43, 672] Pi]}, {
            Sin[Rational[47, 672] Pi], -Cos[Rational[47, 672] Pi]}, {
            Sin[Rational[101, 672] Pi], 
            Cos[Rational[101, 672] Pi]}, {
            Cos[Rational[31, 224] Pi], -Sin[Rational[31, 224] Pi]}, {-
            Cos[Rational[59, 672] Pi], 
            Sin[Rational[59, 672] Pi]}, {
            Sin[Rational[65, 672] Pi], -Cos[Rational[65, 672] Pi]}, {
            Sin[Rational[31, 672] Pi], 
            Cos[Rational[31, 672] Pi]}, {-Cos[Rational[33, 224] Pi], 
            Sin[Rational[33, 224] Pi]}, {-Sin[Rational[11, 224] Pi], 
            Cos[Rational[11, 224] Pi]}, {-Sin[Rational[11, 96] Pi], 
            Cos[Rational[11, 96] Pi]}, {-Cos[Rational[155, 672] Pi], -
            Sin[Rational[155, 672] Pi]}, {
            Sin[Rational[29, 224] Pi], -Cos[Rational[29, 224] Pi]}, {-
            Cos[Rational[37, 224] Pi], -Sin[Rational[37, 224] Pi]}, {-
            Sin[Rational[31, 672] Pi], 
            Cos[Rational[31, 672] Pi]}, {-Sin[Rational[25, 224] Pi], 
            Cos[Rational[25, 224] Pi]}, {-Cos[Rational[97, 672] Pi], 
            Sin[Rational[97, 672] Pi]}, {-Cos[Rational[109, 672] Pi], -
            Sin[Rational[109, 672] Pi]}, {-Cos[Rational[51, 224] Pi], -
            Sin[Rational[51, 224] Pi]}, {
            Sin[Rational[85, 672] Pi], -Cos[Rational[85, 672] Pi]}, {-
            Cos[Rational[17, 96] Pi], 
            Sin[Rational[17, 96] Pi]}, {
            Sin[Rational[121, 672] Pi], -Cos[Rational[121, 672] Pi]}, {-
            Sin[Rational[53, 672] Pi], 
            Cos[Rational[53, 672] Pi]}, {
            Sin[Rational[1, 672] Pi], 
            Cos[Rational[1, 672] Pi]}, {
            Sin[Rational[29, 672] Pi], 
            Cos[Rational[29, 672] Pi]}, {-Cos[Rational[61, 672] Pi], 
            Sin[Rational[61, 672] Pi]}, {-Cos[Rational[125, 672] Pi], 
            Sin[Rational[125, 672] Pi]}, {
            Sin[Rational[127, 672] Pi], -Cos[Rational[127, 672] Pi]}, {
            Sin[Rational[143, 672] Pi], -Cos[Rational[143, 672] Pi]}, {-
            Cos[Rational[27, 224] Pi], 
            Sin[Rational[27, 224] Pi]}, {-Sin[Rational[59, 672] Pi], 
            Cos[Rational[59, 672] Pi]}, {-Sin[Rational[5, 224] Pi], 
            Cos[Rational[5, 224] Pi]}, {
            Sin[Rational[3, 224] Pi], 
            Cos[Rational[3, 224] Pi]}, {
            Sin[Rational[1, 32] Pi], 
            Cos[Rational[1, 32] Pi]}, {-Cos[Rational[23, 224] Pi], 
            Sin[Rational[23, 224] Pi]}, {-Sin[Rational[139, 672] Pi], 
            Cos[Rational[139, 672] Pi]}, {
            Cos[Rational[121, 672] Pi], -Sin[Rational[121, 672] Pi]}, {-
            Sin[Rational[11, 96] Pi], -Cos[Rational[11, 96] Pi]}, {-
            Sin[Rational[143, 672] Pi], 
            Cos[Rational[143, 672] Pi]}, {-Sin[Rational[73, 672] Pi], -
            Cos[Rational[73, 672] Pi]}, {
            Cos[Rational[125, 672] Pi], -Sin[Rational[125, 672] Pi]}, {
            Cos[Rational[11, 224] Pi], -Sin[Rational[11, 224] Pi]}, {-
            Sin[Rational[5, 32] Pi], -Cos[Rational[5, 32] Pi]}, {
            Sin[Rational[149, 672] Pi], 
            Cos[Rational[149, 672] Pi]}, {-Sin[Rational[71, 672] Pi], 
            Cos[Rational[71, 672] Pi]}, {-Cos[Rational[31, 224] Pi], 
            Sin[Rational[31, 224] Pi]}, {-Sin[Rational[9, 224] Pi], 
            Cos[Rational[9, 224] Pi]}, {
            Sin[Rational[7, 32] Pi], -Cos[Rational[7, 32] Pi]}, {-
            Cos[Rational[43, 224] Pi], 
            Sin[Rational[43, 224] Pi]}, {
            Sin[Rational[131, 672] Pi], -Cos[Rational[131, 672] Pi]}, {
            Sin[Rational[53, 224] Pi], -Cos[Rational[53, 224] Pi]}, {-
            Sin[Rational[1, 32] Pi], -Cos[Rational[1, 32] Pi]}, {-
            Cos[Rational[47, 224] Pi], 
            Sin[Rational[47, 224] Pi]}, {
            Cos[Rational[97, 672] Pi], -Sin[Rational[97, 672] Pi]}, {
            Sin[Rational[17, 224] Pi], -Cos[Rational[17, 224] Pi]}, {-
            Sin[Rational[1, 224] Pi], 
            Cos[Rational[1, 224] Pi]}, {-Sin[Rational[23, 672] Pi], 
            Cos[Rational[23, 672] Pi]}, {-Sin[Rational[67, 672] Pi], 
            Cos[Rational[67, 672] Pi]}, {-Cos[Rational[89, 672] Pi], 
            Sin[Rational[89, 672] Pi]}, {
            Cos[Rational[67, 672] Pi], 
            Sin[Rational[67, 672] Pi]}, {
            Cos[Rational[143, 672] Pi], 
            Sin[Rational[143, 672] Pi]}, {-Sin[Rational[83, 672] Pi], 
            Cos[Rational[83, 672] Pi]}, {-Cos[Rational[143, 672] Pi], -
            Sin[Rational[143, 672] Pi]}, {-Sin[Rational[149, 672] Pi], -
            Cos[Rational[149, 672] Pi]}, {
            Cos[Rational[41, 672] Pi], -Sin[Rational[41, 672] Pi]}, {
            Sin[Rational[3, 32] Pi], -Cos[Rational[3, 32] Pi]}, {
            Sin[Rational[11, 224] Pi], 
            Cos[Rational[11, 224] Pi]}, {-Cos[Rational[19, 224] Pi], 
            Sin[Rational[19, 224] Pi]}, {-Sin[Rational[19, 672] Pi], 
            Cos[Rational[19, 672] Pi]}, {-Sin[Rational[3, 32] Pi], 
            Cos[Rational[3, 32] Pi]}, {-Cos[Rational[85, 672] Pi], 
            Sin[Rational[85, 672] Pi]}, {
            Cos[Rational[71, 672] Pi], 
            Sin[Rational[71, 672] Pi]}, {
            Cos[Rational[139, 672] Pi], 
            Sin[Rational[139, 672] Pi]}, {-Sin[Rational[29, 224] Pi], 
            Cos[Rational[29, 224] Pi]}, {
            Cos[Rational[1, 672] Pi], -Sin[Rational[1, 672] Pi]}, {
            Sin[Rational[51, 224] Pi], 
            Cos[Rational[51, 224] Pi]}, {-Sin[Rational[109, 672] Pi], -
            Cos[Rational[109, 672] Pi]}, {
            Cos[Rational[45, 224] Pi], 
            Sin[Rational[45, 224] Pi]}, {
            Cos[Rational[25, 224] Pi], 
            Sin[Rational[25, 224] Pi]}, {-Sin[Rational[13, 96] Pi], 
            Cos[Rational[13, 96] Pi]}, {-Cos[Rational[9, 224] Pi], -
            Sin[Rational[9, 224] Pi]}, {-Cos[Rational[3, 32] Pi], -
            Sin[Rational[3, 32] Pi]}, {-Cos[Rational[33, 224] Pi], -
            Sin[Rational[33, 224] Pi]}, {-Cos[Rational[139, 672] Pi], -
            Sin[Rational[139, 672] Pi]}, {
            Cos[Rational[37, 672] Pi], -Sin[Rational[37, 672] Pi]}, {-
            Sin[Rational[51, 224] Pi], -Cos[Rational[51, 224] Pi]}, {
            Sin[Rational[151, 672] Pi], -Cos[Rational[151, 672] Pi]}, {
            Sin[Rational[45, 224] Pi], -Cos[Rational[45, 224] Pi]}, {-
            Cos[Rational[19, 96] Pi], 
            Sin[Rational[19, 96] Pi]}, {-Cos[Rational[31, 672] Pi], -
            Sin[Rational[31, 672] Pi]}, {-Cos[Rational[67, 672] Pi], -
            Sin[Rational[67, 672] Pi]}, {-Cos[Rational[103, 672] Pi], -
            Sin[Rational[103, 672] Pi]}, {
            Sin[Rational[13, 224] Pi], -Cos[Rational[13, 224] Pi]}, {
            Sin[Rational[31, 224] Pi], 
            Cos[Rational[31, 224] Pi]}, {
            Cos[Rational[53, 672] Pi], -Sin[Rational[53, 672] Pi]}, {
            Cos[Rational[79, 672] Pi], 
            Sin[Rational[79, 672] Pi]}, {
            Cos[Rational[131, 672] Pi], 
            Sin[Rational[131, 672] Pi]}, {-Sin[Rational[95, 672] Pi], 
            Cos[Rational[95, 672] Pi]}, {-Cos[Rational[59, 672] Pi], -
            Sin[Rational[59, 672] Pi]}, {-Cos[Rational[23, 672] Pi], -
            Sin[Rational[23, 672] Pi]}, {-Cos[Rational[95, 672] Pi], -
            Sin[Rational[95, 672] Pi]}, {
            Sin[Rational[23, 96] Pi], 
            Cos[Rational[23, 96] Pi]}, {-Sin[Rational[39, 224] Pi], -
            Cos[Rational[39, 224] Pi]}, {
            Cos[Rational[3, 224] Pi], -Sin[Rational[3, 224] Pi]}, {-
            Cos[Rational[55, 672] Pi], -Sin[Rational[55, 672] Pi]}, {-
            Cos[Rational[19, 672] Pi], -Sin[Rational[19, 672] Pi]}, {-
            Cos[Rational[13, 96] Pi], -Sin[Rational[13, 96] Pi]}, {-
            Cos[Rational[17, 224] Pi], -Sin[Rational[17, 224] Pi]}, {-
            Cos[Rational[29, 224] Pi], -Sin[Rational[29, 224] Pi]}, {-
            Cos[Rational[5, 224] Pi], -Sin[Rational[5, 224] Pi]}, {
            Cos[Rational[59, 672] Pi], 
            Sin[Rational[59, 672] Pi]}, {-Sin[Rational[121, 672] Pi], -
            Cos[Rational[121, 672] Pi]}, {
            Cos[Rational[13, 672] Pi], -Sin[Rational[13, 672] Pi]}, {
            Sin[Rational[41, 224] Pi], -Cos[Rational[41, 224] Pi]}, {-
            Sin[Rational[55, 672] Pi], 
            Cos[Rational[55, 672] Pi]}, {-Cos[Rational[121, 672] Pi], 
            Sin[Rational[121, 672] Pi]}, {-Sin[Rational[137, 672] Pi], -
            Cos[Rational[137, 672] Pi]}, {-Sin[Rational[79, 672] Pi], 
            Cos[Rational[79, 672] Pi]}, {
            Cos[Rational[7, 32] Pi], 
            Sin[Rational[7, 32] Pi]}, {
            Sin[Rational[17, 672] Pi], 
            Cos[Rational[17, 672] Pi]}, {
            Sin[Rational[13, 672] Pi], 
            Cos[Rational[13, 672] Pi]}, {-Cos[Rational[73, 672] Pi], 
            Sin[Rational[73, 672] Pi]}, {
            Sin[Rational[5, 32] Pi], 
            Cos[Rational[5, 32] Pi]}, {-Sin[Rational[33, 224] Pi], 
            Cos[Rational[33, 224] Pi]}, {
            Cos[Rational[89, 672] Pi], -Sin[Rational[89, 672] Pi]}, {
            Cos[Rational[37, 224] Pi], 
            Sin[Rational[37, 224] Pi]}, {
            Sin[Rational[115, 672] Pi], -Cos[Rational[115, 672] Pi]}, {
            Cos[Rational[33, 224] Pi], 
            Sin[Rational[33, 224] Pi]}, {
            Sin[Rational[145, 672] Pi], 
            Cos[Rational[145, 672] Pi]}, {-Sin[Rational[101, 672] Pi], -
            Cos[Rational[101, 672] Pi]}, {-Sin[Rational[17, 672] Pi], -
            Cos[Rational[17, 672] Pi]}, {-Cos[Rational[11, 672] Pi], -
            Sin[Rational[11, 672] Pi]}, {-Cos[Rational[47, 672] Pi], -
            Sin[Rational[47, 672] Pi]}, {-Cos[Rational[83, 672] Pi], -
            Sin[Rational[83, 672] Pi]}, {-Sin[Rational[27, 224] Pi], -
            Cos[Rational[27, 224] Pi]}, {
            Cos[Rational[39, 224] Pi], -Sin[Rational[39, 224] Pi]}, {-
            Sin[Rational[45, 224] Pi], 
            Cos[Rational[45, 224] Pi]}, {
            Sin[Rational[15, 224] Pi], 
            Cos[Rational[15, 224] Pi]}, {-Cos[Rational[15, 224] Pi], 
            Sin[Rational[15, 224] Pi]}, {
            Cos[Rational[11, 672] Pi], 
            Sin[Rational[11, 672] Pi]}, {-Sin[Rational[25, 672] Pi], -
            Cos[Rational[25, 672] Pi]}, {
            Sin[Rational[163, 672] Pi], -Cos[Rational[163, 672] Pi]}, {-
            Cos[Rational[145, 672] Pi], 
            Sin[Rational[145, 672] Pi]}, {-Cos[Rational[7, 96] Pi], 
            Sin[Rational[7, 96] Pi]}, {
            Sin[Rational[41, 672] Pi], 
            Cos[Rational[41, 672] Pi]}, {
            Cos[Rational[1, 96] Pi], 
            Sin[Rational[1, 96] Pi]}, {
            Cos[Rational[1, 32] Pi], -Sin[Rational[1, 32] Pi]}, {
            Cos[Rational[155, 672] Pi], 
            Sin[Rational[155, 672] Pi]}, {-Sin[Rational[43, 224] Pi], -
            Cos[Rational[43, 224] Pi]}, {
            Sin[Rational[33, 224] Pi], -Cos[Rational[33, 224] Pi]}, {
            Cos[Rational[83, 672] Pi], 
            Sin[Rational[83, 672] Pi]}, {
            Cos[Rational[127, 672] Pi], 
            Sin[Rational[127, 672] Pi]}, {-Cos[Rational[71, 672] Pi], -
            Sin[Rational[71, 672] Pi]}, {-Cos[Rational[5, 96] Pi], -
            Sin[Rational[5, 96] Pi]}, {-Cos[Rational[1, 672] Pi], 
            Sin[Rational[1, 672] Pi]}, {
            Sin[Rational[5, 96] Pi], -Cos[Rational[5, 96] Pi]}, {
            Cos[Rational[19, 224] Pi], -Sin[Rational[19, 224] Pi]}, {
            Sin[Rational[89, 672] Pi], 
            Cos[Rational[89, 672] Pi]}, {
            Cos[Rational[5, 672] Pi], -Sin[Rational[5, 672] Pi]}, {
            Sin[Rational[157, 672] Pi], 
            Cos[Rational[157, 672] Pi]}, {-Sin[Rational[113, 672] Pi], -
            Cos[Rational[113, 672] Pi]}, {
            Cos[Rational[3, 32] Pi], 
            Sin[Rational[3, 32] Pi]}, {-Sin[Rational[125, 672] Pi], -
            Cos[Rational[125, 672] Pi]}, {
            Cos[Rational[17, 672] Pi], -Sin[Rational[17, 672] Pi]}, {
            Cos[Rational[1, 224] Pi], 
            Sin[Rational[1, 224] Pi]}, {-Cos[Rational[53, 672] Pi], 
            Sin[Rational[53, 672] Pi]}, {
            Sin[Rational[37, 672] Pi], 
            Cos[Rational[37, 672] Pi]}, {
            Sin[Rational[155, 672] Pi], -Cos[Rational[155, 672] Pi]}, {-
            Cos[Rational[137, 672] Pi], 
            Sin[Rational[137, 672] Pi]}, {
            Sin[Rational[139, 672] Pi], -Cos[Rational[139, 672] Pi]}, {
            Sin[Rational[5, 672] Pi], 
            Cos[Rational[5, 672] Pi]}, {
            Sin[Rational[25, 672] Pi], 
            Cos[Rational[25, 672] Pi]}, {-Cos[Rational[65, 672] Pi], 
            Sin[Rational[65, 672] Pi]}, {-Sin[Rational[55, 224] Pi], -
            Cos[Rational[55, 224] Pi]}, {
            Cos[Rational[163, 672] Pi], 
            Sin[Rational[163, 672] Pi]}, {-Cos[Rational[127, 672] Pi], -
            Sin[Rational[127, 672] Pi]}, {-Cos[Rational[167, 672] Pi], -
            Sin[Rational[167, 672] Pi]}, {
            Cos[Rational[53, 224] Pi], 
            Sin[Rational[53, 224] Pi]}, {-Cos[Rational[41, 224] Pi], -
            Sin[Rational[41, 224] Pi]}, {
            Cos[Rational[29, 224] Pi], 
            Sin[Rational[29, 224] Pi]}, {
            Sin[Rational[103, 672] Pi], -Cos[Rational[103, 672] Pi]}, {
            Cos[Rational[41, 224] Pi], 
            Sin[Rational[41, 224] Pi]}, {
            Sin[Rational[109, 672] Pi], 
            Cos[Rational[109, 672] Pi]}, {-Sin[Rational[103, 672] Pi], 
            Cos[Rational[103, 672] Pi]}, {
            Cos[Rational[85, 672] Pi], -Sin[Rational[85, 672] Pi]}, {
            Cos[Rational[17, 224] Pi], 
            Sin[Rational[17, 224] Pi]}, {-Cos[Rational[5, 672] Pi], 
            Sin[Rational[5, 672] Pi]}, {-Sin[Rational[115, 672] Pi], 
            Cos[Rational[115, 672] Pi]}, {
            Cos[Rational[95, 672] Pi], 
            Sin[Rational[95, 672] Pi]}, {
            Cos[Rational[115, 672] Pi], 
            Sin[Rational[115, 672] Pi]}, {
            Sin[Rational[37, 224] Pi], -Cos[Rational[37, 224] Pi]}, {
            Cos[Rational[13, 96] Pi], 
            Sin[Rational[13, 96] Pi]}, {
            Cos[Rational[17, 96] Pi], 
            Sin[Rational[17, 96] Pi]}, {
            Sin[Rational[107, 672] Pi], -Cos[Rational[107, 672] Pi]}, {
            Cos[Rational[101, 672] Pi], -Sin[Rational[101, 672] Pi]}, {-
            Sin[Rational[1, 96] Pi], 
            Cos[Rational[1, 96] Pi]}, {
            Sin[Rational[55, 672] Pi], -Cos[Rational[55, 672] Pi]}, {
            Cos[Rational[55, 672] Pi], 
            Sin[Rational[55, 672] Pi]}, {-Sin[Rational[97, 672] Pi], -
            Cos[Rational[97, 672] Pi]}, {-Sin[Rational[17, 96] Pi], 
            Cos[Rational[17, 96] Pi]}, {
            Cos[Rational[151, 672] Pi], 
            Sin[Rational[151, 672] Pi]}, {-Sin[Rational[19, 96] Pi], -
            Cos[Rational[19, 96] Pi]}, {
            Cos[Rational[25, 672] Pi], -Sin[Rational[25, 672] Pi]}, {
            Sin[Rational[7, 96] Pi], 
            Cos[Rational[7, 96] Pi]}, {
            Cos[Rational[5, 224] Pi], 
            Sin[Rational[5, 224] Pi]}, {-Cos[Rational[41, 672] Pi], 
            Sin[Rational[41, 672] Pi]}, {
            Cos[Rational[29, 672] Pi], -Sin[Rational[29, 672] Pi]}, {
            Sin[Rational[47, 224] Pi], 
            Cos[Rational[47, 224] Pi]}, {-Sin[Rational[13, 672] Pi], -
            Cos[Rational[13, 672] Pi]}, {-Sin[Rational[11, 672] Pi], 
            Cos[Rational[11, 672] Pi]}, {-Cos[Rational[11, 96] Pi], 
            Sin[Rational[11, 96] Pi]}, {
            Sin[Rational[59, 672] Pi], -Cos[Rational[59, 672] Pi]}, {-
            Sin[Rational[23, 96] Pi], -Cos[Rational[23, 96] Pi]}, {
            Cos[Rational[167, 672] Pi], 
            Sin[Rational[167, 672] Pi]}, {-Cos[Rational[131, 672] Pi], -
            Sin[Rational[131, 672] Pi]}, {-Cos[Rational[1, 96] Pi], -
            Sin[Rational[1, 96] Pi]}, {-Cos[Rational[43, 672] Pi], -
            Sin[Rational[43, 672] Pi]}, {-Cos[Rational[79, 672] Pi], -
            Sin[Rational[79, 672] Pi]}, {-Cos[Rational[163, 672] Pi], -
            Sin[Rational[163, 672] Pi]}, {-Cos[Rational[17, 96] Pi], -
            Sin[Rational[17, 96] Pi]}, {
            Sin[Rational[95, 672] Pi], -Cos[Rational[95, 672] Pi]}, {
            Cos[Rational[19, 96] Pi], -Sin[Rational[19, 96] Pi]}, {-
            Sin[Rational[65, 672] Pi], -Cos[Rational[65, 672] Pi]}, {-
            Sin[Rational[151, 672] Pi], 
            Cos[Rational[151, 672] Pi]}, {-Sin[Rational[131, 672] Pi], 
            Cos[Rational[131, 672] Pi]}, {
            Cos[Rational[113, 672] Pi], -Sin[Rational[113, 672] Pi]}, {-
            Sin[Rational[85, 672] Pi], -Cos[Rational[85, 672] Pi]}, {
            Sin[Rational[53, 672] Pi], 
            Cos[Rational[53, 672] Pi]}, {
            Cos[Rational[19, 672] Pi], 
            Sin[Rational[19, 672] Pi]}, {-Cos[Rational[37, 672] Pi], 
            Sin[Rational[37, 672] Pi]}, {
            Cos[Rational[23, 672] Pi], 
            Sin[Rational[23, 672] Pi]}, {-Cos[Rational[11, 224] Pi], 
            Sin[Rational[11, 224] Pi]}, {
            Sin[Rational[19, 224] Pi], 
            Cos[Rational[19, 224] Pi]}, {-Sin[Rational[29, 672] Pi], -
            Cos[Rational[29, 672] Pi]}, {
            Sin[Rational[167, 672] Pi], -Cos[Rational[167, 672] Pi]}, {-
            Cos[Rational[149, 672] Pi], 
            Sin[Rational[149, 672] Pi]}, {
            Cos[Rational[137, 672] Pi], -Sin[Rational[137, 672] Pi]}, {-
            Sin[Rational[61, 672] Pi], -Cos[Rational[61, 672] Pi]}, {-
            Sin[Rational[155, 672] Pi], 
            Cos[Rational[155, 672] Pi]}, {
            Sin[Rational[73, 672] Pi], 
            Cos[Rational[73, 672] Pi]}, {
            Cos[Rational[13, 224] Pi], 
            Sin[Rational[13, 224] Pi]}, {-Cos[Rational[17, 672] Pi], 
            Sin[Rational[17, 672] Pi]}, {
            Sin[Rational[39, 224] Pi], 
            Cos[Rational[39, 224] Pi]}, {
            Sin[Rational[5, 224] Pi], -Cos[Rational[5, 224] Pi]}, {
            Cos[Rational[11, 96] Pi], -Sin[Rational[11, 96] Pi]}, {-
            Cos[Rational[115, 672] Pi], -Sin[Rational[115, 672] Pi]}, {-
            Cos[Rational[53, 224] Pi], -Sin[Rational[53, 224] Pi]}, {
            Sin[Rational[13, 96] Pi], -Cos[Rational[13, 96] Pi]}, {
            Sin[Rational[55, 224] Pi], 
            Cos[Rational[55, 224] Pi]}, {-Sin[Rational[157, 672] Pi], -
            Cos[Rational[157, 672] Pi]}, {-Cos[Rational[45, 224] Pi], -
            Sin[Rational[45, 224] Pi]}, {
            Cos[Rational[47, 224] Pi], -Sin[Rational[47, 224] Pi]}, {-
            Sin[Rational[19, 224] Pi], -Cos[Rational[19, 224] Pi]}, {-
            Sin[Rational[53, 224] Pi], 
            Cos[Rational[53, 224] Pi]}, {-Sin[Rational[11, 224] Pi], -
            Cos[Rational[11, 224] Pi]}, {
            Cos[Rational[55, 224] Pi], -Sin[Rational[55, 224] Pi]}, {-
            Cos[Rational[51, 224] Pi], 
            Sin[Rational[51, 224] Pi]}, {-Sin[Rational[23, 224] Pi], -
            Cos[Rational[23, 224] Pi]}, {
            Cos[Rational[43, 224] Pi], -Sin[Rational[43, 224] Pi]}, {-
            Sin[Rational[7, 32] Pi], 
            Cos[Rational[7, 32] Pi]}, {-Cos[Rational[13, 224] Pi], -
            Sin[Rational[13, 224] Pi]}, {-Cos[Rational[1, 224] Pi], -
            Sin[Rational[1, 224] Pi]}, {-Cos[Rational[25, 224] Pi], -
            Sin[Rational[25, 224] Pi]}, {
            Cos[Rational[51, 224] Pi], -Sin[Rational[51, 224] Pi]}, {-
            Sin[Rational[15, 224] Pi], -Cos[Rational[15, 224] Pi]}, {-
            Cos[Rational[55, 224] Pi], 
            Sin[Rational[55, 224] Pi]}, {-Sin[Rational[43, 672] Pi], 
            Cos[Rational[43, 672] Pi]}, {
            Sin[Rational[25, 224] Pi], -Cos[Rational[25, 224] Pi]}, {-
            Cos[Rational[109, 672] Pi], 
            Sin[Rational[109, 672] Pi]}}}]]}, 
      TagBox[GraphicsGroupBox[GraphicsComplexBox[CompressedData["
1:eJxdmnt0TXcWx1MqKEpGQ1rUqyJojY5VtKZre1artGhF4zGr9Rgiy7tKLSLT
iHe9aav1Fs9VVQ1tCZsI47FKiCAhIiQ3r3vv0ZrQeowxa/b3N2t9/2mXxb33
nPPbe3+/388+jYeO6zeiQkhIyPrH//nv/5vX79qpVuQkGZDcLrzkkacdemck
5f+0UL5O260vP/6z/b3i7xvvaTvm3cgbMnRqXIJvYKksfnLNrNo5B6Vg0881
G5zwNP7LXe+FFuVLzQvjX60+u1S+afRWk7gJQfmlwXb/4J8ydWSD+NbVvC+k
6SCNOPrQ04GjLs5vM+KGzPlTyokWfy4V+33F789oEVo3qsFhad1owMLMQ54+
P3R4yrdzg9KvR5/YUZGZ+llOm6H3t12SdUe+Xrz5QEB2S7B+wx2edJ9/5+Gb
09PcdeE67XOC7wmMjnl90eH1Mrb2F1Fr7nu4PsX1JfeM7rZt0w258nFe9UsV
SqXuxNOZrT49IMurdJ2xO8PTir2ubIvemi8psUsefLW7VKZs+bHZtJig9B61
/ePrb13QyB9z1w5725Mz7Z6+nLH/lMydGZb+0XOXZGXVH7qsvxSQqM13NrQq
9/SPH5L+MrzvDikYPWdrylpPpqef+uP1nUfx3NxzxO/iOjrXDY9LSC2Wiw2q
Nrvdq0Bnr1qanv/aGY0ccbFLlwhPK42dO/XsOz6dGLEw+a1ffbIlvsn+Ia/8
U1uvnTum/VRPx7/2pu+FxUVSoco3EZe2FuLPan+Wyrl9oi6keDJq6bfPlvY6
IpXWZbUOXXFecl46Ht15XdCdC84J/84+p/h39jmtuav/xBrtL8uOpfGJ/14b
kBdTWqRuqfuzRDY7t+nzy57eXfdVdueR+dK1/sOsRTmlsuKTnB5XOgUl8+cN
6uVc0G7V/lrSbl6yfLx19n39/fHv/nSm7d78G7LKn9vTyyrBeSrOc2erbr2r
dfTkwNrxHZr6TrvP4XuuTOh4cfnBPF3S62zDz0+WSaw/omXDxtdlwPF3HnXa
VCa3wkJ6NtpzTR9W+T34xjN+V2dWd6h3Rb2HNbpf/TWvTD4NORnftkOetlpf
vOxObrZmDxxw7JnuAf3+YMKvezr4peOd0A5DWl3T98c/WlW5PEdjqgSfvFop
gPtX3D+dF9cPvk/t+/Cc8NzU7ts9B7svxX2+O/G3D0cOPaErGq4LvRfr6b2/
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
         "], {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
           ArrowBox[CompressedData["
1:eJxF2HXUVUUXx/GzD2GQKg2idCMmICrdDUp3N9Kg0qGSFiogpdgtYHcAJmEQ
KqAoICo8dKv79+7vWu8fd33WPM+558yZ2XvPzC3Wa3ibYWmSJBmZkkRa8n8z
YWb+lgUv5H8X4MVckxUv4tpsmIf/5cC8fDc75uOeOfES7pEbL+MZufBS7p0f
S3OvgliGZxXAsty7EJbgXkWwFM8qjCXpw5VYkWcWx8r0qRhW4h0vx3K84xVY
nncsihXo+1XYnL5ejS15lyrYgr5fg63o63XYmne5FtvQl3rYkGc3wMb0rT42
4l1rYxPerS42493rYFPGsAZ2Ycxuxm6M6U3YlTm6BTsyR7WwM3NUEzsxhtWw
HWN4I7ZnDKtjB+boemzLnFTF25izG/BWxr4XPsdY98YXmIs++Dxj3xtfZKz7
4MvMRS98ib50x6d5dg98lr71xGd41x64kHfriY/w7t3xYca+Lw5mrPvhEOai
Pw5l7AfgMMZ6IA5nLgbh7UnEQj8cncTc98exScRGXxyTRKwNxBFJxNYgHJVE
7A3AkUnE5KO4JIkYXIyPJRGji3BpEjG5AJclEYP344okYvQ+XJ5ETk3ElUnk
0GR8PIkcm4RPJJFT03FVEjk1E59KIqdm4JNJxNgsnJtETN2D85KIubtxfhIx
PAXvTSKGp+GcJGJ4Ks5OIkfuwFeSyIm78NUkcuZOfC2JHByHDySRcxPwoSRy
cjw+mEQszUwj5qanEWsz0ojhe9KI9VlpxPjdacx1I4uYaGARCw0t5rS+xdzX
tZjzehYxeW8aLksjJmfj8jRicg6uSCMm56L+r5ich/q+YnI+6nrF2KO4JI2Y
WoSPpRFzi3FpGjG8EPV/xezDqO8rph9BXa+xnIIL0hi7aXh/GmM7Fe9LY64m
4gNpzM1kfCiNuZuED6YRmyNQ/VAsjkL1Q7E6EtVvxc4w1DgqVm5HjaNiaThq
3BXLg1HjotgdihoXxfYQ1Dgqlgegxl2xOwg17ortgah5Ugz3RcWHYrY/Kn4U
0/1QcaQc6YW6XjnSB3W9cqQ36nrlenccl0Zu98QJaeR+DxyfRsx3wTvSiPFu
eFcaOdAV70yjxrbDjmnU1A7YOY2a2x47pVGrWmHbNGpTG7wtjdrVGm9No6bV
RsWPalpdVPyoptVBxY9qWj1U/KiGNUDFywrlGSqeVNNuQeWtalotVF6rptVE
5bdqWg3U9aphN6OuV427CXW91qxqODqNNepGHJvGGlYdx6Sxhl6DzdNYM6/D
lmmsqddiizTW0OuxSRprZlVslsaaegM2TaMGXoUN06iBV2PjNGpgFWzkrub6
1Yz7asZzDdetYX7WMO5rud9a5mUt4/26WwrHoeLpDbcEjkfF3ZtuSZyAire3
3Io4AlVf3nYr4UhUXXnHrYyjUPXnXbccNkTF43tueWyMisP33QrYCBWvH7il
sR6qvnzolsH6qDrzkVsWG6DqzcfulTgR9V6fuMVwEqr/n7rFcTLqfT9zL8fu
qPFc5xbFnqjxX+9egT1Q47zBLYKjUfPzuVsIx6Lm8wu3MI5BzduXbn4cjHq/
r9wCOAT1fl+7BXEo6v2+cfNgc1S92ejmxRaoOrPJzYctUfVos3sZtkKtg1vc
S7A1av381r0U26DW0e/cnNgENU7fu7mxGWqcfnBzYVPUOG11c2A7VL3f5mbD
9qh1YrubHTug1osd7kXYDbVO/OhejF1Q68VP7oXYFbVu/OxmxTqo9WqnewHW
Rq1zu9wsWBe13u0m3mQJ1PW/EG+yFOr6X4lbWRL13D1uiuVR+fqbmxkroPL1
dzcTlkPl617us5d8kqqb+7jPPvJJqn7u5z77yUupOvqH+6+FBWgrrg8kyf8O
9QeI3wPE9Z+uYX5UXP/lnrDwHCqO/nZPWngeFS8H3VMW/oOKr0N8/xD9ksr7
DL6fwfMzyO/DfP8w/ZWqB0fc0xamtJVfR90zFmairfw65p61MDNt5ddx96iF
5WmrHp5wj1lYgbbq3kn3uIXlaKtOnnIzLDyPWodOu0cs/Ae1Dp1xD1t4DrUO
nXX/trASbdWPc+4hCyvTVv047x60sCJt1Y9/3L8srExb+8F/3QMWVqStfaF+
8PnTwkq0tT80xY6FZ1H7xNTdZ+EZ1H4xk7vfwtOofWNm9zcLT6LWwyzuXgtP
odbDrO7vFp5ArYcXuL9YeAy1b7rQ/dXCo6j90kXuHguPo/ZVF7s7LcxA7WOy
ubssPILav2R3d1t4GLXPycF7yb9R63JO3kseQq2/uXgveRC1Xud2f7TwV1S9
v8T92cI9qLp+qfuThb+g1oHL3B8s3I3av+Vxt1q4C7WPy+t+b+FO1P4vn7vF
wn2o/Wx+9zsL96P2tQXcby38A7W/LehutLAMbdWxQu4mC0vTVh0r7G62sCxt
1bEi7jcW7kCd5y53v7JwG+ocV9T92sLtqPPeFe7nFv6IWseudL+w8CfUelXM
/dLCn1HrW3H3EwvL0NZ6VcL9zMKytLVelXQ/tbA0ba17pdwPLSxFW+Nf2v3I
whK0NV9l3I8tLElb81vWfc/CvLS1npZzP7AwH22tp+Xd9y3MQ1vraQX3XQtP
oc6pFd23LTyJOq9Wct+x8ATq3FrZfcPCs6j8usp9y8IzqDyq4r5p4WlU3l3t
rrFwG+r8c437uoXbUeega921Fu5AnYeuc1db+ANqf3K9+6qFW1H7mRvc1yz8
HrVvqeq+ZOE61PmqmvuyhRtQ56rq7isWrkedv250X7DwX1Q/a7gvWpjQ1nvd
5D5vodHWONzsPmHhn6j73+KusvAvVH9quo9beADV/1rucgsL09bvDbXdFRYW
oq3fHeq4Ky0sQlu/P+i3oCUWPmfxm9AifMbiN6PF+KzFb0rL8GmL35Yewyct
fntaik/5p7HFPlNmR+1HmxAnTfi71L62KXHSlOuk9sHNiJNm3E9qv9vcIo/k
TlSda2GRR3IXqi62tMgjuRtV/1oRP3I7qn63tohDuQ1V79tYxKHcgarrbelP
W+JHKo9v5blyHSrvb6OfcgMqv9tZ1Cv5BWr+21vUJfklKl46WNQx+Tkqvjpa
xHlH/i+1T+xkEeedeI7UfrOzRb505jlS+80uzJd8AxVHXZkv+SYqHrsxX/It
VDx257ndGW+p80APntuD8ZY6D/Sk/z0Zb6nzQC/6Id9Grd+9eZ58B7Xe96F/
8l3Uut6X6+SHqHWoH9fJj1HrVn+eJz9CrXMDLPJ6APeROgcOtMjrgVwvdd4b
ZJHXg7i/1PlwsEX+yk2o9W2IRf7Kjaj1cKhFHZCbUeveMP8sxAzUeWm4+6CF
h1Hnpdvdhyw8gjovjXAfsfAoKh9Huo9aeAyVv6Pchy08jsrT0fRHrkOdk8bQ
H7kBdU4aS3/ketQ5aRzPlS+g4n08z5UvovJmAv2Xz6Py5g7/PIBfo/ZPd/rn
PvwGtU+6yz/341eofdVE/8zBzahz8iT3Xgs3oc7Jk93ZFm5EnZOnuHdb+B0q
fqa691j4LSpOprmzLNyCiqvp3H867yG1z51BP2fwHlL73Jn0cybjIQ9y7wX4
LH1bgM/RpwX4DPd4imc/zbO0HszlvnOZ57nMxzz6MY95nse8zqffciFqXhcx
r1Lr/mLmU2q9X0I8SO0XtCatQo271iTl21LGW2uY8nUZ87Wc/q+g/yvpv95N
dUhjoLqjd1e9+g9aUp2N
            "], 0.022611287634278027`]}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[1, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[2, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[3, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[4, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[5, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[6, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[7, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[8, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[9, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[10, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[11, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[12, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[13, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[14, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[15, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[16, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[17, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[18, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[19, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[20, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[21, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[22, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[23, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[24, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[25, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[26, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[27, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[28, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[29, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[30, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[31, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[32, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[33, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[34, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[35, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[36, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[37, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[38, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[39, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[40, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[41, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[42, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[43, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[44, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[45, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[46, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[47, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[48, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[49, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[50, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[51, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[52, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[53, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[54, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[55, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[56, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[57, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[58, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[59, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[60, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[61, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[62, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[63, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[64, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[65, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[66, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[67, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[68, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[69, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[70, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[71, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[72, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[73, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[74, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[75, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[76, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[77, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[78, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[79, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[80, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[81, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[82, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[83, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[84, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[85, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[86, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[87, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[88, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[89, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[90, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[91, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[92, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[93, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[94, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[95, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[96, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[97, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[98, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[99, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[100, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[101, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[102, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[103, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[104, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[105, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[106, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[107, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[108, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[109, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[110, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[111, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[112, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[113, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[114, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[115, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[116, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[117, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[118, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[119, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[120, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[121, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[122, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[123, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[124, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[125, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[126, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[127, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[128, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[129, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[130, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[131, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[132, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[133, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[134, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[135, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[136, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[137, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[138, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[139, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[140, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[141, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[142, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[143, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[144, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[145, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[146, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[147, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[148, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[149, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[150, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[151, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[152, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[153, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[154, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[155, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[156, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[157, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[158, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[159, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[160, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[161, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[162, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[163, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[164, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[165, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[166, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[167, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[168, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[169, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[170, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[171, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[172, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[173, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[174, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[175, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[176, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[177, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[178, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[179, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[180, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[181, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[182, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[183, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[184, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[185, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[186, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[187, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[188, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[189, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[190, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[191, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[192, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[193, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[194, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[195, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[196, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[197, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[198, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[199, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[200, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[201, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[202, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[203, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[204, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[205, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[206, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[207, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[208, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[209, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[210, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[211, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[212, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[213, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[214, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[215, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[216, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[217, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[218, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[219, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[220, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[221, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[222, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[223, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[224, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[225, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[226, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[227, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[228, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[229, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[230, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[231, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[232, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[233, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[234, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[235, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[236, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[237, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[238, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[239, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[240, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[241, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[242, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[243, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[244, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[245, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[246, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[247, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[248, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[249, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[250, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[251, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[252, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[253, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[254, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[255, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[256, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[257, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[258, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[259, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[260, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[261, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[262, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[263, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[264, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[265, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[266, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[267, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[268, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[269, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[270, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[271, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[272, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[273, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[274, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[275, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[276, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[277, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[278, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[279, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[280, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[281, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[282, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[283, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[284, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[285, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[286, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[287, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[288, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[289, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[290, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[291, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[292, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[293, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[294, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[295, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[296, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[297, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[298, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[299, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[300, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[301, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[302, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[303, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[304, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[305, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[306, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[307, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[308, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[309, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[310, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[311, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[312, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[313, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[314, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[315, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[316, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[317, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[318, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[319, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[320, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[321, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[322, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[323, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[324, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[325, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[326, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[327, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[328, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[329, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[330, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[331, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[332, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[333, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[334, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[335, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[336, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[337, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[338, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[339, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[340, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[341, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[342, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[343, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[344, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[345, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[346, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[347, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[348, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[349, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[350, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[351, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[352, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[353, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[354, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[355, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[356, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[357, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[358, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[359, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[360, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[361, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[362, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[363, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[364, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[365, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[366, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[367, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[368, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[369, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[370, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[371, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[372, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[373, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[374, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[375, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[376, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[377, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[378, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[379, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[380, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[381, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[382, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[383, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[384, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[385, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[386, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[387, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[388, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[389, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[390, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[391, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[392, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[393, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[394, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[395, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[396, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[397, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[398, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[399, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[400, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[401, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[402, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[403, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[404, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[405, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[406, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[407, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[408, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[409, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[410, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[411, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[412, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[413, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[414, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[415, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[416, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[417, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[418, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[419, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[420, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[421, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[422, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[423, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[424, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[425, 0.022611287634278027]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[426, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[427, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[428, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[429, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[430, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[431, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[432, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[433, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[434, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[435, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[436, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[437, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[438, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[439, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[440, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[441, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[442, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[443, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[444, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[445, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[446, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[447, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[448, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[449, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[450, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[451, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[452, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[453, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[454, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[455, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[456, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[457, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[458, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[459, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[460, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[461, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[462, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[463, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[464, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[465, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[466, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[467, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[468, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[469, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[470, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[471, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[472, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[473, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[474, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[475, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[476, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[477, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[478, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[479, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[480, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[481, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[482, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[483, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[484, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[485, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[486, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[487, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[488, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[489, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[490, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[491, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[492, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[493, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[494, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[495, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[496, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[497, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[498, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[499, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[500, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[501, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[502, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[503, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[504, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[505, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[506, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[507, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[508, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[509, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[510, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[511, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[512, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[513, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[514, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[515, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[516, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[517, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[518, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[519, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[520, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[521, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[522, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[523, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[524, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[525, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[526, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[527, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[528, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[529, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[530, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[531, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[532, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[533, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[534, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[535, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[536, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[537, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[538, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[539, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[540, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[541, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[542, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[543, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[544, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[545, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[546, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[547, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[548, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[549, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[550, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[551, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[552, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[553, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[554, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[555, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[556, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[557, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[558, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[559, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[560, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[561, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[562, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[563, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[564, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[565, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[566, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[567, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[568, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[569, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[570, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[571, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[572, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[573, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[574, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[575, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[576, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[577, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[578, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[579, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[580, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[581, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[582, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[583, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[584, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[585, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[586, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[587, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[588, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[589, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[590, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[591, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[592, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[593, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[594, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[595, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[596, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[597, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[598, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[599, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[600, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[601, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[602, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[603, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[604, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[605, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[606, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[607, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[608, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[609, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[610, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[611, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[612, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[613, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[614, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[615, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[616, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[617, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[618, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[619, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[620, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[621, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[622, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[623, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[624, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[625, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[626, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[627, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[628, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[629, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[630, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[631, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[632, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[633, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[634, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[635, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[636, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[637, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[638, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[639, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[640, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[641, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[642, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[643, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[644, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[645, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[646, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[647, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[648, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[649, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[650, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[651, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[652, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[653, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[654, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[655, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[656, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[657, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[658, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[659, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[660, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[661, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[662, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[663, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[664, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[665, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[666, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[667, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[668, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[669, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[670, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[671, 0.022611287634278027]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[672, 0.022611287634278027]}}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    FormatType->TraditionalForm,
    FrameTicks->None,
    ImageCache->GraphicsData["CompressedBitmap", "\<\
eJycvQd4XOWV/z+2epcl2ZK7bOveOy6AKabbkFCs0ciUbEiyyaZA2IQWsiFl
KdZoxsCGhE1I2RSWNDYJJIRAqKH3DsamG2wMxtjYxsa9W7q/8znn3JFMTJ7n
//fzWGU05d73PeV7vqe8c07/1ln//rXTv3X2l09vn33B6f9x1tlf/mb7iV+/
QB4qGZJKDZnG//ZUqfwcp1L/8GW/VOr/z8/f068jD5Av35b/f5D/j8j/RfL/
Lf++4P/D769/6PeF8v8n8n8Gn/J9+8i8fp26r49cOugt35P/O0qGDumrKB0S
Nw4bHo+ceEQ84YBPxaMmzYxHDB8ZD6utjBvq6uKgrTwe11of19bWxcPqa+LK
2hFxY015XCe/jxleH0ejKuLGBvlbXVU8vKU1HjPpyHjiAZ/qHzlx5o6q2tbV
H3Ere116wS79Yv16MJf+Q/n//KC7fkf+by0pq+qrHTY+HhUcH7dNnBXXN0+M
m0ZNj0dOmhXXDhunl9Yy5qC4YXgUT5359fhfvrMo/kzPiviTFy6O9zv22/HE
MSPj0SOGx9MmDI/PPKZKfh8lv7fEwxsq49aWpnj86JHxl2dVxgdMGh6PkudN
GN26z/epbxwV1zWO1mVqkKWory6Lj0lXxt3TK/rHNpfsLC0Zss5vNTWUm06V
PDr4du0+dXtSqdbBt/uu/F8v/3cOHTqkv6KyurjCbcNHxK0TjownTP90PCbd
FY8OT4j3//hFejn8fNwX/6o/N43cL44O+3d9TC47VcKFpxr00oMps+JwVHU8
vHVinD+lJp49vTlukZ9H1A+Nhw1vj4+d1hx/71O18Yi2CfK8mrgjOmzQe4zQ
9xiNdIwYGXcc/HldzqitJP6P2dVxx+iGuKneJGCUS9KgLepvnTBzl0jDuy4F
g5fDliH1Df06avBqrGUl6qqG9Dc2inxOOAK5isd2zIxbmttEBkt1s46YMnKf
m5SsytjJ2Xj68XP1cVaudcJRcfv+nyzTm6qLOw78dDx5VGncODyMzzuuKv7C
0dX6c0vt0LhxRBh/+vC6+Dtd1fEw+XnK6PK444BTUvbakfHE6Z+Kxw+vivf7
2H/q4k4aURKPa2v+p7IzeLNqGsfFzaMOYLH6RW53lJXXrvjQ4viypL6mX5uS
1eEpy+T/9qElZf2VNS0q8k311fHYthH7/NgRw9virx1fHQfpw/mbbWm1/jlZ
oIkH/mscHnqmvoyfW9uP1qs99ZsvJVLEuwaTj4yDkTUiRe1x4dSa+Lj9kaL2
eESdSdEx01riK06riVvb2kWKauMgOpS3SCUfyXuMD46MD5lQrh/HBoxskMVu
aR8sdfb0YXtdIT+P6jhOb2hG95ViB44T3f+YXOVsEbQJ/dVV1bvKS4ZgM653
wZoxsHipc/RrXWIZn8KklIqe1dYPj9smmMwi36Pb2uJwZKXoRWk8asJgHSi1
yxEJPDZdhiiYJES6Xh0HfyEeE3XGB57Qqzc5OpodTznyPF3DyUeeyyLo2n7i
26/qFiEhI8X67D+xJT5jZqVan9EjZDHFGrU1N8ZjRo6KT5fHD+xoUvWfMKp5
n+8zPWiLDwsb4/2RQtmcljqT3L2ltekf9nf8fp/Qa+M9Duq8VH/mmlvGzojr
RG1b249iSfpEdTdX1bY96qt5ri3mV/VrQyKQCOOO8tIhfXWVQ+KGhmFxXdOE
fQri4VNGx9PHlcbjp53sV1aqan1UUBaH6UMHpG1ycRHbJs50tblZ33JY29T4
41+4MT7ilJ/GIzs+Lho9Mx4/9ZS4bfyhcUtTc9xQWxU31tXGHeK5RjaL56qp
1d+r6kaIqcZz1coC18seV4hHq5XnV8rrmuLRE2bE7dNOlj0/NA7HtsSZ/cvj
dHRAPOmgz+lmtYqdbBmxL6lu1WsdvPn8jNhy3ceffmtxoQf//A9upXnSzorq
pnc/bAJsqVNn6teaZMUXo/6VNcP7R7QjuqJEk45RL1jf0qEeckBsy/QjQrFQ
4qHike0zBl36x2yZxWQfOrE0PnLK8H3KWG1Te1xd1xY3j54et44/LK6uHxlX
1Q6PR4w/Qpe+eeQBcVllQ1xW1RBX1A2PKxtGxdXN7fpdfu+rbBjZV9XU3i+/
98vv8n1kv/y9v7J+ZL/+vX7kjsphY/eUVjb0V5SXxcNqhsZTR5fGB02oEGva
LMZhgm5tnXjamsrSeFhD4z/VicHiMrLjYyLvn8Xox4d0fTdxjYN/9rWoKjqJ
NlnLhqbRcW3j6P7GYa1I9iPJdvy7bccZ+rWW7bgn2YomMeYfBT6Q2pEdxyUW
A7P3uSMq4zGt+74D7q5FDFAoQjxqeHPcJrs2furJsvqH9tfWNfWVlZVtKCmt
XDa0tGKR/H+upKzylSElpetKK+s2VtS13VrTEjwy7vAztoRduf6wq7c/6uqN
5fsO+f5elJn7fpQprJTf5e+9u6OuXB/Pk7/xPTWUV6TG9YUZHs/3TzjmvD0j
pma314+ZvqdmeLCrsq61r7y2RXdRdnVPRX1bn3xuPxKA8rU0tYgy2vWOGHeY
rOJYkZyDVFmxC9js6SfkdPUBK+wM9z7l6PMHXHONGqngkC/G48MBzNHa0tI/
tqlkV3XFkKWDdcR2I/VF/VqV6MgbAIjSsiqR11G6qqjn3ntuJn1UcIJsXDBg
fVp0/0Ixp/i4yaNE7GqbZPHNQowWryDi2F9fUyEeuHzD0NLyHRX1rbuqho19
p6y66a3KuhGvNow9eNW4mWctCzP528Ns79BbWdOD75BfV8k6r5SHXpB1f0Z+
fjzM5mQf8rvl/x7737szyOS3BF29D8jzPhdl8yPTsy/LBl2FF+X3LUE2L/uX
e16e937Qldtpeyevy+S3yp7tCjO926Nsbqf8bUeU7d1t753bxvu2H3PeruaO
Y3ZWDhvTV+F7WF4rGllRFldXVcX1ounDWqeKJZE9G7k/Rkm04Vi1KMjoIdkr
ElTgK1i/l/FDrsFEo9OdorUT43EdR8aTpmtY0d/c3LZD/EPiSb5ke/Z5/VrN
nt2LIgnK7zeUf4JIyrFizwL1bXtJx3ABX/+q5m5fygMmxKWOHFbZX15Zv0v2
hzhk6ZAhQ98qrWp8vWHcwc+MO+rM+bIwd8mi/F0Wa0bYWUgNNYRwiizg/bI5
34u685eHnbm75Xlv+QKulZ8XRJn8U7IRsgn5zWFXjylNn2xBqm6XPC4KlV8r
338rG3uy/L18ymm9p4TdvRvDbH61PPdaeY/zgjmF12QTZdN6U0NRzdT+qN06
+dvD8rqfhJme/KTZhbfl7/JY7gn5flGQzc2Nunv4bK5FPju/afysc3Y3d8za
Ud08YbfIX79salxRURHXVJTE9XUNqnys0Qmn3/aRUES91Jf+pvI+dXRZ3Ng6
ZZ82bNzItv66qqG7JMAZrH22g6nP6tf6wfgKqyhA4qPjlilHnbc3yKzTD0Xi
EveJ5IFVRow/PB7R3Bx3tJb2t9SX7RBfs6Rx/IwT68cenCrRj+76pEj7Yln8
5bIwKN1Tsmj/KlrAH9mEo2RRH1Ht68rfIwt4gzz/Gtnoh+Tnj4dzLrkg7O55
xza5900Rih1siLz+A3kvtGx7ZFq6STSTjVwuv78iv/O8DfKcDfLebAzP2Sp/
W4bmifZiWT8QzXxC/oZgvR1lemVjc6+LJnMdx3R0F/5ThAMb8bPAvv8o7OxJ
Nv8dea+V8prN7TPP3TJ8SheWeGNZTfMeoP/wcTMk6j1YN3r4uEMFWZ2qa8ba
HTR7XlEh2kdUaUhWBNfm7gieG2oq42MnV8efP6qy/+OTy3e0NQxNlDT1Odvc
z+jX8Ym72ySBR9/Qkoq4tn7fAUcS57Dpk488+yNFD6SJbxjVcTy+QXxI/Y7y
mpbN9aMPWNwSHve3MYefvlHu/qWwq5Aq+de0qFjXt6KuwlOyc6zm94Ku/B2y
QutURbO5PwfZwkOykvK3/FOyYktl5W+X5x4SZS7+s6jrEvn9UXm/FfK6d+Xn
HwbZnl92ZHsXdHTn7pcdP0feUz4r/658l93ObZTdW6u724UE6E72Ywoi86V7
IvvbvfLZIgkiMdm82F21w3JNhcXymKiz7rJIZW69vMfbIik/le81rSd8s0de
x25fJa/ZJI/pfYjE3SfX3tORzYkU5pHWZ8cfddaixnEzHhJ3s7OsepiipIqK
qniYhE1jw+M0sDtqyggFrc3NI5CCxI8CDg+ZUBqv/klLvP2a4fFDFzXGx08t
j2srS3aWlQxZMDhUsm1OfUq/ViY2eceQoSVxeVlJ3NpQqnQBELkoR2fuFaSh
6ZMO+rciOh8h2g9E5DvOpLZhbFxe1YivXDd8cufr44/6KkDkXblhsbO512TR
sWtr5LEH5XcWJ1m8FfI4j90ri7LQVW2PgppsryxsDod6pzz+sjxPhCbHe2yX
x7fK76gwqvSkb8YqVfGMqHamd408d70Ixy5XXUAPP8v753YFGQVIe1A/+X2t
PH+rPHe9OFvUfbO8n2y2OtgEaPHa92RjXxYheN9Nxi7uSf6Gzb9PzMdi3+yV
5lv0+sAKv5HX/kc4pyBmKL9T3vstsfmXy88vy2vWts86b311y6RdddUV/WOa
SuKD28sMIgtArK4T0NU+KIAyvzxqokEYNv7nX6iLj542UqPEiUrQzBT9bYUC
3FxWWvTLtvmpTw5gqb/I/82VNSPElA+QME1NbYLTh8QT9ktizNHFOJh3rm8J
1W7DcFRW1vSXlZZsGVpWub2yYfSOpkkzV42fedZXRPvapnT1/lwW5mZZqP0E
mU4Msr1seo8s3h3y2K9Eo9Nh90XXyQKx8QVZkF9FOM2HcLvjn5cFFaHJ/ySd
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
H7JgSBUXj0RAzt3MnnRy4ZbAaoLwRCJMav4+ERgx8Lbj5bOibmqI8j+NuueJ
Z8izDSjUMvUAc0Rgsyq0CPirSmDaFmEmn/fcLOsEkF4r399UKlthiFaMDeXJ
qdbnfBm3GC5Vu/Cq/L7YOc4P/HLuDa3IQBBBfkEHKaSsW/mufNx+zHn99WOn
xxUVlXFl+dC4dcy0QcF7pUoX1hbWe1D+ZFddQ+v1RdOamqVfS5Hb3WJ/NSgv
ooApxf6KabMu+HD1txjYhrUV9a2UTWI8t8lFU2dKJdw2MWjJhSaMZD8lM6L8
4uE1d5UQPwmMxBBtV+XO6I3KPvXscSU2GGtGfJV76yQOwlCWqaUaAZp9I7Ty
K2wB2rLWnfm9bkcTr8Xar3CawDMLuaTo4m2nIPgo3tNYgBMhRrc7sGQLbw2N
ylkhb/mQJT40jN5gbKUmN+Io4V8tzawUU2B3vMGKf3qgsgjBYUYxvc95QRF4
SXBL7nl3CW969o7LXhkaIH7RrICyHO+b+VeqO3bW4x295U7P6wKos0pd4ciT
+hFWeLcHFzCWa30pKIJ6xFc72Z13TDOTSNjSyKqSbdz+emfaiT1Ypp2RYouc
WNlz+6vFotbU7Tuzj1WlqyKxmSeccRt0056y8mKK2EQ1dbTxm0UCnaaD4WNn
DKJJD1VbTSsVoNVTwpvLy0purRkeSkQy710Dnrrn3NQWNytJyA9nyO8r1cdl
NZWqVLNFOipy4ufz+DLQ0WL5/WU1fd351RL1CHZQLMHziJ5+EFhFVyLqANdf
y3MxT/CGcDk3i+/EDmAK0f0zOrK93wq6FbVhPt+VaxiqFUa1S6JutarAGkLi
a+Sl87mkwKrIKQZe48DwHLHMxpy2YmyBrXwK8SKGCiMvUf5lavTkinimfLrm
4hZZ5K4fQ8xIhhfCAuJNsyoiojACwOBUGSY31Ym4UMv2XqCRt66svE/+9CkZ
EIReNneEceYz/yi/fzGYk4Ppogh+eyKinuvbITg1qeXb4nTTLq+8kOcXPggs
QSYrpYb+9I5uJdveccuZkPQ4QYwzn/kmxsXiYCUQlR0IrZZwmdzXq14itiSy
pNw9jsR2tUTHx1UNo72k9hQNi4iaQJyJ3EIZFDPWIoWtE2ZuraptTQrpTHhT
Rw3g2g3Uw5SVlSv3cOCJhQ9lqW/07OUJ2sRTUVnTV1NVsb6quX3t+JlnbXVb
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
nbvBOBuldpJGLtajPTq5eIZskrwc0N5P0KaDP6JkE5mgIR6jzkxRan+fdy4E
eUAE8ZunS3g+IZxz6QnpzOWPOCMgQV3OBol291IurwVNxkRrSSrgiLnFvwk0
pZSnYkPLbn2rnsFveXH5O1FWT4J5Sh67NLT00Q+CzrzzKlrZRO5xvRUe5q3f
IqljzqjWv20F6oomk625Sq4bX84gms4pXRf+ILD3Wmj2WUVqucfo9wTWoUO0
dJerLe+D8+I7j9HfcV9gTYpDARGpg/U0vFAlRA9U8iabHMPyKdm4Vc1rd89S
L5HGNL/uVbwc7Ejla3Lqb5K25vaTcU4YV2DQp2EsQjt0h3zpBpNS5q7q0SRI
scTfWq9JyQWzXe9pGH1gX2X1MJ2Rx3EzzMPbV4BaU9+6IPVhHQ41puX8MYZt
/5P5X/3VDaPhnL4UzVZJQAoAmcrMyeWsjGxeAOgnqT9DMRcZM6bx3t/0ZJNM
4URZiscE3xoo1WmouZtMKrSK5dqifW+c7wIwP7Se121ODvZbEKb9ay6UVIvT
MHEZKznRR1hbX1ADV8OwQ/FO2rGFqX2YE3AjbQTV7+AjvNd8z6YQK/6IvhvT
qVaGSSQnliD/bwQZTQ3fGFgzRIJnGahL6/vLDrcp/MVrLg1sSCbPI+DCo9FY
oYJhn3EaqJ8iFIoGya/gSW8PB3qY0APkl/shqqA+wGuLtBIefQZ7gA9We+r6
6cjqC+CuID8QuivTNqqFMey/195QYwST2gJ27q82bqX38XSG+edaYsJW/DTq
1hPT3vOgSMxSz3fCbM8GN6ub3KTfLNHMBRIHM6Lmm86XPmPP773RzTrv95ZL
DPeQnNr0hEeLoIvlVpek5X6/FawFewEuwobhHr8UzKG6i+mtGqxxHbsCy5xw
OkDKDsztSEz9S372Es0c0F5I5T16HqDlCjDLDwXWN/+W9oR1JWfDFx53pMMc
4LudUEuGinAt2LGE9WDtc2GnypUWeYPX5HfsC1NpTcLLXq8ffQAHiGiDItPu
P9yK3zZxVl9FZe1VRZ1NjTH3a83DNcP1aEBeudfZU/slg8g48Wpz08SjYWtu
NDfSs965a+7tbx02qHVdaHOoGdJ7hQ5CscPWcMEc28HUKK96Vle+Q0NOxeKK
k5M2UUoAGN41T3zCs2kGo2Z6bklndO7L0sDcWb/ljHSA6PnBQIVqymZ7n1Tv
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
yEDp/tNcrCFiikBn+Ddls9uN4i0gnPKakhhXbwKRIWZgt9ESSCLx+7RSXUTx
OoBwBxhSPQS5qMYiZ5yZmf4sx/oJUw/RxNiXM8Pm17rZJvchBKCdj1om9aKX
7RyopwFToI3kcbWy8UyTQgVwX1Qw6qa6HI000TErN5k9Itq/ucunFZHczRKJ
9x0wrqwZQkxqPaBouqjP55YirzKlDu1/LBAQG1JbRENEb2LLNtjAuEi1WVGA
ZyRlsHK/dVYtvhqLyAPiO6i0Q02gKhjqBwFMz85MReC2zIZVbNBDLqkU/HyB
+SZp1TlYDcN49liozZ6FPWtxuQLDJZbhKebFyAJCv1Aw8GmdMHasUkngVaiU
edATW+hPHsNyhaQGQONMVZqaYqZ1ppetJmeu2PmGYkJL1Cz9DDH7SsM4cp1k
4gVbb9SzM5TlZg8vVfPzm/dJwJpSeZU6jSzP5WRstr0lIuwMueqy2ey0KJt8
JBjNUq85bk2/Fqlblc7F/Q6o61z8wqsNDfXmJayM5joNGTy0Onzfw6r9Bu9X
7dlnaLV3fyzMvtX+A4bv6ter24y9D/2vm7VlrCzDYXC9RM6SORtDrdel88PG
TXFMa0o7OzQCLlc/UMolW8THY12Xih1kUxuJceZS0uzCLTb0iBG3YHfRGD6g
NtmwH9bD2/eVqq6Vv5P4Q8fduWHGm+TXSu3f7izpYg/BVNmjjJfH5d2YA2+U
UPeuWOJjCgFAABQAiXL+4tQFU9803BVWOFE5j+luT8qBJYg++P0xXoxs9RYC
og4invToWzeaqob4kctcEaehu6xV14c9KntY/7KfPViw0gPJaYNhCwX84cXS
xDBeGwVSWoz4PozpzWmb/LFY6ri7IBk/nSeWiaVZY9xOoasAgyCgYsbmKlqq
SMooCxaNc4uEzsuO7pI1nOdrQNQVI4mAlRy+2Y/fPerEfqI//PRcxz6oIy/M
m5QgxzS7iqG1Wkt0mVm3qPyck3cK7vLdvP7oRqOkYFuw1kc5zYTwpVMp98sE
w3RBkBtfbDh2xRMwaTWxTHSnMrV4kUt0cEJfTPk3jwAclC0TOjZ/TMuERM8G
L/mEptpWTwg3mJ8SpENTDI+E03xJsbmDKcRmysys3pjbAEBwGW8O1yN+1QfI
rPUW/e15bXRSW6htUxolVTovGaR5IvyL+luZV1Q+3nFx1iLrwnXcnL4Xj3Cu
y02f6zwROrRvKLhcZqZxBcrnX85MB5ktt9QTVgLlHZldxzxniGmOysixH3rb
tMr9j1C7Yo/dLAw7aVfPHt2qPXsPrI7de6/qp943tPq1j/apTjp4aHXcmNHV
fv36vzRg9IHTXS6NVUzprD/IvfElj/t+eSqz6T1czHrRSK212Ji/lrl8MJfA
sygbU/JJsuJQIjBci3ya0LUuVADjI/oBFCW4ig7ukngy/Bvw1oLMRIj4N63Q
1G9e1LCZkgATfk5LPF720IlWQOZWHkqb7HXxJU2CDZ3vv3vvHhuNMzffGWaw
d1dl5outL8K41m/4z3g43KOZi/63+Uc87RIOCMtKNcOlKh6UWnOz9jBHwyRY
jWYGHoSJm9zYUitDaiJR2ldPpuN/px8vKxeN5RRStCM6YCuH+hvWAAwnOi0I
6GdZzqjciK0LgEq5HAtJQAIBITmtqVzqDmeazpE8lKXMr3jRBGZ53fCAAt9D
fTgcGd9JlIG1ON2hNNQ4CDtJakILIUXqEvGiMEM2Ae6B7yEAI6/GmoT0Fbvg
VmfMX+SKOXwuhAiuBT4gM0WjF8ev7evEiDdlVu3l/crtLJdjAHNHUIZfVNXW
kq/IFDjyPEoImmz8nyY/SduwlfnTgaBVsaBGbNNZyqzSjHnAbLi4qTCwTQ5G
v+6BxSrzMmq5fMsjvHXuHJd54cm7soVt7cxM6Y8dmZI3HX+mvLW7oMBvHRO4
19o0RF3Aq7BOrE8wk1HL556Qhpwl2ltZAexLTotgHgfrxLw+OJKYnp3qRabs
JK9WWe5r9TLBzMCB79ynOGjwiLl7mpxjkGN44z1dulTHDB9Q/caRvaqV4/pW
T/lU72r7Z/pWT/x47+q+Iwds6t5HPbP4YyqT7KTYxTzZvxh/WQZym4BPQ2SW
FiQ70WrKqtrlrK5AY8nLpScFMsLum+4DbJMTEq9llROWQFCOGP8Z0ccY3gia
Q26FXeJQcs5ZPdS28Yn3OZflpcwGYWq2n1ddIQaGzM48L+nQJyWmqeeg613y
wZKibgBJAJgg75gkI0H0eqjQAlInaiL7CWs7vdCivrKT8hbPe/pHo37UKsWa
yeieNTqewLz0VijSHDOpLjpkwwJjUIQ+u+hT1KbO87mqh3vx3BVbv1SYJLoq
qmhc54A9ZIz4jLDhZ2VGfGQHk0ReKuduVoBnca/zz3HiG7Ia/Um9XyDVaOYE
E9eu7pzd5LPTfwFMHetEbg7HWqsqicNzYtYydaG7J0KWaY3l9hsN5VArNtsN
qCE+j0NzSWYALfWGq7zKJw3LBhvC87D9vt0u6/jj9xl/3LQvq2NJU7xUPSQM
TClax0/T9oI0vMCv6UUnvJhRUFUuZZtNtcZ/HvZrblj42UaTa6gwDQBW4wty
WfDaWioBa2BoZgEkZy2SVftnbqK5/yw08acEroOHd40bqE0Fn+NqPV/aZIpt
chOzc41tFduJzVYWkAZ31dK8JDyAkP3JzFSdf6n4rblGbTi8OFlJ2QpLymRQ
1ljmpLpPtN1d50cpjPTlWakjWg4xPlwr/FpC89Xdeg0U3rvPyKHVfcd7++L4
w6r7jBLe+0yn4bE/Dl5BNtU4qkf14MKo6r6FD6u9YGx2ZPWgxtHVwqgeb3Tr
2Y8nstXz9EhzDilOUkSKubMmSKtN3mmbU/VWBm+8ZqZavKS3zH20P5cMx+MG
UNEgadMgDeNDHVhY3TZ/wp4bqTYe3Bub1GrYnuUcQ+Z6vMFHkXurJJ4eMEn1
/VpA6z8DpuAsEdjuMC9EuV7CT8jTGOQwgDSBxu0dnjgzQQLiEGbtFRF3jWWl
BLxo2iukUIZh9/rfYnMrF83xWeZ4zs1u7dhibluC6wMu47Ylj0bkD+cmvfg1
D1ti7hG7iVp4TCsGLmLmKn8PETpS3McsaWpzHV4FaTcVmwUFXJ7u7s+ZSUgr
M9AJsfBnna2xaZ7ROeTsmjpFmQOibEbQGcjYX7w/ixdAX2O/rPIWA1QHVni5
7AJHPKC/PV8QWiZ4eo4LimFb6ZRAldYhC0Kr9gszO5245yWW3FXAqGYWy4om
TXjX9gb7MgT+pGivPTLwKYseeOYd2wyVbjvTu6JZ5tMnCOnWNt3kPmuOwxhO
GR0I4YTDySQwAlHyZ7buaq/kAfgRyW0qlhT7VvwQC+y25TucyIv8HcOyIu3T
zdbJYTlBJuyqFaLj39Pvrsg0YVSH/HWjTbf7tckh8vd0FKSyFf5c7WjpkQMe
bXUjIUpDbj22+Hn8+PkpknnRZZ18qp38OpHRbOPqte5yfww3Gjb9m1179KkO
cog327t/deLePdKf/fTvwcPHP/82A2Oz4Ia8c+Vq8JBRW7v3HoSp3ekMAyPL
WGfoTvPrGgqGcYAGuswfrJiJmVIIoh092Z3GNKs85ixtKNQ7rYVB4ic4+7+m
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
q66MmptaJT8BJeyae0qU7WmPVl2YiUbPd4+vJhNlOzLRnGwp6zlZjAgLzvjs
wfzQ2LvVIt4zU7jjMvaUxZUBXdt0oNtodylRcUvgCTILybQA3oRv41s6g3MJ
Zc45pafK4vHd8YrUY/Hy1NpMc3Zd9+KLOFU8UE6vLGu2cmnC+NxwJj7RP2gp
gKJHHJhNpmAFWQmE6RUBBFCFVikCnhRh/LuinalDd/NV+kIKcMouxK1R2fIE
Y+QHv57Vk7xXSb2SPSrp6MQfG3+Ct0q9C5aOyiAG8lfZgaKUKGs4bxC8nWEP
EV6XgXQIfsbPFEE66mMRzwuLjSOW3UtTiVM/Udd7fKE8VRPFyxNRvAxiTm3U
0dIMtHdIp3x0tiO67TN10Un9qai9pTWa3dF4aI2Cpux0fduRW1364JNTe+Kx
v5HPlf7Bb6Perq2cFaVS6g4aXJgh352xp8VFFn3upI8XKfGHGPqIiDloHTR1
HTtVkardFS9Pbk5UtfywLFF5YW3nERfmBle9YIgt9YZv82l7RdFt3MAey0K8
Nh6WAtILyXDJXJ1b9fwwoI05prf8m0CpbJM2TMfwxveyxZ1NooP2tA1osA4A
Gvv8oiR5P7ngVf06g+Y74uiGMudHUg2d62HtnsjYst9HRxi8K9B1TE9YiTWh
X0moxzHsQt/JH4PwVEjWtDkfn44qSnz8Mufje1pq3PnLuIQgFfWHJQlBjd+D
G335XZnoA0srnZ/vidra+pxnaJEqtffI88kRd7tK5O4S368POvZ3Cp2E9i+/
dx+7GHdIJFKysP5wlQlQjeQJ7zAGoVovJ4kXIE3p6j8lamlum66pLNvqPMD2
TEsw1Zw7a6p3yaVSb2ZFQgqdiFFfiSgBU/uhui9Qn6FttRgFLmMwGDV85s6h
3ONPqXtNYGXsoZxumiTbvNYGDwkrDBpq0TAkm0zIxOhAwCy7zjDj5y2XKShg
U7ofsZO69SpXQV2PrqIhL8T8l5xdsdGW7gakUxEX7V16yd7anuP3uixvsjzF
/p42mfED2ceZSn15kP+uq66SBmf/Qg9cpaVNeenpldEZR9Q4d1AfNXUsEIg0
mardHY9X+OP8Pn26H5DPNf40705WzCpUVVEzgNpeICe5qmG2zKkXwbeD+f+L
o7M/cqPkmIdjrrTUJqJERXlUVp7ET2HBu5M1HVvTLcGWxuD0TT0nfRjhHeF7
ZYcEv1S+murePRJ4MrPGeR40hM6dtKsMdN9gsJeL0yObA12/gN8ExKd5vNuw
0HsN1H8iVNk1Sotf5/Kjli8IFOZll8Ez2WChB7wDPGYgOOfynaIjOjS227ng
t+i2VaQbdpclM7udv5osL4tHVTXNUXPnQnl2c499nxRt7+SO53dnorktFVE2
PGEG0qyUb+/pXxKdOS8R9Xa2R8l07d5Zs+JPxEqgTX2AsYvkc8YjUY8RkknS
0pWVxVN69Nmj8tw8412R+jJ5nozjzSRrLUUmR0tteZSuObDPWFffFlVX8hAr
C84zF1xdWKjINE5CGqqorN9T27NoR8+SD5NsPapDLKN+g6du6FxQsHYkHo4k
+W0XGzmwON0tpnWImDv48xr3/88FOgfFDBCEAhobeNY/GTzAz6iA/JDtbh4U
4dEPNAan/XdVc/aJVF33W8nq5j0UIny4h1VIOnusrExHtY29kr+Sj6KeW9rU
8F9nbk3dAe70gkWpqLEmddg42tDQUmiqzewur0j7g/chfWAfPjCM7iorm1UA
6Gl0x5Vj/+es7jJpsSBDp6qlKj/akxuI6usPzRmrqe90zr4raqitEmfv08Dm
7mMl805UxKddsjWVSDfACp+uyDS4O1NNyTbh0seJVF3nRHXbvImm4MypniWX
Tgue7cJqDqa27iOlPALHBl4bCXSbgUpAuCynJTz3gXTz3H3JquZCRWXdtPs9
bzojeTNeUbmnLFm12/15yn0gflGoqu+TybmaxjlR2+ylUVP3cYL6U2KWCmjo
MN6pcq3eIdlXc4HVRRe47KjGqLKqOapJV0RNDU1Rx+zjo74jzy+0aLA74Bzp
84hdMlPocI5+6z6elrOUqikciqdMkXNgtqNysi1tc6LW3pIwfKrWP+7bG+pb
DsjPfCpc25wrOvum7uNdMjRHr949MUTQnBMX+0xLzVRWqEonXO5XzV2drnA2
nUg3uuygtZDINPL/kxXpesimu9wd3l2WyEyWJdIFgkpL30kKfbvXZAJXpNrc
hyv/Sn7ne3XI3Pl03s87BXHID2j58He+L+NdTdGZZf7MmbU1NUT16fi0yx93
l8Vj60sfxqX6MD4mn2v9GSEbneLO0E5s6TnRObb2KOPs+5AyctUZ8DKziWNk
8r4+U+Fzo2jgst/LOyx1z4e7SmyuWs7kaXbnTpW7Rqp6yLvYOEdgXwHPYFXW
98hdPPjO8dR75i+X836oO4txzVv6yYM8UJP8e33bAjkHXLeXbp17zPsklTqM
J4qcJypUZTJvVyVnlSZ6eptjn5hJBfiX77iPR9zH25WJWVP1mVmFmpoGaea6
EyQUUjxKNX+n5u9HAQVNcDeltbaMvETNwjKGEndamkUYW6FJHgo35Z1kQ/yN
654//I437pyP3BS3IV6PiHUE5xwkH1Ve/LfWvpNLt9l3zx8SoMLfSrrZmAkH
lN9K1uryI1wJCP4r7katLrHgT+ot/ZR8bj/4lu6B8cjkQ21L6I51IBy2Qz60
joVRb0vG5wUHOzz5Xu/8ykqi+YEGkzoAEvR/7py5Gf5HS76t+HKARNi5izux
UlF5VpgfcMKri1UeV4VTELWABRdGje0LC5WpzFSqgpM+64CT/o96oz4tn1tK
3e4z7mNnOjGr0NTQ4D03c32I0MuKiN6++cW46/1Nid8p7RHH7WJK7psF0EQR
BfPdE7vYg0Ey/pkPD41woQc6/gbVEXemH5zwkcM2EatciZuubivUtcybcuUu
UCvJ2ndLzqPejNhn5XOrvyeYFxHrhZgWYNMNdc6BNs+J6muqXHRrjFq6NHMo
9QKHameSygPxz7zz1AEtgENcoX5bZ/ECOWOlF8XJwJHx1A910ezJaWg7UlIs
HCQdiZ4jzp+2qvMld0k3HHQT7PJjwkOInVBqGfiuO93Hw+5jI8fJvUShRvyv
HkzJ5OzXUMSAfDM9erhSddlF1xUvo/sdLkN9/sJiYcTvq26c7fx7t+QqVcXf
eX7U1nfCdFV1w67y+KwX7ck9dIjL1MuLrZLPOX+Vd5f8hL9Sjs2z/vm7K55u
9pHQpRlcbWPHMX/hXZW867quQm11xhXas3Yny2e9VPJ7Sn/varvj/rjq24x9
TT43lT6T1fYTDx3inZf+f+m/H3wv9GVjEZ8W/P//OTbr/wEX5W1t\
\>"]], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12}, {Null, 
         SparseArray[
         Automatic, {12, 12}, 0, {
          1, {{0, 1, 3, 5, 7, 10, 13, 15, 17, 19, 20, 21, 22}, {{2}, {1}, {
            3}, {2}, {4}, {3}, {5}, {4}, {6}, {11}, {5}, {7}, {10}, {6}, {
            8}, {7}, {9}, {8}, {12}, {6}, {5}, {9}}}, Pattern}]}, {
        VertexStyle -> {
          6 -> RGBColor[0.34398, 0.49112, 0.89936], 1 -> 
           RGBColor[0.97, 0.606, 0.081], 9 -> RGBColor[0.97, 0.606, 0.081], 2 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 8 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 3 -> 
           RGBColor[0.97, 0.606, 0.081], 4 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 11 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 10 -> 
           RGBColor[0.97, 0.606, 0.081], 7 -> RGBColor[0.97, 0.606, 0.081], 
           12 -> RGBColor[0.34398, 0.49112, 0.89936], 5 -> 
           RGBColor[0.97, 0.606, 0.081]}, 
         VertexCoordinates -> {{0, 0.865410983413526}, {
           0, 1.730821966827052}, {0, 2.5962329502405774`}, {
           0, 3.4616439336541034`}, {1.0817637292669073`, 
           4.327054917067629}, {1.2981164751202887`, 3.4616439336541034`}, {
           0.8654109834135258, 2.5962329502405774`}, {0.8654109834135258, 
           1.730821966827052}, {0.8654109834135258, 0.865410983413526}, {
           1.7308219668270517`, 2.5962329502405774`}, {2.1635274585338147`, 
           3.4616439336541034`}, {0.8654109834135258, 0}}}]]}, 
      TagBox[
       GraphicsGroupBox[
        GraphicsComplexBox[{{0., 0.865410983413526}, {0., 
         1.730821966827052}, {0., 2.5962329502405774`}, {0., 
         3.4616439336541034`}, {1.0817637292669073`, 4.327054917067629}, {
         1.2981164751202887`, 3.4616439336541034`}, {0.8654109834135258, 
         2.5962329502405774`}, {0.8654109834135258, 1.730821966827052}, {
         0.8654109834135258, 0.865410983413526}, {1.7308219668270517`, 
         2.5962329502405774`}, {2.1635274585338147`, 3.4616439336541034`}, {
         0.8654109834135258, 0.}}, {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
           ArrowBox[{{1, 2}, {2, 3}, {3, 4}, {4, 5}, {5, 6}, {5, 11}, {6, 
            7}, {6, 10}, {7, 8}, {8, 9}, {9, 12}}, 0.039055643908509824`]}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[1, 0.039055643908509824]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[2, 0.039055643908509824]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[3, 0.039055643908509824]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[4, 0.039055643908509824]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[5, 0.039055643908509824]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[6, 0.039055643908509824]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[7, 0.039055643908509824]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[8, 0.039055643908509824]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[9, 0.039055643908509824]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[10, 0.039055643908509824]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[11, 0.039055643908509824]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[12, 0.039055643908509824]}}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    FormatType->TraditionalForm,
    FrameTicks->None], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 
        19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32}, {Null, 
         SparseArray[
         Automatic, {32, 32}, 0, {
          1, {{0, 20, 40, 60, 80, 100, 120, 140, 160, 180, 200, 220, 240, 252,
             264, 276, 288, 300, 312, 324, 336, 348, 360, 372, 384, 396, 408, 
            420, 432, 444, 456, 468, 480}, CompressedData["
1:eJxTTMoPSmJiYGB4wMjAAEQMvHz8AoJCwiKiYuISklLSMrJy8grDWYyRiZmF
lY2dg5OLm2cksAFOhx27
            "]}, Pattern}]}, {
        VertexStyle -> {
          5 -> RGBColor[0.34398, 0.49112, 0.89936], 15 -> 
           RGBColor[0.97, 0.606, 0.081], 22 -> RGBColor[0.97, 0.606, 0.081], 
           9 -> RGBColor[0.34398, 0.49112, 0.89936], 14 -> 
           RGBColor[0.97, 0.606, 0.081], 19 -> RGBColor[0.97, 0.606, 0.081], 
           6 -> RGBColor[0.34398, 0.49112, 0.89936], 26 -> 
           RGBColor[0.97, 0.606, 0.081], 18 -> RGBColor[0.97, 0.606, 0.081], 
           2 -> RGBColor[0.34398, 0.49112, 0.89936], 12 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 17 -> 
           RGBColor[0.97, 0.606, 0.081], 31 -> RGBColor[0.97, 0.606, 0.081], 
           7 -> RGBColor[0.34398, 0.49112, 0.89936], 10 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 24 -> 
           RGBColor[0.97, 0.606, 0.081], 30 -> RGBColor[0.97, 0.606, 0.081], 
           8 -> RGBColor[0.34398, 0.49112, 0.89936], 11 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 13 -> 
           RGBColor[0.97, 0.606, 0.081], 29 -> RGBColor[0.97, 0.606, 0.081], 
           1 -> RGBColor[0.34398, 0.49112, 0.89936], 3 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 21 -> 
           RGBColor[0.97, 0.606, 0.081], 27 -> RGBColor[0.97, 0.606, 0.081], 
           28 -> RGBColor[0.97, 0.606, 0.081], 25 -> 
           RGBColor[0.97, 0.606, 0.081], 4 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 32 -> 
           RGBColor[0.97, 0.606, 0.081], 16 -> RGBColor[0.97, 0.606, 0.081], 
           20 -> RGBColor[0.97, 0.606, 0.081], 23 -> 
           RGBColor[0.97, 0.606, 0.081]}, VertexCoordinates -> CompressedData["
1:eJxTTMoPSmViYGBQAGIQDQOaemzHj/Lc3Q/jH1FNurjwyHU4P0F23+3amktw
/jdNkzObM07B+dFGNw5e37Afzp+kOOFav8JSdL49mnp7NPPgfKh9cD7UPXA+
1L1Q/gf7u+qnz60Se7kfxl+t/PPyjKJncH6lvPrNtnOP4Xx36dB7JVoP4XxU
/3+wR/X/B3tU/3+wR/X/B3tU/3+wR/U/nG+Ppt4ezTx7NPvgfFT/w90L50P9
A+dD/QvnQ8MDPbzsAVjLpGA=
          "]}]]}, 
      TagBox[GraphicsGroupBox[GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGBQAGIQDQOaemzHj/Lc3Q/jH1FNurjwyHU4P0F23+3amktw
/jdNkzObM07B+dFGNw5e37Afzp+kOOFav8JSdL49mnp7NPPgfKh9cD7UPXA+
1L1Q/gf7u+qnz60Se7kfxl+t/PPyjKJncH6lvPrNtnOP4Xx36dB7JVoP4XxU
/3+wR/X/B3tU/3+wR/X/B3tU/3+wR/U/nG+Ppt4ezTx7NPvgfFT/w90L50P9
A+dD/QvnQ8MDPbzsAVjLpGA=
         "], {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
           ArrowBox[CompressedData["
1:eJwVxUd1HTEAAMCv3rWr3ospBYIJhLohODnMm6/vv3++4efz+fnn/8AACx7w
Agc8CCCCBDIooIIGOhhgggU2OOBCAy184Asd9DDACBPMsMAKG+xwwAkX3PDA
iwyy6EEvcsijgCJKKKOCKmqoo4EmWmijgy422OIHv9hhjwOOOOGMC6644Y4H
nnjhjQ++xBBLHvISRzwJJJJEMimkkkY6GWSSRTY55FJDLX3oSx31NNBIE820
0Eob7XTQSRfd9NDLDLPsYS9zzLPAIksss8Iqa6yzwSZbbLPDLjfc8oe/3HHP
A4888cwLr7zxzgeffPHND7/CCCse8QonvAgiiiSyKKKKJroYYooltjjiSiOt
fOQrnfQyyCiTzLLIKpvscsgpl9zyyKuMsupRr3LKq6CiSiqroqpqqquhplpq
q6OuNtrqR7/aaa+DjjrprIuuuumuh5566a2Pvr+KHR3L
            "], 0.019007365226349326`]}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[1, 0.019007365226349326]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[2, 0.019007365226349326]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[3, 0.019007365226349326]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[4, 0.019007365226349326]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[5, 0.019007365226349326]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[6, 0.019007365226349326]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[7, 0.019007365226349326]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[8, 0.019007365226349326]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[9, 0.019007365226349326]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[10, 0.019007365226349326]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[11, 0.019007365226349326]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[12, 0.019007365226349326]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[13, 0.019007365226349326]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[14, 0.019007365226349326]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[15, 0.019007365226349326]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[16, 0.019007365226349326]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[17, 0.019007365226349326]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[18, 0.019007365226349326]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[19, 0.019007365226349326]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[20, 0.019007365226349326]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[21, 0.019007365226349326]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[22, 0.019007365226349326]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[23, 0.019007365226349326]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[24, 0.019007365226349326]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[25, 0.019007365226349326]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[26, 0.019007365226349326]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[27, 0.019007365226349326]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[28, 0.019007365226349326]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[29, 0.019007365226349326]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[30, 0.019007365226349326]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[31, 0.019007365226349326]}, 
           {RGBColor[0.97, 0.606, 0.081], 
            DiskBox[32, 0.019007365226349326]}}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    FormatType->TraditionalForm,
    FrameTicks->None], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 
        19, 20, 21, 22, 23, 24, 25, 26, 27, 28}, {Null, 
         SparseArray[
         Automatic, {28, 28}, 0, {
          1, {{0, 14, 28, 42, 56, 70, 84, 98, 112, 126, 140, 154, 168, 182, 
            196, 210, 224, 238, 252, 266, 280, 294, 308, 322, 336, 350, 364, 
            378, 392}, CompressedData["
1:eJxTTMoPSmJiYGDoYGRgACIGfgFBIWERUTFxCUkpaZmhyWNkYmZhZWPn4OTi
5uHlG5o8AIi0GGc=
            "]}, Pattern}]}, {
        VertexStyle -> {
          18 -> RGBColor[0.97, 0.606, 0.081], 6 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 23 -> 
           RGBColor[0.97, 0.606, 0.081], 22 -> RGBColor[0.97, 0.606, 0.081], 
           15 -> RGBColor[0.97, 0.606, 0.081], 1 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 27 -> 
           RGBColor[0.97, 0.606, 0.081], 20 -> RGBColor[0.97, 0.606, 0.081], 
           24 -> RGBColor[0.97, 0.606, 0.081], 9 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 13 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 2 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 8 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 25 -> 
           RGBColor[0.97, 0.606, 0.081], 21 -> RGBColor[0.97, 0.606, 0.081], 
           3 -> RGBColor[0.34398, 0.49112, 0.89936], 4 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 11 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 26 -> 
           RGBColor[0.97, 0.606, 0.081], 10 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 19 -> 
           RGBColor[0.97, 0.606, 0.081], 7 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 16 -> 
           RGBColor[0.97, 0.606, 0.081], 17 -> RGBColor[0.97, 0.606, 0.081], 
           28 -> RGBColor[0.97, 0.606, 0.081], 14 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 12 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 5 -> 
           RGBColor[0.34398, 0.49112, 0.89936]}, 
         VertexCoordinates -> CompressedData["
1:eJxdzzEKgDAMheEgHTtlyFBcPEl7Bo8gOHtEPUqP4OioUiP0D4TwwYPwpmWb
10FExmff2+bM7aajt8EKRzjA19670hl5OBT8gxU2OH2W0vdzG6xwhAPs/dyV
zsjD3u//BytscCo3ZNssfA==
          "]}]]}, 
      TagBox[GraphicsGroupBox[GraphicsComplexBox[CompressedData["
1:eJxdzzEKgDAMheEgHTtlyFBcPEl7Bo8gOHtEPUqP4OioUiP0D4TwwYPwpmWb
10FExmff2+bM7aajt8EKRzjA19670hl5OBT8gxU2OH2W0vdzG6xwhAPs/dyV
zsjD3u//BytscCo3ZNssfA==
         "], {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
           ArrowBox[CompressedData["
1:eJwVxcd1HSAQAMDPEpcMS4aLW3IJakBNujBLh3nz5+v77xd8Pp9/P35niWVW
WGXEGutssMkW2+ywyx4kyFCgAkGDDgMmLNhw4MLjiWdeeOXEG+988MkX3/zw
y59IIosiqiDRRBdDTLHEFkdc8WSSWRZZJckmuxxyyiW3PPLKp5LKqqiqSDXV
1VBTLbXVUVc9nXTWRVdNuumuh5566a2PvvqZZLIpphoyzXQzzDTLbHPMNQ8T
ZixYkbBhx4ETF248ePHZZLMttlqyzXY77LTLbnvstc8ll11x1ZFrrrvhpltu
u+Ouez757Iuvnnzz3Q8//fLbH3/9CynkUEINFFroYYQZVtjhhBteTDHHEmuk
2GKPI8644o4n3vj+A2n+GKM=
            "], 0.07509363295880149]}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[1, 0.07509363295880149]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[2, 0.07509363295880149]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[3, 0.07509363295880149]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[4, 0.07509363295880149]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[5, 0.07509363295880149]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[6, 0.07509363295880149]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[7, 0.07509363295880149]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[8, 0.07509363295880149]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[9, 0.07509363295880149]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[10, 0.07509363295880149]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[11, 0.07509363295880149]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[12, 0.07509363295880149]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[13, 0.07509363295880149]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[14, 0.07509363295880149]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[15, 0.07509363295880149]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[16, 0.07509363295880149]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[17, 0.07509363295880149]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[18, 0.07509363295880149]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[19, 0.07509363295880149]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[20, 0.07509363295880149]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[21, 0.07509363295880149]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[22, 0.07509363295880149]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[23, 0.07509363295880149]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[24, 0.07509363295880149]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[25, 0.07509363295880149]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[26, 0.07509363295880149]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[27, 0.07509363295880149]}, 
           {RGBColor[0.97, 0.606, 0.081], 
            DiskBox[28, 0.07509363295880149]}}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    FormatType->TraditionalForm,
    FrameTicks->None], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 
        19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 
        36, 37, 38, 39, 40, 41, 42, 43, 44}, {Null, 
         SparseArray[
         Automatic, {44, 44}, 0, {
          1, {{0, 3, 6, 9, 12, 15, 18, 21, 24, 27, 30, 33, 36, 39, 42, 45, 48,
             51, 54, 57, 60, 63, 66, 69, 72, 75, 78, 81, 84, 87, 90, 93, 96, 
            99, 102, 105, 108, 111, 114, 117, 120, 123, 126, 129, 132}, {{
            2}, {10}, {44}, {1}, {3}, {37}, {2}, {4}, {12}, {3}, {5}, {39}, {
            4}, {6}, {14}, {5}, {7}, {41}, {6}, {8}, {16}, {7}, {9}, {43}, {
            8}, {10}, {18}, {1}, {9}, {11}, {10}, {12}, {20}, {3}, {11}, {
            13}, {12}, {14}, {22}, {5}, {13}, {15}, {14}, {16}, {24}, {7}, {
            15}, {17}, {16}, {18}, {26}, {9}, {17}, {19}, {18}, {20}, {28}, {
            11}, {19}, {21}, {20}, {22}, {30}, {13}, {21}, {23}, {22}, {24}, {
            32}, {15}, {23}, {25}, {24}, {26}, {34}, {17}, {25}, {27}, {26}, {
            28}, {36}, {19}, {27}, {29}, {28}, {30}, {38}, {21}, {29}, {31}, {
            30}, {32}, {40}, {23}, {31}, {33}, {32}, {34}, {42}, {25}, {33}, {
            35}, {34}, {36}, {44}, {27}, {35}, {37}, {2}, {36}, {38}, {29}, {
            37}, {39}, {4}, {38}, {40}, {31}, {39}, {41}, {6}, {40}, {42}, {
            33}, {41}, {43}, {8}, {42}, {44}, {1}, {35}, {43}}}, Pattern}]}, {
        VertexStyle -> {
          5 -> RGBColor[0.97, 0.606, 0.081], 15 -> 
           RGBColor[0.97, 0.606, 0.081], 22 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 9 -> 
           RGBColor[0.97, 0.606, 0.081], 36 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 14 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 19 -> 
           RGBColor[0.97, 0.606, 0.081], 6 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 26 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 18 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 2 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 38 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 12 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 17 -> 
           RGBColor[0.97, 0.606, 0.081], 31 -> RGBColor[0.97, 0.606, 0.081], 
           34 -> RGBColor[0.34398, 0.49112, 0.89936], 7 -> 
           RGBColor[0.97, 0.606, 0.081], 37 -> RGBColor[0.97, 0.606, 0.081], 
           39 -> RGBColor[0.97, 0.606, 0.081], 10 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 24 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 44 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 30 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 8 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 33 -> 
           RGBColor[0.97, 0.606, 0.081], 11 -> RGBColor[0.97, 0.606, 0.081], 
           13 -> RGBColor[0.97, 0.606, 0.081], 29 -> 
           RGBColor[0.97, 0.606, 0.081], 1 -> RGBColor[0.97, 0.606, 0.081], 
           43 -> RGBColor[0.97, 0.606, 0.081], 3 -> 
           RGBColor[0.97, 0.606, 0.081], 21 -> RGBColor[0.97, 0.606, 0.081], 
           27 -> RGBColor[0.97, 0.606, 0.081], 28 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 25 -> 
           RGBColor[0.97, 0.606, 0.081], 4 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 32 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 16 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 42 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 40 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 35 -> 
           RGBColor[0.97, 0.606, 0.081], 41 -> RGBColor[0.97, 0.606, 0.081], 
           20 -> RGBColor[0.34398, 0.49112, 0.89936], 23 -> 
           RGBColor[0.97, 0.606, 0.081]}, VertexCoordinates -> {{
            Sin[Rational[1, 44] Pi], -
            Cos[Rational[1, 44] Pi]}, {-2^Rational[-1, 2], 2^
            Rational[-1, 2]}, {-Sin[Rational[9, 44] Pi], 
            Cos[Rational[9, 44] Pi]}, {
            Cos[Rational[3, 44] Pi], -Sin[Rational[3, 44] Pi]}, {
            Cos[Rational[5, 44] Pi], -Sin[Rational[5, 44] Pi]}, {-
            Cos[Rational[5, 44] Pi], -Sin[Rational[5, 44] Pi]}, {-
            Cos[Rational[3, 44] Pi], -Sin[Rational[3, 44] Pi]}, {
            Sin[Rational[9, 44] Pi], 
            Cos[Rational[9, 44] Pi]}, {
           2^Rational[-1, 2], 2^Rational[-1, 2]}, {-Sin[Rational[1, 44] Pi], -
            Cos[Rational[1, 44] Pi]}, {-Sin[Rational[3, 44] Pi], -
            Cos[Rational[3, 44] Pi]}, {-Sin[Rational[7, 44] Pi], 
            Cos[Rational[7, 44] Pi]}, {-Sin[Rational[5, 44] Pi], 
            Cos[Rational[5, 44] Pi]}, {
            Cos[Rational[7, 44] Pi], -Sin[Rational[7, 44] Pi]}, {
            Cos[Rational[9, 44] Pi], -Sin[Rational[9, 44] Pi]}, {-
            Cos[Rational[1, 44] Pi], -Sin[Rational[1, 44] Pi]}, {-
            Cos[Rational[1, 44] Pi], 
            Sin[Rational[1, 44] Pi]}, {
            Cos[Rational[9, 44] Pi], 
            Sin[Rational[9, 44] Pi]}, {
            Cos[Rational[7, 44] Pi], 
            Sin[Rational[7, 44] Pi]}, {-Sin[Rational[5, 44] Pi], -
            Cos[Rational[5, 44] Pi]}, {-Sin[Rational[7, 44] Pi], -
            Cos[Rational[7, 44] Pi]}, {-Sin[Rational[3, 44] Pi], 
            Cos[Rational[3, 44] Pi]}, {-Sin[Rational[1, 44] Pi], 
            Cos[Rational[1, 44] Pi]}, {
           2^Rational[-1, 2], -2^Rational[-1, 2]}, {
            Sin[Rational[9, 44] Pi], -Cos[Rational[9, 44] Pi]}, {-
            Cos[Rational[3, 44] Pi], 
            Sin[Rational[3, 44] Pi]}, {-Cos[Rational[5, 44] Pi], 
            Sin[Rational[5, 44] Pi]}, {
            Cos[Rational[5, 44] Pi], 
            Sin[Rational[5, 44] Pi]}, {
            Cos[Rational[3, 44] Pi], 
            Sin[Rational[3, 44] Pi]}, {-Sin[Rational[9, 44] Pi], -
            Cos[Rational[9, 44] Pi]}, {-2^Rational[-1, 2], -2^
             Rational[-1, 2]}, {
            Sin[Rational[1, 44] Pi], 
            Cos[Rational[1, 44] Pi]}, {
            Sin[Rational[3, 44] Pi], 
            Cos[Rational[3, 44] Pi]}, {
            Sin[Rational[7, 44] Pi], -Cos[Rational[7, 44] Pi]}, {
            Sin[Rational[5, 44] Pi], -Cos[Rational[5, 44] Pi]}, {-
            Cos[Rational[7, 44] Pi], 
            Sin[Rational[7, 44] Pi]}, {-Cos[Rational[9, 44] Pi], 
            Sin[Rational[9, 44] Pi]}, {
            Cos[Rational[1, 44] Pi], 
            Sin[Rational[1, 44] Pi]}, {
            Cos[Rational[1, 44] Pi], -Sin[Rational[1, 44] Pi]}, {-
            Cos[Rational[9, 44] Pi], -Sin[Rational[9, 44] Pi]}, {-
            Cos[Rational[7, 44] Pi], -Sin[Rational[7, 44] Pi]}, {
            Sin[Rational[5, 44] Pi], 
            Cos[Rational[5, 44] Pi]}, {
            Sin[Rational[7, 44] Pi], 
            Cos[Rational[7, 44] Pi]}, {
            Sin[Rational[3, 44] Pi], -Cos[Rational[3, 44] Pi]}}}]]}, 
      TagBox[GraphicsGroupBox[GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGDQAWIQrTrz8CMP5032ZeVFmxRev99/xro+bd6CZzDa3rQs
JtpD9/F+hkvSqzjmvbQPaRVvPOny3v5XR9HjMNPT+/NvRP+t/f3WXldqAeP8
2Gsw/n4YH6p+P0w91Dx7mHkwe2A01D37Ye6B6YOZE7dE7SPzmnv7c2om2X8S
fYNurz1MHKYOZg/MHzBz0e2BhQOaenTzMPyJ5h5096L7B92/6OGBHl72aOFp
jxbe6PGBHl/o8bkfLb7h+mDmwPwJ8w+avXB/wtTB7IH5A2Yuuj2wcEBTj24e
hj/R3IPu3v0AwOlvuQ==
         "], {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
           ArrowBox[{{1, 2}, {1, 10}, {1, 44}, {2, 3}, {2, 37}, {3, 4}, {3, 
            12}, {4, 5}, {4, 39}, {5, 6}, {5, 14}, {6, 7}, {6, 41}, {7, 8}, {
            7, 16}, {8, 9}, {8, 43}, {9, 10}, {9, 18}, {10, 11}, {11, 12}, {
            11, 20}, {12, 13}, {13, 14}, {13, 22}, {14, 15}, {15, 16}, {15, 
            24}, {16, 17}, {17, 18}, {17, 26}, {18, 19}, {19, 20}, {19, 28}, {
            20, 21}, {21, 22}, {21, 30}, {22, 23}, {23, 24}, {23, 32}, {24, 
            25}, {25, 26}, {25, 34}, {26, 27}, {27, 28}, {27, 36}, {28, 29}, {
            29, 30}, {29, 38}, {30, 31}, {31, 32}, {31, 40}, {32, 33}, {33, 
            34}, {33, 42}, {34, 35}, {35, 36}, {35, 44}, {36, 37}, {37, 38}, {
            38, 39}, {39, 40}, {40, 41}, {41, 42}, {42, 43}, {43, 44}}, 
            0.022570104870316188`]}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[1, 0.022570104870316188]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[2, 0.022570104870316188]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[3, 0.022570104870316188]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[4, 0.022570104870316188]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[5, 0.022570104870316188]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[6, 0.022570104870316188]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[7, 0.022570104870316188]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[8, 0.022570104870316188]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[9, 0.022570104870316188]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[10, 0.022570104870316188]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[11, 0.022570104870316188]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[12, 0.022570104870316188]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[13, 0.022570104870316188]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[14, 0.022570104870316188]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[15, 0.022570104870316188]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[16, 0.022570104870316188]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[17, 0.022570104870316188]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[18, 0.022570104870316188]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[19, 0.022570104870316188]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[20, 0.022570104870316188]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[21, 0.022570104870316188]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[22, 0.022570104870316188]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[23, 0.022570104870316188]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[24, 0.022570104870316188]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[25, 0.022570104870316188]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[26, 0.022570104870316188]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[27, 0.022570104870316188]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[28, 0.022570104870316188]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[29, 0.022570104870316188]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[30, 0.022570104870316188]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[31, 0.022570104870316188]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[32, 0.022570104870316188]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[33, 0.022570104870316188]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[34, 0.022570104870316188]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[35, 0.022570104870316188]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[36, 0.022570104870316188]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[37, 0.022570104870316188]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[38, 0.022570104870316188]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[39, 0.022570104870316188]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[40, 0.022570104870316188]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[41, 0.022570104870316188]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[42, 0.022570104870316188]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[43, 0.022570104870316188]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[44, 0.022570104870316188]}}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    FormatType->TraditionalForm,
    FrameTicks->None], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12}, {Null, 
         SparseArray[
         Automatic, {12, 12}, 0, {
          1, {{0, 1, 4, 7, 10, 12, 16, 17, 18, 19, 20, 21, 22}, {{2}, {1}, {
            3}, {11}, {2}, {4}, {10}, {3}, {5}, {12}, {4}, {6}, {5}, {7}, {
            8}, {9}, {6}, {6}, {6}, {3}, {2}, {4}}}, Pattern}]}, {
        VertexStyle -> {
          6 -> RGBColor[0.34398, 0.49112, 0.89936], 1 -> 
           RGBColor[0.97, 0.606, 0.081], 9 -> RGBColor[0.97, 0.606, 0.081], 2 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 8 -> 
           RGBColor[0.97, 0.606, 0.081], 3 -> RGBColor[0.97, 0.606, 0.081], 4 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 11 -> 
           RGBColor[0.97, 0.606, 0.081], 10 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 7 -> 
           RGBColor[0.97, 0.606, 0.081], 12 -> RGBColor[0.97, 0.606, 0.081], 
           5 -> RGBColor[0.97, 0.606, 0.081]}, 
         VertexCoordinates -> {{0, 0}, {0.38297084310253526`, 
           0.7659416862050707}, {0.7659416862050705, 1.5318833724101413`}, {
           1.9148542155126764`, 2.297825058615212}, {2.297825058615212, 
           1.5318833724101413`}, {2.297825058615212, 0.7659416862050707}, {
           1.531883372410141, 0}, {2.297825058615212, 0}, {
           3.063766744820282, 0}, {1.148912529307606, 0.7659416862050707}, {
           0.7659416862050705, 0}, {3.063766744820282, 
           1.5318833724101413`}}}]]}, 
      TagBox[
       GraphicsGroupBox[
        GraphicsComplexBox[{{0., 0.}, {0.38297084310253526`, 
         0.7659416862050707}, {0.7659416862050705, 1.5318833724101413`}, {
         1.9148542155126764`, 2.297825058615212}, {2.297825058615212, 
         1.5318833724101413`}, {2.297825058615212, 0.7659416862050707}, {
         1.531883372410141, 0.}, {2.297825058615212, 0.}, {3.063766744820282, 
         0.}, {1.148912529307606, 0.7659416862050707}, {0.7659416862050705, 
         0.}, {3.063766744820282, 1.5318833724101413`}}, {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
           ArrowBox[{{1, 2}, {2, 3}, {2, 11}, {3, 4}, {3, 10}, {4, 5}, {4, 
            12}, {5, 6}, {6, 7}, {6, 8}, {6, 9}}, 0.030695071075361624`]}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[1, 0.030695071075361624]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[2, 0.030695071075361624]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[3, 0.030695071075361624]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[4, 0.030695071075361624]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[5, 0.030695071075361624]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[6, 0.030695071075361624]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[7, 0.030695071075361624]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[8, 0.030695071075361624]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[9, 0.030695071075361624]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[10, 0.030695071075361624]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[11, 0.030695071075361624]}, 
           {RGBColor[0.97, 0.606, 0.081], 
            DiskBox[12, 0.030695071075361624]}}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    FormatType->TraditionalForm,
    FrameTicks->None], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 
        19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32}, {Null, 
         SparseArray[
         Automatic, {32, 32}, 0, {
          1, {{0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 
            8, 8, 8, 8, 9, 10, 11, 12, 13, 14, 15, 16}, {{29}, {30}, {31}, {
            32}, {25}, {26}, {27}, {28}, {5}, {6}, {7}, {8}, {1}, {2}, {3}, {
            4}}}, Pattern}]}, {
        VertexStyle -> {
          5 -> RGBColor[0.34398, 0.49112, 0.89936], 15 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 22 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 9 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 14 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 19 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 6 -> 
           RGBColor[0.97, 0.606, 0.081], 26 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 18 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 2 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 12 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 17 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 31 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 7 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 10 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 24 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 30 -> 
           RGBColor[0.97, 0.606, 0.081], 8 -> RGBColor[0.97, 0.606, 0.081], 
           11 -> RGBColor[0.34398, 0.49112, 0.89936], 13 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 29 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 1 -> 
           RGBColor[0.97, 0.606, 0.081], 3 -> RGBColor[0.97, 0.606, 0.081], 
           21 -> RGBColor[0.34398, 0.49112, 0.89936], 27 -> 
           RGBColor[0.97, 0.606, 0.081], 28 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 25 -> 
           RGBColor[0.97, 0.606, 0.081], 4 -> RGBColor[0.97, 0.606, 0.081], 
           32 -> RGBColor[0.34398, 0.49112, 0.89936], 16 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 20 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 23 -> 
           RGBColor[0.34398, 0.49112, 0.89936]}, 
         VertexCoordinates -> {{0, 0}, {0, 
            Rational[-1, 8]}, {0, 
            Rational[-1, 4]}, {0, 
            Rational[-3, 8]}, {0, 
            Rational[-1, 2]}, {0, 
            Rational[-5, 8]}, {0, 
            Rational[-3, 4]}, {0, 
            Rational[-7, 8]}, {0, -1}, {
            Rational[1, 16], -1}, {
            Rational[1, 8], -1}, {
            Rational[3, 16], -1}, {
            Rational[1, 4], -1}, {
            Rational[5, 16], -1}, {
            Rational[3, 8], -1}, {
            Rational[7, 16], -1}, {
            Rational[1, 2], -1}, {
            Rational[9, 16], -1}, {
            Rational[5, 8], -1}, {
            Rational[11, 16], -1}, {
            Rational[3, 4], -1}, {
            Rational[13, 16], -1}, {
            Rational[7, 8], -1}, {
            Rational[15, 16], -1}, {1, 
            Rational[-1, 2]}, {1, 
            Rational[-5, 8]}, {1, 
            Rational[-3, 4]}, {1, 
            Rational[-7, 8]}, {1, 0}, {1, 
            Rational[-1, 8]}, {1, 
            Rational[-1, 4]}, {1, 
            Rational[-3, 8]}}}]]}, 
      TagBox[GraphicsGroupBox[GraphicsComplexBox[CompressedData["
1:eJx9ybEJgDAUhOHgJDqJOziCYO1qbpCUliksXmERJEiQIBlBhaTIX3hwHB/X
jfMwNUqp9u23/zG6toUFdrCHAxzhlL30tQ28whbeYIF32MEH7OETDvAFR/iG
U7aDPRzgCJcUG/wWFv0AzR5NIQ==
         "], {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
           ArrowBox[{{1, 29}, {2, 30}, {3, 31}, {4, 32}, {5, 25}, {6, 26}, {7,
             27}, {8, 28}}, 0.01273]}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[1, 0.01273]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], DiskBox[2, 0.01273]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[3, 0.01273]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[4, 0.01273]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], DiskBox[5, 0.01273]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[6, 0.01273]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], DiskBox[7, 0.01273]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[8, 0.01273]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], DiskBox[9, 0.01273]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], DiskBox[10, 0.01273]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], DiskBox[11, 0.01273]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], DiskBox[12, 0.01273]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], DiskBox[13, 0.01273]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], DiskBox[14, 0.01273]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], DiskBox[15, 0.01273]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], DiskBox[16, 0.01273]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], DiskBox[17, 0.01273]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], DiskBox[18, 0.01273]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], DiskBox[19, 0.01273]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], DiskBox[20, 0.01273]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], DiskBox[21, 0.01273]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], DiskBox[22, 0.01273]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], DiskBox[23, 0.01273]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], DiskBox[24, 0.01273]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[25, 0.01273]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], DiskBox[26, 0.01273]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[27, 0.01273]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], DiskBox[28, 0.01273]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], DiskBox[29, 0.01273]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[30, 0.01273]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], DiskBox[31, 0.01273]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], DiskBox[32, 0.01273]}}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    FormatType->TraditionalForm,
    FrameTicks->None], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[CompressedData["
1:eJwl1Gl4CAQcBvAd7DCbbTaMHcYu21wbZrdjhg60LkeIokLWQTrkKLeiqChS
ju7TrXJV6KRbOaKblEoUqfDb48Pv/X9/n+f9pw6trhodGBAQcIGouUEEU4va
hBBKGOHUIYK6RBJFPaKJIZb6xBFPAxrSiAQa04REkkgmhaak0ozmpJFOBplk
0YJscsilJa1oTRvakkc+7WhPBwroSCFFFFNCKWWU04nOdKErFXSjku70oGdN
T1zIRVxML3rTh0uo4lIu43Ku4Er60o/+DOAqBjKIwVzNEIZyDdcyjOFcx/Xc
wAhGMoobGU01N3Ezt3ArYxjLbYzjdu7gTu5iPHczgYlMYjL3cC9TmMo0pjOD
mcxiNvdxP3OYywM8yDzm8xAP8wgLWMijPMYiFvM4S3iCJ1nKMpazgqd4mmd4
lud4nhd4kZd4mVd4lZWsYjVrWMs61rOB13idN9jIJjazha28yVu8zTa2s4N3
eJf3eJ8P+JCd7OIjPuYTPuUzPucLdvMlX7GHvexjP19zgIN8w7d8x/f8wI/8
xCEO8zNH+IVfOcpv/M4fHONPjnOCv/ibk5ziH07zL//xP2c4S834AwkimFrU
JoRQwginDhHUJZIo6hFNDLHUJ454GtCQRiTQmCYkkkQyKTQllWY0J410Msgk
ixZkk0MuLWlFa9rQljzyaUd7OlBARwopopgSSimjnE50pgtdqaAblXSnBz0D
z//Jc/xzjKE=
        "], {Null, 
         SparseArray[Automatic, {330, 330}, 0, {1, {CompressedData["
1:eJwl0ysUmHQUwOH/dDp8M1/D59jcFJ/D5+Zzm8+dY/GYjDsmkxKJRCKRSCQS
iUQikUgkEol+Hu853w23/NK99uc/v/99IYTw63/L3KGgZyNx/42aiZP8kRD+
omMlfjSEB1SMHGQXQ3hIy0L0WAj3KBnYSR8P4Q8aZsIlfQp6NpJIn5qJk/wJ
fTpW4if1qRg5yJ7Sp2UhelqfkoGd9Bl9GmbCs/oU9Gwkz+lTM3GSx/p0rMSX
9akYOcie16dlIXpBn5KBnfRFfRpmwkv6FPRsJC/rUzNxkl/Rp2MlTvSpGDnI
XtGnZSF6VZ+SgZ30NX0aZsLr+hT0bCRv6FMzcZK/qU/HSnxVn4qRgyzVp2Uh
uqZPycBOel2fhpnwlj4FPRvJDX1qJk7ym/p0rMRv61MxcpC9o0/LQpTpUzKw
k76rT8NMeE+fgp6N5H19aiZO8g/06ViJP9SnYuQg+0ifloXolj4lAztprk/D
TPhYn4KejeQTfWomTvJP9elYiT/Tp2LkIPtcn5aF6At9SgZ20tv6NMy3/3/+
OxT0bCRf6lMzcZJ/pU/HSvy1PhUjB9k3+rQsRN/qUzKwk36nT8NMuKtPQc9G
ck+fmomT/L4+HSvx9/pUjBxkP+jTshD9qE/JwE76kz4NM+FnfQp6NpJf9KmZ
OMkfhPAvl47QEw==
            "], CompressedData["
1:eJzNnXe4ZldVxvfFQoaWDCWZlJncyRB6CSRDSSbJzUAyCSgoKhmVxBAEpAQk
oxARJaASFQUVEFApigUhClJsCd1K6PYC3FDtBSyEpms9s9/nvN973zNnf/ec
MOeP9cy/9zd773ev9a61z7fz0ic/7Ek3KaWccn4pK/Hvr0b8WsSrI3494jUR
r424OuI3In4z4nURr4/4rYg3RLwx4k0Rb4747YjfifjdiN+L+P2IayKujXhL
xFsj3hbx9oh3RLwz4l0RfxDxhxF/FPHHEX8S8acR7464LuI9Ee+NeF/E+yM+
EPHBiA9F/FnEn0f8RcRfRvxVxF9H/E3E30b8XcTfR3x4ZnwfifhoxHrE9REf
i/h4xCciPhnxqYhPR/xDxD9G/FPEP0f8S8S/RvxbxL9H/EfEf0Z85kbgG7MG
Y/g+G/FfEf8d8T8R/xvxuSX4Wtellc/tp1Y+t1aO7wbD17dOfXy6z/r4dL2U
78OH4NP1Ur7PGL7PER+vGfPx3mM+XjPmU43gNWM+1QNoAfPxmjGfnjWcM+bD
3ryhrl3yYS++ntYNfNANrBv4WCdYA7Fu4OPzpnrHWvcRWjfw8XlTLWEdAR+f
veR7dV275HtdXbvkg3ZAN66pfDhzrIOsge+ufDhzrCeq56rlH618OHOsJ6qV
qpOfLRu1JfnyzF1dOh15Q+nOHOvitaU7c6wnqvHXle7MsZ6oVrq7ar10Z471
RLXS3QNOO52+HM777/MRX4j4YsSXIr4c8X8RmYisRNwk4qsivjriayK+NuKm
EUdEbIm4WcTNI24RccuIW63M6/4bw3dkxFERWyNuHXGbiNsuwfeVuP9a+dxa
Ob7bGb7Def/18el6Kd+tDN9tiW8u9x/z8Zoxn561Wxq+2xDfnO6/z9O6gY/P
m2rJLQzfrYVvTvffFyofzhzriWql6uSRRluSb0733xdLd+ZYT1Qr3T3gtNPp
y9j7YUyNM+Z+ODrimIhtEcdGHBdx/I1wP4ypccbcD47vhBvhfhhT44y5H5Tv
eOKb8n4YU+OMuR+Y7zjim/p+GFPjjLkfwHes8E19P4ypccbcD0cbbTnhRrgf
1svma5wx94PTTqcvffrZmje36qfzg1r10+XSTj+3L6GfrXlzq346P6hVP10u
7fQTfC362Zo3t+qn84Na9dPl0k4/ty+hn615c6t+Oj+oVT9dLu30c/sS+tma
N7fqp/ODWvXT5dJOP7cvoZ+tefN6adNP5we16qfLpZ1+On3py8P69EXr8D59
0XxM9eWG0q8vmo+pvtzO6MsJPfrSl4f16YvW4X36ovmY6ovysb5oPqb6onzH
EZ/qS18e1qcvWof36YvmY6ov4HP6ovmY6gvzHSt8qi99eVifvmgd3qcvmo+p
vtxQ+vVF8zHVF/BpbeT0pS8P69MXrcPXi9cXzcdcL6tPXzQfcz6gq/1w/vhO
5/PHtQ+fP77T+fxpD4jvdD5/2u+Bl87nj+90Pn/qlcGH4PN3/Mri+eM7nc8f
1z58/vhO5/OnPSC+0/n8ab+H+XD++E7n86demfIdK3yvLot3Op8/rn34/PGd
zudPe0B8p/P5034P+Pj88Z3O50+9MubT2h3nj+90Pn9c+/D54ztdPej10p0/
vtPVi3C9Vj5/fKerF+F8audNJN9r6v5Erpn78+3loLZgf8K3xb2A/ck+Lfco
cS9gf3K9rv1I7mXl/sS9gP3J9bp6uewDYn8eJ3yvrfsTueY1pbsXsD/h2+Je
wP5kn5Z7lLgXsD+5Xtd+JPN9ofKhZmC/Rb149eGxP5Xv6ro/kWteW7p7gX2j
60p3L3A9pD2E9dLdC1wPqZfkeuW5P3EvcD2kXpLrMzhvKfnyXn9jXb/Mo99S
1w/eCnyH99T1Q83APjt70NfX9UPNwH6L9pO11/qlun6oGdhvUS9efeqjVzZ6
E8mX9/qbSlfnvbV0ORn7Yu8tXU7G9Z72SD5WupyM6z31ytwswJdLl5Nxvade
meujOO8s+TJneXPp6qC3lS5nYd/ofaXLWbge0h7Cx0uXs3A9pF6S65WnbiJn
4XpIvSTXZ3DekquPDmf/fUf8PSdGrEbsjDgpYlfE7SNOjrhDxB0j7hRx54i7
RNw14m4Rd4+4R8Q9I06JuFfEvW8EvjH99zF8p0acFrE74j4R94243xJ8X4n+
eyufWyvHd3/Ddzj77318ul7Kd2/Ddz/im0v/nfl4zZhPz9q9DN99iW9O/fcd
tG7g4/OmWnKK4buP8M2p/35i5cOZYz1RrVSdPNVoS/LNqf++SmeO9US10t0D
TjudvhzO/vuY++H0iDMi9kScGXFWxNlL8H0l+u9j7gfHt2b4Dmf/fcz9oHxn
E99c+u9j7gfmO4v45tR/H3M/gO9M4ZtT/33M/XC60Zbkm1P/fcz94LTT6cvh
7L+36qfLpZ1+nmP4Dmf/vVU/XS7t9BN8c+m/t+qny6WdfibfnPrvrfrpcmmn
n8k3p/57q366XNrpZ/LNqf/eqp8ul3b66fTlcPbf+/RF8zHVl/sbfVnr0ZfD
2X/v0xfNx1RflO8s4ptT/71PXzQfU31hvjOFb0799z590XxM9QV8Whs5fTmc
/fc+fdF8zPmArvbD+ZtL/53PH9/pfP7UK4MPwefv7JXF8zeX/jufP77T+fyp
V6Z8ZwrfnPrvfP74Tufzp14Z82ntjvM3l/47nz++09WLcD618yaSb0799x0r
3b2A/cn1unq57ANif54lfHPqv5+40t0L2J9cr6uXq3zqvSTfnPrvqyvdvcD1
kHpJrs/gvKXkm1P/fWddP9QM7LeoF68+9ekrG72J5JtT//2klS4n43pPvTLX
R3HeWfLNqf++a6XLWbgeUi/J9Rmct+Tqo7H9hzFv+Mb0H/ZGPCDigRHnRpwX
sW8Jvtb+w5g3fGP6D47vfMM3tv8w5g3fmP6D8u0jvin7D2Pe8I3pPzAf9mby
Td1/GPOGb0z/AXx89pJv6v7DmDd8Y/oPe1c2akvyTd1/GPOGb0z/wWmn05ex
/Ycxb/jG9B+cfl5g+Mb2H8a84RvTf3D6Cb4p+w9j3vCN6T84/Uy+qfsPY97w
jek/OP1Mvqn7D2Pe8I3pPzj9TL6p+w9j3vCN6T84/XT6Mrb/MOYN35j+g+rL
+SteX8b2H8a84RvTf1B9Ad/U/Ycxb/jG9B9UX8A3df9hzBu+Mf0H1RfwTd1/
GPOGb0z/wdV+OH9T9h/GvOEb03/g84fcE+dvyv7DmDd8Y/oPfP6Yb+r+w5g3
fGP6D3z+mG/q/sOYN3xj+g/Om0i+qfsPY97wjek/YH9y7Zd8U/cfxrzhG9N/
wP5Uvqn7D2Pe8I3pPzhvKfmm7j+MecM3pv+Q66feRPJN3X8Y84ZvTP/BeWfJ
N3X/YcwbvjH9B+ctufqoz19qnVtt9Zfc96Ba/SU3y+r8pQcZvj5/qXVutdVf
ct+DavWX3Cyr85fA1+Ivtc6ttvpL7ntQrf6Sm2V1/lLytfpLrXOrrf6S+x5U
q7/kZlmdv5R8rf5S69xqq7/kvgfV6i+5WVbnLyVfq7+0XtrmVlv9Jfc9qFZ/
yc2yOn/J6Uufv9Q6t9rqL7nvQbX6S26W1flLTl/6/KXWudVWf8l9D6rVX3Kz
rM5fcvrS5y+1zq22+kvue1Ct/pKbZXX+ktOXPn+pdW611V9y34Nq9ZfcLKvz
l5y+9PlLffqic6ut/pL7HlSrv+RmWZ2/hPPX4i+1zq22+kvue1Ct/pKbZXX+
Es5fi7/UOrfa6i+570G1+ktultX5Szh/Lf5S69xqq7/kvgfV6i+5WVbnL+H8
tfhLfP4ONbfa6i+570G1+ktultX5S8nX6i+1zq22+kvue1Ct/pKbZXX+UvK1
+kutc6ut/pL7HlSrv+RmWZ2/lHyt/tJ6aZtbbfWX3PegWv0lN8vq/KXka/WX
ri9tc6ut/pL7HlSrv+RmWZ2/lHyt/lLr3Gqrv+S+B9XqL7lZVucvJV+rv9Q6
t9rqL7nvQbX6S26W1flLrj7q67P31Uf6jq+vPtJ+u9ZH+a2rvvpI++1aH52z
srE+umDF10d9ffa++kjf8fXVR9pv1/pI+bg+0n671kfKh9ksVx/19dn76iN9
x9dXH2m/Xesj8Ln6SPvtWh8xH8+eufqor8/eVx/pO76++kj77VofbV/pr4+0
3671Efh0ts7VR3199vXi6yN9x9dXH2m/3X3rv68+0n67+06Bmx109VFfn72v
PtJ3fH31kfbbtT7S88f1kfbbtT7S84fZJVcf9fXZ++ojfcfXVx9pv13rIz1/
XB9pv13rIz1/zKf1UV+fva8+0nd8ffWR9tu1PtLzx/WR9tu1PtLzx3xaH/X1
2fn8cX2k7/j66iPtt7vfouirj7Tf7r6j4WZbXX3U12fvq4/0HV9ffaT9dq2P
sD9dfaT9dq2PeH/y7KCrj/r67H31kb7j66uPtN+u9RH2p6uPtN+u9RHvT+XT
+qivz75efH2k7/j66iPtt7vfEumrj7Tf7r6D4maTXX3U12e/vvj6SN/x9dVH
2m/X+ij5+uoj7bdrfYT109lWVx/19dn76iN9x9dXH2m/3f1WSl99pP12950X
N3vt6qO+PntffaTv+PrqI+23u98S6auPtN/uvoPiZpORv7Cny/kLzwZy/sKe
Lucv+hsA7Oly/qLf+8e3gDl/YU+X8xf9VgHeMXL+gtkC5C/s6XL+wrOBnL+w
p8v5i/4GAHu6nL/o9/6ZD/kLe7qcv+i3CpSPZ6+Rv7Cny/kLzwZy/sKeLucv
+hsA7Oly/qLf+wcf5y/s6XL+ot8qYD6dLUf+wp4u5y88G7heuvyFPV39Bg/n
L+zp6qy8+60bzl/Y09VZefedHjc7j/yFPV3OX3g2kPMX9nQ5f9HfAGBPl/MX
/d4/70/kL+zpcv6i3yrQ/cmzychf2NPl/IVnAzl/YU+X8xf9DQD2dDl/0e/9
8/5E/sKeLucv+q0C3Z/Kd3VZ9HQ5f+HZwPXS5S/s6eo3lDh/YU9X3zq43yri
/IU9XX3r4L6z5N4+IH9hT5fzF54NvL50+Qt7upy/6G8AsKfL+Yt+7x98nL+w
p8v5i36rgNdPZ+eRv7Cny/kLzwZy/sKern4jivMX9nT1LYf7LSbOX9jT1bcc
7jtS7m0H8hf2dDl/4dlAzl/Y09VvKHH+wp6uvnVwv1XE+Qt7uvrWwX1nyb19
SL6s/VI/0QtL/UTdB/3Ed11Q90E/+Tsu/BsqqPugnzxvrb+Xwr9lkPqJug/6
yfPW+q0X/g4D9JNnI5Mva79rStcLe3fp6j7oJ77rgroP+snfceHfUEHdB/3k
eWv9vRTmO3Glq/ugnzxvrd96UT5925F8WftdW7pe2HWlq/v4Xcp66eo+nifQ
b2ClfqLu43kCfavifmtqdaWr+3ieQN+quO9kubcryZe131tK1wt7T+nqPugn
vuuCug/6yd9x4d9QQd0H/eR5a/29FObbudLVfdBPnrfWb73o+unbh+R7U9VP
9MLeW7q6j9/dfKx0dR/PS+g3vr5curqP5yX0LY77La2TVrq6j+cl9C2O+w6Y
e5uTfG+u+ole2PtKV/fxu5SPl67u43kC/QZW6ifqPp4n0Lcq7remdq10dR/P
E+hbFfedLPd2JfnSl3h73Z/Z53t/3Z+Y/cfc+Cfq/kTPlr8zxN+oybs99yd6
tvweQH/PR38L5vZ1f6Jny+8B9FtE+h2b3J86W5586Uu8o3RzEh8onSfI724+
WTpPkOcl9BtfebfDE+R5CX2L435L6+SVzhPkeQl9i+O+A+be5iRf+hLvLN0c
wQdL55nxu5RPlc4z43kC/QZW3u3wzHieQN+quN+ausNK55nxPIG+VXHfyXJv
V5IvPZd3la4P/aHSeS78ruHTpfNcuB+t31DKvAWeC/ej9a2D+62izFvguXA/
Wt86uO8subcPybeS/+f5d6Wup/alPkTcLOLmEbeIuGXErSJuHXGbiNtG3C7i
2IjjIo6PODFiNeL2EfeIuGfEKRH3irh3xH0i7htxv4j7R5wZcVbE2REPiHhg
xPkRD4v4pohvjviWiG+N+LaIb4/4johLIr4z4kkRT4747ojvifjeiO+L+KGI
H4740YifKZ7vpobvSOE7mvhOqHw7I042fKcK3+nEt1b5zo24QPgeTnyPqHyP
jHg08T2l8j014umV70cifiziBT18Rxi+o4TvGOLbXvlOiriD4TtN+M4gvnMq
33kRDxK+C4nvosp3acRjiO/yyve0iO+vfM+J+PGIF/bwbTF8W4VvG/HtqHy7
Iu5o+HYL3x7i21v59kU8WPj2E9/Fle9REY8lvgOV74qIZ1S+qyKeG/Eiw5dn
T/dnnj3en3n2sD/z7OX+XC0H9+edhC/PHu/PPHvYn3n21srBs5f78+uIL88e
9meevdyfl5SD+/O7Kl+evdyfefZyf/5AOXj2cn/+RMTP9vDp/kw+3p/Jh/2Z
fNsrX+7POxs+3p/Jh/2ZfOdUvtyfXy982J/Jd1Hly/35OOK7vPLl/vzBypf7
8ycjXtzDp/sz+Xh/Jh/2Z/LtqHy5P+9i+Hh/Jh/2Z/LtrXy5Px8ifNifyXdx
5cv9+XjiO1D5cn8+s/Ll/nxexEsM303N+h0p63c0rd8Jdf121vW7q/CdKut3
Oq3fWl2/c+v6PZT4Hk7r94i6fo+s6/eEyveUun5Pret3ZTm4N3P9nh/x0h4+
Xb8jZf2OpvU7oa7fzrp+dzN8vH6n0/qt1fU7t67fNwgf1u8Rdf0eWdfvicR3
oPLl+j2r8uX6/VTEzxm+IwzfUcJ3DPFtr3wnVb67C99pwncG8Z1T+c6rfN9I
fBcS30WV79LKd1nlu7zyPa3yPbuuXfL9dMTPCx9yF9ZP5C7QT+QuuYbIXXIN
M2/Ju531E7kL9BO5S64hcpdcw8xb8m6HfiJ3yTVE7pJrmHlL3u2pn8hdcg0z
b8m7PfUz85a821M/f6GHj88f+HD+wHcM8W2vfHm3s36CD+cPfGcQ3zmVL+92
6Cf4LiS+iypf3u2PI77LK1/e7T9Y+fJuT/18WQ8f70/wYX+Cbxvx7ah8ebez
foIP+xN8e4hvb+XLux36Cb79xHdx5cu7/fHEd6Dy5d3+zMqXd3vq58sNn+on
ck9eP+gncs9cv5Pr+rF+Ivfk9YN+IvfM9bugrh/0E7kn1g/6+ei6fk8oXe6Z
6/f0un5XloN7M9cv9fMVPXy6fqyf4MP6QT9PruvH+gk+Xj/oJ/j2Vr5cP+gn
+LB+0M9H1/V7IvEdqHy5fs+qfLl+qZ+vNHyqn8itmQ/6idx6R1275GP9RG7N
fNBP5NZ769olH/QTuTX4oJ+PqXyXlS63PlDXLvmeXdcu+VI/f1H4oJ28P6Gd
2J/QzmSEdiZj6mZqC+9PaCf2J7QzGaGdyZi6mdqC/QntTEZoZzKmbqa25P6E
diZj6mZqy5XloG6mtuT+/KUePl4/8GH9wLeN+HZUvtQW3p/gw/qBbw/x7a18
qS3Yn+DbT3wXV77UlicS34HKl9ryrMqX2pL781WGT/cn7gbmw/7E3bCjrl3y
8f7E3cB82J+4G/bWtUs+7E/cDeDD/nxc5busdHfDgbp2yffsunbJl/vzl4UP
e5P5sDfBh725rXR7M/nuWteO+bA3wYe9uad0ezP5HlrXDnzYm/tLtzeT7wl1
7S4r3d5Mvivr2iXf8+vaJd+vEB97L8hf2HtJTvZekhOeS+aemr+w95Kc7L0k
JzyXzD05f2HvJTnhuWTuyfkLPJfMPTl/Sc8lfYms/Th/YT7oC/MdJXzHEN9J
ZWP+wnynCd8ZxHdeWcxfmO9C4ru0LOYv4HtaWcxfki99iaz9OH9hPuxP5tsq
fNuIb1fZmL8w327h20N8+8pi/sJ8+4nvUWUxfwHfFWUxf0m+9CWy9uP8hb0z
XT+cQfbOsH6o+zR/Ye+M1w9nEJ5Zrh/nL+ydYf1Q93H+As8s14/zlxfU9cva
j/MX5tP1w/3AfFg/1H2avzAfrx/uB/DtK4v5C/Nh/VD3cf4CvivKYv7ygrp+
Wfu90vCxfrI3yHzQT3iCu8rG/IW9QeaDfsIT3FcW8xf2BsGHuo/zF3iCV5TF
/OWFlS9rP85f2Dvj/cn5C3tnybhauv2p+Qt7Z9ifnL9AO5OR8xf2zpLxktLt
T85foJ3JyPlL6mZqS+5Pzl+Yj9eP8xfm20Z8u8rG/IX5sH6cv4BvX1nMX5hv
P/E9qizmL+C7oizmL8mX2pL7k/MX9gaVj/cn5y+rpdufmr+wN8h82J+4G/aV
xfyFvUHwYX9y/oK74YqymL+8uPLl/uT8hb0z5uP8hb2zbaXbm8mn+Qt7Z+Dj
/AV7M/k4f2HvbH/p9mbycf6CvZl8V5Yuf3lpXbvk4/yFcxecP85dkpFzl2RE
zpLaouePc5dk5NwlGZGzpLbw+ePcJRmRs6S28PlDzpLawucvc5a81/Nu4PPH
fFg/5tsqfNuI745l4/ljvt3Ct4f4HlwWzx/z7Se+x5bF8we+Z5TF85d8ea+/
siyeP87NlA/7k3Mz8OFe0PPHuRnzYX8iJ3twWTx/nJuBD/cCnz/kZM8oi+fv
ZZUv7wY+f5y7MB+fP85dtpVubyafnj/OXcDH5w97M/n4/HHusr90ezP5+Pxh
bybflaU7f6+oa5d8fP747IGPz97Wsnj2kg9n7i6Gj8/e7rJ49pIPZ+4hwsdn
L/lw5h4vfDhzzxS+PHOvqmsHPu1NJ6f2ppOT+9Ho2a6WjfWR9qaTk/vRa6W/
PuJ+NHq2l5SN9RH60OnHs6fr6iPlO8LwHSV86Nkmn9ZHynea8KFn6+oj5kPP
Nvm0PgLfc8qip+vqI+XbYvi2Ch96tsmn9ZHy7RY+9GxdfcR86Nkmn9ZH4Luq
LHq6rj7S2QJdP5xBnifA+rn6SGcLeP3WaP1cfcTzBFg/Vx9hjiDXjz1dVx8p
n64f7j/mw/q5+kj5eP3WaP1cfcR8WD9XH4HvqrLo6br6SGcnlA/6yfMS4HP1
kc5OMB88pb76iOclwOfqI8xJXFUWPV1XH+lsAe9PviN4ngA9d1cf6WwB9id7
un31Ec8ToOfu6iNoZzKyp+vqI+Xj9eP8jPnQc3f1kfJh/djT7auPmA89d1cf
ge+qsujpuvpIZyeUj/cne7qrxddHOjvBfNifffURz0uAz9VHuBuuKouerquP
dLaA+Th/4XkC9NxdfaSzBeBbI76++ojnCdBzd/UR9mbysafr6iPtTeP8aX3E
uQt6tq4+0t50MnLugp6tq484d0HP1tVHyFlSW/j8ufpI+bB+Wh8xH3q2rj5S
vt3Ch56tq4+YDz1bVx+B77ll8fy5+kh778qH/cm5GfhcfaS9d+bD/uyrjzg3
A5+rj5CTPbcsnj9XH2lvmvn4/HHugp6tq4+0Nw2+NeLrq484d0HP1tVH2JvJ
x+fP1Ufa2wSf1kd89tDzc/WR9jZ3l8Wzh56fq4/47KHn5+ojnLnnCZ+rj7Q2
SkatjZKR6yHUDE5ftDZKRq6HUDM4feF6CDWD0xfUQZmv8J3u9EX5thi+rcKH
msHpi/LtFj7UDE5fmA81g9MX8L2oLN7pTl+09lM+7E+u98Dn9EVrP+bDnden
L1zvgc/pC+q8F5XFO93pi9ZGzMfnj+sh1AxOX7Q2Ah/f6X36wvUQaganL9ib
ycd3utMXza3Bp/qyKnx9+qK59e6yePaQczp9uUT4+vQFZ+4lwuf0RbVlS9mo
LcnHeoIz5/hUW5KP9QRnzvGxnuDMOT7oyMtlzZSPZyOZU9868HuAIX9J3zrw
e4Ahf4nfNWD23/XZW/0lx3eE4eP3AEP+kvLxe4Ahf4n5MPvv+uyt/pLj22L4
+D3AkL+kfPweYMhfYj7M/rs+e6u/pHw4g/pWhddvyF/Styq8fmvl0P4Sv0vB
+rk+e6u/5Ph0/XjeusVfUj5ev7VyaH+J+bB+rs/e6i8pH/RT3+Iw35C/pG9x
mG/IX+J3N+BzffZWf4n5+I7Qtyr8nmPIX9K3KvyeY60c2l/idyl4u+H67K3+
kuPj9eN+X6u/pHz8nmOtHNpfYj683XB99lZ/Sfl0f3K/r9Vf0rc4zDfkL/G7
G/C5Pnurv8R8nL/oWxV+zzHkL+lbFX7PMeQv8bsUvN1wffZWfwl8mqPpWwd+
DzDkL+lbB34PAMa++o9zF8z+uz57q7/k+LB+2m9v9ZeUj98DrJVD+0vMh9l/
12dv9ZeUj/en9ttb/SV9y8F8Q/4S52bgc332Vn+J+fT8ab+91V/Stw78HmDI
X+LcBbP/rs/e6i+BT+sjnZXnefIhf0ln5XmefMhf4rOH2XHXZ2/1l3S2FYxa
G/G87pC/pLURz+sO+UtcD6FmcPrS6i85vi2Gj+d1h/wl5eN53SF/iflQMzh9
afWXlA/7U2s/5hvyl7T2Y74hf4nrPfA5fWn1l5iPz5/WRjyvO+QvaW3E87pD
/hLXQ6gZnL60+ks6+8l8qi+rpc1f0tya5z2H/CU+e8g5nb60+ktudnBL2agt
PE835C+ptvA83ZC/xHqCM+f4Wv0l5y0lo3pJ7LcM6ad6Sey3DOkn+0bwVlwe
1qqfjm+L4WO/ZUg/lY/9liH9ZD54Ky4Pa9VP550pH9frq2VYP9UrY74h/WRf
DHwuD2vVT+ctMR/nK636qV4S+y1D+sm+EbwVl4e16qfzJsCn+dhqadNP9SK4
Xh/STz57qM1dHtaqn67221I2agvXQ0P6qdrC9dCQfrKe4Mw5vlb9dNqZfKqV
rCdDfKqVrCdDfKyL0A63Tq18eMeo/cwx/Qf+Rg1/x6VlbnXq/oPjw1vizfYf
lI+/MzQ0tzp1/8Hx4S3qZvsPysffGRqaW526/6B8/BZ8s/0H5uPvuLTMrU7d
f3B8un7L9h+Uj9dvaG516v6D8vFb6c32H5iPv+PSMrc6df+B+fRbBZvtP4CP
3zK0zq1O3X9wfLx+m+k/KB/Wr2Vuder+g/Lp/txM/4H5eH+2zK1O3X9gPv1W
wWb7D+Djdzatc6tT9x/Ap/MgY/oP/A0e/k5Ny9zq1P0Hx4f122z/QfnwHZeW
udWp+w/Kx/tzs/0H5uPv1LTMrU7df2A+PX+b7T/oN5TA1zK3OnX/AXw6izWm
/6Df4OHv1AzNrU7df8A7adWXMf0HrY34OyBDc6tT9x8cH3+LYTP9B+Xj74AM
za1O3X9QPv3WxGb6D1r7Md/Q3OrU/Qfm07f8m+0/aG3E3wEZmluduv8APtWX
Mf0Hza35OxJDc6tT9x/wDlz5xvQfVFv4nf7Q3OrU/QfnLelb4mX7D+olsd8y
pJ9T9x8cn74lXrb/oHzstwzp59T9B+edKd+y/Qf1yphvSD+n7j84b0nfEi/b
f1Avif2WIf2cuv/gvAl9i7ps/0G9CK7Xh/Rz6v6Dq/30rd+y/QfVFq6HhvRz
6v6D0059a7Rs/0G1kvVkiG/q/oPrM6gXv+z9oD0E9tmH8uap7wfHp178sveD
8rHPPpQ3T30/uD6K8i17P2iPhPmG8uap7wfXZ1Avftn7QXsI7LMP5c1T3w/O
p1Yvd9n7QT1o9mmH8uap7wfnA6pXtuz9oNrCPthQ3jz1/eC0U2v1Ze8H1UrW
kyG+qe8Hdw+oVi7LpxrPOji0LlPz5beu+HsteJc45g3fnPrvju80w7fMG745
9d8d327Dt8wbvjn135UPb2bHvOGbU//d8en6LfuGb079d+XDe+cxb/jm1H9n
Pn7TPeYN35z6746P128zb/jm1H9XPt2fm3nDN6f+O/Px9wbGvOGbU/8dfPpN
hTFv+ObUf3d8WL/NvuGbU/9d+Xh/bvYN35z678yn52+zb/jm1H8HH5898G32
Dd+c+u/Jp7VRMo55wzen/rvj2234lnnDN6f+u/Jhf455wzen/jvz8fkb84Zv
Tv138Km+jHnDN6f++z2K/x7UmDd8c+q/O28pGce84ZtT/93x7TZ87LcM6eec
+u/OO1M+rtdb9HNO/XfnLTHfWln+Dd+c+u/OmwDfZt/wzan/7mq/3WXcG745
9d+ddiafauUyb/jm1H93fQb14rGGrffDnPrvjk+9+ORb5n6YU//d9VGUb9n7
YU79d9dnUC9+2fthTv1351Orl7vs/TCn/rvzAdUrW/Z+mFP/3Wmn1urL3g9z
6r+7e0C1clm+OfXfXa9c+8nL1jhzuv8cn/aTl61x5nT/uVkA5Vu2xpnT/ed6
5dpPXrbGmdP953qt2o9ctsaZ0/3nelna71m2xpnT/ee0U/3mZWucOd1/7h5Q
rVyWb073n7urVM+XXYM58f0/EfBXYA==
            "]}, Pattern}]}, {
        VertexStyle -> {
          329 -> RGBColor[0.97, 0.606, 0.081], 7 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 323 -> 
           RGBColor[0.97, 0.606, 0.081], 4 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 144 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 61 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 175 -> 
           RGBColor[0.97, 0.606, 0.081], 222 -> RGBColor[0.97, 0.606, 0.081], 
           320 -> RGBColor[0.97, 0.606, 0.081], 278 -> 
           RGBColor[0.97, 0.606, 0.081], 75 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 97 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 316 -> 
           RGBColor[0.97, 0.606, 0.081], 130 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 44 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 1 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 233 -> 
           RGBColor[0.97, 0.606, 0.081], 146 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 124 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 36 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 83 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 17 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 151 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 33 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 128 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 263 -> 
           RGBColor[0.97, 0.606, 0.081], 180 -> RGBColor[0.97, 0.606, 0.081], 
           254 -> RGBColor[0.97, 0.606, 0.081], 15 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 192 -> 
           RGBColor[0.97, 0.606, 0.081], 295 -> RGBColor[0.97, 0.606, 0.081], 
           20 -> RGBColor[0.34398, 0.49112, 0.89936], 79 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 257 -> 
           RGBColor[0.97, 0.606, 0.081], 78 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 253 -> 
           RGBColor[0.97, 0.606, 0.081], 145 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 309 -> 
           RGBColor[0.97, 0.606, 0.081], 24 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 31 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 236 -> 
           RGBColor[0.97, 0.606, 0.081], 110 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 260 -> 
           RGBColor[0.97, 0.606, 0.081], 19 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 181 -> 
           RGBColor[0.97, 0.606, 0.081], 88 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 324 -> 
           RGBColor[0.97, 0.606, 0.081], 165 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 85 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 280 -> 
           RGBColor[0.97, 0.606, 0.081], 113 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 116 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 18 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 220 -> 
           RGBColor[0.97, 0.606, 0.081], 108 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 131 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 315 -> 
           RGBColor[0.97, 0.606, 0.081], 284 -> RGBColor[0.97, 0.606, 0.081], 
           5 -> RGBColor[0.34398, 0.49112, 0.89936], 167 -> 
           RGBColor[0.97, 0.606, 0.081], 237 -> RGBColor[0.97, 0.606, 0.081], 
           69 -> RGBColor[0.34398, 0.49112, 0.89936], 285 -> 
           RGBColor[0.97, 0.606, 0.081], 46 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 126 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 16 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 23 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 92 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 185 -> 
           RGBColor[0.97, 0.606, 0.081], 141 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 276 -> 
           RGBColor[0.97, 0.606, 0.081], 82 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 50 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 29 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 242 -> 
           RGBColor[0.97, 0.606, 0.081], 227 -> RGBColor[0.97, 0.606, 0.081], 
           133 -> RGBColor[0.34398, 0.49112, 0.89936], 76 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 312 -> 
           RGBColor[0.97, 0.606, 0.081], 184 -> RGBColor[0.97, 0.606, 0.081], 
           248 -> RGBColor[0.97, 0.606, 0.081], 203 -> 
           RGBColor[0.97, 0.606, 0.081], 243 -> RGBColor[0.97, 0.606, 0.081], 
           156 -> RGBColor[0.34398, 0.49112, 0.89936], 297 -> 
           RGBColor[0.97, 0.606, 0.081], 177 -> RGBColor[0.97, 0.606, 0.081], 
           240 -> RGBColor[0.97, 0.606, 0.081], 52 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 182 -> 
           RGBColor[0.97, 0.606, 0.081], 274 -> RGBColor[0.97, 0.606, 0.081], 
           71 -> RGBColor[0.34398, 0.49112, 0.89936], 51 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 3 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 252 -> 
           RGBColor[0.97, 0.606, 0.081], 258 -> RGBColor[0.97, 0.606, 0.081], 
           84 -> RGBColor[0.34398, 0.49112, 0.89936], 293 -> 
           RGBColor[0.97, 0.606, 0.081], 80 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 32 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 259 -> 
           RGBColor[0.97, 0.606, 0.081], 230 -> RGBColor[0.97, 0.606, 0.081], 
           129 -> RGBColor[0.34398, 0.49112, 0.89936], 249 -> 
           RGBColor[0.97, 0.606, 0.081], 314 -> RGBColor[0.97, 0.606, 0.081], 
           179 -> RGBColor[0.97, 0.606, 0.081], 317 -> 
           RGBColor[0.97, 0.606, 0.081], 48 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 42 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 94 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 12 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 201 -> 
           RGBColor[0.97, 0.606, 0.081], 39 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 148 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 62 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 198 -> 
           RGBColor[0.97, 0.606, 0.081], 25 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 191 -> 
           RGBColor[0.97, 0.606, 0.081], 267 -> RGBColor[0.97, 0.606, 0.081], 
           174 -> RGBColor[0.97, 0.606, 0.081], 107 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 95 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 319 -> 
           RGBColor[0.97, 0.606, 0.081], 283 -> RGBColor[0.97, 0.606, 0.081], 
           28 -> RGBColor[0.34398, 0.49112, 0.89936], 217 -> 
           RGBColor[0.97, 0.606, 0.081], 93 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 225 -> 
           RGBColor[0.97, 0.606, 0.081], 77 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 300 -> 
           RGBColor[0.97, 0.606, 0.081], 162 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 214 -> 
           RGBColor[0.97, 0.606, 0.081], 218 -> RGBColor[0.97, 0.606, 0.081], 
           35 -> RGBColor[0.34398, 0.49112, 0.89936], 326 -> 
           RGBColor[0.97, 0.606, 0.081], 56 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 207 -> 
           RGBColor[0.97, 0.606, 0.081], 43 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 306 -> 
           RGBColor[0.97, 0.606, 0.081], 299 -> RGBColor[0.97, 0.606, 0.081], 
           150 -> RGBColor[0.34398, 0.49112, 0.89936], 40 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 176 -> 
           RGBColor[0.97, 0.606, 0.081], 287 -> RGBColor[0.97, 0.606, 0.081], 
           209 -> RGBColor[0.97, 0.606, 0.081], 270 -> 
           RGBColor[0.97, 0.606, 0.081], 183 -> RGBColor[0.97, 0.606, 0.081], 
           132 -> RGBColor[0.34398, 0.49112, 0.89936], 157 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 313 -> 
           RGBColor[0.97, 0.606, 0.081], 304 -> RGBColor[0.97, 0.606, 0.081], 
           159 -> RGBColor[0.34398, 0.49112, 0.89936], 34 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 251 -> 
           RGBColor[0.97, 0.606, 0.081], 288 -> RGBColor[0.97, 0.606, 0.081], 
           135 -> RGBColor[0.34398, 0.49112, 0.89936], 10 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 330 -> 
           RGBColor[0.97, 0.606, 0.081], 264 -> RGBColor[0.97, 0.606, 0.081], 
           125 -> RGBColor[0.34398, 0.49112, 0.89936], 223 -> 
           RGBColor[0.97, 0.606, 0.081], 291 -> RGBColor[0.97, 0.606, 0.081], 
           239 -> RGBColor[0.97, 0.606, 0.081], 171 -> 
           RGBColor[0.97, 0.606, 0.081], 168 -> RGBColor[0.97, 0.606, 0.081], 
           211 -> RGBColor[0.97, 0.606, 0.081], 161 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 305 -> 
           RGBColor[0.97, 0.606, 0.081], 67 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 308 -> 
           RGBColor[0.97, 0.606, 0.081], 310 -> RGBColor[0.97, 0.606, 0.081], 
           38 -> RGBColor[0.34398, 0.49112, 0.89936], 59 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 294 -> 
           RGBColor[0.97, 0.606, 0.081], 102 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 121 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 241 -> 
           RGBColor[0.97, 0.606, 0.081], 226 -> RGBColor[0.97, 0.606, 0.081], 
           311 -> RGBColor[0.97, 0.606, 0.081], 6 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 26 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 296 -> 
           RGBColor[0.97, 0.606, 0.081], 279 -> RGBColor[0.97, 0.606, 0.081], 
           322 -> RGBColor[0.97, 0.606, 0.081], 139 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 55 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 68 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 215 -> 
           RGBColor[0.97, 0.606, 0.081], 321 -> RGBColor[0.97, 0.606, 0.081], 
           307 -> RGBColor[0.97, 0.606, 0.081], 98 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 149 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 155 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 142 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 256 -> 
           RGBColor[0.97, 0.606, 0.081], 112 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 115 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 178 -> 
           RGBColor[0.97, 0.606, 0.081], 64 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 187 -> 
           RGBColor[0.97, 0.606, 0.081], 91 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 200 -> 
           RGBColor[0.97, 0.606, 0.081], 204 -> RGBColor[0.97, 0.606, 0.081], 
           100 -> RGBColor[0.34398, 0.49112, 0.89936], 325 -> 
           RGBColor[0.97, 0.606, 0.081], 138 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 219 -> 
           RGBColor[0.97, 0.606, 0.081], 122 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 57 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 289 -> 
           RGBColor[0.97, 0.606, 0.081], 247 -> RGBColor[0.97, 0.606, 0.081], 
           196 -> RGBColor[0.97, 0.606, 0.081], 282 -> 
           RGBColor[0.97, 0.606, 0.081], 140 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 2 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 114 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 292 -> 
           RGBColor[0.97, 0.606, 0.081], 81 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 232 -> 
           RGBColor[0.97, 0.606, 0.081], 205 -> RGBColor[0.97, 0.606, 0.081], 
           58 -> RGBColor[0.34398, 0.49112, 0.89936], 27 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 21 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 96 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 194 -> 
           RGBColor[0.97, 0.606, 0.081], 213 -> RGBColor[0.97, 0.606, 0.081], 
           164 -> RGBColor[0.34398, 0.49112, 0.89936], 119 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 54 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 169 -> 
           RGBColor[0.97, 0.606, 0.081], 245 -> RGBColor[0.97, 0.606, 0.081], 
           127 -> RGBColor[0.34398, 0.49112, 0.89936], 153 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 73 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 202 -> 
           RGBColor[0.97, 0.606, 0.081], 265 -> RGBColor[0.97, 0.606, 0.081], 
           229 -> RGBColor[0.97, 0.606, 0.081], 53 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 123 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 195 -> 
           RGBColor[0.97, 0.606, 0.081], 281 -> RGBColor[0.97, 0.606, 0.081], 
           193 -> RGBColor[0.97, 0.606, 0.081], 318 -> 
           RGBColor[0.97, 0.606, 0.081], 327 -> RGBColor[0.97, 0.606, 0.081], 
           173 -> RGBColor[0.97, 0.606, 0.081], 250 -> 
           RGBColor[0.97, 0.606, 0.081], 30 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 234 -> 
           RGBColor[0.97, 0.606, 0.081], 134 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 117 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 262 -> 
           RGBColor[0.97, 0.606, 0.081], 235 -> RGBColor[0.97, 0.606, 0.081], 
           172 -> RGBColor[0.97, 0.606, 0.081], 60 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 170 -> 
           RGBColor[0.97, 0.606, 0.081], 104 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 154 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 90 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 212 -> 
           RGBColor[0.97, 0.606, 0.081], 137 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 273 -> 
           RGBColor[0.97, 0.606, 0.081], 13 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 45 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 49 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 228 -> 
           RGBColor[0.97, 0.606, 0.081], 86 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 244 -> 
           RGBColor[0.97, 0.606, 0.081], 11 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 275 -> 
           RGBColor[0.97, 0.606, 0.081], 152 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 290 -> 
           RGBColor[0.97, 0.606, 0.081], 298 -> RGBColor[0.97, 0.606, 0.081], 
           186 -> RGBColor[0.97, 0.606, 0.081], 221 -> 
           RGBColor[0.97, 0.606, 0.081], 14 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 63 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 206 -> 
           RGBColor[0.97, 0.606, 0.081], 224 -> RGBColor[0.97, 0.606, 0.081], 
           22 -> RGBColor[0.34398, 0.49112, 0.89936], 302 -> 
           RGBColor[0.97, 0.606, 0.081], 216 -> RGBColor[0.97, 0.606, 0.081], 
           268 -> RGBColor[0.97, 0.606, 0.081], 65 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 272 -> 
           RGBColor[0.97, 0.606, 0.081], 72 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 208 -> 
           RGBColor[0.97, 0.606, 0.081], 210 -> RGBColor[0.97, 0.606, 0.081], 
           286 -> RGBColor[0.97, 0.606, 0.081], 189 -> 
           RGBColor[0.97, 0.606, 0.081], 89 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 70 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 47 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 103 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 190 -> 
           RGBColor[0.97, 0.606, 0.081], 303 -> RGBColor[0.97, 0.606, 0.081], 
           66 -> RGBColor[0.34398, 0.49112, 0.89936], 197 -> 
           RGBColor[0.97, 0.606, 0.081], 74 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 136 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 99 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 158 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 271 -> 
           RGBColor[0.97, 0.606, 0.081], 109 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 160 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 106 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 301 -> 
           RGBColor[0.97, 0.606, 0.081], 266 -> RGBColor[0.97, 0.606, 0.081], 
           269 -> RGBColor[0.97, 0.606, 0.081], 163 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 166 -> 
           RGBColor[0.97, 0.606, 0.081], 111 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 188 -> 
           RGBColor[0.97, 0.606, 0.081], 120 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 8 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 238 -> 
           RGBColor[0.97, 0.606, 0.081], 246 -> RGBColor[0.97, 0.606, 0.081], 
           87 -> RGBColor[0.34398, 0.49112, 0.89936], 9 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 143 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 101 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 277 -> 
           RGBColor[0.97, 0.606, 0.081], 118 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 37 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 199 -> 
           RGBColor[0.97, 0.606, 0.081], 147 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 41 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 105 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 231 -> 
           RGBColor[0.97, 0.606, 0.081], 261 -> RGBColor[0.97, 0.606, 0.081], 
           255 -> RGBColor[0.97, 0.606, 0.081], 328 -> 
           RGBColor[0.97, 0.606, 0.081]}, VertexCoordinates -> CompressedData["
1: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
lU+at/h/TgQgAA==
          "]}]]}, 
      TagBox[GraphicsGroupBox[GraphicsComplexBox[CompressedData["
1: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
lU+at/h/TgQgAA==
         "], {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
           ArrowBox[CompressedData["
1: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
+Jpv+J4f+JGf+JXfmGw/KUxlLvOYz93cwyLu434e4EEe5hEe5TEe5ymeZtDv
l1D4/PtFv8BbLGctG9jIO2zjXXawmz0c4jBH+IAP+ZhPOcZJTnGOLzjPV3zN
t3zPD/zIz/zKb0y2nzSmM5d5LOBu7mEx93E/D/AQD/MIj/IYT/AUTzPo99dC
4fMvsJS3WME6NvA277Cdd9nJbvZyiPc5wgd8xMd8ynFOcppzfMl5vuIbvuV7
fuAnfuZXfmOK/aQxg7nMZwF3s4jF3Mf9PMhDPMwjPMrjPMFTPM2g3z8RCp9/
gWUsZwXr2cjbbGM777KLPezlMO9zhA/5iI/5lBOc4jRf8CXn+Zpv+Jbv+ZGf
+Jlf+Y2p9pPODOYxnwXcwyIWcx8P8CAP8TCP8BiP8wRP8TSDfv9kKHxvCLzJ
Slaxlk1s5h228R472Md+DnGYo3zAh3zCpxzjM85wji+4wFd8zXd8zw/8yC/8
ym9Mtp9MZjGXeSzkbu7hXu7jfh5gCQ/zCI/yGE/yFE8z6PdPhcL3hsBSVrKa
dWxiC++wnffYyT4OcIj3OcoHfMQnfMpxPuNzzvElF/iKb/iO7/mBn/iFX/mN
KfaTyWzmMp+F3M0i7uU+7udBlvAwj/Aoj/MkT/E0g37/dCh8bwgsYxWrWc9m
trCN7bzHLvZzgMO8z1E+5CM+4VNOcIbP+YIvucDXfMN3fM+P/MQv/MpvTLWf
LGYzj/ks5B4WcS/38QAPsoSHeYTHeJwneYqnGfT7Z0Lh+3rgLVayhg1sYivv
8C7vsZt9HOQQRzjKB3zMJ3zKST7jLOc4zwW+4lu+43t+4Gd+4Vd+Y5r9ZDKH
uSxgIXezmHu5j/t5iCU8zCM8yhM8yVM8zaDfPxsK39cDy1nFGjayma1s413e
Yw/7OchhjnCUD/mYT/iUU5zhLF9wngt8zbd8x/f8yM/8wq/8xnT7yWIO81jA
Qu5hMfdyHw/wEEt4mEd4jCd4kqd4mkG/fy4U/p8lsILVrOFttrCV7bzLe+zl
AAd5nyMc5SM+5hM+5TSfc5YvOc8FvuFbvuN7fuJnfuFXfmOG/WQzh/ksYCGL
WMy93MeDPMQSHuYRHucJnuQpnmbQ76+Hwv+/BP7G3/kHL/MKr/Iar/MGb7KU
ZbzFclawklWsZg0X+Z1L/MFlrjDkuSIYyShGM4axjGM8k5nCVKYxnRnMZBaz
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
            "], 0.02261146496815286]}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[1, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[2, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[3, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[4, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[5, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[6, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[7, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[8, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[9, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[10, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[11, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[12, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[13, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[14, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[15, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[16, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[17, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[18, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[19, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[20, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[21, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[22, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[23, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[24, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[25, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[26, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[27, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[28, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[29, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[30, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[31, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[32, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[33, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[34, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[35, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[36, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[37, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[38, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[39, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[40, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[41, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[42, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[43, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[44, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[45, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[46, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[47, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[48, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[49, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[50, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[51, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[52, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[53, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[54, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[55, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[56, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[57, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[58, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[59, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[60, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[61, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[62, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[63, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[64, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[65, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[66, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[67, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[68, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[69, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[70, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[71, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[72, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[73, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[74, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[75, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[76, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[77, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[78, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[79, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[80, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[81, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[82, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[83, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[84, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[85, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[86, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[87, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[88, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[89, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[90, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[91, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[92, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[93, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[94, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[95, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[96, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[97, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[98, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[99, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[100, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[101, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[102, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[103, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[104, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[105, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[106, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[107, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[108, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[109, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[110, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[111, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[112, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[113, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[114, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[115, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[116, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[117, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[118, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[119, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[120, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[121, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[122, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[123, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[124, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[125, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[126, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[127, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[128, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[129, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[130, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[131, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[132, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[133, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[134, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[135, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[136, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[137, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[138, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[139, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[140, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[141, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[142, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[143, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[144, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[145, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[146, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[147, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[148, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[149, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[150, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[151, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[152, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[153, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[154, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[155, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[156, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[157, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[158, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[159, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[160, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[161, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[162, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[163, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[164, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[165, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[166, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[167, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[168, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[169, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[170, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[171, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[172, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[173, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[174, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[175, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[176, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[177, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[178, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[179, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[180, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[181, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[182, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[183, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[184, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[185, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[186, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[187, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[188, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[189, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[190, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[191, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[192, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[193, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[194, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[195, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[196, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[197, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[198, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[199, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[200, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[201, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[202, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[203, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[204, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[205, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[206, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[207, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[208, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[209, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[210, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[211, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[212, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[213, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[214, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[215, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[216, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[217, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[218, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[219, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[220, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[221, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[222, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[223, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[224, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[225, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[226, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[227, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[228, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[229, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[230, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[231, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[232, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[233, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[234, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[235, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[236, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[237, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[238, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[239, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[240, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[241, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[242, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[243, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[244, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[245, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[246, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[247, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[248, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[249, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[250, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[251, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[252, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[253, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[254, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[255, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[256, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[257, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[258, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[259, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[260, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[261, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[262, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[263, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[264, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[265, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[266, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[267, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[268, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[269, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[270, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[271, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[272, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[273, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[274, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[275, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[276, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[277, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[278, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[279, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[280, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[281, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[282, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[283, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[284, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[285, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[286, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[287, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[288, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[289, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[290, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[291, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[292, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[293, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[294, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[295, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[296, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[297, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[298, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[299, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[300, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[301, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[302, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[303, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[304, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[305, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[306, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[307, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[308, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[309, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[310, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[311, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[312, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[313, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[314, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[315, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[316, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[317, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[318, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[319, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[320, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[321, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[322, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[323, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[324, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[325, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[326, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[327, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[328, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[329, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], 
            DiskBox[330, 0.02261146496815286]}}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    FormatType->TraditionalForm,
    FrameTicks->None,
    ImageCache->GraphicsData["CompressedBitmap", "\<\
eJysvVvMJdl1Hlbu8//nfv77ve/T3XW6p6fnyuFQc+kezpAcqeoMdYk0I5uW
KIKmQpEyFFOikFiOq+TAQWxDIq0ERgA/+MWwHvIWJjBsGIFExA+OEQNBAL8F
BuwYIgEZkCVEYqjprpyqvdda37d2/d1NOw/9//2fS9Xea6/1rW9d9q73v/Ar
X/7SX/zCr/zCF79w7b2vfeE/+/IvfPGXr33ml762fmnwZ7LszzzX/ruWbaz/
32RZ8uNelv2H/P9vdj9PXlj/+Pr63zfX/35z/e+31v/+/vrf/7T+99vw2g/y
/jfjNV/V22R/rft5+3F3+9/W//71yfaFP/zknc2HP/P6+KN3nh09vLg/ebSz
mD16cGfSrF97uH7to8tHW49mO5c/uni4/fD+ctS+/ujdu5NH+9vzh6d7k4/W
rz2K3+8+u324/OP53jPf2dic/u4TRhuGmf3l7ucnHjfaf9aOdmM4/8Pdsxce
Hlz+WBzNsBvNazdGzeX9YfOfl9Pmu7910PzJ3z1sfv+/O2j+6o/OmpeubDT/
6Fd26LXrJ/Pm82+M9bPf/ss73ef6vt9+9tWb283PvDF55KTRzryV3J+8++zw
u2c7F5402zDN7s8sO5LZPnY99haT5mx//ujB7XE70+ZT9+ZNfiNvjo8u0Wj/
1ofz5t1nN9u/B+0L2aCbwI+9PGr+65+cZRfgtU8/N2onpq/97c/Nm+KFYfvV
LHz3tPvcjzw/7AQgwvjyJyfN1eN5n5AeXTnYfPjS1SGqwcNz1ECEEcWQfa37
eSDS+CdRCn/y9u3N9nKP3rk7bq4cDJt37gyfar1unQzb9ZbZ/WoxbT73Q+Pu
r4342s+9OW5+8d1J91f43LD52Tf0te5f/N5m9/YIv6LyfnAbhbbbK7T3Xxx1
Qnvn3o5q0KXD2cO9sxf/8ODSx/7N5nDxbRRKkEb2F7uf+94gWuH83mBz8r3p
1umj4/2dXgH88L1h87/+2m73Wrq2QQfeW38G9eK//fOLplx/7v/+xr5+rr3u
aj38v/HBXD/XvvbOHdaf9rvF8+l333+Jv9tK9MPXcCUOSaz/vN7txt43p7PT
K82tZ/Lmk3cXrRl8753U4FSEQXbZV7qfc9IrxI+zg/mj+7dH7aqsrWrR6c2v
//hsEPUBrCfVh8udunzx/lj14f/4r/a6wf/yD09bQXSv/d7fPugm88LljeYf
f32bXrtytOiuIZ9tF+z59ef6vv/ec8Pmn/3VXRVkq3st8pnARyhwXfiSFn6r
s5p2lo8xYESzb0WBfjXI88vdz+1Wnv9Dq4ZrG/3eg9ubikrPXMub65cu9y5f
O5L1DDMRLi47qE94+7nu62+vHdDbt4ckjPdfHDaXDufNG7dnzQcfHzdv5KPm
aHfW7CzWr+UTfe1kf7uZ711b/95pXr816l5/czlpdrcW689Pm9fzcfzsuDnZ
2Ww+8xzf5+ffHq/vs3jcYqBOCKy0Mv/k7U2Q+awXE9b/f3iyN/vuGhjJ9oOE
sy+livt7G5uTh4frmXrhtoJ7azn2sP+jBPuvdV/59F0bxeO07eLBojnYXpDg
zo4OmsVaoJPti83s6Fazn7+9/veg2b7ysWbr4r1m58or+tr+jbea/VtvNwe3
HqxfX79/Zu8frN/fu/nW+vfbzeL4TnN8sN28sZw2H7w2CYvRLtzuteZ4byvc
/7Vp8+DubnPxcIsW6W+utfydO5sEOb/0GQ8v8wS1v/Hn5p0FRHYjMCKa/vNh
Ab7Y/Rz3avqa9zBSDJq/9J6/8QnBg5n8vHnpumnu9ny6nujCNHct6JOj/Wbe
CrgV4FpI2yLAy680x8+tmmv3v9rkZX2hWRZVtmyWZbX+V8ffVfuq/s7b/xd1
eH/9O1+/npfhb/l9/cEvNsf3Vt2aHcj6rdenXavFyZ1mND9qtg5uNbsnzwVj
iobz8rVRZzhef1oEfHM5hnXZSZCphfkWD3pwos8qwmJkP9djFGtH+NHZfmoU
gDjoo9aEAgZ2ElFm3Fw/GikatIo+B0XvhCKKHBW9XYfrD74ShVrrIuSyGGER
LrR/rG+WR/m3f7XrVmeb67WJ62JfD+9daK+SjeGa8XpF/GB7zyJe+6x7q1vD
58Iaio3Jes5PUhs72Fl0avckcOuow/NDg5bxk8znC2GpfvYx5nP7bPRkvNpq
/ulf2W2eOer3pi0+tXo5WS9Taxrb7ZKsdfj6/a+2YqnWl+wk50Quos6797oV
iu9t2CoGKQ/iypl1dX+tPzqxFQPLCgvOK1mtOYIuWnvbQixPrLOWxQzfXYXP
XX87rOZeXM1W+ebHy/UqRus7BxF/6dPT5qdfG0flnv+gVhbWLPtc93P6RNfT
Qt76bptxufrQbh0cdmoWIGPSvHl72qni1sXn26VqhRDEP4/LFZcGEC3X16MM
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
rrD4BPk23xBUOThmSpXr8dUsnWwoSIqridfZz8FPemexTQ1t19Oh45e3fn99
Y/eNAlk8wjskrif7aq9+P0R4F6ZaFVUriqjlud4KeMy2gDBb6Cw0oAogwNus
HouHzDblwxIzjVXThfwrAch4TXHRwDRZtt3gKTTZBdeNdHeFzYZEgTMZYoU+
JXyWu/MJGBB52Cbqfjv9qjrqMdgfbvMi5LVlsZyqC3xpxfM0k0N77n9WV0V1
Q6JiNQl3pB2N2VeyubACdSfVsYBbL4UA86B1CZ5FZMYQ5uD6m7Nit7Z0BHFx
Lu55IuCrdtGMtGa1JypHO7M7XLYEOefF7GQ7G1GHvNU7AafaPorQ4d1PU2eV
oUPtb1kwV8Bj3YO5H7xyjITSUYjjQm804yMbTJ9BZz1rM+DL7x/zuFzkgLSV
MB3BjEUV8VICE+NF7adsaBM8bDM89X6BTgwUHk8ntlQFTZDquZp+8nfqliSG
/I0kPbgFyQX/hsNWmCvxV0/ZLHn0sIf+BqOtPBiIDMTcF0BSKKLeDFzrWE42
1uFSuMYHW0tpYPqa2XfmnLyqIlrgqdIZo+JHWRuRIE5kg4usnaPEnm4eiVVh
/tLv0ytfF5Rjd1OMDkupyQ4d1y6IqHyv7ZkuRGNmq4Dt6kROdRVl+K2HBEjp
+BUibLv+t+Gq+TfvbXqhrUVyh9L9Dx6lq+a3GWUoivv2To7i7ngU132tYtMC
HHZxYVwcmD1XXvFfoYbBLWMXF8Y9gtYZhpozh5Orco+iBcSiFaLEKCcxgGBZ
Ld4wBi/C6dX8zCyyL8nGFcbcDaXiznW5KkbfYtwsHPY7ZFUJGiRqp1rUmWvF
XDyvntWZW/rUXxUOlLZxKa1Yq+QezM9hHxhPmIO0dPMbC9okj601wEQqY5cm
8MLqRmCDk1Bd8gIqRgmPbGUFOPdS0QbLdM2aIGAQrDA5u0QK0yrM3AoxptS8
QlOd6knVsJKWGhxesXNyv3/uZN5/7ZX5GP345qc3+6+/Nu+//Gj++M7l2a8B
OtKPtRye5Rrb22U/bGbIJLDsokgsllyRmF8jN5GLJYhU5thzF3dfHl8S+i75
O+wO+JZwVKHSb9gmY7eE8jIv5JNXUygE/4xePzOyJOwE/Bcd6DsaXtTGThaB
Hi1hNucXHPZkX3LBc2HrV0PAo09Kc6UEpvsvPr/CX0UpQkwn56WfAbLYhjAV
YQWJU0EptBBJNxRTwOoUCKHYaIsqjBmt0ZzDIVBNWKFbvaHvl2WndYD4oItX
jX301DwoG7xpEBYHEs2iER6auz6kGRkDA5gUMNzkUOzldCj2/sXe93YOn/vF
iChj4+tPLk72xvpau1P1Zz7Y7r/0aKO/eYzG13638CRHCsI0dTpbKJcIau9x
mLlMjrKbspa0R55+g6xGUTScJ8snqrggE+RHmoAk5nWjQIjwceZlVzXve5UJ
EvZYgVBDb3FVkC1lmWXI6lQmpNTDUXTmFeSlPsnz3FwvvNVjBbVu5KzhxFQW
sH9QJzIngIdj+k4Q/SV7ry2GplQWO2R5K/YnwQnVc8JP5Mi4uybzkYWdp9or
vi9sXK6MGP97lA85ik0sZlJq5oxkFEtovQkc3jAT5iI20U95VtK5cKMg10bV
Shz1vU9NUnaLcOtXX9393fX53hsRPk69rfXl5f3+pct5/5WX52O2+auvbo9F
ttsnd0nVmQlEY0ndO9XW22fTvG6HOEYpyxKVmZR1tTXqL9nmZqt8S8GOZZMp
rL3CW6OoXLLsCPSL+m7TFJJFruReZNbJDXk+Pafh62f1MxhnXiakwgOON7x6
ujlFkNOYNWitaL8beyGdbgdJBCrZTz0Rq/ieD88Qtis+5cFuaQwgUA0PzF3S
4GTOqj28fFFyInKTyVngTJ/e5uB7y3vHVpPLrIpUTWOY3cRb6lVe2Zx0XKHF
JjGvfhrdhYgCkC8qD/mDkzabB972uzcfDDHYGbW3/g0Lwgqk7Hp76wcvPLwm
g5Nq9EFxqaK2zo6FgeHsRVFUdyeWPCUa+sRuCz4QELC8aiaxndiAFu6T9+EJ
0lJy6iYW+sJvWDSIIvrmJ9t1BCU2OJwibA3FdJlyDHpRjf3Naj7PwrpmvT78
AHK8VT74Rcg+uPtCGBtvs/JbSkP1ham/svYmrkpxpUSj/SxaGJOtgE1sulvM
7UjNFitaYVd8r/n3HMWWxK4NtMHgiWLOOO8GT43EcwnREs+V1gzue9PlPnSR
IpU5JLIF4W/piHVV4/qUaF66YiXy9+1Ip2E4u9HpqtOdozv9p57fnQqm/rGV
xO4wWlzTmToniV/Zyg0gM7QdC/IxJammZu+jl98jVRMgjzh23oyTYOzz5+n6
LPEtg/hVeYN50fxuWnqu+pLwEZg0j2New1PmYWaEnIn9KpPuZKd8wCBNN0zE
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
1hGQ0slXFzXdc6cpYUTNmIWq+9a0UsCMEImb+0Zj1c42qdHDwgNFmyQxcHQ0
8UKlbwhZqs7gncN3lgOnt3zcU6jDRiafg6n/6fe3WK0/uTje/b319S1mEWnf
Zx+DfBqJ+N31je1PTg/3BCB+4WvjS9KW335mbBjyI0NBxPH9z0MUlmT9xfmj
7avNb609q88xEG9N4XDixIMDF0I+aEumqrvV6HS20XL0CwRGgMelwvmOnjYi
fuOxNit2t/qp4cLn3ZsP+q3Dqx+eGaRqlA8fba3UdXNQ3e+9U20Mqmws4Vtp
t/+FJyj7S5ebK4UfT9dcr+xHE3xhs3/ufK8/ufpUf3b37XTwIWfF7hqjhKEz
oi/UwemD6ywicByyot0WPHAGmSn3oUDJIujWwpzUGmaZOO+MpGkeKKubC8Vt
Z5jGUe6MD2ayN7QysCzR2y9u9ndOp5XnGe37J7dPd393bX1b/IK0u7Nvlyr9
v60+OoDA9Sp99kSVfvHe3f7+vSpv+tYK4bdHhN85zer9/Oc9DSquIWVBBRFZ
R3bJVrMakoHALmYkPew9sD0ZrqJ3iRTAMevybZgxbOz1KMxzlxhftsirZ6wm
vYLbndMXriVtQ/DnKy9vPNlKb0UrHXX3X0zb+lP/f3X30kMGX0rVv77Fg09w
53TDMecrr+6s5nIA9I7by9yqNj7Vwm/y7ZhR27r1njlWClpRcyzbryUFkhtV
PrES6jQciydgmuegenSV6qzuvNWf3fnsanJHY2lLoFKe2/ileqf/9he2cpng
D2VX0zbN/vwPp4TJeN8SP904+HXnDe6ebfSfvj/3vO+QiNs8vBwnvH/7Vdhb
X5iWpH8rUDKNubgCo/G+kOgJr0nNOCfzzjwCMgiRCdTR6ueAjIPB2Du+PxZr
pt5HW/1XVvhSvVj1Fzefm6I6a2QImycYwgll+pfT9vz0sykTO85feXlOjnNS
sOHlULD3PNc/bI8q13ylXNuZHW+PWzUq12odhvU4uP2ab5v9TiiT+kHmKqhx
JU/TPJSoB/L859M+DLmXzb2zfv/0xf7o4uVRN0Yg+OLWCix2++cvhuMC80L8
BhJwXT7Qjpk/4QTOlAVLuzL7mfHfvafqjjmtL61G8t/924fXK+/tMQv+r39l
+6k6NdDeq7P9FThsuiAOtT6He9tAR9e1W1jU++OiJqNwde2eJnm/Vcj7eEPX
xeHKiNxdvf4gv367/+iN4/75y+n1H6aASqdkWYa8GSzLwbUM4htvzkfS9s7D
3Skl+dm0Dz83/nvASjLU53/y8Wc3h2zIJxcne48P99VP+I8+TodLXHk2U9Tp
U5uezCsV51H/P/17R6NATe3Jp+6uD4J2jULx4t0R4S337nqB/rkvbff3Vr+f
ev/UQn8zm3ADCDIO+XO7bta/+GBrqKcYjq4/vnV++r3dw+eGCJ1Qt7TUs391
/PfcJP+vzVKmvDPPbLUDn3zhwXjwp//cg6P+6nw6jDNUwVkYJ6tDVoWEW196
uFEQgzylp6rIII9/7p2tp24TLZ2t3MCHPpC7fqZW80S09Xu538WHj1LJaISR
bIL/7mp5fm31v79Jq/qvpUX9N8Z/jzi/8sd7x89/sgK7UYS/mBf0g1eOxwX9
6NX59eK81v/CRztjk0rAy1wGTOLNcxxue1ktyeS8pySL0UxfN70+Q5WimR3L
Od0+2//k7HB3OIQ7KO2fvKtqnhZm9ovjv2dR6P4LXatXvn95cjA86fFPfHar
/8wLOyNORuEbNlxsZ1Kz5ZtQ/yyPG6Q5eS6+NjQ/D2XFOQ+y9P6Cbf/xdevQ
P3cyf/zmvdEx/u5qDX47J1RMtf4aa2JajdlfHP+9dZ0mDgr8J7uHdwaFHhMu
qWBqr793/+X+3p3nJ7XyjTvrg52KgiXh+aEbHYsJrV5eipuT0/zZD7dGsJt4
7+Ork41P3ri78f2VCAwRwGH6U+ry76SZ//vjv5+2mf9n+ZP/Q571H57cev37
p8+9NYjDJ194aT4s6ghtFyf7Pzjc3X6qiAwrcXflOw4b/6QVKjbvs1s/WFmd
IXT9yd7xPRNHFuxfn9jQNJ3ZfzD++3BqP22Gf/NJezz4ZjSCH+QRfJJnG1fg
urVmkZsSvzTM2a+O/57EPbjuCdf93Z6aHjfrh39ee/b/nv0z/x/Xl17u\
\>"]], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12}, {Null, 
         SparseArray[
         Automatic, {12, 12}, 0, {
          1, {{0, 2, 4, 6, 9, 12, 14, 16, 17, 19, 20, 21, 22}, {{2}, {12}, {
            1}, {3}, {2}, {4}, {3}, {5}, {11}, {4}, {6}, {9}, {5}, {7}, {6}, {
            8}, {7}, {5}, {10}, {9}, {4}, {1}}}, Pattern}]}, {
        VertexStyle -> {
          6 -> RGBColor[0.97, 0.606, 0.081], 1 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 9 -> 
           RGBColor[0.97, 0.606, 0.081], 2 -> RGBColor[0.97, 0.606, 0.081], 8 -> 
           RGBColor[0.97, 0.606, 0.081], 3 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 4 -> 
           RGBColor[0.97, 0.606, 0.081], 11 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 10 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 7 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 12 -> 
           RGBColor[0.97, 0.606, 0.081], 5 -> 
           RGBColor[0.34398, 0.49112, 0.89936]}, 
         VertexCoordinates -> {{0, 0.865410983413526}, {
           0, 1.7308219668270517`}, {0, 2.5962329502405774`}, {
           1.0817637292669073`, 3.4616439336541034`}, {1.2981164751202887`, 
           2.5962329502405774`}, {0.8654109834135258, 1.7308219668270517`}, {
           0.8654109834135258, 0.865410983413526}, {0.8654109834135258, 0}, {
           1.7308219668270517`, 1.7308219668270517`}, {1.7308219668270517`, 
           0.865410983413526}, {2.1635274585338147`, 2.5962329502405774`}, {0,
            0}}}]]}, 
      TagBox[
       GraphicsGroupBox[
        GraphicsComplexBox[{{0., 0.865410983413526}, {0., 
         1.7308219668270517`}, {0., 2.5962329502405774`}, {
         1.0817637292669073`, 3.4616439336541034`}, {1.2981164751202887`, 
         2.5962329502405774`}, {0.8654109834135258, 1.7308219668270517`}, {
         0.8654109834135258, 0.865410983413526}, {0.8654109834135258, 0.}, {
         1.7308219668270517`, 1.7308219668270517`}, {1.7308219668270517`, 
         0.865410983413526}, {2.1635274585338147`, 2.5962329502405774`}, {0., 
         0.}}, {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
           ArrowBox[{{1, 2}, {1, 12}, {2, 3}, {3, 4}, {4, 5}, {4, 11}, {5, 
            6}, {5, 9}, {6, 7}, {7, 8}, {9, 10}}, 0.033461047919891504`]}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[1, 0.033461047919891504]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[2, 0.033461047919891504]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[3, 0.033461047919891504]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[4, 0.033461047919891504]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[5, 0.033461047919891504]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[6, 0.033461047919891504]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[7, 0.033461047919891504]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[8, 0.033461047919891504]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[9, 0.033461047919891504]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[10, 0.033461047919891504]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[11, 0.033461047919891504]}, 
           {RGBColor[0.97, 0.606, 0.081], 
            DiskBox[12, 0.033461047919891504]}}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    FormatType->TraditionalForm,
    FrameTicks->None], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12}, {Null, 
         SparseArray[
         Automatic, {12, 12}, 0, {
          1, {{0, 1, 5, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22}, {{2}, {1}, {
            3}, {11}, {12}, {2}, {4}, {7}, {8}, {9}, {10}, {3}, {5}, {6}, {
            4}, {4}, {3}, {3}, {3}, {3}, {2}, {2}}}, Pattern}]}, {
        VertexStyle -> {
          6 -> RGBColor[0.34398, 0.49112, 0.89936], 1 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 9 -> 
           RGBColor[0.97, 0.606, 0.081], 2 -> RGBColor[0.97, 0.606, 0.081], 8 -> 
           RGBColor[0.97, 0.606, 0.081], 3 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 4 -> 
           RGBColor[0.97, 0.606, 0.081], 11 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 10 -> 
           RGBColor[0.97, 0.606, 0.081], 7 -> RGBColor[0.97, 0.606, 0.081], 
           12 -> RGBColor[0.34398, 0.49112, 0.89936], 5 -> 
           RGBColor[0.34398, 0.49112, 0.89936]}, 
         VertexCoordinates -> {{0, 0}, {0.5125295768676956, 
           0.5125295768676956}, {2.1782507016877064`, 1.0250591537353912`}, {
           1.7938535190369347`, 0.5125295768676956}, {
           1.5375887306030869`, 0}, {2.0501183074707825`, 0}, {
           2.3063830959046303`, 0.5125295768676956}, {2.818912672772326, 
           0.5125295768676956}, {3.3314422496400216`, 0.5125295768676956}, {
           3.843971826507717, 0.5125295768676956}, {0.5125295768676956, 0}, {
           1.0250591537353912`, 0}}}]]}, 
      TagBox[
       GraphicsGroupBox[
        GraphicsComplexBox[{{0., 0.}, {0.5125295768676956, 
         0.5125295768676956}, {2.1782507016877064`, 1.0250591537353912`}, {
         1.7938535190369347`, 0.5125295768676956}, {1.5375887306030869`, 
         0.}, {2.0501183074707825`, 0.}, {2.3063830959046303`, 
         0.5125295768676956}, {2.818912672772326, 0.5125295768676956}, {
         3.3314422496400216`, 0.5125295768676956}, {3.843971826507717, 
         0.5125295768676956}, {0.5125295768676956, 0.}, {1.0250591537353912`, 
         0.}}, {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
           ArrowBox[{{1, 2}, {2, 3}, {2, 11}, {2, 12}, {3, 4}, {3, 7}, {3, 
            8}, {3, 9}, {3, 10}, {4, 5}, {4, 6}}, 0.0360007289239863]}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[1, 0.0360007289239863]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[2, 0.0360007289239863]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[3, 0.0360007289239863]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[4, 0.0360007289239863]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[5, 0.0360007289239863]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[6, 0.0360007289239863]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[7, 0.0360007289239863]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[8, 0.0360007289239863]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[9, 0.0360007289239863]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[10, 0.0360007289239863]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[11, 0.0360007289239863]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[12, 0.0360007289239863]}}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    FormatType->TraditionalForm,
    FrameTicks->None], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 
        19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 
        36, 37, 38, 39, 40}, {Null, 
         SparseArray[
         Automatic, {40, 40}, 0, {
          1, {{0, 2, 4, 6, 8, 11, 13, 15, 18, 21, 23, 25, 28, 32, 36, 40, 44, 
            48, 52, 56, 60, 64, 68, 72, 76, 80, 84, 88, 92, 95, 97, 99, 102, 
            105, 107, 109, 112, 114, 116, 118, 120}, {{8}, {14}, {13}, {15}, {
            14}, {16}, {5}, {15}, {4}, {12}, {18}, {17}, {19}, {18}, {20}, {
            1}, {9}, {19}, {8}, {16}, {22}, {21}, {23}, {22}, {24}, {5}, {
            13}, {23}, {2}, {12}, {20}, {26}, {1}, {3}, {25}, {27}, {2}, {
            4}, {26}, {28}, {3}, {9}, {17}, {27}, {6}, {16}, {24}, {30}, {
            5}, {7}, {29}, {31}, {6}, {8}, {30}, {32}, {7}, {13}, {21}, {
            31}, {10}, {20}, {28}, {34}, {9}, {11}, {33}, {35}, {10}, {12}, {
            34}, {36}, {11}, {17}, {25}, {35}, {14}, {24}, {32}, {38}, {13}, {
            15}, {37}, {39}, {14}, {16}, {38}, {40}, {15}, {21}, {29}, {39}, {
            18}, {28}, {36}, {17}, {19}, {18}, {20}, {19}, {25}, {33}, {22}, {
            32}, {40}, {21}, {23}, {22}, {24}, {23}, {29}, {37}, {26}, {36}, {
            25}, {27}, {26}, {28}, {27}, {33}}}, Pattern}]}, {
        VertexStyle -> {
          5 -> RGBColor[0.34398, 0.49112, 0.89936], 15 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 22 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 9 -> 
           RGBColor[0.97, 0.606, 0.081], 36 -> RGBColor[0.97, 0.606, 0.081], 
           14 -> RGBColor[0.34398, 0.49112, 0.89936], 19 -> 
           RGBColor[0.97, 0.606, 0.081], 6 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 26 -> 
           RGBColor[0.97, 0.606, 0.081], 18 -> RGBColor[0.97, 0.606, 0.081], 
           2 -> RGBColor[0.97, 0.606, 0.081], 38 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 12 -> 
           RGBColor[0.97, 0.606, 0.081], 17 -> RGBColor[0.97, 0.606, 0.081], 
           31 -> RGBColor[0.34398, 0.49112, 0.89936], 34 -> 
           RGBColor[0.97, 0.606, 0.081], 7 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 37 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 39 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 10 -> 
           RGBColor[0.97, 0.606, 0.081], 24 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 30 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 8 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 33 -> 
           RGBColor[0.97, 0.606, 0.081], 11 -> RGBColor[0.97, 0.606, 0.081], 
           13 -> RGBColor[0.34398, 0.49112, 0.89936], 29 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 1 -> 
           RGBColor[0.97, 0.606, 0.081], 3 -> RGBColor[0.97, 0.606, 0.081], 
           21 -> RGBColor[0.34398, 0.49112, 0.89936], 27 -> 
           RGBColor[0.97, 0.606, 0.081], 28 -> RGBColor[0.97, 0.606, 0.081], 
           25 -> RGBColor[0.97, 0.606, 0.081], 4 -> 
           RGBColor[0.97, 0.606, 0.081], 32 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 16 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 40 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 35 -> 
           RGBColor[0.97, 0.606, 0.081], 20 -> RGBColor[0.97, 0.606, 0.081], 
           23 -> RGBColor[0.34398, 0.49112, 0.89936]}, 
         VertexCoordinates -> {{1, 1}, {2, 1}, {3, 1}, {4, 1}, {1, 2}, {2, 
          2}, {3, 2}, {4, 2}, {1, 3}, {2, 3}, {3, 3}, {4, 3}, {1, 4}, {2, 
          4}, {3, 4}, {4, 4}, {1, 5}, {2, 5}, {3, 5}, {4, 5}, {1, 6}, {2, 
          6}, {3, 6}, {4, 6}, {1, 7}, {2, 7}, {3, 7}, {4, 7}, {1, 8}, {2, 
          8}, {3, 8}, {4, 8}, {1, 9}, {2, 9}, {3, 9}, {4, 9}, {1, 10}, {2, 
          10}, {3, 10}, {4, 10}}}]]}, 
      TagBox[GraphicsGroupBox[GraphicsComplexBox[CompressedData["
1:eJx9zjEKgDAQRNHFasspLCwsVCy8hZ7BIwjWXt0jqMgI+YWBMLzik/Tbse5V
REz3ffY951xuLKUT1vLfcRMWzHfYcQXzX3yHHdd9jd5OWLD7Br2dsGD3LXo7
YcHuO/R2woLdD+jthAW7H9HbCevzBV08JvA=
         "], {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
           ArrowBox[{{1, 8}, {1, 14}, {2, 13}, {2, 15}, {3, 14}, {3, 16}, {4, 
            5}, {4, 15}, {5, 12}, {5, 18}, {6, 17}, {6, 19}, {7, 18}, {7, 
            20}, {8, 9}, {8, 19}, {9, 16}, {9, 22}, {10, 21}, {10, 23}, {11, 
            22}, {11, 24}, {12, 13}, {12, 23}, {13, 20}, {13, 26}, {14, 25}, {
            14, 27}, {15, 26}, {15, 28}, {16, 17}, {16, 27}, {17, 24}, {17, 
            30}, {18, 29}, {18, 31}, {19, 30}, {19, 32}, {20, 21}, {20, 31}, {
            21, 28}, {21, 34}, {22, 33}, {22, 35}, {23, 34}, {23, 36}, {24, 
            25}, {24, 35}, {25, 32}, {25, 38}, {26, 37}, {26, 39}, {27, 38}, {
            27, 40}, {28, 29}, {28, 39}, {29, 36}, {32, 33}, {33, 40}, {36, 
            37}}, 0.061894273127753294`]}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[1, 0.061894273127753294]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[2, 0.061894273127753294]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[3, 0.061894273127753294]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[4, 0.061894273127753294]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[5, 0.061894273127753294]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[6, 0.061894273127753294]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[7, 0.061894273127753294]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[8, 0.061894273127753294]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[9, 0.061894273127753294]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[10, 0.061894273127753294]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[11, 0.061894273127753294]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[12, 0.061894273127753294]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[13, 0.061894273127753294]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[14, 0.061894273127753294]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[15, 0.061894273127753294]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[16, 0.061894273127753294]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[17, 0.061894273127753294]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[18, 0.061894273127753294]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[19, 0.061894273127753294]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[20, 0.061894273127753294]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[21, 0.061894273127753294]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[22, 0.061894273127753294]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[23, 0.061894273127753294]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[24, 0.061894273127753294]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[25, 0.061894273127753294]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[26, 0.061894273127753294]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[27, 0.061894273127753294]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[28, 0.061894273127753294]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[29, 0.061894273127753294]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[30, 0.061894273127753294]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[31, 0.061894273127753294]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[32, 0.061894273127753294]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[33, 0.061894273127753294]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[34, 0.061894273127753294]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[35, 0.061894273127753294]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[36, 0.061894273127753294]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[37, 0.061894273127753294]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[38, 0.061894273127753294]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[39, 0.061894273127753294]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[40, 0.061894273127753294]}}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    FormatType->TraditionalForm,
    FrameTicks->None], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12}, {Null, 
         SparseArray[
         Automatic, {12, 12}, 0, {
          1, {{0, 1, 4, 9, 12, 13, 14, 17, 18, 19, 20, 21, 22}, {{2}, {1}, {
            3}, {11}, {2}, {4}, {7}, {10}, {12}, {3}, {5}, {6}, {4}, {4}, {
            3}, {8}, {9}, {7}, {7}, {3}, {2}, {3}}}, Pattern}]}, {
        VertexStyle -> {
          6 -> RGBColor[0.34398, 0.49112, 0.89936], 1 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 9 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 2 -> 
           RGBColor[0.97, 0.606, 0.081], 8 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 3 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 4 -> 
           RGBColor[0.97, 0.606, 0.081], 11 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 10 -> 
           RGBColor[0.97, 0.606, 0.081], 7 -> RGBColor[0.97, 0.606, 0.081], 
           12 -> RGBColor[0.97, 0.606, 0.081], 5 -> 
           RGBColor[0.34398, 0.49112, 0.89936]}, 
         VertexCoordinates -> {{0, 0}, {0.2744858206782723, 
           0.5489716413565446}, {1.921400744747906, 1.0979432827130893`}, {
           1.3724291033913614`, 0.5489716413565446}, {
           1.0979432827130893`, 0}, {1.6469149240696337`, 0}, {
           2.4703723861044504`, 0.5489716413565446}, {
           2.1958865654261785`, 0}, {2.7448582067827227`, 0}, {
           3.019344027460995, 0.5489716413565446}, {0.5489716413565446, 0}, {
           3.5683156688175397`, 0.5489716413565446}}}]]}, 
      TagBox[
       GraphicsGroupBox[
        GraphicsComplexBox[{{0., 0.}, {0.2744858206782723, 
         0.5489716413565446}, {1.921400744747906, 1.0979432827130893`}, {
         1.3724291033913614`, 0.5489716413565446}, {1.0979432827130893`, 
         0.}, {1.6469149240696337`, 0.}, {2.4703723861044504`, 
         0.5489716413565446}, {2.1958865654261785`, 0.}, {2.7448582067827227`,
          0.}, {3.019344027460995, 0.5489716413565446}, {0.5489716413565446, 
         0.}, {3.5683156688175397`, 0.5489716413565446}}, {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
           ArrowBox[{{1, 2}, {2, 3}, {2, 11}, {3, 4}, {3, 7}, {3, 10}, {3, 
            12}, {4, 5}, {4, 6}, {7, 8}, {7, 9}}, 0.03418094512764072]}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[1, 0.03418094512764072]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[2, 0.03418094512764072]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[3, 0.03418094512764072]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[4, 0.03418094512764072]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[5, 0.03418094512764072]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[6, 0.03418094512764072]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[7, 0.03418094512764072]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[8, 0.03418094512764072]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[9, 0.03418094512764072]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[10, 0.03418094512764072]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[11, 0.03418094512764072]}, 
           {RGBColor[0.97, 0.606, 0.081], 
            DiskBox[12, 0.03418094512764072]}}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    FormatType->TraditionalForm,
    FrameTicks->None], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 
        19, 20, 21, 22}, {Null, 
         SparseArray[
         Automatic, {22, 22}, 0, {
          1, {{0, 15, 30, 45, 60, 75, 90, 105, 112, 119, 126, 133, 140, 147, 
            154, 161, 168, 175, 182, 189, 196, 203, 210}, {{8}, {9}, {10}, {
            11}, {12}, {13}, {14}, {15}, {16}, {17}, {18}, {19}, {20}, {21}, {
            22}, {8}, {9}, {10}, {11}, {12}, {13}, {14}, {15}, {16}, {17}, {
            18}, {19}, {20}, {21}, {22}, {8}, {9}, {10}, {11}, {12}, {13}, {
            14}, {15}, {16}, {17}, {18}, {19}, {20}, {21}, {22}, {8}, {9}, {
            10}, {11}, {12}, {13}, {14}, {15}, {16}, {17}, {18}, {19}, {20}, {
            21}, {22}, {8}, {9}, {10}, {11}, {12}, {13}, {14}, {15}, {16}, {
            17}, {18}, {19}, {20}, {21}, {22}, {8}, {9}, {10}, {11}, {12}, {
            13}, {14}, {15}, {16}, {17}, {18}, {19}, {20}, {21}, {22}, {8}, {
            9}, {10}, {11}, {12}, {13}, {14}, {15}, {16}, {17}, {18}, {19}, {
            20}, {21}, {22}, {1}, {2}, {3}, {4}, {5}, {6}, {7}, {1}, {2}, {
            3}, {4}, {5}, {6}, {7}, {1}, {2}, {3}, {4}, {5}, {6}, {7}, {1}, {
            2}, {3}, {4}, {5}, {6}, {7}, {1}, {2}, {3}, {4}, {5}, {6}, {7}, {
            1}, {2}, {3}, {4}, {5}, {6}, {7}, {1}, {2}, {3}, {4}, {5}, {6}, {
            7}, {1}, {2}, {3}, {4}, {5}, {6}, {7}, {1}, {2}, {3}, {4}, {5}, {
            6}, {7}, {1}, {2}, {3}, {4}, {5}, {6}, {7}, {1}, {2}, {3}, {4}, {
            5}, {6}, {7}, {1}, {2}, {3}, {4}, {5}, {6}, {7}, {1}, {2}, {3}, {
            4}, {5}, {6}, {7}, {1}, {2}, {3}, {4}, {5}, {6}, {7}, {1}, {2}, {
            3}, {4}, {5}, {6}, {7}}}, Pattern}]}, {
        VertexStyle -> {
          18 -> RGBColor[0.97, 0.606, 0.081], 6 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 22 -> 
           RGBColor[0.97, 0.606, 0.081], 15 -> RGBColor[0.97, 0.606, 0.081], 
           1 -> RGBColor[0.34398, 0.49112, 0.89936], 20 -> 
           RGBColor[0.97, 0.606, 0.081], 9 -> RGBColor[0.97, 0.606, 0.081], 
           13 -> RGBColor[0.97, 0.606, 0.081], 2 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 8 -> 
           RGBColor[0.97, 0.606, 0.081], 21 -> RGBColor[0.97, 0.606, 0.081], 
           3 -> RGBColor[0.34398, 0.49112, 0.89936], 4 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 11 -> 
           RGBColor[0.97, 0.606, 0.081], 10 -> RGBColor[0.97, 0.606, 0.081], 
           19 -> RGBColor[0.97, 0.606, 0.081], 7 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 16 -> 
           RGBColor[0.97, 0.606, 0.081], 17 -> RGBColor[0.97, 0.606, 0.081], 
           14 -> RGBColor[0.97, 0.606, 0.081], 12 -> 
           RGBColor[0.97, 0.606, 0.081], 5 -> 
           RGBColor[0.34398, 0.49112, 0.89936]}, 
         VertexCoordinates -> CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQMlWy5dzRW+tB/Gd519+PhzyRNo/B37GXAAqLw9
mn44H2o+lP/B/o766XOrxJ7uh/Eh8o/gfLGmLTsTFe7B+RDzbqCpv4QmfwKN
vwPOR3UtXN4eTb89mvlo8jfgfKj70NQ/QvefPQARom91
          "]}]]}, 
      TagBox[GraphicsGroupBox[GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQMlWy5dzRW+tB/Gd519+PhzyRNo/B37GXAAqLw9
mn44H2o+lP/B/o766XOrxJ7uh/Eh8o/gfLGmLTsTFe7B+RDzbqCpv4QmfwKN
vwPOR3UtXN4eTb89mvlo8jfgfKj70NQ/QvefPQARom91
         "], {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
           ArrowBox[{{1, 8}, {1, 9}, {1, 10}, {1, 11}, {1, 12}, {1, 13}, {1, 
            14}, {1, 15}, {1, 16}, {1, 17}, {1, 18}, {1, 19}, {1, 20}, {1, 
            21}, {1, 22}, {2, 8}, {2, 9}, {2, 10}, {2, 11}, {2, 12}, {2, 
            13}, {2, 14}, {2, 15}, {2, 16}, {2, 17}, {2, 18}, {2, 19}, {2, 
            20}, {2, 21}, {2, 22}, {3, 8}, {3, 9}, {3, 10}, {3, 11}, {3, 
            12}, {3, 13}, {3, 14}, {3, 15}, {3, 16}, {3, 17}, {3, 18}, {3, 
            19}, {3, 20}, {3, 21}, {3, 22}, {4, 8}, {4, 9}, {4, 10}, {4, 
            11}, {4, 12}, {4, 13}, {4, 14}, {4, 15}, {4, 16}, {4, 17}, {4, 
            18}, {4, 19}, {4, 20}, {4, 21}, {4, 22}, {5, 8}, {5, 9}, {5, 
            10}, {5, 11}, {5, 12}, {5, 13}, {5, 14}, {5, 15}, {5, 16}, {5, 
            17}, {5, 18}, {5, 19}, {5, 20}, {5, 21}, {5, 22}, {6, 8}, {6, 
            9}, {6, 10}, {6, 11}, {6, 12}, {6, 13}, {6, 14}, {6, 15}, {6, 
            16}, {6, 17}, {6, 18}, {6, 19}, {6, 20}, {6, 21}, {6, 22}, {7, 
            8}, {7, 9}, {7, 10}, {7, 11}, {7, 12}, {7, 13}, {7, 14}, {7, 
            15}, {7, 16}, {7, 17}, {7, 18}, {7, 19}, {7, 20}, {7, 21}, {7, 
            22}}, 0.016826776294539436`]}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[1, 0.016826776294539436]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[2, 0.016826776294539436]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[3, 0.016826776294539436]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[4, 0.016826776294539436]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[5, 0.016826776294539436]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[6, 0.016826776294539436]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[7, 0.016826776294539436]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[8, 0.016826776294539436]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[9, 0.016826776294539436]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[10, 0.016826776294539436]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[11, 0.016826776294539436]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[12, 0.016826776294539436]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[13, 0.016826776294539436]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[14, 0.016826776294539436]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[15, 0.016826776294539436]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[16, 0.016826776294539436]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[17, 0.016826776294539436]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[18, 0.016826776294539436]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[19, 0.016826776294539436]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[20, 0.016826776294539436]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[21, 0.016826776294539436]}, 
           {RGBColor[0.97, 0.606, 0.081], 
            DiskBox[22, 0.016826776294539436]}}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    FormatType->TraditionalForm,
    FrameTicks->None], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 
        19, 20}, {Null, 
         SparseArray[
         Automatic, {20, 20}, 0, {
          1, {{0, 4, 8, 12, 16, 20, 24, 28, 32, 36, 40, 44, 48, 52, 56, 60, 
            64, 68, 72, 76, 80}, {{11}, {15}, {16}, {20}, {11}, {12}, {16}, {
            17}, {12}, {13}, {17}, {18}, {13}, {14}, {18}, {19}, {14}, {15}, {
            19}, {20}, {11}, {15}, {16}, {20}, {11}, {12}, {16}, {17}, {12}, {
            13}, {17}, {18}, {13}, {14}, {18}, {19}, {14}, {15}, {19}, {20}, {
            1}, {2}, {6}, {7}, {2}, {3}, {7}, {8}, {3}, {4}, {8}, {9}, {4}, {
            5}, {9}, {10}, {1}, {5}, {6}, {10}, {1}, {2}, {6}, {7}, {2}, {
            3}, {7}, {8}, {3}, {4}, {8}, {9}, {4}, {5}, {9}, {10}, {1}, {5}, {
            6}, {10}}}, Pattern}]}, {
        VertexStyle -> {
          18 -> RGBColor[0.34398, 0.49112, 0.89936], 6 -> 
           RGBColor[0.97, 0.606, 0.081], 15 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 1 -> 
           RGBColor[0.97, 0.606, 0.081], 20 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 9 -> 
           RGBColor[0.97, 0.606, 0.081], 13 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 2 -> 
           RGBColor[0.97, 0.606, 0.081], 8 -> RGBColor[0.97, 0.606, 0.081], 3 -> 
           RGBColor[0.97, 0.606, 0.081], 4 -> RGBColor[0.97, 0.606, 0.081], 
           11 -> RGBColor[0.34398, 0.49112, 0.89936], 10 -> 
           RGBColor[0.97, 0.606, 0.081], 19 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 7 -> 
           RGBColor[0.97, 0.606, 0.081], 16 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 17 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 14 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 12 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 5 -> 
           RGBColor[0.97, 0.606, 0.081]}, 
         VertexCoordinates -> {{0.9511, 0.309}, {0.5878, 0.809}, {
           0, 1.}, {-0.5878, 0.809}, {-0.9511, 
           0.309}, {-0.9511, -0.309}, {-0.5878, -0.809}, {0, -1.}, {
           0.5878, -0.809}, {0.9511, -0.309}, {0.809, 0.5878}, {0.309, 
           0.9511}, {-0.309, 0.9511}, {-0.809, 
           0.5878}, {-1., 0}, {-0.809, -0.5878}, {-0.309, -0.9511}, {
           0.309, -0.9511}, {0.809, -0.5878}, {1., 0}}}]]}, 
      TagBox[GraphicsGroupBox[GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQAWIQLWuR7pKZ/85ed9Pc98uPXbYvvi70yfH8I3vxm+e+
Bz9+ac+AAj7A5PfD5KH698P0o/H3o6nfj2befjT79qO5B24PTB2aPXB1MD7M
HJh6mD0wG9Hk96Ppx/AHmv37YeEAMw8Aw3Gbhg==
         "], {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
           ArrowBox[{{1, 11}, {1, 15}, {1, 16}, {1, 20}, {2, 11}, {2, 12}, {2,
             16}, {2, 17}, {3, 12}, {3, 13}, {3, 17}, {3, 18}, {4, 13}, {4, 
            14}, {4, 18}, {4, 19}, {5, 14}, {5, 15}, {5, 19}, {5, 20}, {6, 
            11}, {6, 15}, {6, 16}, {6, 20}, {7, 11}, {7, 12}, {7, 16}, {7, 
            17}, {8, 12}, {8, 13}, {8, 17}, {8, 18}, {9, 13}, {9, 14}, {9, 
            18}, {9, 19}, {10, 14}, {10, 15}, {10, 19}, {10, 20}}, 
            0.02261146496815286]}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[1, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[2, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[3, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[4, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[5, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[6, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[7, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[8, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[9, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[10, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[11, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[12, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[13, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[14, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[15, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[16, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[17, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[18, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[19, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[20, 0.02261146496815286]}}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    FormatType->TraditionalForm,
    FrameTicks->None], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9}, {Null, 
         SparseArray[
         Automatic, {9, 9}, 0, {
          1, {{0, 1, 4, 6, 9, 12, 13, 14, 15, 16}, {{2}, {1}, {3}, {9}, {2}, {
            4}, {3}, {5}, {8}, {4}, {6}, {7}, {5}, {5}, {4}, {2}}}, 
           Pattern}]}, {
        VertexStyle -> {
          6 -> RGBColor[0.34398, 0.49112, 0.89936], 1 -> 
           RGBColor[0.97, 0.606, 0.081], 9 -> RGBColor[0.97, 0.606, 0.081], 2 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 8 -> 
           RGBColor[0.97, 0.606, 0.081], 3 -> RGBColor[0.97, 0.606, 0.081], 4 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 7 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 5 -> 
           RGBColor[0.97, 0.606, 0.081]}, 
         VertexCoordinates -> {{5, 0}, {4, 0}, {3, 0}, {2, 0}, {1, 0}, {0, 
          0}, {1, 1}, {2, 1}, {4, 1}}}]]}, 
      TagBox[
       GraphicsGroupBox[
        GraphicsComplexBox[{{5., 0.}, {4., 0.}, {3., 0.}, {2., 0.}, {1., 
         0.}, {0., 0.}, {1., 1.}, {2., 1.}, {4., 1.}}, {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
           ArrowBox[{{1, 2}, {2, 3}, {2, 9}, {3, 4}, {4, 5}, {4, 8}, {5, 6}, {
            5, 7}}, 0.043048128342245986`]}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[1, 0.043048128342245986]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[2, 0.043048128342245986]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[3, 0.043048128342245986]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[4, 0.043048128342245986]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[5, 0.043048128342245986]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[6, 0.043048128342245986]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[7, 0.043048128342245986]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[8, 0.043048128342245986]}, 
           {RGBColor[0.97, 0.606, 0.081], 
            DiskBox[9, 0.043048128342245986]}}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    FormatType->TraditionalForm,
    FrameTicks->None], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 
        18}, {Null, 
         SparseArray[
         Automatic, {18, 18}, 0, {
          1, {{0, 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 
            34, 36}, {{2}, {18}, {1}, {3}, {2}, {4}, {3}, {5}, {4}, {6}, {
            5}, {7}, {6}, {8}, {7}, {9}, {8}, {10}, {9}, {11}, {10}, {12}, {
            11}, {13}, {12}, {14}, {13}, {15}, {14}, {16}, {15}, {17}, {16}, {
            18}, {1}, {17}}}, Pattern}]}, {
        VertexStyle -> {
          18 -> RGBColor[0.97, 0.606, 0.081], 6 -> 
           RGBColor[0.97, 0.606, 0.081], 15 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 1 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 9 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 13 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 2 -> 
           RGBColor[0.97, 0.606, 0.081], 8 -> RGBColor[0.97, 0.606, 0.081], 3 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 4 -> 
           RGBColor[0.97, 0.606, 0.081], 11 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 10 -> 
           RGBColor[0.97, 0.606, 0.081], 7 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 16 -> 
           RGBColor[0.97, 0.606, 0.081], 17 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 14 -> 
           RGBColor[0.97, 0.606, 0.081], 12 -> RGBColor[0.97, 0.606, 0.081], 
           5 -> RGBColor[0.34398, 0.49112, 0.89936]}, VertexCoordinates -> {{
            Rational[1, 2], Rational[-1, 2] Cot[Rational[1, 18] Pi]}, {
           Rational[1, 4] Csc[Rational[1, 18] Pi], Rational[-1, 4] 
            3^Rational[1, 2] Csc[Rational[1, 18] Pi]}, {
           Rational[1, 2] Cos[Rational[2, 9] Pi] Csc[Rational[1, 18] Pi], 
            Rational[-1, 2] Csc[Rational[1, 18] Pi] Sin[Rational[2, 9] Pi]}, {
           Rational[1, 2] Cos[Rational[1, 9] Pi] Csc[Rational[1, 18] Pi], -
            Cos[Rational[1, 18] Pi]}, {
           Rational[1, 2] Csc[Rational[1, 18] Pi], 0}, {
           Rational[1, 2] Cos[Rational[1, 9] Pi] Csc[Rational[1, 18] Pi], 
            Cos[Rational[1, 18] Pi]}, {
           Rational[1, 2] Cos[Rational[2, 9] Pi] Csc[Rational[1, 18] Pi], 
            Rational[1, 2] 3^Rational[1, 2] + Cos[Rational[1, 18] Pi]}, {
           Rational[1, 4] Csc[Rational[1, 18] Pi], Rational[1, 4] 
            3^Rational[1, 2] Csc[Rational[1, 18] Pi]}, {
            Rational[1, 2], Rational[1, 2] Cot[Rational[1, 18] Pi]}, {
            Rational[-1, 2], Rational[1, 2] Cot[Rational[1, 18] Pi]}, {
           Rational[-1, 4] Csc[Rational[1, 18] Pi], Rational[1, 4] 
            3^Rational[1, 2] Csc[Rational[1, 18] Pi]}, {
           Rational[-1, 2] Cos[Rational[2, 9] Pi] Csc[Rational[1, 18] Pi], 
            Rational[1, 2] 3^Rational[1, 2] + Cos[Rational[1, 18] Pi]}, {
           Rational[-1, 2] Cos[Rational[1, 9] Pi] Csc[Rational[1, 18] Pi], 
            Cos[Rational[1, 18] Pi]}, {
           Rational[-1, 2] Csc[Rational[1, 18] Pi], 0}, {
           Rational[-1, 2] Cos[Rational[1, 9] Pi] Csc[Rational[1, 18] Pi], -
            Cos[Rational[1, 18] Pi]}, {
           Rational[-1, 2] Cos[Rational[2, 9] Pi] Csc[Rational[1, 18] Pi], 
            Rational[-1, 2] Csc[Rational[1, 18] Pi] Sin[Rational[2, 9] Pi]}, {
           Rational[-1, 4] Csc[Rational[1, 18] Pi], Rational[-1, 4] 
            3^Rational[1, 2] Csc[Rational[1, 18] Pi]}, {
            Rational[-1, 2], Rational[-1, 2] Cot[Rational[1, 18] Pi]}}}]]}, 
      TagBox[
       GraphicsGroupBox[
        GraphicsComplexBox[{{0.5, -2.8356409098088546`}, {
         1.4396926207859084`, -2.4936207664831858`}, {
         2.2057370639048863`, -1.8508331567966465`}, {
         2.7057370639048868`, -0.984807753012208}, {2.879385241571817, 0.}, {
         2.7057370639048868`, 0.984807753012208}, {2.2057370639048863`, 
         1.8508331567966465`}, {1.4396926207859084`, 2.4936207664831858`}, {
         0.5, 2.8356409098088546`}, {-0.5, 
         2.8356409098088546`}, {-1.4396926207859084`, 
         2.4936207664831858`}, {-2.2057370639048863`, 
         1.8508331567966465`}, {-2.7057370639048868`, 
         0.984807753012208}, {-2.879385241571817, 
         0.}, {-2.7057370639048868`, -0.984807753012208}, \
{-2.2057370639048863`, -1.8508331567966465`}, {-1.4396926207859084`, \
-2.4936207664831858`}, {-0.5, -2.8356409098088546`}}, {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
           ArrowBox[{{1, 2}, {1, 18}, {2, 3}, {3, 4}, {4, 5}, {5, 6}, {6, 
            7}, {7, 8}, {8, 9}, {9, 10}, {10, 11}, {11, 12}, {12, 13}, {13, 
            14}, {14, 15}, {15, 16}, {16, 17}, {17, 18}}, 
            0.04721858317140225]}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[1, 0.04721858317140225]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[2, 0.04721858317140225]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[3, 0.04721858317140225]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[4, 0.04721858317140225]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[5, 0.04721858317140225]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[6, 0.04721858317140225]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[7, 0.04721858317140225]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[8, 0.04721858317140225]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[9, 0.04721858317140225]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[10, 0.04721858317140225]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[11, 0.04721858317140225]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[12, 0.04721858317140225]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[13, 0.04721858317140225]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[14, 0.04721858317140225]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[15, 0.04721858317140225]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[16, 0.04721858317140225]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[17, 0.04721858317140225]}, 
           {RGBColor[0.97, 0.606, 0.081], 
            DiskBox[18, 0.04721858317140225]}}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    FormatType->TraditionalForm,
    FrameTicks->None], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12}, {Null, 
         SparseArray[
         Automatic, {12, 12}, 0, {
          1, {{0, 2, 4, 7, 11, 14, 16, 19, 23, 26, 28, 30, 32}, {{2}, {3}, {
            1}, {4}, {1}, {4}, {7}, {2}, {3}, {5}, {8}, {4}, {6}, {9}, {5}, {
            10}, {3}, {8}, {11}, {4}, {7}, {9}, {12}, {5}, {8}, {10}, {6}, {
            9}, {7}, {12}, {8}, {11}}}, Pattern}]}, {
        VertexStyle -> {
          6 -> RGBColor[0.34398, 0.49112, 0.89936], 1 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 9 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 2 -> 
           RGBColor[0.97, 0.606, 0.081], 8 -> RGBColor[0.97, 0.606, 0.081], 3 -> 
           RGBColor[0.97, 0.606, 0.081], 4 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 11 -> 
           RGBColor[0.97, 0.606, 0.081], 10 -> RGBColor[0.97, 0.606, 0.081], 
           7 -> RGBColor[0.34398, 0.49112, 0.89936], 12 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 5 -> 
           RGBColor[0.97, 0.606, 0.081]}, 
         VertexCoordinates -> {{0, 0}, {0, -1}, {1, 0}, {1, -1}, {1, -2}, {
          1, -3}, {2, 0}, {2, -1}, {2, -2}, {2, -3}, {3, 0}, {3, -1}}}]]}, 
      TagBox[
       GraphicsGroupBox[
        GraphicsComplexBox[{{0., 0.}, {0., -1.}, {1., 0.}, {1., -1.}, {
         1., -2.}, {1., -3.}, {2., 0.}, {2., -1.}, {2., -2.}, {2., -3.}, {3., 
         0.}, {3., -1.}}, {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
           ArrowBox[{{1, 2}, {1, 3}, {2, 4}, {3, 4}, {3, 7}, {4, 5}, {4, 8}, {
            5, 6}, {5, 9}, {6, 10}, {7, 8}, {7, 11}, {8, 9}, {8, 12}, {9, 
            10}, {11, 12}}, 0.030239520958083826`]}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[1, 0.030239520958083826]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[2, 0.030239520958083826]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[3, 0.030239520958083826]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[4, 0.030239520958083826]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[5, 0.030239520958083826]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[6, 0.030239520958083826]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[7, 0.030239520958083826]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[8, 0.030239520958083826]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[9, 0.030239520958083826]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[10, 0.030239520958083826]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[11, 0.030239520958083826]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[12, 0.030239520958083826]}}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    FormatType->TraditionalForm,
    FrameTicks->None], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12}, {Null, 
         SparseArray[
         Automatic, {12, 12}, 0, {
          1, {{0, 1, 4, 6, 9, 14, 16, 17, 18, 19, 20, 21, 22}, {{2}, {1}, {
            3}, {11}, {2}, {4}, {3}, {5}, {10}, {4}, {6}, {7}, {8}, {9}, {
            5}, {12}, {5}, {5}, {5}, {4}, {2}, {6}}}, Pattern}]}, {
        VertexStyle -> {
          6 -> RGBColor[0.97, 0.606, 0.081], 1 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 9 -> 
           RGBColor[0.97, 0.606, 0.081], 2 -> RGBColor[0.97, 0.606, 0.081], 8 -> 
           RGBColor[0.97, 0.606, 0.081], 3 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 4 -> 
           RGBColor[0.97, 0.606, 0.081], 11 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 10 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 7 -> 
           RGBColor[0.97, 0.606, 0.081], 12 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 5 -> 
           RGBColor[0.34398, 0.49112, 0.89936]}, 
         VertexCoordinates -> {{0, 0}, {0.32839478871459266`, 
           0.6567895774291854}, {0.32839478871459266`, 1.3135791548583708`}, {
           1.6419739435729634`, 1.970368732287556}, {2.2987635210021486`, 
           1.3135791548583708`}, {1.3135791548583706`, 0.6567895774291854}, {
           1.970368732287556, 0.6567895774291854}, {2.6271583097167412`, 
           0.6567895774291854}, {3.283947887145927, 0.6567895774291854}, {
           2.9555530984313343`, 1.3135791548583708`}, {
           0.6567895774291853, 0}, {1.3135791548583706`, 0}}}]]}, 
      TagBox[
       GraphicsGroupBox[
        GraphicsComplexBox[{{0., 0.}, {0.32839478871459266`, 
         0.6567895774291854}, {0.32839478871459266`, 1.3135791548583708`}, {
         1.6419739435729634`, 1.970368732287556}, {2.2987635210021486`, 
         1.3135791548583708`}, {1.3135791548583706`, 0.6567895774291854}, {
         1.970368732287556, 0.6567895774291854}, {2.6271583097167412`, 
         0.6567895774291854}, {3.283947887145927, 0.6567895774291854}, {
         2.9555530984313343`, 1.3135791548583708`}, {0.6567895774291853, 
         0.}, {1.3135791548583706`, 0.}}, {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
           ArrowBox[{{1, 2}, {2, 3}, {2, 11}, {3, 4}, {4, 5}, {4, 10}, {5, 
            6}, {5, 7}, {5, 8}, {5, 9}, {6, 12}}, 0.032241748897871195`]}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[1, 0.032241748897871195]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[2, 0.032241748897871195]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[3, 0.032241748897871195]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[4, 0.032241748897871195]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[5, 0.032241748897871195]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[6, 0.032241748897871195]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[7, 0.032241748897871195]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[8, 0.032241748897871195]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[9, 0.032241748897871195]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[10, 0.032241748897871195]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[11, 0.032241748897871195]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[12, 0.032241748897871195]}}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    FormatType->TraditionalForm,
    FrameTicks->None], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}, {}, {
        VertexStyle -> {
          6 -> RGBColor[0.34398, 0.49112, 0.89936], 1 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 9 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 2 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 8 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 3 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 4 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 11 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 10 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 7 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 5 -> 
           RGBColor[0.34398, 0.49112, 0.89936]}, VertexCoordinates -> {{
            Sin[Rational[1, 11] Pi], -Cos[Rational[1, 11] Pi]}, {
            Cos[Rational[5, 22] Pi], -Sin[Rational[5, 22] Pi]}, {
            Cos[Rational[1, 22] Pi], -Sin[Rational[1, 22] Pi]}, {
            Cos[Rational[3, 22] Pi], 
            Sin[Rational[3, 22] Pi]}, {
            Sin[Rational[2, 11] Pi], 
            Cos[Rational[2, 11] Pi]}, {0, 1}, {-Sin[Rational[2, 11] Pi], 
            Cos[Rational[2, 11] Pi]}, {-Cos[Rational[3, 22] Pi], 
            Sin[Rational[3, 22] Pi]}, {-Cos[Rational[1, 22] Pi], -
            Sin[Rational[1, 22] Pi]}, {-Cos[Rational[5, 22] Pi], -
            Sin[Rational[5, 22] Pi]}, {-Sin[Rational[1, 11] Pi], -
            Cos[Rational[1, 11] Pi]}}}]]}, 
      TagBox[
       GraphicsGroupBox[
        GraphicsComplexBox[{{0.28173255684142967`, -0.9594929736144974}, {
         0.7557495743542584, -0.654860733945285}, {
         0.9898214418809327, -0.14231483827328514`}, {0.9096319953545184, 
         0.4154150130018864}, {0.5406408174555976, 0.8412535328311812}, {0., 
         1.}, {-0.5406408174555976, 0.8412535328311812}, {-0.9096319953545184,
          0.4154150130018864}, {-0.9898214418809327, -0.14231483827328514`}, \
{-0.7557495743542584, -0.654860733945285}, {-0.28173255684142967`, \
-0.9594929736144974}}, {{}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[1, 0.02244607451670738]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[2, 0.02244607451670738]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[3, 0.02244607451670738]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[4, 0.02244607451670738]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[5, 0.02244607451670738]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[6, 0.02244607451670738]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[7, 0.02244607451670738]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[8, 0.02244607451670738]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[9, 0.02244607451670738]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[10, 0.02244607451670738]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[11, 0.02244607451670738]}}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    FormatType->TraditionalForm,
    FrameTicks->None], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 
        19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 
        36}, {Null, 
         SparseArray[
         Automatic, {36, 36}, 0, {
          1, {{0, 3, 6, 9, 12, 15, 18, 21, 24, 27, 30, 33, 36, 39, 42, 45, 48,
             51, 54, 57, 60, 63, 66, 69, 72, 75, 78, 81, 84, 87, 90, 93, 96, 
            99, 102, 105, 108}, {{2}, {18}, {20}, {1}, {3}, {19}, {2}, {4}, {
            22}, {3}, {5}, {21}, {4}, {6}, {24}, {5}, {7}, {23}, {6}, {8}, {
            26}, {7}, {9}, {25}, {8}, {10}, {28}, {9}, {11}, {27}, {10}, {
            12}, {30}, {11}, {13}, {29}, {12}, {14}, {32}, {13}, {15}, {31}, {
            14}, {16}, {34}, {15}, {17}, {33}, {16}, {18}, {36}, {1}, {17}, {
            35}, {2}, {20}, {36}, {1}, {19}, {21}, {4}, {20}, {22}, {3}, {
            21}, {23}, {6}, {22}, {24}, {5}, {23}, {25}, {8}, {24}, {26}, {
            7}, {25}, {27}, {10}, {26}, {28}, {9}, {27}, {29}, {12}, {28}, {
            30}, {11}, {29}, {31}, {14}, {30}, {32}, {13}, {31}, {33}, {16}, {
            32}, {34}, {15}, {33}, {35}, {18}, {34}, {36}, {17}, {19}, {35}}},
            Pattern}]}, {
        VertexStyle -> {
          5 -> RGBColor[0.34398, 0.49112, 0.89936], 15 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 22 -> 
           RGBColor[0.97, 0.606, 0.081], 9 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 36 -> 
           RGBColor[0.97, 0.606, 0.081], 14 -> RGBColor[0.97, 0.606, 0.081], 
           19 -> RGBColor[0.34398, 0.49112, 0.89936], 6 -> 
           RGBColor[0.97, 0.606, 0.081], 26 -> RGBColor[0.97, 0.606, 0.081], 
           18 -> RGBColor[0.97, 0.606, 0.081], 2 -> 
           RGBColor[0.97, 0.606, 0.081], 12 -> RGBColor[0.97, 0.606, 0.081], 
           17 -> RGBColor[0.34398, 0.49112, 0.89936], 31 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 34 -> 
           RGBColor[0.97, 0.606, 0.081], 7 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 10 -> 
           RGBColor[0.97, 0.606, 0.081], 24 -> RGBColor[0.97, 0.606, 0.081], 
           30 -> RGBColor[0.97, 0.606, 0.081], 8 -> 
           RGBColor[0.97, 0.606, 0.081], 33 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 11 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 13 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 29 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 1 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 3 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 21 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 27 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 28 -> 
           RGBColor[0.97, 0.606, 0.081], 25 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 4 -> 
           RGBColor[0.97, 0.606, 0.081], 32 -> RGBColor[0.97, 0.606, 0.081], 
           16 -> RGBColor[0.97, 0.606, 0.081], 35 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 20 -> 
           RGBColor[0.97, 0.606, 0.081], 23 -> 
           RGBColor[0.34398, 0.49112, 0.89936]}, 
         VertexCoordinates -> CompressedData["
1:eJxTTMoPSmViYGBQAWIQDQEf7GEskXXuD6tE3tmL3zz3PfjxVfuA3ul5Qs0v
7H/VZe0pmfwEqu6BffOBUwtdt722FwIzjtm3vg7cIdf6HsbfD+ND1e+HqYea
tx9mHtS+/TD7oO7Zj+YemPx+NP370czfj2b/fjT37Udz/340/+1H8z/MHQ4w
96z6eMk3SeAfVP4p1D8/oPq/wNwPNf+3fcbEtzX2pteg9v+H8ffD+DD/wtRD
zdsPMw9q336YfVBnHEBzD0x+P5r+/Wjm70ezfz+a+/ajuX8/mv/2o/l/PwBQ
RRRT
          "]}]]}, 
      TagBox[GraphicsGroupBox[GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGBQAWIQDQEf7GEskXXuD6tE3tmL3zz3PfjxVfuA3ul5Qs0v
7H/VZe0pmfwEqu6BffOBUwtdt722FwIzjtm3vg7cIdf6HsbfD+ND1e+HqYea
tx9mHtS+/TD7oO7Zj+YemPx+NP370czfj2b/fjT37Udz/340/+1H8z/MHQ4w
96z6eMk3SeAfVP4p1D8/oPq/wNwPNf+3fcbEtzX2pteg9v+H8ffD+DD/wtRD
zdsPMw9q336YfVBnHEBzD0x+P5r+/Wjm70ezfz+a+/ajuX8/mv/2o/l/PwBQ
RRRT
         "], {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
           ArrowBox[{{1, 2}, {1, 18}, {1, 20}, {2, 3}, {2, 19}, {3, 4}, {3, 
            22}, {4, 5}, {4, 21}, {5, 6}, {5, 24}, {6, 7}, {6, 23}, {7, 8}, {
            7, 26}, {8, 9}, {8, 25}, {9, 10}, {9, 28}, {10, 11}, {10, 27}, {
            11, 12}, {11, 30}, {12, 13}, {12, 29}, {13, 14}, {13, 32}, {14, 
            15}, {14, 31}, {15, 16}, {15, 34}, {16, 17}, {16, 33}, {17, 18}, {
            17, 36}, {18, 35}, {19, 20}, {19, 36}, {20, 21}, {21, 22}, {22, 
            23}, {23, 24}, {24, 25}, {25, 26}, {26, 27}, {27, 28}, {28, 29}, {
            29, 30}, {30, 31}, {31, 32}, {32, 33}, {33, 34}, {34, 35}, {35, 
            36}}, 0.03700564971751412]}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[1, 0.03700564971751412]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[2, 0.03700564971751412]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[3, 0.03700564971751412]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[4, 0.03700564971751412]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[5, 0.03700564971751412]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[6, 0.03700564971751412]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[7, 0.03700564971751412]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[8, 0.03700564971751412]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[9, 0.03700564971751412]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[10, 0.03700564971751412]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[11, 0.03700564971751412]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[12, 0.03700564971751412]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[13, 0.03700564971751412]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[14, 0.03700564971751412]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[15, 0.03700564971751412]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[16, 0.03700564971751412]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[17, 0.03700564971751412]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[18, 0.03700564971751412]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[19, 0.03700564971751412]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[20, 0.03700564971751412]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[21, 0.03700564971751412]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[22, 0.03700564971751412]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[23, 0.03700564971751412]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[24, 0.03700564971751412]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[25, 0.03700564971751412]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[26, 0.03700564971751412]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[27, 0.03700564971751412]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[28, 0.03700564971751412]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[29, 0.03700564971751412]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[30, 0.03700564971751412]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[31, 0.03700564971751412]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[32, 0.03700564971751412]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[33, 0.03700564971751412]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[34, 0.03700564971751412]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[35, 0.03700564971751412]}, 
           {RGBColor[0.97, 0.606, 0.081], 
            DiskBox[36, 0.03700564971751412]}}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    FormatType->TraditionalForm,
    FrameTicks->None], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10}, {Null, 
         SparseArray[
         Automatic, {10, 10}, 0, {
          1, {{0, 1, 4, 7, 10, 11, 12, 15, 16, 17, 18}, {{2}, {1}, {3}, {
            10}, {2}, {4}, {7}, {3}, {5}, {6}, {4}, {4}, {3}, {8}, {9}, {7}, {
            7}, {2}}}, Pattern}]}, {
        VertexStyle -> {
          6 -> RGBColor[0.97, 0.606, 0.081], 1 -> 
           RGBColor[0.97, 0.606, 0.081], 9 -> RGBColor[0.97, 0.606, 0.081], 2 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 8 -> 
           RGBColor[0.97, 0.606, 0.081], 3 -> RGBColor[0.97, 0.606, 0.081], 4 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 10 -> 
           RGBColor[0.97, 0.606, 0.081], 7 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 5 -> 
           RGBColor[0.97, 0.606, 0.081]}, 
         VertexCoordinates -> {{0, -3}, {0, -2}, {
           Rational[1, 2] 3^Rational[1, 2], 
            Rational[-3, 2]}, {Rational[1, 2] 3^Rational[1, 2], 
            Rational[-1, 2]}, {0, 0}, {3^Rational[1, 2], 0}, {
           3^Rational[1, 2], -2}, {3^Rational[1, 2], -3}, {
           Rational[3, 2] 3^Rational[1, 2], 
            Rational[-3, 2]}, {Rational[-1, 2] 3^Rational[1, 2], 
            Rational[-3, 2]}}}]]}, 
      TagBox[
       GraphicsGroupBox[
        GraphicsComplexBox[{{0., -3.}, {0., -2.}, {
         0.8660254037844386, -1.5}, {0.8660254037844386, -0.5}, {0., 0.}, {
         1.7320508075688772`, 0.}, {1.7320508075688772`, -2.}, {
         1.7320508075688772`, -3.}, {
         2.598076211353316, -1.5}, {-0.8660254037844386, -1.5}}, {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
           ArrowBox[{{1, 2}, {2, 3}, {2, 10}, {3, 4}, {3, 7}, {4, 5}, {4, 
            6}, {7, 8}, {7, 9}}, 0.03347773481857537]}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[1, 0.03347773481857537]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[2, 0.03347773481857537]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[3, 0.03347773481857537]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[4, 0.03347773481857537]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[5, 0.03347773481857537]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[6, 0.03347773481857537]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[7, 0.03347773481857537]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[8, 0.03347773481857537]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[9, 0.03347773481857537]}, 
           {RGBColor[0.97, 0.606, 0.081], 
            DiskBox[10, 0.03347773481857537]}}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    FormatType->TraditionalForm,
    FrameTicks->None], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[CompressedData["
1:eJwl1kO0GAYQBdAf27Ztmw0a22xs204ap7Ft227YxrZtO+n9p4t73nY2b2aS
NGpfuV2QgICAtEEDAgJTBAQjOCEISShCE4awhCM8EYhIJCIThahEIzoxiEks
YhOHuMQjPglISCISk4SkJCM5KUhJKlKTJnBO0pGeDGQkE5nJQlaykZ0c5CQX
uclDXvKRnwIUpBCFKUJRfqMYxSlBSX6nFKUpQ1nKUZ4KVKQSlalCVapRnRrU
pBa1qUNd6lGfBjTkDxrRmCY0pRnNaUFLWtGaNrSlHe3pQEc60ZkudKUb3elB
T3rRmz70pR/9GcBABjGYIQxlGMMZwZ+MZBSjGcNYxjGeCfzFRCYxmSlMZRrT
mcFMZjGbOcxlHvNZwEIWsZglLGUZy1nBSlaxmjWsZR3r2cBGNrGZLWxlG9vZ
wU52sZs97GUf+znAQf7mEIc5wlGOcZx/+JcTnOQUpznDWc5xngtc5BKXucJV
rnGdG9zkFre5w13ucZ8HPOQRj3nCU57xnBe85BWvecNb3vGeD3zkE5/5wle+
8Z0f/OQXgeUPQlCCEZwQhCQUoQlDWMIRnghEJBKRiUJUohGdGMQkFrGJQ1zi
EZ8EJCQRiUlCUpKRnBSkJBWpSUNa0pGeDGQkE5nJQlaykZ0c5CQXuclDXvKR
nwIUpBCFKUJRfqMYxSlBSX6nFKUpQ1nKUZ4KVKQSlalCVapRnRrUpBa1qUNd
6lGfBjTkDxrRmCY0pRnNaUFLWtGaNrQlcHm3pwMd6URnutCVbnSnBz3pRW/6
0Jd+9GcAAxnEYIYwlGEMZwR/MpJRjGYMYxnHeCbwFxOZxGSmMJVpTGcGM5nF
bOYwl3nMZwELWcRilrCUZSxnBStZxWrWsJZ1rGcDG9nEZrawlW1sZwc72cVu
9rCXfeznAAf5m0Mc5ghHOcZx/uFfTnCSU5zmDGc5x3kucJFLXOYKV7nGdW5w
k1vc5g53ucd9HvCQRzzmCU95xnNe8JJXvOYNb3nHez7wkU985gtf+cZ3fvCT
XwQe/iAEJRjBCUFIQhGaMIQlHOGJQEQiEZkoRCUa0YlBTGIRmzjEJR7xSUBC
EpGYJCQlGclJQUpSkZo0Qf//U/4DzBcFzA==
        "], {Null, 
         SparseArray[Automatic, {554, 554}, 0, {1, {CompressedData["
1:eJwl1YOyGAYQBdDkxTYavzQ2Gtu2nca23dho1Ma2bTe2bdtGT5udOT+we+9s
YIO2FdsEDRIkSOqAIP9PMEIShvBEIioxiE1cEhBIEpKTirRkIDNZyUFu8lGQ
IhSnFGWpQGWqUZM61KchTWhOK9rSgc50oyd9+IOBDGE4oxjLeCbxN9OYyRzm
s4ilrGA169jIFrazi73s5xBHOcFpznGRK1znFnd5wGOe8ZI3vOcTX/lBgAWH
IDThiEgUohOLOMQnEb+SjJSkIT2ZyEJ2cpGXAhSmGCUpQ3kqUZUa1KYeDWhM
M1ry38Hb04mu9KA3/RjAYIYxkjH8yUT+YiozmM08FrKE5axiLRvYzDZ2sod/
OMgRjnOKs1zgMte4yR3u84invOA17/jIF74TVF6DE4qwRCAy0YjJL8QjIYlJ
SoqAnzlPR0Z+Ixs5yUN+ClGUEpSmHBWpQnVqUZffaURTWtCadnSkC93pRV/6
M4ihjGA045jAZKYwnVnMZQGLWcZK1rCeTWxlB7vZxwEOc4yTnOE8l7jKDW5z
j4c84TmveMsHPvMt4Gf5gxGSMIQnElGJQWzikoBAkpCcVKQlA5nJSg5yk4+C
FKE4pShLBSpTjZrUoT4NaUJzWtGWDnSmGz3pwx8MZAjDGcVYxjOJv5nGTOYw
n0UsZQWrWcdGtrCdXexlP4c4yglOc46LXOE6t7jLAx7zjJe84T2f+MoPAoLr
P6EJR0SiEJ1YxCE+ifiVZKQkDenJRBayk4u8FKAwxShJGcpTiarUoDb1aEBj
mtGSNrSnE13pQW/6MYDBDGMkY/iTifzFVGYwm3ksZAnLWcVaNrCZbexkD/9w
kCMc5xRnucBlrnGTO9znEU95wWve8ZEvfCdoCP0nFGGJQGSiEZNfiEdCEpOU
FKQmHRn5jWzkJA/5KURRSlCaclSkCtWpRV1+pxFNaUFr2tGRLnSnF33pzyCG
MoLRjGMCk5nCdGYxlwUsZhkrWcN6NrGVHexmHwc4zDFOcobzXOIqN7jNPR7y
hOe84i0f+My3ED8ffzBCEobwRCIqMYhNXBIQSBKSk4q0ZCAzWclBbvJRkCIU
pxRlqUBlqlGTOtSnIU1oTiva0oHOdKMnffgX10QRhQ==
            "], CompressedData["
1:eJxNmXXUV1UWhs/5SQhKgwlII9gtNgrYLRYmIChtYiAGFkop2K2omNjd3a0z
44w9xozdM/Z+1n5mrfnjXed897fP3u/e+733nnu+7sMn7jShUUqZ2qyUGiPz
RQJNSv7dNLCo8+aBls7DvLTQfrFAa9csHmijj1aBttpwvZ02XO+gDWvbGwff
S+ibmB2NSZxO2vQIZ8s30qZnjP0badMrxn6NXNdbG/z18To++moPl6UDneWy
ZGAZuSwVWNZ4K+sXTisaG04rGRub1fSLzSrGw2ZVefSJsV9JPn1jXKEkn+Vj
7F+SD/M19YnN6sZl7RrGZd3a+mfdWsbF9zrG6oJtYL1A10D3wLqB5QLdAgNK
2vQObOj1XoH1te8Z2OB/NQh/XRtZp6Vj7NywTsRpZI2w6d7IOmKzXCPriE23
RsbvpD28OugTLh31SfyltCf+EvqE45L6pCabBIaWrNVGgZ1L1mfjwC7WcjOv
U6uB2lOfTbUh/zHGpkYHyokaHSRX8h8vD2o0Vh7UaJxcd49xn5J57RrjXiXz
2i3GvUvmNSzG/UvmtUeM+5bMa88Y9yuZF36GWS/87GFN8bOnNcV2uBzwN0IO
+BspT2IeYF7wGmUu8BptjgPs8yT1QW4T1Ac5TwwMDmwdODQwJLBN4ODAoMBW
gUMCW2hzRGBLbQ4LbK7N4frZKXCGfnYITNfPjoHT9bN9YJZ+tg3M0M92gZle
WzS4t2nktRYxtmrkuuYxtm6k78VibNdI34vH2LaR8VvG2L6RGlnEOTqq2qCj
hmvRSDNjoaMmxkJHTY21i36wG6offttZP03s3WfxgPytZn//FeMvNfv77xh/
rdnbz3zYDtPm95r9x+aPwDeBn2vG/SrG/9Tk9nWM/63J7fsYf6rJ/9sYf6iZ
43cx/lgzxy+1gd/n2pDDF9pU58Rqqg2xmrmWWOT1bk0e9OPtmjzoxztypR8f
1OREP96ryYN+vF+TX0u1embJ+qDV2SXrg1bnlKwPmp9Xsj5o/qyS9UHzc0vW
Bw19pH909qH+0dk/5YCGPpUnOvtYnujsE3N5pCRv1jxUkjd+Hy7JG7+Pl8yf
NY+WzB+/j5XMH79/C/yjZv/+EnirZo//Gvh7zR4/FXjZ2j0ReNHaPRl4yfo+
G3jB2j0deM6aPhN43jry+2v2j99fscf8/qo9Js6b9o84r9tj4rxhj1/z+hf6
wP5LfWCDFu6VNznfJ29yvkfe1OUBeVO7B+VK7e43B+p7X8n60N97StYHDdxb
sj5o4MGSdaS/95esIxp4oGQd0cDtMX/Eft0R84fs120xf9h+3RXzx+3X3TF/
1H7dGfPH7Nc5MX8BToFzA8/BKXB24Hk4Bc4PvAynwAWBF+EUOC/wEpwCrwV+
kt8rMf5gDq/G+KM5vKkNeb6uDbV4Q5u31FunmjmgyQ4180STHWvmid6WqpkD
mlyiZp5ocsmaeT4Z8+W0eSrm3bR5IubdtXkm5j2M9WzMexrr6Zj3+r9Ybew5
sVrZc2K1Vhdwbm/P4dzWnsO5nbpoFlhMrTQJLK6emgZaqqdFAouqlRpooZ4a
gebq6WeeGUXt8swo6ptnRkkd83tRv1z7vaTGsf2jpMbx08z7AD9welk/cOJe
KcbmfsIHnLjn8AHX5+TY1Rzh2Nk6kEcX60Cuy1orcl3aelKPZawn/aIffe0X
/ehtv+hHH7TOeyGwCVrn3REYiNZ5dwQ21ebTwBBtPglsrs3HgS1qXvsiMKim
7ZeBzWr+/nlgcMzf12b9mH/g9Q1i/p7268X8HfmsE/N35bNuzN+WzwDXfh3Y
27XfBIbp/6vAXq79LrCna78P7K7/bwN71LzHro1xYc378JoYb6x5Hy6I8aaa
9+oNMd5a836+Lsaba97P18d4S817mt/vqHnf8/ttNe97fr+95j1NnLtr3vfE
ubPmfU+cu2ryvbJmbPheXpMffK+oyY+8r64Zm7zn1+RH3lfV5Mez4mJ98qy4
0Lg8Ty4yLs+Ky+TGs+IS+fM8uVT+P7qW335yLb/9oH/Wnxu4QD9nB87TzzmB
8/UzSztqMUM76jVTO+p1utfJ4Qyvk+d01873+ixzn66vG1w709wnGBeeE+UG
z0lyIxfuy1MDZ9W8L08LzK15754SmFfzXjwpcGbNe/TkwOya9+60wBxjnVCz
LsQ6sWZdiHV8zdrxHDjGeDwHphiPZ8XRxuPen2o8ngnHGY9nxbHG+0U/2P2q
H+x+0w92hwaOUD8HBw5TP4cEDlc/R8kTbUyWJ9o40lzu1Ad2N+kDu4X6wA7t
HqRfdDnG2Gj3QGOj3b2sOT3d277Q02H2hZ7yvNrPmvNM28e+8Ezb177w3NvN
XvBsHGoveDbuai+4n8fLh3t+rHy458fJ5yDn4+U51r/HOOf66Jp6muEczc10
jubQ38jAAYFRgV0Cw+W5U2B/c9k5MMJc9tVmhLnu79/7OOf6moENzWWtwEbm
u3ZgY/PdynjoZ2vjoZ8tjXeqNjvU1Ac2O9bUBzbb19TQttqgn+20QT/baIPG
eO5vYc95N/DsRxe8G3j2o4vB2qCJzbRBN4O0mSx34p1sfsSbZn7EQ/Mb6Av9
racvNLq+vtDoADmhuXXkhObWlROaWzWwun1ZObCGvVolsJo9W1Ebrq+kDddX
0GaUcdHuJLmh3QlyQ7sT5YDmxsgBzR0oTzSH1voZDy79jQeX5Y23qjb0eKg2
6GBXbdABumef1dtass/qYy3Zi/W1lj21wVcvbfDVQxt8sS9AP2iQvQP6QYPs
HdAPOu0iL+J2lTvcOssdbq1dj77auB59tTIGGmzneurb3vXUt60xVtcPe8sd
9cP+c3v9sP/cQT8drR1+Olk7/HSwvh3Nub+/97B+HaxLP+NQu+2MQ+22MQ71
RaMLS+4JePfeWHJPwLv3ppJ7At7Pt5bcE/DuvbnknoB37y0l9wS8n/nuYB/A
u5RvE/YBvG/5NmGvwPuW7w72AbyT+TZhH8B7m28T9gq8ty81NnuZy0ryYy9z
ifzYy1whJ/ZBV8qD/dHl8ntfm6vcY2FztXsvbOa7JyPWAvdbxLrW/RaxrnFP
ho/rS+7v8HFDyf0dPq4ruQdc4PwjfWDzoT5Yy17yopLfUexJLy75HcWe9MKS
31FPasP32LPa8D32tDZ8j7GvPankdxS1OLnkdxT1mlbyO4p6nVrye4xanFby
e4wanVLye4zazfE6vTrT6/Rqtmvp51z906t5+qdXZ8mBfnKGdbh8Oec6Qr6c
cx1mTlMDJ1iX4wLHW69jAydaoyPNgT4cZZ70YbJ50qtjzId+TjFP+nm0uV2h
zVR7NcV487U51n4eKZ9rjXWivZostwXmdbo9IK8z7AF5TbdP5D3TXpL3LHtJ
3jPsN+egE+XBWekkeXBWOkGu47wOj/Haw2OsNnAdaR3oyXBrRU9GWCt6Mtr6
0NsDrAm9HWWtZms/zrxHGm+yPsdam1HynqKfMdZvtLypMefonANyLshZO2d/
nB1y1r5JybNDztcHljxf5EydM0HOIDlr50yQM0jO/jnb59yT/w9w/s+5J/8f
4Px/a22IMUQbYgzSBh6D9UGMLfVBjM31AQ/OR/mfCmfxnJ3zPxXO4ruV/J8K
Z/HdS/5PhfN3zsv5Pwrn8pyj8/8VzuJ76Qe7Lq7Frqs+seP/AH8CifQN/g==

            "]}, Pattern}]}, {
        VertexStyle -> {
          183 -> RGBColor[0.97, 0.606, 0.081], 157 -> 
           RGBColor[0.97, 0.606, 0.081], 426 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 367 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 254 -> 
           RGBColor[0.97, 0.606, 0.081], 25 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 395 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 55 -> 
           RGBColor[0.97, 0.606, 0.081], 452 -> RGBColor[0.97, 0.606, 0.081], 
           105 -> RGBColor[0.34398, 0.49112, 0.89936], 90 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 27 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 442 -> 
           RGBColor[0.97, 0.606, 0.081], 15 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 348 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 358 -> 
           RGBColor[0.97, 0.606, 0.081], 209 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 469 -> 
           RGBColor[0.97, 0.606, 0.081], 233 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 539 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 98 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 420 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 328 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 38 -> 
           RGBColor[0.97, 0.606, 0.081], 484 -> RGBColor[0.97, 0.606, 0.081], 
           325 -> RGBColor[0.34398, 0.49112, 0.89936], 102 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 99 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 174 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 472 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 473 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 398 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 71 -> 
           RGBColor[0.97, 0.606, 0.081], 384 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 41 -> 
           RGBColor[0.97, 0.606, 0.081], 536 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 114 -> 
           RGBColor[0.97, 0.606, 0.081], 515 -> RGBColor[0.97, 0.606, 0.081], 
           282 -> RGBColor[0.97, 0.606, 0.081], 553 -> 
           RGBColor[0.97, 0.606, 0.081], 433 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 377 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 260 -> 
           RGBColor[0.97, 0.606, 0.081], 223 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 479 -> 
           RGBColor[0.97, 0.606, 0.081], 385 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 172 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 152 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 292 -> 
           RGBColor[0.97, 0.606, 0.081], 504 -> RGBColor[0.97, 0.606, 0.081], 
           294 -> RGBColor[0.97, 0.606, 0.081], 165 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 75 -> 
           RGBColor[0.97, 0.606, 0.081], 509 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 64 -> 
           RGBColor[0.97, 0.606, 0.081], 312 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 217 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 491 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 192 -> 
           RGBColor[0.97, 0.606, 0.081], 63 -> RGBColor[0.97, 0.606, 0.081], 
           410 -> RGBColor[0.34398, 0.49112, 0.89936], 371 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 85 -> 
           RGBColor[0.97, 0.606, 0.081], 512 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 261 -> 
           RGBColor[0.97, 0.606, 0.081], 160 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 3 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 145 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 445 -> 
           RGBColor[0.97, 0.606, 0.081], 374 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 231 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 147 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 158 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 318 -> 
           RGBColor[0.97, 0.606, 0.081], 159 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 428 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 417 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 503 -> 
           RGBColor[0.97, 0.606, 0.081], 86 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 554 -> 
           RGBColor[0.97, 0.606, 0.081], 181 -> RGBColor[0.97, 0.606, 0.081], 
           342 -> RGBColor[0.97, 0.606, 0.081], 109 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 94 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 61 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 532 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 84 -> 
           RGBColor[0.97, 0.606, 0.081], 245 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 477 -> 
           RGBColor[0.97, 0.606, 0.081], 368 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 76 -> 
           RGBColor[0.97, 0.606, 0.081], 516 -> RGBColor[0.97, 0.606, 0.081], 
           21 -> RGBColor[0.97, 0.606, 0.081], 169 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 281 -> 
           RGBColor[0.97, 0.606, 0.081], 241 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 87 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 310 -> 
           RGBColor[0.97, 0.606, 0.081], 283 -> RGBColor[0.97, 0.606, 0.081], 
           148 -> RGBColor[0.34398, 0.49112, 0.89936], 461 -> 
           RGBColor[0.97, 0.606, 0.081], 284 -> RGBColor[0.97, 0.606, 0.081], 
           459 -> RGBColor[0.97, 0.606, 0.081], 518 -> 
           RGBColor[0.97, 0.606, 0.081], 423 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 95 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 304 -> 
           RGBColor[0.97, 0.606, 0.081], 133 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 179 -> 
           RGBColor[0.97, 0.606, 0.081], 243 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 401 -> 
           RGBColor[0.97, 0.606, 0.081], 441 -> RGBColor[0.97, 0.606, 0.081], 
           72 -> RGBColor[0.97, 0.606, 0.081], 513 -> 
           RGBColor[0.97, 0.606, 0.081], 431 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 525 -> 
           RGBColor[0.97, 0.606, 0.081], 251 -> RGBColor[0.97, 0.606, 0.081], 
           218 -> RGBColor[0.34398, 0.49112, 0.89936], 42 -> 
           RGBColor[0.97, 0.606, 0.081], 498 -> RGBColor[0.97, 0.606, 0.081], 
           390 -> RGBColor[0.97, 0.606, 0.081], 103 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 272 -> 
           RGBColor[0.97, 0.606, 0.081], 66 -> RGBColor[0.97, 0.606, 0.081], 
           315 -> RGBColor[0.34398, 0.49112, 0.89936], 1 -> 
           RGBColor[0.97, 0.606, 0.081], 24 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 54 -> 
           RGBColor[0.97, 0.606, 0.081], 376 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 502 -> 
           RGBColor[0.97, 0.606, 0.081], 329 -> RGBColor[0.97, 0.606, 0.081], 
           255 -> RGBColor[0.97, 0.606, 0.081], 200 -> 
           RGBColor[0.97, 0.606, 0.081], 220 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 458 -> 
           RGBColor[0.97, 0.606, 0.081], 190 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 471 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 387 -> 
           RGBColor[0.97, 0.606, 0.081], 146 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 262 -> 
           RGBColor[0.97, 0.606, 0.081], 295 -> RGBColor[0.97, 0.606, 0.081], 
           382 -> RGBColor[0.97, 0.606, 0.081], 389 -> 
           RGBColor[0.97, 0.606, 0.081], 208 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 320 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 212 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 4 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 7 -> 
           RGBColor[0.97, 0.606, 0.081], 534 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 404 -> 
           RGBColor[0.97, 0.606, 0.081], 354 -> RGBColor[0.97, 0.606, 0.081], 
           287 -> RGBColor[0.97, 0.606, 0.081], 140 -> 
           RGBColor[0.97, 0.606, 0.081], 408 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 205 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 411 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 100 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 520 -> 
           RGBColor[0.97, 0.606, 0.081], 379 -> RGBColor[0.97, 0.606, 0.081], 
           123 -> RGBColor[0.34398, 0.49112, 0.89936], 162 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 526 -> 
           RGBColor[0.97, 0.606, 0.081], 12 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 65 -> 
           RGBColor[0.97, 0.606, 0.081], 522 -> RGBColor[0.97, 0.606, 0.081], 
           228 -> RGBColor[0.34398, 0.49112, 0.89936], 211 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 280 -> 
           RGBColor[0.97, 0.606, 0.081], 232 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 541 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 8 -> 
           RGBColor[0.97, 0.606, 0.081], 127 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 182 -> 
           RGBColor[0.97, 0.606, 0.081], 438 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 519 -> 
           RGBColor[0.97, 0.606, 0.081], 136 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 273 -> 
           RGBColor[0.97, 0.606, 0.081], 57 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 274 -> 
           RGBColor[0.97, 0.606, 0.081], 302 -> RGBColor[0.97, 0.606, 0.081], 
           74 -> RGBColor[0.97, 0.606, 0.081], 464 -> 
           RGBColor[0.97, 0.606, 0.081], 352 -> RGBColor[0.97, 0.606, 0.081], 
           184 -> RGBColor[0.97, 0.606, 0.081], 393 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 330 -> 
           RGBColor[0.97, 0.606, 0.081], 196 -> RGBColor[0.97, 0.606, 0.081], 
           549 -> RGBColor[0.97, 0.606, 0.081], 412 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 296 -> 
           RGBColor[0.97, 0.606, 0.081], 451 -> RGBColor[0.97, 0.606, 0.081], 
           177 -> RGBColor[0.34398, 0.49112, 0.89936], 497 -> 
           RGBColor[0.97, 0.606, 0.081], 457 -> RGBColor[0.97, 0.606, 0.081], 
           345 -> RGBColor[0.34398, 0.49112, 0.89936], 298 -> 
           RGBColor[0.97, 0.606, 0.081], 343 -> RGBColor[0.97, 0.606, 0.081], 
           551 -> RGBColor[0.97, 0.606, 0.081], 344 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 113 -> 
           RGBColor[0.97, 0.606, 0.081], 259 -> RGBColor[0.97, 0.606, 0.081], 
           506 -> RGBColor[0.97, 0.606, 0.081], 289 -> 
           RGBColor[0.97, 0.606, 0.081], 242 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 314 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 219 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 285 -> 
           RGBColor[0.97, 0.606, 0.081], 244 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 37 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 170 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 43 -> 
           RGBColor[0.97, 0.606, 0.081], 276 -> RGBColor[0.97, 0.606, 0.081], 
           246 -> RGBColor[0.34398, 0.49112, 0.89936], 39 -> 
           RGBColor[0.97, 0.606, 0.081], 124 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 375 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 432 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 383 -> 
           RGBColor[0.97, 0.606, 0.081], 466 -> RGBColor[0.97, 0.606, 0.081], 
           130 -> RGBColor[0.34398, 0.49112, 0.89936], 135 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 106 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 291 -> 
           RGBColor[0.97, 0.606, 0.081], 347 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 483 -> 
           RGBColor[0.97, 0.606, 0.081], 307 -> RGBColor[0.97, 0.606, 0.081], 
           424 -> RGBColor[0.34398, 0.49112, 0.89936], 540 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 264 -> 
           RGBColor[0.97, 0.606, 0.081], 449 -> RGBColor[0.97, 0.606, 0.081], 
           351 -> RGBColor[0.97, 0.606, 0.081], 303 -> 
           RGBColor[0.97, 0.606, 0.081], 11 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 58 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 397 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 153 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 225 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 360 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 529 -> 
           RGBColor[0.97, 0.606, 0.081], 51 -> RGBColor[0.97, 0.606, 0.081], 
           194 -> RGBColor[0.97, 0.606, 0.081], 48 -> 
           RGBColor[0.97, 0.606, 0.081], 533 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 265 -> 
           RGBColor[0.97, 0.606, 0.081], 478 -> RGBColor[0.97, 0.606, 0.081], 
           20 -> RGBColor[0.97, 0.606, 0.081], 33 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 168 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 224 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 547 -> 
           RGBColor[0.97, 0.606, 0.081], 388 -> RGBColor[0.97, 0.606, 0.081], 
           391 -> RGBColor[0.97, 0.606, 0.081], 524 -> 
           RGBColor[0.97, 0.606, 0.081], 335 -> RGBColor[0.97, 0.606, 0.081], 
           489 -> RGBColor[0.34398, 0.49112, 0.89936], 115 -> 
           RGBColor[0.97, 0.606, 0.081], 476 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 173 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 271 -> 
           RGBColor[0.97, 0.606, 0.081], 45 -> RGBColor[0.97, 0.606, 0.081], 
           23 -> RGBColor[0.34398, 0.49112, 0.89936], 402 -> 
           RGBColor[0.97, 0.606, 0.081], 22 -> RGBColor[0.97, 0.606, 0.081], 
           341 -> RGBColor[0.97, 0.606, 0.081], 313 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 339 -> 
           RGBColor[0.97, 0.606, 0.081], 195 -> RGBColor[0.97, 0.606, 0.081], 
           2 -> RGBColor[0.34398, 0.49112, 0.89936], 118 -> 
           RGBColor[0.97, 0.606, 0.081], 60 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 373 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 270 -> 
           RGBColor[0.97, 0.606, 0.081], 455 -> RGBColor[0.97, 0.606, 0.081], 
           16 -> RGBColor[0.34398, 0.49112, 0.89936], 139 -> 
           RGBColor[0.97, 0.606, 0.081], 293 -> RGBColor[0.97, 0.606, 0.081], 
           79 -> RGBColor[0.97, 0.606, 0.081], 210 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 487 -> 
           RGBColor[0.97, 0.606, 0.081], 403 -> RGBColor[0.97, 0.606, 0.081], 
           89 -> RGBColor[0.34398, 0.49112, 0.89936], 317 -> 
           RGBColor[0.97, 0.606, 0.081], 36 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 409 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 496 -> 
           RGBColor[0.97, 0.606, 0.081], 120 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 189 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 247 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 418 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 266 -> 
           RGBColor[0.97, 0.606, 0.081], 191 -> RGBColor[0.97, 0.606, 0.081], 
           311 -> RGBColor[0.34398, 0.49112, 0.89936], 355 -> 
           RGBColor[0.97, 0.606, 0.081], 143 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 416 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 226 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 527 -> 
           RGBColor[0.97, 0.606, 0.081], 308 -> RGBColor[0.97, 0.606, 0.081], 
           239 -> RGBColor[0.34398, 0.49112, 0.89936], 443 -> 
           RGBColor[0.97, 0.606, 0.081], 405 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 138 -> 
           RGBColor[0.97, 0.606, 0.081], 334 -> RGBColor[0.97, 0.606, 0.081], 
           131 -> RGBColor[0.34398, 0.49112, 0.89936], 117 -> 
           RGBColor[0.97, 0.606, 0.081], 171 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 396 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 52 -> 
           RGBColor[0.97, 0.606, 0.081], 305 -> RGBColor[0.97, 0.606, 0.081], 
           128 -> RGBColor[0.34398, 0.49112, 0.89936], 495 -> 
           RGBColor[0.97, 0.606, 0.081], 229 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 32 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 31 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 453 -> 
           RGBColor[0.97, 0.606, 0.081], 336 -> RGBColor[0.97, 0.606, 0.081], 
           68 -> RGBColor[0.97, 0.606, 0.081], 73 -> 
           RGBColor[0.97, 0.606, 0.081], 82 -> RGBColor[0.97, 0.606, 0.081], 
           35 -> RGBColor[0.34398, 0.49112, 0.89936], 88 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 50 -> 
           RGBColor[0.97, 0.606, 0.081], 523 -> RGBColor[0.97, 0.606, 0.081], 
           19 -> RGBColor[0.34398, 0.49112, 0.89936], 316 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 406 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 380 -> 
           RGBColor[0.97, 0.606, 0.081], 327 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 493 -> 
           RGBColor[0.97, 0.606, 0.081], 17 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 346 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 421 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 545 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 187 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 116 -> 
           RGBColor[0.97, 0.606, 0.081], 278 -> RGBColor[0.97, 0.606, 0.081], 
           96 -> RGBColor[0.34398, 0.49112, 0.89936], 121 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 485 -> 
           RGBColor[0.97, 0.606, 0.081], 14 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 104 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 444 -> 
           RGBColor[0.97, 0.606, 0.081], 546 -> RGBColor[0.97, 0.606, 0.081], 
           494 -> RGBColor[0.97, 0.606, 0.081], 198 -> 
           RGBColor[0.97, 0.606, 0.081], 5 -> RGBColor[0.97, 0.606, 0.081], 
           216 -> RGBColor[0.34398, 0.49112, 0.89936], 381 -> 
           RGBColor[0.97, 0.606, 0.081], 288 -> RGBColor[0.97, 0.606, 0.081], 
           258 -> RGBColor[0.97, 0.606, 0.081], 166 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 34 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 97 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 132 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 279 -> 
           RGBColor[0.97, 0.606, 0.081], 544 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 93 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 462 -> 
           RGBColor[0.97, 0.606, 0.081], 81 -> RGBColor[0.97, 0.606, 0.081], 
           436 -> RGBColor[0.34398, 0.49112, 0.89936], 137 -> 
           RGBColor[0.97, 0.606, 0.081], 501 -> RGBColor[0.97, 0.606, 0.081], 
           69 -> RGBColor[0.97, 0.606, 0.081], 492 -> 
           RGBColor[0.97, 0.606, 0.081], 9 -> RGBColor[0.97, 0.606, 0.081], 
           161 -> RGBColor[0.34398, 0.49112, 0.89936], 481 -> 
           RGBColor[0.97, 0.606, 0.081], 319 -> RGBColor[0.97, 0.606, 0.081], 
           414 -> RGBColor[0.34398, 0.49112, 0.89936], 150 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 13 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 357 -> 
           RGBColor[0.97, 0.606, 0.081], 510 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 30 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 230 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 349 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 372 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 235 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 149 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 366 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 413 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 203 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 59 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 207 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 475 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 213 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 28 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 324 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 268 -> 
           RGBColor[0.97, 0.606, 0.081], 80 -> RGBColor[0.97, 0.606, 0.081], 
           122 -> RGBColor[0.34398, 0.49112, 0.89936], 435 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 257 -> 
           RGBColor[0.97, 0.606, 0.081], 215 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 332 -> 
           RGBColor[0.97, 0.606, 0.081], 197 -> RGBColor[0.97, 0.606, 0.081], 
           517 -> RGBColor[0.97, 0.606, 0.081], 214 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 407 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 309 -> 
           RGBColor[0.97, 0.606, 0.081], 530 -> RGBColor[0.97, 0.606, 0.081], 
           419 -> RGBColor[0.34398, 0.49112, 0.89936], 552 -> 
           RGBColor[0.97, 0.606, 0.081], 47 -> RGBColor[0.97, 0.606, 0.081], 
           62 -> RGBColor[0.97, 0.606, 0.081], 77 -> 
           RGBColor[0.97, 0.606, 0.081], 163 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 427 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 482 -> 
           RGBColor[0.97, 0.606, 0.081], 490 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 447 -> 
           RGBColor[0.97, 0.606, 0.081], 543 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 463 -> 
           RGBColor[0.97, 0.606, 0.081], 126 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 299 -> 
           RGBColor[0.97, 0.606, 0.081], 392 -> RGBColor[0.97, 0.606, 0.081], 
           237 -> RGBColor[0.34398, 0.49112, 0.89936], 297 -> 
           RGBColor[0.97, 0.606, 0.081], 204 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 175 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 521 -> 
           RGBColor[0.97, 0.606, 0.081], 446 -> RGBColor[0.97, 0.606, 0.081], 
           548 -> RGBColor[0.97, 0.606, 0.081], 448 -> 
           RGBColor[0.97, 0.606, 0.081], 450 -> RGBColor[0.97, 0.606, 0.081], 
           180 -> RGBColor[0.97, 0.606, 0.081], 350 -> 
           RGBColor[0.97, 0.606, 0.081], 186 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 531 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 415 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 514 -> 
           RGBColor[0.97, 0.606, 0.081], 101 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 119 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 238 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 422 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 249 -> 
           RGBColor[0.97, 0.606, 0.081], 480 -> RGBColor[0.97, 0.606, 0.081], 
           267 -> RGBColor[0.97, 0.606, 0.081], 78 -> 
           RGBColor[0.97, 0.606, 0.081], 500 -> RGBColor[0.97, 0.606, 0.081], 
           454 -> RGBColor[0.97, 0.606, 0.081], 301 -> 
           RGBColor[0.97, 0.606, 0.081], 201 -> RGBColor[0.97, 0.606, 0.081], 
           440 -> RGBColor[0.34398, 0.49112, 0.89936], 236 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 253 -> 
           RGBColor[0.97, 0.606, 0.081], 550 -> RGBColor[0.97, 0.606, 0.081], 
           499 -> RGBColor[0.97, 0.606, 0.081], 474 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 356 -> 
           RGBColor[0.97, 0.606, 0.081], 306 -> RGBColor[0.97, 0.606, 0.081], 
           227 -> RGBColor[0.34398, 0.49112, 0.89936], 154 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 40 -> 
           RGBColor[0.97, 0.606, 0.081], 221 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 430 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 362 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 142 -> 
           RGBColor[0.97, 0.606, 0.081], 505 -> RGBColor[0.97, 0.606, 0.081], 
           107 -> RGBColor[0.34398, 0.49112, 0.89936], 156 -> 
           RGBColor[0.97, 0.606, 0.081], 535 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 112 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 437 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 67 -> 
           RGBColor[0.97, 0.606, 0.081], 429 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 363 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 361 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 364 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 300 -> 
           RGBColor[0.97, 0.606, 0.081], 321 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 56 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 141 -> 
           RGBColor[0.97, 0.606, 0.081], 10 -> RGBColor[0.97, 0.606, 0.081], 
           511 -> RGBColor[0.34398, 0.49112, 0.89936], 275 -> 
           RGBColor[0.97, 0.606, 0.081], 337 -> RGBColor[0.97, 0.606, 0.081], 
           206 -> RGBColor[0.34398, 0.49112, 0.89936], 386 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 399 -> 
           RGBColor[0.97, 0.606, 0.081], 359 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 240 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 338 -> 
           RGBColor[0.97, 0.606, 0.081], 164 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 234 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 322 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 286 -> 
           RGBColor[0.97, 0.606, 0.081], 394 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 340 -> 
           RGBColor[0.97, 0.606, 0.081], 53 -> RGBColor[0.97, 0.606, 0.081], 
           425 -> RGBColor[0.34398, 0.49112, 0.89936], 155 -> 
           RGBColor[0.97, 0.606, 0.081], 537 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 470 -> 
           RGBColor[0.97, 0.606, 0.081], 26 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 134 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 18 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 460 -> 
           RGBColor[0.97, 0.606, 0.081], 250 -> RGBColor[0.97, 0.606, 0.081], 
           331 -> RGBColor[0.97, 0.606, 0.081], 542 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 538 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 507 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 29 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 378 -> 
           RGBColor[0.97, 0.606, 0.081], 129 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 269 -> 
           RGBColor[0.97, 0.606, 0.081], 193 -> RGBColor[0.97, 0.606, 0.081], 
           199 -> RGBColor[0.97, 0.606, 0.081], 508 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 486 -> 
           RGBColor[0.97, 0.606, 0.081], 178 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 110 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 222 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 467 -> 
           RGBColor[0.97, 0.606, 0.081], 369 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 151 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 353 -> 
           RGBColor[0.97, 0.606, 0.081], 326 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 365 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 167 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 400 -> 
           RGBColor[0.97, 0.606, 0.081], 176 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 92 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 528 -> 
           RGBColor[0.97, 0.606, 0.081], 188 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 108 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 46 -> 
           RGBColor[0.97, 0.606, 0.081], 434 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 468 -> 
           RGBColor[0.97, 0.606, 0.081], 125 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 277 -> 
           RGBColor[0.97, 0.606, 0.081], 290 -> RGBColor[0.97, 0.606, 0.081], 
           49 -> RGBColor[0.97, 0.606, 0.081], 83 -> 
           RGBColor[0.97, 0.606, 0.081], 111 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 465 -> 
           RGBColor[0.97, 0.606, 0.081], 333 -> RGBColor[0.97, 0.606, 0.081], 
           456 -> RGBColor[0.97, 0.606, 0.081], 439 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 202 -> 
           RGBColor[0.97, 0.606, 0.081], 185 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 252 -> 
           RGBColor[0.97, 0.606, 0.081], 370 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 256 -> 
           RGBColor[0.97, 0.606, 0.081], 488 -> RGBColor[0.97, 0.606, 0.081], 
           263 -> RGBColor[0.97, 0.606, 0.081], 144 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 70 -> 
           RGBColor[0.97, 0.606, 0.081], 44 -> RGBColor[0.97, 0.606, 0.081], 
           248 -> RGBColor[0.97, 0.606, 0.081], 91 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 6 -> 
           RGBColor[0.97, 0.606, 0.081], 323 -> 
           RGBColor[0.34398, 0.49112, 0.89936]}, 
         VertexCoordinates -> CompressedData["
1:eJxdWn3InnUZHWOISMgQkTIrte9EZISIhBz6kKhlZYZIiIhUxAjtQ2zZMiJM
JGSMMAOttbTMYVqiNmzs6Ny3bnu3vdu77d3X+/0+7/Nxz8rMbNFz379zbug8
f7wfz3Pfv/v3u65znetc1/VcctsdX/ra4kWLFn1k+KP+XV6n8cJn3rb4svt+
Cv+/6P9ep/GVr37s5BceeAg3nnv5M7+qujz7yYvqt/ijFRvv/Pnbe2zefvwE
4n9edt8FR/a8UeGRLRf/6TvfWId4Hm+6+tkdd23qsix3kr9/uL6wx+3Lr7r/
47cexx+21X/02Cy75ET+z7KvLsv7pxj7w9/2X3fb0psmMHH3+U99emIB3s85
Y49+65pzHkecj3vfuGHqdw/3+P3OB5ad/eQxvHf8zXtWbDyF4+8768cPfrKL
2B9vXr359Q/d3OW/76l3dIp3nPeTF3etm8BwkeGFC/xo8+ryc/XlM6cY++FL
u9Zd+/zfJzAzcunwSQuy3ykMNzncSBfxee4vz49LhlZe0+9xWWOAcRT7Pi27
VHx5uNvVm5+TvSu/L//8Oc/L4qdJ1Lu9+/wF/qD54zH7lWFP7qu3ueIUmmXu
7PKz9e0X9PnAQ7cPLXMUP/vm3FtPvPYMh4sP/6zSfmiOddH6dv3m9iOT+MSt
tQU6jPtxTfPgSTRmv3YBzWVvLnDnXZvWXnjFhNbdwGZ7YxX+VZtvS48HV9ZP
sv1Oonzehdc9ULvp6mdzP4j15IdHKBxxaTE4G/hvq2D7lv38kb8evrv8qj5x
5S1D0x5Fg7rbj/IfZ0aHO+qn/9kc6/lx/naIgjOjPdQoGrl0Cp9qDNFJfGGw
ql75CN/VHKyP2B8Kbvss/j6Cso/NbNz7VJX2wwcbIB3TOXsoYbLAX9bu3DXB
ZvvnjfOVGqZnenl+2X9la5//PPHaMAIOc+vFDVATH2zC+sYT+G9tjmW9PE/i
If3FdyypLX6cZd894XKM5fp+Ph/GRfHzC3nePB8CLzyr2cAUvt0AscPwJx+r
L3v0RfFc5f3B+yvnP8Jyf5/hX+FtpXkq8aB1x1js1MfXm9cCy3km8/PEn+1N
21u8gMZ9y/9C+Rv2d1n/EH9Rm/2tPr9Xw+T4PL7cEN40m9PsqcRDG1Hsdoxf
bBzcE+7WtHh85xU10/RZ4vIwip87svMUG6/uWGC5bgL1bs+9fEHnnGTz9oMv
c0kJNOH3hOzVk72mUM7dEf91dN0kA//y8zFovzhd33Z/R3w4hfC3eHNN65/i
z47wMaXzj7Lw1IDhH+OPxl85d6U8shXhH8VdX7gbE09UbMJ/ZHPiBT9sDjgt
3pvX87fx3u71G959b4XAY4tThTHCny1vmx+L2efw3eGnqzCDkncc9ztQ7O/8
8hICTxmf9i/t34KzjvLpZPIX5W/hqYcSb/MoeWgaup+6n4EfXTePzzfHmdZ6
C3D+iM8Tryy4qJRvXzFe9P4Uw7/pvzYvKz8g1hO+be8twueW9n3lY+sa6ZI+
zO8lD8/J3jNpD/H/QHrqkOwy0HoHEPZA4Z1p4Wpe9hzILwfNjzQ/Fh7rY31N
u0sPC68HlCcG4uljMN+WON0pXVChV8O020f98/oNh5zPWnwrf8D6okbt2gsr
NnC8cg8Df7ab8sUWBJ7ZwH7tAOX3fuOXvr/Ey0H5c6DPx+H83ITJqooF19uF
y2nxwLzzO63vIn6cb+B8E/HIiGdIP8H6M+JPebND86nwC+P3lkbgVdz9avNq
cWR9XOw+kB/2Uf6g/EHpRVofFx02kJ9GlQ+2s+DQ53jaukj8O4DwJzyMKi8N
EPhh+Nf6ANY74T8GXtvzuR4JvCf+XJ/A9UngkRFf1qctrgovD5R/9jHiTTzS
g/QoIn7zfuG9o/iaYvCN8xOtR+rTr+wMlH9HFK+zwtkc5S/pnVEEHwnn69u6
6f3NA6a13rzy2n7VewPrf1r/l3O9qnqswnuaxDPD4s/5xLvjRTw3L3vOov65
/7rZxLvsNaM8Nae8OaM4n6PiUXlme/KFeHCWzbKrZ60v6XqjcdfiCkVf7E3+
SP5j8Bt+c2F9x4Rw23U+pvOxng89HxEf5luab4u/90kXDTL+5Pfd0pGV7UPb
R/UiXC/KXrC9Iv6F9xk2b98wZz1F6ynhk8a39C+sf1WPSheM6/NZ3TerPD+g
843iG+bv4C/XP3T9I/vT9ld9DNfvwg+NH8WD9N0IpF9p/Rrng/wvfbnXel36
r5/+NL7FV/OtLnT/JM7v/EznZ+k/+WWr62+6/o7z5/nM/7D+Cv+JF3ex6HvX
/124nxN4Q6kv56QTZt0/cJ2g+Nyv+Bm430L3WwJ/4rGdML8GfqQP/mrdab0K
6VUGPhQvY3D9I/0E6zHVX20eVXzC8an6QfFdMfxh/UfrQ/Vj6H6N+E32qzKe
rddg3lA+pfNp5C/hcES6y3l3Bo6/yF/q+/TgfliB5x7xXZV8IbtuF+4q4xHG
Y+Qv4Xw3zCdaX/xQIfKj8aX60fw1IjwMGHyY/kg+SHsLnyPwesF3bZ/BnUvl
Jzg/Bd8h7Jf4c/0G128RX9aLtF6MeEU8P/O3+y9w/0V6DNJj9h/sv2KHgfj+
AEI/MPBufUnXZ8F3GT+Jd+mjQ3C9H+sxPk97qb48COvlguNK1+90PwbuB8X1
/HBDFPP8Z007r0+7vqPrO9WPcH9H/Vm4Pxv4ZeCdYU/3C9u+kPSo6nDHbRuP
4ukJut8rPlT8Dxjx4n453C8P/zL4k8GXqo9nIf2G4O/kI/VlRlTXDhjx2OYn
9+ODfxj5K/kl10fkBwR/I+KFYV+EvxnxoT7NnOqYGYb/EXzLsFfqg+STzAeZ
Txj5nxGv4rFNcP8z+JbB/+5f0/3r4M/U1wj8pN5F6GUGPlN/I/QxY/8IeyPw
nfGM0M95PvWr5+TXWUT9wYhvRj2DuD/jHaHnsz5A8A2i3kDofQQfMOofRH2V
8YSotxD1kPJfJT7anHo59SqjHk+9KH3Vh/u7ocdVp/bh/pP8C8dT1AfmR5gf
dX74/KGP3V8VH0zmfhDrtfWm5k+p57OfIP934XlH6G2GXs3+TPY/EP2H7M8w
9DJC72b/Le1r/nO/Nevj7Pcy+sWI+pvR72XYD9HPcT8X7h8F3lod736/4pmO
Z+tw93/FzzA/h7/zfvf/6P5N+I/Rz2P0/xH9fUa/HdFfyn5d9pPzvAj8Kw8v
wPOG6Hdlfw/Rf874yP4tYr7AsC+i/5X9UcT8wvrM85jsvyLmM4h5iPnP/UnG
vCPnd4h+fPajEfO7xEvO2xj29nwEno9EPz/xjLg++7OeX3leicAjYl6T88Oc
d+e8LudliHlf28cxv8U8DDFfz/kVYl7v+qTFTczH3F9t5/rxfYCcvzHWc78K
rs/i+ww5z255z/VozOPz+wCuF/19j5zH5/PxP3o+TtY=
          "]}]]}, 
      TagBox[GraphicsGroupBox[GraphicsComplexBox[CompressedData["
1:eJxdWn3InnUZHWOISMgQkTIrte9EZISIhBz6kKhlZYZIiIhUxAjtQ2zZMiJM
JGSMMAOttbTMYVqiNmzs6Ny3bnu3vdu77d3X+/0+7/Nxz8rMbNFz379zbug8
f7wfz3Pfv/v3u65znetc1/VcctsdX/ra4kWLFn1k+KP+XV6n8cJn3rb4svt+
Cv+/6P9ep/GVr37s5BceeAg3nnv5M7+qujz7yYvqt/ijFRvv/Pnbe2zefvwE
4n9edt8FR/a8UeGRLRf/6TvfWId4Hm+6+tkdd23qsix3kr9/uL6wx+3Lr7r/
47cexx+21X/02Cy75ET+z7KvLsv7pxj7w9/2X3fb0psmMHH3+U99emIB3s85
Y49+65pzHkecj3vfuGHqdw/3+P3OB5ad/eQxvHf8zXtWbDyF4+8768cPfrKL
2B9vXr359Q/d3OW/76l3dIp3nPeTF3etm8BwkeGFC/xo8+ryc/XlM6cY++FL
u9Zd+/zfJzAzcunwSQuy3ykMNzncSBfxee4vz49LhlZe0+9xWWOAcRT7Pi27
VHx5uNvVm5+TvSu/L//8Oc/L4qdJ1Lu9+/wF/qD54zH7lWFP7qu3ueIUmmXu
7PKz9e0X9PnAQ7cPLXMUP/vm3FtPvPYMh4sP/6zSfmiOddH6dv3m9iOT+MSt
tQU6jPtxTfPgSTRmv3YBzWVvLnDnXZvWXnjFhNbdwGZ7YxX+VZtvS48HV9ZP
sv1Oonzehdc9ULvp6mdzP4j15IdHKBxxaTE4G/hvq2D7lv38kb8evrv8qj5x
5S1D0x5Fg7rbj/IfZ0aHO+qn/9kc6/lx/naIgjOjPdQoGrl0Cp9qDNFJfGGw
ql75CN/VHKyP2B8Kbvss/j6Cso/NbNz7VJX2wwcbIB3TOXsoYbLAX9bu3DXB
ZvvnjfOVGqZnenl+2X9la5//PPHaMAIOc+vFDVATH2zC+sYT+G9tjmW9PE/i
If3FdyypLX6cZd894XKM5fp+Ph/GRfHzC3nePB8CLzyr2cAUvt0AscPwJx+r
L3v0RfFc5f3B+yvnP8Jyf5/hX+FtpXkq8aB1x1js1MfXm9cCy3km8/PEn+1N
21u8gMZ9y/9C+Rv2d1n/EH9Rm/2tPr9Xw+T4PL7cEN40m9PsqcRDG1Hsdoxf
bBzcE+7WtHh85xU10/RZ4vIwip87svMUG6/uWGC5bgL1bs+9fEHnnGTz9oMv
c0kJNOH3hOzVk72mUM7dEf91dN0kA//y8zFovzhd33Z/R3w4hfC3eHNN65/i
z47wMaXzj7Lw1IDhH+OPxl85d6U8shXhH8VdX7gbE09UbMJ/ZHPiBT9sDjgt
3pvX87fx3u71G959b4XAY4tThTHCny1vmx+L2efw3eGnqzCDkncc9ztQ7O/8
8hICTxmf9i/t34KzjvLpZPIX5W/hqYcSb/MoeWgaup+6n4EfXTePzzfHmdZ6
C3D+iM8Tryy4qJRvXzFe9P4Uw7/pvzYvKz8g1hO+be8twueW9n3lY+sa6ZI+
zO8lD8/J3jNpD/H/QHrqkOwy0HoHEPZA4Z1p4Wpe9hzILwfNjzQ/Fh7rY31N
u0sPC68HlCcG4uljMN+WON0pXVChV8O020f98/oNh5zPWnwrf8D6okbt2gsr
NnC8cg8Df7ab8sUWBJ7ZwH7tAOX3fuOXvr/Ey0H5c6DPx+H83ITJqooF19uF
y2nxwLzzO63vIn6cb+B8E/HIiGdIP8H6M+JPebND86nwC+P3lkbgVdz9avNq
cWR9XOw+kB/2Uf6g/EHpRVofFx02kJ9GlQ+2s+DQ53jaukj8O4DwJzyMKi8N
EPhh+Nf6ANY74T8GXtvzuR4JvCf+XJ/A9UngkRFf1qctrgovD5R/9jHiTTzS
g/QoIn7zfuG9o/iaYvCN8xOtR+rTr+wMlH9HFK+zwtkc5S/pnVEEHwnn69u6
6f3NA6a13rzy2n7VewPrf1r/l3O9qnqswnuaxDPD4s/5xLvjRTw3L3vOov65
/7rZxLvsNaM8Nae8OaM4n6PiUXlme/KFeHCWzbKrZ60v6XqjcdfiCkVf7E3+
SP5j8Bt+c2F9x4Rw23U+pvOxng89HxEf5luab4u/90kXDTL+5Pfd0pGV7UPb
R/UiXC/KXrC9Iv6F9xk2b98wZz1F6ynhk8a39C+sf1WPSheM6/NZ3TerPD+g
843iG+bv4C/XP3T9I/vT9ld9DNfvwg+NH8WD9N0IpF9p/Rrng/wvfbnXel36
r5/+NL7FV/OtLnT/JM7v/EznZ+k/+WWr62+6/o7z5/nM/7D+Cv+JF3ex6HvX
/124nxN4Q6kv56QTZt0/cJ2g+Nyv+Bm430L3WwJ/4rGdML8GfqQP/mrdab0K
6VUGPhQvY3D9I/0E6zHVX20eVXzC8an6QfFdMfxh/UfrQ/Vj6H6N+E32qzKe
rddg3lA+pfNp5C/hcES6y3l3Bo6/yF/q+/TgfliB5x7xXZV8IbtuF+4q4xHG
Y+Qv4Xw3zCdaX/xQIfKj8aX60fw1IjwMGHyY/kg+SHsLnyPwesF3bZ/BnUvl
Jzg/Bd8h7Jf4c/0G128RX9aLtF6MeEU8P/O3+y9w/0V6DNJj9h/sv2KHgfj+
AEI/MPBufUnXZ8F3GT+Jd+mjQ3C9H+sxPk97qb48COvlguNK1+90PwbuB8X1
/HBDFPP8Z007r0+7vqPrO9WPcH9H/Vm4Pxv4ZeCdYU/3C9u+kPSo6nDHbRuP
4ukJut8rPlT8Dxjx4n453C8P/zL4k8GXqo9nIf2G4O/kI/VlRlTXDhjx2OYn
9+ODfxj5K/kl10fkBwR/I+KFYV+EvxnxoT7NnOqYGYb/EXzLsFfqg+STzAeZ
Txj5nxGv4rFNcP8z+JbB/+5f0/3r4M/U1wj8pN5F6GUGPlN/I/QxY/8IeyPw
nfGM0M95PvWr5+TXWUT9wYhvRj2DuD/jHaHnsz5A8A2i3kDofQQfMOofRH2V
8YSotxD1kPJfJT7anHo59SqjHk+9KH3Vh/u7ocdVp/bh/pP8C8dT1AfmR5gf
dX74/KGP3V8VH0zmfhDrtfWm5k+p57OfIP934XlH6G2GXs3+TPY/EP2H7M8w
9DJC72b/Le1r/nO/Nevj7Pcy+sWI+pvR72XYD9HPcT8X7h8F3lod736/4pmO
Z+tw93/FzzA/h7/zfvf/6P5N+I/Rz2P0/xH9fUa/HdFfyn5d9pPzvAj8Kw8v
wPOG6Hdlfw/Rf874yP4tYr7AsC+i/5X9UcT8wvrM85jsvyLmM4h5iPnP/UnG
vCPnd4h+fPajEfO7xEvO2xj29nwEno9EPz/xjLg++7OeX3leicAjYl6T88Oc
d+e8LudliHlf28cxv8U8DDFfz/kVYl7v+qTFTczH3F9t5/rxfYCcvzHWc78K
rs/i+ww5z255z/VozOPz+wCuF/19j5zH5/PxP3o+TtY=
         "], {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
           ArrowBox[CompressedData["
1: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
lH33y89YnaKcw/75uU8nKed3QH7u18nKOR6Yn9E6SanfQfkZo5OVuh+cn1E6
Ral/G99vY1xtPJ+2vt/WuNp6Tu3ct51xtfO8DslPf52m1PHQ/AzQ6Uo9D8vP
QJ2qnAOzda8+kGLGRurEFLM2Qh9MMZN364QUM3uPjksxu3fp+Pwca5w4TDn3
44wThyvn3944cajSN9wxtynxctcMUeLlzrlViZe75Q4lXu6cO5V4uXNuV+Lt
4Pod/F1H1+/o7zq5fid/d2p+BumNylx2zs91eoMyn13yc70OVua0a35u0eHK
/J2Wn5t0qDKHp+fnZh2mzGM34+jmesj90d04ursecu/0MI4erofcPz3zc6Ve
r9wrvfJzlQ5S7qMz8nOFXqfcS71T3Mc4VZmXM1Pc2zhNmZezUtzjOF2ZF+7w
i5X+4y6/UOlX7vqLdKJrTHDvce413t9cqzP8zdU60z2uUeLvYx36+H0ff9/X
fPv6+77+vZ/16ef3/Xz/kvxcrqOV+b7U73GMMt+X+T2O0rHuOdGYHnQv8u9v
fgPMe6B5cxYjPcMRnhlzQy8M8ezpZ3qGvqc36HN6gf6mh5gDeo95odeYE3qU
efoDdeoNvQ==
            "], 0.02261146496815286]}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[1, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[2, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[3, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[4, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[5, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[6, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[7, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[8, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[9, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[10, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[11, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[12, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[13, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[14, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[15, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[16, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[17, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[18, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[19, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[20, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[21, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[22, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[23, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[24, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[25, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[26, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[27, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[28, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[29, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[30, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[31, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[32, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[33, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[34, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[35, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[36, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[37, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[38, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[39, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[40, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[41, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[42, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[43, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[44, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[45, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[46, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[47, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[48, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[49, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[50, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[51, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[52, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[53, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[54, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[55, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[56, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[57, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[58, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[59, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[60, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[61, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[62, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[63, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[64, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[65, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[66, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[67, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[68, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[69, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[70, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[71, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[72, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[73, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[74, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[75, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[76, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[77, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[78, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[79, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[80, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[81, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[82, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[83, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[84, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[85, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[86, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[87, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[88, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[89, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[90, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[91, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[92, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[93, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[94, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[95, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[96, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[97, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[98, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[99, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[100, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[101, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[102, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[103, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[104, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[105, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[106, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[107, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[108, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[109, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[110, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[111, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[112, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[113, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[114, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[115, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[116, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[117, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[118, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[119, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[120, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[121, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[122, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[123, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[124, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[125, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[126, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[127, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[128, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[129, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[130, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[131, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[132, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[133, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[134, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[135, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[136, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[137, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[138, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[139, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[140, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[141, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[142, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[143, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[144, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[145, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[146, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[147, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[148, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[149, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[150, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[151, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[152, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[153, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[154, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[155, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[156, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[157, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[158, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[159, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[160, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[161, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[162, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[163, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[164, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[165, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[166, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[167, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[168, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[169, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[170, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[171, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[172, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[173, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[174, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[175, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[176, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[177, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[178, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[179, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[180, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[181, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[182, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[183, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[184, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[185, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[186, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[187, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[188, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[189, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[190, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[191, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[192, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[193, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[194, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[195, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[196, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[197, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[198, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[199, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[200, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[201, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[202, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[203, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[204, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[205, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[206, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[207, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[208, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[209, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[210, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[211, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[212, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[213, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[214, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[215, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[216, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[217, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[218, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[219, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[220, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[221, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[222, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[223, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[224, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[225, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[226, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[227, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[228, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[229, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[230, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[231, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[232, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[233, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[234, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[235, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[236, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[237, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[238, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[239, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[240, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[241, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[242, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[243, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[244, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[245, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[246, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[247, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[248, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[249, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[250, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[251, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[252, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[253, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[254, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[255, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[256, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[257, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[258, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[259, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[260, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[261, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[262, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[263, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[264, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[265, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[266, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[267, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[268, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[269, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[270, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[271, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[272, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[273, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[274, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[275, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[276, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[277, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[278, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[279, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[280, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[281, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[282, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[283, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[284, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[285, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[286, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[287, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[288, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[289, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[290, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[291, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[292, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[293, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[294, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[295, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[296, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[297, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[298, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[299, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[300, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[301, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[302, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[303, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[304, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[305, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[306, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[307, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[308, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[309, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[310, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[311, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[312, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[313, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[314, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[315, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[316, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[317, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[318, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[319, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[320, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[321, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[322, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[323, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[324, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[325, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[326, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[327, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[328, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[329, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[330, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[331, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[332, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[333, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[334, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[335, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[336, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[337, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[338, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[339, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[340, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[341, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[342, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[343, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[344, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[345, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[346, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[347, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[348, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[349, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[350, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[351, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[352, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[353, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[354, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[355, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[356, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[357, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[358, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[359, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[360, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[361, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[362, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[363, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[364, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[365, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[366, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[367, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[368, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[369, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[370, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[371, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[372, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[373, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[374, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[375, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[376, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[377, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[378, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[379, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[380, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[381, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[382, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[383, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[384, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[385, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[386, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[387, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[388, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[389, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[390, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[391, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[392, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[393, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[394, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[395, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[396, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[397, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[398, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[399, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[400, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[401, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[402, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[403, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[404, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[405, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[406, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[407, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[408, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[409, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[410, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[411, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[412, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[413, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[414, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[415, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[416, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[417, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[418, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[419, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[420, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[421, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[422, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[423, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[424, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[425, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[426, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[427, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[428, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[429, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[430, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[431, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[432, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[433, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[434, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[435, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[436, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[437, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[438, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[439, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[440, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[441, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[442, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[443, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[444, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[445, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[446, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[447, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[448, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[449, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[450, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[451, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[452, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[453, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[454, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[455, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[456, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[457, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[458, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[459, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[460, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[461, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[462, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[463, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[464, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[465, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[466, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[467, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[468, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[469, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[470, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[471, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[472, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[473, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[474, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[475, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[476, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[477, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[478, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[479, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[480, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[481, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[482, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[483, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[484, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[485, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[486, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[487, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[488, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[489, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[490, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[491, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[492, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[493, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[494, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[495, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[496, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[497, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[498, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[499, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[500, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[501, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[502, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[503, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[504, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[505, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[506, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[507, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[508, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[509, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[510, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[511, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[512, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[513, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[514, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[515, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[516, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[517, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[518, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[519, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[520, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[521, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[522, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[523, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[524, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[525, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[526, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[527, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[528, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[529, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[530, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[531, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[532, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[533, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[534, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[535, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[536, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[537, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[538, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[539, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[540, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[541, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[542, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[543, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[544, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[545, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[546, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[547, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[548, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[549, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[550, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[551, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[552, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[553, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], 
            DiskBox[554, 0.02261146496815286]}}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    FormatType->TraditionalForm,
    FrameTicks->None,
    ImageCache->GraphicsData["CompressedBitmap", "\<\
eJycvXd4XNXV9j2o9y432XLTOWfkgjHNuNCLNRqZkidAEkqAUEIaSYCEYo1G
NhBK6AkpQCihN2NsDBgb3HDvvci9QcqTQvKGBFvn27+11hnLxLzvdX1/SB6P
Zk7Ze5V73auccVfe9O1rvn/lTdd/68p+Y3985Q+/ff23bux3zg0/dm9lHxWL
HTWEn36xHPc6jMX+69fQWOz/z+v75HfOMPfrAfcz1/0sdz9ZK3i7kJe8Wmlv
z3M/77ifOfY+79lnc6O/v+h+bnY/Jxw6fKxdfucOsz891+UQsSw5yMDocFvc
z6dZWTkHe1YVhKfGC8KRDbmh1z0nDHrkhDXV3cIe/UeG/YddFPYceEpYUlkf
FhXkh7U13cJeA/T9HgNOCcuqB4RVvY4J6waeHPbo1uPziqKjPs3NOWrPl9zC
f122Xm/sdvmd3XVx7HKH73K//p6Vnft5UWnPzopujXLKHv1H66UNODmsru4R
eu6SB3bLCbuXZYW3JIvCWbdUhMlheeG3TikIh3s9wsEn3xD+z082hl9r3Rt+
9ZYt4dDTbg7Lq+rCAcd87b/er/PPDs/85uv6mcqeYd/avLCux6Hl6HrbvQbK
+Q+UFhz1aV72UXu/7Db1/mI3ye/6rrsztcsqcav/KiiuPdi938iwts/xcpru
dqtyqqpuYWlFryPezrCGXuHVpxaG8Z7Z4Xs3VYQPX1IiS3DPRSVhfcMIPp/N
F2LZ8pWeA0/jazF9r7e816cxGR5z1nh97Z0c9u1edsRTdV2h0qr+YXF53WE7
Ul5e83l1SdanRfkiCMtNrtnVR2xFbtYF+ZH8rokWZKH7+UtBcbcD3frKWndy
03U9eoT1NTlhmdsLruasK9+SK/jilfVy73Xve9KhGy2Ut/v6J4fp84vDsUPz
wru+Whz+pLkovGRkgfzbf+j5sVxblP7DLg79E6+2//E7Lxww/OvRe+HAYy4K
Kyp7HDp87X+tWc+Bp7vtGpO5quMSd4ZVPYe6NRkt21la5bazn65T74aTD5ZV
dP8sOyu2rcu6xH6sC/N9+V3VVSGQjk9z8ooPOgkRfTzS1vTvWRHWDZDdDo9v
/pksVJedj4+8Puw75AL5X44t0gB3Y987szC8fHSB6Mujl5aK4Nx9YXHYt+HE
8IIb18Si73PYHm6HD0lOnrzXO2gKh5/dJq/7NIwKa3oN0XXtedgassYNx10u
r5uum5nZxi/bUu6ools8rO4e7ywuKmWxIstymHrpasW+I7+Lo0XbjDrl5x51
sLK8Miyr6hP2qioKTx9UGo4YmBf26i+LlLkLTldZXY9IyOkHjflB2O/or+bY
jR+fvFs08dBi9JIr7euNCtsvKA7PHJQXnhbPC2ffqobnypMLwmO92rBx1Hf5
jhzyKzevlzssd1LESnzxfVWrSfLa69M97Nt/CJ/R05X+1zpjh3jNIbpsddfX
sei7oh/e2WFZTYNIqWpqxo4d6N7/5L8WlvRY3nVRdTVj18nv0sMWtaTgqIPD
++aGlzmROXNwfti3V21YVV4hpveTR2pEtxqOjnQrzwn/cWHvASfIHbOSXF7m
zoaF51z9Tlju1v5Ii3VMQ4/wKreYJw3MDUd5ueEZjblu/3LDfjXZoe+sfnVl
Vdi9/gQn1ec57R8RFpX1DIsK88OaquqwR1/3/uDzwm7u/ZKKPmG1s9jd6keE
peXdw9HuWKMGHXmDum5EWfXA8IzLX+sqE11f2y2Wy4ZW1x3zf/cm3eIH3Gp/
6lb6MJ3XJY5dLb8rv3SlE0fnhU1D1aL/6Rc1Yeq8Yuf4csXa/+vxWlFcP95V
YUfJ5fSsHx429K6RWz37yilySUe67drK8rCktMYt0YmybN37nhhWueVtcJig
nzPAx/fPPXhsv7x/lBTk/Du3sPyv+WW9VmflFf6zoLzX39wPr/9eUNbrL4XV
/T7MKSz7X/fvp/llPVdn5xX9taCs5/9xn1njXv89t6jqQG5BxcEeVWWh3zM/
7FVb7c71xa0aLoamW99RYUX3QZnrRXp6eWcdWZIO2aejT//pYbJ/mGdzr4ee
/tPIuHQ6qfissKT7YTuiWxG7Sn5fxI686n7+5uDFwVOCvC/dDTR/3u2V8v+x
Q9TfsDOrJlaFpw7pdsRVH9i7e3hqkBtWVPUWC1PT+zhZgVrbhR79TkSY/1VS
mLMvO6/4s4KKuo/zSmo25RRWsKJ/zCvttj6/uPbPpT2Hrq72Tv9N7xGXzAua
2971m9t+Hm9q/8hPpt8Pkqmfu//PcO/P8Hi/ue09vzk1y/3c7yXTfHahn2i7
tyHR9nbQnF7Zd8y3Z5f1HPxJQUXvf7gd3ZhfUru9qKrfP4tqBmxz5/1LTn7x
wXy3izg3uV7njZCaXg1nyrX/vyStrNYPm659X41r2WEuInp9hJ066PQL3Zli
u6S7E/vmIVcZYYi/5xdWdvaqLskYJDbhSJt0/rH5mU0y/5fFf2Jnh09dXRaO
HtQt7NmPfThfvGpFeVVYX50T9upW7eBI786S4pJ/5+Vm/S07v/hfBZV1e3OL
qzrc3vxv1cBRb/cZeeWDXnPqw3gi/ZZb32fcus5x//L6lSCResVLpng93f28
6PbhNfcv+/aqez3JfXae2zPef8ZvTn/kuc8HybYn/UTqI/fD955z+zXXa07z
2af8ZOoD9/+35FiJ9BvuPV5/4Cfd55pbeb2g35hrP6wcMGpTcTf/H0XVA/bk
Flfvctf7WV5J7X8KSrodrHVGVPcykr3zRZWqeh4tGnjIqlT9lyuKXh9pA70T
rgx7DDy1s6iw6NOivKNWdHExunOxS+V34RdB4MGqXsPC8tog7NlwenhKYykb
6a6A3fn2f23eFWMKBMSw2ac1Fogv3vNgtfxt/8M14bWnFYSVxQ5EFmX/xdmv
j3MKKpw0D9zlbNH2gtJun1T2HzW9fuRVbsXTb9vqvRwk005L5PVMt9L3e7oz
q4Lm1KPufXZqvduV29wPu7TT/bS6nRgftLTucbtxh9Ome9z39vJ+PJm+2X13
j9vhie4zP/Kbx/P6V+4Ytzht5DP3u7//1GnrVnfel52E8Jm1SEy8OY32rjbp
uTeebJtlr992n3vNXr+LRvcdfe3q8vrjPi2s6rvfSeK23KLK/7ifz3Pzyw5W
OK3Dnf2/XB6vnXb+9866YAlNrwvGirsj5nOu9KCD+X/NzzmqK3jQLY1dojtL
kLfLmdgD0Y5yFo7KmeInXRdeNKLIOVJ29tLDdnLc8HzB7qhxr6rCsLaqIhzl
F4QXnljQOdrP/3ttWa6T4eo/1g4a+0rvkZff5be0LQhUP153/77k6cosd3pw
l9sVdm+dWyV25WWnf9vcv9/zkrIj+53eTJDdScjra90q3+r07mP3/Z/4yfbL
3A7xeqLT5xudbvL6xiCRvtrtNK9vdtJxVUNSXk8IWtp/FG+Wz/DvVYG+f5/b
3a8GTW373OsH3Htuh9O8/qW7livdsTp8tQl3uOtd73543eaud3HQLHb5eff9
Ke7/vP8hEtjnpKsWlPU6+t9Ohz93UUEnOixeFJDj9Li6Tr0okO+ElvsO223b
4Sw+ECs6DLewwWBlSIHLRhUcOL0xb3eviqwHMzsa+9rhoHCn+zlQVFJ72MZy
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
IejusBzV3icZYQQbp06a0avqkqT1FlWpg2dZbAgVd7uBqC5zO+jG09059yJr
bgzpRgqg2MxN5jT+L8vbMcwLAUDtEnFHCKVk2t0P7AgPDjabwGwxwefAccBu
SmvwFPW4JKMtutl0vhPBOdy6BXm+t5VWDy3q1PtfrMIrrJDrFFgs1VZR3Uuh
ZK62UukjpcW3rlcmc8iyrcq4GNw/c8iQPzg2y5UYmxww6HdnW10rv5vT3iXr
gEki2mntosQRRnV/N608cA4CzBwfACBae0lK5x7ek9beCqyBcz5nfYDzWZQf
ZYSzDGgfI381mvV14KU2GQmaKuOfl+SrI6riHNpXXgu+EZfT4MnpcfNvfyMi
3ZKe/VWyMLoxHI4trunska5eGW0nd6+kPzX0B/L4dqpXxrwLnnSPTR+al0et
ulik2y3YjIUlGIvO4azTuOOPajlpiSji/4yMq9S4z82aTpXvOsWHxdzvfBgQ
f8AdB6lXu9R5yojYJl12WUpEEMR0udbXiTj+K8QWw92nj4YOScCJftorc8hF
tF0kkPxD66s9KExbTSaBnQVvu7/5n1bp7jBv//02/PXbHb1SE8f1z+pQQlK/
ZMaV1UvfcmtZOHiupZbpEHaPNbnmOzkOqJLLTH/e7+zVGvF8tTSZdVKmrzY+
pSu8R2PXGCpaLLEmHdNN9wG4br83Xh6e8okaMZDvIk62xY45TWXFl8roMUeE
L7aG3lKUlBKieLYR1KHpef3mbVNJLxEI/CLSsR+Wt836sL484XRznPHFwYI9
ElKfd8nC4qxIz9u9UupdPVreAXCrCIfmaEp2FG83j+JtqHKVjXta9ulXQVPH
vKCsSHzYvztf9rWShl0O7Owa+k6qh+6+cpgpo2LHmZUEzuXn4KhfWS4OHHp6
uk8ie/dntKcBXssdNgoZmluP/S0ezqQJ85bYdJSB0zrVl35Qa/PFCPjm0ksN
XaB8+trnS/kA0jA+c6hIOp/7gdHs14gXpQFdrDolYmSoQBZ0bxJk47778lSv
dV7SAdVbrUzDEwG4njZO6V5KCYaWGEicRyRlkSEM7sM90zKeg/gCikvar0vG
TlO9J2R6l2w2L5GsHN/1O+uZQEERnjWS/6hxQYiu3Z9RxtUiY+nimXak+87f
al7y1NTBF2zNaNnZMudxSh8/62vgTzExmn+1iN9fLGPoo7BuXweWp7RhKPsD
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
mqLX6VnO5nPaj0lne8zDTpefc6qd1lm82TKpjNDZYoEYhIRjCYxEwzxvmVL9
uTom41JHXPS0MXrwqDm2CAZ6+jGti5Qhi+hufr7ISjg3ZhShrDBkgP3i50SX
fbuTk5RfLc4dTaDXNU4/zm303n9xG/1lNF44UlTasN3Qx1xty+bSOoNACQLB
oeTI8/MdD2n7XscGBYUlI4WJ2EfhSHw7O6BbHTpa7YDf8RdDRo+pbpoaVFTW
BY1te4/agW9vVzMnVUROHCvH7bbTXXL09xwvbODh/TvjnzaURd5zWOeP7i4+
TDbt8XDj3t/dJdO9xPOkutI9i60lrWQwHzI1cK3tPO7tasOF/6H9JgUXkkN/
3JABcYenjJkH6vCcAFqlPm4ZxnNS2S7/EsZba5IDAdh32KdB8QNpJb8uT+l3
Iqnk/dnVB9I6M4fv//eO7mzm81xjVz4j2dmeIa73dsusk66Olza8XljZ9nl+
6bh38yLRL5xjMAKvicwmde0TG4uCOuckZKF6WVaTQspjc5POvfSby3GmjKW2
dbacx3Ft074qKt7O3dRNDR0rr0lsPAf9S8oBiLd9UzmwZ1hP2f9cvZlDNBWa
mi28q1wOVnNVIqgrjQ6XFed/6vb1jbxw+L1ofunWaEHprdFECSoenM0J54TJ
+LiO7qF16u5LKAOUuEFDj7LOnI4bDb8/ZuxH3t8upkEmMSylddXKjKpMML1W
rjr8nukZEllJdePOD2nPVb2mfK6j1953L2WYiS+eP8dO7XoNxfTzc8wEXMTH
mqeLCn7OIbK/h6NxRp1/BZNyxoRYwEi7vVvjwcSG6FjhgZjZY68cWdkKZ8Oh
7Pi9q23aNSgsKNqWLMjDoxvIblrouFF77ONO7zoot42p6C2TFsgeQfQhNur3
kCCE28OQBia6g/bdjwzOOLBAbspvXOe4/KCpMhYcNCkupI/22oj1s8ofntoW
/zJZEP6bE9LNeXnhj+KF5e/Ei6t+HonE/rNp+vGkUUA0vpc13X/wtFGRh2e0
7xb2j7I5og7Y235LB6GS2VjS/vQE5P0VMqNW+36xCVusZAHIbR3dB3s6u0Rl
49hRXPW0FSwtKG3Z863KCbM/Kqrr2OAUC4L3Uayo4g0cqkg0MVJalC/Yw2/O
2vPKJE/Le+JyvP9mb7w4q+x22X9Rdn2r6tLs2Fdux94rSuTlqlTdstAJ2/td
a9y/96Kxwm3sOztX27oPrSyC8urxo5o1Il+W1qCh3dRBwabB8mDiuJ0fAEkD
69Oq/ODJsnlEsYPG6mLnDTYOFxeVfBaPhv8rHI4+674en815+aW8fz9WUP5J
Iln/kDut7+SXN/2zuLbjslhh1crGvY4CWVOX9xMbRwhr9Qxj2NJY8OiMtl4g
LAIPBO32f8rHz7jHnQ6028exwornQnl5H+cn695x/78OoWVjIrH8j52GGI4l
SoKGyuJgTke+1olMjEs5656tUQc048FerTGJyPN8BDBsk8RFPXpGvro5pd/o
DKMpqxomExfZVl600x7Z7oRO3v54ZTepoKTua1Xk9M66YMNAue3OXBGjOR3x
ne6WXcvdKX/05u+WCMoqG2kjGnCMSyragrrWWYSFpQlWsrItqJQ4QCoodgig
TkPG8Pg+dff1D7eCz+Xl5b3i/vuO068vuGOKPX01XlyDfnrB2ZX/dju91b1/
yz3PZyUFka+aKyNBWWmJk4yku9cCkRSqcypLi+mrLV0b+X4qL8sr6oIDOuNj
cm1Xn1Mm7yc5aYR3azsif5cz3ywbr0A6a6qqHTSdIYrOeaIjDkSi6N5NRLff
Et2L0KnyWv21Go9zU1rRKAKf69egxfzMp9zbytkS27LJsjUzJ2kslQT315DS
RD9TTjrW70qduwvkSZbXBxNqYnb48oNmp1Un1ER1iXMEm0PaVhMPykuT24nE
ugvKJDMw1ndMnyh9PvS2a7cjjvKeJVg8v3C7yXLfRESpqygeLiwo+DAeCT3l
lvXnuauvyx46XV7LdzoQRWWNQX11lTgPC6cWBPtOTAY1tc3BrMxorMDfgq2+
CUE8NwaZy7GKGH+Bh21IzRV5z/64fCcv0tYiK46sZ+7/54pnqi5OrU5Wq+sd
TMvJKkfk+mltHmF3WiF8R28pKZJwHmvw6Pll2y0osyHmue8+oNNnIWOfVhaH
N+fgrjN0Lc+U19LtJNkd1C/zi6pHKhp2DSpq00FduV4591suPqIoe5DC1vhI
onNTlKe2PTkoErTudmSQrErZcipyzHXF7Cmzh9mL0I7/LyUg7snce79wFhTM
uXTVTnACQZ6/e0L0IO/ZmEx9RBZomsNHrdXRwC2SLNYeLbFPnSrOXax/0cX6
obxW+cW63v1bYY7I+1XF4S9mtsdGuNr4qojblpiwVXNlHN5Bkzopuc6vFzKJ
qDu0XFqdHv1xfCc/xp4tbIG0XHnwJQa58nHivvnbI4dMLnKokMs3tc/MQmZ/
ENndNYvK5H1HfdQZ9/hIaUnRtnhB2fuRaP7L7qHvz1mis3SJFsnrfmMt0Sd5
eRGJ3c1KF4oW3GN8PCguqRIDNvf4e8d0C9E4GJwq5+P9v3wBgyQ7bfhYArCf
c2j2yxkFxilta6gc8ztqq2uCqU47LpyakEGZ46uiI878f+kEhm2n3OLeHVSV
LkNosbxO9R4r64U5ecQLjbMZX7gnGyHnUlzehOmR7EhN87Sg2HlA6O7SqgkB
jL668T6msTOaNnOf3bt5Tunm/n/uXjaUR4Oq0iK3C/k2NyY/KE8WB4XJeuJt
8v3146eONFRXbmuuDL/vjgJ7vW6Mp9THC8m8tNDEHfd8Xc7T+vdcAbUO1vmy
oihvpKiwSOoKWibbUyfd4a1VKzkrnRD+K5ZK7zQuRwvotU+mYLimrOAfDjY+
t8P1b9/h+3e8a73d0GXyGt3xrsN8LBTf8aZv3+7XMf/r3BMQulwvHPCyy///
+1De/wUsBl6b\
\>"]], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12}, {Null, 
         SparseArray[
         Automatic, {12, 12}, 0, {
          1, {{0, 2, 5, 8, 11, 15, 16, 17, 18, 19, 20, 21, 22}, {{2}, {12}, {
            1}, {3}, {11}, {2}, {4}, {10}, {3}, {5}, {9}, {4}, {6}, {7}, {
            8}, {5}, {5}, {5}, {4}, {3}, {2}, {1}}}, Pattern}]}, {
        VertexStyle -> {
          6 -> RGBColor[0.97, 0.606, 0.081], 1 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 9 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 2 -> 
           RGBColor[0.97, 0.606, 0.081], 8 -> RGBColor[0.97, 0.606, 0.081], 3 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 4 -> 
           RGBColor[0.97, 0.606, 0.081], 11 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 10 -> 
           RGBColor[0.97, 0.606, 0.081], 7 -> RGBColor[0.97, 0.606, 0.081], 
           12 -> RGBColor[0.97, 0.606, 0.081], 5 -> 
           RGBColor[0.34398, 0.49112, 0.89936]}, 
         VertexCoordinates -> {{0, 0.7659416862050707}, {0.38297084310253526`,
            1.5318833724101413`}, {1.531883372410141, 2.297825058615212}, {
           1.9148542155126764`, 1.5318833724101413`}, {1.531883372410141, 
           0.7659416862050707}, {0.7659416862050705, 0}, {
           1.531883372410141, 0}, {2.297825058615212, 0}, {2.297825058615212, 
           0.7659416862050707}, {2.680795901717747, 1.5318833724101413`}, {
           0.7659416862050705, 0.7659416862050707}, {0, 0}}}]]}, 
      TagBox[
       GraphicsGroupBox[
        GraphicsComplexBox[{{0., 0.7659416862050707}, {0.38297084310253526`, 
         1.5318833724101413`}, {1.531883372410141, 2.297825058615212}, {
         1.9148542155126764`, 1.5318833724101413`}, {1.531883372410141, 
         0.7659416862050707}, {0.7659416862050705, 0.}, {1.531883372410141, 
         0.}, {2.297825058615212, 0.}, {2.297825058615212, 
         0.7659416862050707}, {2.680795901717747, 1.5318833724101413`}, {
         0.7659416862050705, 0.7659416862050707}, {0., 0.}}, {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
           ArrowBox[{{1, 2}, {1, 12}, {2, 3}, {2, 11}, {3, 4}, {3, 10}, {4, 
            5}, {4, 9}, {5, 6}, {5, 7}, {5, 8}}, 0.027905810438046352`]}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[1, 0.027905810438046352]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[2, 0.027905810438046352]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[3, 0.027905810438046352]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[4, 0.027905810438046352]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[5, 0.027905810438046352]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[6, 0.027905810438046352]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[7, 0.027905810438046352]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[8, 0.027905810438046352]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[9, 0.027905810438046352]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[10, 0.027905810438046352]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[11, 0.027905810438046352]}, 
           {RGBColor[0.97, 0.606, 0.081], 
            DiskBox[12, 0.027905810438046352]}}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    FormatType->TraditionalForm,
    FrameTicks->None], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 
        18}, {Null, 
         SparseArray[
         Automatic, {18, 18}, 0, {
          1, {{0, 4, 8, 12, 16, 20, 24, 28, 32, 36, 40, 44, 48, 52, 56, 60, 
            64, 68, 72}, {{2}, {3}, {7}, {14}, {1}, {4}, {8}, {13}, {1}, {
            4}, {5}, {17}, {2}, {3}, {6}, {18}, {3}, {7}, {10}, {11}, {4}, {
            8}, {9}, {12}, {1}, {5}, {9}, {16}, {2}, {6}, {10}, {15}, {6}, {
            7}, {11}, {15}, {5}, {8}, {12}, {16}, {5}, {9}, {12}, {13}, {6}, {
            10}, {11}, {14}, {2}, {11}, {15}, {18}, {1}, {12}, {16}, {17}, {
            8}, {9}, {13}, {17}, {7}, {10}, {14}, {18}, {3}, {14}, {15}, {
            18}, {4}, {13}, {16}, {17}}}, Pattern}]}, {
        VertexStyle -> {
          18 -> RGBColor[0.34398, 0.49112, 0.89936], 6 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 15 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 1 -> 
           RGBColor[0.97, 0.606, 0.081], 9 -> RGBColor[0.97, 0.606, 0.081], 
           13 -> RGBColor[0.97, 0.606, 0.081], 2 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 8 -> 
           RGBColor[0.97, 0.606, 0.081], 3 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 4 -> 
           RGBColor[0.97, 0.606, 0.081], 11 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 10 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 7 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 16 -> 
           RGBColor[0.97, 0.606, 0.081], 17 -> RGBColor[0.97, 0.606, 0.081], 
           14 -> RGBColor[0.34398, 0.49112, 0.89936], 12 -> 
           RGBColor[0.97, 0.606, 0.081], 5 -> RGBColor[0.97, 0.606, 0.081]}, 
         VertexCoordinates -> {{0.9397, 0.342}, {0.766, 
          0.6428}, {-0.9397, -0.342}, {-0.766, -0.6428}, {-1., 
          0.}, {-0.5, -0.866}, {1., 0.}, {0.5, 0.866}, {0.9397, -0.342}, {
          0.1736, 0.9848}, {-0.9397, 0.342}, {-0.1736, -0.9848}, {-0.766, 
          0.6428}, {0.1736, -0.9848}, {0.766, -0.6428}, {-0.1736, 0.9848}, {
          0.5, -0.866}, {-0.5, 0.866}}}]]}, 
      TagBox[
       GraphicsGroupBox[
        GraphicsComplexBox[{{0.9397, 0.342}, {0.766, 
         0.6428}, {-0.9397, -0.342}, {-0.766, -0.6428}, {-1., 
         0.}, {-0.5, -0.866}, {1., 0.}, {0.5, 0.866}, {0.9397, -0.342}, {
         0.1736, 0.9848}, {-0.9397, 0.342}, {-0.1736, -0.9848}, {-0.766, 
         0.6428}, {0.1736, -0.9848}, {0.766, -0.6428}, {-0.1736, 0.9848}, {
         0.5, -0.866}, {-0.5, 0.866}}, {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
           ArrowBox[{{1, 2}, {1, 3}, {1, 7}, {1, 14}, {2, 4}, {2, 8}, {2, 
            13}, {3, 4}, {3, 5}, {3, 17}, {4, 6}, {4, 18}, {5, 7}, {5, 10}, {
            5, 11}, {6, 8}, {6, 9}, {6, 12}, {7, 9}, {7, 16}, {8, 10}, {8, 
            15}, {9, 11}, {9, 15}, {10, 12}, {10, 16}, {11, 12}, {11, 13}, {
            12, 14}, {13, 15}, {13, 18}, {14, 16}, {14, 17}, {15, 17}, {16, 
            18}, {17, 18}}, 0.02261146496815286]}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[1, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[2, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[3, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[4, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[5, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[6, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[7, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[8, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[9, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[10, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[11, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[12, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[13, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[14, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[15, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[16, 0.02261146496815286]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[17, 0.02261146496815286]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[18, 0.02261146496815286]}}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    FormatType->TraditionalForm,
    FrameTicks->None], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 
        19}, {Null, 
         SparseArray[
         Automatic, {19, 19}, 0, {
          1, {{0, 17, 34, 36, 38, 40, 42, 44, 46, 48, 50, 52, 54, 56, 58, 60, 
            62, 64, 66, 68}, {{3}, {4}, {5}, {6}, {7}, {8}, {9}, {10}, {11}, {
            12}, {13}, {14}, {15}, {16}, {17}, {18}, {19}, {3}, {4}, {5}, {
            6}, {7}, {8}, {9}, {10}, {11}, {12}, {13}, {14}, {15}, {16}, {
            17}, {18}, {19}, {1}, {2}, {1}, {2}, {1}, {2}, {1}, {2}, {1}, {
            2}, {1}, {2}, {1}, {2}, {1}, {2}, {1}, {2}, {1}, {2}, {1}, {2}, {
            1}, {2}, {1}, {2}, {1}, {2}, {1}, {2}, {1}, {2}, {1}, {2}}}, 
           Pattern}]}, {
        VertexStyle -> {
          18 -> RGBColor[0.97, 0.606, 0.081], 6 -> 
           RGBColor[0.97, 0.606, 0.081], 15 -> RGBColor[0.97, 0.606, 0.081], 
           1 -> RGBColor[0.34398, 0.49112, 0.89936], 9 -> 
           RGBColor[0.97, 0.606, 0.081], 13 -> RGBColor[0.97, 0.606, 0.081], 
           2 -> RGBColor[0.34398, 0.49112, 0.89936], 8 -> 
           RGBColor[0.97, 0.606, 0.081], 3 -> RGBColor[0.97, 0.606, 0.081], 4 -> 
           RGBColor[0.97, 0.606, 0.081], 11 -> RGBColor[0.97, 0.606, 0.081], 
           10 -> RGBColor[0.97, 0.606, 0.081], 19 -> 
           RGBColor[0.97, 0.606, 0.081], 7 -> RGBColor[0.97, 0.606, 0.081], 
           16 -> RGBColor[0.97, 0.606, 0.081], 17 -> 
           RGBColor[0.97, 0.606, 0.081], 14 -> RGBColor[0.97, 0.606, 0.081], 
           12 -> RGBColor[0.97, 0.606, 0.081], 5 -> 
           RGBColor[0.97, 0.606, 0.081]}, VertexCoordinates -> CompressedData["
1:eJxTTMoPSmViYGAQBmIQDQNlB1MyXDYs24/Gt4fwPthD+M/2w/jumhG3rW89
hvMlJnr7GbM8hPOvfKxtCo25sx9V/zU09RfR5I+h8bfB+QwoAC6P5r5j9mjm
o8lfg/Oh7kNT/xDOh/oP3f/2APYSXVA=
          "]}]]}, 
      TagBox[GraphicsGroupBox[GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQBmIQDQNlB1MyXDYs24/Gt4fwPthD+M/2w/jumhG3rW89
hvMlJnr7GbM8hPOvfKxtCo25sx9V/zU09RfR5I+h8bfB+QwoAC6P5r5j9mjm
o8lfg/Oh7kNT/xDOh/oP3f/2APYSXVA=
         "], {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
           ArrowBox[{{1, 3}, {1, 4}, {1, 5}, {1, 6}, {1, 7}, {1, 8}, {1, 9}, {
            1, 10}, {1, 11}, {1, 12}, {1, 13}, {1, 14}, {1, 15}, {1, 16}, {1, 
            17}, {1, 18}, {1, 19}, {2, 3}, {2, 4}, {2, 5}, {2, 6}, {2, 7}, {2,
             8}, {2, 9}, {2, 10}, {2, 11}, {2, 12}, {2, 13}, {2, 14}, {2, 
            15}, {2, 16}, {2, 17}, {2, 18}, {2, 19}}, 0.017707666123233823`]}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[1, 0.017707666123233823]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[2, 0.017707666123233823]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[3, 0.017707666123233823]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[4, 0.017707666123233823]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[5, 0.017707666123233823]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[6, 0.017707666123233823]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[7, 0.017707666123233823]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[8, 0.017707666123233823]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[9, 0.017707666123233823]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[10, 0.017707666123233823]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[11, 0.017707666123233823]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[12, 0.017707666123233823]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[13, 0.017707666123233823]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[14, 0.017707666123233823]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[15, 0.017707666123233823]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[16, 0.017707666123233823]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[17, 0.017707666123233823]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[18, 0.017707666123233823]}, 
           {RGBColor[0.97, 0.606, 0.081], 
            DiskBox[19, 0.017707666123233823]}}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    FormatType->TraditionalForm,
    FrameTicks->None], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9}, {Null, 
         SparseArray[
         Automatic, {9, 9}, 0, {
          1, {{0, 1, 3, 6, 8, 12, 13, 14, 15, 16}, {{2}, {1}, {3}, {2}, {4}, {
            9}, {3}, {5}, {4}, {6}, {7}, {8}, {5}, {5}, {5}, {3}}}, 
           Pattern}]}, {
        VertexStyle -> {
          6 -> RGBColor[0.97, 0.606, 0.081], 1 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 9 -> 
           RGBColor[0.97, 0.606, 0.081], 2 -> RGBColor[0.97, 0.606, 0.081], 8 -> 
           RGBColor[0.97, 0.606, 0.081], 3 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 4 -> 
           RGBColor[0.97, 0.606, 0.081], 7 -> RGBColor[0.97, 0.606, 0.081], 5 -> 
           RGBColor[0.34398, 0.49112, 0.89936]}, 
         VertexCoordinates -> {{2, 0}, {1, 0}, {0, 0}, {0, 1}, {0, 2}, {0, 
          3}, {-1, 2}, {1, 2}, {-1, 0}}}]]}, 
      TagBox[
       GraphicsGroupBox[
        GraphicsComplexBox[{{2., 0.}, {1., 0.}, {0., 0.}, {0., 1.}, {0., 
         2.}, {0., 3.}, {-1., 2.}, {1., 2.}, {-1., 0.}}, {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
           ArrowBox[{{1, 2}, {2, 3}, {3, 4}, {3, 9}, {4, 5}, {5, 6}, {5, 7}, {
            5, 8}}, 0.030239520958083826`]}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[1, 0.030239520958083826]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[2, 0.030239520958083826]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[3, 0.030239520958083826]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[4, 0.030239520958083826]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[5, 0.030239520958083826]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[6, 0.030239520958083826]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[7, 0.030239520958083826]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[8, 0.030239520958083826]}, 
           {RGBColor[0.97, 0.606, 0.081], 
            DiskBox[9, 0.030239520958083826]}}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    FormatType->TraditionalForm,
    FrameTicks->None], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[CompressedData["
1:eJwl1GV7EAQABOCN7u4e3T0YMLobRjeMZsBgxOhuMGhMQulQGiWVNOhQQgml
u8OAdw8f3rtfcBcUHhnWPzAgIGCciOlYxCYOcYlHfBKQkEQkJglJSUZyUpCS
VKQmDWlJR3oykJFMZCYLWclGdnIQRE5ykZs85CUf+SlAQQpRmCIUpRjFKUFJ
SlGaYMpQlhDKUZ4KhFKRSlSmClWpRnVqUJNa1KYOdalHfRrQkEY0pglNCaMZ
zWlBS1rRmja0pR3t6UBHOtGZLoTTlW50pwc96UVv+hBBX/rRn0gGMJAoBjGY
IQwlmmEMZwQjGcVoxjCWcYxnAhOZxGSmMJVpTGcGM5nFB3zIR3zMbOYwl3nM
ZwELWcQnfMpnfM4XfMlilrCUZXzF1yxnBStZxWrWsJZ1rGcD3/AtG9nEZraw
lW1sZwff8T072cVu9rCXffzAj+znAAc5xGGO8BM/8wu/cpRjHOcEJznFac5w
lnP8xu+c5wIXucQf/MllrnCVa/zF31znBje5xW3ucJd73OcBD3nEY57wlGc8
5wUvecVr3vAP//If//OWmPEHEovYxCEu8YhPAhKSiMQkISnJSE4KUpKK1KQh
LelITwYykonMZCEr2chODoLISS5yk4e85CM/BShIIQpThKIUozglKEkpShNM
GcoSQjnKU4FQKlKJylShKtWoTg1qUova1KEu9ahPAxrSiMY0oSlhNKM5LWhJ
K1rThra0oz0d6EgnOtOFcLrSje70oCe96E0fIuhLP2LOO5IBDCSKQQxmCEOJ
ZhjDGcFIRjGaMYwNfP//7wBt2KJ2
        "], {Null, 
         SparseArray[Automatic, {384, 384}, 0, {1, {CompressedData["
1:eJwl02V0FgQUBuCP0d0hMGB0d4wOKUGQLilHhwxGOmqEIp0SUgIi3SWd0l0S
gtKIIiBKKzw73HOe+/s99543JCy8QY8YgUBgWPQyMYlDfBKRlBSkJh0ZyEQI
2clFXgpQmGKUpDTlqEgVqlGT2tSlPo1oSgta0ZZ2dKQL3Qkngr4MYCBDovMy
klGMYTyTmMp0ZjGH+SxkMUtZwWrWsZEtbGMne9jPQY5wnFOc5QKXuMp1bnCb
ezzgIY95yjNe8oa3BLltbOKRkCQkJxVpSU8wWchGTvKQn0IUpQShlKUClalK
DWpRh3o0pAnNaUkbwuhAZ7oR/fBe9KE/kQwmihF8xWjGMZEpfMNMZjOPBXzP
EpazirVsYDNb2cFu9vEThznGSc5wnp+5wjV+4xZ3+Z0/ecTf/MsLXvM/MYIC
gVjEJQGJSUZK0vABGclMVnKQm3wUpAjFKUUZylOJD6nOR3zMJzSgMc34lNZ8
Rns60ZXP6Ulv+vEFgxjKcL7ka8YygclMYwbfMpfvWMQPLGMla1jPJn5kO7vY
ywEOcZQTnOYcF7nML/zKTe5wnz/4iyf8w3Ne8V/Q+/LHJA7xSURSUpCadGQg
EyFkJxd5KUBhilGS0pSjIlWoRk1qU5f6NKIpLWhFW9rRkS50J5wI+jKAgQxh
GCMZxRjGM4mpTGcWc5jPQhazlBWsZh0b2cI2drKH/RzkCMc5xVkucImrXOcG
t7nHAx7ymKc84yVveEtQLP0nHglJQnJSkZb0BJOFbOQkD/kpRFFKEEpZKlCZ
qtSgFnWoR0Oa0JyWtCGMDnSmGz3oRR/6E8lgongHstK6Iw==
            "], CompressedData["
1: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
C/PBm5I35gVVviPHGPNGHGv8H36G4ww=
            "]}, Pattern}]}, {
        VertexStyle -> {
          354 -> RGBColor[0.97, 0.606, 0.081], 329 -> 
           RGBColor[0.97, 0.606, 0.081], 7 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 323 -> 
           RGBColor[0.97, 0.606, 0.081], 4 -> RGBColor[0.97, 0.606, 0.081], 
           144 -> RGBColor[0.34398, 0.49112, 0.89936], 61 -> 
           RGBColor[0.97, 0.606, 0.081], 175 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 222 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 320 -> 
           RGBColor[0.97, 0.606, 0.081], 278 -> RGBColor[0.97, 0.606, 0.081], 
           75 -> RGBColor[0.97, 0.606, 0.081], 97 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 376 -> 
           RGBColor[0.97, 0.606, 0.081], 316 -> RGBColor[0.97, 0.606, 0.081], 
           130 -> RGBColor[0.34398, 0.49112, 0.89936], 44 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 1 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 233 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 146 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 124 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 36 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 83 -> 
           RGBColor[0.97, 0.606, 0.081], 17 -> RGBColor[0.97, 0.606, 0.081], 
           151 -> RGBColor[0.34398, 0.49112, 0.89936], 336 -> 
           RGBColor[0.97, 0.606, 0.081], 33 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 128 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 380 -> 
           RGBColor[0.97, 0.606, 0.081], 263 -> RGBColor[0.97, 0.606, 0.081], 
           180 -> RGBColor[0.34398, 0.49112, 0.89936], 332 -> 
           RGBColor[0.97, 0.606, 0.081], 254 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 15 -> 
           RGBColor[0.97, 0.606, 0.081], 192 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 295 -> 
           RGBColor[0.97, 0.606, 0.081], 20 -> RGBColor[0.97, 0.606, 0.081], 
           79 -> RGBColor[0.97, 0.606, 0.081], 343 -> 
           RGBColor[0.97, 0.606, 0.081], 257 -> RGBColor[0.97, 0.606, 0.081], 
           78 -> RGBColor[0.97, 0.606, 0.081], 253 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 364 -> 
           RGBColor[0.97, 0.606, 0.081], 372 -> RGBColor[0.97, 0.606, 0.081], 
           145 -> RGBColor[0.34398, 0.49112, 0.89936], 309 -> 
           RGBColor[0.97, 0.606, 0.081], 24 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 366 -> 
           RGBColor[0.97, 0.606, 0.081], 346 -> RGBColor[0.97, 0.606, 0.081], 
           31 -> RGBColor[0.34398, 0.49112, 0.89936], 236 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 110 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 260 -> 
           RGBColor[0.97, 0.606, 0.081], 19 -> RGBColor[0.97, 0.606, 0.081], 
           181 -> RGBColor[0.34398, 0.49112, 0.89936], 88 -> 
           RGBColor[0.97, 0.606, 0.081], 324 -> RGBColor[0.97, 0.606, 0.081], 
           165 -> RGBColor[0.34398, 0.49112, 0.89936], 85 -> 
           RGBColor[0.97, 0.606, 0.081], 280 -> RGBColor[0.97, 0.606, 0.081], 
           352 -> RGBColor[0.97, 0.606, 0.081], 113 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 377 -> 
           RGBColor[0.97, 0.606, 0.081], 333 -> RGBColor[0.97, 0.606, 0.081], 
           116 -> RGBColor[0.34398, 0.49112, 0.89936], 18 -> 
           RGBColor[0.97, 0.606, 0.081], 220 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 379 -> 
           RGBColor[0.97, 0.606, 0.081], 108 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 131 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 369 -> 
           RGBColor[0.97, 0.606, 0.081], 315 -> RGBColor[0.97, 0.606, 0.081], 
           284 -> RGBColor[0.97, 0.606, 0.081], 344 -> 
           RGBColor[0.97, 0.606, 0.081], 5 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 167 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 237 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 69 -> 
           RGBColor[0.97, 0.606, 0.081], 285 -> RGBColor[0.97, 0.606, 0.081], 
           46 -> RGBColor[0.34398, 0.49112, 0.89936], 126 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 363 -> 
           RGBColor[0.97, 0.606, 0.081], 16 -> RGBColor[0.97, 0.606, 0.081], 
           23 -> RGBColor[0.34398, 0.49112, 0.89936], 92 -> 
           RGBColor[0.97, 0.606, 0.081], 185 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 141 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 276 -> 
           RGBColor[0.97, 0.606, 0.081], 82 -> RGBColor[0.97, 0.606, 0.081], 
           50 -> RGBColor[0.97, 0.606, 0.081], 29 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 242 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 227 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 133 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 337 -> 
           RGBColor[0.97, 0.606, 0.081], 76 -> RGBColor[0.97, 0.606, 0.081], 
           312 -> RGBColor[0.97, 0.606, 0.081], 184 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 248 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 367 -> 
           RGBColor[0.97, 0.606, 0.081], 335 -> RGBColor[0.97, 0.606, 0.081], 
           203 -> RGBColor[0.34398, 0.49112, 0.89936], 243 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 156 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 297 -> 
           RGBColor[0.97, 0.606, 0.081], 177 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 240 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 52 -> 
           RGBColor[0.97, 0.606, 0.081], 182 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 274 -> 
           RGBColor[0.97, 0.606, 0.081], 71 -> RGBColor[0.97, 0.606, 0.081], 
           51 -> RGBColor[0.97, 0.606, 0.081], 3 -> 
           RGBColor[0.97, 0.606, 0.081], 252 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 258 -> 
           RGBColor[0.97, 0.606, 0.081], 374 -> RGBColor[0.97, 0.606, 0.081], 
           84 -> RGBColor[0.97, 0.606, 0.081], 375 -> 
           RGBColor[0.97, 0.606, 0.081], 293 -> RGBColor[0.97, 0.606, 0.081], 
           80 -> RGBColor[0.97, 0.606, 0.081], 32 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 259 -> 
           RGBColor[0.97, 0.606, 0.081], 230 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 129 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 249 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 314 -> 
           RGBColor[0.97, 0.606, 0.081], 179 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 317 -> 
           RGBColor[0.97, 0.606, 0.081], 48 -> RGBColor[0.97, 0.606, 0.081], 
           42 -> RGBColor[0.34398, 0.49112, 0.89936], 94 -> 
           RGBColor[0.97, 0.606, 0.081], 345 -> RGBColor[0.97, 0.606, 0.081], 
           12 -> RGBColor[0.97, 0.606, 0.081], 201 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 39 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 148 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 62 -> 
           RGBColor[0.97, 0.606, 0.081], 198 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 351 -> 
           RGBColor[0.97, 0.606, 0.081], 365 -> RGBColor[0.97, 0.606, 0.081], 
           25 -> RGBColor[0.34398, 0.49112, 0.89936], 191 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 267 -> 
           RGBColor[0.97, 0.606, 0.081], 357 -> RGBColor[0.97, 0.606, 0.081], 
           371 -> RGBColor[0.97, 0.606, 0.081], 174 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 107 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 95 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 319 -> 
           RGBColor[0.97, 0.606, 0.081], 283 -> RGBColor[0.97, 0.606, 0.081], 
           28 -> RGBColor[0.34398, 0.49112, 0.89936], 217 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 93 -> 
           RGBColor[0.97, 0.606, 0.081], 225 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 77 -> 
           RGBColor[0.97, 0.606, 0.081], 300 -> RGBColor[0.97, 0.606, 0.081], 
           162 -> RGBColor[0.34398, 0.49112, 0.89936], 214 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 334 -> 
           RGBColor[0.97, 0.606, 0.081], 218 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 35 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 383 -> 
           RGBColor[0.97, 0.606, 0.081], 326 -> RGBColor[0.97, 0.606, 0.081], 
           56 -> RGBColor[0.97, 0.606, 0.081], 207 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 43 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 306 -> 
           RGBColor[0.97, 0.606, 0.081], 299 -> RGBColor[0.97, 0.606, 0.081], 
           150 -> RGBColor[0.34398, 0.49112, 0.89936], 40 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 355 -> 
           RGBColor[0.97, 0.606, 0.081], 176 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 287 -> 
           RGBColor[0.97, 0.606, 0.081], 209 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 270 -> 
           RGBColor[0.97, 0.606, 0.081], 183 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 132 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 157 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 340 -> 
           RGBColor[0.97, 0.606, 0.081], 313 -> RGBColor[0.97, 0.606, 0.081], 
           304 -> RGBColor[0.97, 0.606, 0.081], 159 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 384 -> 
           RGBColor[0.97, 0.606, 0.081], 34 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 251 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 288 -> 
           RGBColor[0.97, 0.606, 0.081], 135 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 10 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 350 -> 
           RGBColor[0.97, 0.606, 0.081], 330 -> RGBColor[0.97, 0.606, 0.081], 
           373 -> RGBColor[0.97, 0.606, 0.081], 264 -> 
           RGBColor[0.97, 0.606, 0.081], 125 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 223 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 291 -> 
           RGBColor[0.97, 0.606, 0.081], 239 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 347 -> 
           RGBColor[0.97, 0.606, 0.081], 171 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 168 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 211 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 161 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 305 -> 
           RGBColor[0.97, 0.606, 0.081], 67 -> RGBColor[0.97, 0.606, 0.081], 
           308 -> RGBColor[0.97, 0.606, 0.081], 310 -> 
           RGBColor[0.97, 0.606, 0.081], 38 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 59 -> 
           RGBColor[0.97, 0.606, 0.081], 361 -> RGBColor[0.97, 0.606, 0.081], 
           294 -> RGBColor[0.97, 0.606, 0.081], 102 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 121 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 241 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 226 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 311 -> 
           RGBColor[0.97, 0.606, 0.081], 6 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 26 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 296 -> 
           RGBColor[0.97, 0.606, 0.081], 279 -> RGBColor[0.97, 0.606, 0.081], 
           342 -> RGBColor[0.97, 0.606, 0.081], 322 -> 
           RGBColor[0.97, 0.606, 0.081], 139 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 55 -> 
           RGBColor[0.97, 0.606, 0.081], 341 -> RGBColor[0.97, 0.606, 0.081], 
           68 -> RGBColor[0.97, 0.606, 0.081], 215 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 321 -> 
           RGBColor[0.97, 0.606, 0.081], 307 -> RGBColor[0.97, 0.606, 0.081], 
           98 -> RGBColor[0.34398, 0.49112, 0.89936], 149 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 155 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 339 -> 
           RGBColor[0.97, 0.606, 0.081], 142 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 256 -> 
           RGBColor[0.97, 0.606, 0.081], 112 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 115 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 359 -> 
           RGBColor[0.97, 0.606, 0.081], 178 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 64 -> 
           RGBColor[0.97, 0.606, 0.081], 187 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 91 -> 
           RGBColor[0.97, 0.606, 0.081], 200 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 204 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 100 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 381 -> 
           RGBColor[0.97, 0.606, 0.081], 325 -> RGBColor[0.97, 0.606, 0.081], 
           138 -> RGBColor[0.34398, 0.49112, 0.89936], 219 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 378 -> 
           RGBColor[0.97, 0.606, 0.081], 338 -> RGBColor[0.97, 0.606, 0.081], 
           122 -> RGBColor[0.34398, 0.49112, 0.89936], 57 -> 
           RGBColor[0.97, 0.606, 0.081], 289 -> RGBColor[0.97, 0.606, 0.081], 
           247 -> RGBColor[0.34398, 0.49112, 0.89936], 196 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 282 -> 
           RGBColor[0.97, 0.606, 0.081], 140 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 2 -> 
           RGBColor[0.97, 0.606, 0.081], 114 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 292 -> 
           RGBColor[0.97, 0.606, 0.081], 81 -> RGBColor[0.97, 0.606, 0.081], 
           232 -> RGBColor[0.34398, 0.49112, 0.89936], 205 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 58 -> 
           RGBColor[0.97, 0.606, 0.081], 27 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 21 -> 
           RGBColor[0.97, 0.606, 0.081], 96 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 194 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 213 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 164 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 119 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 54 -> 
           RGBColor[0.97, 0.606, 0.081], 169 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 245 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 127 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 153 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 73 -> 
           RGBColor[0.97, 0.606, 0.081], 368 -> RGBColor[0.97, 0.606, 0.081], 
           362 -> RGBColor[0.97, 0.606, 0.081], 202 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 265 -> 
           RGBColor[0.97, 0.606, 0.081], 229 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 53 -> 
           RGBColor[0.97, 0.606, 0.081], 123 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 195 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 356 -> 
           RGBColor[0.97, 0.606, 0.081], 281 -> RGBColor[0.97, 0.606, 0.081], 
           193 -> RGBColor[0.34398, 0.49112, 0.89936], 318 -> 
           RGBColor[0.97, 0.606, 0.081], 327 -> RGBColor[0.97, 0.606, 0.081], 
           173 -> RGBColor[0.34398, 0.49112, 0.89936], 250 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 353 -> 
           RGBColor[0.97, 0.606, 0.081], 30 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 234 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 134 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 117 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 262 -> 
           RGBColor[0.97, 0.606, 0.081], 349 -> RGBColor[0.97, 0.606, 0.081], 
           235 -> RGBColor[0.34398, 0.49112, 0.89936], 172 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 60 -> 
           RGBColor[0.97, 0.606, 0.081], 170 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 331 -> 
           RGBColor[0.97, 0.606, 0.081], 104 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 154 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 90 -> 
           RGBColor[0.97, 0.606, 0.081], 212 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 137 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 273 -> 
           RGBColor[0.97, 0.606, 0.081], 13 -> RGBColor[0.97, 0.606, 0.081], 
           45 -> RGBColor[0.34398, 0.49112, 0.89936], 49 -> 
           RGBColor[0.97, 0.606, 0.081], 228 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 86 -> 
           RGBColor[0.97, 0.606, 0.081], 244 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 11 -> 
           RGBColor[0.97, 0.606, 0.081], 275 -> RGBColor[0.97, 0.606, 0.081], 
           152 -> RGBColor[0.34398, 0.49112, 0.89936], 290 -> 
           RGBColor[0.97, 0.606, 0.081], 298 -> RGBColor[0.97, 0.606, 0.081], 
           186 -> RGBColor[0.34398, 0.49112, 0.89936], 221 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 14 -> 
           RGBColor[0.97, 0.606, 0.081], 63 -> RGBColor[0.97, 0.606, 0.081], 
           206 -> RGBColor[0.34398, 0.49112, 0.89936], 224 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 22 -> 
           RGBColor[0.97, 0.606, 0.081], 302 -> RGBColor[0.97, 0.606, 0.081], 
           216 -> RGBColor[0.34398, 0.49112, 0.89936], 268 -> 
           RGBColor[0.97, 0.606, 0.081], 65 -> RGBColor[0.97, 0.606, 0.081], 
           272 -> RGBColor[0.97, 0.606, 0.081], 72 -> 
           RGBColor[0.97, 0.606, 0.081], 358 -> RGBColor[0.97, 0.606, 0.081], 
           208 -> RGBColor[0.34398, 0.49112, 0.89936], 210 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 286 -> 
           RGBColor[0.97, 0.606, 0.081], 189 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 89 -> 
           RGBColor[0.97, 0.606, 0.081], 70 -> RGBColor[0.97, 0.606, 0.081], 
           47 -> RGBColor[0.97, 0.606, 0.081], 103 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 190 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 303 -> 
           RGBColor[0.97, 0.606, 0.081], 370 -> RGBColor[0.97, 0.606, 0.081], 
           66 -> RGBColor[0.97, 0.606, 0.081], 197 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 74 -> 
           RGBColor[0.97, 0.606, 0.081], 136 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 99 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 158 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 271 -> 
           RGBColor[0.97, 0.606, 0.081], 109 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 160 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 382 -> 
           RGBColor[0.97, 0.606, 0.081], 106 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 301 -> 
           RGBColor[0.97, 0.606, 0.081], 266 -> RGBColor[0.97, 0.606, 0.081], 
           269 -> RGBColor[0.97, 0.606, 0.081], 163 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 166 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 111 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 188 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 120 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 8 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 238 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 246 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 87 -> 
           RGBColor[0.97, 0.606, 0.081], 9 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 143 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 101 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 277 -> 
           RGBColor[0.97, 0.606, 0.081], 360 -> RGBColor[0.97, 0.606, 0.081], 
           118 -> RGBColor[0.34398, 0.49112, 0.89936], 37 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 348 -> 
           RGBColor[0.97, 0.606, 0.081], 199 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 147 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 41 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 105 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 231 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 261 -> 
           RGBColor[0.97, 0.606, 0.081], 255 -> 
           RGBColor[0.34398, 0.49112, 0.89936], 328 -> 
           RGBColor[0.97, 0.606, 0.081]}, VertexCoordinates -> {{
            Sin[Rational[1, 384] Pi], -Cos[Rational[1, 384] Pi]}, {
            Sin[Rational[1, 128] Pi], -Cos[Rational[1, 128] Pi]}, {
            Sin[Rational[13, 384] Pi], 
            Cos[Rational[13, 384] Pi]}, {-Sin[Rational[1, 384] Pi], -
            Cos[Rational[1, 384] Pi]}, {
            Sin[Rational[5, 384] Pi], -Cos[Rational[5, 384] Pi]}, {
            Sin[Rational[55, 384] Pi], 
            Cos[Rational[55, 384] Pi]}, {
            Sin[Rational[11, 384] Pi], 
            Cos[Rational[11, 384] Pi]}, {
            Sin[Rational[5, 128] Pi], 
            Cos[Rational[5, 128] Pi]}, {-Cos[Rational[49, 384] Pi], -
            Sin[Rational[49, 384] Pi]}, {-Sin[Rational[1, 128] Pi], -
            Cos[Rational[1, 128] Pi]}, {
            Sin[Rational[7, 384] Pi], -Cos[Rational[7, 384] Pi]}, {
            Sin[Rational[53, 384] Pi], 
            Cos[Rational[53, 384] Pi]}, {-Cos[Rational[19, 128] Pi], 
            Sin[Rational[19, 128] Pi]}, {
            Sin[Rational[19, 128] Pi], 
            Cos[Rational[19, 128] Pi]}, {
            Sin[Rational[17, 384] Pi], 
            Cos[Rational[17, 384] Pi]}, {
            Sin[Rational[3, 128] Pi], 
            Cos[Rational[3, 128] Pi]}, {-Sin[Rational[5, 384] Pi], -
            Cos[Rational[5, 384] Pi]}, {-Cos[Rational[47, 384] Pi], -
            Sin[Rational[47, 384] Pi]}, {-Sin[Rational[83, 384] Pi], 
            Cos[Rational[83, 384] Pi]}, {-Sin[Rational[19, 384] Pi], 
            Cos[Rational[19, 384] Pi]}, {
            Sin[Rational[95, 384] Pi], -Cos[Rational[95, 384] Pi]}, {-
            Cos[Rational[17, 128] Pi], -Sin[Rational[17, 128] Pi]}, {-
            Sin[Rational[37, 384] Pi], 
            Cos[Rational[37, 384] Pi]}, {
            Cos[Rational[7, 384] Pi], -Sin[Rational[7, 384] Pi]}, {-
            Cos[Rational[43, 384] Pi], 
            Sin[Rational[43, 384] Pi]}, {-Cos[Rational[55, 384] Pi], 
            Sin[Rational[55, 384] Pi]}, {
            Cos[Rational[37, 384] Pi], 
            Sin[Rational[37, 384] Pi]}, {
            Cos[Rational[19, 128] Pi], 
            Sin[Rational[19, 128] Pi]}, {
            Cos[Rational[79, 384] Pi], -Sin[Rational[79, 384] Pi]}, {
            Cos[Rational[5, 128] Pi], -Sin[Rational[5, 128] Pi]}, {-
            Sin[Rational[7, 128] Pi], 
            Cos[Rational[7, 128] Pi]}, {-Sin[Rational[27, 128] Pi], 
            Cos[Rational[27, 128] Pi]}, {-Sin[Rational[29, 384] Pi], 
            Cos[Rational[29, 384] Pi]}, {
            Cos[Rational[95, 384] Pi], -Sin[Rational[95, 384] Pi]}, {
            Sin[Rational[17, 128] Pi], 
            Cos[Rational[17, 128] Pi]}, {
            Sin[Rational[3, 128] Pi], -Cos[Rational[3, 128] Pi]}, {
            Sin[Rational[59, 384] Pi], 
            Cos[Rational[59, 384] Pi]}, {-Cos[Rational[59, 384] Pi], 
            Sin[Rational[59, 384] Pi]}, {-Sin[Rational[85, 384] Pi], 
            Cos[Rational[85, 384] Pi]}, {-Sin[Rational[17, 384] Pi], 
            Cos[Rational[17, 384] Pi]}, {
            Sin[Rational[31, 128] Pi], -Cos[Rational[31, 128] Pi]}, {-
            Cos[Rational[53, 384] Pi], -Sin[Rational[53, 384] Pi]}, {
            Sin[Rational[7, 384] Pi], 
            Cos[Rational[7, 384] Pi]}, {
            Sin[Rational[19, 384] Pi], 
            Cos[Rational[19, 384] Pi]}, {-Cos[Rational[15, 128] Pi], -
            Sin[Rational[15, 128] Pi]}, {-Sin[Rational[7, 384] Pi], -
            Cos[Rational[7, 384] Pi]}, {
            Cos[Rational[5, 384] Pi], -Sin[Rational[5, 384] Pi]}, {-
            Sin[Rational[35, 384] Pi], 
            Cos[Rational[35, 384] Pi]}, {
            Cos[Rational[37, 384] Pi], -Sin[Rational[37, 384] Pi]}, {-
            Cos[Rational[41, 384] Pi], 
            Sin[Rational[41, 384] Pi]}, {
            Cos[Rational[59, 384] Pi], 
            Sin[Rational[59, 384] Pi]}, {
            Cos[Rational[35, 384] Pi], 
            Sin[Rational[35, 384] Pi]}, {
            Cos[Rational[17, 384] Pi], -Sin[Rational[17, 384] Pi]}, {
            Cos[Rational[77, 384] Pi], -Sin[Rational[77, 384] Pi]}, {
            Cos[Rational[41, 384] Pi], -Sin[Rational[41, 384] Pi]}, {
            Cos[Rational[73, 384] Pi], -Sin[Rational[73, 384] Pi]}, {
            Cos[Rational[1, 384] Pi], -Sin[Rational[1, 384] Pi]}, {-
            Sin[Rational[31, 384] Pi], 
            Cos[Rational[31, 384] Pi]}, {
            Sin[Rational[79, 384] Pi], -Cos[Rational[79, 384] Pi]}, {
            Sin[Rational[19, 384] Pi], -Cos[Rational[19, 384] Pi]}, {
            Cos[Rational[49, 384] Pi], -Sin[Rational[49, 384] Pi]}, {-
            Cos[Rational[23, 128] Pi], 
            Sin[Rational[23, 128] Pi]}, {
            Sin[Rational[17, 128] Pi], -Cos[Rational[17, 128] Pi]}, {-
            Sin[Rational[47, 384] Pi], 
            Cos[Rational[47, 384] Pi]}, {
            Cos[Rational[67, 384] Pi], 
            Sin[Rational[67, 384] Pi]}, {
            Cos[Rational[9, 128] Pi], 
            Sin[Rational[9, 128] Pi]}, {-Sin[Rational[21, 128] Pi], 
            Cos[Rational[21, 128] Pi]}, {
            Sin[Rational[29, 384] Pi], 
            Cos[Rational[29, 384] Pi]}, {
            Sin[Rational[91, 384] Pi], -Cos[Rational[91, 384] Pi]}, {-
            Cos[Rational[55, 384] Pi], -Sin[Rational[55, 384] Pi]}, {-
            Cos[Rational[53, 384] Pi], 
            Sin[Rational[53, 384] Pi]}, {-Cos[Rational[15, 128] Pi], 
            Sin[Rational[15, 128] Pi]}, {
            Cos[Rational[3, 128] Pi], -Sin[Rational[3, 128] Pi]}, {-
            Sin[Rational[13, 128] Pi], 
            Cos[Rational[13, 128] Pi]}, {
            Cos[Rational[55, 384] Pi], 
            Sin[Rational[55, 384] Pi]}, {
            Cos[Rational[13, 128] Pi], 
            Sin[Rational[13, 128] Pi]}, {
            Cos[Rational[13, 384] Pi], -Sin[Rational[13, 384] Pi]}, {
            Cos[Rational[27, 128] Pi], -Sin[Rational[27, 128] Pi]}, {-
            Sin[Rational[23, 384] Pi], 
            Cos[Rational[23, 384] Pi]}, {-Sin[Rational[79, 384] Pi], 
            Cos[Rational[79, 384] Pi]}, {-Sin[Rational[9, 128] Pi], 
            Cos[Rational[9, 128] Pi]}, {
            Cos[Rational[31, 128] Pi], -Sin[Rational[31, 128] Pi]}, {
            Sin[Rational[11, 384] Pi], -Cos[Rational[11, 384] Pi]}, {
            Sin[Rational[49, 384] Pi], 
            Cos[Rational[49, 384] Pi]}, {-Cos[Rational[61, 384] Pi], 
            Sin[Rational[61, 384] Pi]}, {
            Sin[Rational[61, 384] Pi], 
            Cos[Rational[61, 384] Pi]}, {-Sin[Rational[5, 128] Pi], 
            Cos[Rational[5, 128] Pi]}, {-Sin[Rational[29, 128] Pi], 
            Cos[Rational[29, 128] Pi]}, {
            Cos[Rational[25, 128] Pi], 
            Sin[Rational[25, 128] Pi]}, {-Sin[Rational[19, 128] Pi], -
            Cos[Rational[19, 128] Pi]}, {
            Sin[Rational[5, 384] Pi], 
            Cos[Rational[5, 384] Pi]}, {
            Sin[Rational[7, 128] Pi], 
            Cos[Rational[7, 128] Pi]}, {-Cos[Rational[43, 384] Pi], -
            Sin[Rational[43, 384] Pi]}, {-Sin[Rational[3, 128] Pi], -
            Cos[Rational[3, 128] Pi]}, {-Sin[Rational[11, 128] Pi], 
            Cos[Rational[11, 128] Pi]}, {
            Cos[Rational[1, 128] Pi], -Sin[Rational[1, 128] Pi]}, {
            Cos[Rational[25, 128] Pi], -Sin[Rational[25, 128] Pi]}, {
            Cos[Rational[13, 128] Pi], -Sin[Rational[13, 128] Pi]}, {-
            Cos[Rational[47, 384] Pi], 
            Sin[Rational[47, 384] Pi]}, {-Cos[Rational[17, 128] Pi], 
            Sin[Rational[17, 128] Pi]}, {
            Cos[Rational[83, 384] Pi], -Sin[Rational[83, 384] Pi]}, {
            Cos[Rational[11, 384] Pi], -Sin[Rational[11, 384] Pi]}, {
            Cos[Rational[91, 384] Pi], -Sin[Rational[91, 384] Pi]}, {-
            Sin[Rational[25, 384] Pi], 
            Cos[Rational[25, 384] Pi]}, {-Sin[Rational[41, 384] Pi], 
            Cos[Rational[41, 384] Pi]}, {-Sin[Rational[13, 384] Pi], 
            Cos[Rational[13, 384] Pi]}, {-Sin[Rational[55, 384] Pi], -
            Cos[Rational[55, 384] Pi]}, {
            Cos[Rational[73, 384] Pi], 
            Sin[Rational[73, 384] Pi]}, {-Sin[Rational[77, 384] Pi], 
            Cos[Rational[77, 384] Pi]}, {
            Sin[Rational[13, 384] Pi], -Cos[Rational[13, 384] Pi]}, {
            Sin[Rational[21, 128] Pi], 
            Cos[Rational[21, 128] Pi]}, {-Cos[Rational[21, 128] Pi], 
            Sin[Rational[21, 128] Pi]}, {
            Cos[Rational[41, 384] Pi], 
            Sin[Rational[41, 384] Pi]}, {
            Cos[Rational[53, 384] Pi], 
            Sin[Rational[53, 384] Pi]}, {
            Sin[Rational[23, 384] Pi], 
            Cos[Rational[23, 384] Pi]}, {
            Sin[Rational[1, 128] Pi], 
            Cos[Rational[1, 128] Pi]}, {
            Sin[Rational[47, 384] Pi], 
            Cos[Rational[47, 384] Pi]}, {-Sin[Rational[89, 384] Pi], 
            Cos[Rational[89, 384] Pi]}, {
            Cos[Rational[77, 384] Pi], 
            Sin[Rational[77, 384] Pi]}, {-Sin[Rational[59, 384] Pi], -
            Cos[Rational[59, 384] Pi]}, {-Sin[Rational[11, 384] Pi], -
            Cos[Rational[11, 384] Pi]}, {-Cos[Rational[41, 384] Pi], -
            Sin[Rational[41, 384] Pi]}, {
            Sin[Rational[17, 384] Pi], -Cos[Rational[17, 384] Pi]}, {
            Sin[Rational[77, 384] Pi], -Cos[Rational[77, 384] Pi]}, {-
            Cos[Rational[67, 384] Pi], 
            Sin[Rational[67, 384] Pi]}, {
            Cos[Rational[17, 128] Pi], -Sin[Rational[17, 128] Pi]}, {-
            Sin[Rational[15, 128] Pi], 
            Cos[Rational[15, 128] Pi]}, {
            Sin[Rational[53, 384] Pi], -Cos[Rational[53, 384] Pi]}, {
            Cos[Rational[25, 384] Pi], 
            Sin[Rational[25, 384] Pi]}, {
            Cos[Rational[23, 128] Pi], 
            Sin[Rational[23, 128] Pi]}, {
            Sin[Rational[9, 128] Pi], 
            Cos[Rational[9, 128] Pi]}, {-Sin[Rational[61, 384] Pi], 
            Cos[Rational[61, 384] Pi]}, {
            Cos[Rational[15, 128] Pi], 
            Sin[Rational[15, 128] Pi]}, {
            Cos[Rational[49, 384] Pi], 
            Sin[Rational[49, 384] Pi]}, {
            Sin[Rational[35, 384] Pi], 
            Cos[Rational[35, 384] Pi]}, {-Sin[Rational[23, 128] Pi], 
            Cos[Rational[23, 128] Pi]}, {-Cos[Rational[13, 128] Pi], 
            Sin[Rational[13, 128] Pi]}, {
            Cos[Rational[35, 384] Pi], -Sin[Rational[35, 384] Pi]}, {
            Cos[Rational[11, 128] Pi], 
            Sin[Rational[11, 128] Pi]}, {
            Cos[Rational[61, 384] Pi], 
            Sin[Rational[61, 384] Pi]}, {-Cos[Rational[23, 384] Pi], 
            Sin[Rational[23, 384] Pi]}, {
            Cos[Rational[19, 384] Pi], -Sin[Rational[19, 384] Pi]}, {
            Cos[Rational[71, 384] Pi], -Sin[Rational[71, 384] Pi]}, {
            Cos[Rational[43, 384] Pi], -Sin[Rational[43, 384] Pi]}, {
            Sin[Rational[25, 384] Pi], -Cos[Rational[25, 384] Pi]}, {
            Cos[Rational[1, 384] Pi], 
            Sin[Rational[1, 384] Pi]}, {-Cos[Rational[71, 384] Pi], 
            Sin[Rational[71, 384] Pi]}, {
            Cos[Rational[47, 384] Pi], -Sin[Rational[47, 384] Pi]}, {
            Sin[Rational[7, 128] Pi], -Cos[Rational[7, 128] Pi]}, {
            Sin[Rational[27, 128] Pi], -Cos[Rational[27, 128] Pi]}, {
            Sin[Rational[31, 384] Pi], 
            Cos[Rational[31, 384] Pi]}, {-Sin[Rational[65, 384] Pi], 
            Cos[Rational[65, 384] Pi]}, {-Cos[Rational[19, 128] Pi], -
            Sin[Rational[19, 128] Pi]}, {
            Sin[Rational[89, 384] Pi], -Cos[Rational[89, 384] Pi]}, {-
            Sin[Rational[49, 384] Pi], 
            Cos[Rational[49, 384] Pi]}, {
            Sin[Rational[49, 384] Pi], -Cos[Rational[49, 384] Pi]}, {
            Cos[Rational[29, 384] Pi], 
            Sin[Rational[29, 384] Pi]}, {
            Cos[Rational[65, 384] Pi], 
            Sin[Rational[65, 384] Pi]}, {
            Cos[Rational[29, 128] Pi], -Sin[Rational[29, 128] Pi]}, {-
            Sin[Rational[31, 128] Pi], 
            Cos[Rational[31, 128] Pi]}, {
            Sin[Rational[65, 384] Pi], -Cos[Rational[65, 384] Pi]}, {-
            Sin[Rational[21, 128] Pi], -Cos[Rational[21, 128] Pi]}, {
            Sin[Rational[85, 384] Pi], -Cos[Rational[85, 384] Pi]}, {-
            Sin[Rational[5, 128] Pi], -Cos[Rational[5, 128] Pi]}, {-
            Cos[Rational[37, 384] Pi], -Sin[Rational[37, 384] Pi]}, {
            Sin[Rational[13, 128] Pi], 
            Cos[Rational[13, 128] Pi]}, {-Sin[Rational[73, 384] Pi], 
            Cos[Rational[73, 384] Pi]}, {
            Cos[Rational[85, 384] Pi], 
            Sin[Rational[85, 384] Pi]}, {
            Sin[Rational[67, 384] Pi], 
            Cos[Rational[67, 384] Pi]}, {-Cos[Rational[1, 128] Pi], 
            Sin[Rational[1, 128] Pi]}, {-Sin[Rational[3, 128] Pi], 
            Cos[Rational[3, 128] Pi]}, {-Sin[Rational[17, 128] Pi], -
            Cos[Rational[17, 128] Pi]}, {-Cos[Rational[27, 128] Pi], -
            Sin[Rational[27, 128] Pi]}, {-Cos[Rational[11, 384] Pi], 
            Sin[Rational[11, 384] Pi]}, {-Sin[Rational[1, 384] Pi], 
            Cos[Rational[1, 384] Pi]}, {-Cos[Rational[19, 384] Pi], 
            Sin[Rational[19, 384] Pi]}, {-Cos[Rational[89, 384] Pi], -
            Sin[Rational[89, 384] Pi]}, {-Cos[Rational[9, 128] Pi], 
            Sin[Rational[9, 128] Pi]}, {
            Cos[Rational[23, 384] Pi], -Sin[Rational[23, 384] Pi]}, {-
            Cos[Rational[35, 384] Pi], 
            Sin[Rational[35, 384] Pi]}, {
            Cos[Rational[31, 384] Pi], -Sin[Rational[31, 384] Pi]}, {
            Cos[Rational[67, 384] Pi], -Sin[Rational[67, 384] Pi]}, {
            Cos[Rational[5, 384] Pi], 
            Sin[Rational[5, 384] Pi]}, {
            Cos[Rational[89, 384] Pi], 
            Sin[Rational[89, 384] Pi]}, {
            Sin[Rational[71, 384] Pi], 
            Cos[Rational[71, 384] Pi]}, {-Cos[Rational[7, 384] Pi], 
            Sin[Rational[7, 384] Pi]}, {-Sin[Rational[5, 384] Pi], 
            Cos[Rational[5, 384] Pi]}, {
            Sin[Rational[29, 384] Pi], -Cos[Rational[29, 384] Pi]}, {-
            Cos[Rational[85, 384] Pi], -Sin[Rational[85, 384] Pi]}, {
            Sin[Rational[43, 384] Pi], 
            Cos[Rational[43, 384] Pi]}, {-Cos[Rational[3, 128] Pi], -
            Sin[Rational[3, 128] Pi]}, {
            Cos[Rational[27, 128] Pi], 
            Sin[Rational[27, 128] Pi]}, {-Cos[Rational[77, 384] Pi], -
            Sin[Rational[77, 384] Pi]}, {-Cos[Rational[5, 128] Pi], 
            Sin[Rational[5, 128] Pi]}, {-Cos[Rational[31, 128] Pi], -
            Sin[Rational[31, 128] Pi]}, {
            Cos[Rational[55, 384] Pi], -Sin[Rational[55, 384] Pi]}, {
            Sin[Rational[73, 384] Pi], -Cos[Rational[73, 384] Pi]}, {
            Cos[Rational[7, 128] Pi], 
            Sin[Rational[7, 128] Pi]}, {
            Sin[Rational[19, 128] Pi], -Cos[Rational[19, 128] Pi]}, {-
            Sin[Rational[23, 384] Pi], -Cos[Rational[23, 384] Pi]}, {-
            Sin[Rational[19, 128] Pi], 
            Cos[Rational[19, 128] Pi]}, {-Cos[Rational[25, 128] Pi], 
            Sin[Rational[25, 128] Pi]}, {
            Sin[Rational[23, 128] Pi], -Cos[Rational[23, 128] Pi]}, {-
            Sin[Rational[67, 384] Pi], -Cos[Rational[67, 384] Pi]}, {-
            Sin[Rational[71, 384] Pi], -Cos[Rational[71, 384] Pi]}, {-
            Cos[Rational[95, 384] Pi], 
            Sin[Rational[95, 384] Pi]}, {
            Sin[Rational[61, 384] Pi], -Cos[Rational[61, 384] Pi]}, {-
            Cos[Rational[61, 384] Pi], -Sin[Rational[61, 384] Pi]}, {
            Cos[Rational[17, 384] Pi], 
            Sin[Rational[17, 384] Pi]}, {-Sin[Rational[53, 384] Pi], 
            Cos[Rational[53, 384] Pi]}, {
            Sin[Rational[15, 128] Pi], -Cos[Rational[15, 128] Pi]}, {-
            Sin[Rational[19, 384] Pi], -Cos[Rational[19, 384] Pi]}, {-
            Cos[Rational[11, 128] Pi], -Sin[Rational[11, 128] Pi]}, {-
            Cos[Rational[31, 384] Pi], 
            Sin[Rational[31, 384] Pi]}, {
            Cos[Rational[9, 128] Pi], -Sin[Rational[9, 128] Pi]}, {
            Cos[Rational[31, 128] Pi], 
            Sin[Rational[31, 128] Pi]}, {-Cos[Rational[25, 384] Pi], -
            Sin[Rational[25, 384] Pi]}, {-Cos[Rational[79, 384] Pi], 
            Sin[Rational[79, 384] Pi]}, {
            Sin[Rational[25, 128] Pi], 
            Cos[Rational[25, 128] Pi]}, {
            Sin[Rational[95, 384] Pi], 
            Cos[Rational[95, 384] Pi]}, {-Cos[Rational[7, 128] Pi], -
            Sin[Rational[7, 128] Pi]}, {
            Sin[Rational[11, 128] Pi], -Cos[Rational[11, 128] Pi]}, {-
            Cos[Rational[29, 384] Pi], -Sin[Rational[29, 384] Pi]}, {
            Cos[Rational[59, 384] Pi], -Sin[Rational[59, 384] Pi]}, {-
            Cos[Rational[13, 384] Pi], -Sin[Rational[13, 384] Pi]}, {-
            Cos[Rational[23, 128] Pi], -Sin[Rational[23, 128] Pi]}, {-
            Cos[Rational[73, 384] Pi], -Sin[Rational[73, 384] Pi]}, {-
            Sin[Rational[47, 384] Pi], -Cos[Rational[47, 384] Pi]}, {-
            Sin[Rational[9, 128] Pi], -Cos[Rational[9, 128] Pi]}, {-
            Cos[Rational[1, 384] Pi], -Sin[Rational[1, 384] Pi]}, {-
            Cos[Rational[5, 384] Pi], -Sin[Rational[5, 384] Pi]}, {-
            Sin[Rational[13, 128] Pi], -Cos[Rational[13, 128] Pi]}, {-
            Sin[Rational[35, 384] Pi], -Cos[Rational[35, 384] Pi]}, {-
            Sin[Rational[91, 384] Pi], -Cos[Rational[91, 384] Pi]}, {-
            Sin[Rational[95, 384] Pi], -Cos[Rational[95, 384] Pi]}, {-
            Sin[Rational[29, 128] Pi], -Cos[Rational[29, 128] Pi]}, {
            Sin[Rational[83, 384] Pi], 
            Cos[Rational[83, 384] Pi]}, {-Sin[Rational[43, 384] Pi], -
            Cos[Rational[43, 384] Pi]}, {-Sin[Rational[31, 384] Pi], -
            Cos[Rational[31, 384] Pi]}, {
            Cos[Rational[21, 128] Pi], -Sin[Rational[21, 128] Pi]}, {
            Cos[Rational[3, 128] Pi], 
            Sin[Rational[3, 128] Pi]}, {-Sin[Rational[83, 384] Pi], -
            Cos[Rational[83, 384] Pi]}, {
            Sin[Rational[79, 384] Pi], 
            Cos[Rational[79, 384] Pi]}, {-Cos[Rational[83, 384] Pi], 
            Sin[Rational[83, 384] Pi]}, {-Sin[Rational[25, 128] Pi], -
            Cos[Rational[25, 128] Pi]}, {-Cos[Rational[17, 384] Pi], -
            Sin[Rational[17, 384] Pi]}, {-Cos[Rational[91, 384] Pi], 
            Sin[Rational[91, 384] Pi]}, {
            Cos[Rational[13, 384] Pi], 
            Sin[Rational[13, 384] Pi]}, {-Cos[Rational[65, 384] Pi], -
            Sin[Rational[65, 384] Pi]}, {
            Sin[Rational[91, 384] Pi], 
            Cos[Rational[91, 384] Pi]}, {
            Sin[Rational[41, 384] Pi], -Cos[Rational[41, 384] Pi]}, {
            Sin[Rational[37, 384] Pi], -Cos[Rational[37, 384] Pi]}, {
            Sin[Rational[29, 128] Pi], 
            Cos[Rational[29, 128] Pi]}, {-Sin[Rational[79, 384] Pi], -
            Cos[Rational[79, 384] Pi]}, {-Cos[Rational[29, 128] Pi], 
            Sin[Rational[29, 128] Pi]}, {-Cos[Rational[89, 384] Pi], 
            Sin[Rational[89, 384] Pi]}, {-Sin[Rational[27, 128] Pi], -
            Cos[Rational[27, 128] Pi]}, {-Sin[Rational[77, 384] Pi], -
            Cos[Rational[77, 384] Pi]}, {-Cos[Rational[85, 384] Pi], 
            Sin[Rational[85, 384] Pi]}, {
            Sin[Rational[13, 128] Pi], -Cos[Rational[13, 128] Pi]}, {
            Sin[Rational[89, 384] Pi], 
            Cos[Rational[89, 384] Pi]}, {-Cos[Rational[5, 128] Pi], -
            Sin[Rational[5, 128] Pi]}, {
            Cos[Rational[61, 384] Pi], -Sin[Rational[61, 384] Pi]}, {
            Cos[Rational[11, 384] Pi], 
            Sin[Rational[11, 384] Pi]}, {-Cos[Rational[67, 384] Pi], -
            Sin[Rational[67, 384] Pi]}, {-Sin[Rational[11, 128] Pi], -
            Cos[Rational[11, 128] Pi]}, {-Sin[Rational[41, 384] Pi], -
            Cos[Rational[41, 384] Pi]}, {
            Sin[Rational[85, 384] Pi], 
            Cos[Rational[85, 384] Pi]}, {-Sin[Rational[89, 384] Pi], -
            Cos[Rational[89, 384] Pi]}, {-Sin[Rational[29, 384] Pi], -
            Cos[Rational[29, 384] Pi]}, {-Sin[Rational[15, 128] Pi], -
            Cos[Rational[15, 128] Pi]}, {
            Sin[Rational[27, 128] Pi], 
            Cos[Rational[27, 128] Pi]}, {-Sin[Rational[85, 384] Pi], -
            Cos[Rational[85, 384] Pi]}, {
            Sin[Rational[77, 384] Pi], 
            Cos[Rational[77, 384] Pi]}, {-Cos[Rational[77, 384] Pi], 
            Sin[Rational[77, 384] Pi]}, {-Sin[Rational[73, 384] Pi], -
            Cos[Rational[73, 384] Pi]}, {-Cos[Rational[27, 128] Pi], 
            Sin[Rational[27, 128] Pi]}, {-Cos[Rational[19, 384] Pi], -
            Sin[Rational[19, 384] Pi]}, {-Cos[Rational[31, 128] Pi], 
            Sin[Rational[31, 128] Pi]}, {
            Cos[Rational[5, 128] Pi], 
            Sin[Rational[5, 128] Pi]}, {-Cos[Rational[21, 128] Pi], -
            Sin[Rational[21, 128] Pi]}, {
            Sin[Rational[43, 384] Pi], -Cos[Rational[43, 384] Pi]}, {
            Sin[Rational[31, 128] Pi], 
            Cos[Rational[31, 128] Pi]}, {-Cos[Rational[31, 384] Pi], -
            Sin[Rational[31, 384] Pi]}, {
            Sin[Rational[35, 384] Pi], -Cos[Rational[35, 384] Pi]}, {-
            Cos[Rational[71, 384] Pi], -Sin[Rational[71, 384] Pi]}, {
            Cos[Rational[19, 128] Pi], -Sin[Rational[19, 128] Pi]}, {-
            Sin[Rational[31, 128] Pi], -Cos[Rational[31, 128] Pi]}, {-
            Sin[Rational[37, 384] Pi], -Cos[Rational[37, 384] Pi]}, {-
            Cos[Rational[1, 128] Pi], -Sin[Rational[1, 128] Pi]}, {-
            Sin[Rational[25, 384] Pi], -Cos[Rational[25, 384] Pi]}, {
            Sin[Rational[71, 384] Pi], -Cos[Rational[71, 384] Pi]}, {-
            Sin[Rational[23, 128] Pi], -Cos[Rational[23, 128] Pi]}, {
            Sin[Rational[59, 384] Pi], -Cos[Rational[59, 384] Pi]}, {
            Cos[Rational[19, 384] Pi], 
            Sin[Rational[19, 384] Pi]}, {-Sin[Rational[55, 384] Pi], 
            Cos[Rational[55, 384] Pi]}, {-Sin[Rational[7, 128] Pi], -
            Cos[Rational[7, 128] Pi]}, {
            Sin[Rational[73, 384] Pi], 
            Cos[Rational[73, 384] Pi]}, {
            Cos[Rational[91, 384] Pi], 
            Sin[Rational[91, 384] Pi]}, {-Cos[Rational[23, 384] Pi], -
            Sin[Rational[23, 384] Pi]}, {
            Cos[Rational[95, 384] Pi], 
            Sin[Rational[95, 384] Pi]}, {-Cos[Rational[9, 128] Pi], -
            Sin[Rational[9, 128] Pi]}, {
            Sin[Rational[31, 384] Pi], -Cos[Rational[31, 384] Pi]}, {
            Cos[Rational[25, 384] Pi], -Sin[Rational[25, 384] Pi]}, {-
            Cos[Rational[29, 384] Pi], 
            Sin[Rational[29, 384] Pi]}, {
            Cos[Rational[29, 384] Pi], -Sin[Rational[29, 384] Pi]}, {-
            Cos[Rational[11, 128] Pi], 
            Sin[Rational[11, 128] Pi]}, {
            Cos[Rational[7, 384] Pi], 
            Sin[Rational[7, 384] Pi]}, {
            Cos[Rational[65, 384] Pi], -Sin[Rational[65, 384] Pi]}, {-
            Cos[Rational[11, 384] Pi], -Sin[Rational[11, 384] Pi]}, {
            Sin[Rational[41, 384] Pi], 
            Cos[Rational[41, 384] Pi]}, {-Cos[Rational[25, 128] Pi], -
            Sin[Rational[25, 128] Pi]}, {
            Cos[Rational[83, 384] Pi], 
            Sin[Rational[83, 384] Pi]}, {-Cos[Rational[95, 384] Pi], -
            Sin[Rational[95, 384] Pi]}, {-Cos[Rational[13, 384] Pi], 
            Sin[Rational[13, 384] Pi]}, {-Cos[Rational[91, 384] Pi], -
            Sin[Rational[91, 384] Pi]}, {-Cos[Rational[17, 384] Pi], 
            Sin[Rational[17, 384] Pi]}, {-Cos[Rational[7, 384] Pi], -
            Sin[Rational[7, 384] Pi]}, {-Cos[Rational[1, 384] Pi], 
            Sin[Rational[1, 384] Pi]}, {-Cos[Rational[79, 384] Pi], -
            Sin[Rational[79, 384] Pi]}, {-Sin[Rational[49, 384] Pi], -
            Cos[Rational[49, 384] Pi]}, {
            Sin[Rational[67, 384] Pi], -Cos[Rational[67, 384] Pi]}, {-
            Cos[Rational[73, 384] Pi], 
            Sin[Rational[73, 384] Pi]}, {
            Sin[Rational[83, 384] Pi], -Cos[Rational[83, 384] Pi]}, {-
            Sin[Rational[65, 384] Pi], -Cos[Rational[65, 384] Pi]}, {
            Sin[Rational[21, 128] Pi], -Cos[Rational[21, 128] Pi]}, {-
            Sin[Rational[95, 384] Pi], 
            Cos[Rational[95, 384] Pi]}, {
            Sin[Rational[29, 128] Pi], -Cos[Rational[29, 128] Pi]}, {-
            Cos[Rational[59, 384] Pi], -Sin[Rational[59, 384] Pi]}, {
            Sin[Rational[47, 384] Pi], -Cos[Rational[47, 384] Pi]}, {-
            Sin[Rational[17, 128] Pi], 
            Cos[Rational[17, 128] Pi]}, {-Cos[Rational[35, 384] Pi], -
            Sin[Rational[35, 384] Pi]}, {-Sin[Rational[17, 384] Pi], -
            Cos[Rational[17, 384] Pi]}, {-Sin[Rational[71, 384] Pi], 
            Cos[Rational[71, 384] Pi]}, {
            Sin[Rational[37, 384] Pi], 
            Cos[Rational[37, 384] Pi]}, {
            Sin[Rational[23, 128] Pi], 
            Cos[Rational[23, 128] Pi]}, {
            Cos[Rational[29, 128] Pi], 
            Sin[Rational[29, 128] Pi]}, {-Sin[Rational[1, 128] Pi], 
            Cos[Rational[1, 128] Pi]}, {-Cos[Rational[3, 128] Pi], 
            Sin[Rational[3, 128] Pi]}, {-Cos[Rational[29, 128] Pi], -
            Sin[Rational[29, 128] Pi]}, {-Cos[Rational[7, 128] Pi], 
            Sin[Rational[7, 128] Pi]}, {-Sin[Rational[7, 384] Pi], 
            Cos[Rational[7, 384] Pi]}, {-Cos[Rational[5, 384] Pi], 
            Sin[Rational[5, 384] Pi]}, {-Cos[Rational[83, 384] Pi], -
            Sin[Rational[83, 384] Pi]}, {
            Sin[Rational[9, 128] Pi], -Cos[Rational[9, 128] Pi]}, {
            Sin[Rational[25, 128] Pi], -Cos[Rational[25, 128] Pi]}, {
            Cos[Rational[53, 384] Pi], -Sin[Rational[53, 384] Pi]}, {
            Sin[Rational[55, 384] Pi], -Cos[Rational[55, 384] Pi]}, {
            Cos[Rational[23, 384] Pi], 
            Sin[Rational[23, 384] Pi]}, {-Sin[Rational[59, 384] Pi], 
            Cos[Rational[59, 384] Pi]}, {
            Cos[Rational[47, 384] Pi], 
            Sin[Rational[47, 384] Pi]}, {-Sin[Rational[67, 384] Pi], 
            Cos[Rational[67, 384] Pi]}, {
            Sin[Rational[11, 128] Pi], 
            Cos[Rational[11, 128] Pi]}, {
            Cos[Rational[11, 128] Pi], -Sin[Rational[11, 128] Pi]}, {-
            Cos[Rational[37, 384] Pi], 
            Sin[Rational[37, 384] Pi]}, {
            Cos[Rational[15, 128] Pi], -Sin[Rational[15, 128] Pi]}, {
            Cos[Rational[23, 128] Pi], -Sin[Rational[23, 128] Pi]}, {
            Cos[Rational[1, 128] Pi], 
            Sin[Rational[1, 128] Pi]}, {
            Sin[Rational[23, 384] Pi], -Cos[Rational[23, 384] Pi]}, {
            Cos[Rational[21, 128] Pi], 
            Sin[Rational[21, 128] Pi]}, {
            Cos[Rational[31, 384] Pi], 
            Sin[Rational[31, 384] Pi]}, {
            Cos[Rational[7, 128] Pi], -Sin[Rational[7, 128] Pi]}, {-
            Cos[Rational[25, 384] Pi], 
            Sin[Rational[25, 384] Pi]}, {-Sin[Rational[91, 384] Pi], 
            Cos[Rational[91, 384] Pi]}, {
            Sin[Rational[15, 128] Pi], 
            Cos[Rational[15, 128] Pi]}, {-Sin[Rational[61, 384] Pi], -
            Cos[Rational[61, 384] Pi]}, {
            Cos[Rational[79, 384] Pi], 
            Sin[Rational[79, 384] Pi]}, {-Cos[Rational[13, 128] Pi], -
            Sin[Rational[13, 128] Pi]}, {-Sin[Rational[13, 384] Pi], -
            Cos[Rational[13, 384] Pi]}, {-Sin[Rational[11, 384] Pi], 
            Cos[Rational[11, 384] Pi]}, {-Sin[Rational[43, 384] Pi], 
            Cos[Rational[43, 384] Pi]}, {
            Cos[Rational[71, 384] Pi], 
            Sin[Rational[71, 384] Pi]}, {-Sin[Rational[53, 384] Pi], -
            Cos[Rational[53, 384] Pi]}, {
            Cos[Rational[17, 128] Pi], 
            Sin[Rational[17, 128] Pi]}, {
            Cos[Rational[43, 384] Pi], 
            Sin[Rational[43, 384] Pi]}, {
            Sin[Rational[1, 384] Pi], 
            Cos[Rational[1, 384] Pi]}, {
            Sin[Rational[25, 384] Pi], 
            Cos[Rational[25, 384] Pi]}, {
            Sin[Rational[5, 128] Pi], -Cos[Rational[5, 128] Pi]}, {-
            Sin[Rational[25, 128] Pi], 
            Cos[Rational[25, 128] Pi]}, {-Cos[Rational[65, 384] Pi], 
            Sin[Rational[65, 384] Pi]}, {
            Sin[Rational[65, 384] Pi], 
            Cos[Rational[65, 384] Pi]}, {-Cos[Rational[49, 384] Pi], 
            Sin[Rational[49, 384] Pi]}, {
            Cos[Rational[85, 384] Pi], -Sin[Rational[85, 384] Pi]}, {
            Cos[Rational[89, 384] Pi], -Sin[Rational[89, 384] Pi]}}}]]}, 
      TagBox[GraphicsGroupBox[GraphicsComplexBox[CompressedData["
1:eJxdmHtMlmUYxgFlwwNOFMvME2ytNN0sNQ1zt810EXioqbmWy4mSyxQVjzOc
oSZKhSjM1NTwkKLiCVIJ1o0kOlMIMARFFD7Oh+97UxOFMlrbcz1/XH9927v3
8D3PfV/X9bufoHlRHyzw8fLy2uDt5fX/b0rdh08nXdogX6T4FWV2OLo+8tCT
mUG7xT9/09y4Z47eXVO1qdPwLHENcPc7X+SIuV9xf/b4yZ1e+fOwDG9+cuSl
Nkc9/0Se6igplyWLfBt2FrZIwpbprnLvCzLrm4J1t+850iM6ddbUWSo3D1Qt
nZ/rSKzr4LjNq9zqfhDQf2NbGb6v+P6+vIsnRk9Nk5/qZngSHzrq/OWac6z6
jqwYu71/dRe3PA4YFRSW3KJzLr+2e8mVu4Jfc10aYuR45i+XJKMpelvtGUda
XyjYMbjknITEeaflNzpi/r/i/6+cGJxRmOrWxyOP5t7yLtOai4N8nvat0TP5
p2ML6hpkRHF0YWDRr5pe/v2ekH2OBFwOr/RbVifrn0s8Ufh7nYZcm1I06m23
bnMfm7jWua3HtbRncOBNzVkTk7013oN1iFmXPm6fWv1eV48mTFwXc8D/FvbN
7iOeM++x68I6B2fkL82Kb5S7P5a5Dk6qVuyr2We9IvHvBLryNDVsWfv8LY5k
Th88pP10tf4dsSM0OKRRWh+07k7tU6ChHSuyN/ZzsA6sC+sQsy7eP+0zIfNQ
TUaFlC8ILes+uwW/9npVavq45A012vnVYcV5iQ2oh6Ie94YNmHmhZ53s6nDG
+A2vV1NX1Jnrj/0X7P/43Bvne5e7df+k9hGb/Upxv6JfTF1tnUsOny74rnex
BmYv3r/8nIf3V69+/daz5WM86u875c4bASV2XVgPnjPvsX2FdQ3cc3ZuUnmj
9D/ad23bbRfeJ+Z9OuLYiRJnZZPkdikoyf+3Cjqyurq+4NTqyh6FGq5HAh62
eVBX1Flp/Wr0I9CPl0+f2V27NGtw2Isz0gdWCdXP9rXpcwnNC9xePK1ZxIk5
cv9kpWytnX/y0VhHIqat/yy22w35ec/T8sPx93VoctTJnNJm9IugX9J92w65
TtVKfU1FUGpcvVL/cj25XlaHpq/UJ/L5pI97/6G9qt5tiZvnsT4CPeC6uc/6
kvEp29fo88iSR5d3PriqSxd2HRIZ5VidQDdmnYp1mz5EXyr5F3wKviUxlUVS
0bdF92b5r3o/5Z7g11y3OoQuG2urs36rq9Eluzq69RjXILEvT/7h6JAmud+r
Itx3sQu6Vvga+asYPQv0TP6h2Efoc3Xr2XnFAUUaEbqwfkKpB74u8Fn6vtL+
sh8K+ZvAF+GT8Hmzb2r6An2iyaGfD43quKYjoxddl5mO1QV0gjqirugj9BXp
x+oMuqO8UtO/gv41v/Y66dPmCvrV9I+gfygfBfsCPb2e88mXiWG1mlaQFpTm
qhfyA/iIwiexT+gv8h+l/FK8x7xXjX4V+oVPI3/gi0Z3Qvlp62DqIsY/BP4B
H4A+TH8r+hvvhZ7Jj6xPwjfNe+FT0DN0z/5q+9b0sdUVdGbqAp3bXEBO7928
5sqnOU3yVefslI8SqpC3Ar1g3WYf2I/FPK/meVtn+CjpUY3viPEh+LnAzwfN
6B5R/2alJoz+NikrqZn5RU3/iOkfy0W8r+Am+DB8Ge813xH4DHwHvgafw33m
OSW/V5PfYvJbyc/ANZZzUEf4CHIOugUH4L3oW+QQuA86Iz+zfQ0fwj7D76Ej
+Dbxqs1N5Cj2Gbo1fa7oe+geOWL6Exxh64rcpjxl/sD34BPoS/SZ5VxwD/Ep
5y+4CnWyHIk+Rw5gHykfrY/AR1FXcDq4DH1DeazwYVNfy5nQBfE457FS3iEP
FXkIHwLXYF/he9A1dAoOB5dTHivltRK/wR/BLdbXwC3E//Anm7OmH6zuiaeU
+ML6DnIRnAfuwz4gp2nesL4DzodP4n+hT8D5xLPIWcx5zI/QLerM/KjET3Yu
hO4wV6GPie+YxxWcAJ7EHIK6Ej9hPrMcAl8HFxFPW46FzxF/Cs17SvyN79jv
gpvQt8hpzANYBziZeNX6LnKBeNpyCbgAcyB81+yH9XniW7tPuI/8judBJZ5i
fxHyd84rIf9QymvmQyF+YV5V4kPOI+YtpXmW+YfzmedT5iv2R84zzh/OFyX/
FJrPmUfZv5XmYyF/UeIrJV5ROi/g/OfzCaX8ZV5XyislnuPzACUeY54XOp/g
PBGaH5j3lM4rhPKb+Yt5l/1RiKfY3/n8hnmL+UNJv5xvSvOTUH6xPwv5CfsN
8wP7sVC+MF8q8Rj7v5DfKvEsz1vs30J+pXRepDRPKfGeEH8pnScxDwj5JfME
87HQ+SPzk5CfKuWv0PmTUP5xfijNV0p5rzSP8vmqEp/yfMnzihA/CfGC0LzF
fM/zntK8qHS+wPMz5y/zsxA/KvGREB8wn/F8qnQ+yvOm0nkDz+PME0LzJPOi
0vwtNG8KnbcLzZ98Pq7EF8wLPL/xeTrPW0rzh/4Hd+mmUg==
         "], {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
           ArrowBox[CompressedData["
1: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
            "], 0.02261092188364197]}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[1, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[2, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[3, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[4, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[5, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[6, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[7, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[8, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[9, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[10, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[11, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[12, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[13, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[14, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[15, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[16, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[17, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[18, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[19, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[20, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[21, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[22, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[23, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[24, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[25, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[26, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[27, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[28, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[29, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[30, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[31, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[32, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[33, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[34, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[35, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[36, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[37, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[38, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[39, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[40, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[41, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[42, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[43, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[44, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[45, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[46, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[47, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[48, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[49, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[50, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[51, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[52, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[53, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[54, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[55, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[56, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[57, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[58, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[59, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[60, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[61, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[62, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[63, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[64, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[65, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[66, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[67, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[68, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[69, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[70, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[71, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[72, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[73, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[74, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[75, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[76, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[77, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[78, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[79, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[80, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[81, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[82, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[83, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[84, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[85, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[86, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[87, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[88, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[89, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[90, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[91, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[92, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[93, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[94, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[95, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[96, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[97, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[98, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[99, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[100, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[101, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[102, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[103, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[104, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[105, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[106, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[107, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[108, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[109, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[110, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[111, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[112, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[113, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[114, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[115, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[116, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[117, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[118, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[119, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[120, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[121, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[122, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[123, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[124, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[125, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[126, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[127, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[128, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[129, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[130, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[131, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[132, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[133, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[134, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[135, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[136, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[137, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[138, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[139, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[140, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[141, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[142, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[143, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[144, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[145, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[146, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[147, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[148, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[149, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[150, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[151, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[152, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[153, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[154, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[155, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[156, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[157, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[158, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[159, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[160, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[161, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[162, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[163, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[164, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[165, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[166, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[167, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[168, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[169, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[170, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[171, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[172, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[173, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[174, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[175, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[176, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[177, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[178, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[179, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[180, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[181, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[182, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[183, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[184, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[185, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[186, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[187, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[188, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[189, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[190, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[191, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[192, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[193, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[194, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[195, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[196, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[197, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[198, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[199, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[200, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[201, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[202, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[203, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[204, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[205, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[206, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[207, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[208, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[209, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[210, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[211, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[212, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[213, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[214, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[215, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[216, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[217, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[218, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[219, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[220, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[221, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[222, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[223, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[224, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[225, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[226, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[227, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[228, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[229, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[230, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[231, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[232, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[233, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[234, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[235, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[236, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[237, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[238, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[239, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[240, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[241, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[242, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[243, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[244, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[245, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[246, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[247, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[248, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[249, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[250, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[251, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[252, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[253, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[254, 0.02261092188364197]}, 
           {RGBColor[0.34398, 0.49112, 0.89936], 
            DiskBox[255, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[256, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[257, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[258, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[259, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[260, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[261, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[262, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[263, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[264, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[265, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[266, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[267, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[268, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[269, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[270, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[271, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[272, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[273, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[274, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[275, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[276, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[277, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[278, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[279, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[280, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[281, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[282, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[283, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[284, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[285, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[286, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[287, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[288, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[289, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[290, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[291, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[292, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[293, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[294, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[295, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[296, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[297, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[298, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[299, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[300, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[301, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[302, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[303, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[304, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[305, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[306, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[307, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[308, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[309, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[310, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[311, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[312, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[313, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[314, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[315, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[316, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[317, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[318, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[319, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[320, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[321, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[322, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[323, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[324, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[325, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[326, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[327, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[328, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[329, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[330, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[331, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[332, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[333, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[334, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[335, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[336, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[337, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[338, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[339, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[340, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[341, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[342, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[343, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[344, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[345, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[346, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[347, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[348, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[349, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[350, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[351, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[352, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[353, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[354, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[355, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[356, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[357, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[358, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[359, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[360, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[361, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[362, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[363, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[364, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[365, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[366, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[367, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[368, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[369, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[370, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[371, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[372, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[373, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[374, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[375, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[376, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[377, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[378, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[379, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[380, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[381, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[382, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], DiskBox[383, 0.02261092188364197]}, 
           {RGBColor[0.97, 0.606, 0.081], 
            DiskBox[384, 0.02261092188364197]}}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    FormatType->TraditionalForm,
    FrameTicks->None]}], "}"}]], "Output",
 CellChangeTimes->{
  3.8772849701328273`*^9, {3.877285005696604*^9, 3.8772850488153286`*^9}},
 CellLabel->
  "Out[209]=",ExpressionUUID->"3815054d-73a8-4752-a56a-71d3df128503"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Exercise 49 ", "Section",
 CellChangeTimes->{{3.87728508798776*^9, 3.877285089456597*^9}, {
  3.877285219108795*^9, 
  3.8772852205150056`*^9}},ExpressionUUID->"f1bc55f5-93ab-49f2-b390-\
f07aee86b611"],

Cell["\<\
Draw diagrams of all the cubic graphs with at most 6 vertices:\
\>", "Text",
 CellChangeTimes->{{3.877285222256328*^9, 
  3.8772852380761023`*^9}},ExpressionUUID->"f79feb40-2901-4509-aaf8-\
353661a4db93"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GraphData", "[", "\"\<Cubic\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.877285272792631*^9, 3.8772852775453043`*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"910be229-4d4f-4ff1-a286-5c9a56490152"],

Cell[BoxData[
 TemplateBox[<|"shortenedBoxes" -> TagBox[
     RowBox[{"{", 
       RowBox[{
        "\"10K4\"", ",", "\"10Q3\"", ",", "\"2K3,3\"", ",", "\"2K4\"", ",", 
         "\"2M4\"", ",", "\"2M5\"", ",", "\"2P\"", ",", "\"2Q3\"", ",", 
         "\"2Y3\"", ",", "\"2Y5\"", ",", "\"3K3,3\"", ",", "\"3K4\"", ",", 
         "\"3Q3\"", ",", "\"3Y3\"", ",", "\"4K4\"", ",", "\"4Q3\"", ",", 
         "\"5K4\"", ",", "\"5Q3\"", ",", "\"6K4\"", ",", "\"6Q3\"", ",", 
         "\"7K4\"", ",", 
         TemplateBox[{"2660"}, "OutputSizeLimit`Skeleton"], ",", 
         "\"TwoDodecahedra\"", ",", "\"UtilityGraph\"", ",", 
         "\"WagnerGraph\"", ",", "\"WatkinsSnark\"", ",", 
         RowBox[{"{", 
           RowBox[{"\"WeakSnark\"", ",", 
             RowBox[{"{", 
               RowBox[{"22", ",", "4"}], "}"}]}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"\"WeakSnark\"", ",", 
             RowBox[{"{", 
               RowBox[{"22", ",", "5"}], "}"}]}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"\"WeakSnark\"", ",", 
             RowBox[{"{", 
               RowBox[{"22", ",", "9"}], "}"}]}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"\"WeakSnark\"", ",", 
             RowBox[{"{", 
               RowBox[{"22", ",", "10"}], "}"}]}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"\"WeakSnark\"", ",", 
             RowBox[{"{", 
               RowBox[{"22", ",", "11"}], "}"}]}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"\"WeakSnark\"", ",", 
             RowBox[{"{", 
               RowBox[{"22", ",", "12"}], "}"}]}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"\"WeakSnark\"", ",", 
             RowBox[{"{", 
               RowBox[{"22", ",", "18"}], "}"}]}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"\"WeakSnark\"", ",", 
             RowBox[{"{", 
               RowBox[{"22", ",", "19"}], "}"}]}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"\"WeakSnark\"", ",", 
             RowBox[{"{", 
               RowBox[{"22", ",", "24"}], "}"}]}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"\"WeakSnark\"", ",", 
             RowBox[{"{", 
               RowBox[{"22", ",", "25"}], "}"}]}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"\"WeakSnark\"", ",", 
             RowBox[{"{", 
               RowBox[{"22", ",", "26"}], "}"}]}], "}"}], ",", 
         "\"WindowGraph\"", ",", "\"Y3+2K4\"", ",", "\"Y3+K3,3\"", ",", 
         "\"Y3+K4\"", ",", "\"Y5+K4\"", ",", "\"ZamfirescuGraph36\""}], "}"}],
      Short[#, 5]& ], "line" -> 1, "sessionID" -> 16937363724473571974, 
   "byteCount" -> 589512, "size" -> 5, "stored" -> True, 
   "expr" -> {
    "10K4", "10Q3", "2K3,3", "2K4", "2M4", "2M5", "2P", "2Q3", "2Y3", "2Y5", 
     "3K3,3", "3K4", "3Q3", "3Y3", "4K4", "4Q3", "5K4", "5Q3", "6K4", "6Q3", 
     "7K4", "7Q3", "8K4", "8Q3", "9K4", "9Q3", "AntiboxGraph", "AntilogGraph",
      "ArayaWienerGraph70", "ArayaWienerGraph88", "Balaban10Cage", 
     "Balaban11Cage", "BarnetteBosakLederbergGraph", "BigdrumGraph", 
     "BiggsSmithGraph", {"BlanusaSnark", {1, 1}}, {"BlanusaSnark", {1, 2}}, {
     "BlanusaSnark", {2, 1}}, {"BlanusaSnark", {2, 2}}, {
     "BlanusaSnark", {3, 1}}, {"BlanusaSnark", {3, 2}}, {
     "BlanusaSnark", {4, 1}}, {"BlanusaSnark", {4, 2}}, "BoxGraph", {
     "Cage", {3, 13}}, {"Cage", {3, 14}}, {"Cage", {3, 9}, 1}, {
     "Cage", {3, 9}, 2}, {"Cage", {3, 9}, 3}, {"Cage", {3, 9}, 4}, {
     "Cage", {3, 9}, 5}, {"Cage", {3, 9}, 6}, {"Cage", {3, 9}, 7}, {
     "Cage", {3, 9}, 8}, {"Cage", {3, 9}, 9}, {"Cage", {3, 9}, 10}, {
     "Cage", {3, 9}, 11}, {"Cage", {3, 9}, 12}, {"Cage", {3, 9}, 13}, {
     "Cage", {3, 9}, 14}, {"Cage", {3, 9}, 15}, {"Cage", {3, 9}, 16}, {
     "Cage", {3, 9}, 17}, {"Cage", {3, 9}, 18}, "CelminsSwartSnark1", 
     "CelminsSwartSnark2", "ConcertinaGraph", "CoxeterGraph", {
     "CrossedPrism", 8}, {"CrossedPrism", 10}, {"CrossedPrism", 12}, {
     "CrossedPrism", 14}, {"CrossedPrism", 16}, {"CrossedPrism", 18}, {
     "CrossedPrism", 20}, {"CrossedPrism", 22}, {"CrossedPrism", 24}, 
     "CrossingNumberGraph10A", "CrossingNumberGraph10B", 
     "CrossingNumberGraph12A", "CrossingNumberGraph2B", 
     "CrossingNumberGraph3A", "CrossingNumberGraph3B", 
     "CrossingNumberGraph3D", "CrossingNumberGraph3E", 
     "CrossingNumberGraph3F", "CrossingNumberGraph3H", 
     "CrossingNumberGraph5B", "CrossingNumberGraph6B", 
     "CrossingNumberGraph6C", "CrossingNumberGraph7A", 
     "CrossingNumberGraph7B", "CrossingNumberGraph7C", 
     "CrossingNumberGraph7D", "CrossingNumberGraph8C", 
     "CrossingNumberGraph9A", {"CubeConnectedCycle", 4}, {
     "CubeConnectedCycle", 5}, {"CubeConnectedCycle", 6}, {
     "CubeConnectedCycle", 7}, {"CubeConnectedCycle", 8}, "CubeplexGraph", {
     "Cubic", {8, 3}}, {"Cubic", {10, 1}}, {"Cubic", {10, 2}}, {
     "Cubic", {10, 3}}, {"Cubic", {10, 4}}, {"Cubic", {10, 5}}, {
     "Cubic", {10, 8}}, {"Cubic", {10, 9}}, {"Cubic", {10, 10}}, {
     "Cubic", {10, 11}}, {"Cubic", {10, 13}}, {"Cubic", {10, 16}}, {
     "Cubic", {10, 18}}, {"Cubic", {12, 1}}, {"Cubic", {12, 2}}, {
     "Cubic", {12, 3}}, {"Cubic", {12, 4}}, {"Cubic", {12, 5}}, {
     "Cubic", {12, 6}}, {"Cubic", {12, 7}}, {"Cubic", {12, 8}}, {
     "Cubic", {12, 9}}, {"Cubic", {12, 10}}, {"Cubic", {12, 11}}, {
     "Cubic", {12, 12}}, {"Cubic", {12, 13}}, {"Cubic", {12, 14}}, {
     "Cubic", {12, 15}}, {"Cubic", {12, 16}}, {"Cubic", {12, 17}}, {
     "Cubic", {12, 18}}, {"Cubic", {12, 19}}, {"Cubic", {12, 20}}, {
     "Cubic", {12, 21}}, {"Cubic", {12, 22}}, {"Cubic", {12, 23}}, {
     "Cubic", {12, 24}}, {"Cubic", {12, 25}}, {"Cubic", {12, 26}}, {
     "Cubic", {12, 27}}, {"Cubic", {12, 28}}, {"Cubic", {12, 31}}, {
     "Cubic", {12, 33}}, {"Cubic", {12, 34}}, {"Cubic", {12, 35}}, {
     "Cubic", {12, 36}}, {"Cubic", {12, 37}}, {"Cubic", {12, 38}}, {
     "Cubic", {12, 40}}, {"Cubic", {12, 41}}, {"Cubic", {12, 42}}, {
     "Cubic", {12, 43}}, {"Cubic", {12, 45}}, {"Cubic", {12, 46}}, {
     "Cubic", {12, 47}}, {"Cubic", {12, 48}}, {"Cubic", {12, 49}}, {
     "Cubic", {12, 50}}, {"Cubic", {12, 51}}, {"Cubic", {12, 52}}, {
     "Cubic", {12, 53}}, {"Cubic", {12, 54}}, {"Cubic", {12, 55}}, {
     "Cubic", {12, 56}}, {"Cubic", {12, 57}}, {"Cubic", {12, 58}}, {
     "Cubic", {12, 60}}, {"Cubic", {12, 61}}, {"Cubic", {12, 62}}, {
     "Cubic", {12, 64}}, {"Cubic", {12, 65}}, {"Cubic", {12, 66}}, {
     "Cubic", {12, 67}}, {"Cubic", {12, 69}}, {"Cubic", {12, 70}}, {
     "Cubic", {12, 73}}, {"Cubic", {12, 74}}, {"Cubic", {12, 75}}, {
     "Cubic", {12, 76}}, {"Cubic", {12, 77}}, {"Cubic", {12, 78}}, {
     "Cubic", {12, 79}}, {"Cubic", {12, 82}}, {"Cubic", {12, 91}}, {
     "Cubic", {12, 93}}, {"Cubic", {12, 94}}, {"Cubic", {14, 1}}, {
     "Cubic", {14, 2}}, {"Cubic", {14, 3}}, {"Cubic", {14, 4}}, {
     "Cubic", {14, 5}}, {"Cubic", {14, 6}}, {"Cubic", {14, 7}}, {
     "Cubic", {14, 8}}, {"Cubic", {14, 9}}, {"Cubic", {14, 10}}, {
     "Cubic", {14, 11}}, {"Cubic", {14, 12}}, {"Cubic", {14, 13}}, {
     "Cubic", {14, 14}}, {"Cubic", {14, 15}}, {"Cubic", {14, 16}}, {
     "Cubic", {14, 17}}, {"Cubic", {14, 18}}, {"Cubic", {14, 19}}, {
     "Cubic", {14, 20}}, {"Cubic", {14, 21}}, {"Cubic", {14, 22}}, {
     "Cubic", {14, 23}}, {"Cubic", {14, 24}}, {"Cubic", {14, 25}}, {
     "Cubic", {14, 26}}, {"Cubic", {14, 27}}, {"Cubic", {14, 28}}, {
     "Cubic", {14, 29}}, {"Cubic", {14, 30}}, {"Cubic", {14, 31}}, {
     "Cubic", {14, 32}}, {"Cubic", {14, 33}}, {"Cubic", {14, 34}}, {
     "Cubic", {14, 35}}, {"Cubic", {14, 36}}, {"Cubic", {14, 37}}, {
     "Cubic", {14, 38}}, {"Cubic", {14, 39}}, {"Cubic", {14, 40}}, {
     "Cubic", {14, 41}}, {"Cubic", {14, 42}}, {"Cubic", {14, 43}}, {
     "Cubic", {14, 44}}, {"Cubic", {14, 45}}, {"Cubic", {14, 46}}, {
     "Cubic", {14, 47}}, {"Cubic", {14, 48}}, {"Cubic", {14, 49}}, {
     "Cubic", {14, 50}}, {"Cubic", {14, 51}}, {"Cubic", {14, 52}}, {
     "Cubic", {14, 53}}, {"Cubic", {14, 54}}, {"Cubic", {14, 55}}, {
     "Cubic", {14, 56}}, {"Cubic", {14, 57}}, {"Cubic", {14, 58}}, {
     "Cubic", {14, 59}}, {"Cubic", {14, 60}}, {"Cubic", {14, 61}}, {
     "Cubic", {14, 62}}, {"Cubic", {14, 63}}, {"Cubic", {14, 64}}, {
     "Cubic", {14, 65}}, {"Cubic", {14, 66}}, {"Cubic", {14, 67}}, {
     "Cubic", {14, 68}}, {"Cubic", {14, 69}}, {"Cubic", {14, 70}}, {
     "Cubic", {14, 71}}, {"Cubic", {14, 72}}, {"Cubic", {14, 73}}, {
     "Cubic", {14, 74}}, {"Cubic", {14, 75}}, {"Cubic", {14, 76}}, {
     "Cubic", {14, 77}}, {"Cubic", {14, 78}}, {"Cubic", {14, 79}}, {
     "Cubic", {14, 80}}, {"Cubic", {14, 81}}, {"Cubic", {14, 82}}, {
     "Cubic", {14, 83}}, {"Cubic", {14, 84}}, {"Cubic", {14, 85}}, {
     "Cubic", {14, 86}}, {"Cubic", {14, 87}}, {"Cubic", {14, 88}}, {
     "Cubic", {14, 89}}, {"Cubic", {14, 90}}, {"Cubic", {14, 91}}, {
     "Cubic", {14, 92}}, {"Cubic", {14, 93}}, {"Cubic", {14, 94}}, {
     "Cubic", {14, 95}}, {"Cubic", {14, 96}}, {"Cubic", {14, 97}}, {
     "Cubic", {14, 98}}, {"Cubic", {14, 99}}, {"Cubic", {14, 100}}, {
     "Cubic", {14, 101}}, {"Cubic", {14, 102}}, {"Cubic", {14, 103}}, {
     "Cubic", {14, 104}}, {"Cubic", {14, 105}}, {"Cubic", {14, 106}}, {
     "Cubic", {14, 107}}, {"Cubic", {14, 108}}, {"Cubic", {14, 109}}, {
     "Cubic", {14, 110}}, {"Cubic", {14, 111}}, {"Cubic", {14, 112}}, {
     "Cubic", {14, 113}}, {"Cubic", {14, 114}}, {"Cubic", {14, 115}}, {
     "Cubic", {14, 116}}, {"Cubic", {14, 117}}, {"Cubic", {14, 118}}, {
     "Cubic", {14, 119}}, {"Cubic", {14, 120}}, {"Cubic", {14, 121}}, {
     "Cubic", {14, 122}}, {"Cubic", {14, 123}}, {"Cubic", {14, 124}}, {
     "Cubic", {14, 125}}, {"Cubic", {14, 126}}, {"Cubic", {14, 127}}, {
     "Cubic", {14, 128}}, {"Cubic", {14, 129}}, {"Cubic", {14, 130}}, {
     "Cubic", {14, 131}}, {"Cubic", {14, 132}}, {"Cubic", {14, 133}}, {
     "Cubic", {14, 134}}, {"Cubic", {14, 135}}, {"Cubic", {14, 136}}, {
     "Cubic", {14, 137}}, {"Cubic", {14, 138}}, {"Cubic", {14, 139}}, {
     "Cubic", {14, 140}}, {"Cubic", {14, 141}}, {"Cubic", {14, 142}}, {
     "Cubic", {14, 143}}, {"Cubic", {14, 144}}, {"Cubic", {14, 145}}, {
     "Cubic", {14, 146}}, {"Cubic", {14, 147}}, {"Cubic", {14, 148}}, {
     "Cubic", {14, 149}}, {"Cubic", {14, 150}}, {"Cubic", {14, 151}}, {
     "Cubic", {14, 152}}, {"Cubic", {14, 153}}, {"Cubic", {14, 154}}, {
     "Cubic", {14, 155}}, {"Cubic", {14, 156}}, {"Cubic", {14, 157}}, {
     "Cubic", {14, 158}}, {"Cubic", {14, 159}}, {"Cubic", {14, 160}}, {
     "Cubic", {14, 161}}, {"Cubic", {14, 162}}, {"Cubic", {14, 164}}, {
     "Cubic", {14, 166}}, {"Cubic", {14, 169}}, {"Cubic", {14, 170}}, {
     "Cubic", {14, 171}}, {"Cubic", {14, 172}}, {"Cubic", {14, 173}}, {
     "Cubic", {14, 174}}, {"Cubic", {14, 175}}, {"Cubic", {14, 176}}, {
     "Cubic", {14, 177}}, {"Cubic", {14, 179}}, {"Cubic", {14, 180}}, {
     "Cubic", {14, 182}}, {"Cubic", {14, 183}}, {"Cubic", {14, 186}}, {
     "Cubic", {14, 187}}, {"Cubic", {14, 188}}, {"Cubic", {14, 189}}, {
     "Cubic", {14, 190}}, {"Cubic", {14, 191}}, {"Cubic", {14, 192}}, {
     "Cubic", {14, 193}}, {"Cubic", {14, 194}}, {"Cubic", {14, 195}}, {
     "Cubic", {14, 196}}, {"Cubic", {14, 197}}, {"Cubic", {14, 198}}, {
     "Cubic", {14, 199}}, {"Cubic", {14, 200}}, {"Cubic", {14, 201}}, {
     "Cubic", {14, 202}}, {"Cubic", {14, 203}}, {"Cubic", {14, 204}}, {
     "Cubic", {14, 205}}, {"Cubic", {14, 206}}, {"Cubic", {14, 208}}, {
     "Cubic", {14, 209}}, {"Cubic", {14, 210}}, {"Cubic", {14, 211}}, {
     "Cubic", {14, 212}}, {"Cubic", {14, 214}}, {"Cubic", {14, 215}}, {
     "Cubic", {14, 216}}, {"Cubic", {14, 217}}, {"Cubic", {14, 218}}, {
     "Cubic", {14, 219}}, {"Cubic", {14, 220}}, {"Cubic", {14, 221}}, {
     "Cubic", {14, 222}}, {"Cubic", {14, 223}}, {"Cubic", {14, 224}}, {
     "Cubic", {14, 225}}, {"Cubic", {14, 226}}, {"Cubic", {14, 227}}, {
     "Cubic", {14, 228}}, {"Cubic", {14, 229}}, {"Cubic", {14, 230}}, {
     "Cubic", {14, 231}}, {"Cubic", {14, 232}}, {"Cubic", {14, 233}}, {
     "Cubic", {14, 234}}, {"Cubic", {14, 236}}, {"Cubic", {14, 237}}, {
     "Cubic", {14, 238}}, {"Cubic", {14, 239}}, {"Cubic", {14, 240}}, {
     "Cubic", {14, 241}}, {"Cubic", {14, 242}}, {"Cubic", {14, 243}}, {
     "Cubic", {14, 244}}, {"Cubic", {14, 245}}, {"Cubic", {14, 246}}, {
     "Cubic", {14, 247}}, {"Cubic", {14, 248}}, {"Cubic", {14, 249}}, {
     "Cubic", {14, 250}}, {"Cubic", {14, 251}}, {"Cubic", {14, 252}}, {
     "Cubic", {14, 253}}, {"Cubic", {14, 254}}, {"Cubic", {14, 255}}, {
     "Cubic", {14, 256}}, {"Cubic", {14, 257}}, {"Cubic", {14, 258}}, {
     "Cubic", {14, 259}}, {"Cubic", {14, 260}}, {"Cubic", {14, 261}}, {
     "Cubic", {14, 262}}, {"Cubic", {14, 263}}, {"Cubic", {14, 264}}, {
     "Cubic", {14, 265}}, {"Cubic", {14, 266}}, {"Cubic", {14, 267}}, {
     "Cubic", {14, 268}}, {"Cubic", {14, 269}}, {"Cubic", {14, 270}}, {
     "Cubic", {14, 271}}, {"Cubic", {14, 272}}, {"Cubic", {14, 273}}, {
     "Cubic", {14, 274}}, {"Cubic", {14, 275}}, {"Cubic", {14, 276}}, {
     "Cubic", {14, 277}}, {"Cubic", {14, 278}}, {"Cubic", {14, 279}}, {
     "Cubic", {14, 280}}, {"Cubic", {14, 281}}, {"Cubic", {14, 282}}, {
     "Cubic", {14, 283}}, {"Cubic", {14, 284}}, {"Cubic", {14, 285}}, {
     "Cubic", {14, 286}}, {"Cubic", {14, 287}}, {"Cubic", {14, 288}}, {
     "Cubic", {14, 289}}, {"Cubic", {14, 290}}, {"Cubic", {14, 291}}, {
     "Cubic", {14, 292}}, {"Cubic", {14, 294}}, {"Cubic", {14, 295}}, {
     "Cubic", {14, 296}}, {"Cubic", {14, 297}}, {"Cubic", {14, 298}}, {
     "Cubic", {14, 299}}, {"Cubic", {14, 300}}, {"Cubic", {14, 301}}, {
     "Cubic", {14, 302}}, {"Cubic", {14, 303}}, {"Cubic", {14, 304}}, {
     "Cubic", {14, 305}}, {"Cubic", {14, 306}}, {"Cubic", {14, 307}}, {
     "Cubic", {14, 308}}, {"Cubic", {14, 309}}, {"Cubic", {14, 310}}, {
     "Cubic", {14, 311}}, {"Cubic", {14, 312}}, {"Cubic", {14, 313}}, {
     "Cubic", {14, 314}}, {"Cubic", {14, 315}}, {"Cubic", {14, 316}}, {
     "Cubic", {14, 317}}, {"Cubic", {14, 318}}, {"Cubic", {14, 319}}, {
     "Cubic", {14, 320}}, {"Cubic", {14, 321}}, {"Cubic", {14, 322}}, {
     "Cubic", {14, 323}}, {"Cubic", {14, 324}}, {"Cubic", {14, 325}}, {
     "Cubic", {14, 326}}, {"Cubic", {14, 327}}, {"Cubic", {14, 328}}, {
     "Cubic", {14, 329}}, {"Cubic", {14, 330}}, {"Cubic", {14, 331}}, {
     "Cubic", {14, 332}}, {"Cubic", {14, 333}}, {"Cubic", {14, 334}}, {
     "Cubic", {14, 335}}, {"Cubic", {14, 336}}, {"Cubic", {14, 337}}, {
     "Cubic", {14, 338}}, {"Cubic", {14, 339}}, {"Cubic", {14, 340}}, {
     "Cubic", {14, 341}}, {"Cubic", {14, 342}}, {"Cubic", {14, 343}}, {
     "Cubic", {14, 344}}, {"Cubic", {14, 345}}, {"Cubic", {14, 346}}, {
     "Cubic", {14, 347}}, {"Cubic", {14, 348}}, {"Cubic", {14, 349}}, {
     "Cubic", {14, 350}}, {"Cubic", {14, 351}}, {"Cubic", {14, 352}}, {
     "Cubic", {14, 353}}, {"Cubic", {14, 354}}, {"Cubic", {14, 355}}, {
     "Cubic", {14, 356}}, {"Cubic", {14, 357}}, {"Cubic", {14, 358}}, {
     "Cubic", {14, 359}}, {"Cubic", {14, 360}}, {"Cubic", {14, 361}}, {
     "Cubic", {14, 362}}, {"Cubic", {14, 363}}, {"Cubic", {14, 364}}, {
     "Cubic", {14, 365}}, {"Cubic", {14, 366}}, {"Cubic", {14, 367}}, {
     "Cubic", {14, 368}}, {"Cubic", {14, 369}}, {"Cubic", {14, 370}}, {
     "Cubic", {14, 371}}, {"Cubic", {14, 372}}, {"Cubic", {14, 373}}, {
     "Cubic", {14, 374}}, {"Cubic", {14, 375}}, {"Cubic", {14, 376}}, {
     "Cubic", {14, 377}}, {"Cubic", {14, 378}}, {"Cubic", {14, 379}}, {
     "Cubic", {14, 380}}, {"Cubic", {14, 381}}, {"Cubic", {14, 382}}, {
     "Cubic", {14, 383}}, {"Cubic", {14, 384}}, {"Cubic", {14, 385}}, {
     "Cubic", {14, 386}}, {"Cubic", {14, 387}}, {"Cubic", {14, 388}}, {
     "Cubic", {14, 389}}, {"Cubic", {14, 390}}, {"Cubic", {14, 391}}, {
     "Cubic", {14, 392}}, {"Cubic", {14, 393}}, {"Cubic", {14, 394}}, {
     "Cubic", {14, 395}}, {"Cubic", {14, 396}}, {"Cubic", {14, 397}}, {
     "Cubic", {14, 398}}, {"Cubic", {14, 399}}, {"Cubic", {14, 400}}, {
     "Cubic", {14, 401}}, {"Cubic", {14, 402}}, {"Cubic", {14, 403}}, {
     "Cubic", {14, 404}}, {"Cubic", {14, 405}}, {"Cubic", {14, 406}}, {
     "Cubic", {14, 407}}, {"Cubic", {14, 408}}, {"Cubic", {14, 409}}, {
     "Cubic", {14, 410}}, {"Cubic", {14, 413}}, {"Cubic", {14, 414}}, {
     "Cubic", {14, 415}}, {"Cubic", {14, 416}}, {"Cubic", {14, 417}}, {
     "Cubic", {14, 418}}, {"Cubic", {14, 419}}, {"Cubic", {14, 420}}, {
     "Cubic", {14, 423}}, {"Cubic", {14, 424}}, {"Cubic", {14, 425}}, {
     "Cubic", {14, 427}}, {"Cubic", {14, 428}}, {"Cubic", {14, 430}}, {
     "Cubic", {14, 431}}, {"Cubic", {14, 432}}, {"Cubic", {14, 433}}, {
     "Cubic", {14, 434}}, {"Cubic", {14, 435}}, {"Cubic", {14, 437}}, {
     "Cubic", {14, 439}}, {"Cubic", {14, 440}}, {"Cubic", {14, 441}}, {
     "Cubic", {14, 442}}, {"Cubic", {14, 443}}, {"Cubic", {14, 444}}, {
     "Cubic", {14, 445}}, {"Cubic", {14, 446}}, {"Cubic", {14, 447}}, {
     "Cubic", {14, 448}}, {"Cubic", {14, 449}}, {"Cubic", {14, 450}}, {
     "Cubic", {14, 451}}, {"Cubic", {14, 452}}, {"Cubic", {14, 453}}, {
     "Cubic", {14, 454}}, {"Cubic", {14, 455}}, {"Cubic", {14, 456}}, {
     "Cubic", {14, 457}}, {"Cubic", {14, 458}}, {"Cubic", {14, 459}}, {
     "Cubic", {14, 460}}, {"Cubic", {14, 461}}, {"Cubic", {14, 462}}, {
     "Cubic", {14, 463}}, {"Cubic", {14, 464}}, {"Cubic", {14, 466}}, {
     "Cubic", {14, 467}}, {"Cubic", {14, 468}}, {"Cubic", {14, 469}}, {
     "Cubic", {14, 470}}, {"Cubic", {14, 471}}, {"Cubic", {14, 472}}, {
     "Cubic", {14, 473}}, {"Cubic", {14, 474}}, {"Cubic", {14, 475}}, {
     "Cubic", {14, 476}}, {"Cubic", {14, 479}}, {"Cubic", {14, 480}}, {
     "Cubic", {14, 481}}, {"Cubic", {14, 482}}, {"Cubic", {14, 483}}, {
     "Cubic", {14, 484}}, {"Cubic", {14, 485}}, {"Cubic", {14, 486}}, {
     "Cubic", {14, 487}}, {"Cubic", {14, 488}}, {"Cubic", {14, 489}}, {
     "Cubic", {14, 490}}, {"Cubic", {14, 491}}, {"Cubic", {14, 492}}, {
     "Cubic", {14, 494}}, {"Cubic", {14, 495}}, {"Cubic", {14, 496}}, {
     "Cubic", {14, 497}}, {"Cubic", {14, 498}}, {"Cubic", {14, 499}}, {
     "Cubic", {14, 500}}, {"Cubic", {14, 501}}, {"Cubic", {14, 503}}, {
     "Cubic", {14, 505}}, {"Cubic", {14, 517}}, {"Cubic", {14, 518}}, {
     "Cubic", {14, 521}}, {"Cubic", {14, 522}}, {"Cubic", {14, 523}}, {
     "Cubic", {14, 524}}, {"Cubic", {14, 525}}, {"Cubic", {14, 526}}, {
     "Cubic", {14, 527}}, {"Cubic", {14, 528}}, {"Cubic", {14, 529}}, {
     "Cubic", {14, 530}}, {"Cubic", {14, 531}}, {"Cubic", {14, 532}}, {
     "Cubic", {14, 533}}, {"Cubic", {14, 534}}, {"Cubic", {14, 535}}, {
     "Cubic", {14, 536}}, {"Cubic", {14, 537}}, {"Cubic", {14, 538}}, {
     "Cubic", {14, 539}}, {"Cubic", {14, 540}}, {"Cubic", {16, 1}}, {
     "Cubic", {16, 2}}, {"Cubic", {16, 3}}, {"Cubic", {16, 4}}, {
     "Cubic", {16, 5}}, {"Cubic", {16, 6}}, {"Cubic", {16, 7}}, {
     "Cubic", {16, 8}}, {"Cubic", {16, 9}}, {"Cubic", {16, 10}}, {
     "Cubic", {16, 11}}, {"Cubic", {16, 12}}, {"Cubic", {16, 13}}, {
     "Cubic", {16, 14}}, {"Cubic", {16, 15}}, {"Cubic", {16, 16}}, {
     "Cubic", {16, 17}}, {"Cubic", {16, 18}}, {"Cubic", {18, 1}}, {
     "Cubic", {18, 2}}, {"Cubic", {18, 3}}, {"Cubic", {18, 4}}, {
     "Cubic", {18, 5}}, {"Cubic", {18, 6}}, {"Cubic", {18, 7}}, {
     "Cubic", {18, 8}}, {"Cubic", {18, 9}}, {"Cubic", {18, 10}}, {
     "Cubic", {18, 11}}, {"Cubic", {18, 12}}, {"Cubic", {18, 13}}, {
     "Cubic", {18, 14}}, {"Cubic", {18, 15}}, {"Cubic", {18, 16}}, {
     "Cubic", {18, 17}}, {"Cubic", {18, 18}}, {"Cubic", {18, 19}}, {
     "Cubic", {20, 1}}, {"Cubic", {20, 2}}, {"Cubic", {20, 3}}, {
     "Cubic", {22, 1}}, {"Cubic", {22, 2}}, {"Cubic", {24, 1}}, {
     "Cubic", {24, 2}}, {"Cubic", {24, 3}}, {"Cubic", {24, 4}}, {
     "Cubic", {26, 1}}, {"Cubic", {26, 2}}, {"Cubic", {26, 3}}, {
     "Cubic", {28, 1}}, {"Cubic", {28, 2}}, {"Cubic", {28, 3}}, {
     "Cubic", {28, 4}}, {"Cubic", {28, 5}}, {"Cubic", {30, 1}}, {
     "Cubic", {32, 1}}, {"Cubic", {32, 2}}, {"Cubic", {32, 3}}, {
     "Cubic", {32, 4}}, {"Cubic", {32, 5}}, {"Cubic", {34, 1}}, {
     "Cubic", {36, 1}}, {"Cubic", {36, 2}}, {"Cubic", {38, 2}}, {
     "Cubic", {42, 2}}, {"Cubic", {42, 3}}, {"Cubic", {42, 4}}, {
     "Cubic", {48, 1}}, {"Cubic", {48, 2}}, {"Cubic", {48, 3}}, {
     "Cubic", {50, 1}}, {"Cubic", {54, 1}}, {"Cubic", {54, 2}}, {
     "Cubic", {56, 1}}, {"Cubic", {56, 2}}, {"Cubic", {56, 3}}, {
     "Cubic", {56, 4}}, {"Cubic", {60, 1}}, {"Cubic", {64, 1}}, {
     "Cubic", {64, 2}}, {"Cubic", {78, 1}}, {"Cubic", {90, 1}}, 
     "CubicalGraph", {"CubicHypohamiltonian", {24, 1}}, {
     "CubicHypohamiltonian", {26, 7}}, {"CubicHypohamiltonian", {26, 17}}, {
     "CubicHypohamiltonian", {26, 40}}, {"CubicHypohamiltonian", {26, 43}}, {
     "CubicHypohamiltonian", {26, 72}}, {"CubicNonhamiltonian", {42, 3}}, {
     "CubicNonhamiltonian", {46, 2}}, {"CubicNonhamiltonian", {46, 3}}, {
     "CubicNonhamiltonian", {46, 4}}, {"CubicNonhamiltonian", {50, 1}}, {
     "CubicNonhamiltonian", {50, 2}}, {"CubicNonhamiltonian", {50, 3}}, {
     "CubicNonhamiltonian", {52, 1}}, {"CubicNonhamiltonian", {52, 2}}, {
     "CubicNonhamiltonian", {52, 3}}, {"CubicNonhamiltonian", {52, 4}}, {
     "CubicNonhamiltonian", {52, 5}}, {"CubicNonhamiltonian", {52, 6}}, {
     "CubicPolyhedral", 4}, {"CubicPolyhedral", 5}, {"CubicPolyhedral", 6}, {
     "CubicPolyhedral", 7}, {"CubicPolyhedral", 9}, {"CubicPolyhedral", 10}, {
     "CubicPolyhedral", 11}, {"CubicPolyhedral", 13}, {
     "CubicPolyhedral", 14}, {"CubicPolyhedral", 15}, {
     "CubicPolyhedral", 16}, {"CubicPolyhedral", 17}, {
     "CubicPolyhedral", 18}, {"CubicPolyhedral", 19}, {
     "CubicPolyhedral", 20}, {"CubicPolyhedral", 22}, {
     "CubicPolyhedral", 23}, {"CubicPolyhedral", 24}, {
     "CubicPolyhedral", 25}, {"CubicPolyhedral", 26}, {
     "CubicPolyhedral", 27}, {"CubicPolyhedral", 28}, {
     "CubicPolyhedral", 29}, {"CubicPolyhedral", 30}, {
     "CubicPolyhedral", 31}, {"CubicPolyhedral", 32}, {
     "CubicPolyhedral", 33}, {"CubicPolyhedral", 34}, {
     "CubicPolyhedral", 35}, {"CubicPolyhedral", 36}, {
     "CubicPolyhedral", 37}, {"CubicPolyhedral", 38}, {
     "CubicPolyhedral", 39}, {"CubicPolyhedral", 40}, {
     "CubicPolyhedral", 41}, {"CubicPolyhedral", 42}, {
     "CubicPolyhedral", 43}, {"CubicPolyhedral", 44}, {
     "CubicPolyhedral", 45}, {"CubicPolyhedral", 46}, {
     "CubicPolyhedral", 47}, {"CubicPolyhedral", 48}, {
     "CubicPolyhedral", 49}, {"CubicPolyhedral", 50}, {
     "CubicPolyhedral", 51}, {"CubicPolyhedral", 52}, {
     "CubicPolyhedral", 53}, {"CubicPolyhedral", 54}, {
     "CubicTransitive", 20}, {"CubicTransitive", 23}, {
     "CubicTransitive", 25}, {"CubicTransitive", 28}, {
     "CubicTransitive", 32}, {"CubicTransitive", 35}, {
     "CubicTransitive", 36}, {"CubicTransitive", 37}, {
     "CubicTransitive", 38}, {"CubicTransitive", 41}, {
     "CubicTransitive", 47}, {"CubicTransitive", 51}, {
     "CubicTransitive", 52}, {"CubicTransitive", 57}, {
     "CubicTransitive", 58}, {"CubicTransitive", 59}, {
     "CubicTransitive", 60}, {"CubicTransitive", 62}, {
     "CubicTransitive", 67}, {"CubicTransitive", 68}, {
     "CubicTransitive", 69}, {"CubicTransitive", 72}, {
     "CubicTransitive", 73}, {"CubicTransitive", 77}, {"CubicTransitive", 78},
      "DesarguesGraph", {"Dice", 1}, {"Dice", 2}, {"Dice", 3}, {"Dice", 4}, 
     "DodecahedralGraph", "DoubleStarSnark", "DrapeGraph", "DrumGraph", 
     "DuererGraph", "DyckGraph", "EdgeExcisedCoxeterGraph", 
     "EllinghamHortonGraph54", "EllinghamHortonGraph78", "ExtrapexGraph", 
     "FaulknerYoungerGraph42", "FaulknerYoungerGraph44", "FirstapexGraph", 
     "FiveDodecahedra", {"Flower", 5}, {"Flower", 7}, {"Flower", 8}, {
     "Flower", 9}, {"Flower", 10}, {"Flower", 11}, {"Flower", 12}, {
     "Flower", 13}, {"Flower", 14}, {"Flower", 15}, {"Flower", 16}, {
     "Flower", 17}, {"Flower", 18}, {"Flower", 19}, {"Flower", 20}, 
     "Foster026A", "Foster038A", "Foster040A", "Foster042A", "Foster050A", 
     "Foster054A", "Foster056A", "Foster056B", "Foster056C", "Foster060A", 
     "Foster062A", "Foster064A", "Foster072A", "Foster074A", "Foster078A", 
     "Foster080A", "Foster084A", "Foster086A", "Foster090A", "Foster096A", 
     "Foster096B", "Foster098A", "Foster098B", "Foster104A", "Foster108A", 
     "Foster110A", "Foster112A", "Foster112B", "Foster112C", "Foster114A", 
     "Foster120A", "Foster120B", "Foster122A", "Foster126A", "Foster128A", 
     "Foster128B", "Foster134A", "Foster144A", "Foster144B", "Foster146A", 
     "Foster150A", "Foster152A", "Foster158A", "Foster162A", "Foster162B", 
     "Foster162C", "Foster168A", "Foster168B", "Foster168C", "Foster168D", 
     "Foster168E", "Foster168F", "Foster182A", "Foster182B", "Foster182C", 
     "Foster182D", "Foster186A", "Foster192A", "Foster192B", "Foster192C", 
     "Foster194A", "Foster200A", "Foster204A", "Foster206A", "Foster208A", 
     "Foster216A", "Foster216B", "Foster216C", "Foster218A", "Foster220A", 
     "Foster220B", "Foster220C", "Foster222A", "Foster224A", "Foster224B", 
     "Foster224C", "Foster234A", "Foster234B", "Foster240A", "Foster240B", 
     "Foster240C", "Foster242A", "Foster248A", "Foster250A", "Foster254A", 
     "Foster256A", "Foster256B", "Foster256C", "Foster256D", "Foster258A", 
     "Foster266A", "Foster266B", "Foster278A", "Foster288A", "Foster288B", 
     "Foster294A", "Foster294B", "Foster296A", "Foster302A", "Foster304A", 
     "Foster312A", "Foster312B", "Foster314A", "Foster326A", "Foster336A", 
     "Foster336B", "Foster336C", "Foster336D", "Foster336E", "Foster336F", 
     "Foster338A", "Foster338B", "Foster342A", "Foster344A", "Foster350A", 
     "Foster360A", "Foster360B", "Foster362A", "Foster364A", "Foster364B", 
     "Foster364C", "Foster364D", "Foster364E", "Foster364F", "Foster364G", 
     "Foster366A", "Foster378A", "Foster378B", "Foster384A", "Foster384B", 
     "Foster384C", "Foster384D", "Foster386A", "Foster392A", "Foster392B", 
     "Foster398A", "Foster400A", "Foster400B", "Foster402A", "Foster408A", 
     "Foster408B", "Foster416A", "Foster422A", "Foster432A", "Foster432B", 
     "Foster432C", "Foster432D", "Foster432E", "Foster434A", "Foster434B", 
     "Foster438A", "Foster440A", "Foster440B", "Foster440C", "Foster446A", 
     "Foster448A", "Foster448B", "Foster448C", "Foster450A", "Foster456A", 
     "Foster456B", "Foster458A", "Foster468A", "Foster474A", "Foster480A", 
     "Foster480B", "Foster480C", "Foster480D", "Foster482A", "Foster486A", 
     "Foster486B", "Foster486C", "Foster486D", "Foster488A", "Foster494A", 
     "Foster494B", "Foster496A", "Foster500A", "Foster504A", "Foster504B", 
     "Foster504C", "Foster504D", "Foster504E", "Foster506A", "Foster506B", 
     "Foster512A", "Foster512B", "Foster512C", "Foster512D", "Foster512E", 
     "Foster512F", "Foster512G", "Foster518A", "Foster518B", "Foster536A", 
     "Foster542A", "Foster546A", "Foster546B", "Foster554A", "Foster558A", 
     "Foster566A", "Foster570A", "Foster570B", "Foster576A", "Foster576B", 
     "Foster576C", "Foster576D", "Foster578A", "Foster582A", "Foster584A", 
     "Foster592A", "Foster600A", "Foster600B", "Foster602A", "Foster602B", 
     "Foster608A", "Foster614A", "Foster618A", "Foster620A", "Foster624A", 
     "Foster624B", "Foster626A", "Foster632A", "Foster640A", "Foster648A", 
     "Foster648B", "Foster648C", "Foster648D", "Foster648E", "Foster648F", 
     "Foster650A", "Foster654A", "Foster660A", "Foster662A", "Foster666A", 
     "Foster672A", "Foster672B", "Foster672C", "Foster672D", "Foster672E", 
     "Foster672F", "Foster672G", "Foster674A", "Foster680A", "Foster680B", 
     "Foster686A", "Foster686B", "Foster686C", "Foster688A", "Foster698A", 
     "Foster702A", "Foster702B", "Foster720A", "Foster720B", "Foster720C", 
     "Foster720D", "Foster720E", "Foster720F", "Foster722A", "Foster722B", 
     "Foster726A", "Foster728A", "Foster728B", "Foster728C", "Foster728D", 
     "Foster728E", "Foster728F", "Foster728G", "Foster734A", "Foster744A", 
     "Foster744B", "Foster746A", "Foster750A", "Foster758A", "Foster762A", 
     "Foster768A", "Foster768B", "Foster768C", "Foster768D", "Foster768E", 
     "Foster768F", "Foster768G", "Foster774A", "Foster776A", "Foster784A", 
     "Foster784B", "Foster794A", "Foster798A", "Foster798B", "Foster800A", 
     "Foster806A", "Foster806B", "Foster816A", "Foster816B", "Foster816C", 
     "Foster816D", "Foster816E", "Foster816F", "Foster816G", "Foster816H", 
     "Foster816I", "Foster818A", "Foster824A", "Foster832A", "Foster834A", 
     "Foster840A", "Foster840B", "Foster842A", "Foster854A", "Foster854B", 
     "Foster864A", "Foster864B", "Foster864C", "Foster864D", "Foster866A", 
     "Foster872A", "Foster878A", "Foster880A", "Foster880B", "Foster880C", 
     "Foster882A", "Foster882B", "Foster888A", "Foster888B", "Foster896A", 
     "Foster896B", "Foster896C", "Foster896D", "Foster896E", "Foster906A", 
     "Foster912A", "Foster912B", "Foster914A", "Foster926A", "Foster936A", 
     "Foster936B", "Foster936C", "Foster938A", "Foster938B", "Foster942A", 
     "Foster950A", "Foster960A", "Foster960B", "Foster960C", "Foster962A", 
     "Foster962B", "Foster968A", "Foster974A", "Foster976A", "Foster978A", 
     "Foster992A", "Foster998A", "FourDodecahedra", "FourthapexGraph", 
     "FranklinGraph", "FruchtGraph", {"Fullerene", {26, 1}}, {
     "Fullerene", {28, 1}}, {"Fullerene", {28, 2}}, {"Fullerene", {30, 1}}, {
     "Fullerene", {30, 2}}, {"Fullerene", {30, 3}}, {"Fullerene", {32, 1}}, {
     "Fullerene", {32, 2}}, {"Fullerene", {32, 3}}, {"Fullerene", {32, 4}}, {
     "Fullerene", {32, 5}}, {"Fullerene", {32, 6}}, {"Fullerene", {34, 1}}, {
     "Fullerene", {34, 2}}, {"Fullerene", {34, 3}}, {"Fullerene", {34, 4}}, {
     "Fullerene", {34, 5}}, {"Fullerene", {34, 6}}, {"Fullerene", {36, 1}}, {
     "Fullerene", {36, 2}}, {"Fullerene", {36, 3}}, {"Fullerene", {36, 4}}, {
     "Fullerene", {36, 5}}, {"Fullerene", {36, 6}}, {"Fullerene", {36, 7}}, {
     "Fullerene", {36, 8}}, {"Fullerene", {36, 9}}, {"Fullerene", {36, 10}}, {
     "Fullerene", {36, 11}}, {"Fullerene", {36, 12}}, {
     "Fullerene", {36, 13}}, {"Fullerene", {36, 14}}, {
     "Fullerene", {36, 15}}, {"Fullerene", {38, 1}}, {"Fullerene", {38, 2}}, {
     "Fullerene", {38, 3}}, {"Fullerene", {38, 4}}, {"Fullerene", {38, 5}}, {
     "Fullerene", {38, 6}}, {"Fullerene", {38, 7}}, {"Fullerene", {38, 8}}, {
     "Fullerene", {38, 9}}, {"Fullerene", {38, 10}}, {
     "Fullerene", {38, 11}}, {"Fullerene", {38, 12}}, {
     "Fullerene", {38, 13}}, {"Fullerene", {38, 14}}, {
     "Fullerene", {38, 15}}, {"Fullerene", {38, 16}}, {
     "Fullerene", {38, 17}}, {"Fullerene", {40, 1}}, {"Fullerene", {40, 2}}, {
     "Fullerene", {40, 3}}, {"Fullerene", {40, 4}}, {"Fullerene", {40, 5}}, {
     "Fullerene", {40, 6}}, {"Fullerene", {40, 7}}, {"Fullerene", {40, 8}}, {
     "Fullerene", {40, 9}}, {"Fullerene", {40, 10}}, {
     "Fullerene", {40, 11}}, {"Fullerene", {40, 12}}, {
     "Fullerene", {40, 13}}, {"Fullerene", {40, 14}}, {
     "Fullerene", {40, 15}}, {"Fullerene", {40, 16}}, {
     "Fullerene", {40, 17}}, {"Fullerene", {40, 18}}, {
     "Fullerene", {40, 19}}, {"Fullerene", {40, 20}}, {
     "Fullerene", {40, 21}}, {"Fullerene", {40, 22}}, {
     "Fullerene", {40, 23}}, {"Fullerene", {40, 24}}, {
     "Fullerene", {40, 25}}, {"Fullerene", {40, 26}}, {
     "Fullerene", {40, 27}}, {"Fullerene", {40, 28}}, {
     "Fullerene", {40, 29}}, {"Fullerene", {40, 30}}, {
     "Fullerene", {40, 31}}, {"Fullerene", {40, 32}}, {
     "Fullerene", {40, 33}}, {"Fullerene", {40, 34}}, {
     "Fullerene", {40, 35}}, {"Fullerene", {40, 36}}, {
     "Fullerene", {40, 37}}, {"Fullerene", {40, 38}}, {
     "Fullerene", {40, 39}}, {"Fullerene", {40, 40}}, {
     "Fullerene", {42, 1}}, {"Fullerene", {42, 2}}, {"Fullerene", {42, 3}}, {
     "Fullerene", {42, 4}}, {"Fullerene", {42, 5}}, {"Fullerene", {42, 6}}, {
     "Fullerene", {42, 7}}, {"Fullerene", {42, 8}}, {"Fullerene", {42, 9}}, {
     "Fullerene", {42, 10}}, {"Fullerene", {42, 11}}, {
     "Fullerene", {42, 12}}, {"Fullerene", {42, 13}}, {
     "Fullerene", {42, 14}}, {"Fullerene", {42, 15}}, {
     "Fullerene", {42, 16}}, {"Fullerene", {42, 17}}, {
     "Fullerene", {42, 18}}, {"Fullerene", {42, 19}}, {
     "Fullerene", {42, 20}}, {"Fullerene", {42, 21}}, {
     "Fullerene", {42, 22}}, {"Fullerene", {42, 23}}, {
     "Fullerene", {42, 24}}, {"Fullerene", {42, 25}}, {
     "Fullerene", {42, 26}}, {"Fullerene", {42, 27}}, {
     "Fullerene", {42, 28}}, {"Fullerene", {42, 29}}, {
     "Fullerene", {42, 30}}, {"Fullerene", {42, 31}}, {
     "Fullerene", {42, 32}}, {"Fullerene", {42, 33}}, {
     "Fullerene", {42, 34}}, {"Fullerene", {42, 35}}, {
     "Fullerene", {42, 36}}, {"Fullerene", {42, 37}}, {
     "Fullerene", {42, 38}}, {"Fullerene", {42, 39}}, {
     "Fullerene", {42, 40}}, {"Fullerene", {42, 41}}, {
     "Fullerene", {42, 42}}, {"Fullerene", {42, 43}}, {
     "Fullerene", {42, 44}}, {"Fullerene", {42, 45}}, {
     "Fullerene", {44, 1}}, {"Fullerene", {44, 2}}, {"Fullerene", {44, 3}}, {
     "Fullerene", {44, 4}}, {"Fullerene", {44, 5}}, {"Fullerene", {44, 6}}, {
     "Fullerene", {44, 7}}, {"Fullerene", {44, 8}}, {"Fullerene", {44, 9}}, {
     "Fullerene", {44, 10}}, {"Fullerene", {44, 11}}, {
     "Fullerene", {44, 12}}, {"Fullerene", {44, 13}}, {
     "Fullerene", {44, 14}}, {"Fullerene", {44, 15}}, {
     "Fullerene", {44, 16}}, {"Fullerene", {44, 17}}, {
     "Fullerene", {44, 18}}, {"Fullerene", {44, 19}}, {
     "Fullerene", {44, 20}}, {"Fullerene", {44, 21}}, {
     "Fullerene", {44, 22}}, {"Fullerene", {44, 23}}, {
     "Fullerene", {44, 24}}, {"Fullerene", {44, 25}}, {
     "Fullerene", {44, 26}}, {"Fullerene", {44, 27}}, {
     "Fullerene", {44, 28}}, {"Fullerene", {44, 29}}, {
     "Fullerene", {44, 30}}, {"Fullerene", {44, 31}}, {
     "Fullerene", {44, 32}}, {"Fullerene", {44, 33}}, {
     "Fullerene", {44, 34}}, {"Fullerene", {44, 35}}, {
     "Fullerene", {44, 36}}, {"Fullerene", {44, 37}}, {
     "Fullerene", {44, 38}}, {"Fullerene", {44, 39}}, {
     "Fullerene", {44, 40}}, {"Fullerene", {44, 41}}, {
     "Fullerene", {44, 42}}, {"Fullerene", {44, 43}}, {
     "Fullerene", {44, 44}}, {"Fullerene", {44, 45}}, {
     "Fullerene", {44, 46}}, {"Fullerene", {44, 47}}, {
     "Fullerene", {44, 48}}, {"Fullerene", {44, 49}}, {
     "Fullerene", {44, 50}}, {"Fullerene", {44, 51}}, {
     "Fullerene", {44, 52}}, {"Fullerene", {44, 53}}, {
     "Fullerene", {44, 54}}, {"Fullerene", {44, 55}}, {
     "Fullerene", {44, 56}}, {"Fullerene", {44, 57}}, {
     "Fullerene", {44, 58}}, {"Fullerene", {44, 59}}, {
     "Fullerene", {44, 60}}, {"Fullerene", {44, 61}}, {
     "Fullerene", {44, 62}}, {"Fullerene", {44, 63}}, {
     "Fullerene", {44, 64}}, {"Fullerene", {44, 65}}, {
     "Fullerene", {44, 66}}, {"Fullerene", {44, 67}}, {
     "Fullerene", {44, 68}}, {"Fullerene", {44, 69}}, {
     "Fullerene", {44, 70}}, {"Fullerene", {44, 71}}, {
     "Fullerene", {44, 72}}, {"Fullerene", {44, 73}}, {
     "Fullerene", {44, 74}}, {"Fullerene", {44, 75}}, {
     "Fullerene", {44, 76}}, {"Fullerene", {44, 77}}, {
     "Fullerene", {44, 78}}, {"Fullerene", {44, 79}}, {
     "Fullerene", {44, 80}}, {"Fullerene", {44, 81}}, {
     "Fullerene", {44, 82}}, {"Fullerene", {44, 83}}, {
     "Fullerene", {44, 84}}, {"Fullerene", {44, 85}}, {
     "Fullerene", {44, 86}}, {"Fullerene", {44, 87}}, {
     "Fullerene", {44, 88}}, {"Fullerene", {44, 89}}, {
     "Fullerene", {46, 1}}, {"Fullerene", {46, 2}}, {"Fullerene", {46, 3}}, {
     "Fullerene", {46, 4}}, {"Fullerene", {46, 5}}, {"Fullerene", {46, 6}}, {
     "Fullerene", {46, 7}}, {"Fullerene", {46, 8}}, {"Fullerene", {46, 9}}, {
     "Fullerene", {46, 10}}, {"Fullerene", {46, 11}}, {
     "Fullerene", {46, 12}}, {"Fullerene", {46, 13}}, {
     "Fullerene", {46, 14}}, {"Fullerene", {46, 15}}, {
     "Fullerene", {46, 16}}, {"Fullerene", {46, 17}}, {
     "Fullerene", {46, 18}}, {"Fullerene", {46, 19}}, {
     "Fullerene", {46, 20}}, {"Fullerene", {46, 21}}, {
     "Fullerene", {46, 22}}, {"Fullerene", {46, 23}}, {
     "Fullerene", {46, 24}}, {"Fullerene", {46, 25}}, {
     "Fullerene", {46, 26}}, {"Fullerene", {46, 27}}, {
     "Fullerene", {46, 28}}, {"Fullerene", {46, 29}}, {
     "Fullerene", {46, 30}}, {"Fullerene", {46, 31}}, {
     "Fullerene", {46, 32}}, {"Fullerene", {46, 33}}, {
     "Fullerene", {46, 34}}, {"Fullerene", {46, 35}}, {
     "Fullerene", {46, 36}}, {"Fullerene", {46, 37}}, {
     "Fullerene", {46, 38}}, {"Fullerene", {46, 39}}, {
     "Fullerene", {46, 40}}, {"Fullerene", {46, 41}}, {
     "Fullerene", {46, 42}}, {"Fullerene", {46, 43}}, {
     "Fullerene", {46, 44}}, {"Fullerene", {46, 45}}, {
     "Fullerene", {46, 46}}, {"Fullerene", {46, 47}}, {
     "Fullerene", {46, 48}}, {"Fullerene", {46, 49}}, {
     "Fullerene", {46, 50}}, {"Fullerene", {46, 51}}, {
     "Fullerene", {46, 52}}, {"Fullerene", {46, 53}}, {
     "Fullerene", {46, 54}}, {"Fullerene", {46, 55}}, {
     "Fullerene", {46, 56}}, {"Fullerene", {46, 57}}, {
     "Fullerene", {46, 58}}, {"Fullerene", {46, 59}}, {
     "Fullerene", {46, 60}}, {"Fullerene", {46, 61}}, {
     "Fullerene", {46, 62}}, {"Fullerene", {46, 63}}, {
     "Fullerene", {46, 64}}, {"Fullerene", {46, 65}}, {
     "Fullerene", {46, 66}}, {"Fullerene", {46, 67}}, {
     "Fullerene", {46, 68}}, {"Fullerene", {46, 69}}, {
     "Fullerene", {46, 70}}, {"Fullerene", {46, 71}}, {
     "Fullerene", {46, 72}}, {"Fullerene", {46, 73}}, {
     "Fullerene", {46, 74}}, {"Fullerene", {46, 75}}, {
     "Fullerene", {46, 76}}, {"Fullerene", {46, 77}}, {
     "Fullerene", {46, 78}}, {"Fullerene", {46, 79}}, {
     "Fullerene", {46, 80}}, {"Fullerene", {46, 81}}, {
     "Fullerene", {46, 82}}, {"Fullerene", {46, 83}}, {
     "Fullerene", {46, 84}}, {"Fullerene", {46, 85}}, {
     "Fullerene", {46, 86}}, {"Fullerene", {46, 87}}, {
     "Fullerene", {46, 88}}, {"Fullerene", {46, 89}}, {
     "Fullerene", {46, 90}}, {"Fullerene", {46, 91}}, {
     "Fullerene", {46, 92}}, {"Fullerene", {46, 93}}, {
     "Fullerene", {46, 94}}, {"Fullerene", {46, 95}}, {
     "Fullerene", {46, 96}}, {"Fullerene", {46, 97}}, {
     "Fullerene", {46, 98}}, {"Fullerene", {46, 99}}, {
     "Fullerene", {46, 100}}, {"Fullerene", {46, 101}}, {
     "Fullerene", {46, 102}}, {"Fullerene", {46, 103}}, {
     "Fullerene", {46, 104}}, {"Fullerene", {46, 105}}, {
     "Fullerene", {46, 106}}, {"Fullerene", {46, 107}}, {
     "Fullerene", {46, 108}}, {"Fullerene", {46, 109}}, {
     "Fullerene", {46, 110}}, {"Fullerene", {46, 111}}, {
     "Fullerene", {46, 112}}, {"Fullerene", {46, 113}}, {
     "Fullerene", {46, 114}}, {"Fullerene", {46, 115}}, {
     "Fullerene", {46, 116}}, {"Fullerene", {48, 1}}, {
     "Fullerene", {48, 2}}, {"Fullerene", {48, 3}}, {"Fullerene", {48, 4}}, {
     "Fullerene", {48, 5}}, {"Fullerene", {48, 6}}, {"Fullerene", {48, 7}}, {
     "Fullerene", {48, 8}}, {"Fullerene", {48, 9}}, {"Fullerene", {48, 10}}, {
     "Fullerene", {48, 11}}, {"Fullerene", {48, 12}}, {
     "Fullerene", {48, 13}}, {"Fullerene", {48, 14}}, {
     "Fullerene", {48, 15}}, {"Fullerene", {48, 16}}, {
     "Fullerene", {48, 17}}, {"Fullerene", {48, 18}}, {
     "Fullerene", {48, 19}}, {"Fullerene", {48, 20}}, {
     "Fullerene", {48, 21}}, {"Fullerene", {48, 22}}, {
     "Fullerene", {48, 23}}, {"Fullerene", {48, 24}}, {
     "Fullerene", {48, 25}}, {"Fullerene", {48, 26}}, {
     "Fullerene", {48, 27}}, {"Fullerene", {48, 28}}, {
     "Fullerene", {48, 29}}, {"Fullerene", {48, 30}}, {
     "Fullerene", {48, 31}}, {"Fullerene", {48, 32}}, {
     "Fullerene", {48, 33}}, {"Fullerene", {48, 34}}, {
     "Fullerene", {48, 35}}, {"Fullerene", {48, 36}}, {
     "Fullerene", {48, 37}}, {"Fullerene", {48, 38}}, {
     "Fullerene", {48, 39}}, {"Fullerene", {48, 40}}, {
     "Fullerene", {48, 41}}, {"Fullerene", {48, 42}}, {
     "Fullerene", {48, 43}}, {"Fullerene", {48, 44}}, {
     "Fullerene", {48, 45}}, {"Fullerene", {48, 46}}, {
     "Fullerene", {48, 47}}, {"Fullerene", {48, 48}}, {
     "Fullerene", {48, 49}}, {"Fullerene", {48, 50}}, {
     "Fullerene", {48, 51}}, {"Fullerene", {48, 52}}, {
     "Fullerene", {48, 53}}, {"Fullerene", {48, 54}}, {
     "Fullerene", {48, 55}}, {"Fullerene", {48, 56}}, {
     "Fullerene", {48, 57}}, {"Fullerene", {48, 58}}, {
     "Fullerene", {48, 59}}, {"Fullerene", {48, 60}}, {
     "Fullerene", {48, 61}}, {"Fullerene", {48, 62}}, {
     "Fullerene", {48, 63}}, {"Fullerene", {48, 64}}, {
     "Fullerene", {48, 65}}, {"Fullerene", {48, 66}}, {
     "Fullerene", {48, 67}}, {"Fullerene", {48, 68}}, {
     "Fullerene", {48, 69}}, {"Fullerene", {48, 70}}, {
     "Fullerene", {48, 71}}, {"Fullerene", {48, 72}}, {
     "Fullerene", {48, 73}}, {"Fullerene", {48, 74}}, {
     "Fullerene", {48, 75}}, {"Fullerene", {48, 76}}, {
     "Fullerene", {48, 77}}, {"Fullerene", {48, 78}}, {
     "Fullerene", {48, 79}}, {"Fullerene", {48, 80}}, {
     "Fullerene", {48, 81}}, {"Fullerene", {48, 82}}, {
     "Fullerene", {48, 83}}, {"Fullerene", {48, 84}}, {
     "Fullerene", {48, 85}}, {"Fullerene", {48, 86}}, {
     "Fullerene", {48, 87}}, {"Fullerene", {48, 88}}, {
     "Fullerene", {48, 89}}, {"Fullerene", {48, 90}}, {
     "Fullerene", {48, 91}}, {"Fullerene", {48, 92}}, {
     "Fullerene", {48, 93}}, {"Fullerene", {48, 94}}, {
     "Fullerene", {48, 95}}, {"Fullerene", {48, 96}}, {
     "Fullerene", {48, 97}}, {"Fullerene", {48, 98}}, {
     "Fullerene", {48, 99}}, {"Fullerene", {48, 100}}, {
     "Fullerene", {48, 101}}, {"Fullerene", {48, 102}}, {
     "Fullerene", {48, 103}}, {"Fullerene", {48, 104}}, {
     "Fullerene", {48, 105}}, {"Fullerene", {48, 106}}, {
     "Fullerene", {48, 107}}, {"Fullerene", {48, 108}}, {
     "Fullerene", {48, 109}}, {"Fullerene", {48, 110}}, {
     "Fullerene", {48, 111}}, {"Fullerene", {48, 112}}, {
     "Fullerene", {48, 113}}, {"Fullerene", {48, 114}}, {
     "Fullerene", {48, 115}}, {"Fullerene", {48, 116}}, {
     "Fullerene", {48, 117}}, {"Fullerene", {48, 118}}, {
     "Fullerene", {48, 119}}, {"Fullerene", {48, 120}}, {
     "Fullerene", {48, 121}}, {"Fullerene", {48, 122}}, {
     "Fullerene", {48, 123}}, {"Fullerene", {48, 124}}, {
     "Fullerene", {48, 125}}, {"Fullerene", {48, 126}}, {
     "Fullerene", {48, 127}}, {"Fullerene", {48, 128}}, {
     "Fullerene", {48, 129}}, {"Fullerene", {48, 130}}, {
     "Fullerene", {48, 131}}, {"Fullerene", {48, 132}}, {
     "Fullerene", {48, 133}}, {"Fullerene", {48, 134}}, {
     "Fullerene", {48, 135}}, {"Fullerene", {48, 136}}, {
     "Fullerene", {48, 137}}, {"Fullerene", {48, 138}}, {
     "Fullerene", {48, 139}}, {"Fullerene", {48, 140}}, {
     "Fullerene", {48, 141}}, {"Fullerene", {48, 142}}, {
     "Fullerene", {48, 143}}, {"Fullerene", {48, 144}}, {
     "Fullerene", {48, 145}}, {"Fullerene", {48, 146}}, {
     "Fullerene", {48, 147}}, {"Fullerene", {48, 148}}, {
     "Fullerene", {48, 149}}, {"Fullerene", {48, 150}}, {
     "Fullerene", {48, 151}}, {"Fullerene", {48, 152}}, {
     "Fullerene", {48, 153}}, {"Fullerene", {48, 154}}, {
     "Fullerene", {48, 155}}, {"Fullerene", {48, 156}}, {
     "Fullerene", {48, 157}}, {"Fullerene", {48, 158}}, {
     "Fullerene", {48, 159}}, {"Fullerene", {48, 160}}, {
     "Fullerene", {48, 161}}, {"Fullerene", {48, 162}}, {
     "Fullerene", {48, 163}}, {"Fullerene", {48, 164}}, {
     "Fullerene", {48, 165}}, {"Fullerene", {48, 166}}, {
     "Fullerene", {48, 167}}, {"Fullerene", {48, 168}}, {
     "Fullerene", {48, 169}}, {"Fullerene", {48, 170}}, {
     "Fullerene", {48, 171}}, {"Fullerene", {48, 172}}, {
     "Fullerene", {48, 173}}, {"Fullerene", {48, 174}}, {
     "Fullerene", {48, 175}}, {"Fullerene", {48, 176}}, {
     "Fullerene", {48, 177}}, {"Fullerene", {48, 178}}, {
     "Fullerene", {48, 179}}, {"Fullerene", {48, 180}}, {
     "Fullerene", {48, 181}}, {"Fullerene", {48, 182}}, {
     "Fullerene", {48, 183}}, {"Fullerene", {48, 184}}, {
     "Fullerene", {48, 185}}, {"Fullerene", {48, 186}}, {
     "Fullerene", {48, 187}}, {"Fullerene", {48, 188}}, {
     "Fullerene", {48, 189}}, {"Fullerene", {48, 190}}, {
     "Fullerene", {48, 191}}, {"Fullerene", {48, 192}}, {
     "Fullerene", {48, 193}}, {"Fullerene", {48, 194}}, {
     "Fullerene", {48, 195}}, {"Fullerene", {48, 196}}, {
     "Fullerene", {48, 197}}, {"Fullerene", {48, 198}}, {
     "Fullerene", {48, 199}}, {"Fullerene", {50, 1}}, {
     "Fullerene", {50, 2}}, {"Fullerene", {50, 3}}, {"Fullerene", {50, 4}}, {
     "Fullerene", {50, 5}}, {"Fullerene", {50, 6}}, {"Fullerene", {50, 7}}, {
     "Fullerene", {50, 8}}, {"Fullerene", {50, 9}}, {"Fullerene", {50, 10}}, {
     "Fullerene", {50, 11}}, {"Fullerene", {50, 12}}, {
     "Fullerene", {50, 13}}, {"Fullerene", {50, 14}}, {
     "Fullerene", {50, 15}}, {"Fullerene", {50, 16}}, {
     "Fullerene", {50, 17}}, {"Fullerene", {50, 18}}, {
     "Fullerene", {50, 19}}, {"Fullerene", {50, 20}}, {
     "Fullerene", {50, 21}}, {"Fullerene", {50, 22}}, {
     "Fullerene", {50, 23}}, {"Fullerene", {50, 24}}, {
     "Fullerene", {50, 25}}, {"Fullerene", {50, 26}}, {
     "Fullerene", {50, 27}}, {"Fullerene", {50, 28}}, {
     "Fullerene", {50, 29}}, {"Fullerene", {50, 30}}, {
     "Fullerene", {50, 31}}, {"Fullerene", {50, 32}}, {
     "Fullerene", {50, 33}}, {"Fullerene", {50, 34}}, {
     "Fullerene", {50, 35}}, {"Fullerene", {50, 36}}, {
     "Fullerene", {50, 37}}, {"Fullerene", {50, 38}}, {
     "Fullerene", {50, 39}}, {"Fullerene", {50, 40}}, {
     "Fullerene", {50, 41}}, {"Fullerene", {50, 42}}, {
     "Fullerene", {50, 43}}, {"Fullerene", {50, 44}}, {
     "Fullerene", {50, 45}}, {"Fullerene", {50, 46}}, {
     "Fullerene", {50, 47}}, {"Fullerene", {50, 48}}, {
     "Fullerene", {50, 49}}, {"Fullerene", {50, 50}}, {
     "Fullerene", {50, 51}}, {"Fullerene", {50, 52}}, {
     "Fullerene", {50, 53}}, {"Fullerene", {50, 54}}, {
     "Fullerene", {50, 55}}, {"Fullerene", {50, 56}}, {
     "Fullerene", {50, 57}}, {"Fullerene", {50, 58}}, {
     "Fullerene", {50, 59}}, {"Fullerene", {50, 60}}, {
     "Fullerene", {50, 61}}, {"Fullerene", {50, 62}}, {
     "Fullerene", {50, 63}}, {"Fullerene", {50, 64}}, {
     "Fullerene", {50, 65}}, {"Fullerene", {50, 66}}, {
     "Fullerene", {50, 67}}, {"Fullerene", {50, 68}}, {
     "Fullerene", {50, 69}}, {"Fullerene", {50, 70}}, {
     "Fullerene", {50, 71}}, {"Fullerene", {50, 72}}, {
     "Fullerene", {50, 73}}, {"Fullerene", {50, 74}}, {
     "Fullerene", {50, 75}}, {"Fullerene", {50, 76}}, {
     "Fullerene", {50, 77}}, {"Fullerene", {50, 78}}, {
     "Fullerene", {50, 79}}, {"Fullerene", {50, 80}}, {
     "Fullerene", {50, 81}}, {"Fullerene", {50, 82}}, {
     "Fullerene", {50, 83}}, {"Fullerene", {50, 84}}, {
     "Fullerene", {50, 85}}, {"Fullerene", {50, 86}}, {
     "Fullerene", {50, 87}}, {"Fullerene", {50, 88}}, {
     "Fullerene", {50, 89}}, {"Fullerene", {50, 90}}, {
     "Fullerene", {50, 91}}, {"Fullerene", {50, 92}}, {
     "Fullerene", {50, 93}}, {"Fullerene", {50, 94}}, {
     "Fullerene", {50, 95}}, {"Fullerene", {50, 96}}, {
     "Fullerene", {50, 97}}, {"Fullerene", {50, 98}}, {
     "Fullerene", {50, 99}}, {"Fullerene", {50, 100}}, {
     "Fullerene", {50, 101}}, {"Fullerene", {50, 102}}, {
     "Fullerene", {50, 103}}, {"Fullerene", {50, 104}}, {
     "Fullerene", {50, 105}}, {"Fullerene", {50, 106}}, {
     "Fullerene", {50, 107}}, {"Fullerene", {50, 108}}, {
     "Fullerene", {50, 109}}, {"Fullerene", {50, 110}}, {
     "Fullerene", {50, 111}}, {"Fullerene", {50, 112}}, {
     "Fullerene", {50, 113}}, {"Fullerene", {50, 114}}, {
     "Fullerene", {50, 115}}, {"Fullerene", {50, 116}}, {
     "Fullerene", {50, 117}}, {"Fullerene", {50, 118}}, {
     "Fullerene", {50, 119}}, {"Fullerene", {50, 120}}, {
     "Fullerene", {50, 121}}, {"Fullerene", {50, 122}}, {
     "Fullerene", {50, 123}}, {"Fullerene", {50, 124}}, {
     "Fullerene", {50, 125}}, {"Fullerene", {50, 126}}, {
     "Fullerene", {50, 127}}, {"Fullerene", {50, 128}}, {
     "Fullerene", {50, 129}}, {"Fullerene", {50, 130}}, {
     "Fullerene", {50, 131}}, {"Fullerene", {50, 132}}, {
     "Fullerene", {50, 133}}, {"Fullerene", {50, 134}}, {
     "Fullerene", {50, 135}}, {"Fullerene", {50, 136}}, {
     "Fullerene", {50, 137}}, {"Fullerene", {50, 138}}, {
     "Fullerene", {50, 139}}, {"Fullerene", {50, 140}}, {
     "Fullerene", {50, 141}}, {"Fullerene", {50, 142}}, {
     "Fullerene", {50, 143}}, {"Fullerene", {50, 144}}, {
     "Fullerene", {50, 145}}, {"Fullerene", {50, 146}}, {
     "Fullerene", {50, 147}}, {"Fullerene", {50, 148}}, {
     "Fullerene", {50, 149}}, {"Fullerene", {50, 150}}, {
     "Fullerene", {50, 151}}, {"Fullerene", {50, 152}}, {
     "Fullerene", {50, 153}}, {"Fullerene", {50, 154}}, {
     "Fullerene", {50, 155}}, {"Fullerene", {50, 156}}, {
     "Fullerene", {50, 157}}, {"Fullerene", {50, 158}}, {
     "Fullerene", {50, 159}}, {"Fullerene", {50, 160}}, {
     "Fullerene", {50, 161}}, {"Fullerene", {50, 162}}, {
     "Fullerene", {50, 163}}, {"Fullerene", {50, 164}}, {
     "Fullerene", {50, 165}}, {"Fullerene", {50, 166}}, {
     "Fullerene", {50, 167}}, {"Fullerene", {50, 168}}, {
     "Fullerene", {50, 169}}, {"Fullerene", {50, 170}}, {
     "Fullerene", {50, 171}}, {"Fullerene", {50, 172}}, {
     "Fullerene", {50, 173}}, {"Fullerene", {50, 174}}, {
     "Fullerene", {50, 175}}, {"Fullerene", {50, 176}}, {
     "Fullerene", {50, 177}}, {"Fullerene", {50, 178}}, {
     "Fullerene", {50, 179}}, {"Fullerene", {50, 180}}, {
     "Fullerene", {50, 181}}, {"Fullerene", {50, 182}}, {
     "Fullerene", {50, 183}}, {"Fullerene", {50, 184}}, {
     "Fullerene", {50, 185}}, {"Fullerene", {50, 186}}, {
     "Fullerene", {50, 187}}, {"Fullerene", {50, 188}}, {
     "Fullerene", {50, 189}}, {"Fullerene", {50, 190}}, {
     "Fullerene", {50, 191}}, {"Fullerene", {50, 192}}, {
     "Fullerene", {50, 193}}, {"Fullerene", {50, 194}}, {
     "Fullerene", {50, 195}}, {"Fullerene", {50, 196}}, {
     "Fullerene", {50, 197}}, {"Fullerene", {50, 198}}, {
     "Fullerene", {50, 199}}, {"Fullerene", {50, 200}}, {
     "Fullerene", {50, 201}}, {"Fullerene", {50, 202}}, {
     "Fullerene", {50, 203}}, {"Fullerene", {50, 204}}, {
     "Fullerene", {50, 205}}, {"Fullerene", {50, 206}}, {
     "Fullerene", {50, 207}}, {"Fullerene", {50, 208}}, {
     "Fullerene", {50, 209}}, {"Fullerene", {50, 210}}, {
     "Fullerene", {50, 211}}, {"Fullerene", {50, 212}}, {
     "Fullerene", {50, 213}}, {"Fullerene", {50, 214}}, {
     "Fullerene", {50, 215}}, {"Fullerene", {50, 216}}, {
     "Fullerene", {50, 217}}, {"Fullerene", {50, 218}}, {
     "Fullerene", {50, 219}}, {"Fullerene", {50, 220}}, {
     "Fullerene", {50, 221}}, {"Fullerene", {50, 222}}, {
     "Fullerene", {50, 223}}, {"Fullerene", {50, 224}}, {
     "Fullerene", {50, 225}}, {"Fullerene", {50, 226}}, {
     "Fullerene", {50, 227}}, {"Fullerene", {50, 228}}, {
     "Fullerene", {50, 229}}, {"Fullerene", {50, 230}}, {
     "Fullerene", {50, 231}}, {"Fullerene", {50, 232}}, {
     "Fullerene", {50, 233}}, {"Fullerene", {50, 234}}, {
     "Fullerene", {50, 235}}, {"Fullerene", {50, 236}}, {
     "Fullerene", {50, 237}}, {"Fullerene", {50, 238}}, {
     "Fullerene", {50, 239}}, {"Fullerene", {50, 240}}, {
     "Fullerene", {50, 241}}, {"Fullerene", {50, 242}}, {
     "Fullerene", {50, 243}}, {"Fullerene", {50, 244}}, {
     "Fullerene", {50, 245}}, {"Fullerene", {50, 246}}, {
     "Fullerene", {50, 247}}, {"Fullerene", {50, 248}}, {
     "Fullerene", {50, 249}}, {"Fullerene", {50, 250}}, {
     "Fullerene", {50, 251}}, {"Fullerene", {50, 252}}, {
     "Fullerene", {50, 253}}, {"Fullerene", {50, 254}}, {
     "Fullerene", {50, 255}}, {"Fullerene", {50, 256}}, {
     "Fullerene", {50, 257}}, {"Fullerene", {50, 258}}, {
     "Fullerene", {50, 259}}, {"Fullerene", {50, 260}}, {
     "Fullerene", {50, 261}}, {"Fullerene", {50, 262}}, {
     "Fullerene", {50, 263}}, {"Fullerene", {50, 264}}, {
     "Fullerene", {50, 265}}, {"Fullerene", {50, 266}}, {
     "Fullerene", {50, 267}}, {"Fullerene", {50, 268}}, {
     "Fullerene", {50, 269}}, {"Fullerene", {50, 270}}, {
     "Fullerene", {50, 271}}, {"Fullerene", {60, 1}}, {
     "Fullerene", {70, 4085}}, {"Fullerene", {80, 6877}}, {
     "GeneralizedPetersen", {7, 2}}, {"GeneralizedPetersen", {8, 2}}, {
     "GeneralizedPetersen", {9, 2}}, {"GeneralizedPetersen", {9, 3}}, {
     "GeneralizedPetersen", {10, 4}}, {"GeneralizedPetersen", {11, 2}}, {
     "GeneralizedPetersen", {11, 3}}, {"GeneralizedPetersen", {12, 2}}, {
     "GeneralizedPetersen", {12, 3}}, {"GeneralizedPetersen", {12, 4}}, {
     "GeneralizedPetersen", {13, 2}}, {"GeneralizedPetersen", {13, 3}}, {
     "GeneralizedPetersen", {13, 5}}, {"GeneralizedPetersen", {14, 2}}, {
     "GeneralizedPetersen", {14, 3}}, {"GeneralizedPetersen", {14, 4}}, {
     "GeneralizedPetersen", {14, 6}}, {"GeneralizedPetersen", {15, 2}}, {
     "GeneralizedPetersen", {15, 3}}, {"GeneralizedPetersen", {15, 4}}, {
     "GeneralizedPetersen", {15, 5}}, {"GeneralizedPetersen", {15, 6}}, {
     "GeneralizedPetersen", {16, 2}}, {"GeneralizedPetersen", {16, 3}}, {
     "GeneralizedPetersen", {16, 4}}, {"GeneralizedPetersen", {16, 6}}, {
     "GeneralizedPetersen", {16, 7}}, {"GeneralizedPetersen", {17, 2}}, {
     "GeneralizedPetersen", {17, 3}}, {"GeneralizedPetersen", {17, 4}}, {
     "GeneralizedPetersen", {17, 5}}, {"GeneralizedPetersen", {18, 2}}, {
     "GeneralizedPetersen", {18, 3}}, {"GeneralizedPetersen", {18, 4}}, {
     "GeneralizedPetersen", {18, 5}}, {"GeneralizedPetersen", {18, 6}}, {
     "GeneralizedPetersen", {18, 8}}, {"GeneralizedPetersen", {19, 2}}, {
     "GeneralizedPetersen", {19, 3}}, {"GeneralizedPetersen", {19, 4}}, {
     "GeneralizedPetersen", {19, 7}}, {"GeneralizedPetersen", {20, 2}}, {
     "GeneralizedPetersen", {20, 3}}, {"GeneralizedPetersen", {20, 4}}, {
     "GeneralizedPetersen", {20, 5}}, {"GeneralizedPetersen", {20, 6}}, {
     "GeneralizedPetersen", {20, 8}}, {"GeneralizedPetersen", {20, 9}}, {
     "GeneralizedPetersen", {22, 4}}, {"GeneralizedPetersen", {23, 5}}, {
     "GeneralizedPetersen", {24, 5}}, {"GeneralizedPetersen", {24, 11}}, {
     "GeneralizedPetersen", {25, 9}}, {"GeneralizedPetersen", {27, 2}}, {
     "GeneralizedPetersen", {27, 9}}, {"GeneralizedPetersen", {29, 8}}, {
     "GeneralizedPetersen", {30, 11}}, {"GeneralizedPetersen", {31, 11}}, 
     "GeorgesGraph", {"Goldberg", 3}, {"Goldberg", 4}, {"Goldberg", 5}, {
     "Goldberg", 6}, {"Goldberg", 7}, {"Goldberg", 8}, {"Goldberg", 9}, {
     "Goldberg", 10}, {"Goldberg", 11}, {"Goldberg", 12}, {"Goldberg", 13}, {
     "Goldberg", 14}, {"Goldberg", 15}, {"Goldberg", 16}, {"Goldberg", 17}, {
     "Goldberg", 18}, {"Goldberg", 19}, {"Goldberg", 20}, "GrayGraph", 
     "GreatRhombicosidodecahedralGraph", "GreatRhombicuboctahedralGraph", 
     "GrinbergGraph42", "GrinbergGraph44", "GrinbergGraph46", 
     "GruenbaumGraph124", {"Haar", 536870930}, {"Halin", {10, 5}}, {
     "Halin", {10, 12}}, {"Halin", {10, 13}}, {"Halin", {12, 3}}, {
     "Halin", {12, 40}}, {"Halin", {12, 41}}, {"Halin", {14, 4}}, {
     "Halin", {14, 13}}, {"Halin", {14, 23}}, {"Halin", {14, 136}}, {
     "Halin", {14, 160}}, {"Halin", {14, 180}}, {"Halin", {14, 181}}, {
     "Halin", {14, 233}}, {"Halin", {14, 240}}, {"Halin", {14, 242}}, {
     "Halin", {14, 243}}, {"Halin", {14, 248}}, "HarriesGraph", 
     "HarriesWongGraph", "HeawoodGraph", {"HoneycombToroidal", {1, 36, 5}}, {
     "HoneycombToroidal", {1, 36, 7}}, {"HoneycombToroidal", {1, 36, 9}}, {
     "HoneycombToroidal", {1, 36, 11}}, {"HoneycombToroidal", {1, 38, 5}}, {
     "HoneycombToroidal", {1, 38, 7}}, {"HoneycombToroidal", {1, 40, 5}}, {
     "HoneycombToroidal", {1, 40, 7}}, {"HoneycombToroidal", {1, 40, 9}}, {
     "HoneycombToroidal", {1, 40, 11}}, {"HoneycombToroidal", {1, 40, 17}}, {
     "HoneycombToroidal", {1, 42, 5}}, {"HoneycombToroidal", {1, 42, 7}}, {
     "HoneycombToroidal", {1, 42, 13}}, {"HoneycombToroidal", {1, 42, 15}}, {
     "HoneycombToroidal", {1, 42, 17}}, {"HoneycombToroidal", {1, 44, 5}}, {
     "HoneycombToroidal", {1, 44, 7}}, {"HoneycombToroidal", {1, 44, 9}}, {
     "HoneycombToroidal", {1, 44, 11}}, {"HoneycombToroidal", {1, 46, 5}}, {
     "HoneycombToroidal", {1, 46, 7}}, {"HoneycombToroidal", {1, 46, 9}}, {
     "HoneycombToroidal", {1, 48, 5}}, {"HoneycombToroidal", {1, 48, 7}}, {
     "HoneycombToroidal", {1, 48, 9}}, {"HoneycombToroidal", {1, 48, 11}}, {
     "HoneycombToroidal", {1, 48, 13}}, {"HoneycombToroidal", {1, 48, 15}}, {
     "HoneycombToroidal", {1, 48, 17}}, {"HoneycombToroidal", {1, 48, 19}}, {
     "HoneycombToroidal", {1, 50, 5}}, {"HoneycombToroidal", {1, 50, 7}}, {
     "HoneycombToroidal", {1, 50, 9}}, {"HoneycombToroidal", {1, 50, 19}}, 
     "HortonGraph92", "HortonGraph96", {"IGraph", {12, 2, 3}}, {
     "IGraph", {12, 3, 4}}, {"IGraph", {15, 3, 5}}, {"IGraph", {18, 2, 3}}, {
     "IGraph", {20, 2, 5}}, {"IGraph", {20, 4, 5}}, {
     "Incidence", {{9, 3}, 1}}, {"Incidence", {{10, 3}, 3}}, {
     "Incidence", {{10, 3}, 5}}, {"Incidence", {{10, 3}, 7}}, {
     "Incidence", {{10, 3}, 8}}, {"Incidence", {{10, 3}, 9}}, {
     "IofinovaIvanov", 110}, "JabulaniSkeleton", "JawsGraph", "K3,3+2K4", 
     "K3,3+K4", "LeviGraph", "LjubljanaGraph", "LogGraph", "LoupekinesSnark1",
      "LoupekinesSnark2", "M3+K3,3", "M3+K4", "M3+Y3", "M5+K4", 
     "MarkstroemGraph", "McGeeGraph", {"MinimalRegularMatchstick", 3}, 
     "MoebiusKantorGraph", {"MoebiusLadder", 5}, {"MoebiusLadder", 6}, {
     "MoebiusLadder", 7}, {"MoebiusLadder", 8}, {"MoebiusLadder", 9}, {
     "MoebiusLadder", 10}, {"MoebiusLadder", 11}, {"MoebiusLadder", 12}, {
     "MoebiusLadder", 13}, {"MoebiusLadder", 14}, {"MoebiusLadder", 15}, {
     "MoebiusLadder", 16}, {"MoebiusLadder", 17}, {"MoebiusLadder", 18}, {
     "MoebiusLadder", 19}, {"MoebiusLadder", 20}, {"MoebiusLadder", 21}, {
     "MoebiusLadder", 22}, {"MoebiusLadder", 23}, {"MoebiusLadder", 24}, {
     "MoebiusLadder", 25}, "NauruGraph", "PappusGraph", 
     "PentagonalWedgeGraph", "PetersenGraph", "P+K4", {"Prism", 3}, {
     "Prism", 5}, {"Prism", 6}, {"Prism", 7}, {"Prism", 8}, {"Prism", 9}, {
     "Prism", 10}, {"Prism", 11}, {"Prism", 12}, {"Prism", 13}, {
     "Prism", 14}, {"Prism", 15}, {"Prism", 16}, {"Prism", 17}, {
     "Prism", 18}, {"Prism", 19}, {"Prism", 20}, {"Prism", 21}, {
     "Prism", 22}, {"Prism", 23}, {"Prism", 24}, {"Prism", 25}, "Q3+K3,3", 
     "Q3+K4", "Q3+Y3", "RefutedCrossingNumberGraph8D", 
     "RefutedCrossingNumberGraph8E", {
     "RegularNonplanarDiameter", {3, 3, 18}}, {
     "RegularNonplanarDiameter", {3, 3, 20}}, {
     "RegularNonplanarDiameter", {3, 4, 38}}, {
     "RegularNonplanarDiameter", {3, 5, 70}}, {
     "RegularNonplanarDiameter", {3, 6, 132}}, {
     "RegularNonplanarDiameter", {3, 7, 196}}, {
     "RegularNonplanarDiameter", {3, 8, 336}}, {
     "RegularNonplanarDiameter", {3, 9, 600}}, {
     "RegularNonplanarDiameter", {3, 3, 16, 1}}, {
     "RegularNonplanarDiameter", {3, 3, 16, 2}}, {
     "RegularNonplanarDiameter", {3, 3, 16, 3}}, {
     "RegularNonplanarDiameter", {3, 3, 16, 4}}, {
     "RegularNonplanarDiameter", {3, 3, 16, 5}}, {
     "RegularNonplanarDiameter", {3, 3, 16, 6}}, {
     "RegularNonplanarDiameter", {3, 3, 16, 7}}, {
     "RegularNonplanarDiameter", {3, 3, 16, 8}}, {
     "RegularNonplanarDiameter", {3, 3, 16, 9}}, {
     "RegularNonplanarDiameter", {3, 3, 16, 10}}, {
     "RegularNonplanarDiameter", {3, 3, 16, 11}}, {
     "RegularNonplanarDiameter", {3, 3, 16, 12}}, {
     "RegularNonplanarDiameter", {3, 3, 16, 13}}, {
     "RegularNonplanarDiameter", {3, 3, 16, 14}}, "RobertsonDiamondGraph", 
     "RollingGyroelongatedSquareDipyramidGraph", "RollingSnubDisphenoidGraph",
      "RollingTriangularDipyramidGraph", 
     "RollingTriaugmentedTriangularPrismGraph", "RubyGraph", "SailboatGraph", 
     "SecondapexGraph", "SixDodecahedra", {"Snark", {20, 1}}, {
     "Snark", {20, 2}}, {"Snark", {20, 3}}, {"Snark", {20, 4}}, {
     "Snark", {20, 5}}, {"Snark", {22, 1}}, {"Snark", {22, 2}}, {
     "Snark", {22, 3}}, {"Snark", {22, 4}}, {"Snark", {22, 5}}, {
     "Snark", {22, 6}}, {"Snark", {22, 7}}, {"Snark", {22, 8}}, {
     "Snark", {22, 9}}, {"Snark", {22, 10}}, {"Snark", {22, 11}}, {
     "Snark", {22, 12}}, {"Snark", {22, 13}}, {"Snark", {22, 14}}, {
     "Snark", {22, 15}}, {"Snark", {22, 16}}, {"Snark", {22, 17}}, {
     "Snark", {22, 18}}, {"Snark", {24, 1}}, {"Snark", {24, 2}}, {
     "Snark", {24, 3}}, {"Snark", {24, 4}}, {"Snark", {24, 5}}, {
     "Snark", {24, 6}}, {"Snark", {24, 7}}, {"Snark", {24, 8}}, {
     "Snark", {24, 9}}, {"Snark", {24, 10}}, {"Snark", {24, 11}}, {
     "Snark", {24, 12}}, {"Snark", {24, 13}}, {"Snark", {24, 14}}, {
     "Snark", {24, 15}}, {"Snark", {24, 16}}, {"Snark", {24, 17}}, {
     "Snark", {24, 18}}, {"Snark", {24, 19}}, {"Snark", {24, 20}}, {
     "Snark", {24, 21}}, {"Snark", {24, 22}}, {"Snark", {24, 23}}, {
     "Snark", {24, 24}}, {"Snark", {24, 25}}, {"Snark", {24, 26}}, {
     "Snark", {24, 27}}, {"Snark", {24, 28}}, {"Snark", {24, 29}}, {
     "Snark", {24, 30}}, {"Snark", {24, 31}}, {"Snark", {24, 32}}, {
     "Snark", {24, 33}}, {"Snark", {24, 34}}, {"Snark", {24, 35}}, {
     "Snark", {24, 36}}, {"Snark", {24, 37}}, {"Snark", {24, 38}}, {
     "Snark", {26, 1}}, {"Snark", {26, 2}}, {"Snark", {26, 3}}, {
     "Snark", {26, 4}}, {"Snark", {26, 5}}, {"Snark", {26, 6}}, {
     "Snark", {26, 7}}, {"Snark", {26, 8}}, {"Snark", {26, 9}}, {
     "Snark", {26, 10}}, {"Snark", {26, 12}}, {"Snark", {26, 13}}, {
     "Snark", {26, 14}}, {"Snark", {26, 15}}, {"Snark", {26, 16}}, {
     "Snark", {26, 17}}, {"Snark", {26, 18}}, {"Snark", {26, 19}}, {
     "Snark", {26, 20}}, {"Snark", {26, 22}}, {"Snark", {26, 23}}, {
     "Snark", {26, 24}}, {"Snark", {26, 25}}, {"Snark", {26, 26}}, {
     "Snark", {26, 27}}, {"Snark", {26, 28}}, {"Snark", {26, 29}}, {
     "Snark", {26, 30}}, {"Snark", {26, 32}}, {"Snark", {26, 33}}, {
     "Snark", {26, 34}}, {"Snark", {26, 35}}, {"Snark", {26, 36}}, {
     "Snark", {26, 37}}, {"Snark", {26, 38}}, {"Snark", {26, 39}}, {
     "Snark", {26, 40}}, {"Snark", {26, 41}}, {"Snark", {26, 42}}, {
     "Snark", {26, 43}}, {"Snark", {26, 44}}, {"Snark", {26, 45}}, {
     "Snark", {26, 46}}, {"Snark", {26, 47}}, {"Snark", {26, 48}}, {
     "Snark", {26, 49}}, {"Snark", {26, 50}}, {"Snark", {26, 51}}, {
     "Snark", {26, 52}}, {"Snark", {26, 53}}, {"Snark", {26, 54}}, {
     "Snark", {26, 55}}, {"Snark", {26, 56}}, {"Snark", {26, 57}}, {
     "Snark", {26, 58}}, {"Snark", {26, 59}}, {"Snark", {26, 60}}, {
     "Snark", {26, 61}}, {"Snark", {26, 62}}, {"Snark", {26, 63}}, {
     "Snark", {26, 64}}, {"Snark", {26, 65}}, {"Snark", {26, 66}}, {
     "Snark", {26, 67}}, {"Snark", {26, 68}}, {"Snark", {26, 69}}, {
     "Snark", {26, 70}}, {"Snark", {26, 71}}, {"Snark", {26, 72}}, {
     "Snark", {26, 73}}, {"Snark", {26, 74}}, {"Snark", {26, 75}}, {
     "Snark", {26, 76}}, {"Snark", {26, 77}}, {"Snark", {26, 78}}, {
     "Snark", {26, 79}}, {"Snark", {26, 80}}, {"Snark", {26, 81}}, {
     "Snark", {26, 82}}, {"Snark", {26, 83}}, {"Snark", {26, 84}}, {
     "Snark", {26, 85}}, {"Snark", {26, 86}}, {"Snark", {26, 87}}, {
     "Snark", {26, 88}}, {"Snark", {26, 89}}, {"Snark", {26, 90}}, {
     "Snark", {26, 91}}, {"Snark", {26, 92}}, {"Snark", {26, 93}}, {
     "Snark", {26, 94}}, {"Snark", {26, 95}}, {"Snark", {26, 96}}, {
     "Snark", {26, 97}}, {"Snark", {26, 98}}, {"Snark", {26, 99}}, {
     "Snark", {26, 100}}, {"Snark", {26, 101}}, {"Snark", {26, 102}}, {
     "Snark", {26, 103}}, {"Snark", {26, 104}}, {"Snark", {26, 105}}, {
     "Snark", {26, 106}}, {"Snark", {26, 107}}, {"Snark", {26, 108}}, {
     "Snark", {26, 109}}, {"Snark", {26, 110}}, {"Snark", {26, 111}}, {
     "Snark", {26, 112}}, {"Snark", {26, 113}}, {"Snark", {26, 114}}, {
     "Snark", {26, 115}}, {"Snark", {26, 116}}, {"Snark", {26, 117}}, {
     "Snark", {26, 118}}, {"Snark", {26, 119}}, {"Snark", {26, 120}}, {
     "Snark", {26, 121}}, {"Snark", {26, 122}}, {"Snark", {26, 123}}, {
     "Snark", {26, 124}}, {"Snark", {26, 125}}, {"Snark", {26, 126}}, {
     "Snark", {26, 127}}, {"Snark", {26, 128}}, {"Snark", {26, 129}}, {
     "Snark", {26, 130}}, {"Snark", {26, 131}}, {"Snark", {26, 132}}, {
     "Snark", {26, 133}}, {"Snark", {26, 134}}, {"Snark", {26, 135}}, {
     "Snark", {26, 136}}, {"Snark", {26, 137}}, {"Snark", {26, 138}}, {
     "Snark", {26, 139}}, {"Snark", {26, 140}}, {"Snark", {26, 141}}, {
     "Snark", {26, 142}}, {"Snark", {26, 143}}, {"Snark", {26, 144}}, {
     "Snark", {26, 145}}, {"Snark", {26, 146}}, {"Snark", {26, 147}}, {
     "Snark", {26, 148}}, {"Snark", {26, 149}}, {"Snark", {26, 150}}, {
     "Snark", {26, 151}}, {"Snark", {26, 152}}, {"Snark", {26, 153}}, {
     "Snark", {26, 154}}, {"Snark", {26, 155}}, {"Snark", {26, 156}}, {
     "Snark", {26, 157}}, {"Snark", {26, 158}}, {"Snark", {26, 159}}, {
     "Snark", {26, 160}}, {"Snark", {26, 161}}, {"Snark", {26, 162}}, {
     "Snark", {26, 163}}, {"Snark", {26, 164}}, {"Snark", {26, 165}}, {
     "Snark", {26, 166}}, {"Snark", {26, 167}}, {"Snark", {26, 168}}, {
     "Snark", {26, 169}}, {"Snark", {26, 170}}, {"Snark", {26, 171}}, {
     "Snark", {26, 172}}, {"Snark", {26, 173}}, {"Snark", {26, 174}}, {
     "Snark", {26, 175}}, {"Snark", {26, 176}}, {"Snark", {26, 177}}, {
     "Snark", {26, 178}}, {"Snark", {26, 179}}, {"Snark", {26, 180}}, {
     "Snark", {26, 181}}, {"Snark", {26, 182}}, {"Snark", {26, 184}}, {
     "Snark", {26, 185}}, {"Snark", {26, 186}}, {"Snark", {26, 187}}, {
     "Snark", {26, 188}}, {"Snark", {26, 189}}, {"Snark", {26, 190}}, {
     "Snark", {26, 191}}, {"Snark", {26, 192}}, {"Snark", {26, 193}}, {
     "Snark", {26, 194}}, {"Snark", {26, 195}}, {"Snark", {26, 196}}, {
     "Snark", {26, 197}}, {"Snark", {26, 198}}, {"Snark", {26, 199}}, {
     "Snark", {26, 200}}, {"Snark", {26, 201}}, {"Snark", {26, 202}}, {
     "Snark", {26, 203}}, {"Snark", {26, 204}}, {"Snark", {26, 205}}, {
     "Snark", {26, 206}}, {"Snark", {26, 207}}, {"Snark", {26, 208}}, {
     "Snark", {26, 209}}, {"Snark", {26, 210}}, {"Snark", {26, 211}}, {
     "Snark", {26, 212}}, {"Snark", {26, 213}}, {"Snark", {26, 214}}, {
     "Snark", {26, 215}}, {"Snark", {26, 216}}, {"Snark", {26, 217}}, {
     "Snark", {26, 218}}, {"Snark", {26, 219}}, {"Snark", {26, 220}}, {
     "Snark", {26, 221}}, {"Snark", {26, 222}}, {"Snark", {26, 223}}, {
     "Snark", {26, 224}}, {"Snark", {26, 225}}, {"Snark", {26, 226}}, {
     "Snark", {26, 227}}, {"Snark", {26, 228}}, {"Snark", {26, 229}}, {
     "Snark", {26, 230}}, {"Snark", {26, 231}}, {"Snark", {26, 232}}, {
     "Snark", {26, 233}}, {"Snark", {26, 234}}, {"Snark", {26, 235}}, {
     "Snark", {26, 236}}, {"Snark", {26, 237}}, {"Snark", {26, 238}}, {
     "Snark", {26, 239}}, {"Snark", {26, 240}}, {"Snark", {26, 241}}, {
     "Snark", {26, 242}}, {"Snark", {26, 243}}, {"Snark", {26, 244}}, {
     "Snark", {26, 245}}, {"Snark", {26, 246}}, {"Snark", {26, 247}}, {
     "Snark", {26, 248}}, {"Snark", {26, 249}}, {"Snark", {26, 250}}, {
     "Snark", {26, 251}}, {"Snark", {26, 252}}, {"Snark", {26, 253}}, {
     "Snark", {26, 254}}, {"Snark", {26, 255}}, {"Snark", {26, 256}}, {
     "Snark", {26, 257}}, {"Snark", {26, 258}}, {"Snark", {26, 259}}, {
     "Snark", {26, 260}}, {"Snark", {26, 261}}, {"Snark", {26, 262}}, {
     "Snark", {26, 263}}, {"Snark", {26, 264}}, {"Snark", {26, 265}}, {
     "Snark", {26, 266}}, {"Snark", {26, 267}}, {"Snark", {26, 268}}, {
     "Snark", {26, 269}}, {"Snark", {26, 270}}, {"Snark", {26, 271}}, {
     "Snark", {26, 272}}, {"Snark", {26, 273}}, {"Snark", {26, 274}}, {
     "Snark", {26, 275}}, {"Snark", {26, 276}}, {"Snark", {26, 277}}, {
     "Snark", {26, 278}}, {"Snark", {26, 279}}, {"Snark", {26, 280}}, 
     "StarfishGraph", "SuperboxGraph", "SzekeresSnark", "TetrahedralGraph", 
     "ThirdapexGraph", "ThomassenGraph94", "ThreeDodecahedra", "TietzeGraph", 
     "TriangleReplacedCoxeterGraph", "TriangleReplacedPetersenGraph", 
     "TriplexGraph", "TruncatedCubicalGraph", "TruncatedDodecahedralGraph", 
     "TruncatedIcosahedralGraph", "TruncatedOctahedralGraph", 
     "TruncatedPrismGraph", "TruncatedTetrahedralGraph", "Tutte12Cage", 
     "TutteGraph", "TwinplexGraph", "TwoDodecahedra", "UtilityGraph", 
     "WagnerGraph", "WatkinsSnark", {"WeakSnark", {22, 4}}, {
     "WeakSnark", {22, 5}}, {"WeakSnark", {22, 9}}, {"WeakSnark", {22, 10}}, {
     "WeakSnark", {22, 11}}, {"WeakSnark", {22, 12}}, {
     "WeakSnark", {22, 18}}, {"WeakSnark", {22, 19}}, {
     "WeakSnark", {22, 24}}, {"WeakSnark", {22, 25}}, {"WeakSnark", {22, 26}},
      "WindowGraph", "Y3+2K4", "Y3+K3,3", "Y3+K4", "Y5+K4", 
     "ZamfirescuGraph36"}, "wrap" -> OutputSizeLimit`Defer, "version" -> 1|>,
  "OutputSizeLimitTemplate"]], "Output",
 CellChangeTimes->{3.8772852779358644`*^9, 3.8772868374919558`*^9},
 CellLabel->"Out[1]=",ExpressionUUID->"a1dc6434-a3c9-4742-b456-af4bb8bb6c52"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Select", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"VertexCount", "[", 
      RowBox[{"GraphData", "[", "#", "]"}], "]"}], "<=", "6"}], "&"}], "]"}], 
  "[", 
  RowBox[{"GraphData", "[", "\"\<Cubic\>\"", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8772852843998213`*^9, 3.877285293392198*^9}, {
  3.8772868424346695`*^9, 3.877286845167392*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"303caaf0-74dc-4399-8303-227a670faebb"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\<\"Prism\"\>", ",", "3"}], "}"}], 
   ",", "\<\"TetrahedralGraph\"\>", ",", "\<\"UtilityGraph\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.8772852951265345`*^9, 3.8772869462242684`*^9},
 CellLabel->"Out[2]=",ExpressionUUID->"5e32a026-ee15-46c8-9582-a7107b9902c3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GraphData", "/@", 
  RowBox[{
   RowBox[{"Select", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"VertexCount", "[", 
       RowBox[{"GraphData", "[", "#", "]"}], "]"}], "<=", "6"}], "&"}], "]"}],
    "[", 
   RowBox[{"GraphData", "[", "\"\<Cubic\>\"", "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.877286991360939*^9, 3.8772869947975903`*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"5c825c4e-9563-4e37-b7c1-33c8bf5349d0"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4, 5, 6}, {Null, 
         SparseArray[
         Automatic, {6, 6}, 0, {
          1, {{0, 3, 6, 9, 12, 15, 18}, {{2}, {3}, {4}, {1}, {3}, {5}, {1}, {
            2}, {6}, {1}, {5}, {6}, {2}, {4}, {6}, {3}, {4}, {5}}}, 
           Pattern}]}, {
        VertexCoordinates -> {{Rational[1, 2] 3^Rational[1, 2], 
            Rational[-1, 2]}, {0, 1}, {Rational[-1, 2] 3^Rational[1, 2], 
            Rational[-1, 2]}, {3^Rational[1, 2], -1}, {0, 
           2}, {-3^Rational[1, 2], -1}}}]]}, 
      TagBox[
       GraphicsGroupBox[
        GraphicsComplexBox[{{0.8660254037844386, -0.5}, {0., 
         1.}, {-0.8660254037844386, -0.5}, {1.7320508075688772`, -1.}, {0., 
         2.}, {-1.7320508075688772`, -1.}}, {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
           ArrowBox[{{1, 2}, {1, 3}, {1, 4}, {2, 3}, {2, 5}, {3, 6}, {4, 5}, {
            4, 6}, {5, 6}}, 0.03347773481857537]}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           DiskBox[1, 0.03347773481857537], DiskBox[2, 0.03347773481857537], 
           DiskBox[3, 0.03347773481857537], DiskBox[4, 0.03347773481857537], 
           DiskBox[5, 0.03347773481857537], 
           DiskBox[6, 0.03347773481857537]}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    FormatType->TraditionalForm,
    FrameTicks->None], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4}, {Null, 
         SparseArray[
         Automatic, {4, 4}, 0, {
          1, {{0, 3, 6, 9, 12}, {{2}, {3}, {4}, {1}, {3}, {4}, {1}, {2}, {
            4}, {1}, {2}, {3}}}, Pattern}]}, {
        VertexCoordinates -> {{Rational[-1, 2] 3^Rational[1, 2], 
            Rational[-1, 2]}, {Rational[1, 2] 3^Rational[1, 2], 
            Rational[-1, 2]}, {0, 1}, {0, 0}}}]]}, 
      TagBox[
       GraphicsGroupBox[
        GraphicsComplexBox[{{-0.8660254037844386, -0.5}, {
         0.8660254037844386, -0.5}, {0., 1.}, {0., 0.}}, {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
           ArrowBox[{{1, 2}, {1, 3}, {1, 4}, {2, 3}, {2, 4}, {3, 4}}, 
            0.020399597244776385`]}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           DiskBox[1, 0.020399597244776385], DiskBox[2, 0.020399597244776385],
            DiskBox[3, 0.020399597244776385], 
           DiskBox[4, 0.020399597244776385]}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    FormatType->TraditionalForm,
    FrameTicks->None], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4, 5, 6}, {Null, 
         SparseArray[
         Automatic, {6, 6}, 0, {
          1, {{0, 3, 6, 9, 12, 15, 18}, {{4}, {5}, {6}, {4}, {5}, {6}, {4}, {
            5}, {6}, {1}, {2}, {3}, {1}, {2}, {3}, {1}, {2}, {3}}}, 
           Pattern}]}, {
        VertexCoordinates -> {{1, -1}, {1, 0}, {1, 1}, {2, -1}, {2, 0}, {2, 
          1}}}]]}, 
      TagBox[
       GraphicsGroupBox[
        GraphicsComplexBox[{{1., -1.}, {1., 0.}, {1., 1.}, {2., -1.}, {2., 
         0.}, {2., 1.}}, {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
           ArrowBox[{{1, 4}, {1, 5}, {1, 6}, {2, 4}, {2, 5}, {2, 6}, {3, 4}, {
            3, 5}, {3, 6}}, 0.02261146496815286]}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           DiskBox[1, 0.02261146496815286], DiskBox[2, 0.02261146496815286], 
           DiskBox[3, 0.02261146496815286], DiskBox[4, 0.02261146496815286], 
           DiskBox[5, 0.02261146496815286], 
           DiskBox[6, 0.02261146496815286]}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    FormatType->TraditionalForm,
    FrameTicks->None]}], "}"}]], "Output",
 CellChangeTimes->{3.8772870248126245`*^9},
 CellLabel->"Out[3]=",ExpressionUUID->"f0507648-818c-49d1-901b-4e1df90d970e"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Exercise 50", "Section",
 CellChangeTimes->{{3.877286930441459*^9, 
  3.877286933817113*^9}},ExpressionUUID->"354a2f1d-a401-4d09-8e85-\
ef0248855455"],

Cell["\<\
Find all bipartite graphs that can be 3-colored in exactly 24 ways.\
\>", "Text",
 CellChangeTimes->{{3.8772870090006113`*^9, 
  3.877287051609749*^9}},ExpressionUUID->"1cf32807-d185-4d5d-97d2-\
aad3d730ca39"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GraphData", "[", "\"\<Bipartite\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.8772870959770913`*^9, 3.877287100508224*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"28369a05-1173-4d48-bd5a-fc8aac88a770"],

Cell[BoxData[
 TemplateBox[<|"shortenedBoxes" -> TagBox[
     RowBox[{"{", 
       RowBox[{
         RowBox[{"{", 
           RowBox[{"6", ",", "13"}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"6", ",", "24"}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"6", ",", "32"}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"6", ",", "99"}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"7", ",", "15"}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"7", ",", "17"}], "}"}], ",", 
         TemplateBox[{"3108"}, "OutputSizeLimit`Skeleton"], ",", 
         RowBox[{"{", 
           RowBox[{"\"ZeroTwoBipartite\"", ",", 
             RowBox[{"{", 
               RowBox[{"7", ",", "35"}], "}"}]}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"\"ZeroTwoBipartite\"", ",", 
             RowBox[{"{", 
               RowBox[{"7", ",", "36"}], "}"}]}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"\"ZeroTwoBipartite\"", ",", 
             RowBox[{"{", 
               RowBox[{"7", ",", "37"}], "}"}]}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"\"ZeroTwoBipartite\"", ",", 
             RowBox[{"{", 
               RowBox[{"7", ",", "38"}], "}"}]}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"\"ZeroTwoBipartite\"", ",", 
             RowBox[{"{", 
               RowBox[{"7", ",", "39"}], "}"}]}], "}"}]}], "}"}], 
     Short[#, 5]& ], "line" -> 4, "sessionID" -> 16937363724473571974, 
   "byteCount" -> 648648, "size" -> 5, "stored" -> False, "expr" -> 
   Missing["NotStored"], "wrap" -> OutputSizeLimit`Defer, "version" -> 1|>,
  "OutputSizeLimitTemplate"]], "Output",
 CellChangeTimes->{3.8772871009144735`*^9},
 CellLabel->"Out[4]=",ExpressionUUID->"b83e6fcd-e56e-4aff-8eb1-f43bfa9e7aee"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"First", "[", 
  RowBox[{"GraphData", "[", "\"\<Bipartite\>\"", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8772870959770913`*^9, 3.8772871110989327`*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"4b200441-4b13-41f0-9b23-e60214709564"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"6", ",", "13"}], "}"}]], "Output",
 CellChangeTimes->{3.8772871114739246`*^9},
 CellLabel->"Out[5]=",ExpressionUUID->"0065c3ef-2fd3-4ded-add8-cd69efb19562"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GraphData", "[", 
  RowBox[{"First", "[", 
   RowBox[{"GraphData", "[", "\"\<Bipartite\>\"", "]"}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.877287111927047*^9, 3.877287113458417*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"cd24b0c8-15ae-48b8-958b-7cfeedd15082"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{1, 2, 3, 4, 5, 6}, {Null, 
       SparseArray[
       Automatic, {6, 6}, 0, {
        1, {{0, 2, 3, 4, 4, 5, 8}, {{5}, {6}, {6}, {6}, {1}, {1}, {2}, {3}}}, 
         Pattern}]}, {VertexCoordinates -> {{1, 1}, {0, 0}, {0, 2}, {0, 
          Rational[-1, 5]}, {1, 0}, {0, 1}}}]]}, 
    TagBox[
     GraphicsGroupBox[
      GraphicsComplexBox[{{1., 1.}, {0., 0.}, {0., 2.}, {0., -0.2}, {1., 
       0.}, {0., 1.}}, {
        {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
         ArrowBox[{{1, 5}, {1, 6}, {2, 6}, {3, 6}}, 0.024213836477987416`]}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         DiskBox[1, 0.024213836477987416], DiskBox[2, 0.024213836477987416], 
         DiskBox[3, 0.024213836477987416], DiskBox[4, 0.024213836477987416], 
         DiskBox[5, 0.024213836477987416], 
         DiskBox[6, 0.024213836477987416]}}]],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None]], "Output",
 CellChangeTimes->{3.8772871138333282`*^9},
 CellLabel->"Out[6]=",ExpressionUUID->"ff7b27a7-d05e-4911-85c0-3547ff41078d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GraphData", "[", 
  RowBox[{
   RowBox[{"First", "[", 
    RowBox[{"GraphData", "[", "\"\<Bipartite\>\"", "]"}], "]"}], ",", 
   "\"\<ChromaticInvariant\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.877287111927047*^9, 3.877287136855236*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"7ed3cc3a-b6ad-464b-ab48-4187a203de9a"],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.8772871371364956`*^9},
 CellLabel->"Out[7]=",ExpressionUUID->"3eaa9459-ee9d-4549-9a22-718657a52747"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GraphData", "[", 
  RowBox[{
   RowBox[{"First", "[", 
    RowBox[{"GraphData", "[", "\"\<Bipartite\>\"", "]"}], "]"}], ",", 
   "\"\<ChromaticNumber\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.877287111927047*^9, 3.8772871411052427`*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"fb1bae3e-609c-4119-9216-a064b3252ff4"],

Cell[BoxData["2"], "Output",
 CellChangeTimes->{3.877287141402116*^9},
 CellLabel->"Out[8]=",ExpressionUUID->"5c21ff97-9c94-4e87-b7eb-8144dd3ed1b7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GraphData", "[", 
  RowBox[{
   RowBox[{"First", "[", 
    RowBox[{"GraphData", "[", "\"\<Bipartite\>\"", "]"}], "]"}], ",", 
   "\"\<ChromaticPolynomial\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.877287111927047*^9, 3.8772871456616316`*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"4044093e-b462-489d-9f2a-cde03454ec09"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "#1"}], ")"}], "4"], " ", 
   SuperscriptBox["#1", "2"]}], "&"}]], "Output",
 CellChangeTimes->{3.877287145964235*^9},
 CellLabel->"Out[9]=",ExpressionUUID->"4c5e4e53-fe93-4a56-9181-841a00e1e1b6"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"GraphData", "[", 
  RowBox[{
   RowBox[{"First", "[", 
    RowBox[{"GraphData", "[", "\"\<Bipartite\>\"", "]"}], "]"}], ",", 
   "\"\<Chromatic\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.877287111927047*^9, 
  3.8772871512092266`*^9}},ExpressionUUID->"beaaf159-1c42-40b5-8db1-\
64f9943bccc6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GraphData", "[", "\"\<ChromaticallyUnique\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.877287185403364*^9, 3.8772871900599136`*^9}},
 CellLabel->"In[10]:=",ExpressionUUID->"71f244f9-856d-4517-8928-325ead1d19cf"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"5", ",", "31"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "66"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "73"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "80"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "82"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "97"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "103"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "109"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "114"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "124"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "138"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "148"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "149"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "129"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "142"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "151"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "161"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "169"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "173"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "179"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "181"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "210"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "222"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "254"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "261"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "266"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "275"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "288"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "290"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "302"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "304"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "316"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "326"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "328"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "335"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "337"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "339"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "344"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "404"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "477"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "478"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "503"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "524"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "574"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "580"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "582"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "584"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "585"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "586"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "622"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "624"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "645"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "647"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "674"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "695"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "696"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "701"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "708"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "726"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "730"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "733"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "748"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "755"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "763"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "766"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "771"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "786"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "789"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "816"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "832"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "839"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "840"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "848"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "849"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "850"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "858"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "865"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "868"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "885"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "886"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "888"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "896"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "900"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "901"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "905"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "906"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "910"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "937"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "945"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "957"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "961"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "962"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "963"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "964"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "979"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "1000"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "1003"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "1007"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "1008"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "1013"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "1018"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "1027"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "1029"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "1033"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "1034"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "1035"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "1039"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "1040"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "579"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "611"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "628"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "2989"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "3914"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "3921"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "5516"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "5519"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "6777"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "8186"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "8953"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "9760"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "9880"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "10354"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "11242"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "11481"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "11486"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "11504"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "11566"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "11585"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "11690"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "12265"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "12333"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", "71752"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", "111589"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", "115869"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", "122423"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", "172352"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", "176255"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", "179236"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", "179238"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", "181483"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", "181502"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Antiprism\"\>", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Antiprism\"\>", ",", "5"}], "}"}], 
   ",", "\<\"BannerGraph\"\>", ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Bar\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "3"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"BiggestLittlePolygon\"\>", ",", "6"}], "}"}], 
   ",", "\<\"C3+2K1\"\>", ",", "\<\"C3+3K1\"\>", ",", "\<\"C3+4K1\"\>", 
   ",", "\<\"C3+5K1\"\>", ",", "\<\"C3+K1\"\>", ",", "\<\"C4+2K1\"\>", 
   ",", "\<\"C4+3K1\"\>", ",", "\<\"C4+K1\"\>", ",", "\<\"C5+2K1\"\>", 
   ",", "\<\"C5+3K1\"\>", ",", "\<\"C5+K1\"\>", ",", "\<\"C6+K1\"\>", 
   ",", "\<\"C7+K1\"\>", ",", "\<\"C8+K1\"\>", ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Circulant\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"7", ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "2"}], "}"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Circulant\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"8", ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "2", ",", "4"}], "}"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Circulant\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"9", ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "2"}], "}"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Circulant\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"9", ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "3"}], "}"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Circulant\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"9", ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "2", ",", "3"}], "}"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Circulant\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "4"}], "}"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Circulant\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "2", ",", "3"}], "}"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Circulant\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "2", ",", "4"}], "}"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Circulant\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "2", ",", "5"}], "}"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Circulant\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "4", ",", "5"}], "}"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Circulant\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "2", ",", "3", ",", "5"}], "}"}]}], "}"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Circulant\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "2", ",", "4", ",", "5"}], "}"}]}], "}"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CocktailParty\"\>", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CocktailParty\"\>", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CocktailParty\"\>", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CocktailParty\"\>", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CocktailParty\"\>", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CocktailParty\"\>", ",", "10"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CocktailParty\"\>", ",", "11"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CocktailParty\"\>", ",", "12"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CocktailParty\"\>", ",", "13"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CocktailParty\"\>", ",", "14"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CocktailParty\"\>", ",", "15"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CocktailParty\"\>", ",", "16"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CocktailParty\"\>", ",", "17"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CocktailParty\"\>", ",", "18"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CocktailParty\"\>", ",", "19"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CocktailParty\"\>", ",", "20"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Complete\"\>", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Complete\"\>", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Complete\"\>", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Complete\"\>", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Complete\"\>", ",", "10"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Complete\"\>", ",", "11"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Complete\"\>", ",", "12"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Complete\"\>", ",", "13"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Complete\"\>", ",", "14"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Complete\"\>", ",", "15"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Complete\"\>", ",", "16"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Complete\"\>", ",", "17"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Complete\"\>", ",", "18"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Complete\"\>", ",", "19"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Complete\"\>", ",", "20"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Complete\"\>", ",", "21"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Complete\"\>", ",", "22"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Complete\"\>", ",", "23"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Complete\"\>", ",", "24"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Complete\"\>", ",", "25"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Complete\"\>", ",", "26"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Complete\"\>", ",", "27"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Complete\"\>", ",", "28"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Complete\"\>", ",", "29"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Complete\"\>", ",", "30"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CompleteBipartite\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "3"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CompleteBipartite\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "4"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CompleteBipartite\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "5"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CompleteBipartite\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "6"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CompleteBipartite\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "7"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CompleteBipartite\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "8"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CompleteBipartite\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "4"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CompleteBipartite\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "5"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CompleteBipartite\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "6"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CompleteBipartite\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "7"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CompleteBipartite\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "4"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CompleteBipartite\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "5"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CompleteBipartite\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "6"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CompleteBipartite\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"5", ",", "5"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CompleteBipartite\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"5", ",", "6"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CompleteBipartite\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"6", ",", "6"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CompleteBipartite\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"6", ",", "7"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CompleteBipartite\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"7", ",", "7"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CompleteBipartite\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"7", ",", "8"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CompleteBipartite\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"8", ",", "8"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CompleteBipartite\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"8", ",", "9"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CompleteBipartite\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"9", ",", "9"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CompleteBipartite\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"9", ",", "10"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CompleteBipartite\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "10"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CompleteBipartite\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"11", ",", "11"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CompleteBipartite\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"12", ",", "12"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CompleteBipartite\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"13", ",", "13"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CompleteBipartite\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"14", ",", "14"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CompleteBipartite\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"15", ",", "15"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CompleteBipartite\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"16", ",", "16"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CompleteBipartite\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"17", ",", "17"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CompleteBipartite\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"18", ",", "18"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CompleteBipartite\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"19", ",", "19"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CompleteBipartite\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"20", ",", "20"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CompleteKPartite\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "2", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CompleteKPartite\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "2", ",", "2", ",", "3"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CompleteKPartite\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "2", ",", "3", ",", "3"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CompleteKPartite\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "3", ",", "3", ",", "3"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CompleteKPartite\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "4", ",", "4", ",", "4"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CompleteKPartite\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "1", ",", "1", ",", "2"}], "}"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CompleteKPartite\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "1", ",", "2", ",", "2"}], "}"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CompleteKPartite\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "2", ",", "2", ",", "2"}], "}"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CompleteKPartite\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "2", ",", "2", ",", "2"}], "}"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CompleteKPartite\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "3", ",", "3", ",", "3", ",", "3"}], "}"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CompleteKPartite\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "2"}], 
      "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CompleteKPartite\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "1", ",", "1", ",", "2", ",", "2"}], 
      "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CompleteKPartite\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "1", ",", "2", ",", "2", ",", "2"}], 
      "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CompleteKPartite\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "2", ",", "2", ",", "2", ",", "2"}], 
      "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CompleteKPartite\"\>", ",", 
     RowBox[{"{", 
      RowBox[{
      "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "2"}], 
      "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CompleteKPartite\"\>", ",", 
     RowBox[{"{", 
      RowBox[{
      "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "2", ",", "2"}], 
      "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CompleteKPartite\"\>", ",", 
     RowBox[{"{", 
      RowBox[{
      "1", ",", "1", ",", "1", ",", "1", ",", "2", ",", "2", ",", "2"}], 
      "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CompleteKPartite\"\>", ",", 
     RowBox[{"{", 
      RowBox[{
      "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
       "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CompleteKPartite\"\>", ",", 
     RowBox[{"{", 
      RowBox[{
      "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "2", ",", 
       "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CompleteKPartite\"\>", ",", 
     RowBox[{"{", 
      RowBox[{
      "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
       "1", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CompleteTripartite\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "2", ",", "3"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CompleteTripartite\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "2", ",", "4"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CompleteTripartite\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "2", ",", "5"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CompleteTripartite\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "2", ",", "6"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CompleteTripartite\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "3", ",", "3"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CompleteTripartite\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "3", ",", "4"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CompleteTripartite\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "3", ",", "5"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CompleteTripartite\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "4", ",", "4"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CompleteTripartite\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "3", ",", "3"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CompleteTripartite\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "3", ",", "4"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CompleteTripartite\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "4", ",", "4"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CompleteTripartite\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "4", ",", "4"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CompleteTripartite\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "4", ",", "5"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CompleteTripartite\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "5", ",", "5"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CompleteTripartite\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"5", ",", "5", ",", "5"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CompleteTripartite\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"6", ",", "6", ",", "6"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Cone\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"5", ",", "3"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Cone\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"5", ",", "4"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Cone\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"5", ",", "5"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Cone\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"6", ",", "3"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Cone\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"6", ",", "4"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Cone\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"7", ",", "3"}], "}"}]}], "}"}], 
   ",", "\<\"CrossingNumberGraph2B\"\>", ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Crown\"\>", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Cubic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"8", ",", "3"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Cubic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "8"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Cubic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "9"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Cubic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "10"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Cubic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "11"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Cubic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "13"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Cubic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "16"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Cubic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "18"}], "}"}]}], "}"}], ",", "\<\"CubicalGraph\"\>", 
   ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Cycle\"\>", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Cycle\"\>", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Cycle\"\>", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Cycle\"\>", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Cycle\"\>", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Cycle\"\>", ",", "10"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Cycle\"\>", ",", "11"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Cycle\"\>", ",", "12"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Cycle\"\>", ",", "13"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Cycle\"\>", ",", "14"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Cycle\"\>", ",", "15"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Cycle\"\>", ",", "16"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Cycle\"\>", ",", "17"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Cycle\"\>", ",", "18"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Cycle\"\>", ",", "19"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Cycle\"\>", ",", "20"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Cycle\"\>", ",", "21"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Cycle\"\>", ",", "22"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Cycle\"\>", ",", "23"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Cycle\"\>", ",", "24"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Cycle\"\>", ",", "25"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Cycle\"\>", ",", "26"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Cycle\"\>", ",", "27"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Cycle\"\>", ",", "28"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Cycle\"\>", ",", "29"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Cycle\"\>", ",", "30"}], "}"}], ",", "\<\"DiamondGraph\"\>", 
   ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Dipyramid\"\>", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Dipyramid\"\>", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Dipyramid\"\>", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Dipyramid\"\>", ",", "8"}], "}"}], 
   ",", "\<\"DominoGraph\"\>", ",", 
   RowBox[{"{", 
    RowBox[{"\<\"DoubleToroidal\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"8", ",", "6"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"DoubleToroidal\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"8", ",", "9"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"DoubleToroidal\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"8", ",", "10"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"DoubleToroidal\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"8", ",", "11"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"EdgeTransitive\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"9", ",", "14"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Empty\"\>", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Empty\"\>", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Empty\"\>", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Empty\"\>", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Empty\"\>", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Empty\"\>", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Empty\"\>", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Empty\"\>", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Empty\"\>", ",", "10"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Empty\"\>", ",", "11"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Empty\"\>", ",", "12"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Empty\"\>", ",", "13"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Empty\"\>", ",", "14"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Empty\"\>", ",", "15"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Empty\"\>", ",", "16"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Empty\"\>", ",", "17"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Empty\"\>", ",", "18"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Empty\"\>", ",", "19"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Empty\"\>", ",", "20"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Empty\"\>", ",", "21"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Empty\"\>", ",", "22"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Empty\"\>", ",", "23"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Empty\"\>", ",", "24"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Empty\"\>", ",", "25"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Empty\"\>", ",", "26"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Empty\"\>", ",", "27"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Empty\"\>", ",", "28"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Empty\"\>", ",", "29"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Empty\"\>", ",", "30"}], "}"}], ",", "\<\"FritschGraph\"\>", 
   ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Gear\"\>", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Grid\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "3"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Halin\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "5"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Halin\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "12"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"HamiltonLaceable\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"6", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"HamiltonLaceable\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"8", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"HamiltonLaceable\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"8", ",", "3"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"HamiltonLaceable\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"8", ",", "4"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"HamiltonLaceable\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"8", ",", "5"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"HamiltonLaceable\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"8", ",", "7"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"HamiltonLaceable\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"8", ",", "8"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"HamiltonLaceable\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"8", ",", "9"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"HamiltonLaceable\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"8", ",", "10"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Harary\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "7"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Harary\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "9"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Harary\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"5", ",", "9"}], "}"}]}], "}"}], 
   ",", "\<\"HemicubicalGraph\"\>", ",", 
   RowBox[{"{", 
    RowBox[{"\<\"HexagonalGrid\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "2"}], "}"}]}], "}"}], 
   ",", "\<\"HouseGraph\"\>", ",", "\<\"HouseXGraph\"\>", ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Jahangir\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "3"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"JohnsonSkeleton\"\>", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"JohnsonSkeleton\"\>", ",", "10"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"JohnsonSkeleton\"\>", ",", "17"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"JohnsonSkeleton\"\>", ",", "62"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"JohnsonSkeleton\"\>", ",", "63"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"JohnsonSkeleton\"\>", ",", "84"}], "}"}], 
   ",", "\<\"K2,2,3+K1\"\>", ",", "\<\"K2,3+2K1\"\>", ",", "\<\"K2,3+K1\"\>", 
   ",", "\<\"K2,4+K1\"\>", ",", "\<\"K3,3+K1\"\>", ",", "\<\"K4+2K1\"\>", 
   ",", "\<\"K4+3K1\"\>", ",", "\<\"K4,4-e\"\>", ",", "\<\"K4,5-4K2\"\>", 
   ",", "\<\"K4-e+2K1\"\>", ",", "\<\"K4-e+3K1\"\>", ",", "\<\"K4-e+K1\"\>", 
   ",", "\<\"K4+K1\"\>", ",", "\<\"K5+2K1\"\>", ",", "\<\"K5+3K1\"\>", 
   ",", "\<\"K5+K1\"\>", ",", "\<\"K6+K1\"\>", ",", "\<\"K7+K1\"\>", 
   ",", "\<\"K8+K1\"\>", ",", "\<\"K9+K1\"\>", ",", 
   RowBox[{"{", 
    RowBox[{"\<\"KCyclic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"11", ",", "235"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"KCyclic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"11", ",", "239"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"KCyclic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"11", ",", "269"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"KCyclic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"11", ",", "275"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"KCyclic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"11", ",", "309"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"KCyclic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"11", ",", "310"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"KCyclic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"11", ",", "311"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"KCyclic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"11", ",", "333"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"KCyclic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"11", ",", "336"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"KleinBottleTriangulation\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"9", ",", "1"}], "}"}]}], "}"}], ",", "\<\"LemkeGraph\"\>", ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Lollipop\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Lollipop\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"5", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Lollipop\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"6", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Lollipop\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"7", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Matchstick\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"7", ",", "26"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Matchstick\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"7", ",", "55"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Matchstick\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"8", ",", "23"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Matchstick\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"8", ",", "75"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Matchstick\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"8", ",", "92"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Matchstick\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"8", ",", "165"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Matchstick\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"8", ",", "172"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Matchstick\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"9", ",", "87"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Matchstick\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"9", ",", "273"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Matchstick\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"9", ",", "287"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Matchstick\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"9", ",", "322"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Matchstick\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"9", ",", "437"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Matchstick\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"9", ",", "522"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Matchstick\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"9", ",", "543"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Matchstick\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"9", ",", "568"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Matchstick\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "53"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Matchstick\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "1507"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"MoebiusLadder\"\>", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"MongolianTent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "3"}], "}"}]}], "}"}], ",", "\<\"NechushtanGraph\"\>",
    ",", "\<\"OctahedralGraph\"\>", ",", "\<\"P2+2K1\"\>", 
   ",", "\<\"P2+3K1\"\>", ",", "\<\"P2+4K1\"\>", ",", "\<\"P2+5K1\"\>", 
   ",", "\<\"P2+K1\"\>", ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Pan\"\>", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Pan\"\>", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Pan\"\>", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Pan\"\>", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Pan\"\>", ",", "9"}], "}"}], ",", "\<\"PaschGraph\"\>", ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Path\"\>", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Path\"\>", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"PathComplement\"\>", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"PathComplement\"\>", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"PathComplement\"\>", ",", "10"}], "}"}], 
   ",", "\<\"PawGraph\"\>", ",", "\<\"PentagonalWedgeGraph\"\>", 
   ",", "\<\"PentatopeGraph\"\>", ",", "\<\"PetersenGraph\"\>", ",", 
   RowBox[{"{", 
    RowBox[{"\<\"PlanarNonbipartiteOddShortestPathCount\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"8", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"PlanarNonbipartiteOddShortestPathCount\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"9", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"PlanarNonbipartiteOddShortestPathCount\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"PlanarNonbipartiteOddShortestPathCount\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "3"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Prism\"\>", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Prism\"\>", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ProjectivePlanarForbidden\"\>", ",", "11"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ProjectivePlanarForbidden\"\>", ",", "12"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ProjectivePlanarForbidden\"\>", ",", "13"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ProjectivePlanarForbidden\"\>", ",", "15"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ProjectivePlanarForbidden\"\>", ",", "16"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ProjectivePlanarForbidden\"\>", ",", "17"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ProjectivePlanarForbidden\"\>", ",", "19"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ProjectivePlanarForbidden\"\>", ",", "20"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ProjectivePlanarForbidden\"\>", ",", "21"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ProjectivePlanarForbidden\"\>", ",", "28"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ProjectivePlanarForbidden\"\>", ",", "29"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ProjectivePlanarForbidden\"\>", ",", "31"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ProjectivePlanarForbidden\"\>", ",", "33"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ProjectivePlanarForbidden\"\>", ",", "34"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Quartic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"8", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Quartic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"8", ",", "4"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Quartic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"8", ",", "5"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Quartic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"9", ",", "5"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Quartic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"9", ",", "7"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Quartic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"9", ",", "8"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Quartic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"9", ",", "9"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Quartic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"9", ",", "10"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Quartic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"9", ",", "12"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Quartic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"9", ",", "13"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Quartic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"9", ",", "15"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Quartic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "6"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Quartic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "8"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Quartic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "9"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Quartic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "10"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Quartic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "11"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Quartic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "16"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Quartic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "20"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Quartic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "21"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Quartic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "24"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Quartic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "25"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Quartic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "26"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Quartic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "30"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Quartic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "31"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Quartic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "32"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Quartic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "33"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Quartic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "34"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Quartic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "35"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Quartic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "37"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Quartic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "38"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Quartic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "39"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Quartic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "40"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Quartic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "41"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Quartic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "42"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Quartic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "45"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Quartic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "46"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Quartic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "47"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Quartic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "49"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Quartic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "50"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Quartic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "51"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Quartic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "52"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Quartic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "53"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Quartic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "54"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Quartic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "55"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Quartic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "56"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Quartic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "57"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"QuasiCubic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"9", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"QuasiCubic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"9", ",", "4"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"QuasiCubic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"9", ",", "5"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"QuasiCubic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"9", ",", "6"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"QuasiCubic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"9", ",", "12"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"QuasiCubic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"9", ",", "14"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"QuasiCubic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"9", ",", "19"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"QuasiCubic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"9", ",", "22"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"QuasiCubic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"9", ",", "23"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"QuasiCubic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"9", ",", "24"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"QuasiCubic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"9", ",", "27"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"QuasiQuintic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"9", ",", "5"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"QuasiQuintic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"9", ",", "6"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"QuasiQuintic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"9", ",", "7"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"QuasiQuintic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"9", ",", "12"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"QuasiQuintic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"9", ",", "17"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"QuasiQuintic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"9", ",", "18"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"QuasiQuintic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"9", ",", "19"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Queen\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "3"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Quintic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "4"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Quintic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "5"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Quintic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "8"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Quintic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "12"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Quintic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "14"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Quintic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "15"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Quintic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "16"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Quintic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "17"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Quintic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "19"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Quintic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "20"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Quintic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "21"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Quintic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "25"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Quintic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "26"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Quintic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "28"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Quintic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "29"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Quintic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "30"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Quintic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "32"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Quintic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "33"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Quintic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "34"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Quintic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "35"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Quintic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "36"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Quintic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "37"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Quintic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "38"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Quintic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "39"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Quintic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "41"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Quintic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "42"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Quintic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "43"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Quintic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "44"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Quintic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "45"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Quintic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "46"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Quintic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "47"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Quintic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "48"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Quintic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "49"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Quintic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "51"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Quintic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "52"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Quintic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "53"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Quintic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "54"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Quintic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "55"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Quintic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "56"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Quintic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "57"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Quintic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "58"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Rook\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "5"}], "}"}]}], "}"}], ",", "\<\"RoyleGraph1\"\>", 
   ",", "\<\"RoyleGraph2\"\>", ",", 
   RowBox[{"{", 
    RowBox[{"\<\"SelfComplementary\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"9", ",", "14"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"SelfDual\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"7", ",", "6"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"SelfDual\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"9", ",", "34"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"SelfDual\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"9", ",", "41"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"SelfDual\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"9", ",", "48"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Septic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "4"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Sextic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Sextic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "3"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Sextic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "4"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Sextic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "6"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Sextic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "9"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Sextic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "10"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Sextic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "11"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Sextic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "12"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Sextic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "13"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Sextic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "14"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Sextic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "15"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Sextic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "16"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Sextic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "17"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Sextic\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "21"}], "}"}]}], "}"}], 
   ",", "\<\"SingletonGraph\"\>", ",", "\<\"SixteenCellGraph\"\>", 
   ",", "\<\"SoiferGraph\"\>", ",", "\<\"SquareGraph\"\>", 
   ",", "\<\"TetrahedralGraph\"\>", ",", "\<\"ThetaZeroGraph\"\>", ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Trapezohedron\"\>", ",", "4"}], "}"}], 
   ",", "\<\"TriangleGraph\"\>", ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Triangular\"\>", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"TriangularHoneycombQueen\"\>", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"UnitDistanceForbidden\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"6", ",", "9", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"UnitDistanceForbidden\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"7", ",", "10", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"UnitDistanceForbidden\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"7", ",", "11", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"UnitDistanceForbidden\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"8", ",", "12", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"UnitDistanceForbidden\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"8", ",", "13", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"UnitDistanceForbidden\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"8", ",", "13", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"UnitDistanceForbidden\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"8", ",", "13", ",", "8"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"UnitDistanceForbidden\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"9", ",", "13", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"UnitDistanceForbidden\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"9", ",", "13", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"UnitDistanceForbidden\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"9", ",", "14", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"UnitDistanceForbidden\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"9", ",", "14", ",", "6"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"UnitDistanceForbidden\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"9", ",", "14", ",", "18"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"UnitDistanceForbidden\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"9", ",", "14", ",", "19"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"UnitDistanceForbidden\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"9", ",", "15", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"UnitDistanceForbidden\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"9", ",", "15", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"UnitDistanceForbidden\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"9", ",", "15", ",", "7"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"UnitDistanceForbidden\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"9", ",", "15", ",", "10"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"UnitDistanceForbidden\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"9", ",", "15", ",", "17"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"UnitDistanceForbidden\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"9", ",", "15", ",", "20"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"UnitDistanceForbidden\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"9", ",", "15", ",", "33"}], "}"}]}], "}"}], 
   ",", "\<\"UtilityGraph\"\>", ",", "\<\"W5+2K1\"\>", ",", "\<\"W5+K1\"\>", 
   ",", "\<\"WagnerGraph\"\>", ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Wheel\"\>", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Wheel\"\>", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Wheel\"\>", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Wheel\"\>", ",", "10"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"WheelComplement\"\>", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"WheelComplement\"\>", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"WheelComplement\"\>", ",", "10"}], "}"}], 
   ",", "\<\"Y3+K1\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.8772871907317266`*^9},
 CellLabel->"Out[10]=",ExpressionUUID->"9a109a45-6d6a-4bec-89d7-ab3b49b4190b"]
}, Open  ]],

Cell["\<\
I wasn\[CloseCurlyQuote]t sure which GraphData property corresponded to the \
number of valid colorings for a graph, so I tried to find a pattern in some \
of the properties related to coloring, but couldn\[CloseCurlyQuote]t find a \
pattern.\
\>", "Text",
 CellChangeTimes->{{3.877288312148196*^9, 
  3.8772883459039683`*^9}},ExpressionUUID->"e9844d4c-856b-4fc0-aa21-\
8d315d9932d1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"First", "[", 
  RowBox[{"GraphData", "[", "\"\<ChromaticallyUnique\>\"", "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8772871949195232`*^9, 3.8772871964195576`*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"1028a19d-f42c-46e1-a73d-3de3f44f8e9b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"5", ",", "31"}], "}"}]], "Output",
 CellChangeTimes->{3.877287196716403*^9},
 CellLabel->"Out[11]=",ExpressionUUID->"c1a979e2-f71f-48e0-be8c-9bf98c709169"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GraphData", "[", 
  RowBox[{
   RowBox[{"First", "[", 
    RowBox[{"GraphData", "[", "\"\<ChromaticallyUnique\>\"", "]"}], "]"}], 
   ",", "\"\<ChromaticPolynomial\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.8772871989039607`*^9, 3.8772872024663935`*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"ca829a6a-42f7-4144-b847-917228996db5"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "2"}], "+", "#1"}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", "#1"}], ")"}], " ", "#1", " ", 
   RowBox[{"(", 
    RowBox[{"5", "-", 
     RowBox[{"4", " ", "#1"}], "+", 
     SuperscriptBox["#1", "2"]}], ")"}]}], "&"}]], "Output",
 CellChangeTimes->{3.8772872027789326`*^9},
 CellLabel->"Out[12]=",ExpressionUUID->"a279f7a6-d507-4638-97df-e6a367e9bf7e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GraphData", "[", 
  RowBox[{
   RowBox[{"First", "[", 
    RowBox[{"GraphData", "[", "\"\<ChromaticallyUnique\>\"", "]"}], "]"}], 
   ",", "\"\<QChromaticPolynomial\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.8772871989039607`*^9, 3.877287212625157*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"aef146b1-3cea-496e-9993-64b5f9a80a31"],

Cell[BoxData[
 RowBox[{
  RowBox[{"2", "+", 
   FractionBox["2", "#1"], "+", "#1"}], "&"}]], "Output",
 CellChangeTimes->{3.877287212812808*^9},
 CellLabel->"Out[13]=",ExpressionUUID->"f6b3c50e-bf5b-4994-8922-947228ec27c0"]
}, Open  ]],

Cell["I looked at the answer and one of them is the path graph 4.", "Text",
 CellChangeTimes->{{3.8772883514819603`*^9, 
  3.877288365305835*^9}},ExpressionUUID->"ec61c2df-38b8-4bb3-b3db-\
aca3c5b0b3a2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GraphData", "[", 
  RowBox[{"{", 
   RowBox[{"\"\<Path\>\"", ",", " ", "4"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.87728816134031*^9, 3.877288167105934*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"0428e6a9-6ca0-415a-9f1a-52234171135e"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{1, 2, 3, 4}, {Null, 
       SparseArray[
       Automatic, {4, 4}, 0, {
        1, {{0, 1, 3, 5, 6}, {{2}, {1}, {3}, {2}, {4}, {3}}}, Pattern}]}, {
      VertexCoordinates -> {{1, 0}, {2, 0}, {3, 0}, {4, 0}}}]]}, 
    TagBox[
     GraphicsGroupBox[
      GraphicsComplexBox[{{1., 0.}, {2., 0.}, {3., 0.}, {4., 0.}}, {
        {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
         ArrowBox[{{1, 2}, {2, 3}, {3, 4}}, 0.030239520958083826`]}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         DiskBox[1, 0.030239520958083826], DiskBox[2, 0.030239520958083826], 
         DiskBox[3, 0.030239520958083826], 
         DiskBox[4, 0.030239520958083826]}}]],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None]], "Output",
 CellChangeTimes->{3.8772881677777653`*^9},
 CellLabel->"Out[14]=",ExpressionUUID->"53514229-7c2f-4ed4-a534-92414e8c9b9d"]
}, Open  ]],

Cell["\<\
I also tried to find a relationship between one of the color properties and \
24, but couldn\[CloseCurlyQuote]t. As far as I know, GraphData does not \
include data on how many valid colorings there are of a graph. Please comment \
if you know the name of this property and if GraphData can compute it or if \
you can take the output of GraphData for a property and compute it.\
\>", "Text",
 CellChangeTimes->{{3.8772883672432804`*^9, 
  3.8772884459541287`*^9}},ExpressionUUID->"2136cab5-779a-471d-b761-\
c8830496c1f4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GraphData", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\"\<Path\>\"", ",", " ", "4"}], "}"}], ",", 
   "\"\<ChromaticInvariant\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.87728816134031*^9, 3.877288172762144*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"7df10eea-6922-4d76-9882-a81b18921fb3"],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.877288172949644*^9},
 CellLabel->"Out[15]=",ExpressionUUID->"4820c5b4-7adf-4a33-adb1-6e626d91a283"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GraphData", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\"\<Path\>\"", ",", " ", "4"}], "}"}], ",", 
   "\"\<ChromaticNumber\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.87728816134031*^9, 3.877288176871516*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"f28405fc-cf3f-4f36-b02a-ba8d28f8bf1b"],

Cell[BoxData["2"], "Output",
 CellChangeTimes->{3.877288177059086*^9},
 CellLabel->"Out[16]=",ExpressionUUID->"ea7b832a-4746-4bb5-8b26-1b242f5cb256"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"GraphData", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\"\<Path\>\"", ",", " ", "4"}], "}"}], ",", 
    "\"\<ChromaticPolynomial\>\""}], "]"}], "[", "x", "]"}]], "Input",
 CellChangeTimes->{{3.87728816134031*^9, 3.877288187180893*^9}},
 CellLabel->"In[18]:=",ExpressionUUID->"9cce0704-70b3-41bc-83d9-683692b4b73e"],

Cell[BoxData[
 RowBox[{
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", "x"}], ")"}], "3"], " ", "x"}]], "Output",
 CellChangeTimes->{{3.877288183059017*^9, 3.8772881874934034`*^9}},
 CellLabel->"Out[18]=",ExpressionUUID->"a1af7349-8a77-43de-8395-06b6302b7a33"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GraphData", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\"\<Path\>\"", ",", " ", "4"}], "}"}], ",", 
   "\"\<EdgeChromaticNumber\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.87728816134031*^9, 3.8772881977668657`*^9}},
 CellLabel->"In[20]:=",ExpressionUUID->"c64c4620-96c8-426d-9386-6d7dbe4e2552"],

Cell[BoxData["2"], "Output",
 CellChangeTimes->{{3.8772881947794943`*^9, 3.877288198079426*^9}},
 CellLabel->"Out[20]=",ExpressionUUID->"622789cf-fb89-48b9-b89e-0196d13760e7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GraphData", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\"\<Path\>\"", ",", " ", "4"}], "}"}], ",", 
   "\"\<FractionalChromaticNumber\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.87728816134031*^9, 3.877288202735591*^9}},
 CellLabel->"In[21]:=",ExpressionUUID->"30ee2c3a-0972-413c-bc7e-f75e9f86033e"],

Cell[BoxData["2"], "Output",
 CellChangeTimes->{3.8772882030012207`*^9},
 CellLabel->"Out[21]=",ExpressionUUID->"80c12f11-d2f2-40aa-8a84-0f0763b2af16"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GraphData", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\"\<Path\>\"", ",", " ", "4"}], "}"}], ",", 
   "\"\<FractionalEdgeChromaticNumber\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.87728816134031*^9, 3.87728820725696*^9}},
 CellLabel->"In[22]:=",ExpressionUUID->"29eaa051-1bfe-40a5-8d8c-d23d3d96b832"],

Cell[BoxData["2"], "Output",
 CellChangeTimes->{3.877288207569412*^9},
 CellLabel->"Out[22]=",ExpressionUUID->"6fb5acb4-e4d4-4c51-b577-33ba1b0a2be7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GraphData", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\"\<Path\>\"", ",", " ", "4"}], "}"}], ",", 
   "\"\<MinimumVertexColoring\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.87728816134031*^9, 3.8772882162877417`*^9}},
 CellLabel->"In[23]:=",ExpressionUUID->"de81d85f-5b4d-4677-9680-e191995ec50b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "2", ",", "1", ",", "2"}], "}"}]], "Output",
 CellChangeTimes->{3.8772882165846195`*^9},
 CellLabel->"Out[23]=",ExpressionUUID->"f556dd74-5ddb-4109-b04e-d0502250d626"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GraphData", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\"\<Path\>\"", ",", " ", "4"}], "}"}], ",", 
   "\"\<MinimumEdgeColoring\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.87728816134031*^9, 3.877288221574132*^9}},
 CellLabel->"In[24]:=",ExpressionUUID->"d51ff694-92bb-426f-9ad3-d8530ab5d748"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "2", ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{3.8772882218820915`*^9},
 CellLabel->"Out[24]=",ExpressionUUID->"ac3e4e8f-f7bd-44ce-8b82-f31b45978744"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GraphData", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\"\<Path\>\"", ",", " ", "4"}], "}"}], ",", 
   "\"\<MinimumWeightFractionalColoring\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.87728816134031*^9, 3.877288228490492*^9}},
 CellLabel->"In[25]:=",ExpressionUUID->"95d90286-82e6-4840-9e6e-829695f899a3"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "3"}], "}"}], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"2", ",", "4"}], "}"}], ",", "1"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.877288228787354*^9},
 CellLabel->"Out[25]=",ExpressionUUID->"f082d83a-e90c-4aff-807d-06999669c2fb"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Exercise 55", "Section",
 CellChangeTimes->{{3.877288452482757*^9, 3.877288454389039*^9}, {
  3.8772885135984454`*^9, 
  3.877288513832828*^9}},ExpressionUUID->"67a58b19-40ae-417d-968b-\
b901f68d626f"],

Cell[TextData[{
 "How many edges are there in the complete k-partite graph ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["K", 
    RowBox[{
     SubscriptBox["n", "1"], ",", 
     SubscriptBox["n", "2"], ",", "\[Ellipsis]", ",", 
     SubscriptBox["n", "k"]}]], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "16f25d47-154e-4bda-8b14-c7c1911b2c8a"],
 "?"
}], "Text",
 CellChangeTimes->{{3.8772885150514965`*^9, 
  3.8772885569690256`*^9}},ExpressionUUID->"c0fdfbc3-1860-4f21-a211-\
587ed6684195"],

Cell["I\[CloseCurlyQuote]m going to use FindSequenceFunction to find a \
pattern.", "Text",
 CellChangeTimes->{{3.877288559765806*^9, 
  3.877288575762557*^9}},ExpressionUUID->"7c4811d2-7337-49a0-8bb1-\
b2cb12f71f7b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"EdgeCount", "[", 
    RowBox[{"CompleteGraph", "[", 
     RowBox[{"ConstantArray", "[", 
      RowBox[{"2", ",", "i"}], "]"}], "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "9"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.877288581059351*^9, 3.877288596278166*^9}, 
   3.8772887119395623`*^9},
 CellLabel->"In[30]:=",ExpressionUUID->"1349628f-66ca-41d6-adea-7383af8535ff"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "4", ",", "12", ",", "24", ",", "40", ",", "60", ",", "84", ",", 
   "112", ",", "144"}], "}"}]], "Output",
 CellChangeTimes->{3.87728859677808*^9, 3.8772887122404737`*^9},
 CellLabel->"Out[30]=",ExpressionUUID->"9df0e0d9-971a-49ce-8005-bd2b7638e772"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindSequenceFunction", "[", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"EdgeCount", "[", 
     RowBox[{"CompleteGraph", "[", 
      RowBox[{"ConstantArray", "[", 
       RowBox[{"2", ",", "i"}], "]"}], "]"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "9"}], "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8772885661375585`*^9, 3.877288567637642*^9}, {
   3.8772886007744756`*^9, 3.87728860125887*^9}, 3.877288720389967*^9},
 CellLabel->"In[31]:=",ExpressionUUID->"43e3f69c-3d4f-4d18-9009-732f78e7e74e"],

Cell[BoxData[
 InterpretationBox[
  TemplateBox[<|"head" -> "DifferenceRoot", "big" -> GridBox[{{
        RowBox[{
          RowBox[{
            RowBox[{"8", " ", "\[FormalN]"}], "+", 
            RowBox[{
              RowBox[{"(", 
                RowBox[{"1", "-", "\[FormalN]"}], ")"}], " ", 
              RowBox[{"\[FormalY]", "[", "\[FormalN]", "]"}]}], "+", 
            RowBox[{
              RowBox[{"(", 
                RowBox[{
                  RowBox[{"-", "3"}], "+", "\[FormalN]"}], ")"}], " ", 
              RowBox[{"\[FormalY]", "[", 
                RowBox[{"1", "+", "\[FormalN]"}], "]"}]}]}], "\[Equal]", 
          "0"}]}, {
        RowBox[{
          RowBox[{"\[FormalY]", "[", "1", "]"}], "\[Equal]", "1"}]}, {
        RowBox[{
          RowBox[{"\[FormalY]", "[", "2", "]"}], "\[Equal]", "4"}]}, {
        RowBox[{
          RowBox[{"\[FormalY]", "[", "3", "]"}], "\[Equal]", "12"}]}, {
        RowBox[{
          RowBox[{"\[FormalY]", "[", "4", "]"}], "\[Equal]", "24"}]}}, 
      BaseStyle -> {"HolonomicInnerGrid"}], "small" -> 
    RowBox[{"\[FormalY]", "[", 
       RowBox[{"1", "+", "\[FormalN]"}], "]"}], "branchcuts" -> "None"|>,
   "HolonomicDisplay"],
  DifferenceRoot[
   Function[{\[FormalY], \[FormalN]}, {
    8 \[FormalN] + (
        1 - \[FormalN]) \[FormalY][\[FormalN]] + (-3 + \[FormalN]) \[FormalY][
        1 + \[FormalN]] == 0, \[FormalY][1] == 1, \[FormalY][2] == 
     4, \[FormalY][3] == 12, \[FormalY][4] == 24}]]]], "Output",
 CellChangeTimes->{3.8772886020244493`*^9, 3.877288721671193*^9},
 CellLabel->"Out[31]=",ExpressionUUID->"795543b1-7254-4797-89c1-eca9d40247c7"]
}, Open  ]],

Cell["I have a holonomic difference root object.", "Text",
 CellChangeTimes->{{3.8772887894345064`*^9, 
  3.877288796805657*^9}},ExpressionUUID->"1ffa4959-f0ab-432c-822d-\
9743351b8210"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"FindSequenceFunction", "[", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"EdgeCount", "[", 
      RowBox[{"CompleteGraph", "[", 
       RowBox[{"ConstantArray", "[", 
        RowBox[{"2", ",", "i"}], "]"}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "9"}], "}"}]}], "]"}], "]"}], "[", "100", 
  "]"}]], "Input",
 CellChangeTimes->{{3.8772885661375585`*^9, 3.877288567637642*^9}, {
   3.8772886007744756`*^9, 3.87728860125887*^9}, 3.877288720389967*^9, {
   3.8772888291784525`*^9, 3.877288830444113*^9}},
 CellLabel->"In[33]:=",ExpressionUUID->"9034293d-9f6e-42f7-9b66-92562bbdb4da"],

Cell[BoxData["19800"], "Output",
 CellChangeTimes->{3.8772888308815117`*^9},
 CellLabel->"Out[33]=",ExpressionUUID->"ac858c79-3c38-4045-9fd5-73f76ff00b25"]
}, Open  ]],

Cell["I have a different result for 3.", "Text",
 CellChangeTimes->{{3.8772888592991858`*^9, 
  3.87728886549059*^9}},ExpressionUUID->"64881d5b-4592-41b3-80f3-\
4f374c4456d4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindSequenceFunction", "[", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"EdgeCount", "[", 
     RowBox[{"CompleteGraph", "[", 
      RowBox[{"ConstantArray", "[", 
       RowBox[{"3", ",", "i"}], "]"}], "]"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "10"}], "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8772885661375585`*^9, 3.877288567637642*^9}, {
   3.8772886007744756`*^9, 3.87728860125887*^9}, 3.877288720389967*^9, {
   3.8772888291784525`*^9, 3.8772888540845284`*^9}},
 CellLabel->"In[35]:=",ExpressionUUID->"6de05800-1782-4f20-b5aa-04eb6febc276"],

Cell[BoxData[
 InterpretationBox[
  TemplateBox[<|"head" -> "DifferenceRoot", "big" -> GridBox[{{
        RowBox[{
          RowBox[{
            RowBox[{"18", " ", "\[FormalN]"}], "+", 
            RowBox[{
              RowBox[{"(", 
                RowBox[{"1", "-", "\[FormalN]"}], ")"}], " ", 
              RowBox[{"\[FormalY]", "[", "\[FormalN]", "]"}]}], "+", 
            RowBox[{
              RowBox[{"(", 
                RowBox[{
                  RowBox[{"-", "3"}], "+", "\[FormalN]"}], ")"}], " ", 
              RowBox[{"\[FormalY]", "[", 
                RowBox[{"1", "+", "\[FormalN]"}], "]"}]}]}], "\[Equal]", 
          "0"}]}, {
        RowBox[{
          RowBox[{"\[FormalY]", "[", "1", "]"}], "\[Equal]", "3"}]}, {
        RowBox[{
          RowBox[{"\[FormalY]", "[", "2", "]"}], "\[Equal]", "9"}]}, {
        RowBox[{
          RowBox[{"\[FormalY]", "[", "3", "]"}], "\[Equal]", "27"}]}, {
        RowBox[{
          RowBox[{"\[FormalY]", "[", "4", "]"}], "\[Equal]", "54"}]}}, 
      BaseStyle -> {"HolonomicInnerGrid"}], "small" -> 
    RowBox[{"\[FormalY]", "[", 
       RowBox[{"1", "+", "\[FormalN]"}], "]"}], "branchcuts" -> "None"|>,
   "HolonomicDisplay"],
  DifferenceRoot[
   Function[{\[FormalY], \[FormalN]}, {
    18 \[FormalN] + (
        1 - \[FormalN]) \[FormalY][\[FormalN]] + (-3 + \[FormalN]) \[FormalY][
        1 + \[FormalN]] == 0, \[FormalY][1] == 3, \[FormalY][2] == 
     9, \[FormalY][3] == 27, \[FormalY][4] == 54}]]]], "Output",
 CellChangeTimes->{{3.877288844573238*^9, 3.877288854490757*^9}},
 CellLabel->"Out[35]=",ExpressionUUID->"811959e2-429c-4278-b033-1c2c59bc54a1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindSequenceFunction", "[", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"EdgeCount", "[", 
     RowBox[{"CompleteGraph", "[", 
      RowBox[{"ConstantArray", "[", 
       RowBox[{"4", ",", "i"}], "]"}], "]"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "10"}], "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8772885661375585`*^9, 3.877288567637642*^9}, {
   3.8772886007744756`*^9, 3.87728860125887*^9}, 3.877288720389967*^9, {
   3.8772888291784525`*^9, 3.877288877204395*^9}},
 CellLabel->"In[36]:=",ExpressionUUID->"e670d664-7c5b-408e-a6f7-aa8ea3ab9ea1"],

Cell[BoxData[
 InterpretationBox[
  TemplateBox[<|"head" -> "DifferenceRoot", "big" -> GridBox[{{
        RowBox[{
          RowBox[{
            RowBox[{"32", " ", "\[FormalN]"}], "+", 
            RowBox[{
              RowBox[{"(", 
                RowBox[{"1", "-", "\[FormalN]"}], ")"}], " ", 
              RowBox[{"\[FormalY]", "[", "\[FormalN]", "]"}]}], "+", 
            RowBox[{
              RowBox[{"(", 
                RowBox[{
                  RowBox[{"-", "3"}], "+", "\[FormalN]"}], ")"}], " ", 
              RowBox[{"\[FormalY]", "[", 
                RowBox[{"1", "+", "\[FormalN]"}], "]"}]}]}], "\[Equal]", 
          "0"}]}, {
        RowBox[{
          RowBox[{"\[FormalY]", "[", "1", "]"}], "\[Equal]", "6"}]}, {
        RowBox[{
          RowBox[{"\[FormalY]", "[", "2", "]"}], "\[Equal]", "16"}]}, {
        RowBox[{
          RowBox[{"\[FormalY]", "[", "3", "]"}], "\[Equal]", "48"}]}, {
        RowBox[{
          RowBox[{"\[FormalY]", "[", "4", "]"}], "\[Equal]", "96"}]}}, 
      BaseStyle -> {"HolonomicInnerGrid"}], "small" -> 
    RowBox[{"\[FormalY]", "[", 
       RowBox[{"1", "+", "\[FormalN]"}], "]"}], "branchcuts" -> "None"|>,
   "HolonomicDisplay"],
  DifferenceRoot[
   Function[{\[FormalY], \[FormalN]}, {
    32 \[FormalN] + (
        1 - \[FormalN]) \[FormalY][\[FormalN]] + (-3 + \[FormalN]) \[FormalY][
        1 + \[FormalN]] == 0, \[FormalY][1] == 6, \[FormalY][2] == 
     16, \[FormalY][3] == 48, \[FormalY][4] == 96}]]]], "Output",
 CellChangeTimes->{3.877288877813737*^9},
 CellLabel->"Out[36]=",ExpressionUUID->"ef6df065-5190-476b-bb77-4e7d02cd433b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindSequenceFunction", "[", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"EdgeCount", "[", 
     RowBox[{"CompleteGraph", "[", 
      RowBox[{"ConstantArray", "[", 
       RowBox[{"5", ",", "i"}], "]"}], "]"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "10"}], "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8772885661375585`*^9, 3.877288567637642*^9}, {
   3.8772886007744756`*^9, 3.87728860125887*^9}, 3.877288720389967*^9, {
   3.8772888291784525`*^9, 3.877288877204395*^9}, {3.8772889084455976`*^9, 
   3.8772889109334755`*^9}},
 CellLabel->"In[38]:=",ExpressionUUID->"095587c7-bb08-4a78-bf90-f3541a17f686"],

Cell[BoxData[
 InterpretationBox[
  TemplateBox[<|"head" -> "DifferenceRoot", "big" -> GridBox[{{
        RowBox[{
          RowBox[{
            RowBox[{"50", " ", "\[FormalN]"}], "+", 
            RowBox[{
              RowBox[{"(", 
                RowBox[{"1", "-", "\[FormalN]"}], ")"}], " ", 
              RowBox[{"\[FormalY]", "[", "\[FormalN]", "]"}]}], "+", 
            RowBox[{
              RowBox[{"(", 
                RowBox[{
                  RowBox[{"-", "3"}], "+", "\[FormalN]"}], ")"}], " ", 
              RowBox[{"\[FormalY]", "[", 
                RowBox[{"1", "+", "\[FormalN]"}], "]"}]}]}], "\[Equal]", 
          "0"}]}, {
        RowBox[{
          RowBox[{"\[FormalY]", "[", "1", "]"}], "\[Equal]", "10"}]}, {
        RowBox[{
          RowBox[{"\[FormalY]", "[", "2", "]"}], "\[Equal]", "25"}]}, {
        RowBox[{
          RowBox[{"\[FormalY]", "[", "3", "]"}], "\[Equal]", "75"}]}, {
        RowBox[{
          RowBox[{"\[FormalY]", "[", "4", "]"}], "\[Equal]", "150"}]}}, 
      BaseStyle -> {"HolonomicInnerGrid"}], "small" -> 
    RowBox[{"\[FormalY]", "[", 
       RowBox[{"1", "+", "\[FormalN]"}], "]"}], "branchcuts" -> "None"|>,
   "HolonomicDisplay"],
  DifferenceRoot[
   Function[{\[FormalY], \[FormalN]}, {
    50 \[FormalN] + (
        1 - \[FormalN]) \[FormalY][\[FormalN]] + (-3 + \[FormalN]) \[FormalY][
        1 + \[FormalN]] == 0, \[FormalY][1] == 10, \[FormalY][2] == 
     25, \[FormalY][3] == 75, \[FormalY][4] == 150}]]]], "Output",
 CellChangeTimes->{3.877288911542782*^9},
 CellLabel->"Out[38]=",ExpressionUUID->"14a51cfd-cf6a-43e0-a4ec-023e7e0ee75d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindSequenceFunction", "[", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"EdgeCount", "[", 
     RowBox[{"CompleteGraph", "[", 
      RowBox[{"ConstantArray", "[", 
       RowBox[{"6", ",", "i"}], "]"}], "]"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "10"}], "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8772885661375585`*^9, 3.877288567637642*^9}, {
   3.8772886007744756`*^9, 3.87728860125887*^9}, 3.877288720389967*^9, {
   3.8772888291784525`*^9, 3.877288877204395*^9}, {3.8772889084455976`*^9, 
   3.8772889250313964`*^9}},
 CellLabel->"In[40]:=",ExpressionUUID->"beca19e1-2c37-401e-a274-d463a331a39c"],

Cell[BoxData[
 InterpretationBox[
  TemplateBox[<|"head" -> "DifferenceRoot", "big" -> GridBox[{{
        RowBox[{
          RowBox[{
            RowBox[{"72", " ", "\[FormalN]"}], "+", 
            RowBox[{
              RowBox[{"(", 
                RowBox[{"1", "-", "\[FormalN]"}], ")"}], " ", 
              RowBox[{"\[FormalY]", "[", "\[FormalN]", "]"}]}], "+", 
            RowBox[{
              RowBox[{"(", 
                RowBox[{
                  RowBox[{"-", "3"}], "+", "\[FormalN]"}], ")"}], " ", 
              RowBox[{"\[FormalY]", "[", 
                RowBox[{"1", "+", "\[FormalN]"}], "]"}]}]}], "\[Equal]", 
          "0"}]}, {
        RowBox[{
          RowBox[{"\[FormalY]", "[", "1", "]"}], "\[Equal]", "15"}]}, {
        RowBox[{
          RowBox[{"\[FormalY]", "[", "2", "]"}], "\[Equal]", "36"}]}, {
        RowBox[{
          RowBox[{"\[FormalY]", "[", "3", "]"}], "\[Equal]", "108"}]}, {
        RowBox[{
          RowBox[{"\[FormalY]", "[", "4", "]"}], "\[Equal]", "216"}]}}, 
      BaseStyle -> {"HolonomicInnerGrid"}], "small" -> 
    RowBox[{"\[FormalY]", "[", 
       RowBox[{"1", "+", "\[FormalN]"}], "]"}], "branchcuts" -> "None"|>,
   "HolonomicDisplay"],
  DifferenceRoot[
   Function[{\[FormalY], \[FormalN]}, {
    72 \[FormalN] + (
        1 - \[FormalN]) \[FormalY][\[FormalN]] + (-3 + \[FormalN]) \[FormalY][
        1 + \[FormalN]] == 0, \[FormalY][1] == 15, \[FormalY][2] == 
     36, \[FormalY][3] == 108, \[FormalY][4] == 216}]]]], "Output",
 CellChangeTimes->{3.8772889255782175`*^9},
 CellLabel->"Out[40]=",ExpressionUUID->"72bb6f36-5f0f-4612-b0e8-2cfd34268160"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindSequenceFunction", "[", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"EdgeCount", "[", 
     RowBox[{"CompleteGraph", "[", 
      RowBox[{"ConstantArray", "[", 
       RowBox[{"7", ",", "i"}], "]"}], "]"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "10"}], "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8772885661375585`*^9, 3.877288567637642*^9}, {
   3.8772886007744756`*^9, 3.87728860125887*^9}, 3.877288720389967*^9, {
   3.8772888291784525`*^9, 3.877288877204395*^9}, {3.8772889084455976`*^9, 
   3.8772889250313964`*^9}, {3.8772889725211897`*^9, 3.877288976161723*^9}},
 CellLabel->"In[44]:=",ExpressionUUID->"49c6b5f2-a6c4-4216-9a1c-1814931707ec"],

Cell[BoxData[
 InterpretationBox[
  TemplateBox[<|"head" -> "DifferenceRoot", "big" -> GridBox[{{
        RowBox[{
          RowBox[{
            RowBox[{"98", " ", "\[FormalN]"}], "+", 
            RowBox[{
              RowBox[{"(", 
                RowBox[{"1", "-", "\[FormalN]"}], ")"}], " ", 
              RowBox[{"\[FormalY]", "[", "\[FormalN]", "]"}]}], "+", 
            RowBox[{
              RowBox[{"(", 
                RowBox[{
                  RowBox[{"-", "3"}], "+", "\[FormalN]"}], ")"}], " ", 
              RowBox[{"\[FormalY]", "[", 
                RowBox[{"1", "+", "\[FormalN]"}], "]"}]}]}], "\[Equal]", 
          "0"}]}, {
        RowBox[{
          RowBox[{"\[FormalY]", "[", "1", "]"}], "\[Equal]", "21"}]}, {
        RowBox[{
          RowBox[{"\[FormalY]", "[", "2", "]"}], "\[Equal]", "49"}]}, {
        RowBox[{
          RowBox[{"\[FormalY]", "[", "3", "]"}], "\[Equal]", "147"}]}, {
        RowBox[{
          RowBox[{"\[FormalY]", "[", "4", "]"}], "\[Equal]", "294"}]}}, 
      BaseStyle -> {"HolonomicInnerGrid"}], "small" -> 
    RowBox[{"\[FormalY]", "[", 
       RowBox[{"1", "+", "\[FormalN]"}], "]"}], "branchcuts" -> "None"|>,
   "HolonomicDisplay"],
  DifferenceRoot[
   Function[{\[FormalY], \[FormalN]}, {
    98 \[FormalN] + (
        1 - \[FormalN]) \[FormalY][\[FormalN]] + (-3 + \[FormalN]) \[FormalY][
        1 + \[FormalN]] == 0, \[FormalY][1] == 21, \[FormalY][2] == 
     49, \[FormalY][3] == 147, \[FormalY][4] == 294}]]]], "Output",
 CellChangeTimes->{3.877288976536738*^9},
 CellLabel->"Out[44]=",ExpressionUUID->"b5167aca-e27c-491e-b167-32ac80e556ce"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindSequenceFunction", "[", 
  RowBox[{"{", 
   RowBox[{"24", ",", "54", ",", "96", ",", "150", ",", "216", ",", "294"}], 
   "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.877288887088734*^9, 3.8772889306955395`*^9}, {
  3.8772889818083735`*^9, 3.8772889826678915`*^9}},
 CellLabel->"In[45]:=",ExpressionUUID->"2b0eee8b-83b7-4560-ac32-e48e0d4318d0"],

Cell[BoxData[
 RowBox[{
  RowBox[{"6", " ", 
   RowBox[{"(", 
    RowBox[{"1", "+", 
     RowBox[{"2", " ", "#1"}], "+", 
     SuperscriptBox["#1", "2"]}], ")"}]}], "&"}]], "Output",
 CellChangeTimes->{{3.8772889043603506`*^9, 3.8772889310080433`*^9}, 
   3.8772889830427403`*^9},
 CellLabel->"Out[45]=",ExpressionUUID->"6b881edc-99ef-4d2e-9231-0efa1f71cb1b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"FindSequenceFunction", "[", 
   RowBox[{"{", 
    RowBox[{"24", ",", "54", ",", "96", ",", "150", ",", "216", ",", "294"}], 
    "}"}], "]"}], "[", "x", "]"}]], "Input",
 CellChangeTimes->{{3.877288887088734*^9, 3.8772889861086545`*^9}},
 CellLabel->"In[46]:=",ExpressionUUID->"27a11994-fc15-44cf-b29b-6b5ee2287007"],

Cell[BoxData[
 RowBox[{"6", " ", 
  RowBox[{"(", 
   RowBox[{"1", "+", 
    RowBox[{"2", " ", "x"}], "+", 
    SuperscriptBox["x", "2"]}], ")"}]}]], "Output",
 CellChangeTimes->{{3.877288956881958*^9, 3.8772889867180166`*^9}},
 CellLabel->"Out[46]=",ExpressionUUID->"d5f28e7b-4674-4975-80ff-1b7164950720"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{"FindSequenceFunction", "[", 
    RowBox[{"{", 
     RowBox[{"24", ",", "54", ",", "96", ",", "150", ",", "216", ",", "294"}],
      "}"}], "]"}], "[", "x", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8772889604772196`*^9, 3.8772889903679852`*^9}},
 CellLabel->"In[47]:=",ExpressionUUID->"237ec3cf-5b9d-43af-90a7-c1c1dde06516"],

Cell[BoxData[
 RowBox[{"6", " ", 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{"1", "+", "x"}], ")"}], "2"]}]], "Output",
 CellChangeTimes->{{3.877288962211607*^9, 3.8772889908678823`*^9}},
 CellLabel->"Out[47]=",ExpressionUUID->"665fa158-f585-4c59-844e-61016d1abb8d"]
}, Open  ]],

Cell[TextData[{
 "It seems like the edge count\[CloseCurlyQuote]s holonomic fourth term is \
given by ",
 Cell[BoxData[
  FormBox[
   RowBox[{"6", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", "x"}], ")"}], "2"]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "b99d1ab7-103c-40d2-ab00-8d25e557da63"],
 "."
}], "Text",
 CellChangeTimes->{{3.8772889363200407`*^9, 
  3.877288970489071*^9}},ExpressionUUID->"5e808a11-199e-4021-9917-\
8ac06cb22318"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"InputForm", "[", 
  InterpretationBox[
   TemplateBox[<|"head" -> "DifferenceRoot", "big" -> GridBox[{{
         RowBox[{
           RowBox[{
             RowBox[{"98", " ", "\[FormalN]"}], "+", 
             RowBox[{
               RowBox[{"(", 
                 RowBox[{"1", "-", "\[FormalN]"}], ")"}], " ", 
               RowBox[{"\[FormalY]", "[", "\[FormalN]", "]"}]}], "+", 
             RowBox[{
               RowBox[{"(", 
                 RowBox[{
                   RowBox[{"-", "3"}], "+", "\[FormalN]"}], ")"}], " ", 
               RowBox[{"\[FormalY]", "[", 
                 RowBox[{"1", "+", "\[FormalN]"}], "]"}]}]}], "\[Equal]", 
           "0"}]}, {
         RowBox[{
           RowBox[{"\[FormalY]", "[", "1", "]"}], "\[Equal]", "21"}]}, {
         RowBox[{
           RowBox[{"\[FormalY]", "[", "2", "]"}], "\[Equal]", "49"}]}, {
         RowBox[{
           RowBox[{"\[FormalY]", "[", "3", "]"}], "\[Equal]", "147"}]}, {
         RowBox[{
           RowBox[{"\[FormalY]", "[", "4", "]"}], "\[Equal]", "294"}]}}, 
       BaseStyle -> {"HolonomicInnerGrid"}], "small" -> 
     RowBox[{"\[FormalY]", "[", 
        RowBox[{"1", "+", "\[FormalN]"}], "]"}], "branchcuts" -> "None"|>,
    "HolonomicDisplay"],
   DifferenceRoot[
    Function[{\[FormalY], \[FormalN]}, {
     98 \[FormalN] + (
         1 - \[FormalN]) \[FormalY][\[FormalN]] + (-3 + \[FormalN]) \
\[FormalY][1 + \[FormalN]] == 0, \[FormalY][1] == 21, \[FormalY][2] == 
      49, \[FormalY][3] == 147, \[FormalY][4] == 294}]]], "]"}]], "Input",
 CellChangeTimes->{{3.877288999878664*^9, 3.8772890137541804`*^9}},
 CellLabel->"In[49]:=",ExpressionUUID->"578d6c60-2d17-45fa-aba7-f4ad2c586950"],

Cell["\<\
DifferenceRoot[Function[{\[FormalY], \[FormalN]}, {98*\[FormalN] + (1 - \
\[FormalN])*\[FormalY][\[FormalN]] + (-3 + \[FormalN])*\[FormalY][1 + \
\[FormalN]] == 0, \[FormalY][1] == 21, \[FormalY][2] == 49, \[FormalY][3] == \
147, 
   \[FormalY][4] == 294}]]\
\>", "Output",
 CellChangeTimes->{{3.8772890073401704`*^9, 3.877289014024495*^9}},
 CellLabel->
  "Out[49]//InputForm=",ExpressionUUID->"dec131f5-7278-4fd4-977f-\
d5f8dc0786c6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"First", "[", 
  RowBox[{"InputForm", "[", 
   InterpretationBox[
    TemplateBox[<|"head" -> "DifferenceRoot", "big" -> GridBox[{{
          RowBox[{
            RowBox[{
              RowBox[{"98", " ", "\[FormalN]"}], "+", 
              RowBox[{
                RowBox[{"(", 
                  RowBox[{"1", "-", "\[FormalN]"}], ")"}], " ", 
                RowBox[{"\[FormalY]", "[", "\[FormalN]", "]"}]}], "+", 
              RowBox[{
                RowBox[{"(", 
                  RowBox[{
                    RowBox[{"-", "3"}], "+", "\[FormalN]"}], ")"}], " ", 
                RowBox[{"\[FormalY]", "[", 
                  RowBox[{"1", "+", "\[FormalN]"}], "]"}]}]}], "\[Equal]", 
            "0"}]}, {
          RowBox[{
            RowBox[{"\[FormalY]", "[", "1", "]"}], "\[Equal]", "21"}]}, {
          RowBox[{
            RowBox[{"\[FormalY]", "[", "2", "]"}], "\[Equal]", "49"}]}, {
          RowBox[{
            RowBox[{"\[FormalY]", "[", "3", "]"}], "\[Equal]", "147"}]}, {
          RowBox[{
            RowBox[{"\[FormalY]", "[", "4", "]"}], "\[Equal]", "294"}]}}, 
        BaseStyle -> {"HolonomicInnerGrid"}], "small" -> 
      RowBox[{"\[FormalY]", "[", 
         RowBox[{"1", "+", "\[FormalN]"}], "]"}], "branchcuts" -> "None"|>,
     "HolonomicDisplay"],
    DifferenceRoot[
     Function[{\[FormalY], \[FormalN]}, {
      98 \[FormalN] + (
          1 - \[FormalN]) \[FormalY][\[FormalN]] + (-3 + \[FormalN]) \
\[FormalY][1 + \[FormalN]] == 0, \[FormalY][1] == 21, \[FormalY][2] == 
       49, \[FormalY][3] == 147, \[FormalY][4] == 294}]]], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.87728902000884*^9, 3.8772890209580803`*^9}},
 CellLabel->"In[50]:=",ExpressionUUID->"c404acc8-c121-451b-9dc3-65da08c8e0d8"],

Cell[BoxData[
 InterpretationBox[
  TemplateBox[<|"head" -> "DifferenceRoot", "big" -> GridBox[{{
        RowBox[{
          RowBox[{
            RowBox[{"98", " ", "\[FormalN]"}], "+", 
            RowBox[{
              RowBox[{"(", 
                RowBox[{"1", "-", "\[FormalN]"}], ")"}], " ", 
              RowBox[{"\[FormalY]", "[", "\[FormalN]", "]"}]}], "+", 
            RowBox[{
              RowBox[{"(", 
                RowBox[{
                  RowBox[{"-", "3"}], "+", "\[FormalN]"}], ")"}], " ", 
              RowBox[{"\[FormalY]", "[", 
                RowBox[{"1", "+", "\[FormalN]"}], "]"}]}]}], "\[Equal]", 
          "0"}]}, {
        RowBox[{
          RowBox[{"\[FormalY]", "[", "1", "]"}], "\[Equal]", "21"}]}, {
        RowBox[{
          RowBox[{"\[FormalY]", "[", "2", "]"}], "\[Equal]", "49"}]}, {
        RowBox[{
          RowBox[{"\[FormalY]", "[", "3", "]"}], "\[Equal]", "147"}]}, {
        RowBox[{
          RowBox[{"\[FormalY]", "[", "4", "]"}], "\[Equal]", "294"}]}}, 
      BaseStyle -> {"HolonomicInnerGrid"}], "small" -> 
    RowBox[{"\[FormalY]", "[", 
       RowBox[{"1", "+", "\[FormalN]"}], "]"}], "branchcuts" -> "None"|>,
   "HolonomicDisplay"],
  DifferenceRoot[
   Function[{\[FormalY], \[FormalN]}, {
    98 \[FormalN] + (
        1 - \[FormalN]) \[FormalY][\[FormalN]] + (-3 + \[FormalN]) \[FormalY][
        1 + \[FormalN]] == 0, \[FormalY][1] == 21, \[FormalY][2] == 
     49, \[FormalY][3] == 147, \[FormalY][4] == 294}]]]], "Output",
 CellChangeTimes->{3.8772890215205774`*^9},
 CellLabel->"Out[50]=",ExpressionUUID->"c8302f3a-9426-49fc-a17d-faf383cad76d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"First", "[", 
  RowBox[{"First", "[", 
   RowBox[{"InputForm", "[", 
    InterpretationBox[
     TemplateBox[<|"head" -> "DifferenceRoot", "big" -> GridBox[{{
           RowBox[{
             RowBox[{
               RowBox[{"98", " ", "\[FormalN]"}], "+", 
               RowBox[{
                 RowBox[{"(", 
                   RowBox[{"1", "-", "\[FormalN]"}], ")"}], " ", 
                 RowBox[{"\[FormalY]", "[", "\[FormalN]", "]"}]}], "+", 
               RowBox[{
                 RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "3"}], "+", "\[FormalN]"}], ")"}], " ", 
                 RowBox[{"\[FormalY]", "[", 
                   RowBox[{"1", "+", "\[FormalN]"}], "]"}]}]}], "\[Equal]", 
             "0"}]}, {
           RowBox[{
             RowBox[{"\[FormalY]", "[", "1", "]"}], "\[Equal]", "21"}]}, {
           RowBox[{
             RowBox[{"\[FormalY]", "[", "2", "]"}], "\[Equal]", "49"}]}, {
           RowBox[{
             RowBox[{"\[FormalY]", "[", "3", "]"}], "\[Equal]", "147"}]}, {
           RowBox[{
             RowBox[{"\[FormalY]", "[", "4", "]"}], "\[Equal]", "294"}]}}, 
         BaseStyle -> {"HolonomicInnerGrid"}], "small" -> 
       RowBox[{"\[FormalY]", "[", 
          RowBox[{"1", "+", "\[FormalN]"}], "]"}], "branchcuts" -> "None"|>,
      "HolonomicDisplay"],
     DifferenceRoot[
      Function[{\[FormalY], \[FormalN]}, {
       98 \[FormalN] + (
           1 - \[FormalN]) \[FormalY][\[FormalN]] + (-3 + \[FormalN]) \
\[FormalY][1 + \[FormalN]] == 0, \[FormalY][1] == 21, \[FormalY][2] == 
        49, \[FormalY][3] == 147, \[FormalY][4] == 294}]]], "]"}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.877289025004978*^9, 3.8772890259378853`*^9}},
 CellLabel->"In[51]:=",ExpressionUUID->"32f70458-727e-4a75-b18c-75a6c6ed812f"],

Cell[BoxData[
 RowBox[{"Function", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\[FormalY]", ",", "\[FormalN]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"98", " ", "\[FormalN]"}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", "\[FormalN]"}], ")"}], " ", 
        RowBox[{"\[FormalY]", "[", "\[FormalN]", "]"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "3"}], "+", "\[FormalN]"}], ")"}], " ", 
        RowBox[{"\[FormalY]", "[", 
         RowBox[{"1", "+", "\[FormalN]"}], "]"}]}]}], "\[Equal]", "0"}], ",", 
     RowBox[{
      RowBox[{"\[FormalY]", "[", "1", "]"}], "\[Equal]", "21"}], ",", 
     RowBox[{
      RowBox[{"\[FormalY]", "[", "2", "]"}], "\[Equal]", "49"}], ",", 
     RowBox[{
      RowBox[{"\[FormalY]", "[", "3", "]"}], "\[Equal]", "147"}], ",", 
     RowBox[{
      RowBox[{"\[FormalY]", "[", "4", "]"}], "\[Equal]", "294"}]}], "}"}]}], 
  "]"}]], "Output",
 CellChangeTimes->{3.877289026187874*^9},
 CellLabel->"Out[51]=",ExpressionUUID->"ae3f1645-fb4d-4b96-936f-195fcf892611"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Last", "[", 
  RowBox[{"First", "[", 
   RowBox[{"First", "[", 
    RowBox[{"InputForm", "[", 
     InterpretationBox[
      TemplateBox[<|"head" -> "DifferenceRoot", "big" -> GridBox[{{
            RowBox[{
              RowBox[{
                RowBox[{"98", " ", "\[FormalN]"}], "+", 
                RowBox[{
                  RowBox[{"(", 
                    RowBox[{"1", "-", "\[FormalN]"}], ")"}], " ", 
                  RowBox[{"\[FormalY]", "[", "\[FormalN]", "]"}]}], "+", 
                RowBox[{
                  RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "3"}], "+", "\[FormalN]"}], ")"}], " ", 
                  RowBox[{"\[FormalY]", "[", 
                    RowBox[{"1", "+", "\[FormalN]"}], "]"}]}]}], "\[Equal]", 
              "0"}]}, {
            RowBox[{
              RowBox[{"\[FormalY]", "[", "1", "]"}], "\[Equal]", "21"}]}, {
            RowBox[{
              RowBox[{"\[FormalY]", "[", "2", "]"}], "\[Equal]", "49"}]}, {
            RowBox[{
              RowBox[{"\[FormalY]", "[", "3", "]"}], "\[Equal]", "147"}]}, {
            RowBox[{
              RowBox[{"\[FormalY]", "[", "4", "]"}], "\[Equal]", "294"}]}}, 
          BaseStyle -> {"HolonomicInnerGrid"}], "small" -> 
        RowBox[{"\[FormalY]", "[", 
           RowBox[{"1", "+", "\[FormalN]"}], "]"}], "branchcuts" -> "None"|>,
       "HolonomicDisplay"],
      DifferenceRoot[
       Function[{\[FormalY], \[FormalN]}, {
        98 \[FormalN] + (
            1 - \[FormalN]) \[FormalY][\[FormalN]] + (-3 + \[FormalN]) \
\[FormalY][1 + \[FormalN]] == 0, \[FormalY][1] == 21, \[FormalY][2] == 
         49, \[FormalY][3] == 147, \[FormalY][4] == 294}]]], "]"}], "]"}], 
   "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8772890381664977`*^9, 3.8772890412205954`*^9}},
 CellLabel->"In[52]:=",ExpressionUUID->"3acaef4d-5ffb-4e6f-b4f2-9363fc3c5f8f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"98", " ", "\[FormalN]"}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", "\[FormalN]"}], ")"}], " ", 
      RowBox[{"\[FormalY]", "[", "\[FormalN]", "]"}]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "3"}], "+", "\[FormalN]"}], ")"}], " ", 
      RowBox[{"\[FormalY]", "[", 
       RowBox[{"1", "+", "\[FormalN]"}], "]"}]}]}], "\[Equal]", "0"}], ",", 
   RowBox[{
    RowBox[{"\[FormalY]", "[", "1", "]"}], "\[Equal]", "21"}], ",", 
   RowBox[{
    RowBox[{"\[FormalY]", "[", "2", "]"}], "\[Equal]", "49"}], ",", 
   RowBox[{
    RowBox[{"\[FormalY]", "[", "3", "]"}], "\[Equal]", "147"}], ",", 
   RowBox[{
    RowBox[{"\[FormalY]", "[", "4", "]"}], "\[Equal]", "294"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.8772890414705915`*^9},
 CellLabel->"Out[52]=",ExpressionUUID->"eeeb552d-cccf-48ab-937d-9141a2cc8b73"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Rest", "[", 
  RowBox[{"Last", "[", 
   RowBox[{"First", "[", 
    RowBox[{"First", "[", 
     RowBox[{"InputForm", "[", 
      InterpretationBox[
       TemplateBox[<|"head" -> "DifferenceRoot", "big" -> GridBox[{{
             RowBox[{
               RowBox[{
                 RowBox[{"98", " ", "\[FormalN]"}], "+", 
                 RowBox[{
                   RowBox[{"(", 
                    RowBox[{"1", "-", "\[FormalN]"}], ")"}], " ", 
                   RowBox[{"\[FormalY]", "[", "\[FormalN]", "]"}]}], "+", 
                 RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "3"}], "+", "\[FormalN]"}], ")"}], " ", 
                   RowBox[{"\[FormalY]", "[", 
                    RowBox[{"1", "+", "\[FormalN]"}], "]"}]}]}], "\[Equal]", 
               "0"}]}, {
             RowBox[{
               RowBox[{"\[FormalY]", "[", "1", "]"}], "\[Equal]", "21"}]}, {
             RowBox[{
               RowBox[{"\[FormalY]", "[", "2", "]"}], "\[Equal]", "49"}]}, {
             RowBox[{
               RowBox[{"\[FormalY]", "[", "3", "]"}], "\[Equal]", "147"}]}, {
             RowBox[{
               RowBox[{"\[FormalY]", "[", "4", "]"}], "\[Equal]", "294"}]}}, 
           BaseStyle -> {"HolonomicInnerGrid"}], "small" -> 
         RowBox[{"\[FormalY]", "[", 
            RowBox[{"1", "+", "\[FormalN]"}], "]"}], "branchcuts" -> "None"|>,
        "HolonomicDisplay"],
       DifferenceRoot[
        Function[{\[FormalY], \[FormalN]}, {
         98 \[FormalN] + (
             1 - \[FormalN]) \[FormalY][\[FormalN]] + (-3 + \[FormalN]) \
\[FormalY][1 + \[FormalN]] == 0, \[FormalY][1] == 21, \[FormalY][2] == 
          49, \[FormalY][3] == 147, \[FormalY][4] == 294}]]], "]"}], "]"}], 
    "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8772890447518325`*^9, 3.8772890455507994`*^9}},
 CellLabel->"In[53]:=",ExpressionUUID->"e492ccf9-3661-49ac-92d6-c7f6ddd9bb40"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"\[FormalY]", "[", "1", "]"}], "\[Equal]", "21"}], ",", 
   RowBox[{
    RowBox[{"\[FormalY]", "[", "2", "]"}], "\[Equal]", "49"}], ",", 
   RowBox[{
    RowBox[{"\[FormalY]", "[", "3", "]"}], "\[Equal]", "147"}], ",", 
   RowBox[{
    RowBox[{"\[FormalY]", "[", "4", "]"}], "\[Equal]", "294"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.8772890458164415`*^9},
 CellLabel->"Out[53]=",ExpressionUUID->"8e8211aa-2068-451e-a818-aea76dd84bb8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Last", "/@", 
  RowBox[{"Rest", "[", 
   RowBox[{"Last", "[", 
    RowBox[{"First", "[", 
     RowBox[{"First", "[", 
      RowBox[{"InputForm", "[", 
       InterpretationBox[
        TemplateBox[<|"head" -> "DifferenceRoot", "big" -> GridBox[{{
              RowBox[{
                RowBox[{
                  RowBox[{"98", " ", "\[FormalN]"}], "+", 
                  RowBox[{
                    RowBox[{"(", 
                    RowBox[{"1", "-", "\[FormalN]"}], ")"}], " ", 
                    RowBox[{"\[FormalY]", "[", "\[FormalN]", "]"}]}], "+", 
                  RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "3"}], "+", "\[FormalN]"}], ")"}], " ", 
                    RowBox[{"\[FormalY]", "[", 
                    RowBox[{"1", "+", "\[FormalN]"}], "]"}]}]}], "\[Equal]", 
                "0"}]}, {
              RowBox[{
                RowBox[{"\[FormalY]", "[", "1", "]"}], "\[Equal]", "21"}]}, {
              RowBox[{
                RowBox[{"\[FormalY]", "[", "2", "]"}], "\[Equal]", "49"}]}, {
              RowBox[{
                RowBox[{"\[FormalY]", "[", "3", "]"}], "\[Equal]", "147"}]}, {
              RowBox[{
                RowBox[{"\[FormalY]", "[", "4", "]"}], "\[Equal]", "294"}]}}, 
            BaseStyle -> {"HolonomicInnerGrid"}], "small" -> 
          RowBox[{"\[FormalY]", "[", 
             RowBox[{"1", "+", "\[FormalN]"}], "]"}], "branchcuts" -> "None"|>,
         "HolonomicDisplay"],
        DifferenceRoot[
         Function[{\[FormalY], \[FormalN]}, {
          98 \[FormalN] + (
              1 - \[FormalN]) \[FormalY][\[FormalN]] + (-3 + \[FormalN]) \
\[FormalY][1 + \[FormalN]] == 0, \[FormalY][1] == 21, \[FormalY][2] == 
           49, \[FormalY][3] == 147, \[FormalY][4] == 294}]]], "]"}], "]"}], 
     "]"}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8772890731775513`*^9, 3.8772890760924006`*^9}},
 CellLabel->"In[54]:=",ExpressionUUID->"ae3655b1-ee90-470a-a27f-feffd9d2f5a2"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"21", ",", "49", ",", "147", ",", "294"}], "}"}]], "Output",
 CellChangeTimes->{3.8772890763425117`*^9},
 CellLabel->"Out[54]=",ExpressionUUID->"248c558c-9308-4d4c-af67-52311751dc1d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"Last", "/@", 
    RowBox[{"Rest", "[", 
     RowBox[{"Last", "[", 
      RowBox[{"First", "[", 
       RowBox[{"First", "[", 
        RowBox[{"InputForm", "[", 
         RowBox[{"FindSequenceFunction", "[", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"EdgeCount", "[", 
             RowBox[{"CompleteGraph", "[", 
              RowBox[{"ConstantArray", "[", 
               RowBox[{"e", ",", "i"}], "]"}], "]"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "10"}], "}"}]}], "]"}], "]"}], "]"}], "]"}], 
       "]"}], "]"}], "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"e", ",", "2", ",", "7"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8772890731775513`*^9, 3.8772891107343464`*^9}},
 CellLabel->"In[55]:=",ExpressionUUID->"df843fcb-e0d2-45e5-84ba-23fd071fc2b6"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "4", ",", "12", ",", "24"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "9", ",", "27", ",", "54"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "16", ",", "48", ",", "96"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "25", ",", "75", ",", "150"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"15", ",", "36", ",", "108", ",", "216"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"21", ",", "49", ",", "147", ",", "294"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.877289112343671*^9},
 CellLabel->"Out[55]=",ExpressionUUID->"eca5992c-ec7e-4dd4-a3ff-0870a51a21f7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Transpose", "[", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"Last", "/@", 
     RowBox[{"Rest", "[", 
      RowBox[{"Last", "[", 
       RowBox[{"First", "[", 
        RowBox[{"First", "[", 
         RowBox[{"InputForm", "[", 
          RowBox[{"FindSequenceFunction", "[", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"EdgeCount", "[", 
              RowBox[{"CompleteGraph", "[", 
               RowBox[{"ConstantArray", "[", 
                RowBox[{"e", ",", "i"}], "]"}], "]"}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "10"}], "}"}]}], "]"}], "]"}], "]"}], "]"}], 
        "]"}], "]"}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"e", ",", "2", ",", "7"}], "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.877289125460405*^9, 3.87728912777845*^9}},
 CellLabel->"In[57]:=",ExpressionUUID->"6cedfb15-cda9-43cf-a239-18868df4fdba"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "3", ",", "6", ",", "10", ",", "15", ",", "21"}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "9", ",", "16", ",", "25", ",", "36", ",", "49"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"12", ",", "27", ",", "48", ",", "75", ",", "108", ",", "147"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"24", ",", "54", ",", "96", ",", "150", ",", "216", ",", "294"}], 
    "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.8772891286377306`*^9},
 CellLabel->"Out[57]=",ExpressionUUID->"35097751-9197-45e2-957b-98607a3c59ce"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindSequenceFunction", "/@", 
  RowBox[{"Transpose", "[", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Last", "/@", 
      RowBox[{"Rest", "[", 
       RowBox[{"Last", "[", 
        RowBox[{"First", "[", 
         RowBox[{"First", "[", 
          RowBox[{"FindSequenceFunction", "[", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"EdgeCount", "[", 
              RowBox[{"CompleteGraph", "[", 
               RowBox[{"ConstantArray", "[", 
                RowBox[{"e", ",", "i"}], "]"}], "]"}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "10"}], "}"}]}], "]"}], "]"}], "]"}], "]"}], 
        "]"}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"e", ",", "2", ",", "7"}], "}"}]}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8772891314502697`*^9, 3.877289141499793*^9}, {
  3.8772892668277793`*^9, 3.877289293964425*^9}},
 CellLabel->"In[67]:=",ExpressionUUID->"99b98f0d-d9a7-43ba-bc74-159994098ead"],

Cell[BoxData[
 TemplateBox[{
  "Rest", "normal", 
   "\"Nonatomic expression expected at position \
\\!\\(\\*RowBox[{\\\"1\\\"}]\\) in \\!\\(\\*RowBox[{\\\"Rest\\\", \\\"[\\\", \
\\\"\[FormalN]\\\", \\\"]\\\"}]\\).\"", 2, 67, 19, 16937363724473571974, 
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8772892947925367`*^9},
 CellLabel->
  "During evaluation of \
In[67]:=",ExpressionUUID->"cd0e2ab4-ccdf-4717-9f6a-aa4fee7d5b2d"],

Cell[BoxData[
 TemplateBox[{
  "Last", "normal", 
   "\"Nonatomic expression expected at position \
\\!\\(\\*RowBox[{\\\"1\\\"}]\\) in \\!\\(\\*RowBox[{\\\"Last\\\", \\\"[\\\", \
\\\"\[FormalN]\\\", \\\"]\\\"}]\\).\"", 2, 67, 20, 16937363724473571974, 
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8772892954956603`*^9},
 CellLabel->
  "During evaluation of \
In[67]:=",ExpressionUUID->"b08e8bca-25e7-483b-a4e9-886048baf5fa"],

Cell[BoxData[
 TemplateBox[{
  "Last", "argt", 
   "\"\\!\\(\\*RowBox[{\\\"Last\\\"}]\\) called with \\!\\(\\*RowBox[{\\\"0\\\
\"}]\\) arguments; \\!\\(\\*RowBox[{\\\"1\\\"}]\\) or \
\\!\\(\\*RowBox[{\\\"2\\\"}]\\) arguments are expected.\"", 2, 67, 21, 
   16937363724473571974, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.87728929616754*^9},
 CellLabel->
  "During evaluation of \
In[67]:=",ExpressionUUID->"edbde5dc-c585-4f5e-ad12-94f1aeb77110"],

Cell[BoxData[
 TemplateBox[{
  "Rest", "normal", 
   "\"Nonatomic expression expected at position \
\\!\\(\\*RowBox[{\\\"1\\\"}]\\) in \\!\\(\\*RowBox[{\\\"Rest\\\", \\\"[\\\", \
\\\"\[FormalN]\\\", \\\"]\\\"}]\\).\"", 2, 67, 22, 16937363724473571974, 
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.877289296855035*^9},
 CellLabel->
  "During evaluation of \
In[67]:=",ExpressionUUID->"62d77a80-711e-4ab2-b9ef-0ae09031b3a2"],

Cell[BoxData[
 TemplateBox[{
  "Last", "normal", 
   "\"Nonatomic expression expected at position \
\\!\\(\\*RowBox[{\\\"1\\\"}]\\) in \\!\\(\\*RowBox[{\\\"Last\\\", \\\"[\\\", \
\\\"\[FormalN]\\\", \\\"]\\\"}]\\).\"", 2, 67, 23, 16937363724473571974, 
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8772892974800596`*^9},
 CellLabel->
  "During evaluation of \
In[67]:=",ExpressionUUID->"cd8f0d0c-3e3e-4cf4-9686-7c65fd05fbf3"],

Cell[BoxData[
 TemplateBox[{
  "Last", "argt", 
   "\"\\!\\(\\*RowBox[{\\\"Last\\\"}]\\) called with \\!\\(\\*RowBox[{\\\"0\\\
\"}]\\) arguments; \\!\\(\\*RowBox[{\\\"1\\\"}]\\) or \
\\!\\(\\*RowBox[{\\\"2\\\"}]\\) arguments are expected.\"", 2, 67, 24, 
   16937363724473571974, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8772892981050367`*^9},
 CellLabel->
  "During evaluation of \
In[67]:=",ExpressionUUID->"969cb7eb-7f8f-4785-a4d8-0caf61787c1e"],

Cell[BoxData[
 TemplateBox[{
  "Rest", "normal", 
   "\"Nonatomic expression expected at position \
\\!\\(\\*RowBox[{\\\"1\\\"}]\\) in \\!\\(\\*RowBox[{\\\"Rest\\\", \\\"[\\\", \
\\\"\[FormalN]\\\", \\\"]\\\"}]\\).\"", 2, 67, 25, 16937363724473571974, 
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8772892987769394`*^9},
 CellLabel->
  "During evaluation of \
In[67]:=",ExpressionUUID->"a4f1239a-fbbc-45dd-81d5-f0e6a588ae08"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Rest\\\", \\\"::\\\", \
\\\"normal\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"", 2, 67, 26, 16937363724473571974, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.877289299448791*^9},
 CellLabel->
  "During evaluation of \
In[67]:=",ExpressionUUID->"57369f6f-b2e4-4258-9ee4-072249bb38f1"],

Cell[BoxData[
 TemplateBox[{
  "Last", "normal", 
   "\"Nonatomic expression expected at position \
\\!\\(\\*RowBox[{\\\"1\\\"}]\\) in \\!\\(\\*RowBox[{\\\"Last\\\", \\\"[\\\", \
\\\"\[FormalN]\\\", \\\"]\\\"}]\\).\"", 2, 67, 27, 16937363724473571974, 
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8772893001519117`*^9},
 CellLabel->
  "During evaluation of \
In[67]:=",ExpressionUUID->"141fc0a7-2aa5-4b90-9bf4-f2a1661c76d4"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Last\\\", \\\"::\\\", \
\\\"normal\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"", 2, 67, 28, 16937363724473571974, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8772893008081813`*^9},
 CellLabel->
  "During evaluation of \
In[67]:=",ExpressionUUID->"6f47cd7d-be17-418a-a626-3ce1b4c01cd0"],

Cell[BoxData[
 TemplateBox[{
  "Last", "argt", 
   "\"\\!\\(\\*RowBox[{\\\"Last\\\"}]\\) called with \\!\\(\\*RowBox[{\\\"0\\\
\"}]\\) arguments; \\!\\(\\*RowBox[{\\\"1\\\"}]\\) or \
\\!\\(\\*RowBox[{\\\"2\\\"}]\\) arguments are expected.\"", 2, 67, 29, 
   16937363724473571974, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8772893014644127`*^9},
 CellLabel->
  "During evaluation of \
In[67]:=",ExpressionUUID->"1dc060fb-6a3e-4239-a9b6-e2d90b732a31"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Last\\\", \\\"::\\\", \
\\\"argt\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"", 2, 67, 30, 16937363724473571974, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8772893021206636`*^9},
 CellLabel->
  "During evaluation of \
In[67]:=",ExpressionUUID->"1978343b-d2ea-4c1e-8fd3-c4130048b0d3"],

Cell[BoxData[
 TemplateBox[{
  "FindSequenceFunction", "list", 
   "\"List expected at position \\!\\(\\*RowBox[{\\\"1\\\"}]\\) in \
\\!\\(\\*RowBox[{\\\"FindSequenceFunction\\\", \\\"[\\\", \
RowBox[{\\\"Last\\\", \\\"[\\\", \\\"]\\\"}], \\\"]\\\"}]\\).\"", 2, 67, 31, 
   16937363724473571974, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.877289302761326*^9},
 CellLabel->
  "During evaluation of \
In[67]:=",ExpressionUUID->"08c93b2a-12ff-4e42-9e73-a9eb2d45766e"],

Cell[BoxData[
 TemplateBox[{
  "FindSequenceFunction", "list", 
   "\"List expected at position \\!\\(\\*RowBox[{\\\"1\\\"}]\\) in \
\\!\\(\\*RowBox[{\\\"FindSequenceFunction\\\", \\\"[\\\", \
RowBox[{\\\"Last\\\", \\\"[\\\", \\\"]\\\"}], \\\"]\\\"}]\\).\"", 2, 67, 32, 
   16937363724473571974, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8772893034956894`*^9},
 CellLabel->
  "During evaluation of \
In[67]:=",ExpressionUUID->"5649b9f3-d01d-4377-8654-a14093d0444d"],

Cell[BoxData[
 TemplateBox[{
  "FindSequenceFunction", "list", 
   "\"List expected at position \\!\\(\\*RowBox[{\\\"1\\\"}]\\) in \
\\!\\(\\*RowBox[{\\\"FindSequenceFunction\\\", \\\"[\\\", \
RowBox[{\\\"Last\\\", \\\"[\\\", \\\"]\\\"}], \\\"]\\\"}]\\).\"", 2, 67, 33, 
   16937363724473571974, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8772893047157264`*^9},
 CellLabel->
  "During evaluation of \
In[67]:=",ExpressionUUID->"08864687-8deb-46dc-bf9a-c3302a5258b7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Last", "[", 
  RowBox[{"First", "[", 
   RowBox[{"First", "[", 
    RowBox[{"InputForm", "[", 
     InterpretationBox[
      TemplateBox[<|"head" -> "DifferenceRoot", "big" -> GridBox[{{
            RowBox[{
              RowBox[{
                RowBox[{"98", " ", "\[FormalN]"}], "+", 
                RowBox[{
                  RowBox[{"(", 
                    RowBox[{"1", "-", "\[FormalN]"}], ")"}], " ", 
                  RowBox[{"\[FormalY]", "[", "\[FormalN]", "]"}]}], "+", 
                RowBox[{
                  RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "3"}], "+", "\[FormalN]"}], ")"}], " ", 
                  RowBox[{"\[FormalY]", "[", 
                    RowBox[{"1", "+", "\[FormalN]"}], "]"}]}]}], "\[Equal]", 
              "0"}]}, {
            RowBox[{
              RowBox[{"\[FormalY]", "[", "1", "]"}], "\[Equal]", "21"}]}, {
            RowBox[{
              RowBox[{"\[FormalY]", "[", "2", "]"}], "\[Equal]", "49"}]}, {
            RowBox[{
              RowBox[{"\[FormalY]", "[", "3", "]"}], "\[Equal]", "147"}]}, {
            RowBox[{
              RowBox[{"\[FormalY]", "[", "4", "]"}], "\[Equal]", "294"}]}}, 
          BaseStyle -> {"HolonomicInnerGrid"}], "small" -> 
        RowBox[{"\[FormalY]", "[", 
           RowBox[{"1", "+", "\[FormalN]"}], "]"}], "branchcuts" -> "None"|>,
       "HolonomicDisplay"],
      DifferenceRoot[
       Function[{\[FormalY], \[FormalN]}, {
        98 \[FormalN] + (
            1 - \[FormalN]) \[FormalY][\[FormalN]] + (-3 + \[FormalN]) \
\[FormalY][1 + \[FormalN]] == 0, \[FormalY][1] == 21, \[FormalY][2] == 
         49, \[FormalY][3] == 147, \[FormalY][4] == 294}]]], "]"}], "]"}], 
   "]"}], "]"}]], "Input",
 CellLabel->"In[61]:=",ExpressionUUID->"8d39bc1a-1598-43ea-a82d-0292cc31d3b1"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"98", " ", "\[FormalN]"}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", "\[FormalN]"}], ")"}], " ", 
      RowBox[{"\[FormalY]", "[", "\[FormalN]", "]"}]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "3"}], "+", "\[FormalN]"}], ")"}], " ", 
      RowBox[{"\[FormalY]", "[", 
       RowBox[{"1", "+", "\[FormalN]"}], "]"}]}]}], "\[Equal]", "0"}], ",", 
   RowBox[{
    RowBox[{"\[FormalY]", "[", "1", "]"}], "\[Equal]", "21"}], ",", 
   RowBox[{
    RowBox[{"\[FormalY]", "[", "2", "]"}], "\[Equal]", "49"}], ",", 
   RowBox[{
    RowBox[{"\[FormalY]", "[", "3", "]"}], "\[Equal]", "147"}], ",", 
   RowBox[{
    RowBox[{"\[FormalY]", "[", "4", "]"}], "\[Equal]", "294"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.877289235002612*^9},
 CellLabel->"Out[61]=",ExpressionUUID->"2a887b7b-48ea-4709-a066-6e870cf92dd5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"First", "[", 
  RowBox[{"Last", "[", 
   RowBox[{"First", "[", 
    RowBox[{"First", "[", 
     RowBox[{"InputForm", "[", 
      InterpretationBox[
       TemplateBox[<|"head" -> "DifferenceRoot", "big" -> GridBox[{{
             RowBox[{
               RowBox[{
                 RowBox[{"98", " ", "\[FormalN]"}], "+", 
                 RowBox[{
                   RowBox[{"(", 
                    RowBox[{"1", "-", "\[FormalN]"}], ")"}], " ", 
                   RowBox[{"\[FormalY]", "[", "\[FormalN]", "]"}]}], "+", 
                 RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "3"}], "+", "\[FormalN]"}], ")"}], " ", 
                   RowBox[{"\[FormalY]", "[", 
                    RowBox[{"1", "+", "\[FormalN]"}], "]"}]}]}], "\[Equal]", 
               "0"}]}, {
             RowBox[{
               RowBox[{"\[FormalY]", "[", "1", "]"}], "\[Equal]", "21"}]}, {
             RowBox[{
               RowBox[{"\[FormalY]", "[", "2", "]"}], "\[Equal]", "49"}]}, {
             RowBox[{
               RowBox[{"\[FormalY]", "[", "3", "]"}], "\[Equal]", "147"}]}, {
             RowBox[{
               RowBox[{"\[FormalY]", "[", "4", "]"}], "\[Equal]", "294"}]}}, 
           BaseStyle -> {"HolonomicInnerGrid"}], "small" -> 
         RowBox[{"\[FormalY]", "[", 
            RowBox[{"1", "+", "\[FormalN]"}], "]"}], "branchcuts" -> "None"|>,
        "HolonomicDisplay"],
       DifferenceRoot[
        Function[{\[FormalY], \[FormalN]}, {
         98 \[FormalN] + (
             1 - \[FormalN]) \[FormalY][\[FormalN]] + (-3 + \[FormalN]) \
\[FormalY][1 + \[FormalN]] == 0, \[FormalY][1] == 21, \[FormalY][2] == 
          49, \[FormalY][3] == 147, \[FormalY][4] == 294}]]], "]"}], "]"}], 
    "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.877289237565128*^9, 3.877289238893273*^9}},
 CellLabel->"In[62]:=",ExpressionUUID->"90c8a528-96f9-4d3e-b442-a8698a961341"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"98", " ", "\[FormalN]"}], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "-", "\[FormalN]"}], ")"}], " ", 
    RowBox[{"\[FormalY]", "[", "\[FormalN]", "]"}]}], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "3"}], "+", "\[FormalN]"}], ")"}], " ", 
    RowBox[{"\[FormalY]", "[", 
     RowBox[{"1", "+", "\[FormalN]"}], "]"}]}]}], "\[Equal]", "0"}]], "Output",
 CellChangeTimes->{3.8772892392057495`*^9},
 CellLabel->"Out[62]=",ExpressionUUID->"4c87465e-5c47-4590-86f9-bbf9603c671c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"First", "[", 
  RowBox[{"First", "[", 
   RowBox[{"Last", "[", 
    RowBox[{"First", "[", 
     RowBox[{"First", "[", 
      RowBox[{"InputForm", "[", 
       InterpretationBox[
        TemplateBox[<|"head" -> "DifferenceRoot", "big" -> GridBox[{{
              RowBox[{
                RowBox[{
                  RowBox[{"98", " ", "\[FormalN]"}], "+", 
                  RowBox[{
                    RowBox[{"(", 
                    RowBox[{"1", "-", "\[FormalN]"}], ")"}], " ", 
                    RowBox[{"\[FormalY]", "[", "\[FormalN]", "]"}]}], "+", 
                  RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "3"}], "+", "\[FormalN]"}], ")"}], " ", 
                    RowBox[{"\[FormalY]", "[", 
                    RowBox[{"1", "+", "\[FormalN]"}], "]"}]}]}], "\[Equal]", 
                "0"}]}, {
              RowBox[{
                RowBox[{"\[FormalY]", "[", "1", "]"}], "\[Equal]", "21"}]}, {
              RowBox[{
                RowBox[{"\[FormalY]", "[", "2", "]"}], "\[Equal]", "49"}]}, {
              RowBox[{
                RowBox[{"\[FormalY]", "[", "3", "]"}], "\[Equal]", "147"}]}, {
              RowBox[{
                RowBox[{"\[FormalY]", "[", "4", "]"}], "\[Equal]", "294"}]}}, 
            BaseStyle -> {"HolonomicInnerGrid"}], "small" -> 
          RowBox[{"\[FormalY]", "[", 
             RowBox[{"1", "+", "\[FormalN]"}], "]"}], "branchcuts" -> "None"|>,
         "HolonomicDisplay"],
        DifferenceRoot[
         Function[{\[FormalY], \[FormalN]}, {
          98 \[FormalN] + (
              1 - \[FormalN]) \[FormalY][\[FormalN]] + (-3 + \[FormalN]) \
\[FormalY][1 + \[FormalN]] == 0, \[FormalY][1] == 21, \[FormalY][2] == 
           49, \[FormalY][3] == 147, \[FormalY][4] == 294}]]], "]"}], "]"}], 
     "]"}], "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.877289242143276*^9, 3.877289243169925*^9}},
 CellLabel->"In[63]:=",ExpressionUUID->"e2d57575-295e-4d70-95a9-f19c6320910d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"98", " ", "\[FormalN]"}], "+", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"1", "-", "\[FormalN]"}], ")"}], " ", 
   RowBox[{"\[FormalY]", "[", "\[FormalN]", "]"}]}], "+", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "3"}], "+", "\[FormalN]"}], ")"}], " ", 
   RowBox[{"\[FormalY]", "[", 
    RowBox[{"1", "+", "\[FormalN]"}], "]"}]}]}]], "Output",
 CellChangeTimes->{3.8772892434199004`*^9},
 CellLabel->"Out[63]=",ExpressionUUID->"ed273602-9d70-451b-9ca2-d00d605efe89"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"First", "[", 
  RowBox[{"First", "[", 
   RowBox[{"First", "[", 
    RowBox[{"Last", "[", 
     RowBox[{"First", "[", 
      RowBox[{"First", "[", 
       RowBox[{"InputForm", "[", 
        InterpretationBox[
         TemplateBox[<|"head" -> "DifferenceRoot", "big" -> GridBox[{{
               RowBox[{
                 RowBox[{
                   RowBox[{"98", " ", "\[FormalN]"}], "+", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{"1", "-", "\[FormalN]"}], ")"}], " ", 
                    RowBox[{"\[FormalY]", "[", "\[FormalN]", "]"}]}], "+", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "3"}], "+", "\[FormalN]"}], ")"}], " ", 
                    RowBox[{"\[FormalY]", "[", 
                    RowBox[{"1", "+", "\[FormalN]"}], "]"}]}]}], "\[Equal]", 
                 "0"}]}, {
               RowBox[{
                 RowBox[{"\[FormalY]", "[", "1", "]"}], "\[Equal]", "21"}]}, {
               RowBox[{
                 RowBox[{"\[FormalY]", "[", "2", "]"}], "\[Equal]", "49"}]}, {
               RowBox[{
                 RowBox[{"\[FormalY]", "[", "3", "]"}], "\[Equal]", "147"}]}, {
               RowBox[{
                 RowBox[{"\[FormalY]", "[", "4", "]"}], "\[Equal]", "294"}]}},
              BaseStyle -> {"HolonomicInnerGrid"}], "small" -> 
           RowBox[{"\[FormalY]", "[", 
              RowBox[{"1", "+", "\[FormalN]"}], "]"}], "branchcuts" -> "None"|>,
          "HolonomicDisplay"],
         DifferenceRoot[
          
          Function[{\[FormalY], \[FormalN]}, {
           98 \[FormalN] + (
               1 - \[FormalN]) \[FormalY][\[FormalN]] + (-3 + \[FormalN]) \
\[FormalY][1 + \[FormalN]] == 0, \[FormalY][1] == 21, \[FormalY][2] == 
            49, \[FormalY][3] == 147, \[FormalY][4] == 294}]]], "]"}], "]"}], 
      "]"}], "]"}], "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.877289247591793*^9, 3.877289248463244*^9}},
 CellLabel->"In[64]:=",ExpressionUUID->"6af6fba6-b764-41ce-acc8-b072c7a241d8"],

Cell[BoxData[
 RowBox[{"98", " ", "\[FormalN]"}]], "Output",
 CellChangeTimes->{3.8772892487132263`*^9},
 CellLabel->"Out[64]=",ExpressionUUID->"a5521c15-6707-4002-a7df-c15016e0815f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"First", "[", 
  RowBox[{"First", "[", 
   RowBox[{"First", "[", 
    RowBox[{"First", "[", 
     RowBox[{"Last", "[", 
      RowBox[{"First", "[", 
       RowBox[{"First", "[", 
        RowBox[{"InputForm", "[", 
         InterpretationBox[
          TemplateBox[<|"head" -> "DifferenceRoot", "big" -> GridBox[{{
                RowBox[{
                  RowBox[{
                    RowBox[{"98", " ", "\[FormalN]"}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"1", "-", "\[FormalN]"}], ")"}], " ", 
                    RowBox[{"\[FormalY]", "[", "\[FormalN]", "]"}]}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "3"}], "+", "\[FormalN]"}], ")"}], " ", 
                    RowBox[{"\[FormalY]", "[", 
                    RowBox[{"1", "+", "\[FormalN]"}], "]"}]}]}], "\[Equal]", 
                  "0"}]}, {
                RowBox[{
                  RowBox[{"\[FormalY]", "[", "1", "]"}], "\[Equal]", "21"}]}, {
                RowBox[{
                  RowBox[{"\[FormalY]", "[", "2", "]"}], "\[Equal]", "49"}]}, {
                RowBox[{
                  RowBox[{"\[FormalY]", "[", "3", "]"}], "\[Equal]", 
                  "147"}]}, {
                RowBox[{
                  RowBox[{"\[FormalY]", "[", "4", "]"}], "\[Equal]", 
                  "294"}]}}, BaseStyle -> {"HolonomicInnerGrid"}], "small" -> 
            RowBox[{"\[FormalY]", "[", 
               RowBox[{"1", "+", "\[FormalN]"}], "]"}], "branchcuts" -> 
            "None"|>,
           "HolonomicDisplay"],
          DifferenceRoot[
           
           Function[{\[FormalY], \[FormalN]}, {
            98 \[FormalN] + (
                1 - \[FormalN]) \[FormalY][\[FormalN]] + (-3 + \[FormalN]) \
\[FormalY][1 + \[FormalN]] == 0, \[FormalY][1] == 21, \[FormalY][2] == 
             49, \[FormalY][3] == 147, \[FormalY][4] == 294}]]], "]"}], "]"}],
        "]"}], "]"}], "]"}], "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.877289252791397*^9, 3.8772892536829967`*^9}},
 CellLabel->"In[65]:=",ExpressionUUID->"2f794451-773f-47c5-a825-ef70f5fe3ab2"],

Cell[BoxData["98"], "Output",
 CellChangeTimes->{3.8772892539644303`*^9},
 CellLabel->"Out[65]=",ExpressionUUID->"66d8db49-659e-40ec-8c6e-632b3a425210"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{"First", "[", 
   RowBox[{"First", "[", 
    RowBox[{"First", "[", 
     RowBox[{"First", "[", 
      RowBox[{"Last", "[", 
       RowBox[{"First", "[", 
        RowBox[{"First", "[", 
         RowBox[{"InputForm", "[", 
          InterpretationBox[
           TemplateBox[<|"head" -> "DifferenceRoot", "big" -> GridBox[{{
                 RowBox[{
                   RowBox[{
                    RowBox[{"98", " ", "\[FormalN]"}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"1", "-", "\[FormalN]"}], ")"}], " ", 
                    RowBox[{"\[FormalY]", "[", "\[FormalN]", "]"}]}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "3"}], "+", "\[FormalN]"}], ")"}], " ", 
                    RowBox[{"\[FormalY]", "[", 
                    RowBox[{"1", "+", "\[FormalN]"}], "]"}]}]}], "\[Equal]", 
                   "0"}]}, {
                 RowBox[{
                   RowBox[{"\[FormalY]", "[", "1", "]"}], "\[Equal]", 
                   "21"}]}, {
                 RowBox[{
                   RowBox[{"\[FormalY]", "[", "2", "]"}], "\[Equal]", 
                   "49"}]}, {
                 RowBox[{
                   RowBox[{"\[FormalY]", "[", "3", "]"}], "\[Equal]", 
                   "147"}]}, {
                 RowBox[{
                   RowBox[{"\[FormalY]", "[", "4", "]"}], "\[Equal]", 
                   "294"}]}}, BaseStyle -> {"HolonomicInnerGrid"}], "small" -> 
             RowBox[{"\[FormalY]", "[", 
                RowBox[{"1", "+", "\[FormalN]"}], "]"}], "branchcuts" -> 
             "None"|>,
            "HolonomicDisplay"],
           DifferenceRoot[
            
            Function[{\[FormalY], \[FormalN]}, {
             98 \[FormalN] + (
                 1 - \[FormalN]) \[FormalY][\[FormalN]] + (-3 + \[FormalN]) \
\[FormalY][1 + \[FormalN]] == 0, \[FormalY][1] == 21, \[FormalY][2] == 
              49, \[FormalY][3] == 147, \[FormalY][4] == 294}]]], "]"}], 
         "]"}], "]"}], "]"}], "]"}], "]"}], "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8772892575022774`*^9, 
  3.8772892587834797`*^9}},ExpressionUUID->"68fa68d6-80e6-487c-a7c4-\
d36172b1e715"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1152., 585.6},
WindowMargins->{{
  Automatic, -5.399999999999864}, {-5.399999999999977, Automatic}},
TaggingRules-><|"TryRealOnly" -> False|>,
FrontEndVersion->"13.1 for Microsoft Windows (64-bit) (June 16, 2022)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"2e899b20-85b9-4c0a-b2ba-717454a9e1ad"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 265, 6, 160, "Title",ExpressionUUID->"23510547-758b-498e-b1cc-e16255078060"],
Cell[CellGroupData[{
Cell[870, 32, 205, 4, 67, "Section",ExpressionUUID->"783978e7-073d-4de7-9da9-d53f65d84f32"],
Cell[1078, 38, 623, 21, 35, "Text",ExpressionUUID->"1718777a-80ef-41ee-8c05-ea49fce358d0"],
Cell[CellGroupData[{
Cell[1726, 63, 319, 7, 28, "Input",ExpressionUUID->"40010bc4-9a5f-4c45-b130-903a55ab4dd1"],
Cell[2048, 72, 13350, 259, 435, "Output",ExpressionUUID->"9d99222e-1df7-4e0f-a40d-2b77e6b80e7b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[15435, 336, 349, 8, 28, "Input",ExpressionUUID->"be6251f1-0ee4-4389-baf0-97cda980040c"],
Cell[15787, 346, 9255, 188, 238, "Output",ExpressionUUID->"ff418fd0-2a66-4eec-9dd1-cf077bfa9ddc"]
}, Open  ]],
Cell[25057, 537, 261, 6, 35, "Text",ExpressionUUID->"8abb2d9f-436a-4acb-afb8-bb830e53cf1c"],
Cell[CellGroupData[{
Cell[25343, 547, 1370, 31, 105, "Input",ExpressionUUID->"c296a6bb-835b-44f6-9738-15538067f2a0"],
Cell[26716, 580, 258, 5, 32, "Output",ExpressionUUID->"194ed91e-4132-47db-903b-b7d1d71701d1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[27011, 590, 219, 3, 28, "Input",ExpressionUUID->"f33d7c4d-e620-4981-8a8d-cf95f6e51fc8"],
Cell[27233, 595, 424, 7, 32, "Output",ExpressionUUID->"74ca0031-7808-428f-bcfd-d3a80d263b5e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[27694, 607, 251, 4, 28, "Input",ExpressionUUID->"62ec24f5-e44f-42bd-a014-eb7440fcda52"],
Cell[27948, 613, 86582, 1936, 957, "Output",ExpressionUUID->"1a8c2dc9-e46e-4dba-8237-f2e211f6d507"]
}, Open  ]],
Cell[CellGroupData[{
Cell[114567, 2554, 476, 11, 28, "Input",ExpressionUUID->"42ce2d0c-9e75-4309-9e36-2a1a9de9cdf5"],
Cell[115046, 2567, 196, 4, 32, "Output",ExpressionUUID->"53fa4aca-a6aa-47ec-9840-b50f5450581e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[115279, 2576, 440, 10, 28, "Input",ExpressionUUID->"6252ebcd-9cc8-4c3e-a834-d1fc4d4f6881"],
Cell[115722, 2588, 173, 3, 32, "Output",ExpressionUUID->"eeaa6233-e9fa-4e19-be20-588d31a66dc4"]
}, Open  ]],
Cell[115910, 2594, 283, 6, 35, "Text",ExpressionUUID->"e333f069-bd4f-468e-a05d-f5f4ffb5ddc9"]
}, Closed]],
Cell[CellGroupData[{
Cell[116230, 2605, 158, 3, 53, "Section",ExpressionUUID->"938282ed-1f4e-4651-ae92-d9e0412a1a09"],
Cell[116391, 2610, 215, 5, 35, "Text",ExpressionUUID->"820b0c65-ea86-4609-97e2-2dcd236a42f3"],
Cell[116609, 2617, 258, 6, 35, "Text",ExpressionUUID->"484a6962-18fa-415f-8235-48e8737599e9"],
Cell[CellGroupData[{
Cell[116892, 2627, 227, 3, 28, "Input",ExpressionUUID->"ae69387c-831a-493e-b651-bb03f11a6aaf"],
Cell[117122, 2632, 1928, 35, 359, "Output",ExpressionUUID->"b8c4ae9e-920e-47eb-a8dd-8639ff565ada"]
}, Open  ]],
Cell[CellGroupData[{
Cell[119087, 2672, 792, 20, 28, "Input",ExpressionUUID->"0ba47069-28dd-4b7f-a0ea-9192e9c48baa"],
Cell[119882, 2694, 1877, 33, 331, "Output",ExpressionUUID->"17a44d1b-43c2-4d87-a606-ef93daeb5d8c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[121796, 2732, 948, 23, 48, "Input",ExpressionUUID->"564178b2-11a3-477b-aa16-af52dbf8c1e7"],
Cell[122747, 2757, 154, 2, 32, "Output",ExpressionUUID->"5d52baf7-fc6a-425e-8b7e-9a703c0055a1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[122938, 2764, 1060, 25, 48, "Input",ExpressionUUID->"8f2327e6-cc7b-4d2a-8bdd-f327feae0186"],
Cell[124001, 2791, 650, 16, 32, "Output",ExpressionUUID->"474dc61a-a62b-4976-a34b-01345dde26ff"]
}, Open  ]],
Cell[CellGroupData[{
Cell[124688, 2812, 272, 5, 28, "Input",ExpressionUUID->"ba127e6f-8c6a-4047-b352-6a213255dd03"],
Cell[124963, 2819, 15812, 497, 491, "Output",ExpressionUUID->"3ae698b1-8bc4-4448-9258-1a6936d2a340"]
}, Open  ]],
Cell[CellGroupData[{
Cell[140812, 3321, 308, 6, 28, "Input",ExpressionUUID->"c90720f0-425c-4ca6-a6ab-c08c27da366a"],
Cell[141123, 3329, 152, 2, 32, "Output",ExpressionUUID->"7c10de78-8e13-481e-9928-258ca71eae9d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[141312, 3336, 476, 11, 28, "Input",ExpressionUUID->"7670efde-f0cf-4dee-b663-78a320dbfa58"],
Cell[141791, 3349, 26659, 494, 611, "Output",ExpressionUUID->"5f2b1e88-edf2-4ff4-92ec-0fbc50cbea75"]
}, Open  ]],
Cell[CellGroupData[{
Cell[168487, 3848, 790, 20, 28, "Input",ExpressionUUID->"da2a7170-bc92-4504-ad48-55e8a67d7bd0"],
Cell[169280, 3870, 1857, 33, 276, "Output",ExpressionUUID->"18133ce4-440a-4836-b382-4b74a4fa1799"]
}, Open  ]],
Cell[CellGroupData[{
Cell[171174, 3908, 992, 24, 48, "Input",ExpressionUUID->"7ea04af8-14ba-4287-a623-2ae9a4f6d5b5"],
Cell[172169, 3934, 4080, 83, 405, "Output",ExpressionUUID->"c4e412d6-25fe-4e64-99d7-7b897f7855e1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[176286, 4022, 1105, 26, 48, "Input",ExpressionUUID->"6e4ff799-4678-4e8c-8802-a6ef4878bb83"],
Cell[177394, 4050, 155, 2, 32, "Output",ExpressionUUID->"81bb6ad9-1a2a-4631-ba62-831c0535f6d9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[177586, 4057, 2882, 53, 103, "Input",ExpressionUUID->"9d928a54-75f4-44d1-bfb9-26049db1a431"],
Cell[180471, 4112, 671, 16, 32, "Output",ExpressionUUID->"a3be9754-8553-4fdb-8542-926e02b4bbbe"]
}, Open  ]],
Cell[181157, 4131, 2863, 54, 103, "Input",ExpressionUUID->"ca12cb99-8dd5-4902-bf0d-7172bcb4600a"],
Cell[CellGroupData[{
Cell[184045, 4189, 2899, 55, 93, "Input",ExpressionUUID->"3d80461f-8d40-491b-9921-92e330c551fc"],
Cell[186947, 4246, 650, 16, 32, "Output",ExpressionUUID->"405a1890-997e-4fad-b532-0f00ab30920f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[187634, 4267, 2052, 38, 104, "Input",ExpressionUUID->"c989af07-f08b-4a6e-8725-5c31aa4e7d0f"],
Cell[189689, 4307, 648, 16, 32, "Output",ExpressionUUID->"3e9aa0bb-0222-443c-984c-7c853f7c1fbb"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[190386, 4329, 209, 4, 53, "Section",ExpressionUUID->"e5619394-c8c3-4629-a93d-5d930f6dd6db"],
Cell[190598, 4335, 219, 4, 35, "Text",ExpressionUUID->"0a3d45db-3116-47d7-bcfc-bb6646137ec2"],
Cell[CellGroupData[{
Cell[190842, 4343, 230, 3, 28, "Input",ExpressionUUID->"68f857c8-c32c-41a1-9aff-e48c4530d5f1"],
Cell[191075, 4348, 2342, 41, 359, "Output",ExpressionUUID->"536746bb-c59f-43df-ab08-a9d2f64ff638"]
}, Open  ]],
Cell[CellGroupData[{
Cell[193454, 4394, 278, 5, 28, "Input",ExpressionUUID->"eeebe44a-c32f-47df-adab-b6fa20859b16"],
Cell[193735, 4401, 149, 2, 32, "Output",ExpressionUUID->"14e92b70-915c-47cd-b351-0726cf04ed75"]
}, Open  ]],
Cell[193899, 4406, 167, 3, 35, "Text",ExpressionUUID->"57109d7a-30b7-4484-b397-28b280a05647"]
}, Closed]],
Cell[CellGroupData[{
Cell[194103, 4414, 160, 3, 53, "Section",ExpressionUUID->"e74b2402-53dc-4f2b-865a-ddb7cbabe3e8"],
Cell[194266, 4419, 279, 6, 35, "Text",ExpressionUUID->"15b27fb6-0ee4-4fe5-b35b-253275c10ebe"],
Cell[CellGroupData[{
Cell[194570, 4429, 234, 3, 28, "Input",ExpressionUUID->"c4f3f6e7-518c-4bde-8712-df1a757a5fbb"],
Cell[194807, 4434, 6504, 95, 205, "Output",ExpressionUUID->"a5b9312c-1215-4851-87e7-0d1d75df1fb0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[201348, 4534, 273, 5, 28, "Input",ExpressionUUID->"12e32225-583e-444b-8383-69620b503cf5"],
Cell[201624, 4541, 152, 2, 32, "Output",ExpressionUUID->"02d1e6da-806d-416a-b544-a16619606e66"]
}, Open  ]],
Cell[CellGroupData[{
Cell[201813, 4548, 333, 6, 28, "Input",ExpressionUUID->"058dbe4c-21a5-4af4-beab-b1d0f1d666ce"],
Cell[202149, 4556, 175, 2, 32, "Output",ExpressionUUID->"68930ea9-c25f-4ae7-94d2-aa2577a05a07"]
}, Open  ]],
Cell[202339, 4561, 185, 3, 35, "Text",ExpressionUUID->"98bbe57f-8ece-485d-b111-911b3b9d25b3"],
Cell[CellGroupData[{
Cell[202549, 4568, 284, 5, 28, "Input",ExpressionUUID->"c2230d97-da35-44f3-a993-3f93dca4fdee"],
Cell[202836, 4575, 693, 11, 32, "Output",ExpressionUUID->"880bcbd5-10ef-4fa9-9f5c-82a35e1bffc0"]
}, Open  ]],
Cell[203544, 4589, 203, 3, 35, "Text",ExpressionUUID->"7cf7c94c-addf-47da-875a-d27a9491605a"],
Cell[CellGroupData[{
Cell[203772, 4596, 234, 3, 28, "Input",ExpressionUUID->"c0254b0e-358c-4976-ad5f-4f8650e53a66"],
Cell[204009, 4601, 40914, 747, 117, "Output",ExpressionUUID->"044e32cf-c194-4f4d-85db-44594355477b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[244960, 5353, 269, 4, 28, "Input",ExpressionUUID->"fec78320-b90e-4726-8f44-d2d9a8d7d13f"],
Cell[245232, 5359, 22135, 433, 96, "Output",ExpressionUUID->"ea4ffc2b-e99b-45d5-b390-69ee881abe42"]
}, Open  ]],
Cell[CellGroupData[{
Cell[267404, 5797, 284, 5, 28, "Input",ExpressionUUID->"cce883ae-2892-4521-a4b6-d5d2346c62ad"],
Cell[267691, 5804, 10860, 172, 205, "Output",ExpressionUUID->"0d2f4930-86c1-4d62-80da-87d5c2e6bb56"]
}, Open  ]],
Cell[CellGroupData[{
Cell[278588, 5981, 340, 6, 28, "Input",ExpressionUUID->"add4b26e-094f-48bc-b33e-d319ca88f570"],
Cell[278931, 5989, 10890, 171, 318, "Output",ExpressionUUID->"b1772741-29a2-4760-b65a-5703f55ffbca"]
}, Open  ]],
Cell[CellGroupData[{
Cell[289858, 6165, 389, 7, 28, "Input",ExpressionUUID->"435bffee-dc2c-4f22-b693-f2c464a0f8ef"],
Cell[290250, 6174, 10058, 158, 559, "Output",ExpressionUUID->"9a1035e2-9305-484c-91f6-cd6ce7ad7add"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[300357, 6338, 160, 3, 53, "Section",ExpressionUUID->"e409150f-59fd-4580-a52a-1449698f85e6"],
Cell[300520, 6343, 575, 14, 58, "Text",ExpressionUUID->"a3d90864-4c79-45cf-a794-8469ba49adff"],
Cell[301098, 6359, 327, 7, 35, "Text",ExpressionUUID->"61a7e904-7694-4a46-a59d-f4a264c02944"],
Cell[CellGroupData[{
Cell[301450, 6370, 230, 3, 28, "Input",ExpressionUUID->"b95c413d-4f63-468e-b246-75e871c98fdf"],
Cell[301683, 6375, 12879, 336, 527, "Output",ExpressionUUID->"a4311c77-bbdd-4ff6-b96f-d4739efd11d9"]
}, Open  ]],
Cell[314577, 6714, 347, 7, 58, "Text",ExpressionUUID->"189a61b3-c919-476a-825a-df4b796a31d4"],
Cell[314927, 6723, 177, 3, 35, "Text",ExpressionUUID->"94031fed-a0f2-4409-9bf2-0d22e1b51424"],
Cell[315107, 6728, 234, 6, 35, "Text",ExpressionUUID->"98e13d10-fc96-4aeb-865b-08686a7e713c"],
Cell[CellGroupData[{
Cell[315366, 6738, 278, 5, 28, "Input",ExpressionUUID->"25cd1a7e-51ff-47c3-b89e-94feee82959f"],
Cell[315647, 6745, 827, 14, 71, "Output",ExpressionUUID->"030fbd2d-c7eb-45c7-b269-abb1e03c9d3d"]
}, Open  ]],
Cell[316489, 6762, 310, 6, 28, "Input",ExpressionUUID->"a9048f6b-2126-4139-aaf3-c9b453c23804"],
Cell[316802, 6770, 74023, 1645, 791, "Input",ExpressionUUID->"414bbd95-dd0c-4eb6-989e-715c2287b2ee"],
Cell[390828, 8417, 144, 3, 35, "Text",ExpressionUUID->"885da1b7-ec20-4681-9388-981e6dd608fb"],
Cell[390975, 8422, 185, 3, 35, "Text",ExpressionUUID->"e9d5fcc8-224d-4e70-b9d1-7526d892abf7"],
Cell[391163, 8427, 228, 5, 35, "Text",ExpressionUUID->"55bdd4b6-fae6-45f4-9b59-f36f824428cf"],
Cell[391394, 8434, 171, 3, 35, "Text",ExpressionUUID->"7d9dd67b-8750-46ff-9df4-789f6ee357e6"],
Cell[CellGroupData[{
Cell[391590, 8441, 181, 2, 28, "Input",ExpressionUUID->"57500bd9-84cf-4ad1-9c2e-245b04ae8106"],
Cell[391774, 8445, 242, 3, 32, "Output",ExpressionUUID->"cc92e0ac-9ee6-446b-b6ed-aaffb1097b1e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[392053, 8453, 562, 12, 28, "Input",ExpressionUUID->"6e016324-642a-4fd2-b5cb-83d4070cbdcc"],
Cell[392618, 8467, 736, 14, 28, "Message",ExpressionUUID->"4d4342f0-b094-402d-bbd9-dd489551e27c"],
Cell[393357, 8483, 978, 18, 28, "Message",ExpressionUUID->"48347a54-3901-44ec-8b09-b13915addccd"],
Cell[394338, 8503, 12974, 338, 527, "Output",ExpressionUUID->"3cff55b4-e29f-49de-b316-f78bf7deeb13"]
}, Open  ]],
Cell[407327, 8844, 173, 3, 35, "Text",ExpressionUUID->"3dbfdf04-c32d-45c2-bd70-e8ef9abdb1e8"],
Cell[CellGroupData[{
Cell[407525, 8851, 185, 3, 28, "Input",ExpressionUUID->"d8b2b882-c9d5-4a8d-997d-34330bd4c81f"],
Cell[407713, 8856, 217, 4, 32, "Output",ExpressionUUID->"fc84b8c3-5fb7-4262-9d79-65b856288cb2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[407967, 8865, 424, 11, 28, "Input",ExpressionUUID->"c0617d92-db9d-4e6c-b5d8-2ed52384b76e"],
Cell[408394, 8878, 12828, 335, 527, "Output",ExpressionUUID->"96d0ace4-14c1-4345-ae06-415e861e2e4b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[421259, 9218, 342, 8, 28, "Input",ExpressionUUID->"5cb61c99-53fe-4f39-99f3-eb202971dc3b"],
Cell[421604, 9228, 5271, 118, 125, "Output",ExpressionUUID->"6a3a79a4-16f1-47ed-96c4-db23190de81d"]
}, Open  ]],
Cell[426890, 9349, 357, 7, 35, "Text",ExpressionUUID->"8752c286-d44b-4d79-ab3a-60bb8632c2c9"],
Cell[CellGroupData[{
Cell[427272, 9360, 313, 7, 28, "Input",ExpressionUUID->"acff18d1-f0bb-4db5-8e88-a52c3b4b211e"],
Cell[427588, 9369, 395, 9, 46, "Output",ExpressionUUID->"9171d3cc-30d9-4057-86b8-fc8469c9a6b5"]
}, Open  ]],
Cell[427998, 9381, 163, 3, 35, "Text",ExpressionUUID->"74f1443b-f222-4632-89da-8375acc48b39"],
Cell[CellGroupData[{
Cell[428186, 9388, 575, 15, 48, "Input",ExpressionUUID->"ec1b8255-5e39-4d2a-a2b8-a3c442dbf5ee"],
Cell[428764, 9405, 8937, 190, 330, "Output",ExpressionUUID->"24c7bf87-b294-45a6-9bfb-2c433f3f72f5"]
}, Open  ]],
Cell[437716, 9598, 239, 6, 35, "Text",ExpressionUUID->"45209bc5-3461-4f30-99ae-6a99236e5f06"],
Cell[CellGroupData[{
Cell[437980, 9608, 529, 13, 28, "Input",ExpressionUUID->"d695de83-647f-48af-8c97-10c6317055ee"],
Cell[438512, 9623, 158, 3, 32, "Output",ExpressionUUID->"9ff98f65-8867-4469-943f-09043c9140df"]
}, Open  ]],
Cell[438685, 9629, 172, 3, 35, "Text",ExpressionUUID->"4ae28b62-d8a0-4e92-8784-84c1c90da898"]
}, Closed]],
Cell[CellGroupData[{
Cell[438894, 9637, 158, 3, 53, "Section",ExpressionUUID->"33369eb3-9cd0-47d2-a752-7cb124f348ce"],
Cell[439055, 9642, 416, 12, 35, "Text",ExpressionUUID->"a9a222df-7ecd-486a-a00b-ca074d19a8fd"],
Cell[439474, 9656, 856, 17, 104, "Text",ExpressionUUID->"f3d28020-c60e-4e1d-8eae-29fe5dd5869a"],
Cell[CellGroupData[{
Cell[440355, 9677, 260, 5, 28, "Input",ExpressionUUID->"c0065f40-8f93-4fc4-903c-0267079122bb"],
Cell[440618, 9684, 1387, 28, 281, "Output",ExpressionUUID->"dcafa96e-6936-4a6c-920c-eec84694bad6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[442042, 9717, 304, 7, 28, "Input",ExpressionUUID->"50d5083b-5788-4dee-ad8b-6c6b2a059989"],
Cell[442349, 9726, 157, 3, 32, "Output",ExpressionUUID->"fa2442f8-08b6-4100-ab76-be112cbb2ee2"]
}, Open  ]],
Cell[442521, 9732, 169, 3, 35, "Text",ExpressionUUID->"1c107692-04c0-46cf-8dd1-d5ee81d75a06"],
Cell[CellGroupData[{
Cell[442715, 9739, 307, 7, 28, "Input",ExpressionUUID->"9eaf23ec-eca2-4fe2-bc53-736a0ce3d511"],
Cell[443025, 9748, 1565, 32, 360, "Output",ExpressionUUID->"dce7fa63-1880-466b-a89e-bb0696d194d2"]
}, Open  ]],
Cell[444605, 9783, 184, 3, 35, "Text",ExpressionUUID->"48a8488d-7969-4ab0-af14-6b1f65c70793"],
Cell[CellGroupData[{
Cell[444814, 9790, 340, 7, 28, "Input",ExpressionUUID->"ae4e1d27-f231-4541-ba2b-e96bdeb7ba2b"],
Cell[445157, 9799, 1393, 29, 449, "Output",ExpressionUUID->"ad1d7570-00f2-41b0-893a-03c67e361a3c"]
}, Open  ]],
Cell[446565, 9831, 177, 3, 35, "Text",ExpressionUUID->"44228eec-957e-4ec4-a610-7594b28b2021"],
Cell[CellGroupData[{
Cell[446767, 9838, 510, 12, 28, "Input",ExpressionUUID->"7f97ce75-5056-4771-ae3b-943c9572f108"],
Cell[447280, 9852, 152, 2, 32, "Output",ExpressionUUID->"673502ea-03b3-4b78-a39e-b70217bf5adc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[447469, 9859, 373, 9, 28, "Input",ExpressionUUID->"d71a1fba-1209-40ff-94a2-cde151c2351d"],
Cell[447845, 9870, 181, 2, 32, "Output",ExpressionUUID->"b540e48b-5f41-452e-9d08-cd34cc92c0ed"]
}, Open  ]],
Cell[448041, 9875, 237, 6, 35, "Text",ExpressionUUID->"e9a4c995-5048-44d5-a9de-104acb0e7de4"],
Cell[CellGroupData[{
Cell[448303, 9885, 424, 10, 28, "Input",ExpressionUUID->"12d474c3-9ba0-446e-a9b3-8afba3b1444a"],
Cell[448730, 9897, 239, 5, 32, "Output",ExpressionUUID->"70d66686-13f0-4aa3-8035-42c817b0029b"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[449018, 9908, 211, 4, 53, "Section",ExpressionUUID->"377503dc-bb07-46f9-a0ab-12dbe0c29f66"],
Cell[449232, 9914, 271, 6, 35, "Text",ExpressionUUID->"47d420ef-5a8d-4348-bf4a-36c88b991660"],
Cell[449506, 9922, 236, 6, 35, "Text",ExpressionUUID->"215a8f8d-aea0-4776-8145-0c72bf939508"],
Cell[449745, 9930, 1236, 30, 81, "Text",ExpressionUUID->"5b64afe6-0e78-4dbd-be66-7d091315dad9"],
Cell[450984, 9962, 193, 3, 35, "Text",ExpressionUUID->"cafe51bf-aa24-4b2a-8e73-4cd0246e721e"],
Cell[CellGroupData[{
Cell[451202, 9969, 227, 3, 28, "Input",ExpressionUUID->"93ca2f3d-00f8-4220-b918-d4db072ee393"],
Cell[451432, 9974, 5999, 149, 218, "Output",ExpressionUUID->"2e614366-50ec-467d-81a0-81189b6c4417"]
}, Open  ]],
Cell[457446, 10126, 221, 5, 35, "Text",ExpressionUUID->"03c63fde-dc74-4443-9a24-9048c1976a1f"],
Cell[CellGroupData[{
Cell[457692, 10135, 423, 11, 28, "Input",ExpressionUUID->"14dd17ba-a133-45d6-b7a0-fe3396b23626"],
Cell[458118, 10148, 179, 3, 32, "Output",ExpressionUUID->"2f790999-b6e4-4bcd-a70c-8254c63902ed"]
}, Open  ]],
Cell[458312, 10154, 216, 5, 35, "Text",ExpressionUUID->"45f81a84-f31e-4002-b38e-1dafd6c5f705"],
Cell[CellGroupData[{
Cell[458553, 10163, 298, 7, 28, "Input",ExpressionUUID->"28e363e5-1324-4a6f-b605-7af679803b20"],
Cell[458854, 10172, 3175, 93, 109, "Output",ExpressionUUID->"930053cf-f9a3-4be7-8086-534f4f34397d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[462066, 10270, 255, 5, 28, "Input",ExpressionUUID->"d1c2c8da-1d85-4d18-9a2a-b55111cd6529"],
Cell[462324, 10277, 21978, 431, 96, "Output",ExpressionUUID->"6e94e1de-68e6-44dc-b301-3a237a6c4634"]
}, Open  ]],
Cell[CellGroupData[{
Cell[484339, 10713, 549, 14, 28, "Input",ExpressionUUID->"aeadbf1d-9541-45aa-821c-6a669d2a69f8"],
Cell[484891, 10729, 979686, 16515, 3144, "Output",ExpressionUUID->"3815054d-73a8-4752-a56a-71d3df128503"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1464626, 27250, 207, 4, 67, "Section",ExpressionUUID->"f1bc55f5-93ab-49f2-b390-f07aee86b611"],
Cell[1464836, 27256, 214, 5, 35, "Text",ExpressionUUID->"f79feb40-2901-4509-aaf8-353661a4db93"],
Cell[CellGroupData[{
Cell[1465075, 27265, 220, 3, 28, "Input",ExpressionUUID->"910be229-4d4f-4ff1-a286-5c9a56490152"],
Cell[1465298, 27270, 68934, 1075, 144, "Output",ExpressionUUID->"a1dc6434-a3c9-4742-b456-af4bb8bb6c52"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1534269, 28350, 461, 11, 28, "Input",ExpressionUUID->"303caaf0-74dc-4399-8303-227a670faebb"],
Cell[1534733, 28363, 339, 8, 32, "Output",ExpressionUUID->"5e32a026-ee15-46c8-9582-a7107b9902c3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1535109, 28376, 449, 11, 28, "Input",ExpressionUUID->"5c825c4e-9563-4e37-b7c1-33c8bf5349d0"],
Cell[1535561, 28389, 4493, 93, 235, "Output",ExpressionUUID->"f0507648-818c-49d1-901b-4e1df90d970e"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1540103, 28488, 156, 3, 67, "Section",ExpressionUUID->"354a2f1d-a401-4d09-8e85-ef0248855455"],
Cell[1540262, 28493, 219, 5, 35, "Text",ExpressionUUID->"1cf32807-d185-4d5d-97d2-aad3d730ca39"],
Cell[CellGroupData[{
Cell[1540506, 28502, 224, 3, 28, "Input",ExpressionUUID->"28369a05-1173-4d48-bd5a-fc8aac88a770"],
Cell[1540733, 28507, 1789, 42, 168, "Output",ExpressionUUID->"b83e6fcd-e56e-4aff-8eb1-f43bfa9e7aee"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1542559, 28554, 258, 4, 28, "Input",ExpressionUUID->"4b200441-4b13-41f0-9b23-e60214709564"],
Cell[1542820, 28560, 196, 4, 32, "Output",ExpressionUUID->"0065c3ef-2fd3-4ded-add8-cd69efb19562"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1543053, 28569, 294, 6, 28, "Input",ExpressionUUID->"cd24b0c8-15ae-48b8-958b-7cfeedd15082"],
Cell[1543350, 28577, 1362, 28, 449, "Output",ExpressionUUID->"ff7b27a7-d05e-4911-85c0-3547ff41078d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1544749, 28610, 345, 7, 28, "Input",ExpressionUUID->"7ed3cc3a-b6ad-464b-ab48-4187a203de9a"],
Cell[1545097, 28619, 150, 2, 32, "Output",ExpressionUUID->"3eaa9459-ee9d-4549-9a22-718657a52747"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1545284, 28626, 344, 7, 28, "Input",ExpressionUUID->"fb1bae3e-609c-4119-9216-a064b3252ff4"],
Cell[1545631, 28635, 148, 2, 32, "Output",ExpressionUUID->"5c21ff97-9c94-4e87-b7eb-8144dd3ed1b7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1545816, 28642, 348, 7, 48, "Input",ExpressionUUID->"4044093e-b462-489d-9f2a-cde03454ec09"],
Cell[1546167, 28651, 313, 9, 32, "Output",ExpressionUUID->"4c5e4e53-fe93-4a56-9181-841a00e1e1b6"]
}, Open  ]],
Cell[1546495, 28663, 320, 8, 28, "Input",ExpressionUUID->"beaaf159-1c42-40b5-8db1-64f9943bccc6"],
Cell[CellGroupData[{
Cell[1546840, 28675, 235, 3, 28, "Input",ExpressionUUID->"71f244f9-856d-4517-8928-325ead1d19cf"],
Cell[1547078, 28680, 63808, 1870, 4656, "Output",ExpressionUUID->"9a109a45-6d6a-4bec-89d7-ab3b49b4190b"]
}, Open  ]],
Cell[1610901, 30553, 394, 8, 81, "Text",ExpressionUUID->"e9844d4c-856b-4fc0-aa21-8d315d9932d1"],
Cell[CellGroupData[{
Cell[1611320, 30565, 272, 5, 28, "Input",ExpressionUUID->"1028a19d-f42c-46e1-a73d-3de3f44f8e9b"],
Cell[1611595, 30572, 195, 4, 32, "Output",ExpressionUUID->"c1a979e2-f71f-48e0-be8c-9bf98c709169"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1611827, 30581, 361, 7, 48, "Input",ExpressionUUID->"ca829a6a-42f7-4144-b847-917228996db5"],
Cell[1612191, 30590, 468, 14, 35, "Output",ExpressionUUID->"a279f7a6-d507-4638-97df-e6a367e9bf7e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1612696, 30609, 360, 7, 48, "Input",ExpressionUUID->"aef146b1-3cea-496e-9993-64b5f9a80a31"],
Cell[1613059, 30618, 223, 5, 48, "Output",ExpressionUUID->"f6b3c50e-bf5b-4994-8922-947228ec27c0"]
}, Open  ]],
Cell[1613297, 30626, 203, 3, 35, "Text",ExpressionUUID->"ec61c2df-38b8-4bb3-b3db-aca3c5b0b3a2"],
Cell[CellGroupData[{
Cell[1613525, 30633, 269, 5, 28, "Input",ExpressionUUID->"0428e6a9-6ca0-415a-9f1a-52234171135e"],
Cell[1613797, 30640, 1181, 25, 37, "Output",ExpressionUUID->"53514229-7c2f-4ed4-a534-92414e8c9b9d"]
}, Open  ]],
Cell[1614993, 30668, 531, 9, 127, "Text",ExpressionUUID->"2136cab5-779a-471d-b761-c8830496c1f4"],
Cell[CellGroupData[{
Cell[1615549, 30681, 323, 7, 28, "Input",ExpressionUUID->"7df10eea-6922-4d76-9882-a81b18921fb3"],
Cell[1615875, 30690, 149, 2, 32, "Output",ExpressionUUID->"4820c5b4-7adf-4a33-adb1-6e626d91a283"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1616061, 30697, 320, 7, 28, "Input",ExpressionUUID->"f28405fc-cf3f-4f36-b02a-ba8d28f8bf1b"],
Cell[1616384, 30706, 149, 2, 32, "Output",ExpressionUUID->"ea7b832a-4746-4bb5-8b26-1b242f5cb256"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1616570, 30713, 356, 8, 28, "Input",ExpressionUUID->"9cce0704-70b3-41bc-83d9-683692b4b73e"],
Cell[1616929, 30723, 291, 7, 32, "Output",ExpressionUUID->"a1af7349-8a77-43de-8395-06b6302b7a33"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1617257, 30735, 326, 7, 28, "Input",ExpressionUUID->"c64c4620-96c8-426d-9386-6d7dbe4e2552"],
Cell[1617586, 30744, 175, 2, 32, "Output",ExpressionUUID->"622789cf-fb89-48b9-b89e-0196d13760e7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1617798, 30751, 330, 7, 28, "Input",ExpressionUUID->"30ee2c3a-0972-413c-bc7e-f75e9f86033e"],
Cell[1618131, 30760, 151, 2, 32, "Output",ExpressionUUID->"80c12f11-d2f2-40aa-8a84-0f0763b2af16"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1618319, 30767, 333, 7, 28, "Input",ExpressionUUID->"29eaa051-1bfe-40a5-8d8c-d23d3d96b832"],
Cell[1618655, 30776, 149, 2, 32, "Output",ExpressionUUID->"6fb5acb4-e4d4-4c51-b577-33ba1b0a2be7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1618841, 30783, 328, 7, 28, "Input",ExpressionUUID->"de81d85f-5b4d-4677-9680-e191995ec50b"],
Cell[1619172, 30792, 216, 4, 32, "Output",ExpressionUUID->"f556dd74-5ddb-4109-b04e-d0502250d626"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1619425, 30801, 324, 7, 28, "Input",ExpressionUUID->"d51ff694-92bb-426f-9ad3-d8530ab5d748"],
Cell[1619752, 30810, 206, 4, 32, "Output",ExpressionUUID->"ac3e4e8f-f7bd-44ce-8b82-f31b45978744"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1619995, 30819, 336, 7, 28, "Input",ExpressionUUID->"95d90286-82e6-4840-9e6e-829695f899a3"],
Cell[1620334, 30828, 398, 12, 32, "Output",ExpressionUUID->"f082d83a-e90c-4aff-807d-06999669c2fb"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1620781, 30846, 207, 4, 53, "Section",ExpressionUUID->"67a58b19-40ae-417d-968b-b901f68d626f"],
Cell[1620991, 30852, 516, 15, 36, "Text",ExpressionUUID->"c0fdfbc3-1860-4f21-a211-587ed6684195"],
Cell[1621510, 30869, 217, 4, 35, "Text",ExpressionUUID->"7c4811d2-7337-49a0-8bb1-b2cb12f71f7b"],
Cell[CellGroupData[{
Cell[1621752, 30877, 452, 11, 28, "Input",ExpressionUUID->"1349628f-66ca-41d6-adea-7383af8535ff"],
Cell[1622207, 30890, 303, 6, 32, "Output",ExpressionUUID->"9df0e0d9-971a-49ce-8005-bd2b7638e772"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1622547, 30901, 553, 12, 28, "Input",ExpressionUUID->"43e3f69c-3d4f-4d18-9009-732f78e7e74e"],
Cell[1623103, 30915, 1625, 36, 46, "Output",ExpressionUUID->"795543b1-7254-4797-89c1-eca9d40247c7"]
}, Open  ]],
Cell[1624743, 30954, 186, 3, 35, "Text",ExpressionUUID->"1ffa4959-f0ab-432c-822d-9743351b8210"],
Cell[CellGroupData[{
Cell[1624954, 30961, 646, 15, 28, "Input",ExpressionUUID->"9034293d-9f6e-42f7-9b66-92562bbdb4da"],
Cell[1625603, 30978, 155, 2, 32, "Output",ExpressionUUID->"ac858c79-3c38-4045-9fd5-73f76ff00b25"]
}, Open  ]],
Cell[1625773, 30983, 175, 3, 35, "Text",ExpressionUUID->"64881d5b-4592-41b3-80f3-4f374c4456d4"],
Cell[CellGroupData[{
Cell[1625973, 30990, 608, 13, 28, "Input",ExpressionUUID->"6de05800-1782-4f20-b5aa-04eb6febc276"],
Cell[1626584, 31005, 1627, 36, 46, "Output",ExpressionUUID->"811959e2-429c-4278-b033-1c2c59bc54a1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1628248, 31046, 606, 13, 28, "Input",ExpressionUUID->"e670d664-7c5b-408e-a6f7-aa8ea3ab9ea1"],
Cell[1628857, 31061, 1605, 36, 46, "Output",ExpressionUUID->"ef6df065-5190-476b-bb77-4e7d02cd433b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1630499, 31102, 660, 14, 28, "Input",ExpressionUUID->"095587c7-bb08-4a78-bf90-f3541a17f686"],
Cell[1631162, 31118, 1609, 36, 46, "Output",ExpressionUUID->"14a51cfd-cf6a-43e0-a4ec-023e7e0ee75d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1632808, 31159, 660, 14, 28, "Input",ExpressionUUID->"beca19e1-2c37-401e-a274-d463a331a39c"],
Cell[1633471, 31175, 1613, 36, 69, "Output",ExpressionUUID->"72bb6f36-5f0f-4612-b0e8-2cfd34268160"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1635121, 31216, 708, 14, 28, "Input",ExpressionUUID->"49c6b5f2-a6c4-4216-9a1c-1814931707ec"],
Cell[1635832, 31232, 1611, 36, 46, "Output",ExpressionUUID->"b5167aca-e27c-491e-b167-32ac80e556ce"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1637480, 31273, 373, 7, 28, "Input",ExpressionUUID->"2b0eee8b-83b7-4560-ac32-e48e0d4318d0"],
Cell[1637856, 31282, 359, 9, 35, "Output",ExpressionUUID->"6b881edc-99ef-4d2e-9231-0efa1f71cb1b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1638252, 31296, 351, 7, 28, "Input",ExpressionUUID->"27a11994-fc15-44cf-b29b-6b5ee2287007"],
Cell[1638606, 31305, 305, 7, 35, "Output",ExpressionUUID->"d5f28e7b-4674-4975-80ff-1b7164950720"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1638948, 31317, 392, 8, 28, "Input",ExpressionUUID->"237ec3cf-5b9d-43af-90a7-c1c1dde06516"],
Cell[1639343, 31327, 270, 6, 32, "Output",ExpressionUUID->"665fa158-f585-4c59-844e-61016d1abb8d"]
}, Open  ]],
Cell[1639628, 31336, 486, 15, 35, "Text",ExpressionUUID->"5e808a11-199e-4021-9917-8ac06cb22318"],
Cell[CellGroupData[{
Cell[1640139, 31355, 1697, 37, 42, "Input",ExpressionUUID->"578d6c60-2d17-45fa-aba7-f4ad2c586950"],
Cell[1641839, 31394, 446, 10, 69, "Output",ExpressionUUID->"dec131f5-7278-4fd4-977f-d5f8dc0786c6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1642322, 31409, 1764, 39, 42, "Input",ExpressionUUID->"c404acc8-c121-451b-9dc3-65da08c8e0d8"],
Cell[1644089, 31450, 1613, 36, 46, "Output",ExpressionUUID->"c8302f3a-9426-49fc-a17d-faf383cad76d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1645739, 31491, 1830, 40, 42, "Input",ExpressionUUID->"32f70458-727e-4a75-b18c-75a6c6ed812f"],
Cell[1647572, 31533, 1117, 30, 36, "Output",ExpressionUUID->"ae3f1645-fb4d-4b96-936f-195fcf892611"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1648726, 31568, 1898, 41, 42, "Input",ExpressionUUID->"3acaef4d-5ffb-4e6f-b4f2-9363fc3c5f8f"],
Cell[1650627, 31611, 949, 26, 36, "Output",ExpressionUUID->"eeeb552d-cccf-48ab-937d-9141a2cc8b73"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1651613, 31642, 1962, 42, 42, "Input",ExpressionUUID->"e492ccf9-3661-49ac-92d6-c7f6ddd9bb40"],
Cell[1653578, 31686, 505, 13, 36, "Output",ExpressionUUID->"8e8211aa-2068-451e-a818-aea76dd84bb8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1654120, 31704, 2023, 43, 42, "Input",ExpressionUUID->"ae3655b1-ee90-470a-a27f-feffd9d2f5a2"],
Cell[1656146, 31749, 222, 4, 32, "Output",ExpressionUUID->"248c558c-9308-4d4c-af67-52311751dc1d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1656405, 31758, 886, 22, 48, "Input",ExpressionUUID->"df843fcb-e0d2-45e5-84ba-23fd071fc2b6"],
Cell[1657294, 31782, 675, 17, 32, "Output",ExpressionUUID->"eca5992c-ec7e-4dd4-a3ff-0870a51a21f7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1658006, 31804, 936, 23, 67, "Input",ExpressionUUID->"6cedfb15-cda9-43cf-a239-18868df4fdba"],
Cell[1658945, 31829, 615, 16, 32, "Output",ExpressionUUID->"35097751-9197-45e2-957b-98607a3c59ce"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1659597, 31850, 999, 24, 67, "Input",ExpressionUUID->"99b98f0d-d9a7-43ba-bc74-159994098ead"],
Cell[1660599, 31876, 455, 11, 28, "Message",ExpressionUUID->"cd0e2ab4-ccdf-4717-9f6a-aa4fee7d5b2d"],
Cell[1661057, 31889, 455, 11, 28, "Message",ExpressionUUID->"b08e8bca-25e7-483b-a4e9-886048baf5fa"],
Cell[1661515, 31902, 476, 11, 28, "Message",ExpressionUUID->"edbde5dc-c585-4f5e-ad12-94f1aeb77110"],
Cell[1661994, 31915, 453, 11, 28, "Message",ExpressionUUID->"62d77a80-711e-4ab2-b9ef-0ae09031b3a2"],
Cell[1662450, 31928, 455, 11, 28, "Message",ExpressionUUID->"cd8f0d0c-3e3e-4cf4-9686-7c65fd05fbf3"],
Cell[1662908, 31941, 479, 11, 28, "Message",ExpressionUUID->"969cb7eb-7f8f-4785-a4d8-0caf61787c1e"],
Cell[1663390, 31954, 455, 11, 28, "Message",ExpressionUUID->"a4f1239a-fbbc-45dd-81d5-f0e6a588ae08"],
Cell[1663848, 31967, 451, 10, 28, "Message",ExpressionUUID->"57369f6f-b2e4-4258-9ee4-072249bb38f1"],
Cell[1664302, 31979, 455, 11, 28, "Message",ExpressionUUID->"141fc0a7-2aa5-4b90-9bf4-f2a1661c76d4"],
Cell[1664760, 31992, 453, 10, 28, "Message",ExpressionUUID->"6f47cd7d-be17-418a-a626-3ce1b4c01cd0"],
Cell[1665216, 32004, 479, 11, 28, "Message",ExpressionUUID->"1dc060fb-6a3e-4239-a9b6-e2d90b732a31"],
Cell[1665698, 32017, 451, 10, 28, "Message",ExpressionUUID->"1978343b-d2ea-4c1e-8fd3-c4130048b0d3"],
Cell[1666152, 32029, 493, 11, 28, "Message",ExpressionUUID->"08c93b2a-12ff-4e42-9e73-a9eb2d45766e"],
Cell[1666648, 32042, 495, 11, 28, "Message",ExpressionUUID->"5649b9f3-d01d-4377-8654-a14093d0444d"],
Cell[1667146, 32055, 495, 11, 28, "Message",ExpressionUUID->"08864687-8deb-46dc-bf9a-c3302a5258b7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1667678, 32071, 1828, 40, 42, "Input",ExpressionUUID->"8d39bc1a-1598-43ea-a82d-0292cc31d3b1"],
Cell[1669509, 32113, 947, 26, 36, "Output",ExpressionUUID->"2a887b7b-48ea-4709-a066-6e870cf92dd5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1670493, 32144, 1959, 42, 42, "Input",ExpressionUUID->"90c8a528-96f9-4d3e-b442-a8698a961341"],
Cell[1672455, 32188, 559, 15, 36, "Output",ExpressionUUID->"4c87465e-5c47-4590-86f9-bbf9603c671c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1673051, 32208, 2025, 43, 42, "Input",ExpressionUUID->"e2d57575-295e-4d70-95a9-f19c6320910d"],
Cell[1675079, 32253, 518, 14, 36, "Output",ExpressionUUID->"ed273602-9d70-451b-9ca2-d00d605efe89"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1675634, 32272, 2099, 45, 42, "Input",ExpressionUUID->"6af6fba6-b764-41ce-acc8-b072c7a241d8"],
Cell[1677736, 32319, 183, 3, 33, "Output",ExpressionUUID->"a5521c15-6707-4002-a7df-c15016e0815f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1677956, 32327, 2202, 48, 42, "Input",ExpressionUUID->"2f794451-773f-47c5-a825-ef70f5fe3ab2"],
Cell[1680161, 32377, 152, 2, 32, "Output",ExpressionUUID->"66d8db49-659e-40ec-8c6e-632b3a425210"]
}, Open  ]],
Cell[1680328, 32382, 2291, 52, 42, "Input",ExpressionUUID->"68fa68d6-80e6-487c-a7c4-d36172b1e715"]
}, Open  ]]
}, Open  ]]
}
]
*)

