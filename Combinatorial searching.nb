(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    480010,      10528]
NotebookOptionsPosition[    463333,      10249]
NotebookOutlinePosition[    463770,      10266]
CellTagsIndexPosition[    463727,      10263]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["\<\
Working through the chapter Combinatorial Searching in \
Knuth\[CloseCurlyQuote]s TAOCP\
\>", "Title",
 CellChangeTimes->{{3.8772759098064613`*^9, 3.8772759265192275`*^9}, 
   3.877275960935297*^9},ExpressionUUID->"23510547-758b-498e-b1cc-\
e16255078060"],

Cell[CellGroupData[{

Cell["Exercise 41", "Section",
 CellChangeTimes->{{3.877274117817298*^9, 3.877274124038843*^9}, {
  3.877275875577175*^9, 
  3.877275876915882*^9}},ExpressionUUID->"783978e7-073d-4de7-9da9-\
d53f65d84f32"],

Cell[TextData[{
 "For what integers n do we have ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["K", "n"], "=", 
    SubscriptBox["P", "n"]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "df7ffc7b-f5d8-45a5-8b0c-78240d08d598"],
 "? ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["K", "n"], "=", 
    SubscriptBox["C", "n"]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "c69a11ef-0864-4777-a487-53a0d3e0ceee"],
 "?"
}], "Text",
 CellChangeTimes->{{3.877274127889776*^9, 
  3.877274151984803*^9}},ExpressionUUID->"1718777a-80ef-41ee-8c05-\
ea49fce358d0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"CompleteGraph", "[", "i", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "9"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8772741551067743`*^9, 3.8772741731893764`*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"40010bc4-9a5f-4c45-b130-903a55ab4dd1"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1}, {}, {
        GraphLayout -> {"CircularEmbedding", "OptimalOrder" -> False}}]]}, 
      TagBox[GraphicsGroupBox[GraphicsComplexBox[{{0., 0.}}, {{}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           DiskBox[1, 0.004014598540145964]}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->"NetworkGraphics",
    FormatType->TraditionalForm,
    FrameTicks->None,
    PlotRangePadding->0.1], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2}, {Null, 
         SparseArray[
         Automatic, {2, 2}, 0, {1, {{0, 1, 2}, {{2}, {1}}}, Pattern}]}, {
        GraphLayout -> {"CircularEmbedding", "OptimalOrder" -> False}}]]}, 
      TagBox[GraphicsGroupBox[GraphicsComplexBox[{{1., 0.}, {-1., 0.}}, {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
           {Arrowheads[0.], ArrowBox[{1, 2}, 0.02261146496815286]}}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           DiskBox[1, 0.02261146496815286], 
           DiskBox[2, 0.02261146496815286]}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->"NetworkGraphics",
    FormatType->TraditionalForm,
    FrameTicks->None], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3}, {Null, 
         SparseArray[
         Automatic, {3, 3}, 0, {
          1, {{0, 2, 4, 6}, {{2}, {3}, {1}, {3}, {1}, {2}}}, Pattern}]}, {
        GraphLayout -> {"CircularEmbedding", "OptimalOrder" -> False}}]]}, 
      TagBox[
       GraphicsGroupBox[
        GraphicsComplexBox[{{-0.8660254037844384, -0.49999999999999933`}, {
         0.8660254037844389, -0.5000000000000012}, {1.8369701987210297`*^-16, 
         1.}}, {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
           ArrowBox[{{1, 2}, {1, 3}, {2, 3}}, 0.020399597244776385`]}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           DiskBox[1, 0.020399597244776385], DiskBox[2, 0.020399597244776385],
            DiskBox[3, 0.020399597244776385]}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->"NetworkGraphics",
    FormatType->TraditionalForm,
    FrameTicks->None], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4}, {Null, 
         SparseArray[
         Automatic, {4, 4}, 0, {
          1, {{0, 3, 6, 9, 12}, {{2}, {3}, {4}, {1}, {3}, {4}, {1}, {2}, {
            4}, {1}, {2}, {3}}}, Pattern}]}, {
        GraphLayout -> "StarEmbedding"}]]}, 
      TagBox[
       GraphicsGroupBox[
        GraphicsComplexBox[{{0., 0.}, {
         0.8660254037844389, -0.5000000000000012}, {1.8369701987210297`*^-16, 
         1.}, {-0.8660254037844386, -0.49999999999999917`}}, {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
           ArrowBox[{{1, 2}, {1, 3}, {1, 4}, {2, 3}, {2, 4}, {3, 4}}, 
            0.020399597244776413`]}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           DiskBox[1, 0.020399597244776413], DiskBox[2, 0.020399597244776413],
            DiskBox[3, 0.020399597244776413], 
           DiskBox[4, 0.020399597244776413]}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->"NetworkGraphics",
    FormatType->TraditionalForm,
    FrameTicks->None], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4, 5}, {Null, 
         SparseArray[
         Automatic, {5, 5}, 0, {
          1, {{0, 4, 8, 12, 16, 20}, {{2}, {3}, {4}, {5}, {1}, {3}, {4}, {
            5}, {1}, {2}, {4}, {5}, {1}, {2}, {3}, {5}, {1}, {2}, {3}, {4}}}, 
           Pattern}]}, {
        GraphLayout -> {"CircularEmbedding", "OptimalOrder" -> False}}]]}, 
      TagBox[
       GraphicsGroupBox[
        GraphicsComplexBox[{{-0.9510565162951538, 
         0.3090169943749484}, {-0.5877852522924726, -0.8090169943749468}, {
         0.5877852522924738, -0.8090169943749481}, {0.9510565162951533, 
         0.30901699437494634`}, {-7.044813998280222*^-16, 1.}}, {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
           ArrowBox[{{1, 2}, {1, 3}, {1, 4}, {1, 5}, {2, 3}, {2, 4}, {2, 5}, {
            3, 4}, {3, 5}, {4, 5}}, 0.021812234931106983`]}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           DiskBox[1, 0.021812234931106983], DiskBox[2, 0.021812234931106983],
            DiskBox[3, 0.021812234931106983], 
           DiskBox[4, 0.021812234931106983], 
           DiskBox[5, 0.021812234931106983]}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->"NetworkGraphics",
    FormatType->TraditionalForm,
    FrameTicks->None], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4, 5, 6}, {Null, 
         SparseArray[
         Automatic, {6, 6}, 0, {
          1, {{0, 5, 10, 15, 20, 25, 30}, {{2}, {3}, {4}, {5}, {6}, {1}, {
            3}, {4}, {5}, {6}, {1}, {2}, {4}, {5}, {6}, {1}, {2}, {3}, {5}, {
            6}, {1}, {2}, {3}, {4}, {6}, {1}, {2}, {3}, {4}, {5}}}, 
           Pattern}]}, {
        GraphLayout -> {"CircularEmbedding", "OptimalOrder" -> False}}]]}, 
      TagBox[
       GraphicsGroupBox[
        GraphicsComplexBox[{{-0.8660254037844389, 
         0.5000000000000008}, {-0.8660254037844384, -0.49999999999999933`}, {
         3.8285686989269494`*^-16, -1.}, {
         0.8660254037844389, -0.5000000000000012}, {0.8660254037844386, 
         0.4999999999999993}, {1.8369701987210297`*^-16, 1.}}, {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
           ArrowBox[{{1, 2}, {1, 3}, {1, 4}, {1, 5}, {1, 6}, {2, 3}, {2, 4}, {
            2, 5}, {2, 6}, {3, 4}, {3, 5}, {3, 6}, {4, 5}, {4, 6}, {5, 6}}, 
            0.02261146496815286]}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           DiskBox[1, 0.02261146496815286], DiskBox[2, 0.02261146496815286], 
           DiskBox[3, 0.02261146496815286], DiskBox[4, 0.02261146496815286], 
           DiskBox[5, 0.02261146496815286], 
           DiskBox[6, 0.02261146496815286]}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->"NetworkGraphics",
    FormatType->TraditionalForm,
    FrameTicks->None], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4, 5, 6, 7}, {Null, 
         SparseArray[
         Automatic, {7, 7}, 0, {
          1, {{0, 6, 12, 18, 24, 30, 36, 42}, {{2}, {3}, {4}, {5}, {6}, {7}, {
            1}, {3}, {4}, {5}, {6}, {7}, {1}, {2}, {4}, {5}, {6}, {7}, {1}, {
            2}, {3}, {5}, {6}, {7}, {1}, {2}, {3}, {4}, {6}, {7}, {1}, {2}, {
            3}, {4}, {5}, {7}, {1}, {2}, {3}, {4}, {5}, {6}}}, Pattern}]}, {
        GraphLayout -> {"CircularEmbedding", "OptimalOrder" -> False}}]]}, 
      TagBox[
       GraphicsGroupBox[
        GraphicsComplexBox[{{-0.7818314824680302, 
         0.6234898018587343}, {-0.9749279121818235, -0.22252093395631342`}, \
{-0.43388373911755757`, -0.9009688679024187}, {
         0.43388373911755884`, -0.9009688679024196}, {
         0.9749279121818237, -0.2225209339563155}, {0.7818314824680294, 
         0.6234898018587326}, {-7.044813998280222*^-16, 1.}}, {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
           ArrowBox[{{1, 2}, {1, 3}, {1, 4}, {1, 5}, {1, 6}, {1, 7}, {2, 3}, {
            2, 4}, {2, 5}, {2, 6}, {2, 7}, {3, 4}, {3, 5}, {3, 6}, {3, 7}, {4,
             5}, {4, 6}, {4, 7}, {5, 6}, {5, 7}, {6, 7}}, 
            0.02220329551621769]}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           DiskBox[1, 0.02220329551621769], DiskBox[2, 0.02220329551621769], 
           DiskBox[3, 0.02220329551621769], DiskBox[4, 0.02220329551621769], 
           DiskBox[5, 0.02220329551621769], DiskBox[6, 0.02220329551621769], 
           DiskBox[7, 0.02220329551621769]}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->"NetworkGraphics",
    FormatType->TraditionalForm,
    FrameTicks->None], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4, 5, 6, 7, 8}, {Null, 
         SparseArray[
         Automatic, {8, 8}, 0, {
          1, {{0, 7, 14, 21, 28, 35, 42, 49, 56}, {{2}, {3}, {4}, {5}, {6}, {
            7}, {8}, {1}, {3}, {4}, {5}, {6}, {7}, {8}, {1}, {2}, {4}, {5}, {
            6}, {7}, {8}, {1}, {2}, {3}, {5}, {6}, {7}, {8}, {1}, {2}, {3}, {
            4}, {6}, {7}, {8}, {1}, {2}, {3}, {4}, {5}, {7}, {8}, {1}, {2}, {
            3}, {4}, {5}, {6}, {8}, {1}, {2}, {3}, {4}, {5}, {6}, {7}}}, 
           Pattern}]}, {
        GraphLayout -> {"CircularEmbedding", "OptimalOrder" -> False}}]]}, 
      TagBox[
       GraphicsGroupBox[
        GraphicsComplexBox[{{-0.707106781186548, 0.7071067811865482}, {-1., 
         1.0106430996148606`*^-15}, {-0.7071067811865471, \
-0.7071067811865468}, {6.049014748177263*^-16, -1.}, {
         0.7071067811865481, -0.7071067811865483}, {
         1., -1.133107779529596*^-15}, {0.707106781186547, 
         0.7071067811865467}, {-7.044813998280222*^-16, 1.}}, {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
           ArrowBox[{{1, 2}, {1, 3}, {1, 4}, {1, 5}, {1, 6}, {1, 7}, {1, 8}, {
            2, 3}, {2, 4}, {2, 5}, {2, 6}, {2, 7}, {2, 8}, {3, 4}, {3, 5}, {3,
             6}, {3, 7}, {3, 8}, {4, 5}, {4, 6}, {4, 7}, {4, 8}, {5, 6}, {5, 
            7}, {5, 8}, {6, 7}, {6, 8}, {7, 8}}, 0.02261146496815286]}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           DiskBox[1, 0.02261146496815286], DiskBox[2, 0.02261146496815286], 
           DiskBox[3, 0.02261146496815286], DiskBox[4, 0.02261146496815286], 
           DiskBox[5, 0.02261146496815286], DiskBox[6, 0.02261146496815286], 
           DiskBox[7, 0.02261146496815286], 
           DiskBox[8, 0.02261146496815286]}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->"NetworkGraphics",
    FormatType->TraditionalForm,
    FrameTicks->None], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9}, {Null, 
         SparseArray[
         Automatic, {9, 9}, 0, {
          1, {{0, 8, 16, 24, 32, 40, 48, 56, 64, 72}, {{2}, {3}, {4}, {5}, {
            6}, {7}, {8}, {9}, {1}, {3}, {4}, {5}, {6}, {7}, {8}, {9}, {1}, {
            2}, {4}, {5}, {6}, {7}, {8}, {9}, {1}, {2}, {3}, {5}, {6}, {7}, {
            8}, {9}, {1}, {2}, {3}, {4}, {6}, {7}, {8}, {9}, {1}, {2}, {3}, {
            4}, {5}, {7}, {8}, {9}, {1}, {2}, {3}, {4}, {5}, {6}, {8}, {9}, {
            1}, {2}, {3}, {4}, {5}, {6}, {7}, {9}, {1}, {2}, {3}, {4}, {5}, {
            6}, {7}, {8}}}, Pattern}]}, {
        GraphLayout -> {"CircularEmbedding", "OptimalOrder" -> False}}]]}, 
      TagBox[
       GraphicsGroupBox[
        GraphicsComplexBox[{{-0.6427876096865398, 
         0.7660444431189786}, {-0.9848077530122081, 
         0.17364817766693114`}, {-0.8660254037844384, -0.49999999999999933`}, \
{-0.34202014332566844`, -0.9396926207859079}, {
         0.3420201433256691, -0.9396926207859085}, {
         0.8660254037844389, -0.5000000000000012}, {0.984807753012208, 
         0.17364817766692903`}, {0.6427876096865388, 
         0.7660444431189772}, {-7.044813998280222*^-16, 1.}}, {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
           ArrowBox[{{1, 2}, {1, 3}, {1, 4}, {1, 5}, {1, 6}, {1, 7}, {1, 8}, {
            1, 9}, {2, 3}, {2, 4}, {2, 5}, {2, 6}, {2, 7}, {2, 8}, {2, 9}, {3,
             4}, {3, 5}, {3, 6}, {3, 7}, {3, 8}, {3, 9}, {4, 5}, {4, 6}, {4, 
            7}, {4, 8}, {4, 9}, {5, 6}, {5, 7}, {5, 8}, {5, 9}, {6, 7}, {6, 
            8}, {6, 9}, {7, 8}, {7, 9}, {8, 9}}, 0.022364449578799767`]}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           DiskBox[1, 0.022364449578799767], DiskBox[2, 0.022364449578799767],
            DiskBox[3, 0.022364449578799767], 
           DiskBox[4, 0.022364449578799767], DiskBox[5, 0.022364449578799767],
            DiskBox[6, 0.022364449578799767], 
           DiskBox[7, 0.022364449578799767], DiskBox[8, 0.022364449578799767],
            DiskBox[9, 0.022364449578799767]}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->"NetworkGraphics",
    FormatType->TraditionalForm,
    FrameTicks->None]}], "}"}]], "Output",
 CellChangeTimes->{{3.877274160716116*^9, 3.87727417368928*^9}},
 CellLabel->"Out[2]=",ExpressionUUID->"9d99222e-1df7-4e0f-a40d-2b77e6b80e7b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"PathGraph", "[", 
    RowBox[{"Range", "[", "i", "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "9"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8772741551067743`*^9, 3.8772741859855766`*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"be6251f1-0ee4-4389-baf0-97cda980040c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1}, {}]]}, 
      TagBox[GraphicsGroupBox[GraphicsComplexBox[{{0., 0.}}, {{}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           DiskBox[1, 0.004014598540145964]}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->"NetworkGraphics",
    FormatType->TraditionalForm,
    FrameTicks->None,
    PlotRangePadding->0.1], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2}, {Null, {{1, 2}}}]]}, 
      TagBox[GraphicsGroupBox[GraphicsComplexBox[{{1., 0.}, {-1., 0.}}, {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
           {Arrowheads[0.], ArrowBox[{1, 2}, 0.02261146496815286]}}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           DiskBox[1, 0.02261146496815286], 
           DiskBox[2, 0.02261146496815286]}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->"NetworkGraphics",
    FormatType->TraditionalForm,
    FrameTicks->None], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3}, {Null, {{1, 2}, {2, 3}}}]]}, 
      TagBox[
       GraphicsGroupBox[
        GraphicsComplexBox[{{0., 3.6739403974420594`*^-16}, {1., 
         2.4492935982947064`*^-16}, {2., 0.}}, {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
           ArrowBox[{{1, 2}, {2, 3}}, 0.02261146496815286]}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           DiskBox[1, 0.02261146496815286], DiskBox[2, 0.02261146496815286], 
           DiskBox[3, 0.02261146496815286]}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->"NetworkGraphics",
    FormatType->TraditionalForm,
    FrameTicks->None], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4}, {Null, {{1, 2}, {2, 3}, {3, 4}}}]]}, 
      TagBox[
       GraphicsGroupBox[
        GraphicsComplexBox[{{0., 6.123233995736766*^-16}, {1., 
         4.898587196589413*^-16}, {2., 2.4492935982947064`*^-16}, {3., 0.}}, {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
           ArrowBox[{{1, 2}, {2, 3}, {3, 4}}, 0.030239520958083826`]}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           DiskBox[1, 0.030239520958083826], DiskBox[2, 0.030239520958083826],
            DiskBox[3, 0.030239520958083826], 
           DiskBox[4, 0.030239520958083826]}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->"NetworkGraphics",
    FormatType->TraditionalForm,
    FrameTicks->None], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4, 5}, {Null, {{1, 2}, {2, 3}, {3, 4}, {4, 5}}}]]}, 
      TagBox[
       GraphicsGroupBox[
        GraphicsComplexBox[{{0., 7.347880794884119*^-16}, {1., 
         6.123233995736766*^-16}, {2., 4.898587196589413*^-16}, {3., 
         2.4492935982947064`*^-16}, {4., 0.}}, {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
           ArrowBox[{{1, 2}, {2, 3}, {3, 4}, {4, 5}}, 0.03700564971751412]}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           DiskBox[1, 0.03700564971751412], DiskBox[2, 0.03700564971751412], 
           DiskBox[3, 0.03700564971751412], DiskBox[4, 0.03700564971751412], 
           DiskBox[5, 0.03700564971751412]}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->"NetworkGraphics",
    FormatType->TraditionalForm,
    FrameTicks->None], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4, 5, 6}, {
        Null, {{1, 2}, {2, 3}, {3, 4}, {4, 5}, {5, 6}}}]]}, 
      TagBox[
       GraphicsGroupBox[
        GraphicsComplexBox[{{0., 9.797174393178826*^-16}, {1., 
         8.572527594031472*^-16}, {2., 7.347880794884119*^-16}, {3., 
         4.898587196589412*^-16}, {4., 2.449293598294706*^-16}, {5., 0.}}, {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
           ArrowBox[{{1, 2}, {2, 3}, {3, 4}, {4, 5}, {5, 6}}, 
            0.043048128342245986`]}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           DiskBox[1, 0.043048128342245986], DiskBox[2, 0.043048128342245986],
            DiskBox[3, 0.043048128342245986], 
           DiskBox[4, 0.043048128342245986], DiskBox[5, 0.043048128342245986],
            DiskBox[6, 0.043048128342245986]}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->"NetworkGraphics",
    FormatType->TraditionalForm,
    FrameTicks->None], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4, 5, 6, 7}, {
        Null, {{1, 2}, {2, 3}, {3, 4}, {4, 5}, {5, 6}, {6, 7}}}]]}, 
      TagBox[
       GraphicsGroupBox[
        GraphicsComplexBox[{{0., 1.102182119232618*^-15}, {1., 
         9.797174393178826*^-16}, {2., 8.572527594031472*^-16}, {3., 
         7.347880794884119*^-16}, {4., 4.898587196589412*^-16}, {5., 
         2.449293598294706*^-16}, {6., 0.}}, {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
           ArrowBox[{{1, 2}, {2, 3}, {3, 4}, {4, 5}, {5, 6}, {6, 7}}, 
            0.04847715736040609]}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           DiskBox[1, 0.04847715736040609], DiskBox[2, 0.04847715736040609], 
           DiskBox[3, 0.04847715736040609], DiskBox[4, 0.04847715736040609], 
           DiskBox[5, 0.04847715736040609], DiskBox[6, 0.04847715736040609], 
           DiskBox[7, 0.04847715736040609]}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->"NetworkGraphics",
    FormatType->TraditionalForm,
    FrameTicks->None], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4, 5, 6, 7, 8}, {
        Null, {{1, 2}, {2, 3}, {3, 4}, {4, 5}, {5, 6}, {6, 7}, {7, 8}}}]]}, 
      TagBox[
       GraphicsGroupBox[
        GraphicsComplexBox[{{0., 1.3471114790620886`*^-15}, {1., 
         1.2246467991473533`*^-15}, {2., 1.102182119232618*^-15}, {3., 
         9.797174393178826*^-16}, {4., 7.347880794884119*^-16}, {5., 
         4.898587196589413*^-16}, {6., 2.449293598294707*^-16}, {7., 0.}}, {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
           ArrowBox[{{1, 2}, {2, 3}, {3, 4}, {4, 5}, {5, 6}, {6, 7}, {7, 8}}, 
            0.05338164251207729]}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           DiskBox[1, 0.05338164251207729], DiskBox[2, 0.05338164251207729], 
           DiskBox[3, 0.05338164251207729], DiskBox[4, 0.05338164251207729], 
           DiskBox[5, 0.05338164251207729], DiskBox[6, 0.05338164251207729], 
           DiskBox[7, 0.05338164251207729], 
           DiskBox[8, 0.05338164251207729]}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->"NetworkGraphics",
    FormatType->TraditionalForm,
    FrameTicks->None], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9}, {
        Null, {{1, 2}, {2, 3}, {3, 4}, {4, 5}, {5, 6}, {6, 7}, {7, 8}, {8, 
         9}}}]]}, 
      TagBox[
       GraphicsGroupBox[
        GraphicsComplexBox[{{0., 1.4695761589768238`*^-15}, {1., 
         1.3471114790620886`*^-15}, {2., 1.2246467991473533`*^-15}, {3., 
         1.102182119232618*^-15}, {4., 9.797174393178826*^-16}, {5., 
         7.347880794884119*^-16}, {6., 4.898587196589413*^-16}, {7., 
         2.449293598294707*^-16}, {8., 0.}}, {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
           ArrowBox[{{1, 2}, {2, 3}, {3, 4}, {4, 5}, {5, 6}, {6, 7}, {7, 8}, {
            8, 9}}, 0.05783410138248847]}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           DiskBox[1, 0.05783410138248847], DiskBox[2, 0.05783410138248847], 
           DiskBox[3, 0.05783410138248847], DiskBox[4, 0.05783410138248847], 
           DiskBox[5, 0.05783410138248847], DiskBox[6, 0.05783410138248847], 
           DiskBox[7, 0.05783410138248847], DiskBox[8, 0.05783410138248847], 
           DiskBox[9, 0.05783410138248847]}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->"NetworkGraphics",
    FormatType->TraditionalForm,
    FrameTicks->None]}], "}"}]], "Output",
 CellChangeTimes->{3.8772741863917255`*^9},
 CellLabel->"Out[3]=",ExpressionUUID->"ff418fd0-2a66-4eec-9dd1-cf077bfa9ddc"]
}, Open  ]],

Cell["\<\
I\[CloseCurlyQuote]ll use the new isomorphism functionality introduced in \
recent releases of Mathematica:\
\>", "Text",
 CellChangeTimes->{{3.8772757902827063`*^9, 
  3.8772758030482655`*^9}},ExpressionUUID->"8abb2d9f-436a-4acb-afb8-\
bb830e53cf1c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindGraphIsomorphism", "[", 
  RowBox[{
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1}, {}]]}, 
      TagBox[GraphicsGroupBox[GraphicsComplexBox[{{0., 0.}}, {{}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           DiskBox[1, 0.004014598540145964]}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->"NetworkGraphics",
    FormatType->TraditionalForm,
    FrameTicks->None,
    PlotRangePadding->0.1], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1}, {}, {
        GraphLayout -> {"CircularEmbedding", "OptimalOrder" -> False}}]]}, 
      TagBox[GraphicsGroupBox[GraphicsComplexBox[{{0., 0.}}, {{}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           DiskBox[1, 0.004014598540145964]}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->"NetworkGraphics",
    FormatType->TraditionalForm,
    FrameTicks->None,
    PlotRangePadding->0.1]}], "]"}]], "Input",
 CellChangeTimes->{{3.877274210658759*^9, 3.877274232275937*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"c296a6bb-835b-44f6-9738-15538067f2a0"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\[LeftAssociation]", 
   RowBox[{"1", "\[Rule]", "1"}], "\[RightAssociation]"}], "}"}]], "Output",
 CellChangeTimes->{3.877274233057017*^9},
 CellLabel->"Out[5]=",ExpressionUUID->"194ed91e-4132-47db-903b-b7d1d71701d1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Names", "[", "\"\<*Isom*\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.8772742541981115`*^9, 3.8772742850209923`*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"f33d7c4d-e620-4981-8a8d-cf95f6e51fc8"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"FindGraphIsomorphism\"\>", ",", "\<\"FindIsomers\"\>", 
   ",", "\<\"FindIsomorphicSubgraph\"\>", 
   ",", "\<\"FindSubgraphIsomorphism\"\>", ",", "\<\"IsomorphicGraphQ\"\>", 
   ",", "\<\"IsomorphicSubgraphQ\"\>"}], "}"}]], "Output",
 CellChangeTimes->{{3.8772742590360775`*^9, 3.877274285505273*^9}},
 CellLabel->"Out[8]=",ExpressionUUID->"74ca0031-7808-428f-bcfd-d3a80d263b5e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Information", "/@", 
  RowBox[{"Names", "[", "\"\<*Isom*\>\"", "]"}]}]], "Input",
 CellChangeTimes->{{3.877274262161058*^9, 3.8772742889272203`*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"62ec24f5-e44f-42bd-a014-eb7440fcda52"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/FindGraphIsomorphism",
                ButtonNote->"paclet:ref/FindGraphIsomorphism"],
               "\"paclet:ref/FindGraphIsomorphism\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"FindGraphIsomorphism\\\", \\\
\"[\\\", RowBox[{SubscriptBox[StyleBox[\\\"g\\\", \\\"TI\\\"], StyleBox[\\\"1\
\\\", \\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"g\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]]}], \\\"]\\\"}]\\) finds an isomorphism that \
maps the graph \\!\\(\\*SubscriptBox[StyleBox[\\\"g\\\", \\\"TI\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]]\\) to \\!\\(\\*SubscriptBox[StyleBox[\\\"g\\\
\", \\\"TI\\\"], StyleBox[\\\"2\\\", \\\"TR\\\"]]\\) by renaming vertices.\\n\
\\!\\(\\*RowBox[{\\\"FindGraphIsomorphism\\\", \\\"[\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"g\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"g\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"n\\\", \
\\\"TI\\\"]}], \\\"]\\\"}]\\) finds at most \\!\\(\\*StyleBox[\\\"n\\\", \
\\\"TI\\\"]\\) isomorphisms. \
\\n\\!\\(\\*RowBox[{\\\"FindGraphIsomorphism\\\", \\\"[\\\", RowBox[{RowBox[{\
\\\"{\\\", RowBox[{RowBox[{StyleBox[\\\"v\\\", \\\"TI\\\"], \\\"\[Rule]\\\", \
StyleBox[\\\"w\\\", \\\"TI\\\"]}], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \
\\\"TR\\\"]}], \\\"}\\\"}], \\\",\\\", \\\"\[Ellipsis]\\\"}], \\\"]\\\"}]\\) \
uses rules \\!\\(\\*RowBox[{StyleBox[\\\"v\\\", \\\"TI\\\"], \\\"\[Rule]\\\", \
StyleBox[\\\"w\\\", \\\"TI\\\"]}]\\) to specify the graph \
\\!\\(\\*StyleBox[\\\"g\\\", \\\"TI\\\"]\\).\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", 
                    "paclet:ref/FindGraphIsomorphism", 
                    "paclet:ref/FindGraphIsomorphism", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/\
FindGraphIsomorphism.html"], None}, 
                    "http://reference.wolfram.com/language/ref/\
FindGraphIsomorphism.html", "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Options\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Options\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Options", "Tooltip"]& ], 
                    RowBox[{"Method", "\[Rule]", "Automatic"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", 
                    RowBox[{"Protected", ",", "ReadProtected"}], "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`FindGraphIsomorphism\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/FindGraphIsomorphism",
                ButtonNote->"paclet:ref/FindGraphIsomorphism"],
               "\"paclet:ref/FindGraphIsomorphism\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"FindGraphIsomorphism\\\", \\\
\"[\\\", RowBox[{SubscriptBox[StyleBox[\\\"g\\\", \\\"TI\\\"], StyleBox[\\\"1\
\\\", \\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"g\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]]}], \\\"]\\\"}]\\) finds an isomorphism that \
maps the graph \\!\\(\\*SubscriptBox[StyleBox[\\\"g\\\", \\\"TI\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]]\\) to \\!\\(\\*SubscriptBox[StyleBox[\\\"g\\\
\", \\\"TI\\\"], StyleBox[\\\"2\\\", \\\"TR\\\"]]\\) by renaming vertices.\\n\
\\!\\(\\*RowBox[{\\\"FindGraphIsomorphism\\\", \\\"[\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"g\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"g\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"n\\\", \
\\\"TI\\\"]}], \\\"]\\\"}]\\) finds at most \\!\\(\\*StyleBox[\\\"n\\\", \
\\\"TI\\\"]\\) isomorphisms. \
\\n\\!\\(\\*RowBox[{\\\"FindGraphIsomorphism\\\", \\\"[\\\", RowBox[{RowBox[{\
\\\"{\\\", RowBox[{RowBox[{StyleBox[\\\"v\\\", \\\"TI\\\"], \\\"\[Rule]\\\", \
StyleBox[\\\"w\\\", \\\"TI\\\"]}], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \
\\\"TR\\\"]}], \\\"}\\\"}], \\\",\\\", \\\"\[Ellipsis]\\\"}], \\\"]\\\"}]\\) \
uses rules \\!\\(\\*RowBox[{StyleBox[\\\"v\\\", \\\"TI\\\"], \\\"\[Rule]\\\", \
StyleBox[\\\"w\\\", \\\"TI\\\"]}]\\) to specify the graph \
\\!\\(\\*StyleBox[\\\"g\\\", \\\"TI\\\"]\\).\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"FindGraphIsomorphism\", \"[\", \
RowBox[{SubscriptBox[StyleBox[\"g\", \"TI\"], StyleBox[\"1\", \"TR\"]], \
\",\", SubscriptBox[StyleBox[\"g\", \"TI\"], StyleBox[\"2\", \"TR\"]]}], \
\"]\"}]\) finds an isomorphism that maps the graph \
\!\(\*SubscriptBox[StyleBox[\"g\", \"TI\"], StyleBox[\"1\", \"TR\"]]\) to \
\!\(\*SubscriptBox[StyleBox[\"g\", \"TI\"], StyleBox[\"2\", \"TR\"]]\) by \
renaming vertices.\n\!\(\*RowBox[{\"FindGraphIsomorphism\", \"[\", \
RowBox[{SubscriptBox[StyleBox[\"g\", \"TI\"], StyleBox[\"1\", \"TR\"]], \
\",\", SubscriptBox[StyleBox[\"g\", \"TI\"], StyleBox[\"2\", \"TR\"]], \",\", \
StyleBox[\"n\", \"TI\"]}], \"]\"}]\) finds at most \!\(\*StyleBox[\"n\", \"TI\
\"]\) isomorphisms. \n\!\(\*RowBox[{\"FindGraphIsomorphism\", \"[\", \
RowBox[{RowBox[{\"{\", RowBox[{RowBox[{StyleBox[\"v\", \"TI\"], \"\[Rule]\", \
StyleBox[\"w\", \"TI\"]}], \",\", StyleBox[\"\[Ellipsis]\", \"TR\"]}], \
\"}\"}], \",\", \"\[Ellipsis]\"}], \"]\"}]\) uses rules \
\!\(\*RowBox[{StyleBox[\"v\", \"TI\"], \"\[Rule]\", StyleBox[\"w\", \"TI\"]}]\
\) to specify the graph \!\(\*StyleBox[\"g\", \"TI\"]\).", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/FindGraphIsomorphism", "Web" -> 
        "http://reference.wolfram.com/language/ref/FindGraphIsomorphism.html"|>\
, "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, "SubValues" -> 
      None, "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> 
      None, "Options" -> {Method -> Automatic}, 
      "Attributes" -> {Protected, ReadProtected}, "FullName" -> 
      "System`FindGraphIsomorphism"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/FindIsomers",
                ButtonNote->"paclet:ref/FindIsomers"],
               "\"paclet:ref/FindIsomers\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"FindIsomers\\\", \\\"[\\\", \
StyleBox[\\\"chem\\\", \\\"TI\\\"], \\\"]\\\"}]\\) returns a list of \
molecules with the same chemical formula as \\!\\(\\*StyleBox[\\\"chem\\\", \
\\\"TI\\\"]\\).\\n\\!\\(\\*RowBox[{\\\"FindIsomers\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"chem\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"form\\\", \
\\\"TI\\\"]}], \\\"]\\\"}]\\) finds isomers of \
\\!\\(\\*StyleBox[\\\"chem\\\", \\\"TI\\\"]\\) and returns them in the given \
form.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", "paclet:ref/FindIsomers", 
                    "paclet:ref/FindIsomers", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/FindIsomers.\
html"], None}, "http://reference.wolfram.com/language/ref/FindIsomers.html", 
                    "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", 
                    RowBox[{"Protected", ",", "ReadProtected"}], "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`FindIsomers\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/FindIsomers",
                ButtonNote->"paclet:ref/FindIsomers"],
               "\"paclet:ref/FindIsomers\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"FindIsomers\\\", \\\"[\\\", \
StyleBox[\\\"chem\\\", \\\"TI\\\"], \\\"]\\\"}]\\) returns a list of \
molecules with the same chemical formula as \\!\\(\\*StyleBox[\\\"chem\\\", \
\\\"TI\\\"]\\).\\n\\!\\(\\*RowBox[{\\\"FindIsomers\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"chem\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"form\\\", \
\\\"TI\\\"]}], \\\"]\\\"}]\\) finds isomers of \
\\!\\(\\*StyleBox[\\\"chem\\\", \\\"TI\\\"]\\) and returns them in the given \
form.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"FindIsomers\", \"[\", StyleBox[\"chem\", \"TI\"], \
\"]\"}]\) returns a list of molecules with the same chemical formula as \
\!\(\*StyleBox[\"chem\", \"TI\"]\).\n\!\(\*RowBox[{\"FindIsomers\", \"[\", \
RowBox[{StyleBox[\"chem\", \"TI\"], \",\", StyleBox[\"form\", \"TI\"]}], \
\"]\"}]\) finds isomers of \!\(\*StyleBox[\"chem\", \"TI\"]\) and returns \
them in the given form.", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/FindIsomers", "Web" -> 
        "http://reference.wolfram.com/language/ref/FindIsomers.html"|>, 
      "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, "Options" -> None, 
      "Attributes" -> {Protected, ReadProtected}, "FullName" -> 
      "System`FindIsomers"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/FindIsomorphicSubgraph",
                ButtonNote->"paclet:ref/FindIsomorphicSubgraph"],
               "\"paclet:ref/FindIsomorphicSubgraph\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"FindIsomorphicSubgraph\\\", \
\\\"[\\\", RowBox[{SubscriptBox[StyleBox[\\\"g\\\", \\\"TI\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"g\\\", \
\\\"TI\\\"], StyleBox[\\\"2\\\", \\\"TR\\\"]]}], \\\"]\\\"}]\\) finds a \
subgraph of \\!\\(\\*SubscriptBox[StyleBox[\\\"g\\\", \\\"TI\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]]\\) that is isomorphic to \
\\!\\(\\*SubscriptBox[StyleBox[\\\"g\\\", \\\"TI\\\"], StyleBox[\\\"2\\\", \\\
\"TR\\\"]]\\).\\n\\!\\(\\*RowBox[{\\\"FindIsomorphicSubgraph\\\", \\\"[\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"g\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"g\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"n\\\", \
\\\"TI\\\"]}], \\\"]\\\"}]\\) finds at most \\!\\(\\*StyleBox[\\\"n\\\", \
\\\"TI\\\"]\\) subgraphs.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", 
                    "paclet:ref/FindIsomorphicSubgraph", 
                    "paclet:ref/FindIsomorphicSubgraph", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/\
FindIsomorphicSubgraph.html"], None}, 
                    "http://reference.wolfram.com/language/ref/\
FindIsomorphicSubgraph.html", "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", 
                    RowBox[{"Protected", ",", "ReadProtected"}], "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`FindIsomorphicSubgraph\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/FindIsomorphicSubgraph",
                ButtonNote->"paclet:ref/FindIsomorphicSubgraph"],
               "\"paclet:ref/FindIsomorphicSubgraph\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"FindIsomorphicSubgraph\\\", \
\\\"[\\\", RowBox[{SubscriptBox[StyleBox[\\\"g\\\", \\\"TI\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"g\\\", \
\\\"TI\\\"], StyleBox[\\\"2\\\", \\\"TR\\\"]]}], \\\"]\\\"}]\\) finds a \
subgraph of \\!\\(\\*SubscriptBox[StyleBox[\\\"g\\\", \\\"TI\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]]\\) that is isomorphic to \
\\!\\(\\*SubscriptBox[StyleBox[\\\"g\\\", \\\"TI\\\"], StyleBox[\\\"2\\\", \\\
\"TR\\\"]]\\).\\n\\!\\(\\*RowBox[{\\\"FindIsomorphicSubgraph\\\", \\\"[\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"g\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"g\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"n\\\", \
\\\"TI\\\"]}], \\\"]\\\"}]\\) finds at most \\!\\(\\*StyleBox[\\\"n\\\", \
\\\"TI\\\"]\\) subgraphs.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"FindIsomorphicSubgraph\", \"[\", \
RowBox[{SubscriptBox[StyleBox[\"g\", \"TI\"], StyleBox[\"1\", \"TR\"]], \
\",\", SubscriptBox[StyleBox[\"g\", \"TI\"], StyleBox[\"2\", \"TR\"]]}], \
\"]\"}]\) finds a subgraph of \!\(\*SubscriptBox[StyleBox[\"g\", \"TI\"], \
StyleBox[\"1\", \"TR\"]]\) that is isomorphic to \!\(\*SubscriptBox[StyleBox[\
\"g\", \"TI\"], StyleBox[\"2\", \"TR\"]]\).\n\
\!\(\*RowBox[{\"FindIsomorphicSubgraph\", \"[\", \
RowBox[{SubscriptBox[StyleBox[\"g\", \"TI\"], StyleBox[\"1\", \"TR\"]], \
\",\", SubscriptBox[StyleBox[\"g\", \"TI\"], StyleBox[\"2\", \"TR\"]], \",\", \
StyleBox[\"n\", \"TI\"]}], \"]\"}]\) finds at most \!\(\*StyleBox[\"n\", \"TI\
\"]\) subgraphs.", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/FindIsomorphicSubgraph", "Web" -> 
        "http://reference.wolfram.com/language/ref/FindIsomorphicSubgraph.\
html"|>, "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, "Options" -> None, 
      "Attributes" -> {Protected, ReadProtected}, "FullName" -> 
      "System`FindIsomorphicSubgraph"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/FindSubgraphIsomorphism",
                ButtonNote->"paclet:ref/FindSubgraphIsomorphism"],
               "\"paclet:ref/FindSubgraphIsomorphism\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"FindSubgraphIsomorphism\\\", \
\\\"[\\\", RowBox[{SubscriptBox[StyleBox[\\\"g\\\", \\\"TI\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"g\\\", \
\\\"TI\\\"], StyleBox[\\\"2\\\", \\\"TR\\\"]]}], \\\"]\\\"}]\\) finds a \
subgraph isomorphism that maps the graph \\!\\(\\*SubscriptBox[StyleBox[\\\"g\
\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \\\"TR\\\"]]\\) to a subgraph of \
\\!\\(\\*SubscriptBox[StyleBox[\\\"g\\\", \\\"TI\\\"], StyleBox[\\\"2\\\", \\\
\"TR\\\"]]\\) by renaming \
vertices.\\n\\!\\(\\*RowBox[{\\\"FindSubgraphIsomorphism\\\", \\\"[\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"g\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"g\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"n\\\", \
\\\"TI\\\"]}], \\\"]\\\"}]\\) finds at most \\!\\(\\*StyleBox[\\\"n\\\", \
\\\"TI\\\"]\\) subgraph isomorphisms.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", 
                    "paclet:ref/FindSubgraphIsomorphism", 
                    "paclet:ref/FindSubgraphIsomorphism", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/\
FindSubgraphIsomorphism.html"], None}, 
                    "http://reference.wolfram.com/language/ref/\
FindSubgraphIsomorphism.html", "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", 
                    RowBox[{"Protected", ",", "ReadProtected"}], "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`FindSubgraphIsomorphism\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/FindSubgraphIsomorphism",
                ButtonNote->"paclet:ref/FindSubgraphIsomorphism"],
               "\"paclet:ref/FindSubgraphIsomorphism\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"FindSubgraphIsomorphism\\\", \
\\\"[\\\", RowBox[{SubscriptBox[StyleBox[\\\"g\\\", \\\"TI\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"g\\\", \
\\\"TI\\\"], StyleBox[\\\"2\\\", \\\"TR\\\"]]}], \\\"]\\\"}]\\) finds a \
subgraph isomorphism that maps the graph \\!\\(\\*SubscriptBox[StyleBox[\\\"g\
\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \\\"TR\\\"]]\\) to a subgraph of \
\\!\\(\\*SubscriptBox[StyleBox[\\\"g\\\", \\\"TI\\\"], StyleBox[\\\"2\\\", \\\
\"TR\\\"]]\\) by renaming \
vertices.\\n\\!\\(\\*RowBox[{\\\"FindSubgraphIsomorphism\\\", \\\"[\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"g\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"g\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"n\\\", \
\\\"TI\\\"]}], \\\"]\\\"}]\\) finds at most \\!\\(\\*StyleBox[\\\"n\\\", \
\\\"TI\\\"]\\) subgraph isomorphisms.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"FindSubgraphIsomorphism\", \"[\", \
RowBox[{SubscriptBox[StyleBox[\"g\", \"TI\"], StyleBox[\"1\", \"TR\"]], \
\",\", SubscriptBox[StyleBox[\"g\", \"TI\"], StyleBox[\"2\", \"TR\"]]}], \
\"]\"}]\) finds a subgraph isomorphism that maps the graph \
\!\(\*SubscriptBox[StyleBox[\"g\", \"TI\"], StyleBox[\"1\", \"TR\"]]\) to a \
subgraph of \!\(\*SubscriptBox[StyleBox[\"g\", \"TI\"], StyleBox[\"2\", \
\"TR\"]]\) by renaming vertices.\n\!\(\*RowBox[{\"FindSubgraphIsomorphism\", \
\"[\", RowBox[{SubscriptBox[StyleBox[\"g\", \"TI\"], StyleBox[\"1\", \
\"TR\"]], \",\", SubscriptBox[StyleBox[\"g\", \"TI\"], StyleBox[\"2\", \
\"TR\"]], \",\", StyleBox[\"n\", \"TI\"]}], \"]\"}]\) finds at most \
\!\(\*StyleBox[\"n\", \"TI\"]\) subgraph isomorphisms.", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/FindSubgraphIsomorphism", "Web" -> 
        "http://reference.wolfram.com/language/ref/FindSubgraphIsomorphism.\
html"|>, "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, "Options" -> None, 
      "Attributes" -> {Protected, ReadProtected}, "FullName" -> 
      "System`FindSubgraphIsomorphism"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/IsomorphicGraphQ",
                ButtonNote->"paclet:ref/IsomorphicGraphQ"],
               "\"paclet:ref/IsomorphicGraphQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"IsomorphicGraphQ\\\", \
\\\"[\\\", RowBox[{SubscriptBox[StyleBox[\\\"g\\\", \\\"TI\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"g\\\", \
\\\"TI\\\"], StyleBox[\\\"2\\\", \\\"TR\\\"]]}], \\\"]\\\"}]\\) yields True \
if the graphs \\!\\(\\*SubscriptBox[StyleBox[\\\"g\\\", \\\"TI\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]]\\) and \
\\!\\(\\*SubscriptBox[StyleBox[\\\"g\\\", \\\"TI\\\"], StyleBox[\\\"2\\\", \\\
\"TR\\\"]]\\) are isomorphic, and False otherwise.\"\>", 
               "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", 
                    "paclet:ref/IsomorphicGraphQ", 
                    "paclet:ref/IsomorphicGraphQ", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/\
IsomorphicGraphQ.html"], None}, 
                    "http://reference.wolfram.com/language/ref/\
IsomorphicGraphQ.html", "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", 
                    RowBox[{"Protected", ",", "ReadProtected"}], "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`IsomorphicGraphQ\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/IsomorphicGraphQ",
                ButtonNote->"paclet:ref/IsomorphicGraphQ"],
               "\"paclet:ref/IsomorphicGraphQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"IsomorphicGraphQ\\\", \
\\\"[\\\", RowBox[{SubscriptBox[StyleBox[\\\"g\\\", \\\"TI\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"g\\\", \
\\\"TI\\\"], StyleBox[\\\"2\\\", \\\"TR\\\"]]}], \\\"]\\\"}]\\) yields True \
if the graphs \\!\\(\\*SubscriptBox[StyleBox[\\\"g\\\", \\\"TI\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]]\\) and \
\\!\\(\\*SubscriptBox[StyleBox[\\\"g\\\", \\\"TI\\\"], StyleBox[\\\"2\\\", \\\
\"TR\\\"]]\\) are isomorphic, and False otherwise.\"\>", 
               "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"IsomorphicGraphQ\", \"[\", \
RowBox[{SubscriptBox[StyleBox[\"g\", \"TI\"], StyleBox[\"1\", \"TR\"]], \
\",\", SubscriptBox[StyleBox[\"g\", \"TI\"], StyleBox[\"2\", \"TR\"]]}], \
\"]\"}]\) yields True if the graphs \!\(\*SubscriptBox[StyleBox[\"g\", \
\"TI\"], StyleBox[\"1\", \"TR\"]]\) and \!\(\*SubscriptBox[StyleBox[\"g\", \
\"TI\"], StyleBox[\"2\", \"TR\"]]\) are isomorphic, and False otherwise.", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/IsomorphicGraphQ", "Web" -> 
        "http://reference.wolfram.com/language/ref/IsomorphicGraphQ.html"|>, 
      "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, "Options" -> None, 
      "Attributes" -> {Protected, ReadProtected}, "FullName" -> 
      "System`IsomorphicGraphQ"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/IsomorphicSubgraphQ",
                ButtonNote->"paclet:ref/IsomorphicSubgraphQ"],
               "\"paclet:ref/IsomorphicSubgraphQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"IsomorphicSubgraphQ\\\", \
\\\"[\\\", RowBox[{SubscriptBox[StyleBox[\\\"g\\\", \\\"TI\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"g\\\", \
\\\"TI\\\"], StyleBox[\\\"2\\\", \\\"TR\\\"]]}], \\\"]\\\"}]\\) yields True \
if the graph \\!\\(\\*SubscriptBox[StyleBox[\\\"g\\\", \\\"TI\\\"], StyleBox[\
\\\"1\\\", \\\"TR\\\"]]\\) is isomorphic to a subgraph of the graph \
\\!\\(\\*SubscriptBox[StyleBox[\\\"g\\\", \\\"TI\\\"], StyleBox[\\\"2\\\", \\\
\"TR\\\"]]\\).\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", 
                    "paclet:ref/IsomorphicSubgraphQ", 
                    "paclet:ref/IsomorphicSubgraphQ", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/\
IsomorphicSubgraphQ.html"], None}, 
                    "http://reference.wolfram.com/language/ref/\
IsomorphicSubgraphQ.html", "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", 
                    RowBox[{"Protected", ",", "ReadProtected"}], "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`IsomorphicSubgraphQ\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/IsomorphicSubgraphQ",
                ButtonNote->"paclet:ref/IsomorphicSubgraphQ"],
               "\"paclet:ref/IsomorphicSubgraphQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"IsomorphicSubgraphQ\\\", \
\\\"[\\\", RowBox[{SubscriptBox[StyleBox[\\\"g\\\", \\\"TI\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"g\\\", \
\\\"TI\\\"], StyleBox[\\\"2\\\", \\\"TR\\\"]]}], \\\"]\\\"}]\\) yields True \
if the graph \\!\\(\\*SubscriptBox[StyleBox[\\\"g\\\", \\\"TI\\\"], StyleBox[\
\\\"1\\\", \\\"TR\\\"]]\\) is isomorphic to a subgraph of the graph \
\\!\\(\\*SubscriptBox[StyleBox[\\\"g\\\", \\\"TI\\\"], StyleBox[\\\"2\\\", \\\
\"TR\\\"]]\\).\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"IsomorphicSubgraphQ\", \"[\", \
RowBox[{SubscriptBox[StyleBox[\"g\", \"TI\"], StyleBox[\"1\", \"TR\"]], \
\",\", SubscriptBox[StyleBox[\"g\", \"TI\"], StyleBox[\"2\", \"TR\"]]}], \
\"]\"}]\) yields True if the graph \!\(\*SubscriptBox[StyleBox[\"g\", \
\"TI\"], StyleBox[\"1\", \"TR\"]]\) is isomorphic to a subgraph of the graph \
\!\(\*SubscriptBox[StyleBox[\"g\", \"TI\"], StyleBox[\"2\", \"TR\"]]\).", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/IsomorphicSubgraphQ", "Web" -> 
        "http://reference.wolfram.com/language/ref/IsomorphicSubgraphQ.html"|>\
, "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, "SubValues" -> 
      None, "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> 
      None, "Options" -> None, "Attributes" -> {Protected, ReadProtected}, 
      "FullName" -> "System`IsomorphicSubgraphQ"|>, True]]}], "}"}]], "Output",
 CellChangeTimes->{3.877274289505316*^9},
 CellLabel->"Out[9]=",ExpressionUUID->"1a8c2dc9-e46e-4dba-8237-f2e211f6d507"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Select", "[", 
   RowBox[{
    RowBox[{"IsomorphicGraphQ", "[", 
     RowBox[{
      RowBox[{"CompleteGraph", "[", "#", "]"}], ",", 
      RowBox[{"PathGraph", "[", 
       RowBox[{"Range", "[", "#", "]"}], "]"}]}], "]"}], "&"}], "]"}], "[", 
  RowBox[{"Range", "[", "10", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.877274303564019*^9, 3.877274320418649*^9}},
 CellLabel->"In[10]:=",ExpressionUUID->"42ce2d0c-9e75-4309-9e36-2a1a9de9cdf5"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "2"}], "}"}]], "Output",
 CellChangeTimes->{3.8772743207154894`*^9},
 CellLabel->"Out[10]=",ExpressionUUID->"53fa4aca-a6aa-47ec-9840-b50f5450581e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Select", "[", 
   RowBox[{
    RowBox[{"IsomorphicGraphQ", "[", 
     RowBox[{
      RowBox[{"CompleteGraph", "[", "#", "]"}], ",", 
      RowBox[{"CycleGraph", "[", "#", "]"}]}], "]"}], "&"}], "]"}], "[", 
  RowBox[{"Range", "[", "10", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.877274303564019*^9, 3.877274330891815*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"6252ebcd-9cc8-4c3e-a834-d1fc4d4f6881"],

Cell[BoxData[
 RowBox[{"{", "3", "}"}]], "Output",
 CellChangeTimes->{3.8772743311106453`*^9},
 CellLabel->"Out[11]=",ExpressionUUID->"eeaa6233-e9fa-4e19-be20-588d31a66dc4"]
}, Open  ]],

Cell["\<\
Donald Knuth lists 0 as an answer as well in addition to 3, but I don\
\[CloseCurlyQuote]t think the 0 graph exists or makes sense.\
\>", "Text",
 CellChangeTimes->{{3.877275807910864*^9, 
  3.8772758250092363`*^9}},ExpressionUUID->"e333f069-bd4f-468e-a05d-\
f5f4ffb5ddc9"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Exercise 43", "Section",
 CellChangeTimes->{{3.877275830845109*^9, 
  3.8772758351894455`*^9}},ExpressionUUID->"938282ed-1f4e-4651-ae92-\
d9e0412a1a09"],

Cell["\<\
Are any of the following graphs the same as the Petersen graph?\
\>", "Text",
 CellChangeTimes->{{3.8772758372509813`*^9, 
  3.877275844998804*^9}},ExpressionUUID->"820b0c65-ea86-4609-97e2-\
2dcd236a42f3"],

Cell["\<\
I have a hard copy edition of the Art of Computer Programming that I am using \
to answer this exercise.\
\>", "Text",
 CellChangeTimes->{{3.8772758488362427`*^9, 
  3.8772758662677903`*^9}},ExpressionUUID->"484a6962-18fa-415f-8235-\
48e8737599e9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GraphData", "[", "\"\<PetersenGraph\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.877274344995186*^9, 3.877274348026516*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"ae69387c-831a-493e-b651-bb03f11a6aaf"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10}, {Null, 
       SparseArray[
       Automatic, {10, 10}, 0, {
        1, {{0, 3, 6, 9, 12, 15, 18, 21, 24, 27, 30}, {{3}, {4}, {6}, {4}, {
          5}, {7}, {1}, {5}, {8}, {1}, {2}, {9}, {2}, {3}, {10}, {1}, {7}, {
          10}, {2}, {6}, {8}, {3}, {7}, {9}, {4}, {8}, {10}, {5}, {6}, {9}}}, 
         Pattern}]}, {
      VertexCoordinates -> {{0., 1.}, {-0.951, 0.309}, {-0.588, -0.809}, {
        0.588, -0.809}, {0.951, 0.309}, {0., 2.}, {-1.902, 
        0.618}, {-1.176, -1.618}, {1.176, -1.618}, {1.902, 0.618}}}]]}, 
    TagBox[
     GraphicsGroupBox[
      GraphicsComplexBox[{{0., 1.}, {-0.951, 0.309}, {-0.588, -0.809}, {
       0.588, -0.809}, {0.951, 0.309}, {0., 2.}, {-1.902, 
       0.618}, {-1.176, -1.618}, {1.176, -1.618}, {1.902, 0.618}}, {
        {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
         ArrowBox[{{1, 3}, {1, 4}, {1, 6}, {2, 4}, {2, 5}, {2, 7}, {3, 5}, {3,
           8}, {4, 9}, {5, 10}, {6, 7}, {6, 10}, {7, 8}, {8, 9}, {9, 10}}, 
          0.03574040219378426]}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         DiskBox[1, 0.03574040219378426], DiskBox[2, 0.03574040219378426], 
         DiskBox[3, 0.03574040219378426], DiskBox[4, 0.03574040219378426], 
         DiskBox[5, 0.03574040219378426], DiskBox[6, 0.03574040219378426], 
         DiskBox[7, 0.03574040219378426], DiskBox[8, 0.03574040219378426], 
         DiskBox[9, 0.03574040219378426], DiskBox[10, 0.03574040219378426]}}]],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->"NetworkGraphics",
  FormatType->TraditionalForm,
  FrameTicks->None]], "Output",
 CellChangeTimes->{3.877274373343834*^9},
 CellLabel->"Out[12]=",ExpressionUUID->"b8c4ae9e-920e-47eb-a8dd-8639ff565ada"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graph", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"1", "<->", "2"}], ",", 
    RowBox[{"2", "<->", "3"}], ",", 
    RowBox[{"3", "<->", "4"}], ",", 
    RowBox[{"4", "<->", "5"}], ",", 
    RowBox[{"5", "<->", "6"}], ",", 
    RowBox[{"6", "<->", "7"}], ",", 
    RowBox[{"7", "<->", "8"}], ",", 
    RowBox[{"8", "<->", "9"}], ",", 
    RowBox[{"1", "<->", "5"}], ",", 
    RowBox[{"9", "<->", "1"}], ",", 
    RowBox[{"2", "<->", "7"}], ",", 
    RowBox[{"3", "<->", "10"}], ",", 
    RowBox[{"9", "<->", "10"}], ",", 
    RowBox[{"6", "<->", "10"}], ",", 
    RowBox[{"4", "<->", "8"}]}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.8772746868569603`*^9, 3.8772748474773893`*^9}},
 CellLabel->"In[21]:=",ExpressionUUID->"0ba47069-28dd-4b7f-a0ea-9192e9c48baa"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10}, {
      Null, {{1, 2}, {2, 3}, {3, 4}, {4, 5}, {5, 6}, {6, 7}, {7, 8}, {8, 9}, {
       1, 5}, {9, 1}, {2, 7}, {3, 10}, {9, 10}, {6, 10}, {4, 8}}}]]}, 
    TagBox[
     GraphicsGroupBox[
      GraphicsComplexBox[{{0., 1.0714731189507671`}, {0.3706958880924952, 
       1.7141375644230792`}, {1.6082208551636819`, 1.71368843968694}, {
       1.9784489811569967`, 1.0704879817334916`}, {0.9894208183159837, 
       1.587319584799415}, {0.9901647331452087, 0.9297319681375992}, {
       0.42041274999437916`, 0.6004652212908816}, {1.360278663808465, 0.}, {
       0.6179234211635735, 0.0011966682806978657`}, {1.5586409833626957`, 
       0.5998675723414539}}, {
        {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
         ArrowBox[{{1, 2}, {1, 5}, {1, 9}, {2, 3}, {2, 7}, {3, 4}, {3, 10}, {
          4, 5}, {4, 8}, {5, 6}, {6, 7}, {6, 10}, {7, 8}, {8, 9}, {9, 10}}, 
          0.022436361377092706`]}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         DiskBox[1, 0.022436361377092706], DiskBox[2, 0.022436361377092706], 
         DiskBox[3, 0.022436361377092706], DiskBox[4, 0.022436361377092706], 
         DiskBox[5, 0.022436361377092706], DiskBox[6, 0.022436361377092706], 
         DiskBox[7, 0.022436361377092706], DiskBox[8, 0.022436361377092706], 
         DiskBox[9, 0.022436361377092706], 
         DiskBox[10, 0.022436361377092706]}}]],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->"NetworkGraphics",
  FormatType->TraditionalForm,
  FrameTicks->None]], "Output",
 CellChangeTimes->{{3.8772747411104736`*^9, 3.8772748478211737`*^9}},
 CellLabel->"Out[21]=",ExpressionUUID->"17a44d1b-43c2-4d87-a606-ef93daeb5d8c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"IsomorphicGraphQ", "[", 
  RowBox[{
   RowBox[{"Graph", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"1", "<->", "2"}], ",", 
      RowBox[{"2", "<->", "3"}], ",", 
      RowBox[{"3", "<->", "4"}], ",", 
      RowBox[{"4", "<->", "5"}], ",", 
      RowBox[{"5", "<->", "6"}], ",", 
      RowBox[{"6", "<->", "7"}], ",", 
      RowBox[{"7", "<->", "8"}], ",", 
      RowBox[{"8", "<->", "9"}], ",", 
      RowBox[{"1", "<->", "5"}], ",", 
      RowBox[{"9", "<->", "1"}], ",", 
      RowBox[{"2", "<->", "7"}], ",", 
      RowBox[{"3", "<->", "10"}], ",", 
      RowBox[{"9", "<->", "10"}], ",", 
      RowBox[{"6", "<->", "10"}], ",", 
      RowBox[{"4", "<->", "8"}]}], "}"}], "]"}], ",", 
   RowBox[{"GraphData", "[", "\"\<PetersenGraph\>\"", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.877274855622608*^9, 3.8772748624784994`*^9}},
 CellLabel->"In[23]:=",ExpressionUUID->"564178b2-11a3-477b-aa16-af52dbf8c1e7"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.8772748627441235`*^9},
 CellLabel->"Out[23]=",ExpressionUUID->"5d52baf7-fc6a-425e-8b7e-9a703c0055a1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindGraphIsomorphism", "[", 
  RowBox[{
   RowBox[{"Graph", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"1", "<->", "2"}], ",", 
      RowBox[{"2", "<->", "3"}], ",", 
      RowBox[{"3", "<->", "4"}], ",", 
      RowBox[{"4", "<->", "5"}], ",", 
      RowBox[{"5", "<->", "6"}], ",", 
      RowBox[{"6", "<->", "7"}], ",", 
      RowBox[{"7", "<->", "8"}], ",", 
      RowBox[{"8", "<->", "9"}], ",", 
      RowBox[{"1", "<->", "5"}], ",", 
      RowBox[{"9", "<->", "1"}], ",", 
      RowBox[{"2", "<->", "7"}], ",", 
      RowBox[{"3", "<->", "10"}], ",", 
      RowBox[{"9", "<->", "10"}], ",", 
      RowBox[{"6", "<->", "10"}], ",", 
      RowBox[{"4", "<->", "8"}]}], "}"}], "]"}], ",", 
   RowBox[{"GraphData", "[", "\"\<PetersenGraph\>\"", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8772743553576913`*^9, 3.8772743618783526`*^9}, {
  3.8772746710312505`*^9, 3.8772746725156255`*^9}, {3.8772749072379513`*^9, 
  3.8772749125815153`*^9}},
 CellLabel->"In[24]:=",ExpressionUUID->"8f2327e6-cc7b-4d2a-8bdd-f327feae0186"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\[LeftAssociation]", 
   RowBox[{
    RowBox[{"1", "\[Rule]", "1"}], ",", 
    RowBox[{"2", "\[Rule]", "4"}], ",", 
    RowBox[{"3", "\[Rule]", "2"}], ",", 
    RowBox[{"4", "\[Rule]", "5"}], ",", 
    RowBox[{"5", "\[Rule]", "3"}], ",", 
    RowBox[{"6", "\[Rule]", "8"}], ",", 
    RowBox[{"7", "\[Rule]", "9"}], ",", 
    RowBox[{"8", "\[Rule]", "10"}], ",", 
    RowBox[{"9", "\[Rule]", "6"}], ",", 
    RowBox[{"10", "\[Rule]", "7"}]}], "\[RightAssociation]"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.8772749128626776`*^9},
 CellLabel->"Out[24]=",ExpressionUUID->"474dc61a-a62b-4976-a34b-01345dde26ff"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GraphData", "[", 
  RowBox[{"\"\<PetersenGraph\>\"", ",", "\"\<Embeddings\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8772749180359607`*^9, 3.877274923864066*^9}},
 CellLabel->"In[26]:=",ExpressionUUID->"ba127e6f-8c6a-4047-b352-6a213255dd03"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0.`", ",", "1.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.951`"}], ",", "0.309`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.588`"}], ",", 
       RowBox[{"-", "0.809`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.588`", ",", 
       RowBox[{"-", "0.809`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.951`", ",", "0.309`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.`", ",", "2.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1.902`"}], ",", "0.618`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1.176`"}], ",", 
       RowBox[{"-", "1.618`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1.176`", ",", 
       RowBox[{"-", "1.618`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1.902`", ",", "0.618`"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0.323`", ",", "0.975`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.037`", ",", "0.789`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.037`", ",", "0.186`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.323`", ",", "0.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.5`", ",", "0.487`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1.287`", ",", "0.975`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1.`", ",", "0.789`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1.`", ",", "0.186`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1.287`", ",", "0.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1.464`", ",", "0.487`"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0.4483544303797468`", ",", 
       RowBox[{"-", "0.269957805907173`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.6048101265822785`", ",", 
       RowBox[{"-", "0.3389873417721519`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.5863291139240506`", ",", 
       RowBox[{"-", "0.5090295358649789`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.5863291139240506`", ",", 
       RowBox[{"-", "0.030911392405063295`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.8624472573839662`", ",", 
       RowBox[{"-", "0.5090295358649789`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.7243037974683544`", ",", 
       RowBox[{"-", "0.13198312236286922`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.7243037974683544`", ",", 
       RowBox[{"-", "0.269957805907173`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.8437974683544304`", ",", 
       RowBox[{"-", "0.3389873417721519`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.8624472573839662`", ",", 
       RowBox[{"-", "0.030911392405063295`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1.`", ",", 
       RowBox[{"-", "0.269957805907173`"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0.4483544303797468`", ",", 
       RowBox[{"-", "0.269957805907173`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.6064978902953587`", ",", 
       RowBox[{"-", "0.14565400843881857`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.529113924050633`", ",", 
       RowBox[{"-", "0.07479324894514768`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.529113924050633`", ",", 
       RowBox[{"-", "0.46514767932489454`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.8421097046413502`", ",", 
       RowBox[{"-", "0.14565400843881857`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1.`", ",", 
       RowBox[{"-", "0.269957805907173`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.919831223628692`", ",", 
       RowBox[{"-", "0.07479324894514768`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.7243037974683544`", ",", "0.006065822784810127`"}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"0.7243037974683544`", ",", 
       RowBox[{"-", "0.5459915611814347`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.919831223628692`", ",", 
       RowBox[{"-", "0.46514767932489454`"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0.454406779661017`", ",", 
       RowBox[{"-", "0.22296610169491526`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.6325423728813558`", ",", 
       RowBox[{"-", "0.5316101694915254`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.5492372881355932`", ",", 
       RowBox[{"-", "0.05873728813559322`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.4873728813559322`", ",", 
       RowBox[{"-", "0.4096610169491525`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.8221186440677966`", ",", 
       RowBox[{"-", "0.5316101694915254`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1.`", ",", 
       RowBox[{"-", "0.22296610169491526`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.9059322033898305`", ",", 
       RowBox[{"-", "0.05873728813559322`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.7273728813559321`", ",", "0.006091525423728813`"}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"0.7273728813559321`", ",", 
       RowBox[{"-", "0.2711016949152542`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.9677966101694915`", ",", 
       RowBox[{"-", "0.4096610169491525`"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0.6022515527950311`", ",", 
       RowBox[{"-", "0.5418478260869565`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.7347049689440993`", ",", 
       RowBox[{"-", "0.3123447204968944`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.6684782608695652`", ",", 
       RowBox[{"-", "0.6565993788819876`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.6684782608695652`", ",", 
       RowBox[{"-", "0.42709627329192545`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.8672360248447204`", ",", 
       RowBox[{"-", "0.3123447204968944`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.9999999999999999`", ",", 
       RowBox[{"-", "0.5418478260869565`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.9332298136645962`", ",", 
       RowBox[{"-", "0.6565993788819876`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.8012422360248447`", ",", 
       RowBox[{"-", "0.6565993788819876`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.8012422360248447`", ",", 
       RowBox[{"-", "0.5035714285714286`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.9332298136645962`", ",", 
       RowBox[{"-", "0.42709627329192545`"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "0"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"2", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"6", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"6", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"5", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"6", ",", "6"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "6"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "6"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "5"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       SqrtBox[
        FractionBox["2", 
         RowBox[{"5", "+", 
          SqrtBox["5"]}]]], ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        FractionBox["1", "2"], " ", 
        SqrtBox[
         RowBox[{"1", "-", 
          FractionBox["2", 
           SqrtBox["5"]]}]]}], ",", 
       FractionBox["1", "2"]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         FractionBox["1", "2"]}], " ", 
        SqrtBox[
         RowBox[{
          FractionBox["1", "10"], " ", 
          RowBox[{"(", 
           RowBox[{"5", "+", 
            SqrtBox["5"]}], ")"}]}]]}], ",", 
       RowBox[{
        FractionBox["1", "4"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          SqrtBox["5"]}], ")"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         FractionBox["1", "2"]}], " ", 
        SqrtBox[
         RowBox[{
          FractionBox["1", "10"], " ", 
          RowBox[{"(", 
           RowBox[{"5", "+", 
            SqrtBox["5"]}], ")"}]}]]}], ",", 
       RowBox[{
        FractionBox["1", "4"], " ", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          SqrtBox["5"]}], ")"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        FractionBox["1", "2"], " ", 
        SqrtBox[
         RowBox[{"1", "-", 
          FractionBox["2", 
           SqrtBox["5"]]}]]}], ",", 
       RowBox[{"-", 
        FractionBox["1", "2"]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", 
       SqrtBox[
        RowBox[{
         FractionBox["1", "10"], " ", 
         RowBox[{"(", 
          RowBox[{"5", "+", 
           SqrtBox["5"]}], ")"}]}]]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        FractionBox["1", "4"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "-", 
          SqrtBox["5"]}], ")"}]}], ",", 
       RowBox[{
        FractionBox["1", "2"], " ", 
        SqrtBox[
         RowBox[{
          FractionBox["1", "10"], " ", 
          RowBox[{"(", 
           RowBox[{"5", "-", 
            SqrtBox["5"]}], ")"}]}]]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "2"]}], ",", 
       RowBox[{
        RowBox[{"-", 
         FractionBox["1", "2"]}], " ", 
        SqrtBox[
         RowBox[{"1", "+", 
          FractionBox["2", 
           SqrtBox["5"]]}]]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["1", "2"], ",", 
       RowBox[{
        RowBox[{"-", 
         FractionBox["1", "2"]}], " ", 
        SqrtBox[
         RowBox[{"1", "+", 
          FractionBox["2", 
           SqrtBox["5"]]}]]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        FractionBox["1", "4"], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          SqrtBox["5"]}], ")"}]}], ",", 
       RowBox[{
        FractionBox["1", "2"], " ", 
        SqrtBox[
         RowBox[{
          FractionBox["1", "10"], " ", 
          RowBox[{"(", 
           RowBox[{"5", "-", 
            SqrtBox["5"]}], ")"}]}]]}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0.5353024564670038`", ",", "0.9588896176713285`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.3281636798341197`", ",", "0.6772739775299917`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.5353024564670038`", ",", "0.4701352008971077`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.07060491293400757`", ",", "0.6212047479000488`"}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"0.3281636798341197`", ",", "0.2629964242642236`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1.`", ",", "0.6212047479000488`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.7424412330998879`", ",", "0.6772739775299917`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.7424412330998879`", ",", "0.2629964242642236`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.24791181420490352`", ",", "0.07459649632074725`"}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"0.8226930987291041`", ",", "0.07459649632074725`"}], "}"}]}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       SqrtBox[
        RowBox[{
         FractionBox["5", "8"], "-", 
         FractionBox[
          SqrtBox["5"], "8"]}]], ",", 
       RowBox[{
        FractionBox["1", "4"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "-", 
          SqrtBox["5"]}], ")"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       SqrtBox[
        RowBox[{
         FractionBox["1", "2"], " ", 
         RowBox[{"(", 
          RowBox[{"5", "-", 
           SqrtBox["5"]}], ")"}]}]], ",", 
       RowBox[{
        FractionBox["1", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "-", 
          SqrtBox["5"]}], ")"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       SqrtBox[
        RowBox[{
         FractionBox["5", "8"], "+", 
         FractionBox[
          SqrtBox["5"], "8"]}]], ",", 
       RowBox[{
        FractionBox["1", "4"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          SqrtBox["5"]}], ")"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         FractionBox["1", "2"]}], " ", 
        SqrtBox[
         RowBox[{
          FractionBox["1", "2"], " ", 
          RowBox[{"(", 
           RowBox[{"5", "-", 
            SqrtBox["5"]}], ")"}]}]]}], ",", 
       RowBox[{
        FractionBox["1", "4"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "-", 
          SqrtBox["5"]}], ")"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         FractionBox["1", "2"]}], " ", 
        SqrtBox[
         RowBox[{
          FractionBox["1", "2"], " ", 
          RowBox[{"(", 
           RowBox[{"5", "+", 
            SqrtBox["5"]}], ")"}]}]]}], ",", 
       RowBox[{
        FractionBox["1", "4"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          SqrtBox["5"]}], ")"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", 
        SqrtBox[
         RowBox[{
          FractionBox["1", "2"], " ", 
          RowBox[{"(", 
           RowBox[{"5", "+", 
            SqrtBox["5"]}], ")"}]}]]}], ",", 
       RowBox[{
        FractionBox["1", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          SqrtBox["5"]}], ")"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       SqrtBox[
        RowBox[{
         FractionBox["1", "2"], " ", 
         RowBox[{"(", 
          RowBox[{"5", "+", 
           SqrtBox["5"]}], ")"}]}]], ",", 
       RowBox[{
        FractionBox["1", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          SqrtBox["5"]}], ")"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", 
        SqrtBox[
         RowBox[{
          FractionBox["1", "2"], " ", 
          RowBox[{"(", 
           RowBox[{"5", "-", 
            SqrtBox["5"]}], ")"}]}]]}], ",", 
       RowBox[{
        FractionBox["1", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "-", 
          SqrtBox["5"]}], ")"}]}]}], "}"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.8772750462400465`*^9},
 CellLabel->"Out[26]=",ExpressionUUID->"3ae698b1-8bc4-4448-9258-1a6936d2a340"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "[", 
  RowBox[{"GraphData", "[", 
   RowBox[{"\"\<PetersenGraph\>\"", ",", "\"\<Embeddings\>\""}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8772750471590967`*^9, 3.8772750481746364`*^9}},
 CellLabel->"In[27]:=",ExpressionUUID->"c90720f0-425c-4ca6-a6ab-c08c27da366a"],

Cell[BoxData["11"], "Output",
 CellChangeTimes->{3.8772750484246435`*^9},
 CellLabel->"Out[27]=",ExpressionUUID->"7c10de78-8e13-481e-9928-258ca71eae9d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Graph", "[", 
    RowBox[{
     RowBox[{"GraphData", "[", "\"\<PetersenGraph\>\"", "]"}], ",", 
     RowBox[{"VertexCoordinates", "->", "#"}]}], "]"}], "&"}], "/@", 
  RowBox[{"GraphData", "[", 
   RowBox[{"\"\<PetersenGraph\>\"", ",", "\"\<Embeddings\>\""}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.8772750522216015`*^9, 3.877275082832396*^9}},
 CellLabel->"In[28]:=",ExpressionUUID->"7670efde-f0cf-4dee-b663-78a320dbfa58"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10}, {Null, 
         SparseArray[
         Automatic, {10, 10}, 0, {
          1, {{0, 3, 6, 9, 12, 15, 18, 21, 24, 27, 30}, {{3}, {4}, {6}, {4}, {
            5}, {7}, {1}, {5}, {8}, {1}, {2}, {9}, {2}, {3}, {10}, {1}, {7}, {
            10}, {2}, {6}, {8}, {3}, {7}, {9}, {4}, {8}, {10}, {5}, {6}, {
            9}}}, Pattern}]}, {
        GraphLayout -> {"Dimension" -> 2}, 
         VertexCoordinates -> {{0., 1.}, {-0.951, 0.309}, {-0.588, -0.809}, {
          0.588, -0.809}, {0.951, 0.309}, {0., 2.}, {-1.902, 
          0.618}, {-1.176, -1.618}, {1.176, -1.618}, {1.902, 0.618}}}]]}, 
      TagBox[
       GraphicsGroupBox[
        GraphicsComplexBox[{{0., 1.}, {-0.951, 0.309}, {-0.588, -0.809}, {
         0.588, -0.809}, {0.951, 0.309}, {0., 2.}, {-1.902, 
         0.618}, {-1.176, -1.618}, {1.176, -1.618}, {1.902, 0.618}}, {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
           ArrowBox[{{1, 3}, {1, 4}, {1, 6}, {2, 4}, {2, 5}, {2, 7}, {3, 5}, {
            3, 8}, {4, 9}, {5, 10}, {6, 7}, {6, 10}, {7, 8}, {8, 9}, {9, 10}},
             0.03574040219378426]}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           DiskBox[1, 0.03574040219378426], DiskBox[2, 0.03574040219378426], 
           DiskBox[3, 0.03574040219378426], DiskBox[4, 0.03574040219378426], 
           DiskBox[5, 0.03574040219378426], DiskBox[6, 0.03574040219378426], 
           DiskBox[7, 0.03574040219378426], DiskBox[8, 0.03574040219378426], 
           DiskBox[9, 0.03574040219378426], 
           DiskBox[10, 0.03574040219378426]}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->"NetworkGraphics",
    FormatType->TraditionalForm,
    FrameTicks->None], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10}, {Null, 
         SparseArray[
         Automatic, {10, 10}, 0, {
          1, {{0, 3, 6, 9, 12, 15, 18, 21, 24, 27, 30}, {{3}, {4}, {6}, {4}, {
            5}, {7}, {1}, {5}, {8}, {1}, {2}, {9}, {2}, {3}, {10}, {1}, {7}, {
            10}, {2}, {6}, {8}, {3}, {7}, {9}, {4}, {8}, {10}, {5}, {6}, {
            9}}}, Pattern}]}, {
        GraphLayout -> {"Dimension" -> 2}, 
         VertexCoordinates -> {{0.323, 0.975}, {0.037, 0.789}, {0.037, 
          0.186}, {0.323, 0.}, {0.5, 0.487}, {1.287, 0.975}, {1., 0.789}, {1.,
           0.186}, {1.287, 0.}, {1.464, 0.487}}}]]}, 
      TagBox[
       GraphicsGroupBox[
        GraphicsComplexBox[{{0.323, 0.975}, {0.037, 0.789}, {0.037, 0.186}, {
         0.323, 0.}, {0.5, 0.487}, {1.287, 0.975}, {1., 0.789}, {1., 0.186}, {
         1.287, 0.}, {1.464, 0.487}}, {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
           ArrowBox[{{1, 3}, {1, 4}, {1, 6}, {2, 4}, {2, 5}, {2, 7}, {3, 5}, {
            3, 8}, {4, 9}, {5, 10}, {6, 7}, {6, 10}, {7, 8}, {8, 9}, {9, 10}},
             0.017786077874000106`]}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           DiskBox[1, 0.017786077874000106], DiskBox[2, 0.017786077874000106],
            DiskBox[3, 0.017786077874000106], 
           DiskBox[4, 0.017786077874000106], DiskBox[5, 0.017786077874000106],
            DiskBox[6, 0.017786077874000106], 
           DiskBox[7, 0.017786077874000106], DiskBox[8, 0.017786077874000106],
            DiskBox[9, 0.017786077874000106], 
           DiskBox[10, 0.017786077874000106]}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->"NetworkGraphics",
    FormatType->TraditionalForm,
    FrameTicks->None], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10}, {Null, 
         SparseArray[
         Automatic, {10, 10}, 0, {
          1, {{0, 3, 6, 9, 12, 15, 18, 21, 24, 27, 30}, {{3}, {4}, {6}, {4}, {
            5}, {7}, {1}, {5}, {8}, {1}, {2}, {9}, {2}, {3}, {10}, {1}, {7}, {
            10}, {2}, {6}, {8}, {3}, {7}, {9}, {4}, {8}, {10}, {5}, {6}, {
            9}}}, Pattern}]}, {
        GraphLayout -> {"Dimension" -> 2}, 
         VertexCoordinates -> {{0.4483544303797468, -0.269957805907173}, {
          0.6048101265822785, -0.3389873417721519}, {
          0.5863291139240506, -0.5090295358649789}, {
          0.5863291139240506, -0.030911392405063295`}, {
          0.8624472573839662, -0.5090295358649789}, {
          0.7243037974683544, -0.13198312236286922`}, {
          0.7243037974683544, -0.269957805907173}, {
          0.8437974683544304, -0.3389873417721519}, {
          0.8624472573839662, -0.030911392405063295`}, {
          1., -0.269957805907173}}}]]}, 
      TagBox[
       GraphicsGroupBox[
        GraphicsComplexBox[{{0.4483544303797468, -0.269957805907173}, {
         0.6048101265822785, -0.3389873417721519}, {
         0.5863291139240506, -0.5090295358649789}, {
         0.5863291139240506, -0.030911392405063295`}, {
         0.8624472573839662, -0.5090295358649789}, {
         0.7243037974683544, -0.13198312236286922`}, {
         0.7243037974683544, -0.269957805907173}, {
         0.8437974683544304, -0.3389873417721519}, {
         0.8624472573839662, -0.030911392405063295`}, {
         1., -0.269957805907173}}, {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
           ArrowBox[{{1, 3}, {1, 4}, {1, 6}, {2, 4}, {2, 5}, {2, 7}, {3, 5}, {
            3, 8}, {4, 9}, {5, 10}, {6, 7}, {6, 10}, {7, 8}, {8, 9}, {9, 10}},
             0.007022448101265823]}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           DiskBox[1, 0.007022448101265823], DiskBox[2, 0.007022448101265823],
            DiskBox[3, 0.007022448101265823], 
           DiskBox[4, 0.007022448101265823], DiskBox[5, 0.007022448101265823],
            DiskBox[6, 0.007022448101265823], 
           DiskBox[7, 0.007022448101265823], DiskBox[8, 0.007022448101265823],
            DiskBox[9, 0.007022448101265823], 
           DiskBox[10, 0.007022448101265823]}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->"NetworkGraphics",
    FormatType->TraditionalForm,
    FrameTicks->None], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10}, {Null, 
         SparseArray[
         Automatic, {10, 10}, 0, {
          1, {{0, 3, 6, 9, 12, 15, 18, 21, 24, 27, 30}, {{3}, {4}, {6}, {4}, {
            5}, {7}, {1}, {5}, {8}, {1}, {2}, {9}, {2}, {3}, {10}, {1}, {7}, {
            10}, {2}, {6}, {8}, {3}, {7}, {9}, {4}, {8}, {10}, {5}, {6}, {
            9}}}, Pattern}]}, {
        GraphLayout -> {"Dimension" -> 2}, 
         VertexCoordinates -> {{0.4483544303797468, -0.269957805907173}, {
          0.6064978902953587, -0.14565400843881857`}, {
          0.529113924050633, -0.07479324894514768}, {
          0.529113924050633, -0.46514767932489454`}, {
          0.8421097046413502, -0.14565400843881857`}, {
          1., -0.269957805907173}, {
          0.919831223628692, -0.07479324894514768}, {0.7243037974683544, 
          0.006065822784810127}, {0.7243037974683544, -0.5459915611814347}, {
          0.919831223628692, -0.46514767932489454`}}}]]}, 
      TagBox[
       GraphicsGroupBox[
        GraphicsComplexBox[{{0.4483544303797468, -0.269957805907173}, {
         0.6064978902953587, -0.14565400843881857`}, {
         0.529113924050633, -0.07479324894514768}, {
         0.529113924050633, -0.46514767932489454`}, {
         0.8421097046413502, -0.14565400843881857`}, {
         1., -0.269957805907173}, {0.919831223628692, -0.07479324894514768}, {
         0.7243037974683544, 0.006065822784810127}, {
         0.7243037974683544, -0.5459915611814347}, {
         0.919831223628692, -0.46514767932489454`}}, {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
           ArrowBox[{{1, 3}, {1, 4}, {1, 6}, {2, 4}, {2, 5}, {2, 7}, {3, 5}, {
            3, 8}, {4, 9}, {5, 10}, {6, 7}, {6, 10}, {7, 8}, {8, 9}, {9, 10}},
             0.007027690497890296]}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           DiskBox[1, 0.007027690497890296], DiskBox[2, 0.007027690497890296],
            DiskBox[3, 0.007027690497890296], 
           DiskBox[4, 0.007027690497890296], DiskBox[5, 0.007027690497890296],
            DiskBox[6, 0.007027690497890296], 
           DiskBox[7, 0.007027690497890296], DiskBox[8, 0.007027690497890296],
            DiskBox[9, 0.007027690497890296], 
           DiskBox[10, 0.007027690497890296]}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->"NetworkGraphics",
    FormatType->TraditionalForm,
    FrameTicks->None], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10}, {Null, 
         SparseArray[
         Automatic, {10, 10}, 0, {
          1, {{0, 3, 6, 9, 12, 15, 18, 21, 24, 27, 30}, {{3}, {4}, {6}, {4}, {
            5}, {7}, {1}, {5}, {8}, {1}, {2}, {9}, {2}, {3}, {10}, {1}, {7}, {
            10}, {2}, {6}, {8}, {3}, {7}, {9}, {4}, {8}, {10}, {5}, {6}, {
            9}}}, Pattern}]}, {
        GraphLayout -> {"Dimension" -> 2}, 
         VertexCoordinates -> {{0.454406779661017, -0.22296610169491526`}, {
          0.6325423728813558, -0.5316101694915254}, {
          0.5492372881355932, -0.05873728813559322}, {
          0.4873728813559322, -0.4096610169491525}, {
          0.8221186440677966, -0.5316101694915254}, {
          1., -0.22296610169491526`}, {
          0.9059322033898305, -0.05873728813559322}, {0.7273728813559321, 
          0.006091525423728813}, {0.7273728813559321, -0.2711016949152542}, {
          0.9677966101694915, -0.4096610169491525}}}]]}, 
      TagBox[
       GraphicsGroupBox[
        GraphicsComplexBox[{{0.454406779661017, -0.22296610169491526`}, {
         0.6325423728813558, -0.5316101694915254}, {
         0.5492372881355932, -0.05873728813559322}, {
         0.4873728813559322, -0.4096610169491525}, {
         0.8221186440677966, -0.5316101694915254}, {
         1., -0.22296610169491526`}, {
         0.9059322033898305, -0.05873728813559322}, {0.7273728813559321, 
         0.006091525423728813}, {0.7273728813559321, -0.2711016949152542}, {
         0.9677966101694915, -0.4096610169491525}}, {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
           ArrowBox[{{1, 3}, {1, 4}, {1, 6}, {2, 4}, {2, 5}, {2, 7}, {3, 5}, {
            3, 8}, {4, 9}, {5, 10}, {6, 7}, {6, 10}, {7, 8}, {8, 9}, {9, 10}},
             0.006945401694915254]}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           DiskBox[1, 0.006945401694915254], DiskBox[2, 0.006945401694915254],
            DiskBox[3, 0.006945401694915254], 
           DiskBox[4, 0.006945401694915254], DiskBox[5, 0.006945401694915254],
            DiskBox[6, 0.006945401694915254], 
           DiskBox[7, 0.006945401694915254], DiskBox[8, 0.006945401694915254],
            DiskBox[9, 0.006945401694915254], 
           DiskBox[10, 0.006945401694915254]}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->"NetworkGraphics",
    FormatType->TraditionalForm,
    FrameTicks->None], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10}, {Null, 
         SparseArray[
         Automatic, {10, 10}, 0, {
          1, {{0, 3, 6, 9, 12, 15, 18, 21, 24, 27, 30}, {{3}, {4}, {6}, {4}, {
            5}, {7}, {1}, {5}, {8}, {1}, {2}, {9}, {2}, {3}, {10}, {1}, {7}, {
            10}, {2}, {6}, {8}, {3}, {7}, {9}, {4}, {8}, {10}, {5}, {6}, {
            9}}}, Pattern}]}, {
        GraphLayout -> {"Dimension" -> 2}, 
         VertexCoordinates -> {{0.6022515527950311, -0.5418478260869565}, {
          0.7347049689440993, -0.3123447204968944}, {
          0.6684782608695652, -0.6565993788819876}, {
          0.6684782608695652, -0.42709627329192545`}, {
          0.8672360248447204, -0.3123447204968944}, {
          0.9999999999999999, -0.5418478260869565}, {
          0.9332298136645962, -0.6565993788819876}, {
          0.8012422360248447, -0.6565993788819876}, {
          0.8012422360248447, -0.5035714285714286}, {
          0.9332298136645962, -0.42709627329192545`}}}]]}, 
      TagBox[
       GraphicsGroupBox[
        GraphicsComplexBox[{{0.6022515527950311, -0.5418478260869565}, {
         0.7347049689440993, -0.3123447204968944}, {
         0.6684782608695652, -0.6565993788819876}, {
         0.6684782608695652, -0.42709627329192545`}, {
         0.8672360248447204, -0.3123447204968944}, {
         0.9999999999999999, -0.5418478260869565}, {
         0.9332298136645962, -0.6565993788819876}, {
         0.8012422360248447, -0.6565993788819876}, {
         0.8012422360248447, -0.5035714285714286}, {
         0.9332298136645962, -0.42709627329192545`}}, {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
           ArrowBox[{{1, 3}, {1, 4}, {1, 6}, {2, 4}, {2, 5}, {2, 7}, {3, 5}, {
            3, 8}, {4, 9}, {5, 10}, {6, 7}, {6, 10}, {7, 8}, {8, 9}, {9, 10}},
             0.005063337732919253]}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           DiskBox[1, 0.005063337732919253], DiskBox[2, 0.005063337732919253],
            DiskBox[3, 0.005063337732919253], 
           DiskBox[4, 0.005063337732919253], DiskBox[5, 0.005063337732919253],
            DiskBox[6, 0.005063337732919253], 
           DiskBox[7, 0.005063337732919253], DiskBox[8, 0.005063337732919253],
            DiskBox[9, 0.005063337732919253], 
           DiskBox[10, 0.005063337732919253]}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->"NetworkGraphics",
    FormatType->TraditionalForm,
    FrameTicks->None], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10}, {Null, 
         SparseArray[
         Automatic, {10, 10}, 0, {
          1, {{0, 3, 6, 9, 12, 15, 18, 21, 24, 27, 30}, {{3}, {4}, {6}, {4}, {
            5}, {7}, {1}, {5}, {8}, {1}, {2}, {9}, {2}, {3}, {10}, {1}, {7}, {
            10}, {2}, {6}, {8}, {3}, {7}, {9}, {4}, {8}, {10}, {5}, {6}, {
            9}}}, Pattern}]}, {
        GraphLayout -> {"Dimension" -> 2}, 
         VertexCoordinates -> {{0, 0}, {1, 3}, {0, 4}, {1, 1}, {4, 4}, {2, 
          0}, {2, 2}, {3, 3}, {3, 1}, {4, 0}}}]]}, 
      TagBox[
       GraphicsGroupBox[
        GraphicsComplexBox[{{0., 0.}, {1., 3.}, {0., 4.}, {1., 1.}, {4., 
         4.}, {2., 0.}, {2., 2.}, {3., 3.}, {3., 1.}, {4., 0.}}, {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
           ArrowBox[{{1, 3}, {1, 4}, {1, 6}, {2, 4}, {2, 5}, {2, 7}, {3, 5}, {
            3, 8}, {4, 9}, {5, 10}, {6, 7}, {6, 10}, {7, 8}, {8, 9}, {9, 10}},
             0.03700564971751412]}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           DiskBox[1, 0.03700564971751412], DiskBox[2, 0.03700564971751412], 
           DiskBox[3, 0.03700564971751412], DiskBox[4, 0.03700564971751412], 
           DiskBox[5, 0.03700564971751412], DiskBox[6, 0.03700564971751412], 
           DiskBox[7, 0.03700564971751412], DiskBox[8, 0.03700564971751412], 
           DiskBox[9, 0.03700564971751412], 
           DiskBox[10, 0.03700564971751412]}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->"NetworkGraphics",
    FormatType->TraditionalForm,
    FrameTicks->None], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10}, {Null, 
         SparseArray[
         Automatic, {10, 10}, 0, {
          1, {{0, 3, 6, 9, 12, 15, 18, 21, 24, 27, 30}, {{3}, {4}, {6}, {4}, {
            5}, {7}, {1}, {5}, {8}, {1}, {2}, {9}, {2}, {3}, {10}, {1}, {7}, {
            10}, {2}, {6}, {8}, {3}, {7}, {9}, {4}, {8}, {10}, {5}, {6}, {
            9}}}, Pattern}]}, {
        GraphLayout -> {"Dimension" -> 2}, 
         VertexCoordinates -> {{2, 2}, {6, 4}, {4, 2}, {2, 4}, {6, 2}, {5, 
          5}, {6, 6}, {4, 6}, {2, 6}, {3, 5}}}]]}, 
      TagBox[
       GraphicsGroupBox[
        GraphicsComplexBox[{{2., 2.}, {6., 4.}, {4., 2.}, {2., 4.}, {6., 
         2.}, {5., 5.}, {6., 6.}, {4., 6.}, {2., 6.}, {3., 5.}}, {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
           ArrowBox[{{1, 3}, {1, 4}, {1, 6}, {2, 4}, {2, 5}, {2, 7}, {3, 5}, {
            3, 8}, {4, 9}, {5, 10}, {6, 7}, {6, 10}, {7, 8}, {8, 9}, {9, 10}},
             0.03700564971751412]}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           DiskBox[1, 0.03700564971751412], DiskBox[2, 0.03700564971751412], 
           DiskBox[3, 0.03700564971751412], DiskBox[4, 0.03700564971751412], 
           DiskBox[5, 0.03700564971751412], DiskBox[6, 0.03700564971751412], 
           DiskBox[7, 0.03700564971751412], DiskBox[8, 0.03700564971751412], 
           DiskBox[9, 0.03700564971751412], 
           DiskBox[10, 0.03700564971751412]}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->"NetworkGraphics",
    FormatType->TraditionalForm,
    FrameTicks->None], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10}, {Null, 
         SparseArray[
         Automatic, {10, 10}, 0, {
          1, {{0, 3, 6, 9, 12, 15, 18, 21, 24, 27, 30}, {{3}, {4}, {6}, {4}, {
            5}, {7}, {1}, {5}, {8}, {1}, {2}, {9}, {2}, {3}, {10}, {1}, {7}, {
            10}, {2}, {6}, {8}, {3}, {7}, {9}, {4}, {8}, {10}, {5}, {6}, {
            9}}}, Pattern}]}, {
        GraphLayout -> {"Dimension" -> 2}, 
         VertexCoordinates -> {{(2/(5 + 5^Rational[1, 2]))^Rational[1, 2], 
            0}, {Rational[1, 2] (1 - 2 5^Rational[-1, 2])^Rational[1, 2], 
            Rational[1, 2]}, {
           Rational[-1, 2] (Rational[1, 10] (5 + 5^Rational[1, 2]))^
             Rational[1, 2], Rational[1, 4] (-1 + 5^Rational[1, 2])}, {
           Rational[-1, 2] (Rational[1, 10] (5 + 5^Rational[1, 2]))^
             Rational[1, 2], Rational[1, 4] (1 - 5^Rational[1, 2])}, {
           Rational[1, 2] (1 - 2 5^Rational[-1, 2])^Rational[1, 2], 
            Rational[-1, 2]}, {
           0, (Rational[1, 10] (5 + 5^Rational[1, 2]))^Rational[1, 2]}, {
           Rational[1, 4] (-1 - 5^Rational[1, 2]), 
            Rational[1, 2] (Rational[1, 10] (5 - 5^Rational[1, 2]))^
             Rational[1, 2]}, {
            Rational[-1, 2], 
            Rational[-1, 2] (1 + 2 5^Rational[-1, 2])^Rational[1, 2]}, {
            Rational[1, 2], 
            Rational[-1, 2] (1 + 2 5^Rational[-1, 2])^Rational[1, 2]}, {
           Rational[1, 4] (1 + 5^Rational[1, 2]), 
            Rational[1, 2] (Rational[1, 10] (5 - 5^Rational[1, 2]))^
             Rational[1, 2]}}}]]}, 
      TagBox[
       GraphicsGroupBox[
        GraphicsComplexBox[{{0.5257311121191336, 0.}, {0.16245984811645317`, 
         0.5}, {-0.42532540417602, 
         0.30901699437494745`}, {-0.42532540417602, -0.30901699437494745`}, {
         0.16245984811645317`, -0.5}, {0., 
         0.85065080835204}, {-0.8090169943749475, 
         0.2628655560595668}, {-0.5, -0.6881909602355868}, {
         0.5, -0.6881909602355868}, {0.8090169943749475, 
         0.2628655560595668}}, {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
           ArrowBox[{{1, 3}, {1, 4}, {1, 6}, {2, 4}, {2, 5}, {2, 7}, {3, 5}, {
            3, 8}, {4, 9}, {5, 10}, {6, 7}, {6, 10}, {7, 8}, {8, 9}, {9, 10}},
             0.019434941751084317`]}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           DiskBox[1, 0.019434941751084317], DiskBox[2, 0.019434941751084317],
            DiskBox[3, 0.019434941751084317], 
           DiskBox[4, 0.019434941751084317], DiskBox[5, 0.019434941751084317],
            DiskBox[6, 0.019434941751084317], 
           DiskBox[7, 0.019434941751084317], DiskBox[8, 0.019434941751084317],
            DiskBox[9, 0.019434941751084317], 
           DiskBox[10, 0.019434941751084317]}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->"NetworkGraphics",
    FormatType->TraditionalForm,
    FrameTicks->None], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10}, {Null, 
         SparseArray[
         Automatic, {10, 10}, 0, {
          1, {{0, 3, 6, 9, 12, 15, 18, 21, 24, 27, 30}, {{3}, {4}, {6}, {4}, {
            5}, {7}, {1}, {5}, {8}, {1}, {2}, {9}, {2}, {3}, {10}, {1}, {7}, {
            10}, {2}, {6}, {8}, {3}, {7}, {9}, {4}, {8}, {10}, {5}, {6}, {
            9}}}, Pattern}]}, {
        GraphLayout -> {"Dimension" -> 2}, 
         VertexCoordinates -> {{0.5353024564670038, 0.9588896176713285}, {
          0.3281636798341197, 0.6772739775299917}, {0.5353024564670038, 
          0.4701352008971077}, {0.07060491293400757, 0.6212047479000488}, {
          0.3281636798341197, 0.2629964242642236}, {1., 0.6212047479000488}, {
          0.7424412330998879, 0.6772739775299917}, {0.7424412330998879, 
          0.2629964242642236}, {0.24791181420490352`, 0.07459649632074725}, {
          0.8226930987291041, 0.07459649632074725}}}]]}, 
      TagBox[
       GraphicsGroupBox[
        GraphicsComplexBox[{{0.5353024564670038, 0.9588896176713285}, {
         0.3281636798341197, 0.6772739775299917}, {0.5353024564670038, 
         0.4701352008971077}, {0.07060491293400757, 0.6212047479000488}, {
         0.3281636798341197, 0.2629964242642236}, {1., 0.6212047479000488}, {
         0.7424412330998879, 0.6772739775299917}, {0.7424412330998879, 
         0.2629964242642236}, {0.24791181420490352`, 0.07459649632074725}, {
         0.8226930987291041, 0.07459649632074725}}, {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
           ArrowBox[{{1, 3}, {1, 4}, {1, 6}, {2, 4}, {2, 5}, {2, 7}, {3, 5}, {
            3, 8}, {4, 9}, {5, 10}, {6, 7}, {6, 10}, {7, 8}, {8, 9}, {9, 10}},
             0.011831199458350082`]}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           DiskBox[1, 0.011831199458350082], DiskBox[2, 0.011831199458350082],
            DiskBox[3, 0.011831199458350082], 
           DiskBox[4, 0.011831199458350082], DiskBox[5, 0.011831199458350082],
            DiskBox[6, 0.011831199458350082], 
           DiskBox[7, 0.011831199458350082], DiskBox[8, 0.011831199458350082],
            DiskBox[9, 0.011831199458350082], 
           DiskBox[10, 0.011831199458350082]}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->"NetworkGraphics",
    FormatType->TraditionalForm,
    FrameTicks->None], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10}, {Null, 
         SparseArray[
         Automatic, {10, 10}, 0, {
          1, {{0, 3, 6, 9, 12, 15, 18, 21, 24, 27, 30}, {{3}, {4}, {6}, {4}, {
            5}, {7}, {1}, {5}, {8}, {1}, {2}, {9}, {2}, {3}, {10}, {1}, {7}, {
            10}, {2}, {6}, {8}, {3}, {7}, {9}, {4}, {8}, {10}, {5}, {6}, {
            9}}}, Pattern}]}, {
        GraphLayout -> {"Dimension" -> 2}, 
         VertexCoordinates -> {{(Rational[5, 8] + 
             Rational[-1, 8] 5^Rational[1, 2])^Rational[1, 2], 
            Rational[1, 4] (-1 - 5^Rational[1, 2])}, {0, 
           1}, {(Rational[1, 2] (5 - 5^Rational[1, 2]))^Rational[1, 2], 
            Rational[1, 2] (-1 - 5^Rational[1, 2])}, {(Rational[5, 8] + 
             Rational[1, 8] 5^Rational[1, 2])^Rational[1, 2], 
            Rational[1, 4] (-1 + 5^Rational[1, 2])}, {0, 2}, {
           Rational[-1, 2] (Rational[1, 2] (5 - 5^Rational[1, 2]))^
             Rational[1, 2], Rational[1, 4] (-1 - 5^Rational[1, 2])}, {
           Rational[-1, 2] (Rational[1, 2] (5 + 5^Rational[1, 2]))^
             Rational[1, 2], 
            Rational[1, 4] (-1 + 
             5^Rational[1, 2])}, {-(Rational[1, 2] (5 + 5^Rational[1, 2]))^
             Rational[1, 2], 
            Rational[1, 2] (-1 + 5^Rational[1, 2])}, {(
             Rational[1, 2] (5 + 5^Rational[1, 2]))^Rational[1, 2], 
            Rational[1, 2] (-1 + 
             5^Rational[1, 2])}, {-(Rational[1, 2] (5 - 5^Rational[1, 2]))^
             Rational[1, 2], Rational[1, 2] (-1 - 5^Rational[1, 2])}}}]]}, 
      TagBox[
       GraphicsGroupBox[
        GraphicsComplexBox[{{0.5877852522924731, -0.8090169943749475}, {0., 
         1.}, {1.1755705045849463`, -1.618033988749895}, {0.9510565162951535, 
         0.30901699437494745`}, {0., 
         2.}, {-0.5877852522924731, -0.8090169943749475}, \
{-0.9510565162951535, 0.30901699437494745`}, {-1.902113032590307, 
         0.6180339887498949}, {1.902113032590307, 
         0.6180339887498949}, {-1.1755705045849463`, -1.618033988749895}}, {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
           ArrowBox[{{1, 3}, {1, 4}, {1, 6}, {2, 4}, {2, 5}, {2, 7}, {3, 5}, {
            3, 8}, {4, 9}, {5, 10}, {6, 7}, {6, 10}, {7, 8}, {8, 9}, {9, 10}},
             0.03574187784409402]}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           DiskBox[1, 0.03574187784409402], DiskBox[2, 0.03574187784409402], 
           DiskBox[3, 0.03574187784409402], DiskBox[4, 0.03574187784409402], 
           DiskBox[5, 0.03574187784409402], DiskBox[6, 0.03574187784409402], 
           DiskBox[7, 0.03574187784409402], DiskBox[8, 0.03574187784409402], 
           DiskBox[9, 0.03574187784409402], 
           DiskBox[10, 0.03574187784409402]}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->"NetworkGraphics",
    FormatType->TraditionalForm,
    FrameTicks->None]}], "}"}]], "Output",
 CellChangeTimes->{3.8772750832385836`*^9},
 CellLabel->"Out[28]=",ExpressionUUID->"5f2b1e88-edf2-4ff4-92ec-0fbc50cbea75"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graph", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"1", "<->", "2"}], ",", 
    RowBox[{"2", "<->", "3"}], ",", 
    RowBox[{"3", "<->", "4"}], ",", 
    RowBox[{"4", "<->", "5"}], ",", 
    RowBox[{"5", "<->", "6"}], ",", 
    RowBox[{"6", "<->", "1"}], ",", 
    RowBox[{"1", "<->", "7"}], ",", 
    RowBox[{"3", "<->", "7"}], ",", 
    RowBox[{"5", "<->", "7"}], ",", 
    RowBox[{"2", "<->", "8"}], ",", 
    RowBox[{"4", "<->", "9"}], ",", 
    RowBox[{"6", "<->", "10"}], ",", 
    RowBox[{"8", "<->", "9"}], ",", 
    RowBox[{"9", "<->", "10"}], ",", 
    RowBox[{"8", "<->", "10"}]}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.877275339522806*^9, 3.8772753396634264`*^9}},
 CellLabel->"In[42]:=",ExpressionUUID->"da2a7170-bc92-4504-ad48-55e8a67d7bd0"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10}, {
      Null, {{1, 2}, {2, 3}, {3, 4}, {4, 5}, {5, 6}, {6, 1}, {1, 7}, {3, 7}, {
       5, 7}, {2, 8}, {4, 9}, {6, 10}, {8, 9}, {9, 10}, {8, 10}}}]]}, 
    TagBox[
     GraphicsGroupBox[
      GraphicsComplexBox[{{1.9671526222809765`, 0.15933874831737238`}, {
       1.0975338020014784`, 0.}, {1.7670671121341712`, 0.9112292035310907}, {
       1.0988220344561788`, 1.8238622315805233`}, {1.9680261403086112`, 
       1.6622923187166894`}, {1.1670543901370138`, 0.9113626329493014}, {
       2.5831162917795245`, 0.9103917748751637}, {0., 0.3394084658421136}, {
       0.0007147226678090313, 1.4834437949644885`}, {0.02308778666949629, 
       0.9110855393061247}}, {
        {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
         ArrowBox[{{1, 2}, {1, 6}, {1, 7}, {2, 3}, {2, 8}, {3, 4}, {3, 7}, {4,
           5}, {4, 9}, {5, 6}, {5, 7}, {6, 10}, {8, 9}, {8, 10}, {9, 10}}, 
          0.027173388425058828`]}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         DiskBox[1, 0.027173388425058828], DiskBox[2, 0.027173388425058828], 
         DiskBox[3, 0.027173388425058828], DiskBox[4, 0.027173388425058828], 
         DiskBox[5, 0.027173388425058828], DiskBox[6, 0.027173388425058828], 
         DiskBox[7, 0.027173388425058828], DiskBox[8, 0.027173388425058828], 
         DiskBox[9, 0.027173388425058828], 
         DiskBox[10, 0.027173388425058828]}}]],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->"NetworkGraphics",
  FormatType->TraditionalForm,
  FrameTicks->None]], "Output",
 CellChangeTimes->{3.877275340442646*^9},
 CellLabel->"Out[42]=",ExpressionUUID->"18133ce4-440a-4836-b382-4b74a4fa1799"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graph", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"1", "<->", "2"}], ",", 
     RowBox[{"2", "<->", "3"}], ",", 
     RowBox[{"3", "<->", "4"}], ",", 
     RowBox[{"4", "<->", "5"}], ",", 
     RowBox[{"5", "<->", "6"}], ",", 
     RowBox[{"6", "<->", "1"}], ",", 
     RowBox[{"1", "<->", "7"}], ",", 
     RowBox[{"3", "<->", "7"}], ",", 
     RowBox[{"5", "<->", "7"}], ",", 
     RowBox[{"2", "<->", "8"}], ",", 
     RowBox[{"4", "<->", "9"}], ",", 
     RowBox[{"6", "<->", "10"}], ",", 
     RowBox[{"8", "<->", "9"}], ",", 
     RowBox[{"9", "<->", "10"}], ",", 
     RowBox[{"8", "<->", "10"}]}], "}"}], ",", 
   RowBox[{"GraphLayout", "->", "\"\<CircularEmbedding\>\""}], ",", 
   RowBox[{"VertexLabels", "->", "Automatic"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8772751293738527`*^9, 3.8772752603436813`*^9}, {
  3.877275301487045*^9, 3.8772753296731*^9}},
 CellLabel->"In[41]:=",ExpressionUUID->"7ea04af8-14ba-4287-a623-2ae9a4f6d5b5"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10}, {
      Null, {{1, 2}, {2, 3}, {3, 4}, {4, 5}, {5, 6}, {6, 1}, {1, 7}, {3, 7}, {
       5, 7}, {2, 8}, {4, 9}, {6, 10}, {8, 9}, {9, 10}, {8, 10}}}, {
      GraphLayout -> "CircularEmbedding", VertexLabels -> {Automatic}}]]}, 
    TagBox[GraphicsGroupBox[{
       {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
        ArrowBox[CompressedData["
1:eJxTTMoPSmVmYGDgB2ImKE6OKmVRPv9o/9ov02eXP35pXxt7Y83GxJN7GMDg
gz26fCSEb78IykeXZwx1EebLf7c/8aW++ftjlzHM+xsClre3wSHPBNFvnwyR
34+uHmr/fqj9GPLo9qOr/wdRv98Oaj66fH3JXEvr00dtoO7BpR7uf3R5HPbD
1adA+eug9qH7F91+dHl0/ejq0eUB43XuVw==
         "], 0.02261146496815286]}, 
       {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
        0.7]}], {
         DiskBox[{-0.5877852522924737, 0.809016994374948}, 
          0.02261146496815286], 
         InsetBox["1", 
          Offset[{-1.4530850560107222, 2.}, \
{-0.602644690572911, 0.8294692565724991}], ImageScaled[{0.8632712640026805, 0.}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-7.044813998280222*^-16, 1.}, 0.02261146496815286], 
         InsetBox["2", 
          Offset[{-1.4089627996560444*^-15, 2.}, \
{-7.204107563209488*^-16, 1.0226114649681528}], ImageScaled[{0.5000000000000003, 0.}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.9510565162951533, 0.30901699437494634}, 
          0.02261146496815286], 
         InsetBox["3", 
          Offset[{1.9999999999999998, 0.6498393924658105}, \
{0.9731146393297004, 0.3161841130107994}], ImageScaled[{5.551115123125783*^-17, 0.33754015188354736}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-0.5877852522924726, -0.8090169943749468}, 
          0.02261146496815286], 
         InsetBox["4", 
          Offset[{-1.4530850560107216, -2.}, \
{-0.6026446905729099, -0.8294692565724979}], ImageScaled[{0.8632712640026804, 1.}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-0.9510565162951534, -0.30901699437494645}, 
          0.02261146496815286], 
         InsetBox["5", 
          Offset[{-2., -0.6498393924658107}, \
{-0.9731146393297005, -0.3161841130107995}], ImageScaled[{1., 0.6624598481164526}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.5877852522924726, 0.8090169943749468}, 
          0.02261146496815286], 
         InsetBox["6", 
          Offset[{1.4530850560107216, 2.}, \
{0.6026446905729099, 0.8294692565724979}], ImageScaled[{0.1367287359973196, 0.}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-0.9510565162951538, 0.3090169943749484}, 
          0.02261146496815286], 
         InsetBox["7", 
          Offset[{-2., 0.6498393924658146}, \
{-0.9731146393297009, 0.3161841130108015}], ImageScaled[{1., 0.33754015188354636}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.9510565162951539, -0.3090169943749485}, 
          0.02261146496815286], 
         InsetBox["8", 
          Offset[{2., -0.6498393924658148}, \
{0.973114639329701, -0.3161841130108016}], ImageScaled[{0., 0.6624598481164536}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{6.049014748177263*^-16, -1.}, 0.02261146496815286], 
         InsetBox["9", 
          Offset[{1.2098029496354525*^-15, -2.}, \
{6.185791833247513*^-16, -1.0226114649681528}], ImageScaled[{0.4999999999999997, 1.}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.5877852522924738, -0.8090169943749481}, 
          0.02261146496815286], 
         InsetBox["10", 
          Offset[{1.4530850560107222, -2.}, \
{0.602644690572911, -0.8294692565724993}], ImageScaled[{0.13672873599731944, 1.}],
          BaseStyle->"Graphics"]}}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->"NetworkGraphics",
  FormatType->TraditionalForm,
  FrameTicks->None]], "Output",
 CellChangeTimes->{{3.8772751512609415`*^9, 3.87727526062488*^9}, {
  3.8772753040494537`*^9, 3.8772753300636683`*^9}},
 CellLabel->"Out[41]=",ExpressionUUID->"c4e412d6-25fe-4e64-99d7-7b897f7855e1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"IsomorphicGraphQ", "[", 
  RowBox[{
   RowBox[{"Graph", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"1", "<->", "2"}], ",", 
       RowBox[{"2", "<->", "3"}], ",", 
       RowBox[{"3", "<->", "4"}], ",", 
       RowBox[{"4", "<->", "5"}], ",", 
       RowBox[{"5", "<->", "6"}], ",", 
       RowBox[{"6", "<->", "1"}], ",", 
       RowBox[{"1", "<->", "7"}], ",", 
       RowBox[{"3", "<->", "7"}], ",", 
       RowBox[{"5", "<->", "7"}], ",", 
       RowBox[{"2", "<->", "8"}], ",", 
       RowBox[{"4", "<->", "9"}], ",", 
       RowBox[{"6", "<->", "10"}], ",", 
       RowBox[{"8", "<->", "9"}], ",", 
       RowBox[{"9", "<->", "10"}], ",", 
       RowBox[{"8", "<->", "10"}]}], "}"}], ",", 
     RowBox[{"GraphLayout", "->", "\"\<CircularEmbedding\>\""}], ",", 
     RowBox[{"VertexLabels", "->", "Automatic"}]}], "]"}], ",", 
   RowBox[{"GraphData", "[", "\"\<PetersenGraph\>\"", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.877275346942771*^9, 3.877275352955202*^9}},
 CellLabel->"In[43]:=",ExpressionUUID->"6e4ff799-4678-4e8c-8802-a6ef4878bb83"],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{3.8772753532206836`*^9},
 CellLabel->"Out[43]=",ExpressionUUID->"81bb6ad9-1a2a-4631-ba62-831c0535f6d9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindGraphIsomorphism", "[", 
  RowBox[{
   RowBox[{"GraphData", "[", "\"\<PetersenGraph\>\"", "]"}], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10}, {Null, 
         SparseArray[
         Automatic, {10, 10}, 0, {
          1, {{0, 3, 6, 9, 12, 15, 18, 21, 24, 27, 30}, {{3}, {4}, {6}, {4}, {
            5}, {7}, {1}, {5}, {8}, {1}, {2}, {9}, {2}, {3}, {10}, {1}, {7}, {
            10}, {2}, {6}, {8}, {3}, {7}, {9}, {4}, {8}, {10}, {5}, {6}, {
            9}}}, Pattern}]}, {
        GraphLayout -> {"Dimension" -> 2}, 
         VertexCoordinates -> {{0.454406779661017, -0.22296610169491526`}, {
          0.6325423728813558, -0.5316101694915254}, {
          0.5492372881355932, -0.05873728813559322}, {
          0.4873728813559322, -0.4096610169491525}, {
          0.8221186440677966, -0.5316101694915254}, {
          1., -0.22296610169491526`}, {
          0.9059322033898305, -0.05873728813559322}, {0.7273728813559321, 
          0.006091525423728813}, {0.7273728813559321, -0.2711016949152542}, {
          0.9677966101694915, -0.4096610169491525}}}]]}, 
      TagBox[
       GraphicsGroupBox[
        GraphicsComplexBox[{{0.454406779661017, -0.22296610169491526`}, {
         0.6325423728813558, -0.5316101694915254}, {
         0.5492372881355932, -0.05873728813559322}, {
         0.4873728813559322, -0.4096610169491525}, {
         0.8221186440677966, -0.5316101694915254}, {
         1., -0.22296610169491526`}, {
         0.9059322033898305, -0.05873728813559322}, {0.7273728813559321, 
         0.006091525423728813}, {0.7273728813559321, -0.2711016949152542}, {
         0.9677966101694915, -0.4096610169491525}}, {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
           ArrowBox[{{1, 3}, {1, 4}, {1, 6}, {2, 4}, {2, 5}, {2, 7}, {3, 5}, {
            3, 8}, {4, 9}, {5, 10}, {6, 7}, {6, 10}, {7, 8}, {8, 9}, {9, 10}},
             0.006945401694915254]}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           DiskBox[1, 0.006945401694915254], DiskBox[2, 0.006945401694915254],
            DiskBox[3, 0.006945401694915254], 
           DiskBox[4, 0.006945401694915254], DiskBox[5, 0.006945401694915254],
            DiskBox[6, 0.006945401694915254], 
           DiskBox[7, 0.006945401694915254], DiskBox[8, 0.006945401694915254],
            DiskBox[9, 0.006945401694915254], 
           DiskBox[10, 0.006945401694915254]}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->"NetworkGraphics",
    FormatType->TraditionalForm,
    FrameTicks->None]}], "]"}]], "Input",
 CellChangeTimes->{{3.8772754426379685`*^9, 3.8772754653816485`*^9}},
 CellLabel->"In[45]:=",ExpressionUUID->"9d928a54-75f4-44d1-bfb9-26049db1a431"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\[LeftAssociation]", 
   RowBox[{
    RowBox[{"1", "\[Rule]", "1"}], ",", 
    RowBox[{"2", "\[Rule]", "2"}], ",", 
    RowBox[{"3", "\[Rule]", "3"}], ",", 
    RowBox[{"4", "\[Rule]", "4"}], ",", 
    RowBox[{"5", "\[Rule]", "5"}], ",", 
    RowBox[{"6", "\[Rule]", "6"}], ",", 
    RowBox[{"7", "\[Rule]", "7"}], ",", 
    RowBox[{"8", "\[Rule]", "8"}], ",", 
    RowBox[{"9", "\[Rule]", "9"}], ",", 
    RowBox[{"10", "\[Rule]", "10"}]}], "\[RightAssociation]"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.87727546158552*^9, 3.877275465662798*^9}},
 CellLabel->"Out[45]=",ExpressionUUID->"a3be9754-8553-4fdb-8542-926e02b4bbbe"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"FindGraphIsomorphism", "[", 
  RowBox[{
   RowBox[{"GraphData", "[", "\"\<PetersenGraph\>\"", "]"}], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10}, {Null, 
         SparseArray[
         Automatic, {10, 10}, 0, {
          1, {{0, 3, 6, 9, 12, 15, 18, 21, 24, 27, 30}, {{3}, {4}, {6}, {4}, {
            5}, {7}, {1}, {5}, {8}, {1}, {2}, {9}, {2}, {3}, {10}, {1}, {7}, {
            10}, {2}, {6}, {8}, {3}, {7}, {9}, {4}, {8}, {10}, {5}, {6}, {
            9}}}, Pattern}]}, {
        GraphLayout -> {"Dimension" -> 2}, 
         VertexCoordinates -> {{0.454406779661017, -0.22296610169491526`}, {
          0.6325423728813558, -0.5316101694915254}, {
          0.5492372881355932, -0.05873728813559322}, {
          0.4873728813559322, -0.4096610169491525}, {
          0.8221186440677966, -0.5316101694915254}, {
          1., -0.22296610169491526`}, {
          0.9059322033898305, -0.05873728813559322}, {0.7273728813559321, 
          0.006091525423728813}, {0.7273728813559321, -0.2711016949152542}, {
          0.9677966101694915, -0.4096610169491525}}}]]}, 
      TagBox[
       GraphicsGroupBox[
        GraphicsComplexBox[{{0.454406779661017, -0.22296610169491526`}, {
         0.6325423728813558, -0.5316101694915254}, {
         0.5492372881355932, -0.05873728813559322}, {
         0.4873728813559322, -0.4096610169491525}, {
         0.8221186440677966, -0.5316101694915254}, {
         1., -0.22296610169491526`}, {
         0.9059322033898305, -0.05873728813559322}, {0.7273728813559321, 
         0.006091525423728813}, {0.7273728813559321, -0.2711016949152542}, {
         0.9677966101694915, -0.4096610169491525}}, {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
           ArrowBox[{{1, 3}, {1, 4}, {1, 6}, {2, 4}, {2, 5}, {2, 7}, {3, 5}, {
            3, 8}, {4, 9}, {5, 10}, {6, 7}, {6, 10}, {7, 8}, {8, 9}, {9, 10}},
             0.006945401694915254]}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           DiskBox[1, 0.006945401694915254], DiskBox[2, 0.006945401694915254],
            DiskBox[3, 0.006945401694915254], 
           DiskBox[4, 0.006945401694915254], DiskBox[5, 0.006945401694915254],
            DiskBox[6, 0.006945401694915254], 
           DiskBox[7, 0.006945401694915254], DiskBox[8, 0.006945401694915254],
            DiskBox[9, 0.006945401694915254], 
           DiskBox[10, 0.006945401694915254]}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->"NetworkGraphics",
    FormatType->TraditionalForm,
    FrameTicks->None]}], "]"}]], "Input",
 CellChangeTimes->{{3.8772754426379685`*^9, 
  3.8772754687053423`*^9}},ExpressionUUID->"ca12cb99-8dd5-4902-bf0d-\
7172bcb4600a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindGraphIsomorphism", "[", 
  RowBox[{
   RowBox[{"GraphData", "[", "\"\<PetersenGraph\>\"", "]"}], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10}, {Null, 
         SparseArray[
         Automatic, {10, 10}, 0, {
          1, {{0, 3, 6, 9, 12, 15, 18, 21, 24, 27, 30}, {{3}, {4}, {6}, {4}, {
            5}, {7}, {1}, {5}, {8}, {1}, {2}, {9}, {2}, {3}, {10}, {1}, {7}, {
            10}, {2}, {6}, {8}, {3}, {7}, {9}, {4}, {8}, {10}, {5}, {6}, {
            9}}}, Pattern}]}, {
        GraphLayout -> {"Dimension" -> 2}, 
         VertexCoordinates -> {{0.4483544303797468, -0.269957805907173}, {
          0.6048101265822785, -0.3389873417721519}, {
          0.5863291139240506, -0.5090295358649789}, {
          0.5863291139240506, -0.030911392405063295`}, {
          0.8624472573839662, -0.5090295358649789}, {
          0.7243037974683544, -0.13198312236286922`}, {
          0.7243037974683544, -0.269957805907173}, {
          0.8437974683544304, -0.3389873417721519}, {
          0.8624472573839662, -0.030911392405063295`}, {
          1., -0.269957805907173}}}]]}, 
      TagBox[
       GraphicsGroupBox[
        GraphicsComplexBox[{{0.4483544303797468, -0.269957805907173}, {
         0.6048101265822785, -0.3389873417721519}, {
         0.5863291139240506, -0.5090295358649789}, {
         0.5863291139240506, -0.030911392405063295`}, {
         0.8624472573839662, -0.5090295358649789}, {
         0.7243037974683544, -0.13198312236286922`}, {
         0.7243037974683544, -0.269957805907173}, {
         0.8437974683544304, -0.3389873417721519}, {
         0.8624472573839662, -0.030911392405063295`}, {
         1., -0.269957805907173}}, {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
           ArrowBox[{{1, 3}, {1, 4}, {1, 6}, {2, 4}, {2, 5}, {2, 7}, {3, 5}, {
            3, 8}, {4, 9}, {5, 10}, {6, 7}, {6, 10}, {7, 8}, {8, 9}, {9, 10}},
             0.007022448101265823]}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           DiskBox[1, 0.007022448101265823], DiskBox[2, 0.007022448101265823],
            DiskBox[3, 0.007022448101265823], 
           DiskBox[4, 0.007022448101265823], DiskBox[5, 0.007022448101265823],
            DiskBox[6, 0.007022448101265823], 
           DiskBox[7, 0.007022448101265823], DiskBox[8, 0.007022448101265823],
            DiskBox[9, 0.007022448101265823], 
           DiskBox[10, 0.007022448101265823]}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->"NetworkGraphics",
    FormatType->TraditionalForm,
    FrameTicks->None]}], "]"}]], "Input",
 CellChangeTimes->{{3.8772754426379685`*^9, 3.877275486116083*^9}},
 CellLabel->"In[46]:=",ExpressionUUID->"3d80461f-8d40-491b-9921-92e330c551fc"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\[LeftAssociation]", 
   RowBox[{
    RowBox[{"1", "\[Rule]", "1"}], ",", 
    RowBox[{"2", "\[Rule]", "2"}], ",", 
    RowBox[{"3", "\[Rule]", "3"}], ",", 
    RowBox[{"4", "\[Rule]", "4"}], ",", 
    RowBox[{"5", "\[Rule]", "5"}], ",", 
    RowBox[{"6", "\[Rule]", "6"}], ",", 
    RowBox[{"7", "\[Rule]", "7"}], ",", 
    RowBox[{"8", "\[Rule]", "8"}], ",", 
    RowBox[{"9", "\[Rule]", "9"}], ",", 
    RowBox[{"10", "\[Rule]", "10"}]}], "\[RightAssociation]"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.8772754871004596`*^9},
 CellLabel->"Out[46]=",ExpressionUUID->"405a1890-997e-4fad-b532-0f00ab30920f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindGraphIsomorphism", "[", 
  RowBox[{
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10}, {Null, 
         SparseArray[
         Automatic, {10, 10}, 0, {
          1, {{0, 3, 6, 9, 12, 15, 18, 21, 24, 27, 30}, {{3}, {4}, {6}, {4}, {
            5}, {7}, {1}, {5}, {8}, {1}, {2}, {9}, {2}, {3}, {10}, {1}, {7}, {
            10}, {2}, {6}, {8}, {3}, {7}, {9}, {4}, {8}, {10}, {5}, {6}, {
            9}}}, Pattern}]}, {
        GraphLayout -> {"Dimension" -> 2}, 
         VertexCoordinates -> {{2, 2}, {6, 4}, {4, 2}, {2, 4}, {6, 2}, {5, 
          5}, {6, 6}, {4, 6}, {2, 6}, {3, 5}}}]]}, 
      TagBox[
       GraphicsGroupBox[
        GraphicsComplexBox[{{2., 2.}, {6., 4.}, {4., 2.}, {2., 4.}, {6., 
         2.}, {5., 5.}, {6., 6.}, {4., 6.}, {2., 6.}, {3., 5.}}, {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
           ArrowBox[{{1, 3}, {1, 4}, {1, 6}, {2, 4}, {2, 5}, {2, 7}, {3, 5}, {
            3, 8}, {4, 9}, {5, 10}, {6, 7}, {6, 10}, {7, 8}, {8, 9}, {9, 10}},
             0.03700564971751412]}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           DiskBox[1, 0.03700564971751412], DiskBox[2, 0.03700564971751412], 
           DiskBox[3, 0.03700564971751412], DiskBox[4, 0.03700564971751412], 
           DiskBox[5, 0.03700564971751412], DiskBox[6, 0.03700564971751412], 
           DiskBox[7, 0.03700564971751412], DiskBox[8, 0.03700564971751412], 
           DiskBox[9, 0.03700564971751412], 
           DiskBox[10, 0.03700564971751412]}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->"NetworkGraphics",
    FormatType->TraditionalForm,
    FrameTicks->None], ",", 
   RowBox[{"GraphData", "[", "\"\<PetersenGraph\>\"", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8772754426379685`*^9, 3.8772755069856696`*^9}},
 CellLabel->"In[47]:=",ExpressionUUID->"c989af07-f08b-4a6e-8725-5c31aa4e7d0f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\[LeftAssociation]", 
   RowBox[{
    RowBox[{"1", "\[Rule]", "1"}], ",", 
    RowBox[{"2", "\[Rule]", "2"}], ",", 
    RowBox[{"3", "\[Rule]", "3"}], ",", 
    RowBox[{"4", "\[Rule]", "4"}], ",", 
    RowBox[{"5", "\[Rule]", "5"}], ",", 
    RowBox[{"6", "\[Rule]", "6"}], ",", 
    RowBox[{"7", "\[Rule]", "7"}], ",", 
    RowBox[{"8", "\[Rule]", "8"}], ",", 
    RowBox[{"9", "\[Rule]", "9"}], ",", 
    RowBox[{"10", "\[Rule]", "10"}]}], "\[RightAssociation]"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.877275507282531*^9},
 CellLabel->"Out[47]=",ExpressionUUID->"3e9aa0bb-0222-443c-984c-7c853f7c1fbb"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Exercise 44", "Section",
 CellChangeTimes->{{3.877275537921226*^9, 3.8772755394107227`*^9}, {
  3.8772759012737303`*^9, 
  3.877275902586233*^9}},ExpressionUUID->"e5619394-c8c3-4629-a93d-\
5d930f6dd6db"],

Cell["How many symmetries does Chv\[AGrave]tal\[CloseCurlyQuote]s graph \
have?", "Text",
 CellChangeTimes->{{3.8772755408639307`*^9, 
  3.8772755541195683`*^9}},ExpressionUUID->"0a3d45db-3116-47d7-bcfc-\
bb6646137ec2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GraphData", "[", "\"\<ChvatalGraph\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.8772755203491106`*^9, 3.8772755229585557`*^9}},
 CellLabel->"In[49]:=",ExpressionUUID->"68f857c8-c32c-41a1-9aff-e48c4530d5f1"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12}, {Null, 
       SparseArray[
       Automatic, {12, 12}, 0, {
        1, {{0, 4, 8, 12, 16, 20, 24, 28, 32, 36, 40, 44, 48}, {{7}, {10}, {
          11}, {12}, {3}, {6}, {8}, {11}, {2}, {7}, {9}, {12}, {8}, {10}, {
          11}, {12}, {6}, {9}, {11}, {12}, {2}, {5}, {7}, {10}, {1}, {3}, {
          6}, {8}, {2}, {4}, {7}, {9}, {3}, {5}, {8}, {10}, {1}, {4}, {6}, {
          9}, {1}, {2}, {4}, {5}, {1}, {3}, {4}, {5}}}, Pattern}]}, {
      VertexCoordinates -> {{-0.9511, 0.309}, {-0.5878, -0.809}, {
         0.5878, -0.809}, {0.9511, 0.309}, {0, 1.}, {-1.9021, 
         0.618}, {-1.1756, -1.618}, {1.1756, -1.618}, {1.9021, 0.618}, {
         0, 2.}, {-0.3, 0}, {0.3, 0}}}]]}, 
    TagBox[
     GraphicsGroupBox[
      GraphicsComplexBox[{{-0.9511, 0.309}, {-0.5878, -0.809}, {
       0.5878, -0.809}, {0.9511, 0.309}, {0., 1.}, {-1.9021, 
       0.618}, {-1.1756, -1.618}, {1.1756, -1.618}, {1.9021, 0.618}, {0., 
       2.}, {-0.3, 0.}, {0.3, 0.}}, {
        {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
         ArrowBox[{{1, 7}, {1, 10}, {1, 11}, {1, 12}, {2, 3}, {2, 6}, {2, 
          8}, {2, 11}, {3, 7}, {3, 9}, {3, 12}, {4, 8}, {4, 10}, {4, 11}, {4, 
          12}, {5, 6}, {5, 9}, {5, 11}, {5, 12}, {6, 7}, {6, 10}, {7, 8}, {8, 
          9}, {9, 10}}, 0.03574170770443663]}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         DiskBox[1, 0.03574170770443663], DiskBox[2, 0.03574170770443663], 
         DiskBox[3, 0.03574170770443663], DiskBox[4, 0.03574170770443663], 
         DiskBox[5, 0.03574170770443663], DiskBox[6, 0.03574170770443663], 
         DiskBox[7, 0.03574170770443663], DiskBox[8, 0.03574170770443663], 
         DiskBox[9, 0.03574170770443663], DiskBox[10, 0.03574170770443663], 
         DiskBox[11, 0.03574170770443663], 
         DiskBox[12, 0.03574170770443663]}}]],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->"NetworkGraphics",
  FormatType->TraditionalForm,
  FrameTicks->None]], "Output",
 CellChangeTimes->{{3.8772755233490777`*^9, 3.8772755351817937`*^9}},
 CellLabel->"Out[49]=",ExpressionUUID->"536746bb-c59f-43df-ab08-a9d2f64ff638"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GraphData", "[", 
  RowBox[{"\"\<ChvatalGraph\>\"", ",", "\"\<AutomorphismCount\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8772759752610645`*^9, 3.877275978404583*^9}},
 CellLabel->"In[50]:=",ExpressionUUID->"eeebe44a-c32f-47df-adab-b6fa20859b16"],

Cell[BoxData["8"], "Output",
 CellChangeTimes->{3.877275978639002*^9},
 CellLabel->"Out[50]=",ExpressionUUID->"14e92b70-915c-47cd-b351-0726cf04ed75"]
}, Open  ]],

Cell["There are 8 symmetries.", "Text",
 CellChangeTimes->{{3.877275981524312*^9, 
  3.8772759865613174`*^9}},ExpressionUUID->"57109d7a-30b7-4484-b397-\
28b280a05647"]
}, Closed]],

Cell[CellGroupData[{

Cell["Exercise 45", "Section",
 CellChangeTimes->{{3.8772760333797874`*^9, 
  3.8772760415795135`*^9}},ExpressionUUID->"e74b2402-53dc-4f2b-865a-\
ddb7cbabe3e8"],

Cell["\<\
Find an easy way to 4-color the planar graph (17). Would 3 colors suffice?\
\>", "Text",
 CellChangeTimes->{{3.877276042990881*^9, 3.8772760465193834`*^9}, {
  3.8772760893803616`*^9, 
  3.8772761017694054`*^9}},ExpressionUUID->"15b27fb6-0ee4-4fe5-b35b-\
253275c10ebe"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GraphData", "[", "\"\<ContiguousUSAGraph\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.8772760651577616`*^9, 3.877276067987266*^9}},
 CellLabel->"In[51]:=",ExpressionUUID->"c4f3f6e7-518c-4bde-8712-df1a757a5fbb"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
       20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37,
       38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49}, {Null, 
       SparseArray[
       Automatic, {49, 49}, 0, {
        1, {{0, 4, 6, 11, 15, 23, 29, 32, 40, 46, 50, 54, 57, 61, 66, 71, 75, 
          81, 85, 91, 97, 100, 105, 110, 112, 114, 119, 125, 128, 131, 137, 
          141, 143, 149, 154, 158, 164, 168, 174, 178, 180, 184, 191, 194, 
          199, 204, 207, 210, 211, 214}, {{2}, {3}, {4}, {5}, {1}, {3}, {1}, {
          2}, {5}, {31}, {32}, {1}, {5}, {6}, {7}, {1}, {3}, {4}, {6}, {8}, {
          27}, {31}, {42}, {4}, {5}, {7}, {8}, {9}, {10}, {4}, {6}, {10}, {
          5}, {6}, {9}, {18}, {19}, {33}, {34}, {42}, {6}, {8}, {10}, {13}, {
          17}, {18}, {6}, {7}, {9}, {13}, {12}, {13}, {14}, {15}, {11}, {
          14}, {16}, {9}, {10}, {11}, {17}, {11}, {12}, {15}, {16}, {38}, {
          11}, {14}, {17}, {20}, {38}, {12}, {14}, {38}, {40}, {9}, {13}, {
          15}, {18}, {19}, {20}, {8}, {9}, {17}, {19}, {8}, {17}, {18}, {
          20}, {33}, {36}, {15}, {17}, {19}, {36}, {38}, {39}, {22}, {23}, {
          24}, {21}, {23}, {24}, {46}, {47}, {21}, {22}, {29}, {30}, {47}, {
          21}, {22}, {26}, {27}, {25}, {27}, {28}, {30}, {45}, {5}, {25}, {
          26}, {31}, {42}, {45}, {26}, {29}, {30}, {23}, {28}, {30}, {23}, {
          26}, {28}, {29}, {44}, {45}, {3}, {5}, {27}, {32}, {3}, {31}, {8}, {
          19}, {34}, {35}, {36}, {37}, {8}, {33}, {37}, {41}, {42}, {33}, {
          36}, {37}, {49}, {19}, {20}, {33}, {35}, {39}, {49}, {33}, {34}, {
          35}, {43}, {14}, {15}, {16}, {20}, {39}, {40}, {20}, {36}, {38}, {
          49}, {16}, {38}, {34}, {42}, {43}, {44}, {5}, {8}, {27}, {34}, {
          41}, {44}, {45}, {37}, {41}, {44}, {30}, {41}, {42}, {43}, {45}, {
          26}, {27}, {30}, {42}, {44}, {22}, {47}, {48}, {22}, {23}, {46}, {
          46}, {35}, {36}, {39}}}, Pattern}]}, {
      VertexCoordinates -> {{7, 1}, {8, 0}, {8, 1}, {6, 1}, {7, 2}, {5, 2}, {
        5, 1}, {5, 3}, {4, 2}, {4, 1}, {2, 2}, {0, 3}, {3, 2}, {1, 3}, {2, 
        3}, {1, 4}, {3, 3}, {4, 3}, {4, 4}, {3, 4}, {11, 4}, {11, 5}, {10, 
        5}, {12, 4}, {9, 2}, {9, 3}, {8, 2}, {10, 3}, {10, 4}, {9, 4}, {9, 
        1}, {9, 0}, {5, 4}, {6, 4}, {5, 5}, {4, 5}, {6, 5}, {2, 4}, {3, 5}, {
        1, 5}, {7, 4}, {7, 3}, {7, 5}, {8, 4}, {8, 3}, {11, 6}, {10, 6}, {12, 
        6}, {4, 6}}}]]}, 
    TagBox[GraphicsGroupBox[GraphicsComplexBox[CompressedData["
1:eJx1kjEOgzAMRa1OGTNkYGAwKEKsPUFzhh6hEjNX5wgUhd+KJ2IJWc//m9iB
4bO+l4eZPb/PkWv0pebtVbMXu4RD78DqtzOnBssvDmeO8Ef4DbpC/QG6+lgP
0CPqnIfcqk8N1p4ZPMM/Yk6xznHoGbqY7yNr7995dp1L/g6cyr0vwc/vzvtq
/Qc9/OIAlt/hd/h1/5org2fwf+8dO2soag==
       "], {
        {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
         ArrowBox[{{1, 2}, {1, 3}, {1, 4}, {1, 5}, {2, 3}, {3, 5}, {3, 31}, {
          3, 32}, {4, 5}, {4, 6}, {4, 7}, {5, 6}, {5, 8}, {5, 27}, {5, 31}, {
          5, 42}, {6, 7}, {6, 8}, {6, 9}, {6, 10}, {7, 10}, {8, 9}, {8, 18}, {
          8, 19}, {8, 33}, {8, 34}, {8, 42}, {9, 10}, {9, 13}, {9, 17}, {9, 
          18}, {10, 13}, {11, 12}, {11, 13}, {11, 14}, {11, 15}, {12, 14}, {
          12, 16}, {13, 17}, {14, 15}, {14, 16}, {14, 38}, {15, 17}, {15, 
          20}, {15, 38}, {16, 38}, {16, 40}, {17, 18}, {17, 19}, {17, 20}, {
          18, 19}, {19, 20}, {19, 33}, {19, 36}, {20, 36}, {20, 38}, {20, 
          39}, {21, 22}, {21, 23}, {21, 24}, {22, 23}, {22, 24}, {22, 46}, {
          22, 47}, {23, 29}, {23, 30}, {23, 47}, {25, 26}, {25, 27}, {26, 
          27}, {26, 28}, {26, 30}, {26, 45}, {27, 31}, {27, 42}, {27, 45}, {
          28, 29}, {28, 30}, {29, 30}, {30, 44}, {30, 45}, {31, 32}, {33, 
          34}, {33, 35}, {33, 36}, {33, 37}, {34, 37}, {34, 41}, {34, 42}, {
          35, 36}, {35, 37}, {35, 49}, {36, 39}, {36, 49}, {37, 43}, {38, 
          39}, {38, 40}, {39, 49}, {41, 42}, {41, 43}, {41, 44}, {42, 44}, {
          42, 45}, {43, 44}, {44, 45}, {46, 47}, {46, 48}}, 
          0.07217898832684824]}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         DiskBox[1, 0.07217898832684824], DiskBox[2, 0.07217898832684824], 
         DiskBox[3, 0.07217898832684824], DiskBox[4, 0.07217898832684824], 
         DiskBox[5, 0.07217898832684824], DiskBox[6, 0.07217898832684824], 
         DiskBox[7, 0.07217898832684824], DiskBox[8, 0.07217898832684824], 
         DiskBox[9, 0.07217898832684824], DiskBox[10, 0.07217898832684824], 
         DiskBox[11, 0.07217898832684824], DiskBox[12, 0.07217898832684824], 
         DiskBox[13, 0.07217898832684824], DiskBox[14, 0.07217898832684824], 
         DiskBox[15, 0.07217898832684824], DiskBox[16, 0.07217898832684824], 
         DiskBox[17, 0.07217898832684824], DiskBox[18, 0.07217898832684824], 
         DiskBox[19, 0.07217898832684824], DiskBox[20, 0.07217898832684824], 
         DiskBox[21, 0.07217898832684824], DiskBox[22, 0.07217898832684824], 
         DiskBox[23, 0.07217898832684824], DiskBox[24, 0.07217898832684824], 
         DiskBox[25, 0.07217898832684824], DiskBox[26, 0.07217898832684824], 
         DiskBox[27, 0.07217898832684824], DiskBox[28, 0.07217898832684824], 
         DiskBox[29, 0.07217898832684824], DiskBox[30, 0.07217898832684824], 
         DiskBox[31, 0.07217898832684824], DiskBox[32, 0.07217898832684824], 
         DiskBox[33, 0.07217898832684824], DiskBox[34, 0.07217898832684824], 
         DiskBox[35, 0.07217898832684824], DiskBox[36, 0.07217898832684824], 
         DiskBox[37, 0.07217898832684824], DiskBox[38, 0.07217898832684824], 
         DiskBox[39, 0.07217898832684824], DiskBox[40, 0.07217898832684824], 
         DiskBox[41, 0.07217898832684824], DiskBox[42, 0.07217898832684824], 
         DiskBox[43, 0.07217898832684824], DiskBox[44, 0.07217898832684824], 
         DiskBox[45, 0.07217898832684824], DiskBox[46, 0.07217898832684824], 
         DiskBox[47, 0.07217898832684824], DiskBox[48, 0.07217898832684824], 
         DiskBox[49, 0.07217898832684824]}}]],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->"NetworkGraphics",
  FormatType->TraditionalForm,
  FrameTicks->None]], "Output",
 CellChangeTimes->{3.877276076270897*^9},
 CellLabel->"Out[51]=",ExpressionUUID->"a5b9312c-1215-4851-87e7-0d1d75df1fb0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"VertexCount", "[", 
  RowBox[{"GraphData", "[", "\"\<ContiguousUSAGraph\>\"", "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.877276069565404*^9, 3.877276071690259*^9}},
 CellLabel->"In[52]:=",ExpressionUUID->"12e32225-583e-444b-8383-69620b503cf5"],

Cell[BoxData["49"], "Output",
 CellChangeTimes->{3.8772760765209017`*^9},
 CellLabel->"Out[52]=",ExpressionUUID->"02d1e6da-806d-416a-b544-a16619606e66"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GraphData", "[", 
  RowBox[{"\"\<ContiguousUSAGraph\>\"", ",", "\"\<ChromaticNumber\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8772761123166723`*^9, 3.8772761137038326`*^9}, {
  3.877276177160389*^9, 3.877276192768671*^9}},
 CellLabel->"In[54]:=",ExpressionUUID->"058dbe4c-21a5-4af4-beab-b1d0f1d666ce"],

Cell[BoxData["4"], "Output",
 CellChangeTimes->{{3.877276187812787*^9, 3.8772761929718394`*^9}},
 CellLabel->"Out[54]=",ExpressionUUID->"68930ea9-c25f-4ae7-94d2-aa2577a05a07"]
}, Open  ]],

Cell["The minimum number of colors possible is 4.", "Text",
 CellChangeTimes->{{3.877276197133191*^9, 
  3.877276205347638*^9}},ExpressionUUID->"98bbe57f-8ece-485d-b111-\
911b3b9d25b3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindVertexColoring", "[", 
  RowBox[{"GraphData", "[", "\"\<ContiguousUSAGraph\>\"", "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8772762066444416`*^9, 3.8772762171749787`*^9}},
 CellLabel->"In[55]:=",ExpressionUUID->"c2230d97-da35-44f3-a993-3f93dca4fdee"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "3", ",", "1", ",", "2", ",", "2", ",", "1", ",", "3", ",", "1", ",", "2", 
   ",", "1", ",", "2", ",", "2", ",", "4", ",", "3", ",", "3", ",", "1", ",", 
   "1", ",", "2", ",", "3", ",", "1", ",", "3", ",", "3", ",", "2", ",", "1", 
   ",", "1", ",", "1", ",", "3", ",", "2", ",", "1", ",", "3", ",", "2", ",", 
   "3", ",", "1", ",", "3", ",", "1", ",", "1", ",", "2", ",", "2", ",", "2", 
   ",", "1", ",", "3", ",", "2", ",", "3", ",", "1", ",", "4", ",", "1", ",", 
   "1", ",", "3", ",", "2", ",", "3"}], "}"}]], "Output",
 CellChangeTimes->{3.8772762183419757`*^9},
 CellLabel->"Out[55]=",ExpressionUUID->"880bcbd5-10ef-4fa9-9f5c-82a35e1bffc0"]
}, Open  ]],

Cell["I can use a resource function I created to color a graph:", "Text",
 CellChangeTimes->{{3.8772762210894947`*^9, 
  3.8772762306108437`*^9}},ExpressionUUID->"7cf7c94c-addf-47da-875a-\
d27a9491605a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ResourceSearch", "[", "\"\<*color*graph*\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.877276232563897*^9, 3.8772762635145736`*^9}},
 CellLabel->"In[57]:=",ExpressionUUID->"c0254b0e-358c-4976-ad5f-4f8650e53a66"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> {<|
       "Name" -> "ColorGraphEdges", "ResourceType" -> "Function", 
        "ResourceObject" -> 
        ResourceObject[<|
          "Name" -> "ColorGraphEdges", "ShortName" -> "ColorGraphEdges", 
           "UUID" -> "bc9940b2-bf6e-4421-aa7f-5f59a15d314b", "ResourceType" -> 
           "Function", "Version" -> "1.0.0", "Description" -> 
           "Color the edges of a graph so no edges incident to each other \
have the same color", "RepositoryLocation" -> 
           URL["https://www.wolframcloud.com/obj/resourcesystem/api/1.0"], 
           "SymbolName" -> 
           "FunctionRepository`$c48a7ef4e1574db5871291a16ac0ea5d`\
ColorGraphEdges"|>], "Description" -> 
        "Color the edges of a graph so no edges incident to each other have \
the same color", "Location" -> URL["https://resources.wolframcloud.com"], 
        "DocumentationLink" -> 
        URL["https://resources.wolframcloud.com/FunctionRepository/resources/\
ColorGraphEdges"]|>, <|
       "Name" -> "ColorGraphVertices", "ResourceType" -> "Function", 
        "ResourceObject" -> 
        ResourceObject[<|
          "Name" -> "ColorGraphVertices", "ShortName" -> "ColorGraphVertices",
            "UUID" -> "d3137161-1d52-44a8-a00d-801ae32c4e37", "ResourceType" -> 
           "Function", "Version" -> "1.0.0", "Description" -> 
           "Color the vertices in a graph with no adjacent vertices sharing a \
color", "RepositoryLocation" -> 
           URL["https://www.wolframcloud.com/obj/resourcesystem/api/1.0"], 
           "SymbolName" -> 
           "FunctionRepository`$055e89d946aa47f28a60e5055fc8d298`\
ColorGraphVertices"|>], "Description" -> 
        "Color the vertices in a graph with no adjacent vertices sharing a \
color", "Location" -> URL["https://resources.wolframcloud.com"], 
        "DocumentationLink" -> 
        URL["https://resources.wolframcloud.com/FunctionRepository/resources/\
ColorGraphVertices"]|>}, "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "Name"} -> 
        1, {All, "ResourceType"} -> 1, {All, "ResourceObject"} -> 
        1, {All, "Description"} -> 1, {All, "Location"} -> 
        1, {All, "DocumentationLink"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "Name" -> TypeSystem`PackageScope`AtomShape[201.60000000000002`], 
            "ResourceType" -> 
            TypeSystem`PackageScope`AtomShape[89.60000000000001], 
            "ResourceObject" -> TypeSystem`PackageScope`AtomShape[60], 
            "Description" -> TypeSystem`PackageScope`AtomShape[560.], 
            "Location" -> TypeSystem`PackageScope`AtomShape[60], 
            "DocumentationLink" -> TypeSystem`PackageScope`AtomShape[60]|>], 
          DirectedInfinity[1], 6, {All}]], 2, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{
        "Name", "ResourceType", "ResourceObject", "Description", "Location", 
         "DocumentationLink"}, {
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[ResourceObject], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[URL], 
         TypeSystem`Atom[URL]}], 2], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "Name"} -> 
        1, {All, "ResourceType"} -> 1, {All, "ResourceObject"} -> 
        1, {All, "Description"} -> 1, {All, "Location"} -> 
        1, {All, "DocumentationLink"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "Name" -> TypeSystem`PackageScope`AtomShape[201.60000000000002`], 
            "ResourceType" -> 
            TypeSystem`PackageScope`AtomShape[89.60000000000001], 
            "ResourceObject" -> TypeSystem`PackageScope`AtomShape[60], 
            "Description" -> TypeSystem`PackageScope`AtomShape[560.], 
            "Location" -> TypeSystem`PackageScope`AtomShape[60], 
            "DocumentationLink" -> TypeSystem`PackageScope`AtomShape[60]|>], 
          DirectedInfinity[1], 6, {All}]], 2, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{
        "Name", "ResourceType", "ResourceObject", "Description", "Location", 
         "DocumentationLink"}, {
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[ResourceObject], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[URL], 
         TypeSystem`Atom[URL]}], 2], "Path" -> {}, "DisplayedRowCount" -> 2, 
     "DisplayedColumnCount" -> 6, "DataRowCount" -> 2, "DataColumnCount" -> 6,
      "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Name", 
                  Style[
                  "Name", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Name"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Name"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["ResourceType", 
                  Style[
                  "ResourceType", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "ResourceType"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "ResourceType"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["ResourceObject", 
                  Style[
                  "ResourceObject", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "ResourceObject"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "ResourceObject"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Description", 
                  Style[
                  "Description", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Description"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Description"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Location", 
                  Style[
                  "Location", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Location"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Location"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["DocumentationLink", 
                  Style[
                  "DocumentationLink", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "DocumentationLink"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "DocumentationLink"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation["ColorGraphEdges", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{201.60000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Function", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["ResourceType"]}, "Item", False], "Mouse"], 
              ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                
                TemplateBox[{
                 "\"ResourceObject\"", "\"[\"", "\"\\\"\"", 
                  "\"ColorGraphEdges\"", "\"\\\"\"", "\"]\""}, "RowDefault"]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["ResourceObject"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
              "Color the edges of a graph so no edges incident to each other \
have the same color", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Description"]}, "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Hyperlink["https://resources.wolframcloud.com", 
                URL["https://resources.wolframcloud.com"]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Location"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Hyperlink[
               "https://resources.wolframcloud.com/FunctionReposit...", 
                URL[
                "https://resources.wolframcloud.com/FunctionRepository/\
resources/ColorGraphEdges"]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["DocumentationLink"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["ColorGraphVertices", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{201.60000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Function", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["ResourceType"]}, "Item", False], "Mouse"], 
              ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                
                TemplateBox[{
                 "\"ResourceObject\"", "\"[\"", "\"\\\"\"", 
                  "\"ColorGraphVertices\"", "\"\\\"\"", "\"]\""}, 
                 "RowDefault"]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["ResourceObject"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
              "Color the vertices in a graph with no adjacent vertices \
sharing a color", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Description"]}, "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Hyperlink["https://resources.wolframcloud.com", 
                URL["https://resources.wolframcloud.com"]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Location"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Hyperlink[
               "https://resources.wolframcloud.com/FunctionReposit...", 
                URL[
                "https://resources.wolframcloud.com/FunctionRepository/\
resources/ColorGraphVertices"]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["DocumentationLink"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{1081., {46.13403328722343, 51.86596671277657}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{1081., {46.13403328722343, 51.86596671277657}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.877276253656949*^9, 3.877276268648224*^9}},
 CellLabel->"Out[57]=",ExpressionUUID->"044e32cf-c194-4f4d-85db-44594355477b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PersistResourceFunction", "[", 
  RowBox[{"{", "\"\<ColorGraphVertices\>\"", "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.877276270971098*^9, 3.877276284047182*^9}},
 CellLabel->"In[58]:=",ExpressionUUID->"fec78320-b90e-4726-8f44-d2d9a8d7d13f"],

Cell[BoxData[
 RowBox[{"{", 
  InterpretationBox[
   RowBox[{
    TagBox["Success",
     "SummaryHead"], "[", 
    DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
     TemplateBox[{
       PaneSelectorBox[{False -> GridBox[{{
             PaneBox[
              ButtonBox[
               DynamicBox[
                FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
               ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
               BaseStyle -> {}, Evaluator -> Automatic, Method -> 
               "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
              Dynamic[{
                Automatic, 
                 3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])}]], 
             FrameBox[
              StyleBox["\"\[Checkmark]\"", 
               Directive[
                RGBColor[
                0.3607843137254902, 0.596078431372549, 0.3803921568627451], 
                25], StripOnInput -> False], ContentPadding -> False, 
              FrameStyle -> None, FrameMargins -> {{0, 0}, {0, 0}}, 
              StripOnInput -> False], 
             GridBox[{{
                RowBox[{
                  TagBox[
                   TemplateBox[{"\"Message\"", "\": \""}, "RowDefault"], 
                   "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                  TagBox[
                  "\"Successfully stored ColorGraphVertices as an \
initialization symbol.\"", "SummaryItem"]}]}, {
                RowBox[{
                  TagBox[
                   
                   TemplateBox[{"\"PersistenceLocation\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox[
                   InterpretationBox[
                    RowBox[{
                    TagBox["PersistenceLocation", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GraphicsBox[{
                    Thickness[0.04081632653061224], {
                    FaceForm[{
                    RGBColor[0.749, 0.749, 0.749], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGZigAFlBwht7oCLr7ihKGNir7nDlhNl++ZLKUHF
LaC0Ihr/hz2Mv6FksgRL2Dt7VPkH9jDzYHxU+2D8D/Yw/oHvwY+Xzr5jj2oe
DPxA5TfAzGFgiEqxvu/Pa+GAKm/hADMPxkexD843dYDxIe41dUA1z8wB1T4o
n0EVzvcx73RMeKqMJq/scN+/d3peEYIP8z8AUyhEVw==
                    "]]}, {
                    RGBColor[1., 1., 1.], 
                    Opacity[1.], 
                    CapForm["Round"], 
                    JoinForm["Round"], 
                    
                    JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIFIGYC4pASlen/AwwcGMBAxAHM/4Dg7zOYqSWx1dCh
1t40bpeniMP9B9yTVzYZOlhuOVG2T17KIWz+6rU34g0dKl+qGXLoyDkcv7O1
pUbA0OHF75UfL/UqOBx1Wpt576O+gwpb41RnbiWHP6ffnTx8SNchSSDCckuH
skOeScN2BydtB441MlEp1ipw/qdLvkkCEmoOZkBu0yJtiP7TGg6SasGsi4V0
Hc5/D3689LaGw6L0za+KTXUdWl8H7pBr1XXYd1BcLdhV10EeJDBP30Fo6d6D
4mm6UP8YOVx0ufHhC5cGnM/k28Lrv14Jzg8z0FopfEEJrr+oq+/Jp/tKcPPB
7mdShtv/oBCooEgF7r5lQOvULqvA3Q/jw/wHdn+QEtz/geunpHYoK8DDh69w
TfftF9Lw8Hs3dRNP4RopePiuSQgJUleQgoe/V8AfieJwSXj83BL65Hg+TQYe
f2D+MznU+EWKbwBI8b86
                    "], CurveClosed -> {1}]}}, AspectRatio -> Automatic, 
                    ImageSize -> {25., 25.}, 
                    PlotRange -> {{0., 24.5}, {0., 24.5}}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Local\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GraphicsBox[{
                    Thickness[0.04081632653061224], {
                    FaceForm[{
                    RGBColor[0.749, 0.749, 0.749], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGZigAFlBwht7oCLr7ihKGNir7nDlhNl++ZLKUHF
LaC0Ihr/hz2Mv6FksgRL2Dt7VPkH9jDzYHxU+2D8D/Yw/oHvwY+Xzr5jj2oe
DPxA5TfAzGFgiEqxvu/Pa+GAKm/hADMPxkexD843dYDxIe41dUA1z8wB1T4o
n0EVzvcx73RMeKqMJq/scN+/d3peEYIP8z8AUyhEVw==
                    "]]}, {
                    RGBColor[1., 1., 1.], 
                    Opacity[1.], 
                    CapForm["Round"], 
                    JoinForm["Round"], 
                    
                    JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIFIGYC4pASlen/AwwcGMBAxAHM/4Dg7zOYqSWx1dCh
1t40bpeniMP9B9yTVzYZOlhuOVG2T17KIWz+6rU34g0dKl+qGXLoyDkcv7O1
pUbA0OHF75UfL/UqOBx1Wpt576O+gwpb41RnbiWHP6ffnTx8SNchSSDCckuH
skOeScN2BydtB441MlEp1ipw/qdLvkkCEmoOZkBu0yJtiP7TGg6SasGsi4V0
Hc5/D3689LaGw6L0za+KTXUdWl8H7pBr1XXYd1BcLdhV10EeJDBP30Fo6d6D
4mm6UP8YOVx0ufHhC5cGnM/k28Lrv14Jzg8z0FopfEEJrr+oq+/Jp/tKcPPB
7mdShtv/oBCooEgF7r5lQOvULqvA3Q/jw/wHdn+QEtz/geunpHYoK8DDh69w
TfftF9Lw8Hs3dRNP4RopePiuSQgJUleQgoe/V8AfieJwSXj83BL65Hg+TQYe
f2D+MznU+EWKbwBI8b86
                    "], CurveClosed -> {1}]}}, AspectRatio -> Automatic, 
                    ImageSize -> {25., 25.}, 
                    PlotRange -> {{0., 24.5}, {0., 24.5}}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Local\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Base: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    "\"file:///C:/Users/Hannah/AppData/Roaming/Wolfram/\
Objects/Persistence\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                    PersistenceLocation[
                    "Local", 
                    "file:///C:/Users/Hannah/AppData/Roaming/Wolfram/Objects/\
Persistence", 
                    Hold[Persistence`Data`a16937289918179914857$7]], 
                    Selectable -> False, Editable -> False, 
                    SelectWithContents -> True], "SummaryItem"]}]}}, 
              GridBoxAlignment -> {
               "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
              False, GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {
               "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
              BaseStyle -> {
               ShowStringCharacters -> False, NumberMarks -> False, 
                PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
           AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {1, 1}], True -> GridBox[{{
             PaneBox[
              ButtonBox[
               DynamicBox[
                FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
               ButtonFunction :> (Typeset`open$$ = False), Appearance -> None,
                BaseStyle -> {}, Evaluator -> Automatic, Method -> 
               "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
              Dynamic[{
                Automatic, 
                 3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])}]], 
             FrameBox[
              StyleBox["\"\[Checkmark]\"", 
               Directive[
                RGBColor[
                0.3607843137254902, 0.596078431372549, 0.3803921568627451], 
                25], StripOnInput -> False], ContentPadding -> False, 
              FrameStyle -> None, FrameMargins -> {{0, 0}, {0, 0}}, 
              StripOnInput -> False], 
             GridBox[{{
                RowBox[{
                  TagBox[
                   TemplateBox[{"\"Message\"", "\": \""}, "RowDefault"], 
                   "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                  TagBox[
                  "\"Successfully stored ColorGraphVertices as an \
initialization symbol.\"", "SummaryItem"]}]}, {
                RowBox[{
                  TagBox[
                   
                   TemplateBox[{"\"PersistenceLocation\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox[
                   InterpretationBox[
                    RowBox[{
                    TagBox["PersistenceLocation", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GraphicsBox[{
                    Thickness[0.04081632653061224], {
                    FaceForm[{
                    RGBColor[0.749, 0.749, 0.749], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGZigAFlBwht7oCLr7ihKGNir7nDlhNl++ZLKUHF
LaC0Ihr/hz2Mv6FksgRL2Dt7VPkH9jDzYHxU+2D8D/Yw/oHvwY+Xzr5jj2oe
DPxA5TfAzGFgiEqxvu/Pa+GAKm/hADMPxkexD843dYDxIe41dUA1z8wB1T4o
n0EVzvcx73RMeKqMJq/scN+/d3peEYIP8z8AUyhEVw==
                    "]]}, {
                    RGBColor[1., 1., 1.], 
                    Opacity[1.], 
                    CapForm["Round"], 
                    JoinForm["Round"], 
                    
                    JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIFIGYC4pASlen/AwwcGMBAxAHM/4Dg7zOYqSWx1dCh
1t40bpeniMP9B9yTVzYZOlhuOVG2T17KIWz+6rU34g0dKl+qGXLoyDkcv7O1
pUbA0OHF75UfL/UqOBx1Wpt576O+gwpb41RnbiWHP6ffnTx8SNchSSDCckuH
skOeScN2BydtB441MlEp1ipw/qdLvkkCEmoOZkBu0yJtiP7TGg6SasGsi4V0
Hc5/D3689LaGw6L0za+KTXUdWl8H7pBr1XXYd1BcLdhV10EeJDBP30Fo6d6D
4mm6UP8YOVx0ufHhC5cGnM/k28Lrv14Jzg8z0FopfEEJrr+oq+/Jp/tKcPPB
7mdShtv/oBCooEgF7r5lQOvULqvA3Q/jw/wHdn+QEtz/geunpHYoK8DDh69w
TfftF9Lw8Hs3dRNP4RopePiuSQgJUleQgoe/V8AfieJwSXj83BL65Hg+TQYe
f2D+MznU+EWKbwBI8b86
                    "], CurveClosed -> {1}]}}, AspectRatio -> Automatic, 
                    ImageSize -> {25., 25.}, 
                    PlotRange -> {{0., 24.5}, {0., 24.5}}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Local\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GraphicsBox[{
                    Thickness[0.04081632653061224], {
                    FaceForm[{
                    RGBColor[0.749, 0.749, 0.749], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGZigAFlBwht7oCLr7ihKGNir7nDlhNl++ZLKUHF
LaC0Ihr/hz2Mv6FksgRL2Dt7VPkH9jDzYHxU+2D8D/Yw/oHvwY+Xzr5jj2oe
DPxA5TfAzGFgiEqxvu/Pa+GAKm/hADMPxkexD843dYDxIe41dUA1z8wB1T4o
n0EVzvcx73RMeKqMJq/scN+/d3peEYIP8z8AUyhEVw==
                    "]]}, {
                    RGBColor[1., 1., 1.], 
                    Opacity[1.], 
                    CapForm["Round"], 
                    JoinForm["Round"], 
                    
                    JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIFIGYC4pASlen/AwwcGMBAxAHM/4Dg7zOYqSWx1dCh
1t40bpeniMP9B9yTVzYZOlhuOVG2T17KIWz+6rU34g0dKl+qGXLoyDkcv7O1
pUbA0OHF75UfL/UqOBx1Wpt576O+gwpb41RnbiWHP6ffnTx8SNchSSDCckuH
skOeScN2BydtB441MlEp1ipw/qdLvkkCEmoOZkBu0yJtiP7TGg6SasGsi4V0
Hc5/D3689LaGw6L0za+KTXUdWl8H7pBr1XXYd1BcLdhV10EeJDBP30Fo6d6D
4mm6UP8YOVx0ufHhC5cGnM/k28Lrv14Jzg8z0FopfEEJrr+oq+/Jp/tKcPPB
7mdShtv/oBCooEgF7r5lQOvULqvA3Q/jw/wHdn+QEtz/geunpHYoK8DDh69w
TfftF9Lw8Hs3dRNP4RopePiuSQgJUleQgoe/V8AfieJwSXj83BL65Hg+TQYe
f2D+MznU+EWKbwBI8b86
                    "], CurveClosed -> {1}]}}, AspectRatio -> Automatic, 
                    ImageSize -> {25., 25.}, 
                    PlotRange -> {{0., 24.5}, {0., 24.5}}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Local\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Base: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    "\"file:///C:/Users/Hannah/AppData/Roaming/Wolfram/\
Objects/Persistence\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                    PersistenceLocation[
                    "Local", 
                    "file:///C:/Users/Hannah/AppData/Roaming/Wolfram/Objects/\
Persistence", 
                    Hold[Persistence`Data`a16937289918179914857$7]], 
                    Selectable -> False, Editable -> False, 
                    SelectWithContents -> True], "SummaryItem"]}]}, {
                RowBox[{
                  TagBox[
                   TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                   "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                  TagBox["\"InstalledResourceFunction\"", "SummaryItem"]}]}}, 
              GridBoxAlignment -> {
               "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
              False, GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {
               "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
              BaseStyle -> {
               ShowStringCharacters -> False, NumberMarks -> False, 
                PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
           AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {1, 1}]}, 
        Dynamic[Typeset`open$$], ImageSize -> Automatic]},
      "SummaryPanel"],
     DynamicModuleValues:>{}], "]"}],
   Success[
   "InstalledResourceFunction", <|
    "MessageTemplate" :> 
     "Successfully stored `symName` as an initialization symbol.", 
     "MessageParameters" -> <|"symName" -> "ColorGraphVertices"|>, 
     "PersistenceLocation" -> 
     PersistenceLocation[
      "Local", "file:///C:/Users/Hannah/AppData/Roaming/Wolfram/Objects/\
Persistence", 
       Hold[Persistence`Data`a16937289918179914857$7]]|>],
   Editable->False,
   SelectWithContents->True,
   Selectable->False], "}"}]], "Output",
 CellChangeTimes->{3.8772762852762136`*^9},
 CellLabel->"Out[58]=",ExpressionUUID->"ea4ffc2b-e99b-45d5-b390-69ee881abe42"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ColorGraphVertices", "[", 
  RowBox[{"GraphData", "[", "\"\<ContiguousUSAGraph\>\"", "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8772762855262437`*^9, 3.8772762910937986`*^9}},
 CellLabel->"In[59]:=",ExpressionUUID->"cce883ae-2892-4521-a4b6-d5d2346c62ad"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
       20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37,
       38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49}, {Null, 
       SparseArray[
       Automatic, {49, 49}, 0, {
        1, {{0, 4, 6, 11, 15, 23, 29, 32, 40, 46, 50, 54, 57, 61, 66, 71, 75, 
          81, 85, 91, 97, 100, 105, 110, 112, 114, 119, 125, 128, 131, 137, 
          141, 143, 149, 154, 158, 164, 168, 174, 178, 180, 184, 191, 194, 
          199, 204, 207, 210, 211, 214}, {{2}, {3}, {4}, {5}, {1}, {3}, {1}, {
          2}, {5}, {31}, {32}, {1}, {5}, {6}, {7}, {1}, {3}, {4}, {6}, {8}, {
          27}, {31}, {42}, {4}, {5}, {7}, {8}, {9}, {10}, {4}, {6}, {10}, {
          5}, {6}, {9}, {18}, {19}, {33}, {34}, {42}, {6}, {8}, {10}, {13}, {
          17}, {18}, {6}, {7}, {9}, {13}, {12}, {13}, {14}, {15}, {11}, {
          14}, {16}, {9}, {10}, {11}, {17}, {11}, {12}, {15}, {16}, {38}, {
          11}, {14}, {17}, {20}, {38}, {12}, {14}, {38}, {40}, {9}, {13}, {
          15}, {18}, {19}, {20}, {8}, {9}, {17}, {19}, {8}, {17}, {18}, {
          20}, {33}, {36}, {15}, {17}, {19}, {36}, {38}, {39}, {22}, {23}, {
          24}, {21}, {23}, {24}, {46}, {47}, {21}, {22}, {29}, {30}, {47}, {
          21}, {22}, {26}, {27}, {25}, {27}, {28}, {30}, {45}, {5}, {25}, {
          26}, {31}, {42}, {45}, {26}, {29}, {30}, {23}, {28}, {30}, {23}, {
          26}, {28}, {29}, {44}, {45}, {3}, {5}, {27}, {32}, {3}, {31}, {8}, {
          19}, {34}, {35}, {36}, {37}, {8}, {33}, {37}, {41}, {42}, {33}, {
          36}, {37}, {49}, {19}, {20}, {33}, {35}, {39}, {49}, {33}, {34}, {
          35}, {43}, {14}, {15}, {16}, {20}, {39}, {40}, {20}, {36}, {38}, {
          49}, {16}, {38}, {34}, {42}, {43}, {44}, {5}, {8}, {27}, {34}, {
          41}, {44}, {45}, {37}, {41}, {44}, {30}, {41}, {42}, {43}, {45}, {
          26}, {27}, {30}, {42}, {44}, {22}, {47}, {48}, {22}, {23}, {46}, {
          46}, {35}, {36}, {39}}}, Pattern}]}, {
      VertexStyle -> {
        48 -> RGBColor[0.97, 0.606, 0.081], 5 -> RGBColor[0.97, 0.606, 0.081],
          15 -> RGBColor[0.97, 0.606, 0.081], 22 -> 
         RGBColor[0.97, 0.606, 0.081], 9 -> RGBColor[0.97, 0.606, 0.081], 46 -> 
         RGBColor[0.34398, 0.49112, 0.89936], 36 -> 
         RGBColor[0.34398, 0.49112, 0.89936], 14 -> 
         RGBColor[0.91, 0.318, 0.243], 19 -> RGBColor[0.97, 0.606, 0.081], 6 -> 
         RGBColor[0.91, 0.318, 0.243], 26 -> RGBColor[0.448, 0.69232, 0.1538],
          18 -> RGBColor[0.91, 0.318, 0.243], 2 -> 
         RGBColor[0.97, 0.606, 0.081], 38 -> 
         RGBColor[0.34398, 0.49112, 0.89936], 12 -> 
         RGBColor[0.448, 0.69232, 0.1538], 17 -> 
         RGBColor[0.34398, 0.49112, 0.89936], 47 -> 
         RGBColor[0.91, 0.318, 0.243], 31 -> RGBColor[0.91, 0.318, 0.243], 34 -> 
         RGBColor[0.97, 0.606, 0.081], 7 -> RGBColor[0.97, 0.606, 0.081], 37 -> 
         RGBColor[0.34398, 0.49112, 0.89936], 39 -> 
         RGBColor[0.97, 0.606, 0.081], 10 -> 
         RGBColor[0.34398, 0.49112, 0.89936], 24 -> 
         RGBColor[0.34398, 0.49112, 0.89936], 44 -> 
         RGBColor[0.34398, 0.49112, 0.89936], 30 -> 
         RGBColor[0.91, 0.318, 0.243], 8 -> 
         RGBColor[0.34398, 0.49112, 0.89936], 33 -> 
         RGBColor[0.91, 0.318, 0.243], 11 -> 
         RGBColor[0.34398, 0.49112, 0.89936], 13 -> 
         RGBColor[0.91, 0.318, 0.243], 29 -> RGBColor[0.97, 0.606, 0.081], 1 -> 
         RGBColor[0.91, 0.318, 0.243], 43 -> RGBColor[0.97, 0.606, 0.081], 3 -> 
         RGBColor[0.34398, 0.49112, 0.89936], 21 -> 
         RGBColor[0.91, 0.318, 0.243], 27 -> 
         RGBColor[0.34398, 0.49112, 0.89936], 28 -> 
         RGBColor[0.34398, 0.49112, 0.89936], 25 -> 
         RGBColor[0.97, 0.606, 0.081], 4 -> 
         RGBColor[0.34398, 0.49112, 0.89936], 32 -> 
         RGBColor[0.97, 0.606, 0.081], 16 -> RGBColor[0.97, 0.606, 0.081], 49 -> 
         RGBColor[0.91, 0.318, 0.243], 42 -> RGBColor[0.91, 0.318, 0.243], 40 -> 
         RGBColor[0.91, 0.318, 0.243], 35 -> RGBColor[0.97, 0.606, 0.081], 41 -> 
         RGBColor[0.448, 0.69232, 0.1538], 45 -> RGBColor[0.97, 0.606, 0.081],
          20 -> RGBColor[0.91, 0.318, 0.243], 23 -> 
         RGBColor[0.34398, 0.49112, 0.89936]}, 
       VertexCoordinates -> {{7, 1}, {8, 0}, {8, 1}, {6, 1}, {7, 2}, {5, 2}, {
        5, 1}, {5, 3}, {4, 2}, {4, 1}, {2, 2}, {0, 3}, {3, 2}, {1, 3}, {2, 
        3}, {1, 4}, {3, 3}, {4, 3}, {4, 4}, {3, 4}, {11, 4}, {11, 5}, {10, 
        5}, {12, 4}, {9, 2}, {9, 3}, {8, 2}, {10, 3}, {10, 4}, {9, 4}, {9, 
        1}, {9, 0}, {5, 4}, {6, 4}, {5, 5}, {4, 5}, {6, 5}, {2, 4}, {3, 5}, {
        1, 5}, {7, 4}, {7, 3}, {7, 5}, {8, 4}, {8, 3}, {11, 6}, {10, 6}, {12, 
        6}, {4, 6}}}]]}, 
    TagBox[GraphicsGroupBox[GraphicsComplexBox[CompressedData["
1:eJx1kjEOgzAMRa1OGTNkYGAwKEKsPUFzhh6hEjNX5wgUhd+KJ2IJWc//m9iB
4bO+l4eZPb/PkWv0pebtVbMXu4RD78DqtzOnBssvDmeO8Ef4DbpC/QG6+lgP
0CPqnIfcqk8N1p4ZPMM/Yk6xznHoGbqY7yNr7995dp1L/g6cyr0vwc/vzvtq
/Qc9/OIAlt/hd/h1/5org2fwf+8dO2soag==
       "], {
        {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
         ArrowBox[{{1, 2}, {1, 3}, {1, 4}, {1, 5}, {2, 3}, {3, 5}, {3, 31}, {
          3, 32}, {4, 5}, {4, 6}, {4, 7}, {5, 6}, {5, 8}, {5, 27}, {5, 31}, {
          5, 42}, {6, 7}, {6, 8}, {6, 9}, {6, 10}, {7, 10}, {8, 9}, {8, 18}, {
          8, 19}, {8, 33}, {8, 34}, {8, 42}, {9, 10}, {9, 13}, {9, 17}, {9, 
          18}, {10, 13}, {11, 12}, {11, 13}, {11, 14}, {11, 15}, {12, 14}, {
          12, 16}, {13, 17}, {14, 15}, {14, 16}, {14, 38}, {15, 17}, {15, 
          20}, {15, 38}, {16, 38}, {16, 40}, {17, 18}, {17, 19}, {17, 20}, {
          18, 19}, {19, 20}, {19, 33}, {19, 36}, {20, 36}, {20, 38}, {20, 
          39}, {21, 22}, {21, 23}, {21, 24}, {22, 23}, {22, 24}, {22, 46}, {
          22, 47}, {23, 29}, {23, 30}, {23, 47}, {25, 26}, {25, 27}, {26, 
          27}, {26, 28}, {26, 30}, {26, 45}, {27, 31}, {27, 42}, {27, 45}, {
          28, 29}, {28, 30}, {29, 30}, {30, 44}, {30, 45}, {31, 32}, {33, 
          34}, {33, 35}, {33, 36}, {33, 37}, {34, 37}, {34, 41}, {34, 42}, {
          35, 36}, {35, 37}, {35, 49}, {36, 39}, {36, 49}, {37, 43}, {38, 
          39}, {38, 40}, {39, 49}, {41, 42}, {41, 43}, {41, 44}, {42, 44}, {
          42, 45}, {43, 44}, {44, 45}, {46, 47}, {46, 48}}, 
          0.07217898832684824]}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         {RGBColor[0.91, 0.318, 0.243], DiskBox[1, 0.07217898832684824]}, 
         {RGBColor[0.97, 0.606, 0.081], DiskBox[2, 0.07217898832684824]}, 
         {RGBColor[0.34398, 0.49112, 0.89936], 
          DiskBox[3, 0.07217898832684824]}, 
         {RGBColor[0.34398, 0.49112, 0.89936], 
          DiskBox[4, 0.07217898832684824]}, 
         {RGBColor[0.97, 0.606, 0.081], DiskBox[5, 0.07217898832684824]}, 
         {RGBColor[0.91, 0.318, 0.243], DiskBox[6, 0.07217898832684824]}, 
         {RGBColor[0.97, 0.606, 0.081], DiskBox[7, 0.07217898832684824]}, 
         {RGBColor[0.34398, 0.49112, 0.89936], 
          DiskBox[8, 0.07217898832684824]}, 
         {RGBColor[0.97, 0.606, 0.081], DiskBox[9, 0.07217898832684824]}, 
         {RGBColor[0.34398, 0.49112, 0.89936], 
          DiskBox[10, 0.07217898832684824]}, 
         {RGBColor[0.34398, 0.49112, 0.89936], 
          DiskBox[11, 0.07217898832684824]}, 
         {RGBColor[0.448, 0.69232, 0.1538], DiskBox[12, 0.07217898832684824]}, 
         {RGBColor[0.91, 0.318, 0.243], DiskBox[13, 0.07217898832684824]}, 
         {RGBColor[0.91, 0.318, 0.243], DiskBox[14, 0.07217898832684824]}, 
         {RGBColor[0.97, 0.606, 0.081], DiskBox[15, 0.07217898832684824]}, 
         {RGBColor[0.97, 0.606, 0.081], DiskBox[16, 0.07217898832684824]}, 
         {RGBColor[0.34398, 0.49112, 0.89936], 
          DiskBox[17, 0.07217898832684824]}, 
         {RGBColor[0.91, 0.318, 0.243], DiskBox[18, 0.07217898832684824]}, 
         {RGBColor[0.97, 0.606, 0.081], DiskBox[19, 0.07217898832684824]}, 
         {RGBColor[0.91, 0.318, 0.243], DiskBox[20, 0.07217898832684824]}, 
         {RGBColor[0.91, 0.318, 0.243], DiskBox[21, 0.07217898832684824]}, 
         {RGBColor[0.97, 0.606, 0.081], DiskBox[22, 0.07217898832684824]}, 
         {RGBColor[0.34398, 0.49112, 0.89936], 
          DiskBox[23, 0.07217898832684824]}, 
         {RGBColor[0.34398, 0.49112, 0.89936], 
          DiskBox[24, 0.07217898832684824]}, 
         {RGBColor[0.97, 0.606, 0.081], DiskBox[25, 0.07217898832684824]}, 
         {RGBColor[0.448, 0.69232, 0.1538], DiskBox[26, 0.07217898832684824]}, 
         {RGBColor[0.34398, 0.49112, 0.89936], 
          DiskBox[27, 0.07217898832684824]}, 
         {RGBColor[0.34398, 0.49112, 0.89936], 
          DiskBox[28, 0.07217898832684824]}, 
         {RGBColor[0.97, 0.606, 0.081], DiskBox[29, 0.07217898832684824]}, 
         {RGBColor[0.91, 0.318, 0.243], DiskBox[30, 0.07217898832684824]}, 
         {RGBColor[0.91, 0.318, 0.243], DiskBox[31, 0.07217898832684824]}, 
         {RGBColor[0.97, 0.606, 0.081], DiskBox[32, 0.07217898832684824]}, 
         {RGBColor[0.91, 0.318, 0.243], DiskBox[33, 0.07217898832684824]}, 
         {RGBColor[0.97, 0.606, 0.081], DiskBox[34, 0.07217898832684824]}, 
         {RGBColor[0.97, 0.606, 0.081], DiskBox[35, 0.07217898832684824]}, 
         {RGBColor[0.34398, 0.49112, 0.89936], 
          DiskBox[36, 0.07217898832684824]}, 
         {RGBColor[0.34398, 0.49112, 0.89936], 
          DiskBox[37, 0.07217898832684824]}, 
         {RGBColor[0.34398, 0.49112, 0.89936], 
          DiskBox[38, 0.07217898832684824]}, 
         {RGBColor[0.97, 0.606, 0.081], DiskBox[39, 0.07217898832684824]}, 
         {RGBColor[0.91, 0.318, 0.243], DiskBox[40, 0.07217898832684824]}, 
         {RGBColor[0.448, 0.69232, 0.1538], DiskBox[41, 0.07217898832684824]}, 
         {RGBColor[0.91, 0.318, 0.243], DiskBox[42, 0.07217898832684824]}, 
         {RGBColor[0.97, 0.606, 0.081], DiskBox[43, 0.07217898832684824]}, 
         {RGBColor[0.34398, 0.49112, 0.89936], 
          DiskBox[44, 0.07217898832684824]}, 
         {RGBColor[0.97, 0.606, 0.081], DiskBox[45, 0.07217898832684824]}, 
         {RGBColor[0.34398, 0.49112, 0.89936], 
          DiskBox[46, 0.07217898832684824]}, 
         {RGBColor[0.91, 0.318, 0.243], DiskBox[47, 0.07217898832684824]}, 
         {RGBColor[0.97, 0.606, 0.081], DiskBox[48, 0.07217898832684824]}, 
         {RGBColor[0.91, 0.318, 0.243], DiskBox[49, 0.07217898832684824]}}}]],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->"NetworkGraphics",
  FormatType->TraditionalForm,
  FrameTicks->None]], "Output",
 CellChangeTimes->{3.877276291390667*^9},
 CellLabel->"Out[59]=",ExpressionUUID->"0d2f4930-86c1-4d62-80da-87d5c2e6bb56"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ColorGraphVertices", "[", 
  RowBox[{
   RowBox[{"GraphData", "[", "\"\<ContiguousUSAGraph\>\"", "]"}], ",", 
   RowBox[{"ImageSize", "->", "Large"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8772762855262437`*^9, 3.877276303617014*^9}},
 CellLabel->"In[60]:=",ExpressionUUID->"add4b26e-094f-48bc-b33e-d319ca88f570"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
       20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37,
       38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49}, {Null, 
       SparseArray[
       Automatic, {49, 49}, 0, {
        1, {{0, 4, 6, 11, 15, 23, 29, 32, 40, 46, 50, 54, 57, 61, 66, 71, 75, 
          81, 85, 91, 97, 100, 105, 110, 112, 114, 119, 125, 128, 131, 137, 
          141, 143, 149, 154, 158, 164, 168, 174, 178, 180, 184, 191, 194, 
          199, 204, 207, 210, 211, 214}, {{2}, {3}, {4}, {5}, {1}, {3}, {1}, {
          2}, {5}, {31}, {32}, {1}, {5}, {6}, {7}, {1}, {3}, {4}, {6}, {8}, {
          27}, {31}, {42}, {4}, {5}, {7}, {8}, {9}, {10}, {4}, {6}, {10}, {
          5}, {6}, {9}, {18}, {19}, {33}, {34}, {42}, {6}, {8}, {10}, {13}, {
          17}, {18}, {6}, {7}, {9}, {13}, {12}, {13}, {14}, {15}, {11}, {
          14}, {16}, {9}, {10}, {11}, {17}, {11}, {12}, {15}, {16}, {38}, {
          11}, {14}, {17}, {20}, {38}, {12}, {14}, {38}, {40}, {9}, {13}, {
          15}, {18}, {19}, {20}, {8}, {9}, {17}, {19}, {8}, {17}, {18}, {
          20}, {33}, {36}, {15}, {17}, {19}, {36}, {38}, {39}, {22}, {23}, {
          24}, {21}, {23}, {24}, {46}, {47}, {21}, {22}, {29}, {30}, {47}, {
          21}, {22}, {26}, {27}, {25}, {27}, {28}, {30}, {45}, {5}, {25}, {
          26}, {31}, {42}, {45}, {26}, {29}, {30}, {23}, {28}, {30}, {23}, {
          26}, {28}, {29}, {44}, {45}, {3}, {5}, {27}, {32}, {3}, {31}, {8}, {
          19}, {34}, {35}, {36}, {37}, {8}, {33}, {37}, {41}, {42}, {33}, {
          36}, {37}, {49}, {19}, {20}, {33}, {35}, {39}, {49}, {33}, {34}, {
          35}, {43}, {14}, {15}, {16}, {20}, {39}, {40}, {20}, {36}, {38}, {
          49}, {16}, {38}, {34}, {42}, {43}, {44}, {5}, {8}, {27}, {34}, {
          41}, {44}, {45}, {37}, {41}, {44}, {30}, {41}, {42}, {43}, {45}, {
          26}, {27}, {30}, {42}, {44}, {22}, {47}, {48}, {22}, {23}, {46}, {
          46}, {35}, {36}, {39}}}, Pattern}]}, {
      GraphLayout -> {"Dimension" -> 2}, ImageSize -> Large, 
       VertexCoordinates -> {{7, 1}, {8, 0}, {8, 1}, {6, 1}, {7, 2}, {5, 2}, {
        5, 1}, {5, 3}, {4, 2}, {4, 1}, {2, 2}, {0, 3}, {3, 2}, {1, 3}, {2, 
        3}, {1, 4}, {3, 3}, {4, 3}, {4, 4}, {3, 4}, {11, 4}, {11, 5}, {10, 
        5}, {12, 4}, {9, 2}, {9, 3}, {8, 2}, {10, 3}, {10, 4}, {9, 4}, {9, 
        1}, {9, 0}, {5, 4}, {6, 4}, {5, 5}, {4, 5}, {6, 5}, {2, 4}, {3, 5}, {
        1, 5}, {7, 4}, {7, 3}, {7, 5}, {8, 4}, {8, 3}, {11, 6}, {10, 6}, {12, 
        6}, {4, 6}}, 
       VertexStyle -> {
        20 -> RGBColor[0.91, 0.318, 0.243], 3 -> 
         RGBColor[0.34398, 0.49112, 0.89936], 28 -> 
         RGBColor[0.97, 0.606, 0.081], 1 -> RGBColor[0.91, 0.318, 0.243], 23 -> 
         RGBColor[0.97, 0.606, 0.081], 2 -> RGBColor[0.97, 0.606, 0.081], 41 -> 
         RGBColor[0.34398, 0.49112, 0.89936], 43 -> 
         RGBColor[0.97, 0.606, 0.081], 14 -> RGBColor[0.91, 0.318, 0.243], 36 -> 
         RGBColor[0.34398, 0.49112, 0.89936], 13 -> 
         RGBColor[0.91, 0.318, 0.243], 49 -> RGBColor[0.91, 0.318, 0.243], 16 -> 
         RGBColor[0.97, 0.606, 0.081], 46 -> RGBColor[0.97, 0.606, 0.081], 15 -> 
         RGBColor[0.97, 0.606, 0.081], 47 -> RGBColor[0.91, 0.318, 0.243], 21 -> 
         RGBColor[0.91, 0.318, 0.243], 9 -> RGBColor[0.97, 0.606, 0.081], 40 -> 
         RGBColor[0.91, 0.318, 0.243], 33 -> RGBColor[0.91, 0.318, 0.243], 26 -> 
         RGBColor[0.91, 0.318, 0.243], 38 -> 
         RGBColor[0.34398, 0.49112, 0.89936], 4 -> 
         RGBColor[0.34398, 0.49112, 0.89936], 7 -> 
         RGBColor[0.97, 0.606, 0.081], 48 -> 
         RGBColor[0.34398, 0.49112, 0.89936], 5 -> 
         RGBColor[0.97, 0.606, 0.081], 12 -> RGBColor[0.448, 0.69232, 0.1538],
          6 -> RGBColor[0.91, 0.318, 0.243], 27 -> 
         RGBColor[0.34398, 0.49112, 0.89936], 42 -> 
         RGBColor[0.91, 0.318, 0.243], 44 -> RGBColor[0.448, 0.69232, 0.1538],
          22 -> RGBColor[0.34398, 0.49112, 0.89936], 31 -> 
         RGBColor[0.91, 0.318, 0.243], 35 -> RGBColor[0.97, 0.606, 0.081], 17 -> 
         RGBColor[0.34398, 0.49112, 0.89936], 19 -> 
         RGBColor[0.97, 0.606, 0.081], 10 -> 
         RGBColor[0.34398, 0.49112, 0.89936], 37 -> 
         RGBColor[0.34398, 0.49112, 0.89936], 45 -> 
         RGBColor[0.97, 0.606, 0.081], 18 -> RGBColor[0.91, 0.318, 0.243], 11 -> 
         RGBColor[0.34398, 0.49112, 0.89936], 30 -> 
         RGBColor[0.34398, 0.49112, 0.89936], 25 -> 
         RGBColor[0.97, 0.606, 0.081], 24 -> RGBColor[0.97, 0.606, 0.081], 32 -> 
         RGBColor[0.97, 0.606, 0.081], 39 -> RGBColor[0.97, 0.606, 0.081], 8 -> 
         RGBColor[0.34398, 0.49112, 0.89936], 29 -> 
         RGBColor[0.91, 0.318, 0.243], 34 -> 
         RGBColor[0.97, 0.606, 0.081]}}]]}, 
    TagBox[GraphicsGroupBox[GraphicsComplexBox[CompressedData["
1:eJx1kjEOgzAMRa1OGTNkYGAwKEKsPUFzhh6hEjNX5wgUhd+KJ2IJWc//m9iB
4bO+l4eZPb/PkWv0pebtVbMXu4RD78DqtzOnBssvDmeO8Ef4DbpC/QG6+lgP
0CPqnIfcqk8N1p4ZPMM/Yk6xznHoGbqY7yNr7995dp1L/g6cyr0vwc/vzvtq
/Qc9/OIAlt/hd/h1/5org2fwf+8dO2soag==
       "], {
        {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
         ArrowBox[{{1, 2}, {1, 3}, {1, 4}, {1, 5}, {2, 3}, {3, 5}, {3, 31}, {
          3, 32}, {4, 5}, {4, 6}, {4, 7}, {5, 6}, {5, 8}, {5, 27}, {5, 31}, {
          5, 42}, {6, 7}, {6, 8}, {6, 9}, {6, 10}, {7, 10}, {8, 9}, {8, 18}, {
          8, 19}, {8, 33}, {8, 34}, {8, 42}, {9, 10}, {9, 13}, {9, 17}, {9, 
          18}, {10, 13}, {11, 12}, {11, 13}, {11, 14}, {11, 15}, {12, 14}, {
          12, 16}, {13, 17}, {14, 15}, {14, 16}, {14, 38}, {15, 17}, {15, 
          20}, {15, 38}, {16, 38}, {16, 40}, {17, 18}, {17, 19}, {17, 20}, {
          18, 19}, {19, 20}, {19, 33}, {19, 36}, {20, 36}, {20, 38}, {20, 
          39}, {21, 22}, {21, 23}, {21, 24}, {22, 23}, {22, 24}, {22, 46}, {
          22, 47}, {23, 29}, {23, 30}, {23, 47}, {25, 26}, {25, 27}, {26, 
          27}, {26, 28}, {26, 30}, {26, 45}, {27, 31}, {27, 42}, {27, 45}, {
          28, 29}, {28, 30}, {29, 30}, {30, 44}, {30, 45}, {31, 32}, {33, 
          34}, {33, 35}, {33, 36}, {33, 37}, {34, 37}, {34, 41}, {34, 42}, {
          35, 36}, {35, 37}, {35, 49}, {36, 39}, {36, 49}, {37, 43}, {38, 
          39}, {38, 40}, {39, 49}, {41, 42}, {41, 43}, {41, 44}, {42, 44}, {
          42, 45}, {43, 44}, {44, 45}, {46, 47}, {46, 48}}, 
          0.07217898832684824]}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         {RGBColor[0.91, 0.318, 0.243], DiskBox[1, 0.07217898832684824]}, 
         {RGBColor[0.97, 0.606, 0.081], DiskBox[2, 0.07217898832684824]}, 
         {RGBColor[0.34398, 0.49112, 0.89936], 
          DiskBox[3, 0.07217898832684824]}, 
         {RGBColor[0.34398, 0.49112, 0.89936], 
          DiskBox[4, 0.07217898832684824]}, 
         {RGBColor[0.97, 0.606, 0.081], DiskBox[5, 0.07217898832684824]}, 
         {RGBColor[0.91, 0.318, 0.243], DiskBox[6, 0.07217898832684824]}, 
         {RGBColor[0.97, 0.606, 0.081], DiskBox[7, 0.07217898832684824]}, 
         {RGBColor[0.34398, 0.49112, 0.89936], 
          DiskBox[8, 0.07217898832684824]}, 
         {RGBColor[0.97, 0.606, 0.081], DiskBox[9, 0.07217898832684824]}, 
         {RGBColor[0.34398, 0.49112, 0.89936], 
          DiskBox[10, 0.07217898832684824]}, 
         {RGBColor[0.34398, 0.49112, 0.89936], 
          DiskBox[11, 0.07217898832684824]}, 
         {RGBColor[0.448, 0.69232, 0.1538], DiskBox[12, 0.07217898832684824]}, 
         {RGBColor[0.91, 0.318, 0.243], DiskBox[13, 0.07217898832684824]}, 
         {RGBColor[0.91, 0.318, 0.243], DiskBox[14, 0.07217898832684824]}, 
         {RGBColor[0.97, 0.606, 0.081], DiskBox[15, 0.07217898832684824]}, 
         {RGBColor[0.97, 0.606, 0.081], DiskBox[16, 0.07217898832684824]}, 
         {RGBColor[0.34398, 0.49112, 0.89936], 
          DiskBox[17, 0.07217898832684824]}, 
         {RGBColor[0.91, 0.318, 0.243], DiskBox[18, 0.07217898832684824]}, 
         {RGBColor[0.97, 0.606, 0.081], DiskBox[19, 0.07217898832684824]}, 
         {RGBColor[0.91, 0.318, 0.243], DiskBox[20, 0.07217898832684824]}, 
         {RGBColor[0.91, 0.318, 0.243], DiskBox[21, 0.07217898832684824]}, 
         {RGBColor[0.34398, 0.49112, 0.89936], 
          DiskBox[22, 0.07217898832684824]}, 
         {RGBColor[0.97, 0.606, 0.081], DiskBox[23, 0.07217898832684824]}, 
         {RGBColor[0.97, 0.606, 0.081], DiskBox[24, 0.07217898832684824]}, 
         {RGBColor[0.97, 0.606, 0.081], DiskBox[25, 0.07217898832684824]}, 
         {RGBColor[0.91, 0.318, 0.243], DiskBox[26, 0.07217898832684824]}, 
         {RGBColor[0.34398, 0.49112, 0.89936], 
          DiskBox[27, 0.07217898832684824]}, 
         {RGBColor[0.97, 0.606, 0.081], DiskBox[28, 0.07217898832684824]}, 
         {RGBColor[0.91, 0.318, 0.243], DiskBox[29, 0.07217898832684824]}, 
         {RGBColor[0.34398, 0.49112, 0.89936], 
          DiskBox[30, 0.07217898832684824]}, 
         {RGBColor[0.91, 0.318, 0.243], DiskBox[31, 0.07217898832684824]}, 
         {RGBColor[0.97, 0.606, 0.081], DiskBox[32, 0.07217898832684824]}, 
         {RGBColor[0.91, 0.318, 0.243], DiskBox[33, 0.07217898832684824]}, 
         {RGBColor[0.97, 0.606, 0.081], DiskBox[34, 0.07217898832684824]}, 
         {RGBColor[0.97, 0.606, 0.081], DiskBox[35, 0.07217898832684824]}, 
         {RGBColor[0.34398, 0.49112, 0.89936], 
          DiskBox[36, 0.07217898832684824]}, 
         {RGBColor[0.34398, 0.49112, 0.89936], 
          DiskBox[37, 0.07217898832684824]}, 
         {RGBColor[0.34398, 0.49112, 0.89936], 
          DiskBox[38, 0.07217898832684824]}, 
         {RGBColor[0.97, 0.606, 0.081], DiskBox[39, 0.07217898832684824]}, 
         {RGBColor[0.91, 0.318, 0.243], DiskBox[40, 0.07217898832684824]}, 
         {RGBColor[0.34398, 0.49112, 0.89936], 
          DiskBox[41, 0.07217898832684824]}, 
         {RGBColor[0.91, 0.318, 0.243], DiskBox[42, 0.07217898832684824]}, 
         {RGBColor[0.97, 0.606, 0.081], DiskBox[43, 0.07217898832684824]}, 
         {RGBColor[0.448, 0.69232, 0.1538], DiskBox[44, 0.07217898832684824]}, 
         {RGBColor[0.97, 0.606, 0.081], DiskBox[45, 0.07217898832684824]}, 
         {RGBColor[0.97, 0.606, 0.081], DiskBox[46, 0.07217898832684824]}, 
         {RGBColor[0.91, 0.318, 0.243], DiskBox[47, 0.07217898832684824]}, 
         {RGBColor[0.34398, 0.49112, 0.89936], 
          DiskBox[48, 0.07217898832684824]}, 
         {RGBColor[0.91, 0.318, 0.243], DiskBox[49, 0.07217898832684824]}}}]],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->"NetworkGraphics",
  FormatType->TraditionalForm,
  FrameTicks->None,
  ImageSize->Large]], "Output",
 CellChangeTimes->{3.877276303976385*^9},
 CellLabel->"Out[60]=",ExpressionUUID->"b1772741-29a2-4760-b65a-5703f55ffbca"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ColorGraphVertices", "[", 
  RowBox[{
   RowBox[{"GraphData", "[", "\"\<ContiguousUSAGraph\>\"", "]"}], ",", 
   RowBox[{"ImageSize", "->", "Full"}], ",", 
   RowBox[{"VertexSize", "->", "Large"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8772762855262437`*^9, 3.8772763548050184`*^9}},
 CellLabel->"In[63]:=",ExpressionUUID->"435bffee-dc2c-4f22-b693-f2c464a0f8ef"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
       20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37,
       38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49}, {Null, 
       SparseArray[
       Automatic, {49, 49}, 0, {
        1, {{0, 4, 6, 11, 15, 23, 29, 32, 40, 46, 50, 54, 57, 61, 66, 71, 75, 
          81, 85, 91, 97, 100, 105, 110, 112, 114, 119, 125, 128, 131, 137, 
          141, 143, 149, 154, 158, 164, 168, 174, 178, 180, 184, 191, 194, 
          199, 204, 207, 210, 211, 214}, {{2}, {3}, {4}, {5}, {1}, {3}, {1}, {
          2}, {5}, {31}, {32}, {1}, {5}, {6}, {7}, {1}, {3}, {4}, {6}, {8}, {
          27}, {31}, {42}, {4}, {5}, {7}, {8}, {9}, {10}, {4}, {6}, {10}, {
          5}, {6}, {9}, {18}, {19}, {33}, {34}, {42}, {6}, {8}, {10}, {13}, {
          17}, {18}, {6}, {7}, {9}, {13}, {12}, {13}, {14}, {15}, {11}, {
          14}, {16}, {9}, {10}, {11}, {17}, {11}, {12}, {15}, {16}, {38}, {
          11}, {14}, {17}, {20}, {38}, {12}, {14}, {38}, {40}, {9}, {13}, {
          15}, {18}, {19}, {20}, {8}, {9}, {17}, {19}, {8}, {17}, {18}, {
          20}, {33}, {36}, {15}, {17}, {19}, {36}, {38}, {39}, {22}, {23}, {
          24}, {21}, {23}, {24}, {46}, {47}, {21}, {22}, {29}, {30}, {47}, {
          21}, {22}, {26}, {27}, {25}, {27}, {28}, {30}, {45}, {5}, {25}, {
          26}, {31}, {42}, {45}, {26}, {29}, {30}, {23}, {28}, {30}, {23}, {
          26}, {28}, {29}, {44}, {45}, {3}, {5}, {27}, {32}, {3}, {31}, {8}, {
          19}, {34}, {35}, {36}, {37}, {8}, {33}, {37}, {41}, {42}, {33}, {
          36}, {37}, {49}, {19}, {20}, {33}, {35}, {39}, {49}, {33}, {34}, {
          35}, {43}, {14}, {15}, {16}, {20}, {39}, {40}, {20}, {36}, {38}, {
          49}, {16}, {38}, {34}, {42}, {43}, {44}, {5}, {8}, {27}, {34}, {
          41}, {44}, {45}, {37}, {41}, {44}, {30}, {41}, {42}, {43}, {45}, {
          26}, {27}, {30}, {42}, {44}, {22}, {47}, {48}, {22}, {23}, {46}, {
          46}, {35}, {36}, {39}}}, Pattern}]}, {
      GraphLayout -> {"Dimension" -> 2}, ImageSize -> Full, 
       VertexCoordinates -> {{7, 1}, {8, 0}, {8, 1}, {6, 1}, {7, 2}, {5, 2}, {
        5, 1}, {5, 3}, {4, 2}, {4, 1}, {2, 2}, {0, 3}, {3, 2}, {1, 3}, {2, 
        3}, {1, 4}, {3, 3}, {4, 3}, {4, 4}, {3, 4}, {11, 4}, {11, 5}, {10, 
        5}, {12, 4}, {9, 2}, {9, 3}, {8, 2}, {10, 3}, {10, 4}, {9, 4}, {9, 
        1}, {9, 0}, {5, 4}, {6, 4}, {5, 5}, {4, 5}, {6, 5}, {2, 4}, {3, 5}, {
        1, 5}, {7, 4}, {7, 3}, {7, 5}, {8, 4}, {8, 3}, {11, 6}, {10, 6}, {12, 
        6}, {4, 6}}, VertexSize -> {Large}, 
       VertexStyle -> {
        20 -> RGBColor[0.91, 0.318, 0.243], 3 -> RGBColor[0.97, 0.606, 0.081],
          28 -> RGBColor[0.34398, 0.49112, 0.89936], 1 -> 
         RGBColor[0.91, 0.318, 0.243], 23 -> 
         RGBColor[0.34398, 0.49112, 0.89936], 2 -> 
         RGBColor[0.34398, 0.49112, 0.89936], 41 -> 
         RGBColor[0.448, 0.69232, 0.1538], 43 -> 
         RGBColor[0.34398, 0.49112, 0.89936], 14 -> 
         RGBColor[0.91, 0.318, 0.243], 36 -> RGBColor[0.97, 0.606, 0.081], 13 -> 
         RGBColor[0.91, 0.318, 0.243], 49 -> RGBColor[0.91, 0.318, 0.243], 16 -> 
         RGBColor[0.34398, 0.49112, 0.89936], 46 -> 
         RGBColor[0.34398, 0.49112, 0.89936], 15 -> 
         RGBColor[0.34398, 0.49112, 0.89936], 47 -> 
         RGBColor[0.91, 0.318, 0.243], 21 -> RGBColor[0.91, 0.318, 0.243], 9 -> 
         RGBColor[0.34398, 0.49112, 0.89936], 40 -> 
         RGBColor[0.91, 0.318, 0.243], 33 -> RGBColor[0.91, 0.318, 0.243], 26 -> 
         RGBColor[0.448, 0.69232, 0.1538], 38 -> RGBColor[0.97, 0.606, 0.081],
          4 -> RGBColor[0.97, 0.606, 0.081], 7 -> 
         RGBColor[0.34398, 0.49112, 0.89936], 48 -> 
         RGBColor[0.97, 0.606, 0.081], 5 -> 
         RGBColor[0.34398, 0.49112, 0.89936], 12 -> 
         RGBColor[0.448, 0.69232, 0.1538], 6 -> RGBColor[0.91, 0.318, 0.243], 
         27 -> RGBColor[0.97, 0.606, 0.081], 42 -> 
         RGBColor[0.91, 0.318, 0.243], 44 -> RGBColor[0.97, 0.606, 0.081], 22 -> 
         RGBColor[0.97, 0.606, 0.081], 31 -> RGBColor[0.91, 0.318, 0.243], 35 -> 
         RGBColor[0.34398, 0.49112, 0.89936], 17 -> 
         RGBColor[0.97, 0.606, 0.081], 19 -> 
         RGBColor[0.34398, 0.49112, 0.89936], 10 -> 
         RGBColor[0.97, 0.606, 0.081], 37 -> RGBColor[0.97, 0.606, 0.081], 45 -> 
         RGBColor[0.34398, 0.49112, 0.89936], 18 -> 
         RGBColor[0.91, 0.318, 0.243], 11 -> RGBColor[0.97, 0.606, 0.081], 30 -> 
         RGBColor[0.91, 0.318, 0.243], 25 -> 
         RGBColor[0.34398, 0.49112, 0.89936], 24 -> 
         RGBColor[0.34398, 0.49112, 0.89936], 32 -> 
         RGBColor[0.34398, 0.49112, 0.89936], 39 -> 
         RGBColor[0.34398, 0.49112, 0.89936], 8 -> 
         RGBColor[0.97, 0.606, 0.081], 29 -> RGBColor[0.97, 0.606, 0.081], 34 -> 
         RGBColor[0.34398, 0.49112, 0.89936]}}]]}, 
    TagBox[GraphicsGroupBox[GraphicsComplexBox[CompressedData["
1:eJx1kjEOgzAMRa1OGTNkYGAwKEKsPUFzhh6hEjNX5wgUhd+KJ2IJWc//m9iB
4bO+l4eZPb/PkWv0pebtVbMXu4RD78DqtzOnBssvDmeO8Ef4DbpC/QG6+lgP
0CPqnIfcqk8N1p4ZPMM/Yk6xznHoGbqY7yNr7995dp1L/g6cyr0vwc/vzvtq
/Qc9/OIAlt/hd/h1/5org2fwf+8dO2soag==
       "], {
        {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
         ArrowBox[{{1, 2}, {1, 3}, {1, 4}, {1, 5}, {2, 3}, {3, 5}, {3, 31}, {
          3, 32}, {4, 5}, {4, 6}, {4, 7}, {5, 6}, {5, 8}, {5, 27}, {5, 31}, {
          5, 42}, {6, 7}, {6, 8}, {6, 9}, {6, 10}, {7, 10}, {8, 9}, {8, 18}, {
          8, 19}, {8, 33}, {8, 34}, {8, 42}, {9, 10}, {9, 13}, {9, 17}, {9, 
          18}, {10, 13}, {11, 12}, {11, 13}, {11, 14}, {11, 15}, {12, 14}, {
          12, 16}, {13, 17}, {14, 15}, {14, 16}, {14, 38}, {15, 17}, {15, 
          20}, {15, 38}, {16, 38}, {16, 40}, {17, 18}, {17, 19}, {17, 20}, {
          18, 19}, {19, 20}, {19, 33}, {19, 36}, {20, 36}, {20, 38}, {20, 
          39}, {21, 22}, {21, 23}, {21, 24}, {22, 23}, {22, 24}, {22, 46}, {
          22, 47}, {23, 29}, {23, 30}, {23, 47}, {25, 26}, {25, 27}, {26, 
          27}, {26, 28}, {26, 30}, {26, 45}, {27, 31}, {27, 42}, {27, 45}, {
          28, 29}, {28, 30}, {29, 30}, {30, 44}, {30, 45}, {31, 32}, {33, 
          34}, {33, 35}, {33, 36}, {33, 37}, {34, 37}, {34, 41}, {34, 42}, {
          35, 36}, {35, 37}, {35, 49}, {36, 39}, {36, 49}, {37, 43}, {38, 
          39}, {38, 40}, {39, 49}, {41, 42}, {41, 43}, {41, 44}, {42, 44}, {
          42, 45}, {43, 44}, {44, 45}, {46, 47}, {46, 48}}, 0.2]}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         {RGBColor[0.91, 0.318, 0.243], DiskBox[1, 0.2]}, 
         {RGBColor[0.34398, 0.49112, 0.89936], DiskBox[2, 0.2]}, 
         {RGBColor[0.97, 0.606, 0.081], DiskBox[3, 0.2]}, 
         {RGBColor[0.97, 0.606, 0.081], DiskBox[4, 0.2]}, 
         {RGBColor[0.34398, 0.49112, 0.89936], DiskBox[5, 0.2]}, 
         {RGBColor[0.91, 0.318, 0.243], DiskBox[6, 0.2]}, 
         {RGBColor[0.34398, 0.49112, 0.89936], DiskBox[7, 0.2]}, 
         {RGBColor[0.97, 0.606, 0.081], DiskBox[8, 0.2]}, 
         {RGBColor[0.34398, 0.49112, 0.89936], DiskBox[9, 0.2]}, 
         {RGBColor[0.97, 0.606, 0.081], DiskBox[10, 0.2]}, 
         {RGBColor[0.97, 0.606, 0.081], DiskBox[11, 0.2]}, 
         {RGBColor[0.448, 0.69232, 0.1538], DiskBox[12, 0.2]}, 
         {RGBColor[0.91, 0.318, 0.243], DiskBox[13, 0.2]}, 
         {RGBColor[0.91, 0.318, 0.243], DiskBox[14, 0.2]}, 
         {RGBColor[0.34398, 0.49112, 0.89936], DiskBox[15, 0.2]}, 
         {RGBColor[0.34398, 0.49112, 0.89936], DiskBox[16, 0.2]}, 
         {RGBColor[0.97, 0.606, 0.081], DiskBox[17, 0.2]}, 
         {RGBColor[0.91, 0.318, 0.243], DiskBox[18, 0.2]}, 
         {RGBColor[0.34398, 0.49112, 0.89936], DiskBox[19, 0.2]}, 
         {RGBColor[0.91, 0.318, 0.243], DiskBox[20, 0.2]}, 
         {RGBColor[0.91, 0.318, 0.243], DiskBox[21, 0.2]}, 
         {RGBColor[0.97, 0.606, 0.081], DiskBox[22, 0.2]}, 
         {RGBColor[0.34398, 0.49112, 0.89936], DiskBox[23, 0.2]}, 
         {RGBColor[0.34398, 0.49112, 0.89936], DiskBox[24, 0.2]}, 
         {RGBColor[0.34398, 0.49112, 0.89936], DiskBox[25, 0.2]}, 
         {RGBColor[0.448, 0.69232, 0.1538], DiskBox[26, 0.2]}, 
         {RGBColor[0.97, 0.606, 0.081], DiskBox[27, 0.2]}, 
         {RGBColor[0.34398, 0.49112, 0.89936], DiskBox[28, 0.2]}, 
         {RGBColor[0.97, 0.606, 0.081], DiskBox[29, 0.2]}, 
         {RGBColor[0.91, 0.318, 0.243], DiskBox[30, 0.2]}, 
         {RGBColor[0.91, 0.318, 0.243], DiskBox[31, 0.2]}, 
         {RGBColor[0.34398, 0.49112, 0.89936], DiskBox[32, 0.2]}, 
         {RGBColor[0.91, 0.318, 0.243], DiskBox[33, 0.2]}, 
         {RGBColor[0.34398, 0.49112, 0.89936], DiskBox[34, 0.2]}, 
         {RGBColor[0.34398, 0.49112, 0.89936], DiskBox[35, 0.2]}, 
         {RGBColor[0.97, 0.606, 0.081], DiskBox[36, 0.2]}, 
         {RGBColor[0.97, 0.606, 0.081], DiskBox[37, 0.2]}, 
         {RGBColor[0.97, 0.606, 0.081], DiskBox[38, 0.2]}, 
         {RGBColor[0.34398, 0.49112, 0.89936], DiskBox[39, 0.2]}, 
         {RGBColor[0.91, 0.318, 0.243], DiskBox[40, 0.2]}, 
         {RGBColor[0.448, 0.69232, 0.1538], DiskBox[41, 0.2]}, 
         {RGBColor[0.91, 0.318, 0.243], DiskBox[42, 0.2]}, 
         {RGBColor[0.34398, 0.49112, 0.89936], DiskBox[43, 0.2]}, 
         {RGBColor[0.97, 0.606, 0.081], DiskBox[44, 0.2]}, 
         {RGBColor[0.34398, 0.49112, 0.89936], DiskBox[45, 0.2]}, 
         {RGBColor[0.34398, 0.49112, 0.89936], DiskBox[46, 0.2]}, 
         {RGBColor[0.91, 0.318, 0.243], DiskBox[47, 0.2]}, 
         {RGBColor[0.97, 0.606, 0.081], DiskBox[48, 0.2]}, 
         {RGBColor[0.91, 0.318, 0.243], DiskBox[49, 0.2]}}}]],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->"NetworkGraphics",
  FormatType->TraditionalForm,
  FrameTicks->None,
  ImageSize->Full]], "Output",
 CellChangeTimes->{{3.8772763165599117`*^9, 3.8772763552113285`*^9}},
 CellLabel->"Out[63]=",ExpressionUUID->"9a1035e2-9305-484c-91f6-cd6ce7ad7add"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Exercise 46", "Section",
 CellChangeTimes->{{3.8772765392091026`*^9, 
  3.8772765432660956`*^9}},ExpressionUUID->"e409150f-59fd-4580-a52a-\
1449698f85e6"],

Cell[TextData[{
 "Let G with a graph with ",
 Cell[BoxData[
  FormBox[
   RowBox[{"n", ">=", "3"}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "1dd3a131-8f86-44e3-8bb2-1e4934573f28"],
 " vertices, defined by a planar diagram that is \
\[OpenCurlyDoubleQuote]maximal,\[CloseCurlyDoubleQuote] in the sense that no \
additional lines can be drawn between nonadjacent vertices without crossing \
an existing edge."
}], "Text",
 CellChangeTimes->{{3.877276545578627*^9, 
  3.8772765920774207`*^9}},ExpressionUUID->"a3d90864-4c79-45cf-a794-\
8469ba49adff"],

Cell["\<\
The graph data property I am looking for is \
\[OpenCurlyDoubleQuote]Triangulated\[CloseCurlyDoubleQuote] or \
\[OpenCurlyDoubleQuote]maximally planar\[CloseCurlyDoubleQuote].\
\>", "Text",
 CellChangeTimes->{{3.8772766166341753`*^9, 
  3.877276633907487*^9}},ExpressionUUID->"61a7e904-7694-4a46-a59d-\
f4a264c02944"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GraphData", "[", "\"\<Triangulated\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.8772766362512183`*^9, 3.8772766452649884`*^9}},
 CellLabel->"In[69]:=",ExpressionUUID->"b95c413d-4f63-468e-b246-75e871c98fdf"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\<\"Apollonian\"\>", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Apollonian\"\>", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Apollonian\"\>", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Apollonian\"\>", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Apollonian\"\>", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"11", ",", "1", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"11", ",", "1", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"11", ",", "2", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"11", ",", "2", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"11", ",", "3", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"11", ",", "3", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"12", ",", "1", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"12", ",", "1", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"13", ",", "1", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"13", ",", "1", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"13", ",", "1", ",", "3"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"13", ",", "2", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"13", ",", "2", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"14", ",", "1", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"14", ",", "1", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"14", ",", "2", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"14", ",", "2", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"14", ",", "3", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"14", ",", "3", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"14", ",", "4", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"14", ",", "4", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"15", ",", "1", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"15", ",", "1", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"15", ",", "1", ",", "3"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"15", ",", "2", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"15", ",", "2", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"15", ",", "3", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"15", ",", "3", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"15", ",", "4", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"15", ",", "4", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"15", ",", "5", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"15", ",", "5", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"15", ",", "6", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"15", ",", "6", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"16", ",", "1", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"16", ",", "1", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"16", ",", "2", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"16", ",", "2", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"16", ",", "3", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"16", ",", "3", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"16", ",", "4", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"16", ",", "4", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"16", ",", "5", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"16", ",", "5", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"16", ",", "6", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"16", ",", "6", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"16", ",", "7", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"16", ",", "7", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"16", ",", "8", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"16", ",", "8", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"16", ",", "9", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"16", ",", "9", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"17", ",", "1", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"17", ",", "1", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Dipyramid\"\>", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Dipyramid\"\>", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Dipyramid\"\>", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Dipyramid\"\>", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Dipyramid\"\>", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Dipyramid\"\>", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Dipyramid\"\>", ",", "10"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Dipyramid\"\>", ",", "11"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Dipyramid\"\>", ",", "12"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Dipyramid\"\>", ",", "13"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Dipyramid\"\>", ",", "14"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Dipyramid\"\>", ",", "15"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Dipyramid\"\>", ",", "16"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Dipyramid\"\>", ",", "17"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Dipyramid\"\>", ",", "18"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Dipyramid\"\>", ",", "19"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Dipyramid\"\>", ",", "20"}], "}"}], 
   ",", "\<\"DisdyakisDodecahedralGraph\"\>", 
   ",", "\<\"DisdyakisTriacontahedralGraph\"\>", ",", "\<\"ErreraGraph\"\>", 
   ",", "\<\"FritschGraph\"\>", ",", "\<\"GoldnerHararyGraph\"\>", 
   ",", "\<\"HeawoodFourColorGraph\"\>", ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Heptahedral\"\>", ",", "15"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Heptahedral\"\>", ",", "29"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Heptahedral\"\>", ",", "34"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Hexahedral\"\>", ",", "5"}], "}"}], 
   ",", "\<\"IcosahedralGraph\"\>", ",", 
   RowBox[{"{", 
    RowBox[{"\<\"JohnsonSkeleton\"\>", ",", "17"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"JohnsonSkeleton\"\>", ",", "84"}], "}"}], 
   ",", "\<\"KittellGraph\"\>", ",", "\<\"McGregorGraph\"\>", 
   ",", "\<\"MooreGraph\"\>", ",", "\<\"OctahedralGraph\"\>", 
   ",", "\<\"PentakisDodecahedralGraph\"\>", 
   ",", "\<\"PentakisIcosidodecahedralGraph\"\>", ",", "\<\"PoussinGraph\"\>",
    ",", 
   RowBox[{"{", 
    RowBox[{"\<\"SierpinskiTetrahedron\"\>", ",", "2"}], "}"}], 
   ",", "\<\"SmallTriakisOctahedralGraph\"\>", 
   ",", "\<\"TetrahedralGraph\"\>", ",", "\<\"TetrakisHexahedralGraph\"\>", 
   ",", "\<\"TriakisIcosahedralGraph\"\>", 
   ",", "\<\"TriakisTetrahedralGraph\"\>", ",", "\<\"TriangleGraph\"\>", ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Triangulated\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"8", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Triangulated\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"8", ",", "3"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Triangulated\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"8", ",", "4"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Triangulated\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"8", ",", "5"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Triangulated\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"8", ",", "6"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Triangulated\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"8", ",", "8"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Triangulated\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"8", ",", "9"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Triangulated\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"8", ",", "10"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Triangulated\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"8", ",", "11"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Triangulated\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"8", ",", "12"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Triangulated\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"8", ",", "14"}], "}"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.877276660534872*^9},
 CellLabel->"Out[69]=",ExpressionUUID->"a4311c77-bbdd-4ff6-b96f-d4739efd11d9"]
}, Open  ]],

Cell["\<\
Prove that the diagram partitions the plane into regions that each have \
exactly three vertices on their boundary. (One of these regions is the set of \
all points that lie outside the diagram.)\
\>", "Text",
 CellChangeTimes->{{3.8772766586200237`*^9, 
  3.877276690443962*^9}},ExpressionUUID->"189a61b3-c919-476a-825a-\
df4b796a31d4"],

Cell["Therefore G has exactly 3n-6 edges.", "Text",
 CellChangeTimes->{{3.877276692929628*^9, 
  3.877276701869949*^9}},ExpressionUUID->"94031fed-a0f2-4409-9bf2-\
0d22e1b51424"],

Cell["\<\
I think there\[CloseCurlyQuote]s a graph function that does something with a \
plane.\
\>", "Text",
 CellChangeTimes->{{3.877276724532607*^9, 
  3.87727673471801*^9}},ExpressionUUID->"98e13d10-fc96-4aeb-865b-\
08686a7e713c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Names", "[", 
  RowBox[{"\"\<*plan*\>\"", ",", 
   RowBox[{"IgnoreCase", "->", "True"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.877276716286641*^9, 3.8772767228840733`*^9}},
 CellLabel->"In[70]:=",ExpressionUUID->"25cd1a7e-51ff-47c3-b89e-94feee82959f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"ClipPlanes\"\>", ",", "\<\"ClipPlanesStyle\"\>", 
   ",", "\<\"CoplanarPoints\"\>", ",", "\<\"DualPlanarGraph\"\>", 
   ",", "\<\"ExoplanetData\"\>", ",", "\<\"FindPlanarColoring\"\>", 
   ",", "\<\"HalfPlane\"\>", ",", "\<\"Hyperplane\"\>", 
   ",", "\<\"InfinitePlane\"\>", ",", "\<\"MinorPlanetData\"\>", 
   ",", "\<\"PlanarAngle\"\>", ",", "\<\"PlanarFaceList\"\>", 
   ",", "\<\"PlanarGraph\"\>", ",", "\<\"PlanarGraphQ\"\>", 
   ",", "\<\"PlanckRadiationLaw\"\>", ",", "\<\"PlaneCurveData\"\>", 
   ",", "\<\"PlanetaryMoonData\"\>", ",", "\<\"PlanetData\"\>", 
   ",", "\<\"PlantData\"\>", ",", "\<\"PlotRangeClipPlanesStyle\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.8772767356803274`*^9},
 CellLabel->"Out[70]=",ExpressionUUID->"030fbd2d-c7eb-45c7-b269-abb1e03c9d3d"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Information", "/@", 
  RowBox[{"Names", "[", 
   RowBox[{"\"\<*plan*\>\"", ",", 
    RowBox[{"IgnoreCase", "->", "True"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.877276738449082*^9, 3.8772767400935*^9}},
 CellLabel->"In[71]:=",ExpressionUUID->"a9048f6b-2126-4139-aaf3-c9b453c23804"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/DualPlanarGraph",
                ButtonNote->"paclet:ref/DualPlanarGraph"],
               "\"paclet:ref/DualPlanarGraph\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"DualPlanarGraph\\\", \\\"[\\\
\", StyleBox[\\\"g\\\", \\\"TI\\\"], \\\"]\\\"}]\\) gives the dual of the \
planar graph \\!\\(\\*StyleBox[\\\"g\\\", \\\"TI\\\"]\\).\"\>", 
               "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", 
                    "paclet:ref/DualPlanarGraph", 
                    "paclet:ref/DualPlanarGraph", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/\
DualPlanarGraph.html"], None}, 
                    "http://reference.wolfram.com/language/ref/\
DualPlanarGraph.html", "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", 
                    RowBox[{"Protected", ",", "ReadProtected"}], "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`DualPlanarGraph\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/DualPlanarGraph",
                ButtonNote->"paclet:ref/DualPlanarGraph"],
               "\"paclet:ref/DualPlanarGraph\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"DualPlanarGraph\\\", \\\"[\\\
\", StyleBox[\\\"g\\\", \\\"TI\\\"], \\\"]\\\"}]\\) gives the dual of the \
planar graph \\!\\(\\*StyleBox[\\\"g\\\", \\\"TI\\\"]\\).\"\>", 
               "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"DualPlanarGraph\", \"[\", StyleBox[\"g\", \"TI\"], \"]\
\"}]\) gives the dual of the planar graph \!\(\*StyleBox[\"g\", \"TI\"]\).", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/DualPlanarGraph", "Web" -> 
        "http://reference.wolfram.com/language/ref/DualPlanarGraph.html"|>, 
      "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, "Options" -> None, 
      "Attributes" -> {Protected, ReadProtected}, "FullName" -> 
      "System`DualPlanarGraph"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/FindPlanarColoring",
                ButtonNote->"paclet:ref/FindPlanarColoring"],
               "\"paclet:ref/FindPlanarColoring\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"FindPlanarColoring\\\", \
\\\"[\\\", StyleBox[\\\"g\\\", \\\"TI\\\"], \\\"]\\\"}]\\) finds a coloring \
with minimal size for the faces of the planar graph \\!\\(\\*StyleBox[\\\"g\\\
\", \\\"TI\\\"]\\).\\n\\!\\(\\*RowBox[{\\\"FindPlanarColoring\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"g\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"c\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"c\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\
\"TR\\\"]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) finds a coloring \\!\\(\\*RowBox[{\
\\\"{\\\", RowBox[{SubscriptBox[StyleBox[\\\"c\\\", \\\"TI\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"c\\\", \
\\\"TI\\\"], StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\
\[Ellipsis]\\\", \\\"TR\\\"], \\\",\\\", SubscriptBox[StyleBox[\\\"c\\\", \
\\\"TI\\\"], StyleBox[\\\"k\\\", \\\"TI\\\"]]}], \\\"}\\\"}]\\) for the faces \
in the graph \\!\\(\\*StyleBox[\\\"g\\\", \\\"TI\\\"]\\).\"\>", 
               "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", 
                    "paclet:ref/FindPlanarColoring", 
                    "paclet:ref/FindPlanarColoring", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/\
FindPlanarColoring.html"], None}, 
                    "http://reference.wolfram.com/language/ref/\
FindPlanarColoring.html", "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Options\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Options\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Options", "Tooltip"]& ], 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Method", "\[Rule]", "Automatic"}], ",", 
                    RowBox[{
                    "PerformanceGoal", "\[RuleDelayed]", 
                    "$PerformanceGoal"}]}], "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", 
                    RowBox[{"Protected", ",", "ReadProtected"}], "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`FindPlanarColoring\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/FindPlanarColoring",
                ButtonNote->"paclet:ref/FindPlanarColoring"],
               "\"paclet:ref/FindPlanarColoring\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"FindPlanarColoring\\\", \
\\\"[\\\", StyleBox[\\\"g\\\", \\\"TI\\\"], \\\"]\\\"}]\\) finds a coloring \
with minimal size for the faces of the planar graph \\!\\(\\*StyleBox[\\\"g\\\
\", \\\"TI\\\"]\\).\\n\\!\\(\\*RowBox[{\\\"FindPlanarColoring\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"g\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"c\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"c\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\
\"TR\\\"]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) finds a coloring \\!\\(\\*RowBox[{\
\\\"{\\\", RowBox[{SubscriptBox[StyleBox[\\\"c\\\", \\\"TI\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"c\\\", \
\\\"TI\\\"], StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\
\[Ellipsis]\\\", \\\"TR\\\"], \\\",\\\", SubscriptBox[StyleBox[\\\"c\\\", \
\\\"TI\\\"], StyleBox[\\\"k\\\", \\\"TI\\\"]]}], \\\"}\\\"}]\\) for the faces \
in the graph \\!\\(\\*StyleBox[\\\"g\\\", \\\"TI\\\"]\\).\"\>", 
               "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"FindPlanarColoring\", \"[\", StyleBox[\"g\", \"TI\"], \
\"]\"}]\) finds a coloring with minimal size for the faces of the planar \
graph \!\(\*StyleBox[\"g\", \"TI\"]\).\n\!\(\*RowBox[{\"FindPlanarColoring\", \
\"[\", RowBox[{StyleBox[\"g\", \"TI\"], \",\", RowBox[{\"{\", \
RowBox[{SubscriptBox[StyleBox[\"c\", \"TI\"], StyleBox[\"1\", \"TR\"]], \
\",\", SubscriptBox[StyleBox[\"c\", \"TI\"], StyleBox[\"2\", \"TR\"]], \",\", \
StyleBox[\"\[Ellipsis]\", \"TR\"]}], \"}\"}]}], \"]\"}]\) finds a coloring \!\
\(\*RowBox[{\"{\", RowBox[{SubscriptBox[StyleBox[\"c\", \"TI\"], StyleBox[\"1\
\", \"TR\"]], \",\", SubscriptBox[StyleBox[\"c\", \"TI\"], StyleBox[\"2\", \
\"TR\"]], \",\", StyleBox[\"\[Ellipsis]\", \"TR\"], \",\", \
SubscriptBox[StyleBox[\"c\", \"TI\"], StyleBox[\"k\", \"TI\"]]}], \"}\"}]\) \
for the faces in the graph \!\(\*StyleBox[\"g\", \"TI\"]\).", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/FindPlanarColoring", "Web" -> 
        "http://reference.wolfram.com/language/ref/FindPlanarColoring.html"|>,
       "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, 
      "Options" -> {Method -> Automatic, PerformanceGoal :> $PerformanceGoal},
       "Attributes" -> {Protected, ReadProtected}, "FullName" -> 
      "System`FindPlanarColoring"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/PlanarFaceList",
                ButtonNote->"paclet:ref/PlanarFaceList"],
               "\"paclet:ref/PlanarFaceList\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"PlanarFaceList\\\", \
\\\"[\\\", StyleBox[\\\"g\\\", \\\"TI\\\"], \\\"]\\\"}]\\) gives the list of \
faces of the planar graph \\!\\(\\*StyleBox[\\\"g\\\", \\\"TI\\\"]\\).\"\>", 
               "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", 
                    "paclet:ref/PlanarFaceList", "paclet:ref/PlanarFaceList", 
                    "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/PlanarFaceList.\
html"], None}, 
                    "http://reference.wolfram.com/language/ref/PlanarFaceList.\
html", "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", 
                    RowBox[{"Protected", ",", "ReadProtected"}], "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`PlanarFaceList\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/PlanarFaceList",
                ButtonNote->"paclet:ref/PlanarFaceList"],
               "\"paclet:ref/PlanarFaceList\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"PlanarFaceList\\\", \
\\\"[\\\", StyleBox[\\\"g\\\", \\\"TI\\\"], \\\"]\\\"}]\\) gives the list of \
faces of the planar graph \\!\\(\\*StyleBox[\\\"g\\\", \\\"TI\\\"]\\).\"\>", 
               "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"PlanarFaceList\", \"[\", StyleBox[\"g\", \"TI\"], \
\"]\"}]\) gives the list of faces of the planar graph \!\(\*StyleBox[\"g\", \
\"TI\"]\).", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/PlanarFaceList", "Web" -> 
        "http://reference.wolfram.com/language/ref/PlanarFaceList.html"|>, 
      "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, "Options" -> None, 
      "Attributes" -> {Protected, ReadProtected}, "FullName" -> 
      "System`PlanarFaceList"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/PlanarGraph",
                ButtonNote->"paclet:ref/PlanarGraph"],
               "\"paclet:ref/PlanarGraph\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"PlanarGraph\\\", \\\"[\\\", \
RowBox[{\\\"{\\\", RowBox[{SubscriptBox[StyleBox[\\\"e\\\", \\\"TI\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"e\\\", \
\\\"TI\\\"], StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\
\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\"}], \\\"]\\\"}]\\) yields a planar \
graph with edges \\!\\(\\*SubscriptBox[StyleBox[\\\"e\\\", \\\"TI\\\"], \
StyleBox[\\\"j\\\", \\\"TI\\\"]]\\).\\n\\!\\(\\*RowBox[{\\\"PlanarGraph\\\", \
\\\"[\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"v\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"v\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\
\"TR\\\"]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"e\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"e\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\
\"TR\\\"]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) yields a planar graph with \
vertices \\!\\(\\*SubscriptBox[StyleBox[\\\"v\\\", \\\"TI\\\"], \
StyleBox[\\\"i\\\", \\\"TI\\\"]]\\) and edges \\!\\(\\*SubscriptBox[StyleBox[\
\\\"e\\\", \\\"TI\\\"], StyleBox[\\\"j\\\", \
\\\"TI\\\"]]\\).\\n\\!\\(\\*RowBox[{\\\"PlanarGraph\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"], \
\\\",\\\", RowBox[{SubscriptBox[StyleBox[\\\"w\\\", \\\"TI\\\"], \
StyleBox[\\\"i\\\", \\\"TI\\\"]], \\\"[\\\", SubscriptBox[StyleBox[\\\"v\\\", \
\\\"TI\\\"], StyleBox[\\\"i\\\", \\\"TI\\\"]], \\\"]\\\"}], \\\",\\\", \
StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\"}], \\\",\\\", RowBox[{\
\\\"{\\\", RowBox[{StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"], \\\",\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"w\\\", \\\"TI\\\"], StyleBox[\\\"j\\\", \
\\\"TI\\\"]], \\\"[\\\", SubscriptBox[StyleBox[\\\"e\\\", \\\"TI\\\"], \
StyleBox[\\\"j\\\", \\\"TI\\\"]], \\\"]\\\"}], \\\",\\\", StyleBox[\\\"\
\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) yields a planar \
graph with vertex and edge properties defined by the symbolic wrappers \\!\\(\
\\*SubscriptBox[StyleBox[\\\"w\\\", \\\"TI\\\"], StyleBox[\\\"k\\\", \\\"TI\\\
\"]]\\).\\n\\!\\(\\*RowBox[{\\\"PlanarGraph\\\", \\\"[\\\", \
RowBox[{\\\"{\\\", RowBox[{RowBox[{SubscriptBox[StyleBox[\\\"v\\\", \
\\\"TI\\\"], StyleBox[\\\"i\\\", \\\"TI\\\"]], \\\"\[Rule]\\\", \
SubscriptBox[StyleBox[\\\"v\\\", \\\"TI\\\"], StyleBox[\\\"j\\\", \
\\\"TI\\\"]]}], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\
\\\"}], \\\"]\\\"}]\\) uses rules \
\\!\\(\\*RowBox[{SubscriptBox[StyleBox[\\\"v\\\", \\\"TI\\\"], StyleBox[\\\"i\
\\\", \\\"TI\\\"]], \\\"\[Rule]\\\", SubscriptBox[StyleBox[\\\"v\\\", \
\\\"TI\\\"], StyleBox[\\\"j\\\", \\\"TI\\\"]]}]\\) to specify a planar graph.\
\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", "paclet:ref/PlanarGraph", 
                    "paclet:ref/PlanarGraph", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/PlanarGraph.\
html"], None}, "http://reference.wolfram.com/language/ref/PlanarGraph.html", 
                    "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", 
                    RowBox[{"Protected", ",", "ReadProtected"}], "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`PlanarGraph\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/PlanarGraph",
                ButtonNote->"paclet:ref/PlanarGraph"],
               "\"paclet:ref/PlanarGraph\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"PlanarGraph\\\", \\\"[\\\", \
RowBox[{\\\"{\\\", RowBox[{SubscriptBox[StyleBox[\\\"e\\\", \\\"TI\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"e\\\", \
\\\"TI\\\"], StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\
\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\"}], \\\"]\\\"}]\\) yields a planar \
graph with edges \\!\\(\\*SubscriptBox[StyleBox[\\\"e\\\", \\\"TI\\\"], \
StyleBox[\\\"j\\\", \\\"TI\\\"]]\\).\\n\\!\\(\\*RowBox[{\\\"PlanarGraph\\\", \
\\\"[\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"v\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"v\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\
\"TR\\\"]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"e\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"e\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\
\"TR\\\"]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) yields a planar graph with \
vertices \\!\\(\\*SubscriptBox[StyleBox[\\\"v\\\", \\\"TI\\\"], \
StyleBox[\\\"i\\\", \\\"TI\\\"]]\\) and edges \\!\\(\\*SubscriptBox[StyleBox[\
\\\"e\\\", \\\"TI\\\"], StyleBox[\\\"j\\\", \
\\\"TI\\\"]]\\).\\n\\!\\(\\*RowBox[{\\\"PlanarGraph\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"], \
\\\",\\\", RowBox[{SubscriptBox[StyleBox[\\\"w\\\", \\\"TI\\\"], \
StyleBox[\\\"i\\\", \\\"TI\\\"]], \\\"[\\\", SubscriptBox[StyleBox[\\\"v\\\", \
\\\"TI\\\"], StyleBox[\\\"i\\\", \\\"TI\\\"]], \\\"]\\\"}], \\\",\\\", \
StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\"}], \\\",\\\", RowBox[{\
\\\"{\\\", RowBox[{StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"], \\\",\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"w\\\", \\\"TI\\\"], StyleBox[\\\"j\\\", \
\\\"TI\\\"]], \\\"[\\\", SubscriptBox[StyleBox[\\\"e\\\", \\\"TI\\\"], \
StyleBox[\\\"j\\\", \\\"TI\\\"]], \\\"]\\\"}], \\\",\\\", StyleBox[\\\"\
\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) yields a planar \
graph with vertex and edge properties defined by the symbolic wrappers \\!\\(\
\\*SubscriptBox[StyleBox[\\\"w\\\", \\\"TI\\\"], StyleBox[\\\"k\\\", \\\"TI\\\
\"]]\\).\\n\\!\\(\\*RowBox[{\\\"PlanarGraph\\\", \\\"[\\\", \
RowBox[{\\\"{\\\", RowBox[{RowBox[{SubscriptBox[StyleBox[\\\"v\\\", \
\\\"TI\\\"], StyleBox[\\\"i\\\", \\\"TI\\\"]], \\\"\[Rule]\\\", \
SubscriptBox[StyleBox[\\\"v\\\", \\\"TI\\\"], StyleBox[\\\"j\\\", \
\\\"TI\\\"]]}], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\
\\\"}], \\\"]\\\"}]\\) uses rules \
\\!\\(\\*RowBox[{SubscriptBox[StyleBox[\\\"v\\\", \\\"TI\\\"], StyleBox[\\\"i\
\\\", \\\"TI\\\"]], \\\"\[Rule]\\\", SubscriptBox[StyleBox[\\\"v\\\", \
\\\"TI\\\"], StyleBox[\\\"j\\\", \\\"TI\\\"]]}]\\) to specify a planar graph.\
\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"PlanarGraph\", \"[\", RowBox[{\"{\", \
RowBox[{SubscriptBox[StyleBox[\"e\", \"TI\"], StyleBox[\"1\", \"TR\"]], \
\",\", SubscriptBox[StyleBox[\"e\", \"TI\"], StyleBox[\"2\", \"TR\"]], \",\", \
StyleBox[\"\[Ellipsis]\", \"TR\"]}], \"}\"}], \"]\"}]\) yields a planar graph \
with edges \!\(\*SubscriptBox[StyleBox[\"e\", \"TI\"], StyleBox[\"j\", \
\"TI\"]]\).\n\!\(\*RowBox[{\"PlanarGraph\", \"[\", RowBox[{RowBox[{\"{\", \
RowBox[{SubscriptBox[StyleBox[\"v\", \"TI\"], StyleBox[\"1\", \"TR\"]], \
\",\", SubscriptBox[StyleBox[\"v\", \"TI\"], StyleBox[\"2\", \"TR\"]], \",\", \
StyleBox[\"\[Ellipsis]\", \"TR\"]}], \"}\"}], \",\", RowBox[{\"{\", \
RowBox[{SubscriptBox[StyleBox[\"e\", \"TI\"], StyleBox[\"1\", \"TR\"]], \
\",\", SubscriptBox[StyleBox[\"e\", \"TI\"], StyleBox[\"2\", \"TR\"]], \",\", \
StyleBox[\"\[Ellipsis]\", \"TR\"]}], \"}\"}]}], \"]\"}]\) yields a planar \
graph with vertices \!\(\*SubscriptBox[StyleBox[\"v\", \"TI\"], \
StyleBox[\"i\", \"TI\"]]\) and edges \!\(\*SubscriptBox[StyleBox[\"e\", \
\"TI\"], StyleBox[\"j\", \"TI\"]]\).\n\!\(\*RowBox[{\"PlanarGraph\", \"[\", \
RowBox[{RowBox[{\"{\", RowBox[{StyleBox[\"\[Ellipsis]\", \"TR\"], \",\", \
RowBox[{SubscriptBox[StyleBox[\"w\", \"TI\"], StyleBox[\"i\", \"TI\"]], \
\"[\", SubscriptBox[StyleBox[\"v\", \"TI\"], StyleBox[\"i\", \"TI\"]], \
\"]\"}], \",\", StyleBox[\"\[Ellipsis]\", \"TR\"]}], \"}\"}], \",\", RowBox[{\
\"{\", RowBox[{StyleBox[\"\[Ellipsis]\", \"TR\"], \",\", \
RowBox[{SubscriptBox[StyleBox[\"w\", \"TI\"], StyleBox[\"j\", \"TI\"]], \
\"[\", SubscriptBox[StyleBox[\"e\", \"TI\"], StyleBox[\"j\", \"TI\"]], \
\"]\"}], \",\", StyleBox[\"\[Ellipsis]\", \"TR\"]}], \"}\"}]}], \"]\"}]\) \
yields a planar graph with vertex and edge properties defined by the symbolic \
wrappers \!\(\*SubscriptBox[StyleBox[\"w\", \"TI\"], StyleBox[\"k\", \"TI\"]]\
\).\n\!\(\*RowBox[{\"PlanarGraph\", \"[\", RowBox[{\"{\", \
RowBox[{RowBox[{SubscriptBox[StyleBox[\"v\", \"TI\"], StyleBox[\"i\", \
\"TI\"]], \"\[Rule]\", SubscriptBox[StyleBox[\"v\", \"TI\"], StyleBox[\"j\", \
\"TI\"]]}], \",\", StyleBox[\"\[Ellipsis]\", \"TR\"]}], \"}\"}], \"]\"}]\) \
uses rules \!\(\*RowBox[{SubscriptBox[StyleBox[\"v\", \"TI\"], \
StyleBox[\"i\", \"TI\"]], \"\[Rule]\", SubscriptBox[StyleBox[\"v\", \"TI\"], \
StyleBox[\"j\", \"TI\"]]}]\) to specify a planar graph.", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/PlanarGraph", "Web" -> 
        "http://reference.wolfram.com/language/ref/PlanarGraph.html"|>, 
      "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, "Options" -> None, 
      "Attributes" -> {Protected, ReadProtected}, "FullName" -> 
      "System`PlanarGraph"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/PlanarGraphQ",
                ButtonNote->"paclet:ref/PlanarGraphQ"],
               "\"paclet:ref/PlanarGraphQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"PlanarGraphQ\\\", \\\"[\\\", \
StyleBox[\\\"g\\\", \\\"TI\\\"], \\\"]\\\"}]\\) yields True if \
\\!\\(\\*StyleBox[\\\"g\\\", \\\"TI\\\"]\\) is a planar graph and False \
otherwise.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", "paclet:ref/PlanarGraphQ", 
                    "paclet:ref/PlanarGraphQ", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/PlanarGraphQ.\
html"], None}, "http://reference.wolfram.com/language/ref/PlanarGraphQ.html", 
                    "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", "Protected", "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`PlanarGraphQ\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/PlanarGraphQ",
                ButtonNote->"paclet:ref/PlanarGraphQ"],
               "\"paclet:ref/PlanarGraphQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"PlanarGraphQ\\\", \\\"[\\\", \
StyleBox[\\\"g\\\", \\\"TI\\\"], \\\"]\\\"}]\\) yields True if \
\\!\\(\\*StyleBox[\\\"g\\\", \\\"TI\\\"]\\) is a planar graph and False \
otherwise.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"PlanarGraphQ\", \"[\", StyleBox[\"g\", \"TI\"], \
\"]\"}]\) yields True if \!\(\*StyleBox[\"g\", \"TI\"]\) is a planar graph \
and False otherwise.", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/PlanarGraphQ", "Web" -> 
        "http://reference.wolfram.com/language/ref/PlanarGraphQ.html"|>, 
      "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, "Options" -> None, "Attributes" -> {Protected}, 
      "FullName" -> "System`PlanarGraphQ"|>, True]]}], "}"}]], "Input",
 CellChangeTimes->{{3.877276800313175*^9, 
  3.8772768330131865`*^9}},ExpressionUUID->"414bbd95-dd0c-4eb6-989e-\
715c2287b2ee"],

Cell["", "Text",
 CellChangeTimes->{{3.877276762892385*^9, 
  3.8772767633078165`*^9}},ExpressionUUID->"885da1b7-ec20-4681-9388-\
981e6dd608fb"],

Cell["Select graphs with at least three vertices:", "Text",
 CellChangeTimes->{{3.877276883796632*^9, 
  3.877276892106083*^9}},ExpressionUUID->"e9d5fcc8-224d-4e70-b9d1-\
7526d892abf7"],

Cell["\<\
I was running this in 13.2 but I got an error so I had to evaluate it in 13.1.\
\>", "Text",
 CellChangeTimes->{{3.877277262758216*^9, 
  3.877277275700404*^9}},ExpressionUUID->"55bdd4b6-fae6-45f4-9b59-\
f36f824428cf"],

Cell["This is the error in 13.2", "Text",
 CellChangeTimes->{{3.8772772824875727`*^9, 
  3.8772772859723616`*^9}},ExpressionUUID->"7d9dd67b-8750-46ff-9df4-\
789f6ee357e6"],

Cell[CellGroupData[{

Cell[BoxData["$Version"], "Input",
 CellChangeTimes->{{3.8772773005111084`*^9, 3.877277308987604*^9}},
 CellLabel->"In[78]:=",ExpressionUUID->"57500bd9-84cf-4ad1-9c2e-245b04ae8106"],

Cell[BoxData["\<\"13.2.0 for Microsoft Windows (64-bit) (November 6, \
2022)\"\>"], "Output",
 CellChangeTimes->{{3.8772773019260883`*^9, 3.8772773092531395`*^9}},
 CellLabel->"Out[78]=",ExpressionUUID->"cc92e0ac-9ee6-446b-b6ed-aaffb1097b1e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"triangulatedGraphsWithAtLastThreeVertices", "=", 
  RowBox[{
   RowBox[{"Select", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"VertexCount", "[", 
       RowBox[{"GraphData", "[", "#", "]"}], "]"}], ">=", "3"}], "&"}], "]"}],
    "[", 
   RowBox[{"GraphData", "[", "\"\<Triangulated\>\"", "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.877276843177566*^9, 3.8772768794496083`*^9}, {
   3.877276952258453*^9, 3.8772769596245546`*^9}, 3.877277200111591*^9},
 CellLabel->"In[76]:=",ExpressionUUID->"6e016324-642a-4fd2-b5cb-83d4070cbdcc"],

Cell[BoxData[
 TemplateBox[{
  "AdjacencyGraph", "matsq", 
   "\"Argument \\!\\(\\*RowBox[{\\\"If\\\", \\\"[\\\", \
RowBox[{RowBox[{RowBox[{\\\"{\\\", \\\"\\\\\\\"10\[Hyphen]graph \
12002618\\\\\\\"\\\", \\\"}\\\"}], \\\">\\\", \\\"100\\\"}], \\\",\\\", \
RowBox[{\\\"GraphLayout\\\", \\\"\[Rule]\\\", \\\"None\\\"}], \\\",\\\", \
RowBox[{\\\"Sequence\\\", \\\"@@\\\", RowBox[{\\\"{\\\", \\\"}\\\"}]}]}], \
\\\"]\\\"}]\\) at position \\!\\(\\*RowBox[{\\\"2\\\"}]\\) is not a non-empty \
square matrix.\"", 2, 76, 15, 16937289918179914857, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.877277239760353*^9},
 CellLabel->
  "During evaluation of \
In[76]:=",ExpressionUUID->"4d4342f0-b094-402d-bbd9-dd489551e27c"],

Cell[BoxData[
 TemplateBox[{
  "VertexCount", "graph", 
   "\"A graph object is expected at position \\!\\(\\*RowBox[{\\\"1\\\"}]\\) \
in \\!\\(\\*RowBox[{\\\"VertexCount\\\", \\\"[\\\", \
RowBox[{\\\"AdjacencyGraph\\\", \\\"[\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"10\\\", \\\",\\\", \\\"12002618\\\"}], \\\"}\\\
\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"If\\\", \\\"[\\\", \
RowBox[{RowBox[{RowBox[{\\\"{\\\", \\\"\\\\\\\"10\[Hyphen]graph \
12002618\\\\\\\"\\\", \\\"}\\\"}], \\\">\\\", \\\"100\\\"}], \\\",\\\", \
RowBox[{\\\"GraphLayout\\\", \\\"\[Rule]\\\", \\\"None\\\"}], \\\",\\\", \
RowBox[{\\\"Sequence\\\", \\\"@@\\\", RowBox[{\\\"{\\\", \\\"}\\\"}]}]}], \
\\\"]\\\"}]}], \\\"]\\\"}], \\\"]\\\"}]\\).\"", 2, 76, 16, 
   16937289918179914857, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8772772400103817`*^9},
 CellLabel->
  "During evaluation of \
In[76]:=",ExpressionUUID->"48347a54-3901-44ec-8b09-b13915addccd"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\<\"Apollonian\"\>", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Apollonian\"\>", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Apollonian\"\>", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Apollonian\"\>", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Apollonian\"\>", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"11", ",", "1", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"11", ",", "1", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"11", ",", "2", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"11", ",", "2", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"11", ",", "3", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"11", ",", "3", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"12", ",", "1", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"12", ",", "1", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"13", ",", "1", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"13", ",", "1", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"13", ",", "1", ",", "3"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"13", ",", "2", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"13", ",", "2", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"14", ",", "1", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"14", ",", "1", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"14", ",", "2", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"14", ",", "2", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"14", ",", "3", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"14", ",", "3", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"14", ",", "4", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"14", ",", "4", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"15", ",", "1", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"15", ",", "1", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"15", ",", "1", ",", "3"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"15", ",", "2", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"15", ",", "2", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"15", ",", "3", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"15", ",", "3", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"15", ",", "4", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"15", ",", "4", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"15", ",", "5", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"15", ",", "5", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"15", ",", "6", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"15", ",", "6", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"16", ",", "1", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"16", ",", "1", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"16", ",", "2", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"16", ",", "2", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"16", ",", "3", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"16", ",", "3", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"16", ",", "4", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"16", ",", "4", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"16", ",", "5", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"16", ",", "5", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"16", ",", "6", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"16", ",", "6", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"16", ",", "7", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"16", ",", "7", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"16", ",", "8", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"16", ",", "8", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"16", ",", "9", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"16", ",", "9", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"17", ",", "1", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"17", ",", "1", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Dipyramid\"\>", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Dipyramid\"\>", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Dipyramid\"\>", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Dipyramid\"\>", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Dipyramid\"\>", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Dipyramid\"\>", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Dipyramid\"\>", ",", "10"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Dipyramid\"\>", ",", "11"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Dipyramid\"\>", ",", "12"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Dipyramid\"\>", ",", "13"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Dipyramid\"\>", ",", "14"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Dipyramid\"\>", ",", "15"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Dipyramid\"\>", ",", "16"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Dipyramid\"\>", ",", "17"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Dipyramid\"\>", ",", "18"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Dipyramid\"\>", ",", "19"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Dipyramid\"\>", ",", "20"}], "}"}], 
   ",", "\<\"DisdyakisDodecahedralGraph\"\>", 
   ",", "\<\"DisdyakisTriacontahedralGraph\"\>", ",", "\<\"ErreraGraph\"\>", 
   ",", "\<\"FritschGraph\"\>", ",", "\<\"GoldnerHararyGraph\"\>", 
   ",", "\<\"HeawoodFourColorGraph\"\>", ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Heptahedral\"\>", ",", "15"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Heptahedral\"\>", ",", "29"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Heptahedral\"\>", ",", "34"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Hexahedral\"\>", ",", "5"}], "}"}], 
   ",", "\<\"IcosahedralGraph\"\>", ",", 
   RowBox[{"{", 
    RowBox[{"\<\"JohnsonSkeleton\"\>", ",", "17"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"JohnsonSkeleton\"\>", ",", "84"}], "}"}], 
   ",", "\<\"KittellGraph\"\>", ",", "\<\"McGregorGraph\"\>", 
   ",", "\<\"MooreGraph\"\>", ",", "\<\"OctahedralGraph\"\>", 
   ",", "\<\"PentakisDodecahedralGraph\"\>", 
   ",", "\<\"PentakisIcosidodecahedralGraph\"\>", ",", "\<\"PoussinGraph\"\>",
    ",", 
   RowBox[{"{", 
    RowBox[{"\<\"SierpinskiTetrahedron\"\>", ",", "2"}], "}"}], 
   ",", "\<\"SmallTriakisOctahedralGraph\"\>", 
   ",", "\<\"TetrahedralGraph\"\>", ",", "\<\"TetrakisHexahedralGraph\"\>", 
   ",", "\<\"TriakisIcosahedralGraph\"\>", 
   ",", "\<\"TriakisTetrahedralGraph\"\>", ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Triangulated\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"8", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Triangulated\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"8", ",", "3"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Triangulated\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"8", ",", "4"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Triangulated\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"8", ",", "5"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Triangulated\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"8", ",", "6"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Triangulated\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"8", ",", "8"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Triangulated\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"8", ",", "9"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Triangulated\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"8", ",", "10"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Triangulated\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"8", ",", "11"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Triangulated\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"8", ",", "12"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Triangulated\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"8", ",", "14"}], "}"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.877276847100373*^9, 3.877276856969674*^9}, 
   3.8772769166180716`*^9, 3.87727696383687*^9, 3.8772772016115847`*^9, 
   3.8772772403072176`*^9},
 CellLabel->"Out[76]=",ExpressionUUID->"3cff55b4-e29f-49de-b316-f78bf7deeb13"]
}, Open  ]],

Cell["This is the evaluation in 13.1", "Text",
 CellChangeTimes->{{3.8772772888630657`*^9, 
  3.87727729606645*^9}},ExpressionUUID->"3dbfdf04-c32d-45c2-bd70-\
e8ef9abdb1e8"],

Cell[CellGroupData[{

Cell[BoxData["$Version"], "Input",
 CellChangeTimes->{{3.877277328472952*^9, 3.8772773295636787`*^9}},
 CellLabel->
  "In[169]:=",ExpressionUUID->"d8b2b882-c9d5-4a8d-997d-34330bd4c81f"],

Cell[BoxData["\<\"13.1.0 for Microsoft Windows (64-bit) (June 16, \
2022)\"\>"], "Output",
 CellChangeTimes->{3.8772773298652487`*^9},
 CellLabel->
  "Out[169]=",ExpressionUUID->"fc84b8c3-5fb7-4262-9d79-65b856288cb2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"triangulatedGraphsWithAtLastThreeVertices", "=", 
  RowBox[{
   RowBox[{"Select", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"VertexCount", "[", 
       RowBox[{"GraphData", "[", "#", "]"}], "]"}], ">=", "3"}], "&"}], "]"}],
    "[", 
   RowBox[{"GraphData", "[", "\"\<Triangulated\>\"", "]"}], "]"}]}]], "Input",
 CellLabel->
  "In[170]:=",ExpressionUUID->"c0617d92-db9d-4e6c-b5d8-2ed52384b76e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\<\"Apollonian\"\>", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Apollonian\"\>", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Apollonian\"\>", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Apollonian\"\>", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Apollonian\"\>", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"11", ",", "1", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"11", ",", "1", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"11", ",", "2", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"11", ",", "2", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"11", ",", "3", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"11", ",", "3", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"12", ",", "1", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"12", ",", "1", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"13", ",", "1", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"13", ",", "1", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"13", ",", "1", ",", "3"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"13", ",", "2", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"13", ",", "2", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"14", ",", "1", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"14", ",", "1", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"14", ",", "2", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"14", ",", "2", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"14", ",", "3", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"14", ",", "3", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"14", ",", "4", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"14", ",", "4", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"15", ",", "1", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"15", ",", "1", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"15", ",", "1", ",", "3"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"15", ",", "2", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"15", ",", "2", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"15", ",", "3", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"15", ",", "3", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"15", ",", "4", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"15", ",", "4", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"15", ",", "5", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"15", ",", "5", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"15", ",", "6", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"15", ",", "6", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"16", ",", "1", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"16", ",", "1", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"16", ",", "2", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"16", ",", "2", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"16", ",", "3", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"16", ",", "3", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"16", ",", "4", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"16", ",", "4", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"16", ",", "5", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"16", ",", "5", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"16", ",", "6", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"16", ",", "6", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"16", ",", "7", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"16", ",", "7", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"16", ",", "8", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"16", ",", "8", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"16", ",", "9", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"16", ",", "9", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"17", ",", "1", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ChromaticallyEquivalent\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"17", ",", "1", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Dipyramid\"\>", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Dipyramid\"\>", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Dipyramid\"\>", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Dipyramid\"\>", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Dipyramid\"\>", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Dipyramid\"\>", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Dipyramid\"\>", ",", "10"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Dipyramid\"\>", ",", "11"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Dipyramid\"\>", ",", "12"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Dipyramid\"\>", ",", "13"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Dipyramid\"\>", ",", "14"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Dipyramid\"\>", ",", "15"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Dipyramid\"\>", ",", "16"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Dipyramid\"\>", ",", "17"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Dipyramid\"\>", ",", "18"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Dipyramid\"\>", ",", "19"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Dipyramid\"\>", ",", "20"}], "}"}], 
   ",", "\<\"DisdyakisDodecahedralGraph\"\>", 
   ",", "\<\"DisdyakisTriacontahedralGraph\"\>", ",", "\<\"ErreraGraph\"\>", 
   ",", "\<\"FritschGraph\"\>", ",", "\<\"GoldnerHararyGraph\"\>", 
   ",", "\<\"HeawoodFourColorGraph\"\>", ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Heptahedral\"\>", ",", "15"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Heptahedral\"\>", ",", "29"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Heptahedral\"\>", ",", "34"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Hexahedral\"\>", ",", "5"}], "}"}], 
   ",", "\<\"IcosahedralGraph\"\>", ",", 
   RowBox[{"{", 
    RowBox[{"\<\"JohnsonSkeleton\"\>", ",", "17"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"JohnsonSkeleton\"\>", ",", "84"}], "}"}], 
   ",", "\<\"KittellGraph\"\>", ",", "\<\"McGregorGraph\"\>", 
   ",", "\<\"MooreGraph\"\>", ",", "\<\"OctahedralGraph\"\>", 
   ",", "\<\"PentakisDodecahedralGraph\"\>", ",", "\<\"PoussinGraph\"\>", ",", 
   RowBox[{"{", 
    RowBox[{"\<\"SierpinskiTetrahedron\"\>", ",", "2"}], "}"}], 
   ",", "\<\"SmallTriakisOctahedralGraph\"\>", 
   ",", "\<\"TetrahedralGraph\"\>", ",", "\<\"TetrakisHexahedralGraph\"\>", 
   ",", "\<\"TriakisIcosahedralGraph\"\>", 
   ",", "\<\"TriakisTetrahedralGraph\"\>", ",", "\<\"TriangleGraph\"\>", ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Triangulated\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"8", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Triangulated\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"8", ",", "3"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Triangulated\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"8", ",", "4"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Triangulated\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"8", ",", "5"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Triangulated\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"8", ",", "6"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Triangulated\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"8", ",", "8"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Triangulated\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"8", ",", "9"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Triangulated\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"8", ",", "10"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Triangulated\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"8", ",", "11"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Triangulated\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"8", ",", "12"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Triangulated\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"8", ",", "14"}], "}"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.877277338771502*^9},
 CellLabel->
  "Out[170]=",ExpressionUUID->"96d0ace4-14c1-4345-ae06-415e861e2e4b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"PlanarFaceList", "[", 
    RowBox[{"GraphData", "[", "#", "]"}], "]"}], "&"}], "/@", 
  "triangulatedGraphsWithAtLastThreeVertices"}]], "Input",
 CellChangeTimes->{{3.8772773451200085`*^9, 3.877277362920165*^9}},
 CellLabel->
  "In[172]:=",ExpressionUUID->"5cb61c99-53fe-4f39-99f3-eb202971dc3b"],

Cell[BoxData[
 TemplateBox[<|"shortenedBoxes" -> TagBox[
     RowBox[{"{", 
       RowBox[{
         RowBox[{"{", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"1", ",", "3", ",", "6"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"1", ",", "4", ",", "5"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"1", ",", "5", ",", "2"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"1", ",", "6", ",", "4"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"2", ",", "4", ",", "7"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"2", ",", "5", ",", "4"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"2", ",", "7", ",", "3"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"3", ",", "4", ",", "6"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"3", ",", "7", ",", "4"}], "}"}]}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"1", ",", "3", ",", "11"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"1", ",", "4", ",", "9"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"1", ",", "5", ",", "8"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"1", ",", "6", ",", "12"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"1", ",", "8", ",", "2"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"1", ",", "9", ",", "5"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"1", ",", "11", ",", "6"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"1", ",", "12", ",", "4"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"2", ",", "4", ",", "15"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"2", ",", "5", ",", "10"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"2", ",", "7", ",", "14"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"2", ",", "8", ",", "5"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"2", ",", "10", ",", "4"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"2", ",", "14", ",", "3"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"2", ",", "15", ",", "7"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"3", ",", "4", ",", "13"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"3", ",", "6", ",", "11"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"3", ",", "7", ",", "16"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"3", ",", "13", ",", "6"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"3", ",", "14", ",", "7"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"3", ",", "16", ",", "4"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"4", ",", "5", ",", "9"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"4", ",", "6", ",", "13"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"4", ",", "7", ",", "15"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"4", ",", "10", ",", "5"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"4", ",", "12", ",", "6"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"4", ",", "16", ",", "7"}], "}"}]}], "}"}], ",", 
         TemplateBox[{"110"}, "OutputSizeLimit`Skeleton"], ",", 
         RowBox[{"{", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{"1", ",", "3", ",", "5"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"1", ",", "5", ",", "8"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"1", ",", "6", ",", "7"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"1", ",", "7", ",", "3"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"1", ",", "8", ",", "6"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"2", ",", "4", ",", "8"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"2", ",", "5", ",", "7"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"2", ",", "6", ",", "4"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"2", ",", "7", ",", "6"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"2", ",", "8", ",", "5"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"3", ",", "7", ",", "5"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"4", ",", "6", ",", "8"}], "}"}]}], "}"}]}], "}"}], 
     Short[#, 5]& ], "line" -> 172, "sessionID" -> 16937227258867162981, 
   "byteCount" -> 504188, "size" -> 5, "stored" -> False, "expr" -> 
   Missing["NotAvailable", "NewSessionID"], "wrap" -> OutputSizeLimit`Defer, 
   "version" -> 1|>,
  "OutputSizeLimitTemplate"]], "Output",
 CellChangeTimes->{{3.877277355147786*^9, 3.8772773640919437`*^9}},
 CellLabel->
  "Out[172]=",ExpressionUUID->"6a3a79a4-16f1-47ed-96c4-db23190de81d"]
}, Open  ]],

Cell["\<\
I am going to work on creating a function to make a planar coloring. I used \
the code from ColorGraphEdges to build a new function ColorPlanarGraphFaces.\
\>", "Text",
 CellChangeTimes->{{3.877277403925788*^9, 3.8772774141575017`*^9}, {
  3.877278382517707*^9, 
  3.8772784142357397`*^9}},ExpressionUUID->"8752c286-d44b-4d79-ab3a-\
60bb8632c2c9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
  "ResourceFunction", "[", "\"\<ResourceFunctionDefinitionViewer\>\"", "]"}], 
  "[", "\"\<ColorGraphEdges\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.877277417099618*^9, 3.877277447946751*^9}},
 CellLabel->
  "In[174]:=",ExpressionUUID->"acff18d1-f0bb-4db5-8e88-a52c3b4b211e"],

Cell[BoxData[
 TemplateBox[<|
  "obj" -> NotebookObject[
    "da61faaf-7c16-4c62-bf43-6497d32d8cb2", 
     "8971a45f-6f5b-4977-91b4-3313d7823126"], "label" -> 
   "\"Definitions: ColorGraphEdges\""|>,
  "NotebookObjectUUIDsUnsaved"]], "Output",
 CellChangeTimes->{{3.877277438981807*^9, 3.8772774547716923`*^9}},
 CellLabel->
  "Out[174]=",ExpressionUUID->"9171d3cc-30d9-4057-86b8-fc8469c9a6b5"]
}, Open  ]],

Cell["Here is an example:", "Text",
 CellChangeTimes->{{3.877278429789127*^9, 
  3.8772784321175575`*^9}},ExpressionUUID->"74f1443b-f222-4632-89da-\
8375acc48b39"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceFunction", "[", 
   RowBox[{
   "CloudObject", "[", 
    "\"\<https://www.wolframcloud.com/obj/burbery1/DeployedResources/Function/\
ColorPlanarGraphFaces\>\"", "]"}], "]"}], "[", 
  RowBox[{"GraphData", "[", 
   RowBox[{"{", 
    RowBox[{"\"\<ChromaticallyEquivalent\>\"", ",", 
     RowBox[{"{", 
      RowBox[{"16", ",", "6", ",", "1"}], "}"}]}], "}"}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.877278425577203*^9, 3.877278425577203*^9}},
 CellLabel->
  "In[191]:=",ExpressionUUID->"ec1b8255-5e39-4d2a-a2b8-a3c442dbf5ee"],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.97, 0.606, 0.081], 
    PolygonBox[
     NCache[{{0, Rational[1, 2] 3^Rational[1, 2]}, {Rational[1, 2], 0}, {
       Rational[-1, 2], 0}}, {{0, 0.8660254037844386}, {
       0.5, 0}, {-0.5, 0}}]]}, 
   {RGBColor[0.97, 0.606, 0.081], 
    PolygonBox[
     NCache[{{0, Rational[1, 2] 3^Rational[1, 2]}, {
       Rational[-1, 6], Rational[13, 30]}, {
       Rational[1, 6], Rational[13, 30]}}, {{
       0, 0.8660254037844386}, {-0.16666666666666666`, 
       0.43333333333333335`}, {0.16666666666666666`, 
       0.43333333333333335`}}]]}, 
   {RGBColor[0.91, 0.318, 0.243], 
    PolygonBox[
     NCache[{{0, Rational[1, 2] 3^Rational[1, 2]}, {
       Rational[1, 6], Rational[13, 30]}, {Rational[1, 2], 0}}, {{
       0, 0.8660254037844386}, {0.16666666666666666`, 0.43333333333333335`}, {
       0.5, 0}}]]}, 
   {RGBColor[0.34398, 0.49112, 0.89936], 
    PolygonBox[
     NCache[{{0, Rational[1, 2] 3^Rational[1, 2]}, {Rational[-1, 2], 0}, {
       Rational[-1, 6], Rational[13, 30]}}, {{
       0, 0.8660254037844386}, {-0.5, 0}, {-0.16666666666666666`, 
       0.43333333333333335`}}]]}, 
   {RGBColor[0.34398, 0.49112, 0.89936], 
    PolygonBox[
     NCache[{{Rational[1, 2], 0}, {Rational[1, 6], Rational[1, 10]}, {
       Rational[-1, 2], 0}}, {{0.5, 0}, {0.16666666666666666`, 
       0.1}, {-0.5, 0}}]]}, 
   {RGBColor[0.34398, 0.49112, 0.89936], 
    PolygonBox[
     NCache[{{Rational[1, 2], 0}, {Rational[1, 6], Rational[13, 30]}, {
       Rational[1, 6], Rational[29, 90]}}, {{0.5, 0}, {0.16666666666666666`, 
       0.43333333333333335`}, {0.16666666666666666`, 
       0.32222222222222224`}}]]}, 
   {RGBColor[0.97, 0.606, 0.081], 
    PolygonBox[
     NCache[{{Rational[1, 2], 0}, {Rational[1, 6], Rational[29, 90]}, {
       Rational[1, 6], Rational[1, 10]}}, {{0.5, 0}, {0.16666666666666666`, 
       0.32222222222222224`}, {0.16666666666666666`, 0.1}}]]}, 
   {RGBColor[0.91, 0.318, 0.243], 
    PolygonBox[
     NCache[{{Rational[1, 6], Rational[1, 10]}, {
       Rational[-1, 18], Rational[1, 10]}, {Rational[-1, 2], 0}}, {{
       0.16666666666666666`, 0.1}, {-0.05555555555555555, 0.1}, {-0.5, 0}}]]}, 
   {RGBColor[0.34398, 0.49112, 0.89936], 
    PolygonBox[
     NCache[{{Rational[1, 6], Rational[1, 10]}, {
       Rational[1, 6], Rational[29, 90]}, {
       Rational[1, 18], Rational[4, 15]}}, {{0.16666666666666666`, 0.1}, {
      0.16666666666666666`, 0.32222222222222224`}, {0.05555555555555555, 
      0.26666666666666666`}}]]}, 
   {RGBColor[0.91, 0.318, 0.243], 
    PolygonBox[
     NCache[{{Rational[1, 6], Rational[1, 10]}, {
       Rational[1, 18], Rational[4, 15]}, {
       Rational[1, 18], Rational[7, 45]}}, {{0.16666666666666666`, 0.1}, {
      0.05555555555555555, 0.26666666666666666`}, {0.05555555555555555, 
      0.15555555555555556`}}]]}, 
   {RGBColor[0.97, 0.606, 0.081], 
    PolygonBox[
     NCache[{{Rational[1, 6], Rational[1, 10]}, {
       Rational[1, 18], Rational[7, 45]}, {
       Rational[-1, 18], Rational[1, 10]}}, {{0.16666666666666666`, 0.1}, {
      0.05555555555555555, 0.15555555555555556`}, {-0.05555555555555555, 
      0.1}}]]}, 
   {RGBColor[0.97, 0.606, 0.081], 
    PolygonBox[
     NCache[{{Rational[-1, 18], Rational[1, 10]}, {
       Rational[-1, 6], Rational[1, 10]}, {
       Rational[-1, 2], 0}}, {{-0.05555555555555555, 
       0.1}, {-0.16666666666666666`, 0.1}, {-0.5, 0}}]]}, 
   {RGBColor[0.91, 0.318, 0.243], 
    PolygonBox[
     NCache[{{Rational[-1, 18], Rational[1, 10]}, {
       Rational[-1, 18], Rational[7, 45]}, {
       Rational[-1, 6], Rational[1, 10]}}, {{-0.05555555555555555, 
      0.1}, {-0.05555555555555555, 
      0.15555555555555556`}, {-0.16666666666666666`, 0.1}}]]}, 
   {RGBColor[0.34398, 0.49112, 0.89936], 
    PolygonBox[
     NCache[{{Rational[-1, 18], Rational[1, 10]}, {
       Rational[1, 18], Rational[7, 45]}, {
       Rational[-1, 18], Rational[7, 45]}}, {{-0.05555555555555555, 0.1}, {
      0.05555555555555555, 0.15555555555555556`}, {-0.05555555555555555, 
      0.15555555555555556`}}]]}, 
   {RGBColor[0.34398, 0.49112, 0.89936], 
    PolygonBox[
     NCache[{{Rational[-1, 6], Rational[1, 10]}, {
       Rational[-1, 6], Rational[19, 90]}, {
       Rational[-1, 2], 0}}, {{-0.16666666666666666`, 
       0.1}, {-0.16666666666666666`, 0.2111111111111111}, {-0.5, 0}}]]}, 
   {RGBColor[0.97, 0.606, 0.081], 
    PolygonBox[
     NCache[{{Rational[-1, 6], Rational[1, 10]}, {
       Rational[-1, 18], Rational[7, 45]}, {
       Rational[-1, 6], Rational[19, 90]}}, {{-0.16666666666666666`, 
      0.1}, {-0.05555555555555555, 
      0.15555555555555556`}, {-0.16666666666666666`, 0.2111111111111111}}]]}, 
   {RGBColor[0.97, 0.606, 0.081], 
    PolygonBox[
     NCache[{{Rational[-1, 6], Rational[19, 90]}, {
       Rational[-1, 6], Rational[29, 90]}, {
       Rational[-1, 2], 0}}, {{-0.16666666666666666`, 
       0.2111111111111111}, {-0.16666666666666666`, 
       0.32222222222222224`}, {-0.5, 0}}]]}, 
   {RGBColor[0.34398, 0.49112, 0.89936], 
    PolygonBox[
     NCache[{{Rational[-1, 6], Rational[19, 90]}, {
       Rational[-1, 18], Rational[4, 15]}, {
       Rational[-1, 6], Rational[29, 90]}}, {{-0.16666666666666666`, 
      0.2111111111111111}, {-0.05555555555555555, 
      0.26666666666666666`}, {-0.16666666666666666`, 
      0.32222222222222224`}}]]}, 
   {RGBColor[0.97, 0.606, 0.081], 
    PolygonBox[
     NCache[{{Rational[-1, 6], Rational[19, 90]}, {
       Rational[-1, 18], Rational[19, 90]}, {
       Rational[-1, 18], Rational[4, 15]}}, {{-0.16666666666666666`, 
      0.2111111111111111}, {-0.05555555555555555, 
      0.2111111111111111}, {-0.05555555555555555, 0.26666666666666666`}}]]}, 
   {RGBColor[0.34398, 0.49112, 0.89936], 
    PolygonBox[
     NCache[{{Rational[-1, 6], Rational[19, 90]}, {
       Rational[-1, 18], Rational[7, 45]}, {
       Rational[-1, 18], Rational[19, 90]}}, {{-0.16666666666666666`, 
      0.2111111111111111}, {-0.05555555555555555, 
      0.15555555555555556`}, {-0.05555555555555555, 0.2111111111111111}}]]}, 
   {RGBColor[0.91, 0.318, 0.243], 
    PolygonBox[
     NCache[{{Rational[-1, 6], Rational[29, 90]}, {
       Rational[-1, 6], Rational[13, 30]}, {
       Rational[-1, 2], 0}}, {{-0.16666666666666666`, 
       0.32222222222222224`}, {-0.16666666666666666`, 
       0.43333333333333335`}, {-0.5, 0}}]]}, 
   {RGBColor[0.34398, 0.49112, 0.89936], 
    PolygonBox[
     NCache[{{Rational[-1, 6], Rational[29, 90]}, {
       Rational[1, 6], Rational[13, 30]}, {
       Rational[-1, 6], Rational[13, 30]}}, {{-0.16666666666666666`, 
      0.32222222222222224`}, {0.16666666666666666`, 
      0.43333333333333335`}, {-0.16666666666666666`, 
      0.43333333333333335`}}]]}, 
   {RGBColor[0.97, 0.606, 0.081], 
    PolygonBox[
     NCache[{{Rational[-1, 6], Rational[29, 90]}, {
       Rational[1, 6], Rational[29, 90]}, {
       Rational[1, 6], Rational[13, 30]}}, {{-0.16666666666666666`, 
      0.32222222222222224`}, {0.16666666666666666`, 0.32222222222222224`}, {
      0.16666666666666666`, 0.43333333333333335`}}]]}, 
   {RGBColor[0.91, 0.318, 0.243], 
    PolygonBox[
     NCache[{{Rational[-1, 6], Rational[29, 90]}, {
       Rational[-1, 18], Rational[4, 15]}, {
       Rational[1, 6], Rational[29, 90]}}, {{-0.16666666666666666`, 
      0.32222222222222224`}, {-0.05555555555555555, 0.26666666666666666`}, {
      0.16666666666666666`, 0.32222222222222224`}}]]}, 
   {RGBColor[0.97, 0.606, 0.081], 
    PolygonBox[
     NCache[{{Rational[1, 6], Rational[29, 90]}, {
       Rational[-1, 18], Rational[4, 15]}, {
       Rational[1, 18], Rational[4, 15]}}, {{0.16666666666666666`, 
      0.32222222222222224`}, {-0.05555555555555555, 0.26666666666666666`}, {
      0.05555555555555555, 0.26666666666666666`}}]]}, 
   {RGBColor[0.91, 0.318, 0.243], 
    PolygonBox[
     NCache[{{Rational[-1, 18], Rational[4, 15]}, {
       Rational[-1, 18], Rational[19, 90]}, {
       Rational[1, 18], Rational[4, 15]}}, {{-0.05555555555555555, 
      0.26666666666666666`}, {-0.05555555555555555, 0.2111111111111111}, {
      0.05555555555555555, 0.26666666666666666`}}]]}, 
   {RGBColor[0.34398, 0.49112, 0.89936], 
    PolygonBox[
     NCache[{{Rational[1, 18], Rational[4, 15]}, {
       Rational[-1, 18], Rational[19, 90]}, {
       Rational[1, 18], Rational[7, 45]}}, {{0.05555555555555555, 
      0.26666666666666666`}, {-0.05555555555555555, 0.2111111111111111}, {
      0.05555555555555555, 0.15555555555555556`}}]]}, 
   {RGBColor[0.97, 0.606, 0.081], 
    PolygonBox[
     NCache[{{Rational[-1, 18], Rational[19, 90]}, {
       Rational[-1, 18], Rational[7, 45]}, {
       Rational[1, 18], Rational[7, 45]}}, {{-0.05555555555555555, 
      0.2111111111111111}, {-0.05555555555555555, 0.15555555555555556`}, {
      0.05555555555555555, 0.15555555555555556`}}]]}}]], "Output",
 CellChangeTimes->{3.87727842908604*^9},
 CellLabel->
  "Out[191]=",ExpressionUUID->"24c7bf87-b294-45a6-9bfb-2c433f3f72f5"]
}, Open  ]],

Cell["\<\
I can compare the number of vertices n with the number of edges which should \
be 3n-6.\
\>", "Text",
 CellChangeTimes->{{3.8772784707334576`*^9, 
  3.877278486530712*^9}},ExpressionUUID->"45209bc5-3461-4f30-99ae-\
6a99236e5f06"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AllTrue", "[", 
  RowBox[{"triangulatedGraphsWithAtLastThreeVertices", ",", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"3", 
       RowBox[{"VertexCount", "[", 
        RowBox[{"GraphData", "[", "#", "]"}], "]"}]}], "-", "6"}], "==", 
     RowBox[{"EdgeCount", "[", 
      RowBox[{"GraphData", "[", "#", "]"}], "]"}]}], "&"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.877278507547649*^9, 3.877278538718193*^9}},
 CellLabel->
  "In[192]:=",ExpressionUUID->"d695de83-647f-48af-8c97-10c6317055ee"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.8772785396399593`*^9},
 CellLabel->
  "Out[192]=",ExpressionUUID->"9ff98f65-8867-4469-943f-09043c9140df"]
}, Open  ]],

Cell["This is true for all graphs.", "Text",
 CellChangeTimes->{{3.877278544276946*^9, 
  3.8772785481406064`*^9}},ExpressionUUID->"4ae28b62-d8a0-4e92-8784-\
84c1c90da898"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Exercise 47", "Section",
 CellChangeTimes->{{3.8772785840906515`*^9, 
  3.877278585765384*^9}},ExpressionUUID->"33369eb3-9cd0-47d2-a752-\
7cb124f348ce"],

Cell[TextData[{
 "Prove that the complete bigraph ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["K", 
    RowBox[{"3", ",", "3"}]], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "d8df3d91-9747-4d03-9c85-665ea2247da0"],
 " isn\[CloseCurlyQuote]t planar."
}], "Text",
 CellChangeTimes->{{3.8772785873481145`*^9, 
  3.8772786022172804`*^9}},ExpressionUUID->"a9a222df-7ecd-486a-a00b-\
ca074d19a8fd"],

Cell[TextData[{
 "This is related to the famous three utilities problem. It is well-known \
that you connect three houses to each other so each one has water, gas, and \
electricity. This means the complete bipartite graph ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["K", 
    RowBox[{"3", ",", "3"}]], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "06f0acf5-cef3-4041-9cea-47d390146ad7"],
 " is not planar and cannot be embedded in the plane. This graph can however, \
be embedded on a torus. The toroidal embedding of this graph could be used to \
create a solution to the three utilities on a torus or donut or coffee cup or \
tire or other object that topologically homeomorphic to a torus."
}], "Text",
 CellChangeTimes->{{3.877278606262924*^9, 
  3.877278739477131*^9}},ExpressionUUID->"f3d28020-c60e-4e1d-8eae-\
29fe5dd5869a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CompleteGraph", "[", 
  RowBox[{"{", 
   RowBox[{"3", ",", "3"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.8772787430921993`*^9, 3.877278745996645*^9}},
 CellLabel->"In[79]:=",ExpressionUUID->"c0065f40-8f93-4fc4-903c-0267079122bb"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{1, 2, 3, 4, 5, 6}, {Null, 
       SparseArray[
       Automatic, {6, 6}, 0, {
        1, {{0, 3, 6, 9, 12, 15, 18}, {{4}, {5}, {6}, {4}, {5}, {6}, {4}, {
          5}, {6}, {1}, {2}, {3}, {1}, {2}, {3}, {1}, {2}, {3}}}, 
         Pattern}]}, {
      GraphLayout -> {"MultipartiteLayout", "VertexPartition" -> {3, 3}}}]]}, 
    TagBox[
     GraphicsGroupBox[
      GraphicsComplexBox[{{0., -0.35901699437494755`}, {0., 0.}, {0., 
       0.35901699437494755`}, {1., -0.35901699437494755`}, {1., 0.}, {1., 
       0.35901699437494755`}}, {
        {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
         ArrowBox[{{1, 4}, {1, 5}, {1, 6}, {2, 4}, {2, 5}, {2, 6}, {3, 4}, {3,
           5}, {3, 6}}, 0.01273]}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         DiskBox[1, 0.01273], DiskBox[2, 0.01273], DiskBox[3, 0.01273], 
         DiskBox[4, 0.01273], DiskBox[5, 0.01273], DiskBox[6, 0.01273]}}]],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->"NetworkGraphics",
  FormatType->TraditionalForm,
  FrameTicks->None]], "Output",
 CellChangeTimes->{3.877278746449697*^9, 3.8772789626724997`*^9},
 CellLabel->"Out[79]=",ExpressionUUID->"dcafa96e-6936-4a6c-920c-eec84694bad6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PlanarGraphQ", "[", 
  RowBox[{"CompleteGraph", "[", 
   RowBox[{"{", 
    RowBox[{"3", ",", "3"}], "}"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8772787475590277`*^9, 3.87727875023392*^9}},
 CellLabel->
  "In[194]:=",ExpressionUUID->"50d5083b-5788-4dee-ad8b-6c6b2a059989"],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{3.877278750530763*^9},
 CellLabel->
  "Out[194]=",ExpressionUUID->"fa2442f8-08b6-4100-ab76-be112cbb2ee2"]
}, Open  ]],

Cell["Find the canonical graph:", "Text",
 CellChangeTimes->{{3.8772788379042172`*^9, 
  3.877278840915589*^9}},ExpressionUUID->"1c107692-04c0-46cf-8dd1-\
d5ee81d75a06"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CanonicalGraph", "[", 
  RowBox[{"CompleteGraph", "[", 
   RowBox[{"{", 
    RowBox[{"3", ",", "3"}], "}"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.877278828932147*^9, 3.8772788343887463`*^9}},
 CellLabel->
  "In[195]:=",ExpressionUUID->"9eaf23ec-eca2-4fe2-bc53-736a0ce3d511"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{1, 2, 3, 4, 5, 6}, {Null, 
       SparseArray[
       Automatic, {6, 6}, 0, {
        1, {{0, 3, 6, 9, 12, 15, 18}, {{3}, {4}, {5}, {3}, {4}, {5}, {1}, {
          2}, {6}, {1}, {2}, {6}, {1}, {2}, {6}, {3}, {4}, {5}}}, 
         Pattern}]}]]}, 
    TagBox[
     GraphicsGroupBox[
      GraphicsComplexBox[{{0.7838865497975844, 0.7305948539476249}, {
       0.6766515978658769, 0.}, {0.0013338785384966467`, 
       1.0711569032415549`}, {1.5362714341317965`, 0.7293164161893542}, {0., 
       0.39203047432578986`}, {0.6792317594364689, 1.462177416117535}}, {
        {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
         ArrowBox[{{1, 3}, {1, 4}, {1, 5}, {2, 3}, {2, 4}, {2, 5}, {3, 6}, {4,
           6}, {5, 6}}, 0.018734289183135328`]}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         DiskBox[1, 0.018734289183135328], DiskBox[2, 0.018734289183135328], 
         DiskBox[3, 0.018734289183135328], DiskBox[4, 0.018734289183135328], 
         DiskBox[5, 0.018734289183135328], 
         DiskBox[6, 0.018734289183135328]}}]],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None]], "Output",
 CellChangeTimes->{3.8772788348729687`*^9},
 CellLabel->
  "Out[195]=",ExpressionUUID->"dce7fa63-1880-466b-a89e-bb0696d194d2"]
}, Open  ]],

Cell["Find the name of the graph data entry:", "Text",
 CellChangeTimes->{{3.8772790115716066`*^9, 
  3.8772790167042613`*^9}},ExpressionUUID->"48a8488d-7969-4ab0-af14-\
6b1f65c70793"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GraphData", "[", 
  RowBox[{"{", 
   RowBox[{"\"\<CompleteBipartite\>\"", ",", " ", 
    RowBox[{"{", 
     RowBox[{"3", ",", " ", "3"}], "}"}]}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.87727898201678*^9, 3.8772789917533712`*^9}},
 CellLabel->"In[80]:=",ExpressionUUID->"ae4e1d27-f231-4541-ba2b-e96bdeb7ba2b"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{1, 2, 3, 4, 5, 6}, {Null, 
       SparseArray[
       Automatic, {6, 6}, 0, {
        1, {{0, 3, 6, 9, 12, 15, 18}, {{4}, {5}, {6}, {4}, {5}, {6}, {4}, {
          5}, {6}, {1}, {2}, {3}, {1}, {2}, {3}, {1}, {2}, {3}}}, 
         Pattern}]}, {
      VertexCoordinates -> {{1, -1}, {1, 0}, {1, 1}, {2, -1}, {2, 0}, {2, 
        1}}}]]}, 
    TagBox[
     GraphicsGroupBox[
      GraphicsComplexBox[{{1., -1.}, {1., 0.}, {1., 1.}, {2., -1.}, {2., 
       0.}, {2., 1.}}, {
        {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
         ArrowBox[{{1, 4}, {1, 5}, {1, 6}, {2, 4}, {2, 5}, {2, 6}, {3, 4}, {3,
           5}, {3, 6}}, 0.02261146496815286]}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         DiskBox[1, 0.02261146496815286], DiskBox[2, 0.02261146496815286], 
         DiskBox[3, 0.02261146496815286], DiskBox[4, 0.02261146496815286], 
         DiskBox[5, 0.02261146496815286], DiskBox[6, 0.02261146496815286]}}]],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->"NetworkGraphics",
  FormatType->TraditionalForm,
  FrameTicks->None]], "Output",
 CellChangeTimes->{3.8772789924877357`*^9},
 CellLabel->"Out[80]=",ExpressionUUID->"ad1d7570-00f2-41b0-893a-03c67e361a3c"]
}, Open  ]],

Cell["Verify the graphs are isomorphic:", "Text",
 CellChangeTimes->{{3.8772790200639353`*^9, 
  3.877279025595178*^9}},ExpressionUUID->"44228eec-957e-4ec4-a610-\
7594b28b2021"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"IsomorphicGraphQ", "[", 
  RowBox[{
   RowBox[{"GraphData", "[", 
    RowBox[{"{", 
     RowBox[{"\"\<CompleteBipartite\>\"", ",", " ", 
      RowBox[{"{", 
       RowBox[{"3", ",", " ", "3"}], "}"}]}], "}"}], "]"}], ",", 
   RowBox[{"CompleteGraph", "[", 
    RowBox[{"{", 
     RowBox[{"3", ",", "3"}], "}"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8772789959784718`*^9, 3.8772790026653805`*^9}},
 CellLabel->"In[81]:=",ExpressionUUID->"7f97ce75-5056-4771-ae3b-943c9572f108"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.877279002915357*^9},
 CellLabel->"Out[81]=",ExpressionUUID->"673502ea-03b3-4b78-a39e-b70217bf5adc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GraphData", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\"\<CompleteBipartite\>\"", ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "3"}], "}"}]}], "}"}], ",", "\"\<Planar\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8772790288814898`*^9, 3.87727904994549*^9}},
 CellLabel->"In[83]:=",ExpressionUUID->"d71a1fba-1209-40ff-94a2-cde151c2351d"],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{{3.8772790452718287`*^9, 3.8772790508673735`*^9}},
 CellLabel->"Out[83]=",ExpressionUUID->"b540e48b-5f41-452e-9d08-cd34cc92c0ed"]
}, Open  ]],

Cell["\<\
The property apices is the list of vertices whose removal renders the graph \
planar:\
\>", "Text",
 CellChangeTimes->{{3.8772791064280567`*^9, 
  3.877279118849392*^9}},ExpressionUUID->"e9a4c995-5048-44d5-a9de-\
104acb0e7de4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GraphData", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\"\<CompleteBipartite\>\"", ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "3"}], "}"}]}], "}"}], ",", "\"\<Apices\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8772790288814898`*^9, 3.87727904994549*^9}, {
  3.877279120036894*^9, 3.8772791233262067`*^9}},
 CellLabel->"In[84]:=",ExpressionUUID->"12d474c3-9ba0-446e-a9b3-8afba3b1444a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.8772791236386223`*^9},
 CellLabel->"Out[84]=",ExpressionUUID->"70d66686-13f0-4aa3-8035-42c817b0029b"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Exercise 25", "Section",
 CellChangeTimes->{{3.8772791425286226`*^9, 
  3.8772791461379156`*^9}},ExpressionUUID->"377503dc-bb07-46f9-a0ab-\
12dbe0c29f66"],

Cell["\<\
Complete the proof of Theorem B by showing that the stated procedure never \
the same color to two adjacent vertices.\
\>", "Text",
 CellChangeTimes->{{3.8772792251915474`*^9, 
  3.8772792447037334`*^9}},ExpressionUUID->"47d420ef-5a8d-4348-bf4a-\
36c88b991660"],

Cell["\<\
Theorem B: A graph is bipartite if and only if it contains no cycle of odd \
length.\
\>", "Text",
 CellChangeTimes->{{3.8772791754640355`*^9, 
  3.877279192930375*^9}},ExpressionUUID->"215a8f8d-aea0-4776-8145-\
0c72bf939508"],

Cell[TextData[{
 "Conversely, if a graph contains no odd cycles we can color its vertices \
with the two colors {0,1} by carrying out the following procedure: Begin with \
all vertices uncolored. If all neighbors of colored vertices are already \
colored, choose an uncolored vertex ",
 Cell[BoxData[
  FormBox["w", TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "ed4426f5-f2da-4c98-b748-cc6fb058e16e"],
 ", and color it 0. Otherwise choose a colored vertex ",
 Cell[BoxData[
  FormBox["u", TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "d749af6c-3b64-4208-bc1d-74fda51bf056"],
 " that has an uncolored neighbor ",
 Cell[BoxData[
  FormBox["v", TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "77a8a680-16b3-48e6-aafb-2e8b4476a262"],
 "; assign to ",
 Cell[BoxData[
  FormBox["v", TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "b6e509e9-a295-4b99-9997-d4e284103f55"],
 " the opposite color. Exercise 48 proves that a valid 2-coloring is \
eventually obtained."
}], "Text",
 CellChangeTimes->{{3.8772791964568996`*^9, 3.8772792084779935`*^9}, {
  3.877279294532379*^9, 
  3.877279386753459*^9}},ExpressionUUID->"5b64afe6-0e78-4dbd-be66-\
7d091315dad9"],

Cell["I will use examples to demonstrate a case for this.", "Text",
 CellChangeTimes->{{3.877279247313116*^9, 
  3.877279256709482*^9}},ExpressionUUID->"cafe51bf-aa24-4b2a-8e73-\
4cd0246e721e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GraphData", "[", "\"\<Bipartite\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.8772793911287394`*^9, 3.8772794161939983`*^9}},
 CellLabel->"In[86]:=",ExpressionUUID->"93ca2f3d-00f8-4220-b918-d4db072ee393"],

Cell[BoxData[
 TemplateBox[<|"shortenedBoxes" -> TagBox[
     RowBox[{"{", 
       RowBox[{
         RowBox[{"{", 
           RowBox[{"6", ",", "13"}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"6", ",", "24"}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"6", ",", "32"}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"6", ",", "99"}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"7", ",", "15"}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"7", ",", "17"}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"7", ",", "22"}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"7", ",", "26"}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"7", ",", "32"}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"7", ",", "34"}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"7", ",", "40"}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"7", ",", "46"}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"7", ",", "48"}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"7", ",", "50"}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"7", ",", "54"}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"7", ",", "63"}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"7", ",", "68"}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"7", ",", "77"}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"7", ",", "93"}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"7", ",", "109"}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"7", ",", "131"}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"7", ",", "163"}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"7", ",", "177"}], "}"}], ",", 
         TemplateBox[{"3103"}, "OutputSizeLimit`Skeleton"], ",", 
         RowBox[{"{", 
           RowBox[{"\"ZeroTwoBipartite\"", ",", 
             RowBox[{"{", 
               RowBox[{"7", ",", "17"}], "}"}]}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"\"ZeroTwoBipartite\"", ",", 
             RowBox[{"{", 
               RowBox[{"7", ",", "18"}], "}"}]}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"\"ZeroTwoBipartite\"", ",", 
             RowBox[{"{", 
               RowBox[{"7", ",", "19"}], "}"}]}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"\"ZeroTwoBipartite\"", ",", 
             RowBox[{"{", 
               RowBox[{"7", ",", "20"}], "}"}]}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"\"ZeroTwoBipartite\"", ",", 
             RowBox[{"{", 
               RowBox[{"7", ",", "21"}], "}"}]}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"\"ZeroTwoBipartite\"", ",", 
             RowBox[{"{", 
               RowBox[{"7", ",", "22"}], "}"}]}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"\"ZeroTwoBipartite\"", ",", 
             RowBox[{"{", 
               RowBox[{"7", ",", "23"}], "}"}]}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"\"ZeroTwoBipartite\"", ",", 
             RowBox[{"{", 
               RowBox[{"7", ",", "24"}], "}"}]}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"\"ZeroTwoBipartite\"", ",", 
             RowBox[{"{", 
               RowBox[{"7", ",", "25"}], "}"}]}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"\"ZeroTwoBipartite\"", ",", 
             RowBox[{"{", 
               RowBox[{"7", ",", "26"}], "}"}]}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"\"ZeroTwoBipartite\"", ",", 
             RowBox[{"{", 
               RowBox[{"7", ",", "27"}], "}"}]}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"\"ZeroTwoBipartite\"", ",", 
             RowBox[{"{", 
               RowBox[{"7", ",", "28"}], "}"}]}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"\"ZeroTwoBipartite\"", ",", 
             RowBox[{"{", 
               RowBox[{"7", ",", "29"}], "}"}]}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"\"ZeroTwoBipartite\"", ",", 
             RowBox[{"{", 
               RowBox[{"7", ",", "30"}], "}"}]}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"\"ZeroTwoBipartite\"", ",", 
             RowBox[{"{", 
               RowBox[{"7", ",", "31"}], "}"}]}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"\"ZeroTwoBipartite\"", ",", 
             RowBox[{"{", 
               RowBox[{"7", ",", "32"}], "}"}]}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"\"ZeroTwoBipartite\"", ",", 
             RowBox[{"{", 
               RowBox[{"7", ",", "33"}], "}"}]}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"\"ZeroTwoBipartite\"", ",", 
             RowBox[{"{", 
               RowBox[{"7", ",", "34"}], "}"}]}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"\"ZeroTwoBipartite\"", ",", 
             RowBox[{"{", 
               RowBox[{"7", ",", "35"}], "}"}]}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"\"ZeroTwoBipartite\"", ",", 
             RowBox[{"{", 
               RowBox[{"7", ",", "36"}], "}"}]}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"\"ZeroTwoBipartite\"", ",", 
             RowBox[{"{", 
               RowBox[{"7", ",", "37"}], "}"}]}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"\"ZeroTwoBipartite\"", ",", 
             RowBox[{"{", 
               RowBox[{"7", ",", "38"}], "}"}]}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"\"ZeroTwoBipartite\"", ",", 
             RowBox[{"{", 
               RowBox[{"7", ",", "39"}], "}"}]}], "}"}]}], "}"}], 
     Short[#, 8]& ], "line" -> 86, "sessionID" -> 16937289918179914857, 
   "byteCount" -> 655424, "size" -> 8, "stored" -> False, "expr" -> 
   Missing["NotAvailable", "NewSessionID"], "wrap" -> OutputSizeLimit`Defer, 
   "version" -> 1|>,
  "OutputSizeLimitTemplate"]], "Output",
 CellChangeTimes->{{3.8772794044921036`*^9, 3.877279416803255*^9}},
 CellLabel->"Out[86]=",ExpressionUUID->"2e614366-50ec-467d-81a0-81189b6c4417"]
}, Open  ]],

Cell["\<\
I will verify that all bipartite graphs have a chromatic number of two.\
\>", "Text",
 CellChangeTimes->{{3.877279458273652*^9, 
  3.877279472800804*^9}},ExpressionUUID->"03c63fde-dc74-4443-9a24-\
9048c1976a1f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AllTrue", "[", 
  RowBox[{
   RowBox[{"GraphData", "[", "\"\<Bipartite\>\"", "]"}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"GraphData", "[", 
      RowBox[{"#", ",", "\"\<ChromaticNumber\>\""}], "]"}], "==", "2"}], 
    "&"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.877279431312954*^9, 3.877279446877643*^9}},
 CellLabel->
  "In[196]:=",ExpressionUUID->"14dd17ba-a133-45d6-b7a0-fe3396b23626"],

Cell[BoxData[
 DynamicModuleBox[{Progress`ProgressDump`forceRedraw$$ = {{}, {{2}}}, 
  Progress`ProgressDump`open$$ = True, Progress`ProgressDump`clock$$ = 2, 
  Progress`ProgressDump`maxTime$$ = DirectedInfinity[1]}, 
  OverlayBox[{
   AnimatorBox[Dynamic[Progress`ProgressDump`clock$$], {2., 
     DirectedInfinity[1], 0.4},
    AnimationRate->1,
    AnimationRunTime->0.,
    AppearanceElements->None,
    ImageSize->{1, 1}], 
   DynamicWrapperBox[
    DynamicBox[ToBoxes[
      Progress`GenerateProgressPanel[<|
       "Percentage" :> PacletManager`Manager`Private`progress$3383147, 
        "RemainingTime" :> Automatic, "Text" :> 
        "Loading from Wolfram Research server\[Ellipsis]"|>, <|{
        "DelayedTask" -> ScheduledTaskObject[15, 
           HoldForm[AppendTo[Progress`ProgressDump`this$state$3383149, 
              Progress`ProgressDump`CreateProgressState[
              Progress`ProgressDump`parameters$3383149, 
               Progress`ProgressDump`info$3383149]]; 
            Progress`ProgressDump`ProgressInit[
             Progress`ProgressDump`this$state$3383149]; Null], {2, 1}, 
           Automatic, True, "AutoRemove" -> False, "EpilogFunction" :> Null, 
           "TaskGroup" -> "Global`"], "State" :> 
         Progress`ProgressDump`this$state$3383149, "Title" -> "Computing...", 
         "Type" -> "Panel", "Environment" -> "Notebook", 
         "Parameters" -> <|
          "Percentage" :> PacletManager`Manager`Private`progress$3383147, 
           "RemainingTime" :> Automatic, "Text" :> 
           "Loading from Wolfram Research server\[Ellipsis]"|>, 
         "PreemptibleQ" -> True, "ConsoleQ" -> True, "Evaluator" -> "Local", 
         "EvaluationCell" -> 
         CellObject[
          "14dd17ba-a133-45d6-b7a0-fe3396b23626", 
           "d3cd5ca4-6a52-4ffa-a54e-e674bf99c40a"], "TimeStart" -> 
         3.8772614999433147`17.341100081926907*^9, "TimeStartLocal" -> 
         3.8772614999433147`17.341100081926907*^9, "InitialTimeEstimate" -> 
         Indeterminate, "UpdateInterval" -> 0.4, "OuterUpdateInterval" -> 0.4,
          "Buttons" -> None, "Optional" -> {}, "ContainerQ" -> False, 
         "CreateContainerQ" -> False, "CurrentContainer" -> None, 
         "PreviousContainer" -> None, "ContainerName" -> None, "Cell" -> 
         Hold[Progress`ProgressDump`cell$3383584], "Clock" :> 
         Dynamic[Progress`ProgressDump`clock$$], "Redraw" -> 
         Progress`ProgressDump`forceRedraw$$, "Open" :> 
         Dynamic[Progress`ProgressDump`open$$]}|>], StandardForm],
     ImageSizeCache->{352., {20.900390625, 27.099609375}},
     TrackedSymbols:>{Progress`ProgressDump`forceRedraw$$}], Refresh[
    Progress`ProgressDump`forceRedraw$$ = 
     With[{Progress`ProgressDump`values = Quiet[
          
          Values[<|"Percentage" :> 
            PacletManager`Manager`Private`progress$3383147, "RemainingTime" :> 
            Automatic, "Text" :> 
            "Loading from Wolfram Research server\[Ellipsis]"|>]]}, 
       Map[
       Position[Progress`ProgressDump`values, #, Infinity]& , {
        None, Automatic}]], UpdateInterval -> 
     Lookup[<|"DelayedTask" -> ScheduledTaskObject[15, 
          HoldForm[AppendTo[Progress`ProgressDump`this$state$3383149, 
             Progress`ProgressDump`CreateProgressState[
             Progress`ProgressDump`parameters$3383149, 
              Progress`ProgressDump`info$3383149]]; 
           Progress`ProgressDump`ProgressInit[
            Progress`ProgressDump`this$state$3383149]; Null], {2, 1}, 
          Automatic, True, "AutoRemove" -> False, "EpilogFunction" :> Null, 
          "TaskGroup" -> "Global`"], "State" :> 
        Progress`ProgressDump`this$state$3383149, "Title" -> "Computing...", 
        "Type" -> "Panel", "Environment" -> "Notebook", 
        "Parameters" -> <|
         "Percentage" :> PacletManager`Manager`Private`progress$3383147, 
          "RemainingTime" :> Automatic, "Text" :> 
          "Loading from Wolfram Research server\[Ellipsis]"|>, "PreemptibleQ" -> 
        True, "ConsoleQ" -> True, "Evaluator" -> "Local", "EvaluationCell" -> 
        CellObject[
         "14dd17ba-a133-45d6-b7a0-fe3396b23626", 
          "d3cd5ca4-6a52-4ffa-a54e-e674bf99c40a"], "TimeStart" -> 
        3.8772614999433147`17.341100081926907*^9, "TimeStartLocal" -> 
        3.8772614999433147`17.341100081926907*^9, "InitialTimeEstimate" -> 
        Indeterminate, "UpdateInterval" -> 0.4, "OuterUpdateInterval" -> 0.4, 
        "Buttons" -> None, "Optional" -> {}, "ContainerQ" -> False, 
        "CreateContainerQ" -> False, "CurrentContainer" -> None, 
        "PreviousContainer" -> None, "ContainerName" -> None, "Cell" -> 
        Hold[Progress`ProgressDump`cell$3383584], "Clock" -> Dynamic[None]|>, 
       "OuterUpdateInterval"], TrackedSymbols :> {}],
    ImageSizeCache->{352., {20.900390625, 27.099609375}}]}, All, 2],
  DynamicModuleValues:>{}]], "PrintTemporary",
 ShowCellLabel->True,
 CellChangeTimes->{3.877279501990279*^9},
 CellLabel->
  "During evaluation of \
In[196]:=",ExpressionUUID->"ab0fd33a-1903-4233-8b47-b4651491d2e6"]
}, Open  ]],

Cell["", "Text",
 CellChangeTimes->{{3.877279289365843*^9, 
  3.877279289881561*^9}},ExpressionUUID->"ca927528-b031-4431-9344-\
c7b5ebde14a7"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1152., 585.6},
WindowMargins->{{
  Automatic, -5.399999999999864}, {-5.399999999999977, Automatic}},
FrontEndVersion->"13.1 for Microsoft Windows (64-bit) (June 16, 2022)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"2e899b20-85b9-4c0a-b2ba-717454a9e1ad"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 265, 6, 160, "Title",ExpressionUUID->"23510547-758b-498e-b1cc-e16255078060"],
Cell[CellGroupData[{
Cell[870, 32, 205, 4, 67, "Section",ExpressionUUID->"783978e7-073d-4de7-9da9-d53f65d84f32"],
Cell[1078, 38, 623, 21, 35, "Text",ExpressionUUID->"1718777a-80ef-41ee-8c05-ea49fce358d0"],
Cell[CellGroupData[{
Cell[1726, 63, 319, 7, 28, "Input",ExpressionUUID->"40010bc4-9a5f-4c45-b130-903a55ab4dd1"],
Cell[2048, 72, 13350, 259, 435, "Output",ExpressionUUID->"9d99222e-1df7-4e0f-a40d-2b77e6b80e7b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[15435, 336, 349, 8, 28, "Input",ExpressionUUID->"be6251f1-0ee4-4389-baf0-97cda980040c"],
Cell[15787, 346, 9255, 188, 238, "Output",ExpressionUUID->"ff418fd0-2a66-4eec-9dd1-cf077bfa9ddc"]
}, Open  ]],
Cell[25057, 537, 261, 6, 35, "Text",ExpressionUUID->"8abb2d9f-436a-4acb-afb8-bb830e53cf1c"],
Cell[CellGroupData[{
Cell[25343, 547, 1370, 31, 105, "Input",ExpressionUUID->"c296a6bb-835b-44f6-9738-15538067f2a0"],
Cell[26716, 580, 258, 5, 32, "Output",ExpressionUUID->"194ed91e-4132-47db-903b-b7d1d71701d1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[27011, 590, 219, 3, 28, "Input",ExpressionUUID->"f33d7c4d-e620-4981-8a8d-cf95f6e51fc8"],
Cell[27233, 595, 424, 7, 32, "Output",ExpressionUUID->"74ca0031-7808-428f-bcfd-d3a80d263b5e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[27694, 607, 251, 4, 28, "Input",ExpressionUUID->"62ec24f5-e44f-42bd-a014-eb7440fcda52"],
Cell[27948, 613, 86582, 1936, 957, "Output",ExpressionUUID->"1a8c2dc9-e46e-4dba-8237-f2e211f6d507"]
}, Open  ]],
Cell[CellGroupData[{
Cell[114567, 2554, 476, 11, 28, "Input",ExpressionUUID->"42ce2d0c-9e75-4309-9e36-2a1a9de9cdf5"],
Cell[115046, 2567, 196, 4, 32, "Output",ExpressionUUID->"53fa4aca-a6aa-47ec-9840-b50f5450581e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[115279, 2576, 440, 10, 28, "Input",ExpressionUUID->"6252ebcd-9cc8-4c3e-a834-d1fc4d4f6881"],
Cell[115722, 2588, 173, 3, 32, "Output",ExpressionUUID->"eeaa6233-e9fa-4e19-be20-588d31a66dc4"]
}, Open  ]],
Cell[115910, 2594, 283, 6, 35, "Text",ExpressionUUID->"e333f069-bd4f-468e-a05d-f5f4ffb5ddc9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[116230, 2605, 158, 3, 67, "Section",ExpressionUUID->"938282ed-1f4e-4651-ae92-d9e0412a1a09"],
Cell[116391, 2610, 215, 5, 35, "Text",ExpressionUUID->"820b0c65-ea86-4609-97e2-2dcd236a42f3"],
Cell[116609, 2617, 258, 6, 35, "Text",ExpressionUUID->"484a6962-18fa-415f-8235-48e8737599e9"],
Cell[CellGroupData[{
Cell[116892, 2627, 227, 3, 28, "Input",ExpressionUUID->"ae69387c-831a-493e-b651-bb03f11a6aaf"],
Cell[117122, 2632, 1928, 35, 359, "Output",ExpressionUUID->"b8c4ae9e-920e-47eb-a8dd-8639ff565ada"]
}, Open  ]],
Cell[CellGroupData[{
Cell[119087, 2672, 792, 20, 28, "Input",ExpressionUUID->"0ba47069-28dd-4b7f-a0ea-9192e9c48baa"],
Cell[119882, 2694, 1877, 33, 331, "Output",ExpressionUUID->"17a44d1b-43c2-4d87-a606-ef93daeb5d8c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[121796, 2732, 948, 23, 48, "Input",ExpressionUUID->"564178b2-11a3-477b-aa16-af52dbf8c1e7"],
Cell[122747, 2757, 154, 2, 32, "Output",ExpressionUUID->"5d52baf7-fc6a-425e-8b7e-9a703c0055a1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[122938, 2764, 1060, 25, 48, "Input",ExpressionUUID->"8f2327e6-cc7b-4d2a-8bdd-f327feae0186"],
Cell[124001, 2791, 650, 16, 32, "Output",ExpressionUUID->"474dc61a-a62b-4976-a34b-01345dde26ff"]
}, Open  ]],
Cell[CellGroupData[{
Cell[124688, 2812, 272, 5, 28, "Input",ExpressionUUID->"ba127e6f-8c6a-4047-b352-6a213255dd03"],
Cell[124963, 2819, 15812, 497, 491, "Output",ExpressionUUID->"3ae698b1-8bc4-4448-9258-1a6936d2a340"]
}, Open  ]],
Cell[CellGroupData[{
Cell[140812, 3321, 308, 6, 28, "Input",ExpressionUUID->"c90720f0-425c-4ca6-a6ab-c08c27da366a"],
Cell[141123, 3329, 152, 2, 32, "Output",ExpressionUUID->"7c10de78-8e13-481e-9928-258ca71eae9d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[141312, 3336, 476, 11, 28, "Input",ExpressionUUID->"7670efde-f0cf-4dee-b663-78a320dbfa58"],
Cell[141791, 3349, 26659, 494, 611, "Output",ExpressionUUID->"5f2b1e88-edf2-4ff4-92ec-0fbc50cbea75"]
}, Open  ]],
Cell[CellGroupData[{
Cell[168487, 3848, 790, 20, 28, "Input",ExpressionUUID->"da2a7170-bc92-4504-ad48-55e8a67d7bd0"],
Cell[169280, 3870, 1857, 33, 276, "Output",ExpressionUUID->"18133ce4-440a-4836-b382-4b74a4fa1799"]
}, Open  ]],
Cell[CellGroupData[{
Cell[171174, 3908, 992, 24, 48, "Input",ExpressionUUID->"7ea04af8-14ba-4287-a623-2ae9a4f6d5b5"],
Cell[172169, 3934, 4080, 83, 405, "Output",ExpressionUUID->"c4e412d6-25fe-4e64-99d7-7b897f7855e1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[176286, 4022, 1105, 26, 48, "Input",ExpressionUUID->"6e4ff799-4678-4e8c-8802-a6ef4878bb83"],
Cell[177394, 4050, 155, 2, 32, "Output",ExpressionUUID->"81bb6ad9-1a2a-4631-ba62-831c0535f6d9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[177586, 4057, 2882, 53, 103, "Input",ExpressionUUID->"9d928a54-75f4-44d1-bfb9-26049db1a431"],
Cell[180471, 4112, 671, 16, 32, "Output",ExpressionUUID->"a3be9754-8553-4fdb-8542-926e02b4bbbe"]
}, Open  ]],
Cell[181157, 4131, 2863, 54, 103, "Input",ExpressionUUID->"ca12cb99-8dd5-4902-bf0d-7172bcb4600a"],
Cell[CellGroupData[{
Cell[184045, 4189, 2899, 55, 93, "Input",ExpressionUUID->"3d80461f-8d40-491b-9921-92e330c551fc"],
Cell[186947, 4246, 650, 16, 52, "Output",ExpressionUUID->"405a1890-997e-4fad-b532-0f00ab30920f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[187634, 4267, 2052, 38, 104, "Input",ExpressionUUID->"c989af07-f08b-4a6e-8725-5c31aa4e7d0f"],
Cell[189689, 4307, 648, 16, 52, "Output",ExpressionUUID->"3e9aa0bb-0222-443c-984c-7c853f7c1fbb"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[190386, 4329, 209, 4, 67, "Section",ExpressionUUID->"e5619394-c8c3-4629-a93d-5d930f6dd6db"],
Cell[190598, 4335, 219, 4, 35, "Text",ExpressionUUID->"0a3d45db-3116-47d7-bcfc-bb6646137ec2"],
Cell[CellGroupData[{
Cell[190842, 4343, 230, 3, 28, "Input",ExpressionUUID->"68f857c8-c32c-41a1-9aff-e48c4530d5f1"],
Cell[191075, 4348, 2342, 41, 359, "Output",ExpressionUUID->"536746bb-c59f-43df-ab08-a9d2f64ff638"]
}, Open  ]],
Cell[CellGroupData[{
Cell[193454, 4394, 278, 5, 28, "Input",ExpressionUUID->"eeebe44a-c32f-47df-adab-b6fa20859b16"],
Cell[193735, 4401, 149, 2, 32, "Output",ExpressionUUID->"14e92b70-915c-47cd-b351-0726cf04ed75"]
}, Open  ]],
Cell[193899, 4406, 167, 3, 35, "Text",ExpressionUUID->"57109d7a-30b7-4484-b397-28b280a05647"]
}, Closed]],
Cell[CellGroupData[{
Cell[194103, 4414, 160, 3, 53, "Section",ExpressionUUID->"e74b2402-53dc-4f2b-865a-ddb7cbabe3e8"],
Cell[194266, 4419, 279, 6, 35, "Text",ExpressionUUID->"15b27fb6-0ee4-4fe5-b35b-253275c10ebe"],
Cell[CellGroupData[{
Cell[194570, 4429, 234, 3, 28, "Input",ExpressionUUID->"c4f3f6e7-518c-4bde-8712-df1a757a5fbb"],
Cell[194807, 4434, 6504, 95, 205, "Output",ExpressionUUID->"a5b9312c-1215-4851-87e7-0d1d75df1fb0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[201348, 4534, 273, 5, 28, "Input",ExpressionUUID->"12e32225-583e-444b-8383-69620b503cf5"],
Cell[201624, 4541, 152, 2, 32, "Output",ExpressionUUID->"02d1e6da-806d-416a-b544-a16619606e66"]
}, Open  ]],
Cell[CellGroupData[{
Cell[201813, 4548, 333, 6, 28, "Input",ExpressionUUID->"058dbe4c-21a5-4af4-beab-b1d0f1d666ce"],
Cell[202149, 4556, 175, 2, 32, "Output",ExpressionUUID->"68930ea9-c25f-4ae7-94d2-aa2577a05a07"]
}, Open  ]],
Cell[202339, 4561, 185, 3, 35, "Text",ExpressionUUID->"98bbe57f-8ece-485d-b111-911b3b9d25b3"],
Cell[CellGroupData[{
Cell[202549, 4568, 284, 5, 28, "Input",ExpressionUUID->"c2230d97-da35-44f3-a993-3f93dca4fdee"],
Cell[202836, 4575, 693, 11, 32, "Output",ExpressionUUID->"880bcbd5-10ef-4fa9-9f5c-82a35e1bffc0"]
}, Open  ]],
Cell[203544, 4589, 203, 3, 35, "Text",ExpressionUUID->"7cf7c94c-addf-47da-875a-d27a9491605a"],
Cell[CellGroupData[{
Cell[203772, 4596, 234, 3, 28, "Input",ExpressionUUID->"c0254b0e-358c-4976-ad5f-4f8650e53a66"],
Cell[204009, 4601, 40914, 747, 117, "Output",ExpressionUUID->"044e32cf-c194-4f4d-85db-44594355477b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[244960, 5353, 269, 4, 28, "Input",ExpressionUUID->"fec78320-b90e-4726-8f44-d2d9a8d7d13f"],
Cell[245232, 5359, 22135, 433, 96, "Output",ExpressionUUID->"ea4ffc2b-e99b-45d5-b390-69ee881abe42"]
}, Open  ]],
Cell[CellGroupData[{
Cell[267404, 5797, 284, 5, 28, "Input",ExpressionUUID->"cce883ae-2892-4521-a4b6-d5d2346c62ad"],
Cell[267691, 5804, 10860, 172, 205, "Output",ExpressionUUID->"0d2f4930-86c1-4d62-80da-87d5c2e6bb56"]
}, Open  ]],
Cell[CellGroupData[{
Cell[278588, 5981, 340, 6, 28, "Input",ExpressionUUID->"add4b26e-094f-48bc-b33e-d319ca88f570"],
Cell[278931, 5989, 10890, 171, 318, "Output",ExpressionUUID->"b1772741-29a2-4760-b65a-5703f55ffbca"]
}, Open  ]],
Cell[CellGroupData[{
Cell[289858, 6165, 389, 7, 28, "Input",ExpressionUUID->"435bffee-dc2c-4f22-b693-f2c464a0f8ef"],
Cell[290250, 6174, 10058, 158, 559, "Output",ExpressionUUID->"9a1035e2-9305-484c-91f6-cd6ce7ad7add"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[300357, 6338, 160, 3, 67, "Section",ExpressionUUID->"e409150f-59fd-4580-a52a-1449698f85e6"],
Cell[300520, 6343, 575, 14, 58, "Text",ExpressionUUID->"a3d90864-4c79-45cf-a794-8469ba49adff"],
Cell[301098, 6359, 327, 7, 35, "Text",ExpressionUUID->"61a7e904-7694-4a46-a59d-f4a264c02944"],
Cell[CellGroupData[{
Cell[301450, 6370, 230, 3, 28, "Input",ExpressionUUID->"b95c413d-4f63-468e-b246-75e871c98fdf"],
Cell[301683, 6375, 12879, 336, 527, "Output",ExpressionUUID->"a4311c77-bbdd-4ff6-b96f-d4739efd11d9"]
}, Open  ]],
Cell[314577, 6714, 347, 7, 58, "Text",ExpressionUUID->"189a61b3-c919-476a-825a-df4b796a31d4"],
Cell[314927, 6723, 177, 3, 35, "Text",ExpressionUUID->"94031fed-a0f2-4409-9bf2-0d22e1b51424"],
Cell[315107, 6728, 234, 6, 35, "Text",ExpressionUUID->"98e13d10-fc96-4aeb-865b-08686a7e713c"],
Cell[CellGroupData[{
Cell[315366, 6738, 278, 5, 28, "Input",ExpressionUUID->"25cd1a7e-51ff-47c3-b89e-94feee82959f"],
Cell[315647, 6745, 827, 14, 71, "Output",ExpressionUUID->"030fbd2d-c7eb-45c7-b269-abb1e03c9d3d"]
}, Open  ]],
Cell[316489, 6762, 310, 6, 28, "Input",ExpressionUUID->"a9048f6b-2126-4139-aaf3-c9b453c23804"],
Cell[316802, 6770, 74023, 1645, 791, "Input",ExpressionUUID->"414bbd95-dd0c-4eb6-989e-715c2287b2ee"],
Cell[390828, 8417, 144, 3, 35, "Text",ExpressionUUID->"885da1b7-ec20-4681-9388-981e6dd608fb"],
Cell[390975, 8422, 185, 3, 35, "Text",ExpressionUUID->"e9d5fcc8-224d-4e70-b9d1-7526d892abf7"],
Cell[391163, 8427, 228, 5, 35, "Text",ExpressionUUID->"55bdd4b6-fae6-45f4-9b59-f36f824428cf"],
Cell[391394, 8434, 171, 3, 35, "Text",ExpressionUUID->"7d9dd67b-8750-46ff-9df4-789f6ee357e6"],
Cell[CellGroupData[{
Cell[391590, 8441, 181, 2, 28, "Input",ExpressionUUID->"57500bd9-84cf-4ad1-9c2e-245b04ae8106"],
Cell[391774, 8445, 242, 3, 32, "Output",ExpressionUUID->"cc92e0ac-9ee6-446b-b6ed-aaffb1097b1e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[392053, 8453, 562, 12, 28, "Input",ExpressionUUID->"6e016324-642a-4fd2-b5cb-83d4070cbdcc"],
Cell[392618, 8467, 736, 14, 28, "Message",ExpressionUUID->"4d4342f0-b094-402d-bbd9-dd489551e27c"],
Cell[393357, 8483, 978, 18, 28, "Message",ExpressionUUID->"48347a54-3901-44ec-8b09-b13915addccd"],
Cell[394338, 8503, 12974, 338, 527, "Output",ExpressionUUID->"3cff55b4-e29f-49de-b316-f78bf7deeb13"]
}, Open  ]],
Cell[407327, 8844, 173, 3, 35, "Text",ExpressionUUID->"3dbfdf04-c32d-45c2-bd70-e8ef9abdb1e8"],
Cell[CellGroupData[{
Cell[407525, 8851, 185, 3, 28, "Input",ExpressionUUID->"d8b2b882-c9d5-4a8d-997d-34330bd4c81f"],
Cell[407713, 8856, 217, 4, 32, "Output",ExpressionUUID->"fc84b8c3-5fb7-4262-9d79-65b856288cb2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[407967, 8865, 424, 11, 28, "Input",ExpressionUUID->"c0617d92-db9d-4e6c-b5d8-2ed52384b76e"],
Cell[408394, 8878, 12828, 335, 527, "Output",ExpressionUUID->"96d0ace4-14c1-4345-ae06-415e861e2e4b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[421259, 9218, 342, 8, 28, "Input",ExpressionUUID->"5cb61c99-53fe-4f39-99f3-eb202971dc3b"],
Cell[421604, 9228, 5271, 118, 161, "Output",ExpressionUUID->"6a3a79a4-16f1-47ed-96c4-db23190de81d"]
}, Open  ]],
Cell[426890, 9349, 357, 7, 35, "Text",ExpressionUUID->"8752c286-d44b-4d79-ab3a-60bb8632c2c9"],
Cell[CellGroupData[{
Cell[427272, 9360, 313, 7, 28, "Input",ExpressionUUID->"acff18d1-f0bb-4db5-8e88-a52c3b4b211e"],
Cell[427588, 9369, 395, 9, 48, "Output",ExpressionUUID->"9171d3cc-30d9-4057-86b8-fc8469c9a6b5"]
}, Open  ]],
Cell[427998, 9381, 163, 3, 35, "Text",ExpressionUUID->"74f1443b-f222-4632-89da-8375acc48b39"],
Cell[CellGroupData[{
Cell[428186, 9388, 575, 15, 48, "Input",ExpressionUUID->"ec1b8255-5e39-4d2a-a2b8-a3c442dbf5ee"],
Cell[428764, 9405, 8937, 190, 330, "Output",ExpressionUUID->"24c7bf87-b294-45a6-9bfb-2c433f3f72f5"]
}, Open  ]],
Cell[437716, 9598, 239, 6, 35, "Text",ExpressionUUID->"45209bc5-3461-4f30-99ae-6a99236e5f06"],
Cell[CellGroupData[{
Cell[437980, 9608, 529, 13, 28, "Input",ExpressionUUID->"d695de83-647f-48af-8c97-10c6317055ee"],
Cell[438512, 9623, 158, 3, 32, "Output",ExpressionUUID->"9ff98f65-8867-4469-943f-09043c9140df"]
}, Open  ]],
Cell[438685, 9629, 172, 3, 35, "Text",ExpressionUUID->"4ae28b62-d8a0-4e92-8784-84c1c90da898"]
}, Open  ]],
Cell[CellGroupData[{
Cell[438894, 9637, 158, 3, 67, "Section",ExpressionUUID->"33369eb3-9cd0-47d2-a752-7cb124f348ce"],
Cell[439055, 9642, 416, 12, 35, "Text",ExpressionUUID->"a9a222df-7ecd-486a-a00b-ca074d19a8fd"],
Cell[439474, 9656, 856, 17, 104, "Text",ExpressionUUID->"f3d28020-c60e-4e1d-8eae-29fe5dd5869a"],
Cell[CellGroupData[{
Cell[440355, 9677, 260, 5, 28, "Input",ExpressionUUID->"c0065f40-8f93-4fc4-903c-0267079122bb"],
Cell[440618, 9684, 1387, 28, 281, "Output",ExpressionUUID->"dcafa96e-6936-4a6c-920c-eec84694bad6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[442042, 9717, 304, 7, 28, "Input",ExpressionUUID->"50d5083b-5788-4dee-ad8b-6c6b2a059989"],
Cell[442349, 9726, 157, 3, 32, "Output",ExpressionUUID->"fa2442f8-08b6-4100-ab76-be112cbb2ee2"]
}, Open  ]],
Cell[442521, 9732, 169, 3, 35, "Text",ExpressionUUID->"1c107692-04c0-46cf-8dd1-d5ee81d75a06"],
Cell[CellGroupData[{
Cell[442715, 9739, 307, 7, 28, "Input",ExpressionUUID->"9eaf23ec-eca2-4fe2-bc53-736a0ce3d511"],
Cell[443025, 9748, 1565, 32, 360, "Output",ExpressionUUID->"dce7fa63-1880-466b-a89e-bb0696d194d2"]
}, Open  ]],
Cell[444605, 9783, 184, 3, 35, "Text",ExpressionUUID->"48a8488d-7969-4ab0-af14-6b1f65c70793"],
Cell[CellGroupData[{
Cell[444814, 9790, 340, 7, 28, "Input",ExpressionUUID->"ae4e1d27-f231-4541-ba2b-e96bdeb7ba2b"],
Cell[445157, 9799, 1393, 29, 449, "Output",ExpressionUUID->"ad1d7570-00f2-41b0-893a-03c67e361a3c"]
}, Open  ]],
Cell[446565, 9831, 177, 3, 35, "Text",ExpressionUUID->"44228eec-957e-4ec4-a610-7594b28b2021"],
Cell[CellGroupData[{
Cell[446767, 9838, 510, 12, 28, "Input",ExpressionUUID->"7f97ce75-5056-4771-ae3b-943c9572f108"],
Cell[447280, 9852, 152, 2, 32, "Output",ExpressionUUID->"673502ea-03b3-4b78-a39e-b70217bf5adc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[447469, 9859, 373, 9, 28, "Input",ExpressionUUID->"d71a1fba-1209-40ff-94a2-cde151c2351d"],
Cell[447845, 9870, 181, 2, 32, "Output",ExpressionUUID->"b540e48b-5f41-452e-9d08-cd34cc92c0ed"]
}, Open  ]],
Cell[448041, 9875, 237, 6, 35, "Text",ExpressionUUID->"e9a4c995-5048-44d5-a9de-104acb0e7de4"],
Cell[CellGroupData[{
Cell[448303, 9885, 424, 10, 28, "Input",ExpressionUUID->"12d474c3-9ba0-446e-a9b3-8afba3b1444a"],
Cell[448730, 9897, 239, 5, 32, "Output",ExpressionUUID->"70d66686-13f0-4aa3-8035-42c817b0029b"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[449018, 9908, 160, 3, 67, "Section",ExpressionUUID->"377503dc-bb07-46f9-a0ab-12dbe0c29f66"],
Cell[449181, 9913, 271, 6, 35, "Text",ExpressionUUID->"47d420ef-5a8d-4348-bf4a-36c88b991660"],
Cell[449455, 9921, 236, 6, 35, "Text",ExpressionUUID->"215a8f8d-aea0-4776-8145-0c72bf939508"],
Cell[449694, 9929, 1236, 30, 81, "Text",ExpressionUUID->"5b64afe6-0e78-4dbd-be66-7d091315dad9"],
Cell[450933, 9961, 193, 3, 35, "Text",ExpressionUUID->"cafe51bf-aa24-4b2a-8e73-4cd0246e721e"],
Cell[CellGroupData[{
Cell[451151, 9968, 227, 3, 28, "Input",ExpressionUUID->"93ca2f3d-00f8-4220-b918-d4db072ee393"],
Cell[451381, 9973, 5999, 149, 218, "Output",ExpressionUUID->"2e614366-50ec-467d-81a0-81189b6c4417"]
}, Open  ]],
Cell[457395, 10125, 221, 5, 35, "Text",ExpressionUUID->"03c63fde-dc74-4443-9a24-9048c1976a1f"],
Cell[CellGroupData[{
Cell[457641, 10134, 423, 11, 28, "Input",ExpressionUUID->"14dd17ba-a133-45d6-b7a0-fe3396b23626"],
Cell[458067, 10147, 5081, 92, 59, "PrintTemporary",ExpressionUUID->"ab0fd33a-1903-4233-8b47-b4651491d2e6"]
}, Open  ]],
Cell[463163, 10242, 142, 3, 35, "Text",ExpressionUUID->"ca927528-b031-4431-9344-c7b5ebde14a7"]
}, Open  ]]
}, Open  ]]
}
]
*)

