(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     62104,       1287]
NotebookOptionsPosition[     58229,       1226]
NotebookOutlinePosition[     58652,       1242]
CellTagsIndexPosition[     58609,       1239]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell["This was my original code:", "Text",
 CellChangeTimes->{{3.878143845937995*^9, 
  3.8781438515440884`*^9}},ExpressionUUID->"2a19d277-a4e8-4913-8bc5-\
1693d5b21faa"],

Cell[BoxData[
 RowBox[{
  RowBox[{"gOfNDefinedAs", "[", "n_", "]"}], ":=", 
  RowBox[{
   UnderoverscriptBox["\[Sum]", 
    RowBox[{"i", "=", "1"}], "n"], 
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"-", "1"}], ")"}], "i"], 
     RowBox[{"GCD", "[", 
      RowBox[{"n", ",", 
       SuperscriptBox["i", "2"]}], "]"}]}], ")"}]}]}]], "Input",
 CellLabel->
  "In[252]:=",ExpressionUUID->"5dcf285c-6f59-483f-88b7-78e7a6a2b0eb"],

Cell[BoxData[
 RowBox[{
  RowBox[{"bigGOfN", "[", "n_", "]"}], ":=", 
  RowBox[{
   UnderoverscriptBox["\[Sum]", 
    RowBox[{"i", "=", "1"}], "n"], 
   RowBox[{"gOfNDefinedAs", "[", "i", "]"}]}]}]], "Input",
 CellLabel->
  "In[253]:=",ExpressionUUID->"2fd291bb-01a3-4512-9cfa-f3a5efd8b07c"],

Cell["\<\
It worked with the example given and I thought I could give it the goal of \
12345678 and after a really long I had the solution.\
\>", "Text",
 CellChangeTimes->{{3.8781438620399294`*^9, 
  3.87814388415342*^9}},ExpressionUUID->"bff04963-cb96-4826-b6c9-\
5d55e110c159"],

Cell["\<\
After waiting a long time I thought maybe it would help to avoid computing \
the squares of numbers a bunch of times.\
\>", "Text",
 CellChangeTimes->{{3.8781438855805707`*^9, 
  3.878143902611759*^9}},ExpressionUUID->"bb6a444e-8228-4a49-abd1-\
bd6410d65b0c"],

Cell["I came up with this example code:", "Text",
 CellChangeTimes->{{3.8781439143446617`*^9, 
  3.8781439200474305`*^9}},ExpressionUUID->"3fa35f6f-30c4-4d95-9816-\
97c66dc55ea8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"Sum", "[", 
    RowBox[{
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"-", "1"}], ")"}], "i"], 
      RowBox[{"GCD", "[", 
       RowBox[{"p", ",", "i"}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"Take", "[", 
        RowBox[{"SquaredElements", ",", "p"}], "]"}]}], "}"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"p", ",", "12"}], "}"}]}], "]"}]], "Input",
 CellLabel->
  "In[254]:=",ExpressionUUID->"ac658b42-1c9d-4ccc-b2f5-95e8353ac8e7"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "1"}], ",", "1", ",", 
   RowBox[{"-", "3"}], ",", "6", ",", 
   RowBox[{"-", "5"}], ",", "5", ",", 
   RowBox[{"-", "7"}], ",", "20", ",", 
   RowBox[{"-", "9"}], ",", "9", ",", 
   RowBox[{"-", "11"}], ",", "30"}], "}"}]], "Output",
 CellChangeTimes->{3.87814392302653*^9},
 CellLabel->
  "Out[254]=",ExpressionUUID->"517431f6-3b4b-43a9-8b3b-074ae676749b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TeXForm", "[", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"Sum", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"-", "1"}], ")"}], "^", "i"}], " ", 
       RowBox[{"GCD", "[", 
        RowBox[{"p", ",", "i"}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", 
        RowBox[{"Take", "[", 
         RowBox[{"SquaredElements", ",", "p"}], "]"}]}], "}"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"p", ",", "12"}], "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8781443360247593`*^9, 3.878144338533762*^9}},
 CellLabel->
  "In[256]:=",ExpressionUUID->"fff2c353-ccc9-4f62-b442-09b3e2f67a6f"],

Cell["\\{-1,1,-3,6,-5,5,-7,20,-9,9,-11,30\\}", "Output",
 CellChangeTimes->{3.878144339924756*^9},
 CellLabel->
  "Out[256]//TeXForm=",ExpressionUUID->"c320f9a7-88ff-4d36-9c0f-99dcddb49f43"]
}, Open  ]],

Cell["The example also works:", "Text",
 CellChangeTimes->{{3.8781439252856736`*^9, 
  3.878143931980574*^9}},ExpressionUUID->"f0273b50-bd93-477c-a90b-\
817588d6a0d3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Total", "[", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Sum", "[", 
      RowBox[{
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"-", "1"}], ")"}], "i"], 
        RowBox[{"GCD", "[", 
         RowBox[{"p", ",", "i"}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"Take", "[", 
          RowBox[{
           SuperscriptBox[
            RowBox[{"Range", "[", "1234", "]"}], "2"], ",", "p"}], "]"}]}], 
        "}"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"p", ",", "1234"}], "}"}]}], "]"}], "]"}], "//", 
  "RepeatedTiming"}]], "Input",
 CellChangeTimes->{{3.8781439356199136`*^9, 3.8781439401832204`*^9}},
 CellLabel->
  "In[255]:=",ExpressionUUID->"eefc507d-c81e-488a-96b9-c3c5cfd21cc3"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1.339789`", ",", "2194708"}], "}"}]], "Output",
 CellChangeTimes->{3.8781439431672573`*^9},
 CellLabel->
  "Out[255]=",ExpressionUUID->"bc1b3936-8719-4bbc-ae3a-a33251ef33dc"]
}, Open  ]],

Cell["\<\
I then looked at the sequence above on OEIS and found \
https://oeis.org/A353909.\
\>", "Text",
 CellChangeTimes->{{3.878143948598851*^9, 
  3.8781439659050636`*^9}},ExpressionUUID->"36990092-8644-40f5-9ef3-\
7841d65782b5"],

Cell["\<\
There was a program in GP pari that computed it with the eulerphi function so \
I decided to try that.\
\>", "Text",
 CellChangeTimes->{{3.878143967910123*^9, 
  3.878143990419694*^9}},ExpressionUUID->"601c4f0b-658a-49c7-8468-\
d69dc0c3699d"],

Cell["\<\
I don\[CloseCurlyQuote]t know that much about GP Pari but eventually I was \
able to run this code:\
\>", "Text",
 CellChangeTimes->{{3.8781439922505407`*^9, 
  3.878144011084812*^9}},ExpressionUUID->"0caa6331-a2cf-468e-bd09-\
206f1611f8fb"],

Cell["\<\
a (n) = {if ((n %2) == 1, return (-n));
  my (s = 0);
  fordivfactored (n, d, if ((d[1] %2) == 0, s += eulerphi (d)*core (d, \
1)[2]/d[1]));
  s*n;}\
\>", "Program",
 CellChangeTimes->{{3.878144016809866*^9, 
  3.878144040235926*^9}},ExpressionUUID->"c6446336-1ccc-4110-bdf4-\
a336bdd8cdf7"],

Cell["I create a vector:", "Text",
 CellChangeTimes->{{3.8781440424997487`*^9, 
  3.8781440470157223`*^9}},ExpressionUUID->"43312c76-81f2-455a-981e-\
8f558a85e567"],

Cell["X=[1..12345678]", "Program",
 CellChangeTimes->{{3.878144016809866*^9, 
  3.8781440671522703`*^9}},ExpressionUUID->"4df1bc5c-8483-446b-9473-\
44280961bbd1"],

Cell["I have the output:", "Text",
 CellChangeTimes->{{3.8781440690340896`*^9, 
  3.878144071877635*^9}},ExpressionUUID->"37bbbafe-f4ad-4e0a-9260-\
ff5ef446e7a6"],

Cell["Y=[a(n)|n<-X];", "Program",
 CellChangeTimes->{{3.878144016809866*^9, 
  3.8781440929537725`*^9}},ExpressionUUID->"05cab8ec-4b83-4656-91e7-\
aa533c6afabf"],

Cell["After waiting I ran this:", "Text",
 CellChangeTimes->{{3.8781440954286146`*^9, 
  3.878144099999072*^9}},ExpressionUUID->"de34a61d-4778-4891-afb5-\
e5af87e1c055"],

Cell["sum(i=1,12345678,Y[i])", "Program",
 CellChangeTimes->{{3.878144016809866*^9, 3.8781440671522703`*^9}, {
  3.878144103973257*^9, 
  3.878144112080604*^9}},ExpressionUUID->"3711dbc6-1b57-4b1e-9700-\
d0fb94674ebd"],

Cell["I got this answer:955892601606483.", "Text",
 CellChangeTimes->{{3.878144113587617*^9, 
  3.8781441317002897`*^9}},ExpressionUUID->"f160b36e-a6fb-4f4f-903c-\
4fc14a0050de"],

Cell[BoxData[{
 RowBox[{"G", "//", "ClearAll"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"G", "[", "n_", "]"}], ":=", 
  RowBox[{"Sum", "[", 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"-", "1"}], ")"}], "i"], 
    RowBox[{"Sum", "[", "]"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.8781446927328167`*^9, 
  3.878144717661601*^9}},ExpressionUUID->"442aa82a-111a-4818-8b7e-\
67b44d6211a4"],

Cell[CellGroupData[{

Cell["\<\
using Memoize

@memoize a(n) = n == 1 ? 1 : n == 2 ? 3 : 2a(n-2)+3

h(p, e) = p == 2 ? a(e+1) * 2^e : p^(e-1) * (p^(e\[Divide]2+1) + p^((e+1)\
\[Divide]2) - 1)

function G(N)
    M = N \[Divide] 2
    H, done = ones(Int, M), falses(M)
    for p in 2:M
        if !done[p]
            for e in ndigits(M, base=p)-1:-1:1
                for i in p^e:p^e:M
                    if i % p^(e+1) \[NotEqual] 0
                        H[i] *= h(p, e); done[i] = true
                    end
                end
            end
        end
    end
    sum(H) - ((N+1) \[Divide] 2)^2
end

@show @time G(12345678)\
\>", "ExternalLanguage",
 CellEvaluationLanguage->"Julia",
 CellChangeTimes->{3.878144779199032*^9},
 CellLabel->
  "In[258]:=",ExpressionUUID->"efa3e070-4766-47dc-96a4-3f9c85ef5a75"],

Cell[BoxData[
 TemplateBox[{
  "StartExternalSession", "help", 
   "\"For help configuring the Julia evaluator, see \
\\!\\(\\*TemplateBox[List[\\\"\\\\\\\"Configure Julia for \
ExternalEvaluate\\\\\\\"\\\", \
\\\"paclet:workflow/ConfigureJuliaForExternalEvaluate\\\", \
\\\"paclet:workflow/ConfigureJuliaForExternalEvaluate\\\", \\\"Link\\\", \
List[\\\"HyperlinkActive\\\"], Rule[BaseStyle, List[\\\"Hyperlink\\\"]], \
Rule[Appearance, List[Small, \\\"Frameless\\\"]]], \\\"HyperlinkTemplate\\\"]\
\\).\"", 2, 258, 37, 16942536343560325236, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8781447868550787`*^9},
 CellLabel->
  "During evaluation of \
In[258]:=",ExpressionUUID->"82ce3426-68d0-4352-ab71-03e178160093"],

Cell[BoxData[
 TemplateBox[{
  "StartExternalSession", "noinstall", 
   "\"No valid installations for system Julia were found with the options \
specified.\"", 2, 258, 38, 16942536343560325236, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8781447869880342`*^9},
 CellLabel->
  "During evaluation of \
In[258]:=",ExpressionUUID->"4cb642a2-fcae-4d4e-aba8-969874512ad0"],

Cell[BoxData["$Failed"], "Output",
 CellChangeTimes->{3.8781447871450315`*^9},
 CellLabel->
  "Out[258]=",ExpressionUUID->"4e7e3740-fd73-4732-8e63-9324a68aeed1"]
}, Open  ]],

Cell[CellGroupData[{

Cell["1+1", "ExternalLanguage",
 CellChangeTimes->{{3.878144833150031*^9, 3.8781448338470325`*^9}},
 CellLabel->
  "In[259]:=",ExpressionUUID->"b7cfb83c-77a4-44c1-8d06-e51ec4935904"],

Cell[BoxData[
 TemplateBox[{
  "StartExternalSession", "help", 
   "\"For help configuring the Python evaluator, see \
\\!\\(\\*TemplateBox[List[\\\"\\\\\\\"Configure Python for ExternalEvaluate\\\
\\\\\"\\\", \\\"paclet:workflow/ConfigurePythonForExternalEvaluate\\\", \
\\\"paclet:workflow/ConfigurePythonForExternalEvaluate\\\", \\\"Link\\\", \
List[\\\"HyperlinkActive\\\"], Rule[BaseStyle, List[\\\"Hyperlink\\\"]], \
Rule[Appearance, List[Small, \\\"Frameless\\\"]]], \\\"HyperlinkTemplate\\\"]\
\\).\"", 2, 259, 39, 16942536343560325236, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8781448344810686`*^9},
 CellLabel->
  "During evaluation of \
In[259]:=",ExpressionUUID->"28007ef4-f4ab-4c95-b0de-f13d1c383b32"],

Cell[BoxData[
 TemplateBox[{
  "StartExternalSession", "noinstall", 
   "\"No valid installations for system Python were found with the options \
specified.\"", 2, 259, 40, 16942536343560325236, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8781448345930324`*^9},
 CellLabel->
  "During evaluation of \
In[259]:=",ExpressionUUID->"ec57e71f-e1c6-4a36-b957-1fad0425be04"],

Cell[BoxData["$Failed"], "Output",
 CellChangeTimes->{3.8781448348780355`*^9},
 CellLabel->
  "Out[259]=",ExpressionUUID->"27416bd4-70ab-460f-b195-79ff84c4aca0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindExternalEvaluators", "[", "\"\<Python\>\"", "]"}]], "Input",
 CellLabel->
  "In[260]:=",ExpressionUUID->"edc9e126-f3f1-4c1e-b8dd-53d85b16e92d"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> <|
      "6ed9b413-c14f-ec39-9690-dc4ec3661a8e" -> <|
        "System" -> "Python", "Version" -> "3.11.0", "Target" :> 
         "C:\\Users\\Hannah\\AppData\\Local\\Programs\\Python\\Python311\\\
python.exe", "Executable" :> 
         "C:\\Users\\Hannah\\AppData\\Local\\Programs\\Python\\Python311\\\
python.exe", "Registered" -> "MissingDependencies"|>, 
       "b0c0d5bf-3581-89b1-7888-2be236f45171" -> <|
        "System" -> "Python", "Version" -> "3.9.0", "Target" :> 
         "C:\\Users\\Hannah\\AppData\\Local\\Programs\\Python\\Python39\\\
python.exe", "Executable" :> 
         "C:\\Users\\Hannah\\AppData\\Local\\Programs\\Python\\Python39\\\
python.exe", "Registered" -> "MissingDependencies"|>|>, "AllowEmbedding" -> 
     True, "InitialShape" -> TypeSystem`PackageScope`HeaderShape[<|{All, 
          TypeSystem`PackageScope`KeyDummy[0]} -> 1, {All, "System"} -> 
        1, {All, "Version"} -> 1, {All, "Target"} -> 1, {All, "Executable"} -> 
        1, {All, "Registered"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[403.20000000000005`], 
          TypeSystem`PackageScope`Limited[
           
           TypeSystem`PackageScope`RowShape[<|
            "System" -> TypeSystem`PackageScope`AtomShape[67.2], "Version" -> 
             TypeSystem`PackageScope`AtomShape[67.2], "Target" -> 
             TypeSystem`PackageScope`AtomShape[560.], "Executable" -> 
             TypeSystem`PackageScope`AtomShape[560.], "Registered" -> 
             TypeSystem`PackageScope`AtomShape[212.8]|>], 
           DirectedInfinity[1], 5, {All}]]], 2, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Atom[String], 
       TypeSystem`Struct[{
        "System", "Version", "Target", "Executable", "Registered"}, {
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String]}], 2], 
     "Meta" -> <|HiddenItems -> {"Executable"}|>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, 
          TypeSystem`PackageScope`KeyDummy[0]} -> 1, {All, "System"} -> 
        1, {All, "Version"} -> 1, {All, "Target"} -> 1, {All, "Executable"} -> 
        1, {All, "Registered"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[403.20000000000005`], 
          TypeSystem`PackageScope`Limited[
           
           TypeSystem`PackageScope`RowShape[<|
            "System" -> TypeSystem`PackageScope`AtomShape[67.2], "Version" -> 
             TypeSystem`PackageScope`AtomShape[67.2], "Target" -> 
             TypeSystem`PackageScope`AtomShape[560.], "Executable" -> 
             TypeSystem`PackageScope`AtomShape[560.], "Registered" -> 
             TypeSystem`PackageScope`AtomShape[212.8]|>], 
           DirectedInfinity[1], 5, {All}]]], 2, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Assoc[
       TypeSystem`Atom[String], 
       TypeSystem`Struct[{
        "System", "Version", "Target", "Executable", "Registered"}, {
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String]}], 2], "Path" -> {}, "DisplayedRowCount" -> 
     2, "DisplayedColumnCount" -> 5, "DataRowCount" -> 2, "DataColumnCount" -> 
     5, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> <|
      "6ed9b413-c14f-ec39-9690-dc4ec3661a8e" -> <|
        "System" -> False, "Version" -> False, "Target" -> False, 
         "Executable" -> True, "Registered" -> False|>, 
       "b0c0d5bf-3581-89b1-7888-2be236f45171" -> <|
        "System" -> False, "Version" -> False, "Target" -> False, 
         "Executable" -> True, "Registered" -> False|>|>, "UpdateType" -> 1|>,
     TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               Mouseover[
                
                Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]], 
                Graphics[{
                  GrayLevel[0.6], 
                  
                  Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
                    Rational[-1, 2]}}]}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, Keys}, "KeyDummy", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["System", 
                  Style[
                  "System", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "System"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "System"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Version", 
                  Style[
                  "Version", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Version"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Version"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Target", 
                  Style[
                  "Target", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Target"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Target"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Annotation[
              Pane[
               Button[
                Tooltip[
                 Mouseover[
                  Style["\[ThinSpace]+\[ThinSpace]", 
                   GrayLevel[0.6]], 
                  Style["\[ThinSpace]+\[ThinSpace]", 
                   RGBColor[
                   0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["Executable", 
                    Style[
                    "Executable", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "Executable"}, 1]]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   All, "Executable"}, "ColumnHeader", True], "Mouse"]], 
                TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                 All, "Executable"}, "remove"], Appearance -> None, BaseStyle -> 
                None], ImageSize -> {{5, Full}, Automatic}, 
               ImageMargins -> {{3, 2}, {0, 0}}], 
              TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               TypeSystem`NestedGrid`PackagePrivate`localHold[
               TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
               All, "Executable"}, "ColumnHeader", False], "Mouse"], 
             Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Registered", 
                  Style[
                  "Registered", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Registered"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Registered"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["6ed9b413-c14f-ec39-9690-dc4ec3661a8e", 
                  Style[
                  "6ed9b413-c14f-ec39-9690-dc4ec3661a8e", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["6ed9b413-c14f-ec39-9690-dc4ec3661a8e"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["6ed9b413-c14f-ec39-9690-dc4ec3661a8e"]}, "RowHeader", 
                False], "Mouse"], 
              ImageSize -> {{403.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["Python", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["6ed9b413-c14f-ec39-9690-dc4ec3661a8e"], 
                 Key["System"]}, "Item", False], "Mouse"], 
              ImageSize -> {{67.2, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["3.11.0", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["6ed9b413-c14f-ec39-9690-dc4ec3661a8e"], 
                 Key["Version"]}, "Item", False], "Mouse"], 
              ImageSize -> {{67.2, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
              "C:\\Users\\Hannah\\AppData\\Local\\Programs\\Python\\Python311\
\\python.exe", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["6ed9b413-c14f-ec39-9690-dc4ec3661a8e"], 
                 Key["Target"]}, "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Annotation[
              Pane[
               Button[
                Tooltip[
                 Mouseover[
                  Style[
                  "\[ThinSpace]\[ThinSpace]\[Bullet]\[ThinSpace]\[ThinSpace]", 
                   GrayLevel[0.6]], 
                  Style["\[ThinSpace]+\[ThinSpace]", 
                   RGBColor[
                   0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                 Annotation[
                 "C:\\Users\\Hannah\\AppData\\Local\\Programs\\Python\\\
Python311\\python.exe", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["6ed9b413-c14f-ec39-9690-dc4ec3661a8e"], 
                    Key["Executable"]}, "Item", False], "Mouse"]], 
                TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  Key["6ed9b413-c14f-ec39-9690-dc4ec3661a8e"], 
                  Key["Executable"]}, "remove"], Appearance -> None, 
                BaseStyle -> None], ImageSize -> {{5, Full}, Automatic}, 
               ImageMargins -> {{3, 2}, {0, 0}}], 
              TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               TypeSystem`NestedGrid`PackagePrivate`localHold[
               TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                Key["6ed9b413-c14f-ec39-9690-dc4ec3661a8e"], 
                Key["Executable"]}, "Item", False], "Mouse"], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["MissingDependencies", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["6ed9b413-c14f-ec39-9690-dc4ec3661a8e"], 
                 Key["Registered"]}, "Item", False], "Mouse"], 
              ImageSize -> {{212.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["b0c0d5bf-3581-89b1-7888-2be236f45171", 
                  Style[
                  "b0c0d5bf-3581-89b1-7888-2be236f45171", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["b0c0d5bf-3581-89b1-7888-2be236f45171"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["b0c0d5bf-3581-89b1-7888-2be236f45171"]}, "RowHeader", 
                False], "Mouse"], 
              ImageSize -> {{403.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["Python", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["b0c0d5bf-3581-89b1-7888-2be236f45171"], 
                 Key["System"]}, "Item", False], "Mouse"], 
              ImageSize -> {{67.2, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["3.9.0", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["b0c0d5bf-3581-89b1-7888-2be236f45171"], 
                 Key["Version"]}, "Item", False], "Mouse"], 
              ImageSize -> {{67.2, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
              "C:\\Users\\Hannah\\AppData\\Local\\Programs\\Python\\Python39\\\
python.exe", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["b0c0d5bf-3581-89b1-7888-2be236f45171"], 
                 Key["Target"]}, "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Annotation[
              Pane[
               Button[
                Tooltip[
                 Mouseover[
                  Style[
                  "\[ThinSpace]\[ThinSpace]\[Bullet]\[ThinSpace]\[ThinSpace]", 
                   GrayLevel[0.6]], 
                  Style["\[ThinSpace]+\[ThinSpace]", 
                   RGBColor[
                   0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                 Annotation[
                 "C:\\Users\\Hannah\\AppData\\Local\\Programs\\Python\\\
Python39\\python.exe", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["b0c0d5bf-3581-89b1-7888-2be236f45171"], 
                    Key["Executable"]}, "Item", False], "Mouse"]], 
                TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  Key["b0c0d5bf-3581-89b1-7888-2be236f45171"], 
                  Key["Executable"]}, "remove"], Appearance -> None, 
                BaseStyle -> None], ImageSize -> {{5, Full}, Automatic}, 
               ImageMargins -> {{3, 2}, {0, 0}}], 
              TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               TypeSystem`NestedGrid`PackagePrivate`localHold[
               TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                Key["b0c0d5bf-3581-89b1-7888-2be236f45171"], 
                Key["Executable"]}, "Item", False], "Mouse"], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["MissingDependencies", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["b0c0d5bf-3581-89b1-7888-2be236f45171"], 
                 Key["Registered"]}, "Item", False], "Mouse"], 
              ImageSize -> {{212.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{1369., {46.13403328722343, 51.86596671277657}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{1369., {46.13403328722343, 51.86596671277657}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.878144909935032*^9},
 CellLabel->
  "Out[260]=",ExpressionUUID->"5fd0864a-69fd-4640-aa3a-f9d6b12e954e"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"PersistResourceFunction", "[", "\"\<ArithmeticD\>\"", 
  "]"}]], "Input",
 CellChangeTimes->{{3.878145254991065*^9, 
  3.8781452954304347`*^9}},ExpressionUUID->"4f59d018-b1f8-43cd-aaec-\
07e10ceae00a"]
},
WindowSize->{574.8, 574.8},
WindowMargins->{{Automatic, -4.7999999999999545`}, {Automatic, 0}},
FrontEndVersion->"13.2 for Microsoft Windows (64-bit) (November 18, 2022)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"8542d755-3211-46e9-9d01-3993c1dc9168"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 170, 3, 35, "Text",ExpressionUUID->"2a19d277-a4e8-4913-8bc5-1693d5b21faa"],
Cell[731, 25, 466, 15, 54, "Input",ExpressionUUID->"5dcf285c-6f59-483f-88b7-78e7a6a2b0eb"],
Cell[1200, 42, 291, 8, 54, "Input",ExpressionUUID->"2fd291bb-01a3-4512-9cfa-f3a5efd8b07c"],
Cell[1494, 52, 280, 6, 58, "Text",ExpressionUUID->"bff04963-cb96-4826-b6c9-5d55e110c159"],
Cell[1777, 60, 269, 6, 58, "Text",ExpressionUUID->"bb6a444e-8228-4a49-abd1-bd6410d65b0c"],
Cell[2049, 68, 179, 3, 35, "Text",ExpressionUUID->"3fa35f6f-30c4-4d95-9816-97c66dc55ea8"],
Cell[CellGroupData[{
Cell[2253, 75, 565, 18, 55, "Input",ExpressionUUID->"ac658b42-1c9d-4ccc-b2f5-95e8353ac8e7"],
Cell[2821, 95, 414, 11, 32, "Output",ExpressionUUID->"517431f6-3b4b-43a9-8b3b-074ae676749b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3272, 111, 686, 20, 67, "Input",ExpressionUUID->"fff2c353-ccc9-4f62-b442-09b3e2f67a6f"],
Cell[3961, 133, 190, 3, 47, "Output",ExpressionUUID->"c320f9a7-88ff-4d36-9c0f-99dcddb49f43"]
}, Open  ]],
Cell[4166, 139, 167, 3, 35, "Text",ExpressionUUID->"f0273b50-bd93-477c-a90b-817588d6a0d3"],
Cell[CellGroupData[{
Cell[4358, 146, 813, 25, 55, "Input",ExpressionUUID->"eefc507d-c81e-488a-96b9-c3c5cfd21cc3"],
Cell[5174, 173, 214, 5, 32, "Output",ExpressionUUID->"bc1b3936-8719-4bbc-ae3a-a33251ef33dc"]
}, Open  ]],
Cell[5403, 181, 233, 6, 58, "Text",ExpressionUUID->"36990092-8644-40f5-9ef3-7841d65782b5"],
Cell[5639, 189, 252, 6, 58, "Text",ExpressionUUID->"601c4f0b-658a-49c7-8468-d69dc0c3699d"],
Cell[5894, 197, 251, 6, 58, "Text",ExpressionUUID->"0caa6331-a2cf-468e-bd09-206f1611f8fb"],
Cell[6148, 205, 301, 9, 117, "Program",ExpressionUUID->"c6446336-1ccc-4110-bdf4-a336bdd8cdf7"],
Cell[6452, 216, 164, 3, 35, "Text",ExpressionUUID->"43312c76-81f2-455a-981e-8f558a85e567"],
Cell[6619, 221, 162, 3, 49, "Program",ExpressionUUID->"4df1bc5c-8483-446b-9473-44280961bbd1"],
Cell[6784, 226, 162, 3, 35, "Text",ExpressionUUID->"37bbbafe-f4ad-4e0a-9260-ff5ef446e7a6"],
Cell[6949, 231, 161, 3, 49, "Program",ExpressionUUID->"05cab8ec-4b83-4656-91e7-aa533c6afabf"],
Cell[7113, 236, 169, 3, 35, "Text",ExpressionUUID->"de34a61d-4778-4891-afb5-e5af87e1c055"],
Cell[7285, 241, 218, 4, 49, "Program",ExpressionUUID->"3711dbc6-1b57-4b1e-9700-d0fb94674ebd"],
Cell[7506, 247, 178, 3, 35, "Text",ExpressionUUID->"f160b36e-a6fb-4f4f-903c-4fc14a0050de"],
Cell[7687, 252, 417, 12, 51, "Input",ExpressionUUID->"442aa82a-111a-4818-8b7e-67b44d6211a4"],
Cell[CellGroupData[{
Cell[8129, 268, 797, 30, 458, "ExternalLanguage",ExpressionUUID->"efa3e070-4766-47dc-96a4-3f9c85ef5a75"],
Cell[8929, 300, 743, 15, 47, "Message",ExpressionUUID->"82ce3426-68d0-4352-ab71-03e178160093"],
Cell[9675, 317, 394, 9, 46, "Message",ExpressionUUID->"4cb642a2-fcae-4d4e-aba8-969874512ad0"],
Cell[10072, 328, 161, 3, 32, "Output",ExpressionUUID->"4e7e3740-fd73-4732-8e63-9324a68aeed1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[10270, 336, 182, 3, 50, "ExternalLanguage",ExpressionUUID->"b7cfb83c-77a4-44c1-8d06-e51ec4935904"],
Cell[10455, 341, 745, 14, 47, "Message",ExpressionUUID->"28007ef4-f4ab-4c95-b0de-f13d1c383b32"],
Cell[11203, 357, 395, 9, 46, "Message",ExpressionUUID->"ec57e71f-e1c6-4a36-b957-1fad0425be04"],
Cell[11601, 368, 161, 3, 32, "Output",ExpressionUUID->"27416bd4-70ab-460f-b195-79ff84c4aca0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[11799, 376, 171, 3, 28, "Input",ExpressionUUID->"edc9e126-f3f1-4c1e-b8dd-53d85b16e92d"],
Cell[11973, 381, 46012, 835, 117, "Output",ExpressionUUID->"5fd0864a-69fd-4640-aa3a-f9d6b12e954e"]
}, Open  ]],
Cell[58000, 1219, 225, 5, 28, "Input",ExpressionUUID->"4f59d018-b1f8-43cd-aaec-07e10ceae00a"]
}
]
*)

